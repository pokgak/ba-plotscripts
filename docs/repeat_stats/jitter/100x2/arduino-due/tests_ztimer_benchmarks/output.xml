<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:05:00.687" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.295" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:05:04.303" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:05:05.420" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:05:04.293" endtime="20201116 13:05:05.422"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.427" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:05:05.424" endtime="20201116 13:05:05.428"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.292" endtime="20201116 13:05:05.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:05.434" endtime="20201116 13:05:05.620"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.431" endtime="20201116 13:05:05.621"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:05.634" endtime="20201116 13:05:08.657"></status>
</kw>
<msg timestamp="20201116 13:05:08.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:05.632" endtime="20201116 13:05:08.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:08.664" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:08.660" endtime="20201116 13:05:08.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:08.671" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:08.666" endtime="20201116 13:05:08.671"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:05.630" endtime="20201116 13:05:08.673"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:05.627" endtime="20201116 13:05:08.674"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.626" endtime="20201116 13:05:08.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:08.684" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:08.683" endtime="20201116 13:05:08.685"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.677" endtime="20201116 13:05:08.686"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.625" endtime="20201116 13:05:08.686"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.625" endtime="20201116 13:05:08.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:08.688" endtime="20201116 13:05:08.691"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.623" endtime="20201116 13:05:08.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:08.694" endtime="20201116 13:05:08.698"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.622" endtime="20201116 13:05:08.699"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.289" endtime="20201116 13:05:08.700"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:08.715" endtime="20201116 13:05:08.737"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.712" endtime="20201116 13:05:08.739"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:08.771" endtime="20201116 13:05:11.794"></status>
</kw>
<msg timestamp="20201116 13:05:11.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:08.765" endtime="20201116 13:05:11.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:11.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:11.798" endtime="20201116 13:05:11.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:11.807" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:11.803" endtime="20201116 13:05:11.808"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:08.760" endtime="20201116 13:05:11.809"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:08.754" endtime="20201116 13:05:11.811"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.750" endtime="20201116 13:05:11.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:11.819" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:11.818" endtime="20201116 13:05:11.820"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:11.813" endtime="20201116 13:05:11.821"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.748" endtime="20201116 13:05:11.821"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.747" endtime="20201116 13:05:11.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:11.823" endtime="20201116 13:05:11.827"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.744" endtime="20201116 13:05:11.828"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.740" endtime="20201116 13:05:11.829"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.709" endtime="20201116 13:05:11.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:11.847" endtime="20201116 13:05:11.862"></status>
</kw>
<msg timestamp="20201116 13:05:11.863" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:11.843" endtime="20201116 13:05:11.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:11.868" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:11.865" endtime="20201116 13:05:11.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:11.870" endtime="20201116 13:05:11.874"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:11.838" endtime="20201116 13:05:11.875"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:11.832" endtime="20201116 13:05:11.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:11.887" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:05:11.885" endtime="20201116 13:05:11.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:11.892" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201116 13:05:11.889" endtime="20201116 13:05:11.892"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:11.878" endtime="20201116 13:05:11.893"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:05:08.701" endtime="20201116 13:05:11.895" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:05:00.801" endtime="20201116 13:05:11.899"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:05:11.954" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:05:11.962" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:05:13.036" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:05:11.953" endtime="20201116 13:05:13.037"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:05:13.039" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:05:13.038" endtime="20201116 13:05:13.040"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:11.951" endtime="20201116 13:05:13.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:13.042" endtime="20201116 13:05:13.265"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.041" endtime="20201116 13:05:13.266"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:13.278" endtime="20201116 13:05:16.301"></status>
</kw>
<msg timestamp="20201116 13:05:16.302" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:13.277" endtime="20201116 13:05:16.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:16.308" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:16.305" endtime="20201116 13:05:16.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:16.315" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:16.310" endtime="20201116 13:05:16.315"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:13.274" endtime="20201116 13:05:16.317"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:13.272" endtime="20201116 13:05:16.318"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.271" endtime="20201116 13:05:16.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:16.327" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:16.325" endtime="20201116 13:05:16.328"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.321" endtime="20201116 13:05:16.328"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.270" endtime="20201116 13:05:16.329"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.269" endtime="20201116 13:05:16.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:16.331" endtime="20201116 13:05:16.334"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.268" endtime="20201116 13:05:16.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:16.337" endtime="20201116 13:05:16.340"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.267" endtime="20201116 13:05:16.341"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:11.950" endtime="20201116 13:05:16.342"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:16.353" endtime="20201116 13:05:16.374"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.351" endtime="20201116 13:05:16.374"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:16.388" endtime="20201116 13:05:19.410"></status>
</kw>
<msg timestamp="20201116 13:05:19.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:16.386" endtime="20201116 13:05:19.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:19.415" endtime="20201116 13:05:19.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.425" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:19.420" endtime="20201116 13:05:19.425"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:16.384" endtime="20201116 13:05:19.427"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:16.381" endtime="20201116 13:05:19.428"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.380" endtime="20201116 13:05:19.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:19.437" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:19.435" endtime="20201116 13:05:19.438"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.430" endtime="20201116 13:05:19.438"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.379" endtime="20201116 13:05:19.439"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.378" endtime="20201116 13:05:19.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:19.441" endtime="20201116 13:05:19.444"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.377" endtime="20201116 13:05:19.445"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.375" endtime="20201116 13:05:19.446"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:16.349" endtime="20201116 13:05:19.447"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:19.457" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:19.477" endtime="20201116 13:05:21.574"></status>
</kw>
<msg timestamp="20201116 13:05:21.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6081091, 'wakeups': [6091096, 6101098, 6111098, 6121098, 6131098, 6141...</msg>
<status status="PASS" starttime="20201116 13:05:19.471" endtime="20201116 13:05:21.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.577" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6081091, 'wakeups': [6091096, 6101098, 6111098, 6121098, 6131098, 6141...</msg>
<status status="PASS" starttime="20201116 13:05:21.575" endtime="20201116 13:05:21.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:21.578" endtime="20201116 13:05:21.580"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.465" endtime="20201116 13:05:21.581"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.461" endtime="20201116 13:05:21.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:21.584" level="INFO">${RESULT} = {'wakeups': [6091096, 6101098, 6111098, 6121098, 6131098, 6141098, 6151098, 6161098, 6171098, 6181098, 6191098, 6201098, 6211098, 6221098, 6231098, 6241098, 6251098, 6261098, 6271098, 6281098, 6291098...</msg>
<status status="PASS" starttime="20201116 13:05:21.582" endtime="20201116 13:05:21.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.588" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:21.587" endtime="20201116 13:05:21.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.590" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:21.589" endtime="20201116 13:05:21.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.585" endtime="20201116 13:05:21.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.595" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:21.594" endtime="20201116 13:05:21.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.598" level="INFO">VALUE: 6081091</msg>
<status status="PASS" starttime="20201116 13:05:21.597" endtime="20201116 13:05:21.598"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.592" endtime="20201116 13:05:21.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.603" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:21.602" endtime="20201116 13:05:21.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.605" level="INFO">VALUE: [6091096, 6101098, 6111098, 6121098, 6131098, 6141098, 6151098, 6161098, 6171098, 6181098, 6191098, 6201098, 6211098, 6221098, 6231098, 6241098, 6251098, 6261098, 6271098, 6281098, 6291098, 6301098, 6311098, 6321098, 6331098, 6341098, 6351098, 6361098, 6371098, 6381098, 6391098, 6401098, 6411098, 6421098, 6431098, 6441098, 6451098, 6461098, 6471098, 6481098, 6491098, 6501098, 6511098, 6521098, 6531098, 6541098, 6551098, 6561098, 6571098, 6581098, 6591098, 6601098, 6611098, 6621098, 6631098, 6641098, 6651098, 6661098, 6671098, 6681098, 6691098, 6701098, 6711098, 6721098, 6731098, 6741098, 6751098, 6761098, 6771098, 6781098, 6791098, 6801098, 6811098, 6821098, 6831098, 6841098, 6851098, 6861098, 6871098, 6881098, 6891098, 6901098, 6911098, 6921098, 6931098, 6941098, 6951098, 6961098, 6971098, 6981098, 6991098, 7001098, 7011098, 7021098, 7031098, 7041098, 7051098, 7061098, 7071098, 7081098]</msg>
<status status="PASS" starttime="20201116 13:05:21.604" endtime="20201116 13:05:21.606"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.599" endtime="20201116 13:05:21.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:21.613" endtime="20201116 13:05:21.920"></status>
</kw>
<msg timestamp="20201116 13:05:21.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114670083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.124677222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:21.611" endtime="20201116 13:05:21.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114670083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.124677222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:21.924" endtime="20201116 13:05:21.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:21.932" endtime="20201116 13:05:21.933"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.609" endtime="20201116 13:05:21.934"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.607" endtime="20201116 13:05:21.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:21.958" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:21.935" endtime="20201116 13:05:21.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.962" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:21.961" endtime="20201116 13:05:21.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.965" level="INFO">VALUE: 3.114670083</msg>
<status status="PASS" starttime="20201116 13:05:21.964" endtime="20201116 13:05:21.965"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.959" endtime="20201116 13:05:21.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.970" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:21.969" endtime="20201116 13:05:21.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:21.972" level="INFO">VALUE: [3.124677222, 3.134680389, 3.1446815, 3.154682667, 3.164683778, 3.174684958, 3.184686056, 3.194687236, 3.204688347, 3.214689514, 3.224690625, 3.234691778, 3.244692889, 3.254694056, 3.264695167, 3.274696347, 3.284697458, 3.294698625, 3.304699722, 3.314700944, 3.324702014, 3.334703181, 3.344704306, 3.354705444, 3.364706556, 3.37470775, 3.384708833, 3.394710042, 3.404711111, 3.414712292, 3.424713389, 3.434714556, 3.444715681, 3.454716847, 3.464717958, 3.474719153, 3.484720222, 3.494721403, 3.5047225, 3.514723667, 3.524724778, 3.534725931, 3.544727069, 3.554728208, 3.564729403, 3.574730486, 3.584731611, 3.594732764, 3.604733889, 3.614735056, 3.624736167, 3.634737361, 3.644738458, 3.654739597, 3.664740736, 3.674741958, 3.684743014, 3.694744153, 3.704745292, 3.714746444, 3.724747556, 3.734748722, 3.744749833, 3.754751042, 3.764752139, 3.774753264, 3.784754431, 3.794755542, 3.804756667, 3.814757875, 3.824758958, 3.834760097, 3.844761222, 3.854762375, 3.864763514, 3.874764667, 3.884765778, 3.894766944, 3.904768056, 3.914769208, 3.924770333, 3.934771486, 3.944772611, 3.954773792, 3.964774917, 3.974776056, 3.984777167, 3.994778319, 4.004779444, 4.014780667, 4.02478175, 4.034782875, 4.044784014, 4.054785153, 4.064786278, 4.074787431, 4.084788569, 4.094789708, 4.104790833, 4.114792028] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:21.971" endtime="20201116 13:05:21.972"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.966" endtime="20201116 13:05:21.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:21.975" endtime="20201116 13:05:21.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:21.979" endtime="20201116 13:05:21.998"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.977" endtime="20201116 13:05:21.999"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:21.973" endtime="20201116 13:05:21.999"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.458" endtime="20201116 13:05:22.000"></status>
</kw>
<msg timestamp="20201116 13:05:22.000" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.008" endtime="20201116 13:05:24.115"></status>
</kw>
<msg timestamp="20201116 13:05:24.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8609697, 'wakeups': [8619702, 8629704, 8639704, 8649704, 8659704, 8669...</msg>
<status status="PASS" starttime="20201116 13:05:22.007" endtime="20201116 13:05:24.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8609697, 'wakeups': [8619702, 8629704, 8639704, 8649704, 8659704, 8669...</msg>
<status status="PASS" starttime="20201116 13:05:24.116" endtime="20201116 13:05:24.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:24.119" endtime="20201116 13:05:24.121"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.004" endtime="20201116 13:05:24.122"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.002" endtime="20201116 13:05:24.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:24.125" level="INFO">${RESULT} = {'wakeups': [8619702, 8629704, 8639704, 8649704, 8659704, 8669704, 8679704, 8689704, 8699704, 8709704, 8719704, 8729704, 8739704, 8749704, 8759704, 8769704, 8779704, 8789704, 8799704, 8809704, 8819704...</msg>
<status status="PASS" starttime="20201116 13:05:24.123" endtime="20201116 13:05:24.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.129" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:24.128" endtime="20201116 13:05:24.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.131" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:24.130" endtime="20201116 13:05:24.131"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.125" endtime="20201116 13:05:24.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.137" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:24.136" endtime="20201116 13:05:24.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.139" level="INFO">VALUE: 8609697</msg>
<status status="PASS" starttime="20201116 13:05:24.138" endtime="20201116 13:05:24.139"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.132" endtime="20201116 13:05:24.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.143" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:24.142" endtime="20201116 13:05:24.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.146" level="INFO">VALUE: [8619702, 8629704, 8639704, 8649704, 8659704, 8669704, 8679704, 8689704, 8699704, 8709704, 8719704, 8729704, 8739704, 8749704, 8759704, 8769704, 8779704, 8789704, 8799704, 8809704, 8819704, 8829704, 8839704, 8849704, 8859704, 8869704, 8879704, 8889704, 8899704, 8909704, 8919704, 8929704, 8939704, 8949704, 8959704, 8969704, 8979704, 8989704, 8999704, 9009704, 9019704, 9029704, 9039704, 9049704, 9059704, 9069704, 9079704, 9089704, 9099704, 9109704, 9119704, 9129704, 9139704, 9149704, 9159704, 9169704, 9179704, 9189704, 9199704, 9209704, 9219704, 9229704, 9239704, 9249704, 9259704, 9269704, 9279704, 9289704, 9299704, 9309704, 9319704, 9329704, 9339704, 9349704, 9359704, 9369704, 9379704, 9389704, 9399704, 9409704, 9419704, 9429704, 9439704, 9449704, 9459704, 9469704, 9479704, 9489704, 9499704, 9509704, 9519704, 9529704, 9539704, 9549704, 9559704, 9569704, 9579704, 9589704, 9599704, 9609704]</msg>
<status status="PASS" starttime="20201116 13:05:24.145" endtime="20201116 13:05:24.146"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.140" endtime="20201116 13:05:24.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:24.153" endtime="20201116 13:05:24.443"></status>
</kw>
<msg timestamp="20201116 13:05:24.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028405986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:24.151" endtime="20201116 13:05:24.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028405986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:24.447" endtime="20201116 13:05:24.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:24.455" endtime="20201116 13:05:24.456"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.149" endtime="20201116 13:05:24.457"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.147" endtime="20201116 13:05:24.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:24.481" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:24.458" endtime="20201116 13:05:24.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.486" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:24.485" endtime="20201116 13:05:24.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.488" level="INFO">VALUE: 0.018398486</msg>
<status status="PASS" starttime="20201116 13:05:24.487" endtime="20201116 13:05:24.488"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.482" endtime="20201116 13:05:24.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.494" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:24.493" endtime="20201116 13:05:24.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.496" level="INFO">VALUE: [0.028405986, 0.038409139, 0.048410264, 0.058411431, 0.068412542, 0.078413708, 0.088414819, 0.098416028, 0.108417111, 0.118418278, 0.128419389, 0.138420556, 0.148421681, 0.158422847, 0.168423972, 0.178425139, 0.188426264, 0.198427403, 0.208428528, 0.218429694, 0.228430806, 0.238431972, 0.248433097, 0.258434264, 0.268435389, 0.278436542, 0.288437667, 0.298438833, 0.308439972, 0.318441125, 0.32844225, 0.338443403, 0.348444528, 0.358445694, 0.368446806, 0.378447972, 0.388449097, 0.398450278, 0.408451389, 0.418452542, 0.428453667, 0.438454833, 0.448455972, 0.458457125, 0.468458236, 0.478459417, 0.488460528, 0.498461694, 0.508462806, 0.518463972, 0.528465111, 0.538466264, 0.548467375, 0.558468556, 0.568469667, 0.578470847, 0.588471958, 0.598473139, 0.608474236, 0.618475403, 0.628476542, 0.638477694, 0.648478806, 0.658479986, 0.668481097, 0.678482264, 0.688483444, 0.698484556, 0.708485667, 0.718486833, 0.728487972, 0.738489167, 0.74849025, 0.758491417, 0.768492528, 0.778493694, 0.788494819, 0.798495986, 0.808497097, 0.818498264, 0.828499403, 0.838500569, 0.848501708, 0.858502861, 0.868503958, 0.878505125, 0.888506306, 0.898507472, 0.908508528, 0.918509694, 0.928510819, 0.938511986, 0.948513181, 0.958514278, 0.968515375, 0.978516542, 0.988517667, 0.998518833, 1.008519931, 1.018521083] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:24.495" endtime="20201116 13:05:24.496"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.489" endtime="20201116 13:05:24.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:24.499" endtime="20201116 13:05:24.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:24.502" endtime="20201116 13:05:24.522"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.501" endtime="20201116 13:05:24.522"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.497" endtime="20201116 13:05:24.523"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.001" endtime="20201116 13:05:24.523"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.453" endtime="20201116 13:05:24.523"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.450" endtime="20201116 13:05:24.523"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:24.526" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:24.534" endtime="20201116 13:05:26.660"></status>
</kw>
<msg timestamp="20201116 13:05:26.661" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11135808, 'wakeups': [11145820, 11155819, 11165819, 11175819, 11185819...</msg>
<status status="PASS" starttime="20201116 13:05:24.533" endtime="20201116 13:05:26.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.668" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11135808, 'wakeups': [11145820, 11155819, 11165819, 11175819, 11185819...</msg>
<status status="PASS" starttime="20201116 13:05:26.664" endtime="20201116 13:05:26.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:26.670" endtime="20201116 13:05:26.673"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.530" endtime="20201116 13:05:26.675"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.528" endtime="20201116 13:05:26.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:26.681" level="INFO">${RESULT} = {'wakeups': [11145820, 11155819, 11165819, 11175819, 11185819, 11195819, 11205819, 11215819, 11225819, 11235819, 11245819, 11255819, 11265819, 11275819, 11285819, 11295819, 11305819, 11315819, 1132581...</msg>
<status status="PASS" starttime="20201116 13:05:26.677" endtime="20201116 13:05:26.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.686" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:26.685" endtime="20201116 13:05:26.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.688" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:26.687" endtime="20201116 13:05:26.688"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:26.682" endtime="20201116 13:05:26.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.693" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:26.692" endtime="20201116 13:05:26.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.695" level="INFO">VALUE: 11135808</msg>
<status status="PASS" starttime="20201116 13:05:26.694" endtime="20201116 13:05:26.695"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:26.689" endtime="20201116 13:05:26.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.699" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:26.698" endtime="20201116 13:05:26.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:26.702" level="INFO">VALUE: [11145820, 11155819, 11165819, 11175819, 11185819, 11195819, 11205819, 11215819, 11225819, 11235819, 11245819, 11255819, 11265819, 11275819, 11285819, 11295819, 11305819, 11315819, 11325819, 11335819, 11345819, 11355819, 11365819, 11375819, 11385819, 11395819, 11405819, 11415819, 11425819, 11435819, 11445819, 11455819, 11465819, 11475819, 11485819, 11495819, 11505819, 11515819, 11525819, 11535819, 11545819, 11555819, 11565819, 11575819, 11585819, 11595819, 11605819, 11615819, 11625819, 11635819, 11645819, 11655819, 11665819, 11675819, 11685819, 11695819, 11705819, 11715819, 11725819, 11735819, 11745819, 11755819, 11765819, 11775819, 11785819, 11795819, 11805819, 11815819, 11825819, 11835819, 11845819, 11855819, 11865819, 11875819, 11885819, 11895819, 11905819, 11915819, 11925819, 11935819, 11945819, 11955819, 11965819, 11975819, 11985819, 11995819, 12005819, 12015819, 12025819, 12035819, 12045819, 12055819, 12065819, 12075819, 12085819, 12095819, 12105819, 12115819, 12125819, 12135819]</msg>
<status status="PASS" starttime="20201116 13:05:26.701" endtime="20201116 13:05:26.702"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:26.696" endtime="20201116 13:05:26.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:26.710" endtime="20201116 13:05:27.001"></status>
</kw>
<msg timestamp="20201116 13:05:27.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031193556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:26.708" endtime="20201116 13:05:27.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031193556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:27.005" endtime="20201116 13:05:27.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.012" endtime="20201116 13:05:27.014"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:26.705" endtime="20201116 13:05:27.015"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:26.703" endtime="20201116 13:05:27.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:27.038" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:27.016" endtime="20201116 13:05:27.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.043" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:27.042" endtime="20201116 13:05:27.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.045" level="INFO">VALUE: 0.021179931</msg>
<status status="PASS" starttime="20201116 13:05:27.044" endtime="20201116 13:05:27.045"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.040" endtime="20201116 13:05:27.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.050" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:27.049" endtime="20201116 13:05:27.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.053" level="INFO">VALUE: [0.031193556, 0.041193722, 0.051194847, 0.061196014, 0.071197125, 0.081198347, 0.091199403, 0.101200569, 0.111201694, 0.121202875, 0.131203972, 0.141205139, 0.151206333, 0.161207431, 0.171208542, 0.181209708, 0.191210847, 0.201212, 0.211213111, 0.221214292, 0.231215403, 0.241216583, 0.251217681, 0.261218847, 0.271220056, 0.281221139, 0.291222264, 0.301223431, 0.311224542, 0.321225722, 0.331226819, 0.341227986, 0.351229111, 0.361230319, 0.371231403, 0.381232569, 0.391233681, 0.401234861, 0.411235972, 0.421237181, 0.431238264, 0.441239417, 0.451240542, 0.461241708, 0.471242833, 0.481244, 0.491245153, 0.501246292, 0.511247403, 0.521248569, 0.531249694, 0.541250847, 0.551251972, 0.561253139, 0.571254264, 0.581255444, 0.591256556, 0.601257708, 0.611258833, 0.62126, 0.631261125, 0.641262278, 0.651263403, 0.661264569, 0.671265708, 0.681266861, 0.691267986, 0.701269153, 0.711270278, 0.721271444, 0.731272542, 0.741273708, 0.751274833, 0.761276, 0.771277125, 0.781278292, 0.791279403, 0.801280569, 0.811281694, 0.821282875, 0.831283972, 0.841285139, 0.851286278, 0.861287431, 0.871288556, 0.881289736, 0.891290833, 0.901292014, 0.911293125, 0.921294292, 0.931295417, 0.941296556, 0.951297708, 0.961298847, 0.971299958, 0.981301111, 0.991302222, 1.001303375, 1.011304514, 1.021305681] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:27.052" endtime="20201116 13:05:27.053"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.047" endtime="20201116 13:05:27.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.056" endtime="20201116 13:05:27.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:27.059" endtime="20201116 13:05:27.078"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.058" endtime="20201116 13:05:27.079"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.054" endtime="20201116 13:05:27.080"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.527" endtime="20201116 13:05:27.080"></status>
</kw>
<msg timestamp="20201116 13:05:27.080" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.089" endtime="20201116 13:05:29.189"></status>
</kw>
<msg timestamp="20201116 13:05:29.189" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13690342, 'wakeups': [13700354, 13710353, 13720353, 13730353, 13740353...</msg>
<status status="PASS" starttime="20201116 13:05:27.087" endtime="20201116 13:05:29.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13690342, 'wakeups': [13700354, 13710353, 13720353, 13730353, 13740353...</msg>
<status status="PASS" starttime="20201116 13:05:29.190" endtime="20201116 13:05:29.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:29.193" endtime="20201116 13:05:29.195"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.084" endtime="20201116 13:05:29.195"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.082" endtime="20201116 13:05:29.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:29.199" level="INFO">${RESULT} = {'wakeups': [13700354, 13710353, 13720353, 13730353, 13740353, 13750353, 13760353, 13770353, 13780353, 13790353, 13800353, 13810353, 13820353, 13830353, 13840353, 13850353, 13860353, 13870353, 1388035...</msg>
<status status="PASS" starttime="20201116 13:05:29.197" endtime="20201116 13:05:29.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.203" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:29.202" endtime="20201116 13:05:29.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.205" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:29.204" endtime="20201116 13:05:29.205"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.199" endtime="20201116 13:05:29.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.210" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:29.209" endtime="20201116 13:05:29.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.212" level="INFO">VALUE: 13690342</msg>
<status status="PASS" starttime="20201116 13:05:29.211" endtime="20201116 13:05:29.212"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.207" endtime="20201116 13:05:29.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.217" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:29.216" endtime="20201116 13:05:29.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.219" level="INFO">VALUE: [13700354, 13710353, 13720353, 13730353, 13740353, 13750353, 13760353, 13770353, 13780353, 13790353, 13800353, 13810353, 13820353, 13830353, 13840353, 13850353, 13860353, 13870353, 13880353, 13890353, 13900353, 13910353, 13920353, 13930353, 13940353, 13950353, 13960353, 13970353, 13980353, 13990353, 14000353, 14010353, 14020353, 14030353, 14040353, 14050353, 14060353, 14070353, 14080353, 14090353, 14100353, 14110353, 14120353, 14130353, 14140353, 14150353, 14160353, 14170353, 14180353, 14190353, 14200353, 14210353, 14220353, 14230353, 14240353, 14250353, 14260353, 14270353, 14280353, 14290353, 14300353, 14310353, 14320353, 14330353, 14340353, 14350353, 14360353, 14370353, 14380353, 14390353, 14400353, 14410353, 14420353, 14430353, 14440353, 14450353, 14460353, 14470353, 14480353, 14490353, 14500353, 14510353, 14520353, 14530353, 14540353, 14550353, 14560353, 14570353, 14580353, 14590353, 14600353, 14610353, 14620353, 14630353, 14640353, 14650353, 14660353, 14670353, 14680353, 14690353]</msg>
<status status="PASS" starttime="20201116 13:05:29.218" endtime="20201116 13:05:29.219"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.213" endtime="20201116 13:05:29.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:29.226" endtime="20201116 13:05:29.518"></status>
</kw>
<msg timestamp="20201116 13:05:29.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029042069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:29.225" endtime="20201116 13:05:29.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029042069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:29.522" endtime="20201116 13:05:29.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:29.529" endtime="20201116 13:05:29.531"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.222" endtime="20201116 13:05:29.531"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.220" endtime="20201116 13:05:29.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:29.556" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:29.532" endtime="20201116 13:05:29.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.561" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:29.560" endtime="20201116 13:05:29.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.563" level="INFO">VALUE: 0.019028569</msg>
<status status="PASS" starttime="20201116 13:05:29.562" endtime="20201116 13:05:29.563"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.557" endtime="20201116 13:05:29.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.568" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:29.567" endtime="20201116 13:05:29.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:29.570" level="INFO">VALUE: [0.029042069, 0.039042181, 0.049043292, 0.059044458, 0.069045597, 0.079046736, 0.089047903, 0.099049056, 0.109050153, 0.119051319, 0.129052431, 0.139053597, 0.149054708, 0.159055917, 0.169057, 0.179058167, 0.189059292, 0.199060444, 0.209061569, 0.21906275, 0.229063861, 0.239065069, 0.249066139, 0.259067319, 0.269068431, 0.279069583, 0.289070708, 0.299071917, 0.309072986, 0.319074208, 0.329075278, 0.339076444, 0.349077569, 0.359078736, 0.369079875, 0.379081014, 0.389082139, 0.399083306, 0.409084417, 0.419085583, 0.42908675, 0.439087875, 0.449089069, 0.459090153, 0.469091264, 0.479092431, 0.489093542, 0.499094722, 0.509095833, 0.519096972, 0.529098083, 0.53909925, 0.549100361, 0.559101528, 0.569102681, 0.579103792, 0.589104931, 0.599106069, 0.609107181, 0.619108347, 0.629109458, 0.639110625, 0.649111764, 0.659112944, 0.669114014, 0.679115167, 0.689116278, 0.699117444, 0.709118556, 0.719119722, 0.729120847, 0.739122042, 0.749123111, 0.759124264, 0.769125375, 0.779126569, 0.789127653, 0.799128819, 0.809129931, 0.819131097, 0.829132236, 0.839133403, 0.849134486, 0.859135653, 0.869136764, 0.879137931, 0.889139028, 0.899140208, 0.909141306, 0.919142472, 0.929143583, 0.93914475, 0.949145875, 0.959147042, 0.969148153, 0.979149306, 0.989150431, 0.999151569, 1.009152708, 1.019153847] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:29.569" endtime="20201116 13:05:29.571"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.564" endtime="20201116 13:05:29.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:29.573" endtime="20201116 13:05:29.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:29.577" endtime="20201116 13:05:29.596"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.575" endtime="20201116 13:05:29.597"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.572" endtime="20201116 13:05:29.597"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.081" endtime="20201116 13:05:29.598"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.525" endtime="20201116 13:05:29.598"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.524" endtime="20201116 13:05:29.598"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:29.601" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:29.609" endtime="20201116 13:05:31.727"></status>
</kw>
<msg timestamp="20201116 13:05:31.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16210257, 'wakeups': [16220275, 16230275, 16240275, 16250275, 16260275...</msg>
<status status="PASS" starttime="20201116 13:05:29.607" endtime="20201116 13:05:31.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16210257, 'wakeups': [16220275, 16230275, 16240275, 16250275, 16260275...</msg>
<status status="PASS" starttime="20201116 13:05:31.729" endtime="20201116 13:05:31.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:31.731" endtime="20201116 13:05:31.733"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.605" endtime="20201116 13:05:31.733"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.603" endtime="20201116 13:05:31.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:31.737" level="INFO">${RESULT} = {'wakeups': [16220275, 16230275, 16240275, 16250275, 16260275, 16270275, 16280275, 16290275, 16300275, 16310275, 16320275, 16330275, 16340275, 16350275, 16360275, 16370275, 16380275, 16390275, 1640027...</msg>
<status status="PASS" starttime="20201116 13:05:31.735" endtime="20201116 13:05:31.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.742" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:31.740" endtime="20201116 13:05:31.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.744" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:31.743" endtime="20201116 13:05:31.744"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.737" endtime="20201116 13:05:31.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.749" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:31.748" endtime="20201116 13:05:31.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.751" level="INFO">VALUE: 16210257</msg>
<status status="PASS" starttime="20201116 13:05:31.750" endtime="20201116 13:05:31.751"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.745" endtime="20201116 13:05:31.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.756" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:31.755" endtime="20201116 13:05:31.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:31.758" level="INFO">VALUE: [16220275, 16230275, 16240275, 16250275, 16260275, 16270275, 16280275, 16290275, 16300275, 16310275, 16320275, 16330275, 16340275, 16350275, 16360275, 16370275, 16380275, 16390275, 16400275, 16410275, 16420275, 16430275, 16440275, 16450275, 16460275, 16470275, 16480275, 16490275, 16500275, 16510275, 16520275, 16530275, 16540275, 16550275, 16560275, 16570275, 16580275, 16590275, 16600275, 16610275, 16620275, 16630275, 16640275, 16650275, 16660275, 16670275, 16680275, 16690275, 16700275, 16710275, 16720275, 16730275, 16740275, 16750275, 16760275, 16770275, 16780275, 16790275, 16800275, 16810275, 16820275, 16830275, 16840275, 16850275, 16860275, 16870275, 16880275, 16890275, 16900275, 16910275, 16920275, 16930275, 16940275, 16950275, 16960275, 16970275, 16980275, 16990275, 17000275, 17010275, 17020275, 17030275, 17040275, 17050275, 17060275, 17070275, 17080275, 17090275, 17100275, 17110275, 17120275, 17130275, 17140275, 17150275, 17160275, 17170275, 17180275, 17190275, 17200275, 17210275]</msg>
<status status="PASS" starttime="20201116 13:05:31.757" endtime="20201116 13:05:31.759"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.752" endtime="20201116 13:05:31.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:31.766" endtime="20201116 13:05:32.056"></status>
</kw>
<msg timestamp="20201116 13:05:32.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03109525, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201116 13:05:31.764" endtime="20201116 13:05:32.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03109525, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201116 13:05:32.060" endtime="20201116 13:05:32.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:32.068" endtime="20201116 13:05:32.069"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.761" endtime="20201116 13:05:32.070"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.760" endtime="20201116 13:05:32.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:32.094" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:32.071" endtime="20201116 13:05:32.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.099" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:32.098" endtime="20201116 13:05:32.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.101" level="INFO">VALUE: 0.021075</msg>
<status status="PASS" starttime="20201116 13:05:32.100" endtime="20201116 13:05:32.101"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.095" endtime="20201116 13:05:32.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.106" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:32.105" endtime="20201116 13:05:32.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.108" level="INFO">VALUE: [0.03109525, 0.041096514, 0.051097639, 0.061098819, 0.071099931, 0.081101097, 0.091102194, 0.101103361, 0.111104556, 0.121105653, 0.131106764, 0.141107931, 0.151109069, 0.161110236, 0.171111347, 0.1811125, 0.191113653, 0.201114778, 0.211115931, 0.221117083, 0.231118181, 0.241119375, 0.251120472, 0.261121639, 0.271122764, 0.281123944, 0.291125042, 0.301126208, 0.311127347, 0.3211285, 0.331129639, 0.341130778, 0.351131903, 0.361133097, 0.371134181, 0.381135347, 0.391136472, 0.401137653, 0.411138819, 0.421139944, 0.431141042, 0.441142222, 0.451143333, 0.4611445, 0.471145625, 0.481146833, 0.491147931, 0.501149069, 0.511150181, 0.521151361, 0.531152472, 0.541153639, 0.55115475, 0.561155944, 0.571157056, 0.581158292, 0.591159333, 0.6011605, 0.611161611, 0.621162792, 0.631163903, 0.641165069, 0.651166194, 0.661167347, 0.671168472, 0.681169639, 0.691170764, 0.701171931, 0.711173042, 0.721174208, 0.731175347, 0.7411765, 0.751177611, 0.761178778, 0.771179917, 0.781181097, 0.791182194, 0.801183361, 0.811184472, 0.821185639, 0.831186833, 0.841187931, 0.851189069, 0.861190222, 0.871191333, 0.881192514, 0.891193639, 0.901194792, 0.911195917, 0.921197083, 0.931198194, 0.941199375, 0.951200472, 0.961201653, 0.971202792, 0.981203958, 0.991205056, 1.001206222, 1.011207347, 1.0212085] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:32.107" endtime="20201116 13:05:32.108"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.102" endtime="20201116 13:05:32.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:32.111" endtime="20201116 13:05:32.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:32.115" endtime="20201116 13:05:32.134"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.113" endtime="20201116 13:05:32.135"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.110" endtime="20201116 13:05:32.135"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.601" endtime="20201116 13:05:32.136"></status>
</kw>
<msg timestamp="20201116 13:05:32.136" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:32.144" endtime="20201116 13:05:34.264"></status>
</kw>
<msg timestamp="20201116 13:05:34.265" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18745668, 'wakeups': [18755687, 18765686, 18775686, 18785686, 18795686...</msg>
<status status="PASS" starttime="20201116 13:05:32.142" endtime="20201116 13:05:34.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.271" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18745668, 'wakeups': [18755687, 18765686, 18775686, 18785686, 18795686...</msg>
<status status="PASS" starttime="20201116 13:05:34.267" endtime="20201116 13:05:34.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:34.273" endtime="20201116 13:05:34.276"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.140" endtime="20201116 13:05:34.277"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.138" endtime="20201116 13:05:34.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:34.283" level="INFO">${RESULT} = {'wakeups': [18755687, 18765686, 18775686, 18785686, 18795686, 18805686, 18815686, 18825686, 18835686, 18845686, 18855686, 18865686, 18875686, 18885686, 18895686, 18905686, 18915686, 18925686, 1893568...</msg>
<status status="PASS" starttime="20201116 13:05:34.280" endtime="20201116 13:05:34.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.287" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:34.286" endtime="20201116 13:05:34.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.289" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:34.288" endtime="20201116 13:05:34.289"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.284" endtime="20201116 13:05:34.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.294" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:34.293" endtime="20201116 13:05:34.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.296" level="INFO">VALUE: 18745668</msg>
<status status="PASS" starttime="20201116 13:05:34.295" endtime="20201116 13:05:34.296"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.290" endtime="20201116 13:05:34.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.301" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:34.300" endtime="20201116 13:05:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.303" level="INFO">VALUE: [18755687, 18765686, 18775686, 18785686, 18795686, 18805686, 18815686, 18825686, 18835686, 18845686, 18855686, 18865686, 18875686, 18885686, 18895686, 18905686, 18915686, 18925686, 18935686, 18945686, 18955686, 18965686, 18975686, 18985686, 18995686, 19005686, 19015686, 19025686, 19035686, 19045686, 19055686, 19065686, 19075686, 19085686, 19095686, 19105686, 19115686, 19125686, 19135686, 19145686, 19155686, 19165686, 19175686, 19185686, 19195686, 19205686, 19215686, 19225686, 19235686, 19245686, 19255686, 19265686, 19275686, 19285686, 19295686, 19305686, 19315686, 19325686, 19335686, 19345686, 19355686, 19365686, 19375686, 19385686, 19395686, 19405686, 19415686, 19425686, 19435686, 19445686, 19455686, 19465686, 19475686, 19485686, 19495686, 19505686, 19515686, 19525686, 19535686, 19545686, 19555686, 19565686, 19575686, 19585686, 19595686, 19605686, 19615686, 19625686, 19635686, 19645686, 19655686, 19665686, 19675686, 19685686, 19695686, 19705686, 19715686, 19725686, 19735686, 19745686]</msg>
<status status="PASS" starttime="20201116 13:05:34.302" endtime="20201116 13:05:34.303"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.297" endtime="20201116 13:05:34.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:34.311" endtime="20201116 13:05:34.603"></status>
</kw>
<msg timestamp="20201116 13:05:34.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018751681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028772542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:34.310" endtime="20201116 13:05:34.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018751681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028772542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:34.607" endtime="20201116 13:05:34.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:34.614" endtime="20201116 13:05:34.616"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.307" endtime="20201116 13:05:34.617"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.304" endtime="20201116 13:05:34.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:34.641" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:34.618" endtime="20201116 13:05:34.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.645" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:34.644" endtime="20201116 13:05:34.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.647" level="INFO">VALUE: 0.018751681</msg>
<status status="PASS" starttime="20201116 13:05:34.647" endtime="20201116 13:05:34.648"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.642" endtime="20201116 13:05:34.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.653" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:34.652" endtime="20201116 13:05:34.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:34.655" level="INFO">VALUE: [0.028772542, 0.038772764, 0.048773889, 0.058775056, 0.068776167, 0.078777333, 0.088778458, 0.098779639, 0.108780736, 0.118781903, 0.128783014, 0.138784222, 0.148785306, 0.158786486, 0.168787583, 0.178788764, 0.188789931, 0.198791042, 0.208792208, 0.218793319, 0.228794444, 0.238795625, 0.248796736, 0.258797889, 0.268799014, 0.278800181, 0.288801306, 0.298802472, 0.308803583, 0.318804792, 0.328805875, 0.338807056, 0.348808153, 0.358809333, 0.368810444, 0.378811611, 0.38881275, 0.398813917, 0.408815028, 0.418816181, 0.428817306, 0.438818486, 0.448819597, 0.45882075, 0.468821944, 0.478823056, 0.488824153, 0.498825361, 0.508826444, 0.518827611, 0.528828764, 0.538829917, 0.548831014, 0.558832181, 0.568833347, 0.578834542, 0.588835611, 0.598836792, 0.608837875, 0.618839028, 0.628840153, 0.638841306, 0.648842417, 0.658843597, 0.668844681, 0.678845847, 0.688846958, 0.698848125, 0.70884925, 0.718850403, 0.7288515, 0.738852694, 0.748853792, 0.758854944, 0.768856056, 0.778857222, 0.788858333, 0.7988595, 0.808860611, 0.818861806, 0.828862875, 0.838864042, 0.848865153, 0.858866375, 0.868867444, 0.878868583, 0.888869694, 0.898870861, 0.908871986, 0.918873153, 0.92887425, 0.938875431, 0.948876542, 0.958877708, 0.968878806, 0.978879958, 0.988881097, 0.998882236, 1.008883361, 1.018884528] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:34.654" endtime="20201116 13:05:34.655"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.649" endtime="20201116 13:05:34.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:34.658" endtime="20201116 13:05:34.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:34.661" endtime="20201116 13:05:34.681"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.660" endtime="20201116 13:05:34.681"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.656" endtime="20201116 13:05:34.682"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.137" endtime="20201116 13:05:34.682"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.599" endtime="20201116 13:05:34.682"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:29.598" endtime="20201116 13:05:34.683"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:34.685" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:34.694" endtime="20201116 13:05:36.813"></status>
</kw>
<msg timestamp="20201116 13:05:36.814" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 21295574, 'wakeups': [21305600, 21315601, 21325601, 21335601, 21345601...</msg>
<status status="PASS" starttime="20201116 13:05:34.693" endtime="20201116 13:05:36.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 21295574, 'wakeups': [21305600, 21315601, 21325601, 21335601, 21345601...</msg>
<status status="PASS" starttime="20201116 13:05:36.816" endtime="20201116 13:05:36.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:36.822" endtime="20201116 13:05:36.826"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.690" endtime="20201116 13:05:36.827"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.687" endtime="20201116 13:05:36.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:36.834" level="INFO">${RESULT} = {'wakeups': [21305600, 21315601, 21325601, 21335601, 21345601, 21355601, 21365601, 21375601, 21385601, 21395601, 21405601, 21415601, 21425601, 21435601, 21445601, 21455601, 21465601, 21475601, 2148560...</msg>
<status status="PASS" starttime="20201116 13:05:36.829" endtime="20201116 13:05:36.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.839" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:36.838" endtime="20201116 13:05:36.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.841" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:36.840" endtime="20201116 13:05:36.842"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.836" endtime="20201116 13:05:36.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.846" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:36.845" endtime="20201116 13:05:36.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.848" level="INFO">VALUE: 21295574</msg>
<status status="PASS" starttime="20201116 13:05:36.847" endtime="20201116 13:05:36.849"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.843" endtime="20201116 13:05:36.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.853" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:36.852" endtime="20201116 13:05:36.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.855" level="INFO">VALUE: [21305600, 21315601, 21325601, 21335601, 21345601, 21355601, 21365601, 21375601, 21385601, 21395601, 21405601, 21415601, 21425601, 21435601, 21445601, 21455601, 21465601, 21475601, 21485601, 21495601, 21505601, 21515601, 21525601, 21535601, 21545601, 21555601, 21565601, 21575601, 21585601, 21595601, 21605601, 21615601, 21625601, 21635601, 21645601, 21655601, 21665601, 21675601, 21685601, 21695601, 21705601, 21715601, 21725601, 21735601, 21745601, 21755601, 21765601, 21775601, 21785601, 21795601, 21805601, 21815601, 21825601, 21835601, 21845601, 21855601, 21865601, 21875601, 21885601, 21895601, 21905601, 21915601, 21925601, 21935601, 21945601, 21955601, 21965601, 21975601, 21985601, 21995601, 22005601, 22015601, 22025601, 22035601, 22045601, 22055601, 22065601, 22075601, 22085601, 22095601, 22105601, 22115601, 22125601, 22135601, 22145601, 22155601, 22165601, 22175601, 22185601, 22195601, 22205601, 22215601, 22225601, 22235601, 22245601, 22255601, 22265601, 22275601, 22285601, 22295601]</msg>
<status status="PASS" starttime="20201116 13:05:36.854" endtime="20201116 13:05:36.856"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.850" endtime="20201116 13:05:36.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:36.863" endtime="20201116 13:05:37.152"></status>
</kw>
<msg timestamp="20201116 13:05:37.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032040444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:36.861" endtime="20201116 13:05:37.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032040444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:37.156" endtime="20201116 13:05:37.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:37.164" endtime="20201116 13:05:37.166"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.858" endtime="20201116 13:05:37.166"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.857" endtime="20201116 13:05:37.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:37.190" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:37.167" endtime="20201116 13:05:37.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.195" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:37.194" endtime="20201116 13:05:37.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.197" level="INFO">VALUE: 0.022012472</msg>
<status status="PASS" starttime="20201116 13:05:37.196" endtime="20201116 13:05:37.197"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.191" endtime="20201116 13:05:37.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.203" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:37.202" endtime="20201116 13:05:37.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.205" level="INFO">VALUE: [0.032040444, 0.042042167, 0.052043333, 0.0620445, 0.072045625, 0.082046778, 0.092047889, 0.102049069, 0.112050181, 0.122051347, 0.132052458, 0.142053625, 0.15205475, 0.162055931, 0.172057028, 0.182058194, 0.192059306, 0.202060472, 0.212061653, 0.222062778, 0.232063875, 0.242065042, 0.252066181, 0.262067389, 0.272068444, 0.282069611, 0.292070736, 0.302071931, 0.312073028, 0.322074194, 0.332075306, 0.342076472, 0.352077611, 0.362078778, 0.372079889, 0.382081042, 0.392082167, 0.402083333, 0.412084444, 0.422085611, 0.43208675, 0.442087903, 0.452089028, 0.462090194, 0.472091306, 0.482092486, 0.492093639, 0.502094778, 0.512095875, 0.522097042, 0.532098167, 0.542099347, 0.552100514, 0.562101611, 0.57210275, 0.582103903, 0.592105028, 0.602106194, 0.612107306, 0.622108472, 0.632109611, 0.642110764, 0.652111875, 0.662113056, 0.672114181, 0.682115333, 0.692116486, 0.702117639, 0.712118736, 0.722119903, 0.732121028, 0.742122208, 0.752123319, 0.762124556, 0.772125597, 0.782126792, 0.792127917, 0.802129056, 0.812130167, 0.822131347, 0.832132486, 0.842133625, 0.852134736, 0.862135917, 0.872137056, 0.882138208, 0.892139319, 0.902140472, 0.912141597, 0.922142764, 0.932143903, 0.942145069, 0.952146194, 0.962147333, 0.972148514, 0.982149625, 0.99215075, 1.002151917, 1.012153069, 1.022154194] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:37.204" endtime="20201116 13:05:37.205"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.198" endtime="20201116 13:05:37.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:37.208" endtime="20201116 13:05:37.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:37.211" endtime="20201116 13:05:37.231"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.210" endtime="20201116 13:05:37.231"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.206" endtime="20201116 13:05:37.232"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.686" endtime="20201116 13:05:37.232"></status>
</kw>
<msg timestamp="20201116 13:05:37.232" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:37.240" endtime="20201116 13:05:39.360"></status>
</kw>
<msg timestamp="20201116 13:05:39.361" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23841965, 'wakeups': [23851992, 23861992, 23871992, 23881992, 23891992...</msg>
<status status="PASS" starttime="20201116 13:05:37.239" endtime="20201116 13:05:39.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.367" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23841965, 'wakeups': [23851992, 23861992, 23871992, 23881992, 23891992...</msg>
<status status="PASS" starttime="20201116 13:05:39.363" endtime="20201116 13:05:39.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:39.369" endtime="20201116 13:05:39.373"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.236" endtime="20201116 13:05:39.374"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.234" endtime="20201116 13:05:39.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:39.380" level="INFO">${RESULT} = {'wakeups': [23851992, 23861992, 23871992, 23881992, 23891992, 23901992, 23911992, 23921992, 23931992, 23941992, 23951992, 23961992, 23971992, 23981992, 23991992, 24001992, 24011992, 24021992, 2403199...</msg>
<status status="PASS" starttime="20201116 13:05:39.376" endtime="20201116 13:05:39.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.389" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:39.387" endtime="20201116 13:05:39.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.392" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:39.391" endtime="20201116 13:05:39.392"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.382" endtime="20201116 13:05:39.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.398" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:39.396" endtime="20201116 13:05:39.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.400" level="INFO">VALUE: 23841965</msg>
<status status="PASS" starttime="20201116 13:05:39.399" endtime="20201116 13:05:39.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.393" endtime="20201116 13:05:39.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.405" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:39.404" endtime="20201116 13:05:39.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.407" level="INFO">VALUE: [23851992, 23861992, 23871992, 23881992, 23891992, 23901992, 23911992, 23921992, 23931992, 23941992, 23951992, 23961992, 23971992, 23981992, 23991992, 24001992, 24011992, 24021992, 24031992, 24041992, 24051992, 24061992, 24071992, 24081992, 24091992, 24101992, 24111992, 24121992, 24131992, 24141992, 24151992, 24161992, 24171992, 24181992, 24191992, 24201992, 24211992, 24221992, 24231992, 24241992, 24251992, 24261992, 24271992, 24281992, 24291992, 24301992, 24311992, 24321992, 24331992, 24341992, 24351992, 24361992, 24371992, 24381992, 24391992, 24401992, 24411992, 24421992, 24431992, 24441992, 24451992, 24461992, 24471992, 24481992, 24491992, 24501992, 24511992, 24521992, 24531992, 24541992, 24551992, 24561992, 24571992, 24581992, 24591992, 24601992, 24611992, 24621992, 24631992, 24641992, 24651992, 24661992, 24671992, 24681992, 24691992, 24701992, 24711992, 24721992, 24731992, 24741992, 24751992, 24761992, 24771992, 24781992, 24791992, 24801992, 24811992, 24821992, 24831992, 24841992]</msg>
<status status="PASS" starttime="20201116 13:05:39.406" endtime="20201116 13:05:39.408"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.401" endtime="20201116 13:05:39.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:39.415" endtime="20201116 13:05:39.706"></status>
</kw>
<msg timestamp="20201116 13:05:39.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028613292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:39.413" endtime="20201116 13:05:39.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028613292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:39.709" endtime="20201116 13:05:39.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:39.717" endtime="20201116 13:05:39.719"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.411" endtime="20201116 13:05:39.719"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.409" endtime="20201116 13:05:39.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:39.743" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:39.721" endtime="20201116 13:05:39.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.748" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:39.747" endtime="20201116 13:05:39.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.750" level="INFO">VALUE: 0.018584389</msg>
<status status="PASS" starttime="20201116 13:05:39.749" endtime="20201116 13:05:39.750"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.744" endtime="20201116 13:05:39.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.755" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:39.754" endtime="20201116 13:05:39.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:39.758" level="INFO">VALUE: [0.028613292, 0.038613736, 0.048614847, 0.058616014, 0.068617139, 0.078618306, 0.088619417, 0.098620597, 0.108621708, 0.118622889, 0.128623986, 0.138625153, 0.148626278, 0.158627444, 0.168628556, 0.178629722, 0.188630833, 0.198632, 0.208633139, 0.218634292, 0.228635417, 0.238636611, 0.248637694, 0.258638875, 0.268639972, 0.278641194, 0.288642264, 0.298643431, 0.308644542, 0.318645708, 0.328646833, 0.338648, 0.348649181, 0.358650306, 0.368651403, 0.378652569, 0.388653694, 0.398654875, 0.408655986, 0.418657167, 0.428658264, 0.438659431, 0.448660542, 0.458661708, 0.468662833, 0.478664, 0.488665125, 0.498666292, 0.508667403, 0.518668569, 0.528669694, 0.538670861, 0.548671986, 0.558673194, 0.568674264, 0.578675458, 0.588676583, 0.598677722, 0.608678847, 0.61868, 0.628681125, 0.638682347, 0.648683403, 0.658684583, 0.668685736, 0.678686889, 0.688687986, 0.698689153, 0.708690264, 0.718691444, 0.728692569, 0.738693722, 0.748694847, 0.758696, 0.768697125, 0.778698306, 0.788699403, 0.798700583, 0.808701694, 0.818702861, 0.828704, 0.838705167, 0.848706264, 0.858707431, 0.868708569, 0.878709722, 0.888710833, 0.898712028, 0.908713139, 0.918714375, 0.928715431, 0.938716583, 0.948717694, 0.958718861, 0.968719986, 0.978721153, 0.988722278, 0.998723486, 1.008724611, 1.018725764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:39.757" endtime="20201116 13:05:39.759"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.751" endtime="20201116 13:05:39.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:39.761" endtime="20201116 13:05:39.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:39.769" endtime="20201116 13:05:39.788"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.767" endtime="20201116 13:05:39.789"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.760" endtime="20201116 13:05:39.789"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.233" endtime="20201116 13:05:39.790"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.684" endtime="20201116 13:05:39.790"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:34.683" endtime="20201116 13:05:39.790"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:39.793" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:39.801" endtime="20201116 13:05:41.920"></status>
</kw>
<msg timestamp="20201116 13:05:41.921" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 26402174, 'wakeups': [26412209, 26422210, 26432210, 26442210, 26452210...</msg>
<status status="PASS" starttime="20201116 13:05:39.799" endtime="20201116 13:05:41.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 26402174, 'wakeups': [26412209, 26422210, 26432210, 26442210, 26452210...</msg>
<status status="PASS" starttime="20201116 13:05:41.923" endtime="20201116 13:05:41.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:41.929" endtime="20201116 13:05:41.932"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.797" endtime="20201116 13:05:41.933"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.795" endtime="20201116 13:05:41.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:41.940" level="INFO">${RESULT} = {'wakeups': [26412209, 26422210, 26432210, 26442210, 26452210, 26462210, 26472210, 26482210, 26492210, 26502210, 26512210, 26522210, 26532210, 26542210, 26552210, 26562210, 26572210, 26582210, 2659221...</msg>
<status status="PASS" starttime="20201116 13:05:41.936" endtime="20201116 13:05:41.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.947" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:41.946" endtime="20201116 13:05:41.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.949" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:41.948" endtime="20201116 13:05:41.949"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.942" endtime="20201116 13:05:41.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.954" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:41.953" endtime="20201116 13:05:41.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.956" level="INFO">VALUE: 26402174</msg>
<status status="PASS" starttime="20201116 13:05:41.955" endtime="20201116 13:05:41.956"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.950" endtime="20201116 13:05:41.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.961" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:41.960" endtime="20201116 13:05:41.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.963" level="INFO">VALUE: [26412209, 26422210, 26432210, 26442210, 26452210, 26462210, 26472210, 26482210, 26492210, 26502210, 26512210, 26522210, 26532210, 26542210, 26552210, 26562210, 26572210, 26582210, 26592210, 26602210, 26612210, 26622210, 26632210, 26642210, 26652210, 26662210, 26672210, 26682210, 26692210, 26702210, 26712210, 26722210, 26732210, 26742210, 26752210, 26762210, 26772210, 26782210, 26792210, 26802210, 26812210, 26822210, 26832210, 26842210, 26852210, 26862210, 26872210, 26882210, 26892210, 26902210, 26912210, 26922210, 26932210, 26942210, 26952210, 26962210, 26972210, 26982210, 26992210, 27002210, 27012210, 27022210, 27032210, 27042210, 27052210, 27062210, 27072210, 27082210, 27092210, 27102210, 27112210, 27122210, 27132210, 27142210, 27152210, 27162210, 27172210, 27182210, 27192210, 27202210, 27212210, 27222210, 27232210, 27242210, 27252210, 27262210, 27272210, 27282210, 27292210, 27302210, 27312210, 27322210, 27332210, 27342210, 27352210, 27362210, 27372210, 27382210, 27392210, 27402210]</msg>
<status status="PASS" starttime="20201116 13:05:41.962" endtime="20201116 13:05:41.963"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.957" endtime="20201116 13:05:41.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:41.972" endtime="20201116 13:05:42.263"></status>
</kw>
<msg timestamp="20201116 13:05:42.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031290833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:05:41.969" endtime="20201116 13:05:42.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031290833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:05:42.266" endtime="20201116 13:05:42.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:42.274" endtime="20201116 13:05:42.276"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.966" endtime="20201116 13:05:42.276"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.965" endtime="20201116 13:05:42.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:42.300" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:42.277" endtime="20201116 13:05:42.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.304" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:42.303" endtime="20201116 13:05:42.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.306" level="INFO">VALUE: 0.0212535</msg>
<status status="PASS" starttime="20201116 13:05:42.305" endtime="20201116 13:05:42.307"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.301" endtime="20201116 13:05:42.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.312" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:42.311" endtime="20201116 13:05:42.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.314" level="INFO">VALUE: [0.031290833, 0.041292597, 0.051293722, 0.061294944, 0.071296, 0.081297153, 0.091298278, 0.101299444, 0.111300569, 0.121301736, 0.131302861, 0.141304028, 0.151305139, 0.161306319, 0.171307444, 0.181308597, 0.191309694, 0.201310875, 0.211311986, 0.221313153, 0.231314264, 0.241315431, 0.251316569, 0.261317722, 0.271318847, 0.28132, 0.291321125, 0.301322292, 0.311323403, 0.321324583, 0.331325722, 0.341326861, 0.351327986, 0.361329167, 0.371330264, 0.381331444, 0.391332556, 0.401333722, 0.411334833, 0.421336, 0.431337139, 0.441338292, 0.451339417, 0.461340583, 0.471341694, 0.481342889, 0.491344, 0.501345153, 0.511346278, 0.521347458, 0.531348556, 0.541349722, 0.551350917, 0.561352, 0.571353125, 0.581354306, 0.591355431, 0.601356583, 0.611357694, 0.621358889, 0.631359986, 0.641361167, 0.651362306, 0.661363472, 0.671364597, 0.681365722, 0.691366861, 0.701368014, 0.711369125, 0.721370292, 0.731371431, 0.741372597, 0.751373708, 0.761374861, 0.771375986, 0.781377167, 0.791378278, 0.801379458, 0.811380569, 0.821381722, 0.831382847, 0.841384014, 0.851385125, 0.861386292, 0.871387444, 0.881388583, 0.891389708, 0.901390889, 0.911391986, 0.921393236, 0.931394278, 0.941395486, 0.951396556, 0.96139775, 0.971398847, 0.981400028, 0.991401139, 1.001402319, 1.011403417, 1.021404583] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:42.313" endtime="20201116 13:05:42.314"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.308" endtime="20201116 13:05:42.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:42.317" endtime="20201116 13:05:42.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:42.320" endtime="20201116 13:05:42.339"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.319" endtime="20201116 13:05:42.340"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.315" endtime="20201116 13:05:42.341"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.793" endtime="20201116 13:05:42.341"></status>
</kw>
<msg timestamp="20201116 13:05:42.341" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:42.350" endtime="20201116 13:05:44.469"></status>
</kw>
<msg timestamp="20201116 13:05:44.471" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 28951008, 'wakeups': [28961045, 28971044, 28981044, 28991044, 29001044...</msg>
<status status="PASS" starttime="20201116 13:05:42.348" endtime="20201116 13:05:44.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.477" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 28951008, 'wakeups': [28961045, 28971044, 28981044, 28991044, 29001044...</msg>
<status status="PASS" starttime="20201116 13:05:44.473" endtime="20201116 13:05:44.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:44.479" endtime="20201116 13:05:44.483"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.345" endtime="20201116 13:05:44.484"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.343" endtime="20201116 13:05:44.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:44.491" level="INFO">${RESULT} = {'wakeups': [28961045, 28971044, 28981044, 28991044, 29001044, 29011044, 29021044, 29031044, 29041044, 29051044, 29061044, 29071044, 29081044, 29091044, 29101044, 29111044, 29121044, 29131044, 2914104...</msg>
<status status="PASS" starttime="20201116 13:05:44.487" endtime="20201116 13:05:44.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.500" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:44.498" endtime="20201116 13:05:44.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.502" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:44.501" endtime="20201116 13:05:44.503"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.493" endtime="20201116 13:05:44.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.507" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:44.506" endtime="20201116 13:05:44.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.509" level="INFO">VALUE: 28951008</msg>
<status status="PASS" starttime="20201116 13:05:44.509" endtime="20201116 13:05:44.510"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.504" endtime="20201116 13:05:44.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.514" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:44.513" endtime="20201116 13:05:44.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.516" level="INFO">VALUE: [28961045, 28971044, 28981044, 28991044, 29001044, 29011044, 29021044, 29031044, 29041044, 29051044, 29061044, 29071044, 29081044, 29091044, 29101044, 29111044, 29121044, 29131044, 29141044, 29151044, 29161044, 29171044, 29181044, 29191044, 29201044, 29211044, 29221044, 29231044, 29241044, 29251044, 29261044, 29271044, 29281044, 29291044, 29301044, 29311044, 29321044, 29331044, 29341044, 29351044, 29361044, 29371044, 29381044, 29391044, 29401044, 29411044, 29421044, 29431044, 29441044, 29451044, 29461044, 29471044, 29481044, 29491044, 29501044, 29511044, 29521044, 29531044, 29541044, 29551044, 29561044, 29571044, 29581044, 29591044, 29601044, 29611044, 29621044, 29631044, 29641044, 29651044, 29661044, 29671044, 29681044, 29691044, 29701044, 29711044, 29721044, 29731044, 29741044, 29751044, 29761044, 29771044, 29781044, 29791044, 29801044, 29811044, 29821044, 29831044, 29841044, 29851044, 29861044, 29871044, 29881044, 29891044, 29901044, 29911044, 29921044, 29931044, 29941044, 29951044]</msg>
<status status="PASS" starttime="20201116 13:05:44.515" endtime="20201116 13:05:44.517"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.511" endtime="20201116 13:05:44.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:44.524" endtime="20201116 13:05:44.816"></status>
</kw>
<msg timestamp="20201116 13:05:44.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028994333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:44.522" endtime="20201116 13:05:44.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028994333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:44.819" endtime="20201116 13:05:44.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:44.827" endtime="20201116 13:05:44.828"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.520" endtime="20201116 13:05:44.829"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.518" endtime="20201116 13:05:44.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:44.860" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:44.836" endtime="20201116 13:05:44.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.864" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:44.863" endtime="20201116 13:05:44.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.866" level="INFO">VALUE: 0.018956111</msg>
<status status="PASS" starttime="20201116 13:05:44.865" endtime="20201116 13:05:44.867"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.861" endtime="20201116 13:05:44.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.872" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:44.871" endtime="20201116 13:05:44.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:44.874" level="INFO">VALUE: [0.028994333, 0.038994861, 0.048995958, 0.058997125, 0.06899825, 0.078999403, 0.089000528, 0.099001708, 0.109002806, 0.119003986, 0.129005097, 0.139006264, 0.149007403, 0.159008542, 0.169009667, 0.179010847, 0.189011944, 0.199013111, 0.209014236, 0.219015417, 0.229016528, 0.239017694, 0.249018819, 0.259019986, 0.269021083, 0.27902225, 0.289023375, 0.299024542, 0.309025681, 0.319026847, 0.329027958, 0.339029111, 0.349030236, 0.359031403, 0.369032514, 0.379033694, 0.389034806, 0.399035972, 0.409037097, 0.419038278, 0.429039375, 0.439040542, 0.449041667, 0.459042833, 0.469043944, 0.479045111, 0.489046236, 0.499047417, 0.509048583, 0.519049694, 0.529050875, 0.539051972, 0.549053097, 0.559054264, 0.569055375, 0.579056569, 0.589057667, 0.599058847, 0.609059972, 0.619061153, 0.629062236, 0.639063403, 0.649064514, 0.659065708, 0.669066778, 0.679067958, 0.689069056, 0.699070208, 0.709071319, 0.7190725, 0.729073597, 0.739074764, 0.749075903, 0.759077028, 0.769078167, 0.779079306, 0.789080417, 0.799081583, 0.809082694, 0.819083875, 0.829084972, 0.839086139, 0.849087236, 0.859088403, 0.869089528, 0.879090681, 0.889091792, 0.899092944, 0.909094069, 0.919095236, 0.929096333, 0.9390975, 0.949098625, 0.959099778, 0.969100903, 0.979102056, 0.989103181, 0.999104319, 1.009105458, 1.019106597] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:44.873" endtime="20201116 13:05:44.874"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.868" endtime="20201116 13:05:44.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:44.877" endtime="20201116 13:05:44.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:44.880" endtime="20201116 13:05:44.900"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.879" endtime="20201116 13:05:44.900"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.875" endtime="20201116 13:05:44.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.342" endtime="20201116 13:05:44.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.791" endtime="20201116 13:05:44.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:39.790" endtime="20201116 13:05:44.901"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:44.904" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:44.912" endtime="20201116 13:05:47.017"></status>
</kw>
<msg timestamp="20201116 13:05:47.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 31513299, 'wakeups': [31523346, 31533346, 31543346, 31553346, 31563346...</msg>
<status status="PASS" starttime="20201116 13:05:44.911" endtime="20201116 13:05:47.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.020" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 31513299, 'wakeups': [31523346, 31533346, 31543346, 31553346, 31563346...</msg>
<status status="PASS" starttime="20201116 13:05:47.019" endtime="20201116 13:05:47.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:47.021" endtime="20201116 13:05:47.023"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.908" endtime="20201116 13:05:47.023"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.906" endtime="20201116 13:05:47.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:47.027" level="INFO">${RESULT} = {'wakeups': [31523346, 31533346, 31543346, 31553346, 31563346, 31573346, 31583346, 31593346, 31603346, 31613346, 31623346, 31633346, 31643346, 31653346, 31663346, 31673346, 31683346, 31693346, 3170334...</msg>
<status status="PASS" starttime="20201116 13:05:47.025" endtime="20201116 13:05:47.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.031" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:47.030" endtime="20201116 13:05:47.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.035" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:47.032" endtime="20201116 13:05:47.035"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.028" endtime="20201116 13:05:47.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.040" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:47.039" endtime="20201116 13:05:47.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.042" level="INFO">VALUE: 31513299</msg>
<status status="PASS" starttime="20201116 13:05:47.041" endtime="20201116 13:05:47.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.036" endtime="20201116 13:05:47.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.047" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:47.046" endtime="20201116 13:05:47.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.049" level="INFO">VALUE: [31523346, 31533346, 31543346, 31553346, 31563346, 31573346, 31583346, 31593346, 31603346, 31613346, 31623346, 31633346, 31643346, 31653346, 31663346, 31673346, 31683346, 31693346, 31703346, 31713346, 31723346, 31733346, 31743346, 31753346, 31763346, 31773346, 31783346, 31793346, 31803346, 31813346, 31823346, 31833346, 31843346, 31853346, 31863346, 31873346, 31883346, 31893346, 31903346, 31913346, 31923346, 31933346, 31943346, 31953346, 31963346, 31973346, 31983346, 31993346, 32003346, 32013346, 32023346, 32033346, 32043346, 32053346, 32063346, 32073346, 32083346, 32093346, 32103346, 32113346, 32123346, 32133346, 32143346, 32153346, 32163346, 32173346, 32183346, 32193346, 32203346, 32213346, 32223346, 32233346, 32243346, 32253346, 32263346, 32273346, 32283346, 32293346, 32303346, 32313346, 32323346, 32333346, 32343346, 32353346, 32363346, 32373346, 32383346, 32393346, 32403346, 32413346, 32423346, 32433346, 32443346, 32453346, 32463346, 32473346, 32483346, 32493346, 32503346, 32513346]</msg>
<status status="PASS" starttime="20201116 13:05:47.048" endtime="20201116 13:05:47.049"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.043" endtime="20201116 13:05:47.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:47.056" endtime="20201116 13:05:47.347"></status>
</kw>
<msg timestamp="20201116 13:05:47.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021144444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031192514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:47.055" endtime="20201116 13:05:47.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021144444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031192514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:47.351" endtime="20201116 13:05:47.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:47.358" endtime="20201116 13:05:47.360"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.052" endtime="20201116 13:05:47.360"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.050" endtime="20201116 13:05:47.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:47.384" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:47.362" endtime="20201116 13:05:47.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.389" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:47.388" endtime="20201116 13:05:47.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.391" level="INFO">VALUE: 0.021144444</msg>
<status status="PASS" starttime="20201116 13:05:47.390" endtime="20201116 13:05:47.392"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.385" endtime="20201116 13:05:47.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.397" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:47.396" endtime="20201116 13:05:47.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:47.399" level="INFO">VALUE: [0.031192514, 0.041193597, 0.051194722, 0.061195903, 0.071196986, 0.081198153, 0.091199292, 0.101200444, 0.111201556, 0.121202722, 0.131203847, 0.141205014, 0.151206153, 0.161207292, 0.171208431, 0.181209583, 0.191210708, 0.201211861, 0.211212986, 0.221214181, 0.231215319, 0.241216458, 0.251217569, 0.261218736, 0.271219847, 0.281221, 0.291222153, 0.301223306, 0.311224417, 0.321225625, 0.331226694, 0.341227875, 0.351229, 0.361230167, 0.371231278, 0.381232431, 0.391233556, 0.401234722, 0.411235833, 0.421237, 0.431238125, 0.441239306, 0.451240417, 0.461241583, 0.471242694, 0.481243861, 0.491244986, 0.501246153, 0.511247264, 0.521248431, 0.531249556, 0.541250722, 0.551251847, 0.561253014, 0.571254125, 0.581255306, 0.591256431, 0.601257625, 0.611258708, 0.621259875, 0.631260986, 0.641262153, 0.651263292, 0.661264458, 0.671265556, 0.681266722, 0.691267861, 0.701269014, 0.711270125, 0.721271292, 0.731272417, 0.741273569, 0.751274667, 0.761275875, 0.771276944, 0.781278111, 0.791279222, 0.801280375, 0.811281514, 0.821282653, 0.831283819, 0.841284931, 0.851286042, 0.861287208, 0.871288333, 0.881289472, 0.891290583, 0.90129175, 0.911292861, 0.921294028, 0.931295139, 0.941296306, 0.951297417, 0.961298569, 0.971299694, 0.981300931, 0.991301972, 1.001303125, 1.011304236, 1.021305417] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:47.398" endtime="20201116 13:05:47.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.393" endtime="20201116 13:05:47.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:47.403" endtime="20201116 13:05:47.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:47.406" endtime="20201116 13:05:47.426"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.405" endtime="20201116 13:05:47.426"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.401" endtime="20201116 13:05:47.427"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.905" endtime="20201116 13:05:47.427"></status>
</kw>
<msg timestamp="20201116 13:05:47.427" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:47.435" endtime="20201116 13:05:49.556"></status>
</kw>
<msg timestamp="20201116 13:05:49.558" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34036522, 'wakeups': [34046569, 34056569, 34066569, 34076569, 34086569...</msg>
<status status="PASS" starttime="20201116 13:05:47.434" endtime="20201116 13:05:49.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.562" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34036522, 'wakeups': [34046569, 34056569, 34066569, 34076569, 34086569...</msg>
<status status="PASS" starttime="20201116 13:05:49.560" endtime="20201116 13:05:49.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:49.563" endtime="20201116 13:05:49.564"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.431" endtime="20201116 13:05:49.565"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.429" endtime="20201116 13:05:49.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:49.568" level="INFO">${RESULT} = {'wakeups': [34046569, 34056569, 34066569, 34076569, 34086569, 34096569, 34106569, 34116569, 34126569, 34136569, 34146569, 34156569, 34166569, 34176569, 34186569, 34196569, 34206569, 34216569, 3422656...</msg>
<status status="PASS" starttime="20201116 13:05:49.566" endtime="20201116 13:05:49.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.572" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:49.571" endtime="20201116 13:05:49.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.574" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:49.573" endtime="20201116 13:05:49.575"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.569" endtime="20201116 13:05:49.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.579" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:49.578" endtime="20201116 13:05:49.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.581" level="INFO">VALUE: 34036522</msg>
<status status="PASS" starttime="20201116 13:05:49.580" endtime="20201116 13:05:49.582"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.576" endtime="20201116 13:05:49.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.586" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:49.585" endtime="20201116 13:05:49.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.589" level="INFO">VALUE: [34046569, 34056569, 34066569, 34076569, 34086569, 34096569, 34106569, 34116569, 34126569, 34136569, 34146569, 34156569, 34166569, 34176569, 34186569, 34196569, 34206569, 34216569, 34226569, 34236569, 34246569, 34256569, 34266569, 34276569, 34286569, 34296569, 34306569, 34316569, 34326569, 34336569, 34346569, 34356569, 34366569, 34376569, 34386569, 34396569, 34406569, 34416569, 34426569, 34436569, 34446569, 34456569, 34466569, 34476569, 34486569, 34496569, 34506569, 34516569, 34526569, 34536569, 34546569, 34556569, 34566569, 34576569, 34586569, 34596569, 34606569, 34616569, 34626569, 34636569, 34646569, 34656569, 34666569, 34676569, 34686569, 34696569, 34706569, 34716569, 34726569, 34736569, 34746569, 34756569, 34766569, 34776569, 34786569, 34796569, 34806569, 34816569, 34826569, 34836569, 34846569, 34856569, 34866569, 34876569, 34886569, 34896569, 34906569, 34916569, 34926569, 34936569, 34946569, 34956569, 34966569, 34976569, 34986569, 34996569, 35006569, 35016569, 35026569, 35036569]</msg>
<status status="PASS" starttime="20201116 13:05:49.588" endtime="20201116 13:05:49.589"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.583" endtime="20201116 13:05:49.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:49.597" endtime="20201116 13:05:49.888"></status>
</kw>
<msg timestamp="20201116 13:05:49.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018350875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028399083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:49.596" endtime="20201116 13:05:49.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018350875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028399083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:49.892" endtime="20201116 13:05:49.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:49.899" endtime="20201116 13:05:49.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.593" endtime="20201116 13:05:49.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.590" endtime="20201116 13:05:49.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:49.925" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:49.902" endtime="20201116 13:05:49.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.929" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:49.928" endtime="20201116 13:05:49.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.931" level="INFO">VALUE: 0.018350875</msg>
<status status="PASS" starttime="20201116 13:05:49.930" endtime="20201116 13:05:49.931"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.926" endtime="20201116 13:05:49.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.936" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:49.935" endtime="20201116 13:05:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:49.938" level="INFO">VALUE: [0.028399083, 0.038400153, 0.048401292, 0.058402458, 0.068403625, 0.078404736, 0.088405875, 0.098407, 0.108408125, 0.118409292, 0.128410417, 0.138411625, 0.148412694, 0.158413861, 0.168414972, 0.178416139, 0.188417264, 0.198418444, 0.208419542, 0.218420708, 0.228421833, 0.238423, 0.248424181, 0.258425278, 0.268426444, 0.278427569, 0.288428694, 0.298429861, 0.308430986, 0.318432125, 0.32843325, 0.338434403, 0.348435514, 0.358436681, 0.368437806, 0.378438958, 0.388440069, 0.398441236, 0.408442347, 0.418443514, 0.428444639, 0.438445792, 0.448446889, 0.458448069, 0.468449167, 0.478450333, 0.488451514, 0.498452611, 0.508453722, 0.518454958, 0.528456014, 0.538457194, 0.548458278, 0.558459458, 0.568460556, 0.578461722, 0.588462847, 0.598464, 0.608465125, 0.618466278, 0.628467389, 0.638468569, 0.648469736, 0.658470833, 0.668471944, 0.678473125, 0.688474236, 0.698475389, 0.7084765, 0.718477667, 0.728478778, 0.738479944, 0.748481056, 0.758482222, 0.768483347, 0.778484514, 0.788485667, 0.798486792, 0.808487889, 0.818489097, 0.828490181, 0.838491333, 0.848492444, 0.858493611, 0.868494736, 0.878495903, 0.888497, 0.898498167, 0.908499292, 0.918500444, 0.928501556, 0.938502806, 0.948503833, 0.958505056, 0.968506139, 0.978507292, 0.988508403, 0.998509556, 1.008510667, 1.018511833] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:49.938" endtime="20201116 13:05:49.939"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.933" endtime="20201116 13:05:49.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:49.942" endtime="20201116 13:05:49.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:49.945" endtime="20201116 13:05:49.969"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.943" endtime="20201116 13:05:49.970"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.940" endtime="20201116 13:05:49.970"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:47.428" endtime="20201116 13:05:49.970"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.903" endtime="20201116 13:05:49.971"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:44.902" endtime="20201116 13:05:49.971"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:49.973" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:49.983" endtime="20201116 13:05:52.085"></status>
</kw>
<msg timestamp="20201116 13:05:52.086" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 36584139, 'wakeups': [36594198, 36604198, 36614198, 36624198, 36634198...</msg>
<status status="PASS" starttime="20201116 13:05:49.981" endtime="20201116 13:05:52.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 36584139, 'wakeups': [36594198, 36604198, 36614198, 36624198, 36634198...</msg>
<status status="PASS" starttime="20201116 13:05:52.087" endtime="20201116 13:05:52.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:52.089" endtime="20201116 13:05:52.091"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.979" endtime="20201116 13:05:52.092"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.976" endtime="20201116 13:05:52.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:52.095" level="INFO">${RESULT} = {'wakeups': [36594198, 36604198, 36614198, 36624198, 36634198, 36644198, 36654198, 36664198, 36674198, 36684198, 36694198, 36704198, 36714198, 36724198, 36734198, 36744198, 36754198, 36764198, 3677419...</msg>
<status status="PASS" starttime="20201116 13:05:52.093" endtime="20201116 13:05:52.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.099" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:52.098" endtime="20201116 13:05:52.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.101" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:52.100" endtime="20201116 13:05:52.101"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.096" endtime="20201116 13:05:52.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.106" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:52.105" endtime="20201116 13:05:52.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.108" level="INFO">VALUE: 36584139</msg>
<status status="PASS" starttime="20201116 13:05:52.107" endtime="20201116 13:05:52.108"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.102" endtime="20201116 13:05:52.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.113" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:52.111" endtime="20201116 13:05:52.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.115" level="INFO">VALUE: [36594198, 36604198, 36614198, 36624198, 36634198, 36644198, 36654198, 36664198, 36674198, 36684198, 36694198, 36704198, 36714198, 36724198, 36734198, 36744198, 36754198, 36764198, 36774198, 36784198, 36794198, 36804198, 36814198, 36824198, 36834198, 36844198, 36854198, 36864198, 36874198, 36884198, 36894198, 36904198, 36914198, 36924198, 36934198, 36944198, 36954198, 36964198, 36974198, 36984198, 36994198, 37004198, 37014198, 37024198, 37034198, 37044198, 37054198, 37064198, 37074198, 37084198, 37094198, 37104198, 37114198, 37124198, 37134198, 37144198, 37154198, 37164198, 37174198, 37184198, 37194198, 37204198, 37214198, 37224198, 37234198, 37244198, 37254198, 37264198, 37274198, 37284198, 37294198, 37304198, 37314198, 37324198, 37334198, 37344198, 37354198, 37364198, 37374198, 37384198, 37394198, 37404198, 37414198, 37424198, 37434198, 37444198, 37454198, 37464198, 37474198, 37484198, 37494198, 37504198, 37514198, 37524198, 37534198, 37544198, 37554198, 37564198, 37574198, 37584198]</msg>
<status status="PASS" starttime="20201116 13:05:52.114" endtime="20201116 13:05:52.115"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.109" endtime="20201116 13:05:52.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:52.123" endtime="20201116 13:05:52.414"></status>
</kw>
<msg timestamp="20201116 13:05:52.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032709264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:52.121" endtime="20201116 13:05:52.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032709264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:52.418" endtime="20201116 13:05:52.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:52.425" endtime="20201116 13:05:52.427"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.118" endtime="20201116 13:05:52.427"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.116" endtime="20201116 13:05:52.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:52.452" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:52.429" endtime="20201116 13:05:52.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.456" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:52.455" endtime="20201116 13:05:52.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.458" level="INFO">VALUE: 0.022649375</msg>
<status status="PASS" starttime="20201116 13:05:52.457" endtime="20201116 13:05:52.458"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.453" endtime="20201116 13:05:52.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.464" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:52.463" endtime="20201116 13:05:52.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.466" level="INFO">VALUE: [0.032709264, 0.042710208, 0.052711431, 0.062712569, 0.072713681, 0.082714875, 0.092715986, 0.102717153, 0.11271825, 0.122719417, 0.132720542, 0.142721778, 0.152722819, 0.162724069, 0.172725125, 0.182726292, 0.192727389, 0.202728569, 0.212729681, 0.222730847, 0.232731958, 0.242733125, 0.252734236, 0.262735431, 0.272736528, 0.282737722, 0.292738833, 0.302739986, 0.312741097, 0.322742306, 0.332743389, 0.342744625, 0.352745667, 0.362746833, 0.372747958, 0.382749125, 0.392750236, 0.402751458, 0.412752569, 0.422753764, 0.432754819, 0.442756, 0.452757083, 0.46275825, 0.472759403, 0.482760528, 0.492761625, 0.502762792, 0.512763903, 0.522765097, 0.532766236, 0.542767333, 0.552768444, 0.562769625, 0.572770722, 0.582771903, 0.592773, 0.602774167, 0.612775264, 0.622776444, 0.632777556, 0.642778708, 0.652779833, 0.662780986, 0.672782097, 0.682783278, 0.692784361, 0.702785542, 0.712786653, 0.722787833, 0.732788944, 0.742790069, 0.752791208, 0.762792347, 0.772793458, 0.782794639, 0.792795764, 0.802796903, 0.812798014, 0.822799208, 0.832800333, 0.842801444, 0.852802583, 0.862803722, 0.872804833, 0.882806028, 0.892807111, 0.902808278, 0.912809389, 0.922810556, 0.932811681, 0.942812861, 0.952813958, 0.962815097, 0.972816222, 0.982817375, 0.992818556, 1.002819653, 1.012820764, 1.022821944] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:52.465" endtime="20201116 13:05:52.466"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.460" endtime="20201116 13:05:52.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:52.469" endtime="20201116 13:05:52.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:52.472" endtime="20201116 13:05:52.492"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.471" endtime="20201116 13:05:52.492"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.467" endtime="20201116 13:05:52.493"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.974" endtime="20201116 13:05:52.493"></status>
</kw>
<msg timestamp="20201116 13:05:52.493" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:52.501" endtime="20201116 13:05:54.621"></status>
</kw>
<msg timestamp="20201116 13:05:54.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 39102271, 'wakeups': [39112328, 39122330, 39132330, 39142330, 39152330...</msg>
<status status="PASS" starttime="20201116 13:05:52.500" endtime="20201116 13:05:54.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.624" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 39102271, 'wakeups': [39112328, 39122330, 39132330, 39142330, 39152330...</msg>
<status status="PASS" starttime="20201116 13:05:54.623" endtime="20201116 13:05:54.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:54.626" endtime="20201116 13:05:54.627"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.497" endtime="20201116 13:05:54.628"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.495" endtime="20201116 13:05:54.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:54.631" level="INFO">${RESULT} = {'wakeups': [39112328, 39122330, 39132330, 39142330, 39152330, 39162330, 39172330, 39182330, 39192330, 39202330, 39212330, 39222330, 39232330, 39242330, 39252330, 39262330, 39272330, 39282330, 3929233...</msg>
<status status="PASS" starttime="20201116 13:05:54.629" endtime="20201116 13:05:54.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.635" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:54.634" endtime="20201116 13:05:54.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.637" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:54.636" endtime="20201116 13:05:54.637"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.632" endtime="20201116 13:05:54.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.643" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:54.642" endtime="20201116 13:05:54.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.645" level="INFO">VALUE: 39102271</msg>
<status status="PASS" starttime="20201116 13:05:54.644" endtime="20201116 13:05:54.645"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.638" endtime="20201116 13:05:54.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.650" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:54.649" endtime="20201116 13:05:54.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.652" level="INFO">VALUE: [39112328, 39122330, 39132330, 39142330, 39152330, 39162330, 39172330, 39182330, 39192330, 39202330, 39212330, 39222330, 39232330, 39242330, 39252330, 39262330, 39272330, 39282330, 39292330, 39302330, 39312330, 39322330, 39332330, 39342330, 39352330, 39362330, 39372330, 39382330, 39392330, 39402330, 39412330, 39422330, 39432330, 39442330, 39452330, 39462330, 39472330, 39482330, 39492330, 39502330, 39512330, 39522330, 39532330, 39542330, 39552330, 39562330, 39572330, 39582330, 39592330, 39602330, 39612330, 39622330, 39632330, 39642330, 39652330, 39662330, 39672330, 39682330, 39692330, 39702330, 39712330, 39722330, 39732330, 39742330, 39752330, 39762330, 39772330, 39782330, 39792330, 39802330, 39812330, 39822330, 39832330, 39842330, 39852330, 39862330, 39872330, 39882330, 39892330, 39902330, 39912330, 39922330, 39932330, 39942330, 39952330, 39962330, 39972330, 39982330, 39992330, 40002330, 40012330, 40022330, 40032330, 40042330, 40052330, 40062330, 40072330, 40082330, 40092330, 40102330]</msg>
<status status="PASS" starttime="20201116 13:05:54.651" endtime="20201116 13:05:54.652"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.646" endtime="20201116 13:05:54.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:54.659" endtime="20201116 13:05:54.950"></status>
</kw>
<msg timestamp="20201116 13:05:54.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018212528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028271681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:54.658" endtime="20201116 13:05:54.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018212528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028271681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:54.954" endtime="20201116 13:05:54.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:54.962" endtime="20201116 13:05:54.963"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.655" endtime="20201116 13:05:54.964"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.653" endtime="20201116 13:05:54.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:54.987" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:54.965" endtime="20201116 13:05:54.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.996" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:54.995" endtime="20201116 13:05:54.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:54.998" level="INFO">VALUE: 0.018212528</msg>
<status status="PASS" starttime="20201116 13:05:54.997" endtime="20201116 13:05:54.998"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.992" endtime="20201116 13:05:54.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.004" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:55.003" endtime="20201116 13:05:55.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.006" level="INFO">VALUE: [0.028271681, 0.038273903, 0.048275139, 0.058276319, 0.068277458, 0.078278597, 0.088279694, 0.098280861, 0.108282, 0.118283167, 0.128284264, 0.138285431, 0.148286556, 0.158287736, 0.168288847, 0.17829, 0.188291125, 0.198292292, 0.208293403, 0.218294569, 0.228295694, 0.238296875, 0.248297972, 0.258299153, 0.268300278, 0.278301444, 0.288302556, 0.298303708, 0.308304833, 0.318306, 0.328307111, 0.338308278, 0.348309389, 0.358310542, 0.368311653, 0.378312819, 0.388313944, 0.398315097, 0.408316208, 0.418317375, 0.4283185, 0.438319639, 0.448320778, 0.458321917, 0.468323042, 0.478324194, 0.488325319, 0.498326472, 0.508327681, 0.518328778, 0.528329889, 0.538331069, 0.548332153, 0.558333333, 0.568334431, 0.578335611, 0.588336708, 0.598337889, 0.608338986, 0.618340153, 0.628341264, 0.638342431, 0.648343625, 0.658344708, 0.668345833, 0.678346986, 0.688348097, 0.698349264, 0.708350389, 0.718351542, 0.728352681, 0.738353833, 0.748354944, 0.758356097, 0.768357222, 0.778358389, 0.7883595, 0.798360667, 0.808361778, 0.818362958, 0.828364056, 0.838365236, 0.848366333, 0.8583675, 0.868368653, 0.878369778, 0.888370903, 0.898372083, 0.908373167, 0.918374347, 0.928375472, 0.938376625, 0.948377764, 0.958378903, 0.968380014, 0.978381181, 0.988382292, 0.998383486, 1.008384569, 1.01838575] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:55.005" endtime="20201116 13:05:55.007"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:54.999" endtime="20201116 13:05:55.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.009" endtime="20201116 13:05:55.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:55.013" endtime="20201116 13:05:55.032"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.011" endtime="20201116 13:05:55.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.008" endtime="20201116 13:05:55.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.494" endtime="20201116 13:05:55.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.972" endtime="20201116 13:05:55.034"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:49.971" endtime="20201116 13:05:55.034"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:55.037" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.044" endtime="20201116 13:05:57.165"></status>
</kw>
<msg timestamp="20201116 13:05:57.166" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 41645397, 'wakeups': [41655467, 41665468, 41675468, 41685468, 41695468...</msg>
<status status="PASS" starttime="20201116 13:05:55.043" endtime="20201116 13:05:57.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 41645397, 'wakeups': [41655467, 41665468, 41675468, 41685468, 41695468...</msg>
<status status="PASS" starttime="20201116 13:05:57.168" endtime="20201116 13:05:57.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.174" endtime="20201116 13:05:57.176"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.040" endtime="20201116 13:05:57.176"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.038" endtime="20201116 13:05:57.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:57.179" level="INFO">${RESULT} = {'wakeups': [41655467, 41665468, 41675468, 41685468, 41695468, 41705468, 41715468, 41725468, 41735468, 41745468, 41755468, 41765468, 41775468, 41785468, 41795468, 41805468, 41815468, 41825468, 4183546...</msg>
<status status="PASS" starttime="20201116 13:05:57.177" endtime="20201116 13:05:57.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.184" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:57.183" endtime="20201116 13:05:57.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.186" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:57.185" endtime="20201116 13:05:57.186"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.180" endtime="20201116 13:05:57.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.191" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:57.190" endtime="20201116 13:05:57.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.193" level="INFO">VALUE: 41645397</msg>
<status status="PASS" starttime="20201116 13:05:57.192" endtime="20201116 13:05:57.193"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.187" endtime="20201116 13:05:57.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.198" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:57.197" endtime="20201116 13:05:57.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.200" level="INFO">VALUE: [41655467, 41665468, 41675468, 41685468, 41695468, 41705468, 41715468, 41725468, 41735468, 41745468, 41755468, 41765468, 41775468, 41785468, 41795468, 41805468, 41815468, 41825468, 41835468, 41845468, 41855468, 41865468, 41875468, 41885468, 41895468, 41905468, 41915468, 41925468, 41935468, 41945468, 41955468, 41965468, 41975468, 41985468, 41995468, 42005468, 42015468, 42025468, 42035468, 42045468, 42055468, 42065468, 42075468, 42085468, 42095468, 42105468, 42115468, 42125468, 42135468, 42145468, 42155468, 42165468, 42175468, 42185468, 42195468, 42205468, 42215468, 42225468, 42235468, 42245468, 42255468, 42265468, 42275468, 42285468, 42295468, 42305468, 42315468, 42325468, 42335468, 42345468, 42355468, 42365468, 42375468, 42385468, 42395468, 42405468, 42415468, 42425468, 42435468, 42445468, 42455468, 42465468, 42475468, 42485468, 42495468, 42505468, 42515468, 42525468, 42535468, 42545468, 42555468, 42565468, 42575468, 42585468, 42595468, 42605468, 42615468, 42625468, 42635468, 42645468]</msg>
<status status="PASS" starttime="20201116 13:05:57.199" endtime="20201116 13:05:57.200"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.194" endtime="20201116 13:05:57.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.209" endtime="20201116 13:05:57.500"></status>
</kw>
<msg timestamp="20201116 13:05:57.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021010028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031081861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:57.206" endtime="20201116 13:05:57.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021010028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031081861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:57.504" endtime="20201116 13:05:57.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.511" endtime="20201116 13:05:57.513"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.203" endtime="20201116 13:05:57.513"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.201" endtime="20201116 13:05:57.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:57.537" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:05:57.515" endtime="20201116 13:05:57.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.541" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:57.540" endtime="20201116 13:05:57.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.543" level="INFO">VALUE: 0.021010028</msg>
<status status="PASS" starttime="20201116 13:05:57.542" endtime="20201116 13:05:57.544"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.538" endtime="20201116 13:05:57.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.549" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:57.548" endtime="20201116 13:05:57.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.551" level="INFO">VALUE: [0.031081861, 0.041084347, 0.051085042, 0.061086625, 0.071087333, 0.081088903, 0.091089625, 0.101091194, 0.111091917, 0.121093472, 0.131094181, 0.141095778, 0.151096472, 0.161098083, 0.171098764, 0.181100319, 0.191101056, 0.201102611, 0.211103319, 0.221104903, 0.231105625, 0.241107194, 0.251107889, 0.261109528, 0.271110194, 0.28111175, 0.291112458, 0.301114042, 0.31111475, 0.321116347, 0.331117042, 0.341118625, 0.351119319, 0.361120889, 0.371121611, 0.381123208, 0.391123889, 0.401125458, 0.411126181, 0.42112775, 0.431128458, 0.441130042, 0.451130764, 0.461132361, 0.471133028, 0.481134583, 0.491135292, 0.501136875, 0.511137583, 0.521139139, 0.531139847, 0.541141403, 0.551142111, 0.561143681, 0.571144389, 0.581145958, 0.591146667, 0.601148222, 0.611148944, 0.621150514, 0.631151208, 0.641152792, 0.651153528, 0.661155069, 0.671155764, 0.681157333, 0.691158042, 0.701159597, 0.711160306, 0.721161931, 0.731162597, 0.741164153, 0.751164903, 0.761166486, 0.771167139, 0.781168694, 0.791169403, 0.801170972, 0.811171681, 0.821173264, 0.831173958, 0.841175528, 0.851176264, 0.861177806, 0.871178528, 0.881180097, 0.891180806, 0.901182361, 0.911183069, 0.921184639, 0.931185333, 0.941186917, 0.951187639, 0.961189181, 0.971189889, 0.981191472, 0.991192167, 1.001193736, 1.011194444, 1.021196042] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:57.550" endtime="20201116 13:05:57.552"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.545" endtime="20201116 13:05:57.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.555" endtime="20201116 13:05:57.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:57.558" endtime="20201116 13:05:57.577"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.556" endtime="20201116 13:05:57.578"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.553" endtime="20201116 13:05:57.578"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.037" endtime="20201116 13:05:57.579"></status>
</kw>
<msg timestamp="20201116 13:05:57.579" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.588" endtime="20201116 13:05:59.708"></status>
</kw>
<msg timestamp="20201116 13:05:59.709" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 44188608, 'wakeups': [44198679, 44208679, 44218679, 44228679, 44238679...</msg>
<status status="PASS" starttime="20201116 13:05:57.586" endtime="20201116 13:05:59.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.715" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 44188608, 'wakeups': [44198679, 44208679, 44218679, 44228679, 44238679...</msg>
<status status="PASS" starttime="20201116 13:05:59.711" endtime="20201116 13:05:59.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:59.717" endtime="20201116 13:05:59.721"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.583" endtime="20201116 13:05:59.722"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.581" endtime="20201116 13:05:59.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:59.728" level="INFO">${RESULT} = {'wakeups': [44198679, 44208679, 44218679, 44228679, 44238679, 44248679, 44258679, 44268679, 44278679, 44288679, 44298679, 44308679, 44318679, 44328679, 44338679, 44348679, 44358679, 44368679, 4437867...</msg>
<status status="PASS" starttime="20201116 13:05:59.724" endtime="20201116 13:05:59.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.733" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:59.732" endtime="20201116 13:05:59.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.735" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:59.734" endtime="20201116 13:05:59.735"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:59.729" endtime="20201116 13:05:59.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.740" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:59.739" endtime="20201116 13:05:59.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.742" level="INFO">VALUE: 44188608</msg>
<status status="PASS" starttime="20201116 13:05:59.741" endtime="20201116 13:05:59.742"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:59.736" endtime="20201116 13:05:59.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.746" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:59.745" endtime="20201116 13:05:59.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:59.749" level="INFO">VALUE: [44198679, 44208679, 44218679, 44228679, 44238679, 44248679, 44258679, 44268679, 44278679, 44288679, 44298679, 44308679, 44318679, 44328679, 44338679, 44348679, 44358679, 44368679, 44378679, 44388679, 44398679, 44408679, 44418679, 44428679, 44438679, 44448679, 44458679, 44468679, 44478679, 44488679, 44498679, 44508679, 44518679, 44528679, 44538679, 44548679, 44558679, 44568679, 44578679, 44588679, 44598679, 44608679, 44618679, 44628679, 44638679, 44648679, 44658679, 44668679, 44678679, 44688679, 44698679, 44708679, 44718679, 44728679, 44738679, 44748679, 44758679, 44768679, 44778679, 44788679, 44798679, 44808679, 44818679, 44828679, 44838679, 44848679, 44858679, 44868679, 44878679, 44888679, 44898679, 44908679, 44918679, 44928679, 44938679, 44948679, 44958679, 44968679, 44978679, 44988679, 44998679, 45008679, 45018679, 45028679, 45038679, 45048679, 45058679, 45068679, 45078679, 45088679, 45098679, 45108679, 45118679, 45128679, 45138679, 45148679, 45158679, 45168679, 45178679, 45188679]</msg>
<status status="PASS" starttime="20201116 13:05:59.747" endtime="20201116 13:05:59.749"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:59.743" endtime="20201116 13:05:59.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:59.756" endtime="20201116 13:06:00.049"></status>
</kw>
<msg timestamp="20201116 13:06:00.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018949042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:59.755" endtime="20201116 13:06:00.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018949042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:00.053" endtime="20201116 13:06:00.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.060" endtime="20201116 13:06:00.062"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:59.752" endtime="20201116 13:06:00.062"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:59.751" endtime="20201116 13:06:00.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:00.087" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:06:00.063" endtime="20201116 13:06:00.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.091" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:00.090" endtime="20201116 13:06:00.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.093" level="INFO">VALUE: 0.018949042</msg>
<status status="PASS" starttime="20201116 13:06:00.092" endtime="20201116 13:06:00.093"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.087" endtime="20201116 13:06:00.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.098" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:00.097" endtime="20201116 13:06:00.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.100" level="INFO">VALUE: [0.029021361, 0.039022875, 0.049023986, 0.059025181, 0.069026306, 0.079027431, 0.089028556, 0.099029722, 0.109030847, 0.119032, 0.129033194, 0.139034319, 0.149035403, 0.159036569, 0.169037694, 0.179038861, 0.189039972, 0.199041139, 0.209042264, 0.2190435, 0.229044542, 0.23904575, 0.249046847, 0.259048, 0.269049111, 0.279050292, 0.289051389, 0.299052556, 0.309053681, 0.319054875, 0.329055986, 0.339057167, 0.34905825, 0.359059417, 0.369060542, 0.379061778, 0.389062875, 0.399064014, 0.409065111, 0.419066292, 0.429067403, 0.439068625, 0.449069694, 0.459070847, 0.469071972, 0.479073153, 0.489074264, 0.499075458, 0.509076556, 0.519077708, 0.529078819, 0.539079986, 0.549081111, 0.559082278, 0.569083403, 0.579084583, 0.589085681, 0.599086847, 0.609087972, 0.619089139, 0.62909025, 0.639091431, 0.649092611, 0.659093708, 0.669094847, 0.679096, 0.689097111, 0.699098292, 0.709099403, 0.719100569, 0.729101708, 0.739102847, 0.749104, 0.759105139, 0.769106278, 0.779107431, 0.789108556, 0.799109708, 0.809110889, 0.819112014, 0.829113125, 0.839114292, 0.849115417, 0.859116569, 0.869117722, 0.879118861, 0.889119972, 0.899121139, 0.909122292, 0.919123431, 0.929124556, 0.939125722, 0.949126847, 0.959128, 0.969129125, 0.979130292, 0.989131417, 0.999132569, 1.009133708, 1.019134875] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:00.099" endtime="20201116 13:06:00.101"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.094" endtime="20201116 13:06:00.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.104" endtime="20201116 13:06:00.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:00.107" endtime="20201116 13:06:00.126"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.105" endtime="20201116 13:06:00.127"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.102" endtime="20201116 13:06:00.132"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.580" endtime="20201116 13:06:00.132"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.035" endtime="20201116 13:06:00.132"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.034" endtime="20201116 13:06:00.133"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:00.135" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.143" endtime="20201116 13:06:02.263"></status>
</kw>
<msg timestamp="20201116 13:06:02.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 46744239, 'wakeups': [46754323, 46764324, 46774324, 46784324, 46794324...</msg>
<status status="PASS" starttime="20201116 13:06:00.142" endtime="20201116 13:06:02.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 46744239, 'wakeups': [46754323, 46764324, 46774324, 46784324, 46794324...</msg>
<status status="PASS" starttime="20201116 13:06:02.267" endtime="20201116 13:06:02.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.273" endtime="20201116 13:06:02.276"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.139" endtime="20201116 13:06:02.277"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.137" endtime="20201116 13:06:02.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:02.283" level="INFO">${RESULT} = {'wakeups': [46754323, 46764324, 46774324, 46784324, 46794324, 46804324, 46814324, 46824324, 46834324, 46844324, 46854324, 46864324, 46874324, 46884324, 46894324, 46904324, 46914324, 46924324, 4693432...</msg>
<status status="PASS" starttime="20201116 13:06:02.279" endtime="20201116 13:06:02.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.289" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:02.287" endtime="20201116 13:06:02.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.291" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:02.290" endtime="20201116 13:06:02.291"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.285" endtime="20201116 13:06:02.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.296" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:02.295" endtime="20201116 13:06:02.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.298" level="INFO">VALUE: 46744239</msg>
<status status="PASS" starttime="20201116 13:06:02.297" endtime="20201116 13:06:02.298"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.292" endtime="20201116 13:06:02.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.303" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:02.302" endtime="20201116 13:06:02.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.305" level="INFO">VALUE: [46754323, 46764324, 46774324, 46784324, 46794324, 46804324, 46814324, 46824324, 46834324, 46844324, 46854324, 46864324, 46874324, 46884324, 46894324, 46904324, 46914324, 46924324, 46934324, 46944324, 46954324, 46964324, 46974324, 46984324, 46994324, 47004324, 47014324, 47024324, 47034324, 47044324, 47054324, 47064324, 47074324, 47084324, 47094324, 47104324, 47114324, 47124324, 47134324, 47144324, 47154324, 47164324, 47174324, 47184324, 47194324, 47204324, 47214324, 47224324, 47234324, 47244324, 47254324, 47264324, 47274324, 47284324, 47294324, 47304324, 47314324, 47324324, 47334324, 47344324, 47354324, 47364324, 47374324, 47384324, 47394324, 47404324, 47414324, 47424324, 47434324, 47444324, 47454324, 47464324, 47474324, 47484324, 47494324, 47504324, 47514324, 47524324, 47534324, 47544324, 47554324, 47564324, 47574324, 47584324, 47594324, 47604324, 47614324, 47624324, 47634324, 47644324, 47654324, 47664324, 47674324, 47684324, 47694324, 47704324, 47714324, 47724324, 47734324, 47744324]</msg>
<status status="PASS" starttime="20201116 13:06:02.304" endtime="20201116 13:06:02.305"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.299" endtime="20201116 13:06:02.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.313" endtime="20201116 13:06:02.604"></status>
</kw>
<msg timestamp="20201116 13:06:02.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035610347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:02.311" endtime="20201116 13:06:02.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035610347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:02.608" endtime="20201116 13:06:02.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.615" endtime="20201116 13:06:02.617"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.308" endtime="20201116 13:06:02.617"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.306" endtime="20201116 13:06:02.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:02.642" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:06:02.618" endtime="20201116 13:06:02.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.647" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:02.646" endtime="20201116 13:06:02.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.649" level="INFO">VALUE: 0.025524875</msg>
<status status="PASS" starttime="20201116 13:06:02.648" endtime="20201116 13:06:02.649"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.642" endtime="20201116 13:06:02.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.654" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:02.653" endtime="20201116 13:06:02.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.656" level="INFO">VALUE: [0.035610347, 0.045612403, 0.055613542, 0.065614681, 0.075615792, 0.085616958, 0.095618083, 0.10561925, 0.115620361, 0.125621542, 0.135622653, 0.145623819, 0.155624931, 0.165626097, 0.175627236, 0.185628389, 0.1956295, 0.205630694, 0.215631792, 0.225632958, 0.235634069, 0.245635236, 0.255636361, 0.265637528, 0.275638639, 0.285639819, 0.295640944, 0.305642097, 0.315643208, 0.325644375, 0.335645514, 0.345646708, 0.355647792, 0.365648958, 0.375650069, 0.38565125, 0.395652361, 0.405653528, 0.415654653, 0.425655819, 0.435656931, 0.445658111, 0.455659236, 0.465660389, 0.475661514, 0.485662667, 0.495663806, 0.505664958, 0.515666069, 0.52566725, 0.535668375, 0.545669528, 0.555670653, 0.565671847, 0.575672931, 0.585674097, 0.595675222, 0.605676403, 0.615677514, 0.625678681, 0.635679778, 0.645680944, 0.655682097, 0.665683222, 0.675684333, 0.6856855, 0.695686694, 0.705687778, 0.715688875, 0.725690042, 0.735691153, 0.745692347, 0.755693458, 0.765694597, 0.775695708, 0.785696875, 0.795697986, 0.805699153, 0.815700264, 0.825701458, 0.835702542, 0.845703736, 0.855704819, 0.865706, 0.875707111, 0.885708278, 0.895709375, 0.905710542, 0.915711653, 0.925712819, 0.935713931, 0.945715097, 0.955716222, 0.965717375, 0.9757185, 0.985719708, 0.995720792, 1.005721944, 1.015723056, 1.025724222] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:02.655" endtime="20201116 13:06:02.657"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.650" endtime="20201116 13:06:02.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.659" endtime="20201116 13:06:02.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:02.663" endtime="20201116 13:06:02.682"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.661" endtime="20201116 13:06:02.683"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.658" endtime="20201116 13:06:02.683"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.136" endtime="20201116 13:06:02.683"></status>
</kw>
<msg timestamp="20201116 13:06:02.684" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.692" endtime="20201116 13:06:04.793"></status>
</kw>
<msg timestamp="20201116 13:06:04.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 49292388, 'wakeups': [49302472, 49312473, 49322473, 49332473, 49342473...</msg>
<status status="PASS" starttime="20201116 13:06:02.690" endtime="20201116 13:06:04.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.797" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 49292388, 'wakeups': [49302472, 49312473, 49322473, 49332473, 49342473...</msg>
<status status="PASS" starttime="20201116 13:06:04.795" endtime="20201116 13:06:04.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:04.798" endtime="20201116 13:06:04.800"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.688" endtime="20201116 13:06:04.800"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.686" endtime="20201116 13:06:04.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:04.804" level="INFO">${RESULT} = {'wakeups': [49302472, 49312473, 49322473, 49332473, 49342473, 49352473, 49362473, 49372473, 49382473, 49392473, 49402473, 49412473, 49422473, 49432473, 49442473, 49452473, 49462473, 49472473, 4948247...</msg>
<status status="PASS" starttime="20201116 13:06:04.802" endtime="20201116 13:06:04.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.808" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:04.807" endtime="20201116 13:06:04.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.810" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:04.809" endtime="20201116 13:06:04.810"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:04.804" endtime="20201116 13:06:04.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.815" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:04.814" endtime="20201116 13:06:04.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.817" level="INFO">VALUE: 49292388</msg>
<status status="PASS" starttime="20201116 13:06:04.816" endtime="20201116 13:06:04.817"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:04.811" endtime="20201116 13:06:04.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.821" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:04.821" endtime="20201116 13:06:04.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:04.824" level="INFO">VALUE: [49302472, 49312473, 49322473, 49332473, 49342473, 49352473, 49362473, 49372473, 49382473, 49392473, 49402473, 49412473, 49422473, 49432473, 49442473, 49452473, 49462473, 49472473, 49482473, 49492473, 49502473, 49512473, 49522473, 49532473, 49542473, 49552473, 49562473, 49572473, 49582473, 49592473, 49602473, 49612473, 49622473, 49632473, 49642473, 49652473, 49662473, 49672473, 49682473, 49692473, 49702473, 49712473, 49722473, 49732473, 49742473, 49752473, 49762473, 49772473, 49782473, 49792473, 49802473, 49812473, 49822473, 49832473, 49842473, 49852473, 49862473, 49872473, 49882473, 49892473, 49902473, 49912473, 49922473, 49932473, 49942473, 49952473, 49962473, 49972473, 49982473, 49992473, 50002473, 50012473, 50022473, 50032473, 50042473, 50052473, 50062473, 50072473, 50082473, 50092473, 50102473, 50112473, 50122473, 50132473, 50142473, 50152473, 50162473, 50172473, 50182473, 50192473, 50202473, 50212473, 50222473, 50232473, 50242473, 50252473, 50262473, 50272473, 50282473, 50292473]</msg>
<status status="PASS" starttime="20201116 13:06:04.823" endtime="20201116 13:06:04.824"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:04.818" endtime="20201116 13:06:04.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:04.832" endtime="20201116 13:06:05.122"></status>
</kw>
<msg timestamp="20201116 13:06:05.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028263125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:04.830" endtime="20201116 13:06:05.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028263125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:05.126" endtime="20201116 13:06:05.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.134" endtime="20201116 13:06:05.135"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:04.827" endtime="20201116 13:06:05.136"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:04.825" endtime="20201116 13:06:05.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:05.159" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:06:05.137" endtime="20201116 13:06:05.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.170" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:05.169" endtime="20201116 13:06:05.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.172" level="INFO">VALUE: 0.018177167</msg>
<status status="PASS" starttime="20201116 13:06:05.171" endtime="20201116 13:06:05.173"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.167" endtime="20201116 13:06:05.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.178" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:05.177" endtime="20201116 13:06:05.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.180" level="INFO">VALUE: [0.028263125, 0.038265167, 0.048266278, 0.058267444, 0.068268569, 0.078269736, 0.088270861, 0.098272014, 0.108273139, 0.118274292, 0.128275444, 0.138276597, 0.148277694, 0.158278875, 0.168279986, 0.178281167, 0.188282264, 0.198283431, 0.208284569, 0.218285736, 0.228286861, 0.238288, 0.248289139, 0.258290292, 0.268291403, 0.278292625, 0.28829375, 0.298294861, 0.308295986, 0.318297139, 0.328298278, 0.338299431, 0.348300542, 0.358301708, 0.368302833, 0.378304014, 0.388305125, 0.398306278, 0.408307417, 0.418308569, 0.428309694, 0.438310861, 0.448311972, 0.458313153, 0.468314264, 0.478315431, 0.488316542, 0.498317708, 0.508318875, 0.518320014, 0.528321153, 0.538322306, 0.548323444, 0.558324569, 0.568325694, 0.578326875, 0.588327972, 0.598329139, 0.608330278, 0.618331444, 0.628332625, 0.638333722, 0.648334847, 0.658336, 0.668337139, 0.678338292, 0.688339403, 0.698340569, 0.708341694, 0.718342861, 0.728344, 0.738345167, 0.748346264, 0.758347431, 0.768348556, 0.778349722, 0.788350833, 0.798352, 0.808353139, 0.818354333, 0.828355417, 0.838356583, 0.848357694, 0.858358875, 0.868359986, 0.878361153, 0.888362264, 0.898363431, 0.908364556, 0.918365778, 0.928366847, 0.938368014, 0.948369125, 0.958370292, 0.968371417, 0.978372583, 0.988373708, 0.998374875, 1.008375986, 1.018377167] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:05.179" endtime="20201116 13:06:05.180"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.174" endtime="20201116 13:06:05.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.183" endtime="20201116 13:06:05.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:05.186" endtime="20201116 13:06:05.206"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.185" endtime="20201116 13:06:05.206"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.181" endtime="20201116 13:06:05.207"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.684" endtime="20201116 13:06:05.207"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.134" endtime="20201116 13:06:05.207"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.133" endtime="20201116 13:06:05.207"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:05.210" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.219" endtime="20201116 13:06:07.319"></status>
</kw>
<msg timestamp="20201116 13:06:07.320" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 51819907, 'wakeups': [51830006, 51840008, 51850008, 51860008, 518700...</msg>
<status status="PASS" starttime="20201116 13:06:05.218" endtime="20201116 13:06:07.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.323" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 51819907, 'wakeups': [51830006, 51840008, 51850008, 51860008, 518700...</msg>
<status status="PASS" starttime="20201116 13:06:07.321" endtime="20201116 13:06:07.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.324" endtime="20201116 13:06:07.326"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.215" endtime="20201116 13:06:07.326"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.212" endtime="20201116 13:06:07.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:07.329" level="INFO">${RESULT} = {'wakeups': [51830006, 51840008, 51850008, 51860008, 51870008, 51880008, 51890008, 51900008, 51910008, 51920008, 51930008, 51940008, 51950008, 51960008, 51970008, 51980008, 51990008, 52000008, 5201000...</msg>
<status status="PASS" starttime="20201116 13:06:07.327" endtime="20201116 13:06:07.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.334" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:07.332" endtime="20201116 13:06:07.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.336" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:07.335" endtime="20201116 13:06:07.336"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.330" endtime="20201116 13:06:07.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.341" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:07.340" endtime="20201116 13:06:07.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.343" level="INFO">VALUE: 51819907</msg>
<status status="PASS" starttime="20201116 13:06:07.342" endtime="20201116 13:06:07.343"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.337" endtime="20201116 13:06:07.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.348" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:07.347" endtime="20201116 13:06:07.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.350" level="INFO">VALUE: [51830006, 51840008, 51850008, 51860008, 51870008, 51880008, 51890008, 51900008, 51910008, 51920008, 51930008, 51940008, 51950008, 51960008, 51970008, 51980008, 51990008, 52000008, 52010008, 52020008, 52030008, 52040008, 52050008, 52060008, 52070008, 52080008, 52090008, 52100008, 52110008, 52120008, 52130008, 52140008, 52150008, 52160008, 52170008, 52180008, 52190008, 52200008, 52210008, 52220008, 52230008, 52240008, 52250008, 52260008, 52270008, 52280008, 52290008, 52300008, 52310008, 52320008, 52330008, 52340008, 52350008, 52360008, 52370008, 52380008, 52390008, 52400008, 52410008, 52420008, 52430008, 52440008, 52450008, 52460008, 52470008, 52480008, 52490008, 52500008, 52510008, 52520008, 52530008, 52540008, 52550008, 52560008, 52570008, 52580008, 52590008, 52600008, 52610008, 52620008, 52630008, 52640008, 52650008, 52660008, 52670008, 52680008, 52690008, 52700008, 52710008, 52720008, 52730008, 52740008, 52750008, 52760008, 52770008, 52780008, 52790008, 52800008, 52810008, 52820008]</msg>
<status status="PASS" starttime="20201116 13:06:07.349" endtime="20201116 13:06:07.350"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.344" endtime="20201116 13:06:07.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.357" endtime="20201116 13:06:07.647"></status>
</kw>
<msg timestamp="20201116 13:06:07.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032131125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:07.356" endtime="20201116 13:06:07.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032131125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:07.651" endtime="20201116 13:06:07.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.659" endtime="20201116 13:06:07.660"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.353" endtime="20201116 13:06:07.661"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.351" endtime="20201116 13:06:07.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:07.687" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:06:07.662" endtime="20201116 13:06:07.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.691" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:07.690" endtime="20201116 13:06:07.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.693" level="INFO">VALUE: 0.022030653</msg>
<status status="PASS" starttime="20201116 13:06:07.692" endtime="20201116 13:06:07.694"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.688" endtime="20201116 13:06:07.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.699" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:07.698" endtime="20201116 13:06:07.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.701" level="INFO">VALUE: [0.032131125, 0.042134208, 0.052135333, 0.0621365, 0.072137611, 0.082138792, 0.092139903, 0.102141069, 0.112142181, 0.122143347, 0.132144472, 0.142145667, 0.15214675, 0.162147917, 0.172149028, 0.182150208, 0.192151333, 0.202152486, 0.212153597, 0.222154764, 0.232155889, 0.242157056, 0.252158167, 0.262159417, 0.272160458, 0.282161653, 0.292162792, 0.302163917, 0.312165028, 0.322166194, 0.332167319, 0.342168486, 0.352169611, 0.362170764, 0.372171889, 0.382173056, 0.392174181, 0.402175347, 0.412176472, 0.422177625, 0.432178764, 0.442179917, 0.452181069, 0.46218225, 0.472183333, 0.482184486, 0.492185597, 0.502186792, 0.512187903, 0.522189069, 0.532190194, 0.542191333, 0.552192472, 0.562193611, 0.572194736, 0.582195931, 0.592197014, 0.602198167, 0.612199278, 0.622200444, 0.632201556, 0.642202722, 0.652203833, 0.662205, 0.672206125, 0.682207292, 0.692208403, 0.702209556, 0.712210667, 0.722211833, 0.732212944, 0.742214111, 0.752215222, 0.762216389, 0.7722175, 0.782218681, 0.792219792, 0.802220944, 0.812222097, 0.822223236, 0.832224347, 0.842225542, 0.852226611, 0.862227806, 0.872228889, 0.882230056, 0.892231167, 0.902232333, 0.912233444, 0.922234625, 0.932235736, 0.942236889, 0.952238014, 0.962239208, 0.972240333, 0.982241458, 0.992242583, 1.002243736, 1.012244847, 1.022246014] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:07.700" endtime="20201116 13:06:07.702"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.695" endtime="20201116 13:06:07.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.705" endtime="20201116 13:06:07.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:07.708" endtime="20201116 13:06:07.727"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.706" endtime="20201116 13:06:07.728"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.703" endtime="20201116 13:06:07.728"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.211" endtime="20201116 13:06:07.729"></status>
</kw>
<msg timestamp="20201116 13:06:07.729" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.737" endtime="20201116 13:06:09.857"></status>
</kw>
<msg timestamp="20201116 13:06:09.858" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 54337807, 'wakeups': [54347906, 54357908, 54367908, 54377908, 543879...</msg>
<status status="PASS" starttime="20201116 13:06:07.735" endtime="20201116 13:06:09.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.864" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 54337807, 'wakeups': [54347906, 54357908, 54367908, 54377908, 543879...</msg>
<status status="PASS" starttime="20201116 13:06:09.860" endtime="20201116 13:06:09.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:09.866" endtime="20201116 13:06:09.869"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.733" endtime="20201116 13:06:09.871"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.731" endtime="20201116 13:06:09.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:09.879" level="INFO">${RESULT} = {'wakeups': [54347906, 54357908, 54367908, 54377908, 54387908, 54397908, 54407908, 54417908, 54427908, 54437908, 54447908, 54457908, 54467908, 54477908, 54487908, 54497908, 54507908, 54517908, 5452790...</msg>
<status status="PASS" starttime="20201116 13:06:09.873" endtime="20201116 13:06:09.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.888" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:09.885" endtime="20201116 13:06:09.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.892" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:09.890" endtime="20201116 13:06:09.892"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:09.881" endtime="20201116 13:06:09.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.900" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:09.899" endtime="20201116 13:06:09.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.902" level="INFO">VALUE: 54337807</msg>
<status status="PASS" starttime="20201116 13:06:09.901" endtime="20201116 13:06:09.902"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:09.895" endtime="20201116 13:06:09.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.907" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:09.906" endtime="20201116 13:06:09.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:09.909" level="INFO">VALUE: [54347906, 54357908, 54367908, 54377908, 54387908, 54397908, 54407908, 54417908, 54427908, 54437908, 54447908, 54457908, 54467908, 54477908, 54487908, 54497908, 54507908, 54517908, 54527908, 54537908, 54547908, 54557908, 54567908, 54577908, 54587908, 54597908, 54607908, 54617908, 54627908, 54637908, 54647908, 54657908, 54667908, 54677908, 54687908, 54697908, 54707908, 54717908, 54727908, 54737908, 54747908, 54757908, 54767908, 54777908, 54787908, 54797908, 54807908, 54817908, 54827908, 54837908, 54847908, 54857908, 54867908, 54877908, 54887908, 54897908, 54907908, 54917908, 54927908, 54937908, 54947908, 54957908, 54967908, 54977908, 54987908, 54997908, 55007908, 55017908, 55027908, 55037908, 55047908, 55057908, 55067908, 55077908, 55087908, 55097908, 55107908, 55117908, 55127908, 55137908, 55147908, 55157908, 55167908, 55177908, 55187908, 55197908, 55207908, 55217908, 55227908, 55237908, 55247908, 55257908, 55267908, 55277908, 55287908, 55297908, 55307908, 55317908, 55327908, 55337908]</msg>
<status status="PASS" starttime="20201116 13:06:09.908" endtime="20201116 13:06:09.909"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:09.903" endtime="20201116 13:06:09.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:09.917" endtime="20201116 13:06:10.208"></status>
</kw>
<msg timestamp="20201116 13:06:10.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02834775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:09.915" endtime="20201116 13:06:10.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018247333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02834775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:10.211" endtime="20201116 13:06:10.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.219" endtime="20201116 13:06:10.221"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:09.912" endtime="20201116 13:06:10.221"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:09.910" endtime="20201116 13:06:10.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:10.245" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201116 13:06:10.222" endtime="20201116 13:06:10.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.250" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:10.249" endtime="20201116 13:06:10.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.252" level="INFO">VALUE: 0.018247333</msg>
<status status="PASS" starttime="20201116 13:06:10.251" endtime="20201116 13:06:10.252"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.246" endtime="20201116 13:06:10.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.257" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:10.256" endtime="20201116 13:06:10.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.259" level="INFO">VALUE: [0.02834775, 0.038350833, 0.048351944, 0.058353111, 0.068354236, 0.078355389, 0.088356583, 0.098357681, 0.108358819, 0.118359958, 0.128361083, 0.138362278, 0.148363375, 0.158364528, 0.168365667, 0.178366819, 0.188367944, 0.198369097, 0.208370236, 0.218371389, 0.2283725, 0.238373667, 0.248374806, 0.258375958, 0.268377069, 0.278378236, 0.288379361, 0.298380556, 0.308381653, 0.318382819, 0.328383931, 0.338385097, 0.348386236, 0.358387403, 0.368388528, 0.378389681, 0.388390806, 0.398391958, 0.408393083, 0.418394264, 0.428395417, 0.438396528, 0.448397653, 0.458398819, 0.468399944, 0.478401181, 0.488402222, 0.498403389, 0.508404528, 0.518405681, 0.528406806, 0.538407972, 0.548409083, 0.558410278, 0.568411389, 0.578412542, 0.588413667, 0.598414833, 0.608415944, 0.618417139, 0.62841825, 0.638419375, 0.648420486, 0.658421667, 0.668422792, 0.678423944, 0.688425056, 0.698426194, 0.708427319, 0.718428486, 0.728429583, 0.73843075, 0.748431861, 0.758433028, 0.768434194, 0.778435292, 0.788436403, 0.798437583, 0.808438681, 0.818439847, 0.828441042, 0.838442181, 0.84844325, 0.858444417, 0.868445514, 0.878446681, 0.888447792, 0.898448944, 0.908450056, 0.918451236, 0.928452333, 0.9384535, 0.948454611, 0.958455847, 0.968456903, 0.978458056, 0.988459167, 0.998460347, 1.008461472, 1.018462597] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:10.258" endtime="20201116 13:06:10.260"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.253" endtime="20201116 13:06:10.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.262" endtime="20201116 13:06:10.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:10.266" endtime="20201116 13:06:10.285"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.264" endtime="20201116 13:06:10.286"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.261" endtime="20201116 13:06:10.286"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.730" endtime="20201116 13:06:10.287"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.209" endtime="20201116 13:06:10.287"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.208" endtime="20201116 13:06:10.287"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.448" endtime="20201116 13:06:10.287"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:05:16.343" endtime="20201116 13:06:10.290" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:05:11.907" endtime="20201116 13:06:10.297"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:05:00.690" endtime="20201116 13:06:10.309"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_arduino-due</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
