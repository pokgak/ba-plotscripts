<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:04:54.442" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:04:55.005" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:04:55.013" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:04:55.989" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:04:55.003" endtime="20201116 13:04:55.989"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:04:55.992" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:04:55.990" endtime="20201116 13:04:55.992"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:55.002" endtime="20201116 13:04:55.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:55.995" endtime="20201116 13:04:56.179"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:55.993" endtime="20201116 13:04:56.179"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.192" endtime="20201116 13:04:56.213"></status>
</kw>
<msg timestamp="20201116 13:04:56.213" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:56.190" endtime="20201116 13:04:56.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:56.214" endtime="20201116 13:04:56.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.219" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:56.217" endtime="20201116 13:04:56.219"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:56.188" endtime="20201116 13:04:56.220"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:56.186" endtime="20201116 13:04:56.221"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.184" endtime="20201116 13:04:56.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:56.225" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:56.224" endtime="20201116 13:04:56.225"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.222" endtime="20201116 13:04:56.225"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.183" endtime="20201116 13:04:56.226"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.183" endtime="20201116 13:04:56.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.227" endtime="20201116 13:04:56.228"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.181" endtime="20201116 13:04:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.229" endtime="20201116 13:04:56.231"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.180" endtime="20201116 13:04:56.231"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:55.000" endtime="20201116 13:04:56.232"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:56.238" endtime="20201116 13:04:56.257"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.236" endtime="20201116 13:04:56.258"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.272" endtime="20201116 13:04:56.289"></status>
</kw>
<msg timestamp="20201116 13:04:56.289" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:56.270" endtime="20201116 13:04:56.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:56.290" endtime="20201116 13:04:56.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.295" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:56.293" endtime="20201116 13:04:56.295"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:56.267" endtime="20201116 13:04:56.296"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:56.265" endtime="20201116 13:04:56.296"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.263" endtime="20201116 13:04:56.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:56.300" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:56.299" endtime="20201116 13:04:56.301"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.297" endtime="20201116 13:04:56.301"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.262" endtime="20201116 13:04:56.301"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.262" endtime="20201116 13:04:56.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.302" endtime="20201116 13:04:56.303"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.260" endtime="20201116 13:04:56.304"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.259" endtime="20201116 13:04:56.304"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.235" endtime="20201116 13:04:56.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.312" endtime="20201116 13:04:56.324"></status>
</kw>
<msg timestamp="20201116 13:04:56.324" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:56.310" endtime="20201116 13:04:56.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.327" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:56.325" endtime="20201116 13:04:56.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.328" endtime="20201116 13:04:56.330"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.307" endtime="20201116 13:04:56.330"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.305" endtime="20201116 13:04:56.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.335" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:04:56.334" endtime="20201116 13:04:56.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.337" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201116 13:04:56.336" endtime="20201116 13:04:56.337"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.331" endtime="20201116 13:04:56.338"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:04:56.232" endtime="20201116 13:04:56.339" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:04:54.556" endtime="20201116 13:04:56.341"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.393" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:04:56.401" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:04:57.435" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:04:56.391" endtime="20201116 13:04:57.437"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.442" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:04:57.439" endtime="20201116 13:04:57.442"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.390" endtime="20201116 13:04:57.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:57.448" endtime="20201116 13:04:57.730"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.445" endtime="20201116 13:04:57.730"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.742" endtime="20201116 13:04:57.762"></status>
</kw>
<msg timestamp="20201116 13:04:57.763" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:57.741" endtime="20201116 13:04:57.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:57.764" endtime="20201116 13:04:57.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:57.766" endtime="20201116 13:04:57.769"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:57.739" endtime="20201116 13:04:57.769"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:57.737" endtime="20201116 13:04:57.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.735" endtime="20201116 13:04:57.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:57.774" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:57.773" endtime="20201116 13:04:57.774"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.771" endtime="20201116 13:04:57.775"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.734" endtime="20201116 13:04:57.775"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.734" endtime="20201116 13:04:57.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.776" endtime="20201116 13:04:57.777"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.733" endtime="20201116 13:04:57.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.778" endtime="20201116 13:04:57.780"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.731" endtime="20201116 13:04:57.780"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.389" endtime="20201116 13:04:57.781"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:57.787" endtime="20201116 13:04:57.807"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.785" endtime="20201116 13:04:57.808"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.821" endtime="20201116 13:04:57.839"></status>
</kw>
<msg timestamp="20201116 13:04:57.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:57.819" endtime="20201116 13:04:57.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.843" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:57.841" endtime="20201116 13:04:57.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.846" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:57.844" endtime="20201116 13:04:57.846"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:57.817" endtime="20201116 13:04:57.847"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:57.814" endtime="20201116 13:04:57.847"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.813" endtime="20201116 13:04:57.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:57.851" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:57.851" endtime="20201116 13:04:57.852"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.849" endtime="20201116 13:04:57.852"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.812" endtime="20201116 13:04:57.852"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.811" endtime="20201116 13:04:57.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.853" endtime="20201116 13:04:57.855"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.810" endtime="20201116 13:04:57.855"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.809" endtime="20201116 13:04:57.856"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.784" endtime="20201116 13:04:57.856"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:04:57.860" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.869" endtime="20201116 13:04:59.948"></status>
</kw>
<msg timestamp="20201116 13:04:59.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 371395, 'wakeups': [381423, 391412, 401402, 411402, 421402, 431402, 44...</msg>
<status status="PASS" starttime="20201116 13:04:57.866" endtime="20201116 13:04:59.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.955" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 371395, 'wakeups': [381423, 391412, 401402, 411402, 421402, 431402, 44...</msg>
<status status="PASS" starttime="20201116 13:04:59.951" endtime="20201116 13:04:59.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:59.957" endtime="20201116 13:04:59.960"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.864" endtime="20201116 13:04:59.961"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.862" endtime="20201116 13:04:59.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:04:59.968" level="INFO">${RESULT} = {'start-time': 371395, 'timer-interval': 10000, 'timer-count': 1, 'wakeups': [381423, 391412, 401402, 411402, 421402, 431402, 441402, 451402, 461402, 471402, 481402, 491402, 501402, 511402, 521402, 53...</msg>
<status status="PASS" starttime="20201116 13:04:59.964" endtime="20201116 13:04:59.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.976" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:04:59.974" endtime="20201116 13:04:59.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.980" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:04:59.979" endtime="20201116 13:04:59.981"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.970" endtime="20201116 13:04:59.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.991" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:04:59.989" endtime="20201116 13:04:59.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.995" level="INFO">VALUE: 371395</msg>
<status status="PASS" starttime="20201116 13:04:59.993" endtime="20201116 13:04:59.996"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.983" endtime="20201116 13:04:59.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.006" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:00.004" endtime="20201116 13:05:00.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.009" level="INFO">VALUE: [381423, 391412, 401402, 411402, 421402, 431402, 441402, 451402, 461402, 471402, 481402, 491402, 501402, 511402, 521402, 531402, 541402, 551402, 561402, 571402, 581402, 591402, 601402, 611402, 621402, 631402, 641402, 651402, 661402, 671402, 681402, 691402, 701402, 711402, 721402, 731402, 741402, 751402, 761402, 771402, 781402, 791402, 801402, 811402, 821402, 831402, 841402, 851402, 861402, 871402, 881402, 891402, 901402, 911402, 921402, 931402, 941402, 951402, 961402, 971402, 981402, 991402, 1001402, 1011402, 1021402, 1031402, 1041402, 1051402, 1061402, 1071402, 1081402, 1091402, 1101402, 1111402, 1121402, 1131402, 1141402, 1151402, 1161402, 1171402, 1181402, 1191402, 1201402, 1211402, 1221402, 1231402, 1241402, 1251402, 1261402, 1271402, 1281402, 1291402, 1301402, 1311402, 1321402, 1331402, 1341402, 1351402, 1361402, 1371402]</msg>
<status status="PASS" starttime="20201116 13:05:00.008" endtime="20201116 13:05:00.009"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.998" endtime="20201116 13:05:00.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:00.016" endtime="20201116 13:05:00.312"></status>
</kw>
<msg timestamp="20201116 13:05:00.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070534931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080564194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:00.015" endtime="20201116 13:05:00.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070534931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080564194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:00.316" endtime="20201116 13:05:00.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:00.323" endtime="20201116 13:05:00.325"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.012" endtime="20201116 13:05:00.325"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.010" endtime="20201116 13:05:00.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:00.350" level="INFO">${RESULT} = {'diff': [0, 0.01002926300000001, 0.00998956999999999, 0.00999090300000001, 0.010000943999999998, 0.010000916999999998, 0.010000916000000012, 0.010000916999999998, 0.010000999999999982, 0.010000847000...</msg>
<status status="PASS" starttime="20201116 13:05:00.327" endtime="20201116 13:05:00.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.354" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:00.353" endtime="20201116 13:05:00.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.356" level="INFO">VALUE: 0.070534931</msg>
<status status="PASS" starttime="20201116 13:05:00.355" endtime="20201116 13:05:00.357"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.351" endtime="20201116 13:05:00.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.362" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:00.361" endtime="20201116 13:05:00.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:00.364" level="INFO">VALUE: [0.080564194, 0.090553764, 0.100544667, 0.110545611, 0.120546528, 0.130547444, 0.140548361, 0.150549361, 0.160550208, 0.170551125, 0.180552056, 0.190552972, 0.200553903, 0.210554819, 0.220555778, 0.230556667, 0.240557597, 0.250558556, 0.260559444, 0.270560375, 0.280561306, 0.290562222, 0.300563139, 0.310564069, 0.320564986, 0.330565917, 0.340566833, 0.350567778, 0.360568681, 0.370569611, 0.380570528, 0.390571458, 0.400572389, 0.410573306, 0.420574222, 0.430575167, 0.440576056, 0.450576986, 0.460577889, 0.470578833, 0.48057975, 0.490580667, 0.500581583, 0.510582528, 0.520583458, 0.530584347, 0.540585333, 0.550586194, 0.560587111, 0.570588042, 0.580588958, 0.590589875, 0.600590806, 0.610591736, 0.620592639, 0.630593569, 0.6405945, 0.650595403, 0.660596333, 0.670597264, 0.680598181, 0.690599097, 0.700600014, 0.710601, 0.720601861, 0.730602792, 0.740603764, 0.750604639, 0.760605569, 0.770606486, 0.780607403, 0.790608333, 0.80060925, 0.810610181, 0.820611097, 0.830612028, 0.840612944, 0.850613875, 0.860614847, 0.870615736, 0.880616639, 0.890617583, 0.900618486, 0.910619417, 0.920620347, 0.930621347, 0.940622181, 0.950623111, 0.960624042, 0.970624972, 0.980625875, 0.990626819, 1.00062775, 1.010628653, 1.020629583, 1.0306305, 1.040631417, 1.050632361, 1.060633264, 1.070634181] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:00.363" endtime="20201116 13:05:00.364"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.358" endtime="20201116 13:05:00.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:00.367" endtime="20201116 13:05:00.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:00.371" endtime="20201116 13:05:00.390"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.369" endtime="20201116 13:05:00.391"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.365" endtime="20201116 13:05:00.391"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.860" endtime="20201116 13:05:00.391"></status>
</kw>
<msg timestamp="20201116 13:05:00.392" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:00.400" endtime="20201116 13:05:02.482"></status>
</kw>
<msg timestamp="20201116 13:05:02.484" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2901792, 'wakeups': [2911798, 2921799, 2931799, 2941799, 2951799, 2961...</msg>
<status status="PASS" starttime="20201116 13:05:00.398" endtime="20201116 13:05:02.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2901792, 'wakeups': [2911798, 2921799, 2931799, 2941799, 2951799, 2961...</msg>
<status status="PASS" starttime="20201116 13:05:02.486" endtime="20201116 13:05:02.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.492" endtime="20201116 13:05:02.495"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.396" endtime="20201116 13:05:02.496"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.394" endtime="20201116 13:05:02.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:02.503" level="INFO">${RESULT} = {'start-time': 2901792, 'timer-interval': 10000, 'timer-count': 1, 'wakeups': [2911798, 2921799, 2931799, 2941799, 2951799, 2961799, 2971799, 2981799, 2991799, 3001799, 3011799, 3021799, 3031799, 3041...</msg>
<status status="PASS" starttime="20201116 13:05:02.499" endtime="20201116 13:05:02.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.511" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:02.509" endtime="20201116 13:05:02.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.515" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:02.513" endtime="20201116 13:05:02.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.504" endtime="20201116 13:05:02.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.527" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:02.525" endtime="20201116 13:05:02.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.531" level="INFO">VALUE: 2901792</msg>
<status status="PASS" starttime="20201116 13:05:02.530" endtime="20201116 13:05:02.532"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.520" endtime="20201116 13:05:02.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.542" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:02.540" endtime="20201116 13:05:02.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.546" level="INFO">VALUE: [2911798, 2921799, 2931799, 2941799, 2951799, 2961799, 2971799, 2981799, 2991799, 3001799, 3011799, 3021799, 3031799, 3041799, 3051799, 3061799, 3071799, 3081799, 3091799, 3101799, 3111799, 3121799, 3131799, 3141799, 3151799, 3161799, 3171799, 3181799, 3191799, 3201799, 3211799, 3221799, 3231799, 3241799, 3251799, 3261799, 3271799, 3281799, 3291799, 3301799, 3311799, 3321799, 3331799, 3341799, 3351799, 3361799, 3371799, 3381799, 3391799, 3401799, 3411799, 3421799, 3431799, 3441799, 3451799, 3461799, 3471799, 3481799, 3491799, 3501799, 3511799, 3521799, 3531799, 3541799, 3551799, 3561799, 3571799, 3581799, 3591799, 3601799, 3611799, 3621799, 3631799, 3641799, 3651799, 3661799, 3671799, 3681799, 3691799, 3701799, 3711799, 3721799, 3731799, 3741799, 3751799, 3761799, 3771799, 3781799, 3791799, 3801799, 3811799, 3821799, 3831799, 3841799, 3851799, 3861799, 3871799, 3881799, 3891799, 3901799]</msg>
<status status="PASS" starttime="20201116 13:05:02.544" endtime="20201116 13:05:02.547"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.534" endtime="20201116 13:05:02.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.562" endtime="20201116 13:05:02.855"></status>
</kw>
<msg timestamp="20201116 13:05:02.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018056125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028063389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:02.558" endtime="20201116 13:05:02.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018056125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028063389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:02.859" endtime="20201116 13:05:02.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.866" endtime="20201116 13:05:02.868"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.553" endtime="20201116 13:05:02.868"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.549" endtime="20201116 13:05:02.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:02.893" level="INFO">${RESULT} = {'diff': [0, 0.010007264000000002, 0.010001889, 0.010000943999999998, 0.010000902999999998, 0.010000931000000005, 0.010000986000000003, 0.010000888999999999, 0.010000888, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:05:02.869" endtime="20201116 13:05:02.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.898" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:02.896" endtime="20201116 13:05:02.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.900" level="INFO">VALUE: 0.018056125</msg>
<status status="PASS" starttime="20201116 13:05:02.899" endtime="20201116 13:05:02.900"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.894" endtime="20201116 13:05:02.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.905" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:02.904" endtime="20201116 13:05:02.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.907" level="INFO">VALUE: [0.028063389, 0.038065278, 0.048066222, 0.058067125, 0.068068056, 0.078069042, 0.088069931, 0.098070819, 0.108071736, 0.118072667, 0.128073583, 0.138074528, 0.148075431, 0.158076361, 0.168077278, 0.178078194, 0.188079139, 0.198080056, 0.208080972, 0.218081903, 0.228082833, 0.238083736, 0.248084681, 0.258085583, 0.268086514, 0.278087431, 0.288088361, 0.298089292, 0.308090208, 0.318091125, 0.328092056, 0.338093, 0.348093917, 0.358094819, 0.36809575, 0.378096681, 0.388097597, 0.398098597, 0.408099444, 0.418100375, 0.428101292, 0.438102208, 0.448103139, 0.458104069, 0.468104972, 0.478105889, 0.488106819, 0.498107736, 0.508108694, 0.518109583, 0.528110514, 0.538111431, 0.548112403, 0.558113264, 0.568114194, 0.578115125, 0.588116028, 0.598116958, 0.608117889, 0.618118819, 0.628119722, 0.638120639, 0.648121569, 0.658122486, 0.668123417, 0.678124333, 0.688125264, 0.698126181, 0.708127111, 0.718128042, 0.728128944, 0.738129875, 0.748130806, 0.758131708, 0.768132639, 0.778133556, 0.788134486, 0.798135417, 0.808136361, 0.818137264, 0.828138194, 0.838139097, 0.848140028, 0.858140958, 0.868141875, 0.878142792, 0.888143722, 0.898144653, 0.908145569, 0.9181465, 0.928147431, 0.938148361, 0.948149264, 0.958150181, 0.968151125, 0.978152028, 0.988152958, 0.998153875, 1.008154819, 1.018155764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:02.906" endtime="20201116 13:05:02.908"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.901" endtime="20201116 13:05:02.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.910" endtime="20201116 13:05:02.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:02.914" endtime="20201116 13:05:02.933"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.912" endtime="20201116 13:05:02.933"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.909" endtime="20201116 13:05:02.934"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:00.392" endtime="20201116 13:05:02.934"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.858" endtime="20201116 13:05:02.934"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.857" endtime="20201116 13:05:02.935"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:02.937" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.945" endtime="20201116 13:05:05.028"></status>
</kw>
<msg timestamp="20201116 13:05:05.029" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 5447482, 'wakeups': [5457507, 5467495, 5477494, 5487494, 5497494, 5507...</msg>
<status status="PASS" starttime="20201116 13:05:02.944" endtime="20201116 13:05:05.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.035" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 5447482, 'wakeups': [5457507, 5467495, 5477494, 5487494, 5497494, 5507...</msg>
<status status="PASS" starttime="20201116 13:05:05.032" endtime="20201116 13:05:05.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:05.038" endtime="20201116 13:05:05.041"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.941" endtime="20201116 13:05:05.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.939" endtime="20201116 13:05:05.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:05.048" level="INFO">${RESULT} = {'start-time': 5447482, 'timer-interval': 10000, 'timer-count': 2, 'wakeups': [5457507, 5467495, 5477494, 5487494, 5497494, 5507494, 5517494, 5527494, 5537494, 5547494, 5557494, 5567494, 5577494, 5587...</msg>
<status status="PASS" starttime="20201116 13:05:05.044" endtime="20201116 13:05:05.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.057" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:05.055" endtime="20201116 13:05:05.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.061" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:05.059" endtime="20201116 13:05:05.062"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.050" endtime="20201116 13:05:05.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.071" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:05.069" endtime="20201116 13:05:05.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.075" level="INFO">VALUE: 5447482</msg>
<status status="PASS" starttime="20201116 13:05:05.073" endtime="20201116 13:05:05.076"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.064" endtime="20201116 13:05:05.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.085" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:05.083" endtime="20201116 13:05:05.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.090" level="INFO">VALUE: [5457507, 5467495, 5477494, 5487494, 5497494, 5507494, 5517494, 5527494, 5537494, 5547494, 5557494, 5567494, 5577494, 5587494, 5597494, 5607494, 5617494, 5627494, 5637494, 5647494, 5657494, 5667494, 5677494, 5687494, 5697494, 5707494, 5717494, 5727494, 5737494, 5747494, 5757494, 5767494, 5777494, 5787494, 5797494, 5807494, 5817494, 5827494, 5837494, 5847494, 5857494, 5867494, 5877494, 5887494, 5897494, 5907494, 5917494, 5927494, 5937494, 5947494, 5957494, 5967494, 5977494, 5987494, 5997494, 6007494, 6017494, 6027494, 6037494, 6047494, 6057494, 6067494, 6077494, 6087494, 6097494, 6107494, 6117494, 6127494, 6137494, 6147494, 6157494, 6167494, 6177494, 6187494, 6197494, 6207494, 6217494, 6227494, 6237494, 6247494, 6257494, 6267494, 6277494, 6287494, 6297494, 6307494, 6317494, 6327494, 6337494, 6347494, 6357494, 6367494, 6377494, 6387494, 6397494, 6407494, 6417494, 6427494, 6437494, 6447494]</msg>
<status status="PASS" starttime="20201116 13:05:05.087" endtime="20201116 13:05:05.090"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.078" endtime="20201116 13:05:05.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:05.102" endtime="20201116 13:05:05.393"></status>
</kw>
<msg timestamp="20201116 13:05:05.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031033097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:05.100" endtime="20201116 13:05:05.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031033097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:05.397" endtime="20201116 13:05:05.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:05.404" endtime="20201116 13:05:05.406"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.098" endtime="20201116 13:05:05.406"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.093" endtime="20201116 13:05:05.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:05.430" level="INFO">${RESULT} = {'diff': [0, 0.010025764, 0.009988403000000003, 0.009999902999999997, 0.010000929999999998, 0.010000916999999998, 0.010000931000000005, 0.010000902000000006, 0.01000093099999999, 0.010000916999999998,...</msg>
<status status="PASS" starttime="20201116 13:05:05.407" endtime="20201116 13:05:05.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.435" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:05.434" endtime="20201116 13:05:05.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.437" level="INFO">VALUE: 0.021007333</msg>
<status status="PASS" starttime="20201116 13:05:05.436" endtime="20201116 13:05:05.437"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.431" endtime="20201116 13:05:05.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.442" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:05.441" endtime="20201116 13:05:05.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:05.444" level="INFO">VALUE: [0.031033097, 0.0410215, 0.051021403, 0.061022333, 0.07102325, 0.081024181, 0.091025083, 0.101026014, 0.111026931, 0.121027875, 0.131028792, 0.141029694, 0.151030639, 0.161031542, 0.171032458, 0.181033403, 0.191034347, 0.20103525, 0.211036208, 0.221037083, 0.231038014, 0.241038917, 0.251039833, 0.261040778, 0.271041681, 0.281042611, 0.291043569, 0.301044486, 0.311045444, 0.321046306, 0.331047208, 0.341048139, 0.351049056, 0.36105, 0.371050917, 0.381051889, 0.39105275, 0.401053681, 0.411054597, 0.421055514, 0.431056458, 0.441057361, 0.451058278, 0.461059208, 0.471060125, 0.481061069, 0.491061972, 0.501062917, 0.511063819, 0.52106475, 0.531065667, 0.541066583, 0.551067514, 0.561068431, 0.571069361, 0.581070278, 0.591071208, 0.601072153, 0.611073069, 0.621073972, 0.631074889, 0.641075833, 0.65107675, 0.661077708, 0.671078597, 0.681079542, 0.691080444, 0.701081403, 0.711082278, 0.721083222, 0.731084153, 0.741085056, 0.751085972, 0.761086986, 0.771087819, 0.78108875, 0.791089667, 0.801090583, 0.811091514, 0.821092431, 0.831093417, 0.841094333, 0.851095264, 0.861096125, 0.871097056, 0.881097972, 0.891098903, 0.901099819, 0.911100792, 0.921101667, 0.931102611, 0.941103597, 0.951104431, 0.961105361, 0.971106292, 0.98110725, 0.991108153, 1.001109069, 1.011110014, 1.021110903] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:05.443" endtime="20201116 13:05:05.445"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.438" endtime="20201116 13:05:05.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:05.447" endtime="20201116 13:05:05.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:05.451" endtime="20201116 13:05:05.470"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.449" endtime="20201116 13:05:05.471"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.446" endtime="20201116 13:05:05.471"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.938" endtime="20201116 13:05:05.471"></status>
</kw>
<msg timestamp="20201116 13:05:05.472" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:05.480" endtime="20201116 13:05:07.563"></status>
</kw>
<msg timestamp="20201116 13:05:07.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7982692, 'wakeups': [7992704, 8002697, 8012705, 8022704, 8032704, 8042...</msg>
<status status="PASS" starttime="20201116 13:05:05.479" endtime="20201116 13:05:07.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7982692, 'wakeups': [7992704, 8002697, 8012705, 8022704, 8032704, 8042...</msg>
<status status="PASS" starttime="20201116 13:05:07.566" endtime="20201116 13:05:07.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.572" endtime="20201116 13:05:07.575"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.476" endtime="20201116 13:05:07.576"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.473" endtime="20201116 13:05:07.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:07.583" level="INFO">${RESULT} = {'start-time': 7982692, 'timer-interval': 10000, 'timer-count': 2, 'wakeups': [7992704, 8002697, 8012705, 8022704, 8032704, 8042704, 8052704, 8062704, 8072704, 8082704, 8092704, 8102704, 8112704, 8122...</msg>
<status status="PASS" starttime="20201116 13:05:07.579" endtime="20201116 13:05:07.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.591" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:07.589" endtime="20201116 13:05:07.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.595" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:07.593" endtime="20201116 13:05:07.596"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.584" endtime="20201116 13:05:07.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.606" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:07.604" endtime="20201116 13:05:07.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.610" level="INFO">VALUE: 7982692</msg>
<status status="PASS" starttime="20201116 13:05:07.608" endtime="20201116 13:05:07.611"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.599" endtime="20201116 13:05:07.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.620" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:07.618" endtime="20201116 13:05:07.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.625" level="INFO">VALUE: [7992704, 8002697, 8012705, 8022704, 8032704, 8042704, 8052704, 8062704, 8072704, 8082704, 8092704, 8102704, 8112704, 8122704, 8132704, 8142704, 8152704, 8162704, 8172704, 8182704, 8192704, 8202704, 8212704, 8222704, 8232704, 8242704, 8252704, 8262704, 8272704, 8282704, 8292704, 8302704, 8312704, 8322704, 8332704, 8342704, 8352704, 8362704, 8372704, 8382704, 8392704, 8402704, 8412704, 8422704, 8432704, 8442704, 8452704, 8462704, 8472704, 8482704, 8492704, 8502704, 8512704, 8522704, 8532704, 8542704, 8552704, 8562704, 8572704, 8582704, 8592704, 8602704, 8612704, 8622704, 8632704, 8642704, 8652704, 8662704, 8672704, 8682704, 8692704, 8702704, 8712704, 8722704, 8732704, 8742704, 8752704, 8762704, 8772704, 8782704, 8792704, 8802704, 8812704, 8822704, 8832704, 8842704, 8852704, 8862704, 8872704, 8882704, 8892704, 8902704, 8912704, 8922704, 8932704, 8942704, 8952704, 8962704, 8972704, 8982704]</msg>
<status status="PASS" starttime="20201116 13:05:07.623" endtime="20201116 13:05:07.626"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.613" endtime="20201116 13:05:07.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.640" endtime="20201116 13:05:07.935"></status>
</kw>
<msg timestamp="20201116 13:05:07.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019061806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029074278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:07.637" endtime="20201116 13:05:07.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019061806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029074278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:07.939" endtime="20201116 13:05:07.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.947" endtime="20201116 13:05:07.948"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.632" endtime="20201116 13:05:07.949"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.628" endtime="20201116 13:05:07.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:07.974" level="INFO">${RESULT} = {'diff': [0, 0.010012471999999998, 0.009994304999999998, 0.010008611, 0.009999931000000004, 0.010000930999999998, 0.010000902000000006, 0.010000944999999997, 0.010000902999999992, 0.010000930000000005...</msg>
<status status="PASS" starttime="20201116 13:05:07.950" endtime="20201116 13:05:07.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.978" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:07.977" endtime="20201116 13:05:07.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.980" level="INFO">VALUE: 0.019061806</msg>
<status status="PASS" starttime="20201116 13:05:07.979" endtime="20201116 13:05:07.981"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.975" endtime="20201116 13:05:07.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.986" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:07.985" endtime="20201116 13:05:07.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.988" level="INFO">VALUE: [0.029074278, 0.039068583, 0.049077194, 0.059077125, 0.069078056, 0.079078958, 0.089079903, 0.099080806, 0.109081736, 0.119082667, 0.129083597, 0.139084514, 0.149085431, 0.159086347, 0.169087306, 0.179088236, 0.189089139, 0.199090042, 0.209091028, 0.219091917, 0.229092819, 0.239093736, 0.249094667, 0.259095583, 0.269096528, 0.279097431, 0.289098361, 0.299099278, 0.309100194, 0.319101125, 0.329102042, 0.339102958, 0.349103875, 0.359104806, 0.369105736, 0.379106667, 0.389107639, 0.399108486, 0.409109417, 0.419110333, 0.429111264, 0.439112181, 0.449113097, 0.459114014, 0.469115028, 0.479115861, 0.489116792, 0.499117708, 0.509118667, 0.519119583, 0.529120486, 0.539121417, 0.549122319, 0.559123264, 0.569124153, 0.579125097, 0.589126, 0.599126931, 0.609127847, 0.619128778, 0.629129694, 0.639130625, 0.649131542, 0.659132514, 0.669133431, 0.679134306, 0.689135236, 0.699136153, 0.709137069, 0.719138, 0.729138917, 0.739139833, 0.749140764, 0.759141694, 0.769142639, 0.779143528, 0.789144444, 0.799145375, 0.809146292, 0.819147222, 0.829148153, 0.839149083, 0.849149986, 0.859150917, 0.869151861, 0.879152778, 0.889153708, 0.899154597, 0.909155528, 0.919156444, 0.929157389, 0.939158333, 0.949159222, 0.959160139, 0.969161069, 0.979162, 0.989162917, 0.999163833, 1.009164764, 1.019165681] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:07.987" endtime="20201116 13:05:07.988"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.982" endtime="20201116 13:05:07.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.991" endtime="20201116 13:05:07.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:07.994" endtime="20201116 13:05:08.014"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.993" endtime="20201116 13:05:08.015"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.989" endtime="20201116 13:05:08.015"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:05.472" endtime="20201116 13:05:08.015"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.936" endtime="20201116 13:05:08.016"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.935" endtime="20201116 13:05:08.016"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:08.018" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:08.026" endtime="20201116 13:05:10.119"></status>
</kw>
<msg timestamp="20201116 13:05:10.121" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 10528656, 'wakeups': [10538673, 10548673, 10558674, 10568674, 10578674...</msg>
<status status="PASS" starttime="20201116 13:05:08.025" endtime="20201116 13:05:10.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.126" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 10528656, 'wakeups': [10538673, 10548673, 10558674, 10568674, 10578674...</msg>
<status status="PASS" starttime="20201116 13:05:10.123" endtime="20201116 13:05:10.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.129" endtime="20201116 13:05:10.132"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.022" endtime="20201116 13:05:10.133"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.020" endtime="20201116 13:05:10.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:10.140" level="INFO">${RESULT} = {'start-time': 10528656, 'timer-interval': 10000, 'timer-count': 3, 'wakeups': [10538673, 10548673, 10558674, 10568674, 10578674, 10588674, 10598674, 10608674, 10618674, 10628674, 10638674, 10648674, ...</msg>
<status status="PASS" starttime="20201116 13:05:10.136" endtime="20201116 13:05:10.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.150" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:10.148" endtime="20201116 13:05:10.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.154" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:10.152" endtime="20201116 13:05:10.155"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.141" endtime="20201116 13:05:10.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.164" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:10.162" endtime="20201116 13:05:10.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.168" level="INFO">VALUE: 10528656</msg>
<status status="PASS" starttime="20201116 13:05:10.166" endtime="20201116 13:05:10.169"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.157" endtime="20201116 13:05:10.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.178" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:10.176" endtime="20201116 13:05:10.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.183" level="INFO">VALUE: [10538673, 10548673, 10558674, 10568674, 10578674, 10588674, 10598674, 10608674, 10618674, 10628674, 10638674, 10648674, 10658674, 10668674, 10678674, 10688674, 10698674, 10708674, 10718674, 10728674, 10738674, 10748674, 10758674, 10768674, 10778674, 10788674, 10798674, 10808674, 10818674, 10828674, 10838674, 10848674, 10858674, 10868674, 10878674, 10888674, 10898674, 10908674, 10918674, 10928674, 10938674, 10948674, 10958674, 10968674, 10978674, 10988674, 10998674, 11008674, 11018674, 11028674, 11038674, 11048674, 11058674, 11068674, 11078674, 11088674, 11098674, 11108674, 11118674, 11128674, 11138674, 11148674, 11158674, 11168674, 11178674, 11188674, 11198674, 11208674, 11218674, 11228674, 11238674, 11248674, 11258674, 11268674, 11278674, 11288674, 11298674, 11308674, 11318674, 11328674, 11338674, 11348674, 11358674, 11368674, 11378674, 11388674, 11398674, 11408674, 11418674, 11428674, 11438674, 11448674, 11458674, 11468674, 11478674, 11488674, 11498674, 11508674, 11518674, 11528674]</msg>
<status status="PASS" starttime="20201116 13:05:10.181" endtime="20201116 13:05:10.195"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.171" endtime="20201116 13:05:10.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.210" endtime="20201116 13:05:10.501"></status>
</kw>
<msg timestamp="20201116 13:05:10.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02115725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031175611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:05:10.207" endtime="20201116 13:05:10.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02115725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031175611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:05:10.505" endtime="20201116 13:05:10.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.512" endtime="20201116 13:05:10.514"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.201" endtime="20201116 13:05:10.514"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.198" endtime="20201116 13:05:10.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:10.539" level="INFO">${RESULT} = {'diff': [0, 0.010018361, 0.010000124999999999, 0.010001945000000005, 0.010000901999999999, 0.010000930999999998, 0.010000903000000005, 0.010000929999999991, 0.010000931000000005, 0.010000903000000005...</msg>
<status status="PASS" starttime="20201116 13:05:10.515" endtime="20201116 13:05:10.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.543" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:10.542" endtime="20201116 13:05:10.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.545" level="INFO">VALUE: 0.02115725</msg>
<status status="PASS" starttime="20201116 13:05:10.544" endtime="20201116 13:05:10.546"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.540" endtime="20201116 13:05:10.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.551" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:10.549" endtime="20201116 13:05:10.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.553" level="INFO">VALUE: [0.031175611, 0.041175736, 0.051177681, 0.061178583, 0.071179514, 0.081180417, 0.091181347, 0.101182278, 0.111183181, 0.121184111, 0.131185028, 0.141185958, 0.151186861, 0.161187792, 0.171188722, 0.181189653, 0.191190583, 0.201191486, 0.211192417, 0.221193389, 0.231194236, 0.241195194, 0.251196083, 0.261197, 0.271197944, 0.281198847, 0.291199764, 0.301200694, 0.311201625, 0.321202542, 0.331203458, 0.341204389, 0.351205306, 0.361206222, 0.371207153, 0.381208083, 0.391209, 0.401209917, 0.411210847, 0.421211764, 0.43121275, 0.441213639, 0.451214528, 0.461215458, 0.471216389, 0.481217292, 0.491218208, 0.501219181, 0.511220056, 0.521220986, 0.531221903, 0.541222847, 0.55122375, 0.561224681, 0.571225597, 0.581226514, 0.591227458, 0.601228361, 0.611229292, 0.621230264, 0.631231153, 0.641232069, 0.651233, 0.661233931, 0.671234833, 0.681235764, 0.691236681, 0.701237625, 0.711238528, 0.721239458, 0.731240361, 0.741241278, 0.751242236, 0.761243125, 0.771244069, 0.781244986, 0.791245931, 0.801246819, 0.811247792, 0.821248667, 0.831249583, 0.841250514, 0.851251444, 0.861252361, 0.871253306, 0.881254208, 0.891255125, 0.901256056, 0.911256972, 0.921257917, 0.931258833, 0.94125975, 0.951260722, 0.961261611, 0.971262528, 0.981263431, 0.991264361, 1.001265278, 1.011266278, 1.021267139] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:10.552" endtime="20201116 13:05:10.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.547" endtime="20201116 13:05:10.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.556" endtime="20201116 13:05:10.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:10.559" endtime="20201116 13:05:10.578"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.558" endtime="20201116 13:05:10.579"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.554" endtime="20201116 13:05:10.579"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.019" endtime="20201116 13:05:10.580"></status>
</kw>
<msg timestamp="20201116 13:05:10.580" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.588" endtime="20201116 13:05:12.681"></status>
</kw>
<msg timestamp="20201116 13:05:12.682" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13090528, 'wakeups': [13100545, 13110545, 13120546, 13130546, 13140546...</msg>
<status status="PASS" starttime="20201116 13:05:10.586" endtime="20201116 13:05:12.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13090528, 'wakeups': [13100545, 13110545, 13120546, 13130546, 13140546...</msg>
<status status="PASS" starttime="20201116 13:05:12.685" endtime="20201116 13:05:12.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.690" endtime="20201116 13:05:12.694"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.584" endtime="20201116 13:05:12.695"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.582" endtime="20201116 13:05:12.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:12.701" level="INFO">${RESULT} = {'start-time': 13090528, 'timer-interval': 10000, 'timer-count': 3, 'wakeups': [13100545, 13110545, 13120546, 13130546, 13140546, 13150546, 13160546, 13170546, 13180546, 13190546, 13200546, 13210546, ...</msg>
<status status="PASS" starttime="20201116 13:05:12.697" endtime="20201116 13:05:12.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.710" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:12.708" endtime="20201116 13:05:12.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.714" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:12.712" endtime="20201116 13:05:12.715"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.703" endtime="20201116 13:05:12.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.724" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:12.722" endtime="20201116 13:05:12.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.728" level="INFO">VALUE: 13090528</msg>
<status status="PASS" starttime="20201116 13:05:12.726" endtime="20201116 13:05:12.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.717" endtime="20201116 13:05:12.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.740" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:12.736" endtime="20201116 13:05:12.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.745" level="INFO">VALUE: [13100545, 13110545, 13120546, 13130546, 13140546, 13150546, 13160546, 13170546, 13180546, 13190546, 13200546, 13210546, 13220546, 13230546, 13240546, 13250546, 13260546, 13270546, 13280546, 13290546, 13300546, 13310546, 13320546, 13330546, 13340546, 13350546, 13360546, 13370546, 13380546, 13390546, 13400546, 13410546, 13420546, 13430546, 13440546, 13450546, 13460546, 13470546, 13480546, 13490546, 13500546, 13510546, 13520546, 13530546, 13540546, 13550546, 13560546, 13570546, 13580546, 13590546, 13600546, 13610546, 13620546, 13630546, 13640546, 13650546, 13660546, 13670546, 13680546, 13690546, 13700546, 13710546, 13720546, 13730546, 13740546, 13750546, 13760546, 13770546, 13780546, 13790546, 13800546, 13810546, 13820546, 13830546, 13840546, 13850546, 13860546, 13870546, 13880546, 13890546, 13900546, 13910546, 13920546, 13930546, 13940546, 13950546, 13960546, 13970546, 13980546, 13990546, 14000546, 14010546, 14020546, 14030546, 14040546, 14050546, 14060546, 14070546, 14080546, 14090546]</msg>
<status status="PASS" starttime="20201116 13:05:12.743" endtime="20201116 13:05:12.746"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.731" endtime="20201116 13:05:12.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.760" endtime="20201116 13:05:13.051"></status>
</kw>
<msg timestamp="20201116 13:05:13.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028487403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:12.757" endtime="20201116 13:05:13.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:13.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028487403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:13.055" endtime="20201116 13:05:13.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:13.062" endtime="20201116 13:05:13.064"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.752" endtime="20201116 13:05:13.065"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.748" endtime="20201116 13:05:13.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:13.089" level="INFO">${RESULT} = {'diff': [0, 0.010018222, 0.010000165999999998, 0.010001903, 0.010000902999999998, 0.010000916999999998, 0.010000930000000005, 0.010000903000000005, 0.010000916999999998, 0.010000929999999991, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:05:13.066" endtime="20201116 13:05:13.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:13.094" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:13.093" endtime="20201116 13:05:13.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:13.096" level="INFO">VALUE: 0.018469181</msg>
<status status="PASS" starttime="20201116 13:05:13.095" endtime="20201116 13:05:13.096"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.090" endtime="20201116 13:05:13.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:13.101" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:13.100" endtime="20201116 13:05:13.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:13.103" level="INFO">VALUE: [0.028487403, 0.038487569, 0.048489472, 0.058490375, 0.068491292, 0.078492222, 0.088493125, 0.098494042, 0.108494972, 0.118495889, 0.128496806, 0.138497806, 0.148498667, 0.158499583, 0.1685005, 0.178501417, 0.188502333, 0.198503264, 0.208504181, 0.218505097, 0.228506028, 0.238506944, 0.248507889, 0.258508792, 0.268509722, 0.278510639, 0.288511556, 0.298512486, 0.308513403, 0.318514319, 0.328515236, 0.338516167, 0.348517083, 0.358518028, 0.368518931, 0.378519875, 0.388520778, 0.398521694, 0.408522681, 0.418523542, 0.428524458, 0.438525389, 0.448526306, 0.458527236, 0.468528153, 0.478529083, 0.488530028, 0.498530931, 0.508531847, 0.518532764, 0.528533694, 0.538534625, 0.548535542, 0.558536472, 0.568537375, 0.578538306, 0.588539222, 0.598540153, 0.608541069, 0.618542014, 0.628542931, 0.638543833, 0.648544778, 0.658545681, 0.668546611, 0.678547542, 0.688548472, 0.698549389, 0.708550292, 0.718551236, 0.728552153, 0.738553069, 0.748553986, 0.758554931, 0.768555833, 0.778556764, 0.788557681, 0.798558597, 0.808559542, 0.818560444, 0.828561389, 0.838562292, 0.848563236, 0.858564153, 0.868565083, 0.878565986, 0.888566917, 0.898567833, 0.90856875, 0.918569681, 0.928570597, 0.938571528, 0.948572458, 0.958573375, 0.968574292, 0.978575236, 0.988576139, 0.998577097, 1.008578042, 1.018578958] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:13.102" endtime="20201116 13:05:13.103"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.097" endtime="20201116 13:05:13.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:13.106" endtime="20201116 13:05:13.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:13.110" endtime="20201116 13:05:13.130"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.108" endtime="20201116 13:05:13.130"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.105" endtime="20201116 13:05:13.131"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.581" endtime="20201116 13:05:13.131"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.017" endtime="20201116 13:05:13.131"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:08.016" endtime="20201116 13:05:13.131"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:13.134" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:13.142" endtime="20201116 13:05:15.234"></status>
</kw>
<msg timestamp="20201116 13:05:15.236" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 15644238, 'wakeups': [15654262, 15664263, 15674262, 15684262, 15694262...</msg>
<status status="PASS" starttime="20201116 13:05:13.141" endtime="20201116 13:05:15.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 15644238, 'wakeups': [15654262, 15664263, 15674262, 15684262, 15694262...</msg>
<status status="PASS" starttime="20201116 13:05:15.238" endtime="20201116 13:05:15.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.244" endtime="20201116 13:05:15.247"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.138" endtime="20201116 13:05:15.248"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.136" endtime="20201116 13:05:15.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:15.259" level="INFO">${RESULT} = {'start-time': 15644238, 'timer-interval': 10000, 'timer-count': 4, 'wakeups': [15654262, 15664263, 15674262, 15684262, 15694262, 15704262, 15714262, 15724262, 15734262, 15744262, 15754262, 15764262, ...</msg>
<status status="PASS" starttime="20201116 13:05:15.250" endtime="20201116 13:05:15.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.267" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:15.265" endtime="20201116 13:05:15.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.272" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:15.270" endtime="20201116 13:05:15.272"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.261" endtime="20201116 13:05:15.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.282" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:15.280" endtime="20201116 13:05:15.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.286" level="INFO">VALUE: 15644238</msg>
<status status="PASS" starttime="20201116 13:05:15.284" endtime="20201116 13:05:15.287"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.275" endtime="20201116 13:05:15.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.296" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:15.294" endtime="20201116 13:05:15.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.301" level="INFO">VALUE: [15654262, 15664263, 15674262, 15684262, 15694262, 15704262, 15714262, 15724262, 15734262, 15744262, 15754262, 15764262, 15774262, 15784262, 15794262, 15804262, 15814262, 15824262, 15834262, 15844262, 15854262, 15864262, 15874262, 15884262, 15894262, 15904262, 15914262, 15924262, 15934262, 15944262, 15954262, 15964262, 15974262, 15984262, 15994262, 16004262, 16014262, 16024262, 16034262, 16044262, 16054262, 16064262, 16074262, 16084262, 16094262, 16104262, 16114262, 16124262, 16134262, 16144262, 16154262, 16164262, 16174262, 16184262, 16194262, 16204262, 16214262, 16224262, 16234262, 16244262, 16254262, 16264262, 16274262, 16284262, 16294262, 16304262, 16314262, 16324262, 16334262, 16344262, 16354262, 16364262, 16374262, 16384262, 16394262, 16404262, 16414262, 16424262, 16434262, 16444262, 16454262, 16464262, 16474262, 16484262, 16494262, 16504262, 16514262, 16524262, 16534262, 16544262, 16554262, 16564262, 16574262, 16584262, 16594262, 16604262, 16614262, 16624262, 16634262, 16644262]</msg>
<status status="PASS" starttime="20201116 13:05:15.298" endtime="20201116 13:05:15.301"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.289" endtime="20201116 13:05:15.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.310" endtime="20201116 13:05:15.602"></status>
</kw>
<msg timestamp="20201116 13:05:15.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021015986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031041431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:15.308" endtime="20201116 13:05:15.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021015986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031041431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:15.606" endtime="20201116 13:05:15.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.613" endtime="20201116 13:05:15.615"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.306" endtime="20201116 13:05:15.615"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.304" endtime="20201116 13:05:15.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:15.639" level="INFO">${RESULT} = {'diff': [0, 0.010025445000000001, 0.010001402, 0.010000056, 0.010000943999999998, 0.010000902999999998, 0.010000916999999998, 0.010000915999999999, 0.010000931000000005, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:05:15.616" endtime="20201116 13:05:15.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.643" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:15.642" endtime="20201116 13:05:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.645" level="INFO">VALUE: 0.021015986</msg>
<status status="PASS" starttime="20201116 13:05:15.644" endtime="20201116 13:05:15.646"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.640" endtime="20201116 13:05:15.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.651" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:15.650" endtime="20201116 13:05:15.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.653" level="INFO">VALUE: [0.031041431, 0.041042833, 0.051042889, 0.061043833, 0.071044736, 0.081045653, 0.091046569, 0.1010475, 0.111048417, 0.121049347, 0.131050264, 0.141051194, 0.151052111, 0.161053028, 0.171053972, 0.181054875, 0.191055806, 0.201056736, 0.211057639, 0.221058556, 0.231059486, 0.241060403, 0.251061347, 0.26106225, 0.271063167, 0.281064097, 0.291065028, 0.301066, 0.311066861, 0.321067778, 0.331068708, 0.341069625, 0.351070569, 0.361071486, 0.371072389, 0.381073333, 0.391074236, 0.401075194, 0.411076097, 0.421077014, 0.431077931, 0.441078861, 0.451079778, 0.461080708, 0.471081625, 0.481082556, 0.491083472, 0.501084403, 0.511085319, 0.521086236, 0.531087167, 0.541088083, 0.551089014, 0.561089931, 0.571090861, 0.581091778, 0.591092708, 0.601093625, 0.611094556, 0.621095472, 0.631096417, 0.641097319, 0.651098278, 0.661099167, 0.671100111, 0.681101042, 0.691101944, 0.701102861, 0.711103778, 0.721104708, 0.731105625, 0.741106556, 0.751107486, 0.761108417, 0.771109319, 0.781110319, 0.791111167, 0.801112097, 0.811113014, 0.821113958, 0.831114861, 0.841115792, 0.851116722, 0.861117653, 0.871118583, 0.8811195, 0.891120417, 0.901121333, 0.91112225, 0.921123181, 0.931124097, 0.941125042, 0.951125944, 0.961126903, 0.971127792, 0.981128778, 0.991129667, 1.001130569, 1.0111315, 1.021132444] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:15.652" endtime="20201116 13:05:15.653"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.647" endtime="20201116 13:05:15.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.656" endtime="20201116 13:05:15.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:15.660" endtime="20201116 13:05:15.679"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.658" endtime="20201116 13:05:15.680"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.655" endtime="20201116 13:05:15.680"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.135" endtime="20201116 13:05:15.680"></status>
</kw>
<msg timestamp="20201116 13:05:15.681" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.689" endtime="20201116 13:05:17.782"></status>
</kw>
<msg timestamp="20201116 13:05:17.784" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 18191700, 'wakeups': [18201725, 18211725, 18221724, 18231724, 18241724...</msg>
<status status="PASS" starttime="20201116 13:05:15.687" endtime="20201116 13:05:17.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.789" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 18191700, 'wakeups': [18201725, 18211725, 18221724, 18231724, 18241724...</msg>
<status status="PASS" starttime="20201116 13:05:17.786" endtime="20201116 13:05:17.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.792" endtime="20201116 13:05:17.795"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.685" endtime="20201116 13:05:17.796"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.683" endtime="20201116 13:05:17.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:17.802" level="INFO">${RESULT} = {'start-time': 18191700, 'timer-interval': 10000, 'timer-count': 4, 'wakeups': [18201725, 18211725, 18221724, 18231724, 18241724, 18251724, 18261724, 18271724, 18281724, 18291724, 18301724, 18311724, ...</msg>
<status status="PASS" starttime="20201116 13:05:17.799" endtime="20201116 13:05:17.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.811" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:17.809" endtime="20201116 13:05:17.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.815" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:17.813" endtime="20201116 13:05:17.816"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.804" endtime="20201116 13:05:17.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.826" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:17.823" endtime="20201116 13:05:17.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.830" level="INFO">VALUE: 18191700</msg>
<status status="PASS" starttime="20201116 13:05:17.828" endtime="20201116 13:05:17.830"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.818" endtime="20201116 13:05:17.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.840" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:17.838" endtime="20201116 13:05:17.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.845" level="INFO">VALUE: [18201725, 18211725, 18221724, 18231724, 18241724, 18251724, 18261724, 18271724, 18281724, 18291724, 18301724, 18311724, 18321724, 18331724, 18341724, 18351724, 18361724, 18371724, 18381724, 18391724, 18401724, 18411724, 18421724, 18431724, 18441724, 18451724, 18461724, 18471724, 18481724, 18491724, 18501724, 18511724, 18521724, 18531724, 18541724, 18551724, 18561724, 18571724, 18581724, 18591724, 18601724, 18611724, 18621724, 18631724, 18641724, 18651724, 18661724, 18671724, 18681724, 18691724, 18701724, 18711724, 18721724, 18731724, 18741724, 18751724, 18761724, 18771724, 18781724, 18791724, 18801724, 18811724, 18821724, 18831724, 18841724, 18851724, 18861724, 18871724, 18881724, 18891724, 18901724, 18911724, 18921724, 18931724, 18941724, 18951724, 18961724, 18971724, 18981724, 18991724, 19001724, 19011724, 19021724, 19031724, 19041724, 19051724, 19061724, 19071724, 19081724, 19091724, 19101724, 19111724, 19121724, 19131724, 19141724, 19151724, 19161724, 19171724, 19181724, 19191724]</msg>
<status status="PASS" starttime="20201116 13:05:17.843" endtime="20201116 13:05:17.846"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.833" endtime="20201116 13:05:17.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.860" endtime="20201116 13:05:18.153"></status>
</kw>
<msg timestamp="20201116 13:05:18.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019024639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029050722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:17.857" endtime="20201116 13:05:18.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019024639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029050722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:18.157" endtime="20201116 13:05:18.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:18.164" endtime="20201116 13:05:18.166"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.852" endtime="20201116 13:05:18.167"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.848" endtime="20201116 13:05:18.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:18.192" level="INFO">${RESULT} = {'diff': [0, 0.010026083000000002, 0.010000235999999996, 0.009999931000000004, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, 0.010000943999999998, 0.010000903000000005, 0.010000916...</msg>
<status status="PASS" starttime="20201116 13:05:18.168" endtime="20201116 13:05:18.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.196" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:18.195" endtime="20201116 13:05:18.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.198" level="INFO">VALUE: 0.019024639</msg>
<status status="PASS" starttime="20201116 13:05:18.197" endtime="20201116 13:05:18.198"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.193" endtime="20201116 13:05:18.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.203" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:18.202" endtime="20201116 13:05:18.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:18.206" level="INFO">VALUE: [0.029050722, 0.039050958, 0.049050889, 0.059051806, 0.069052736, 0.079053653, 0.089054597, 0.0990555, 0.109056417, 0.119057347, 0.129058264, 0.139059194, 0.149060125, 0.159061028, 0.169061958, 0.179062889, 0.189063806, 0.199064792, 0.209065639, 0.219066569, 0.229067486, 0.239068417, 0.249069333, 0.259070264, 0.269071181, 0.279072097, 0.289073042, 0.299073944, 0.309074875, 0.319075806, 0.329076708, 0.339077694, 0.349078611, 0.359079486, 0.369080403, 0.379081347, 0.38908225, 0.399083181, 0.409084097, 0.419085014, 0.429085986, 0.439086889, 0.449087792, 0.45908875, 0.469089653, 0.479090569, 0.489091486, 0.499092403, 0.509093347, 0.519094264, 0.529095181, 0.539096111, 0.549097056, 0.559097944, 0.569098875, 0.579099792, 0.58910075, 0.599101639, 0.609102556, 0.6191035, 0.629104417, 0.639105333, 0.64910625, 0.659107194, 0.669108111, 0.679109042, 0.689109944, 0.699110875, 0.709111792, 0.719112722, 0.729113639, 0.739114583, 0.749115486, 0.759116431, 0.769117361, 0.779118264, 0.789119181, 0.799120111, 0.809121028, 0.819121958, 0.829122889, 0.839123847, 0.849124778, 0.859125708, 0.869126569, 0.879127514, 0.889128417, 0.899129347, 0.909130264, 0.919131194, 0.929132125, 0.939133042, 0.949133958, 0.959134958, 0.969135819, 0.979136736, 0.989137653, 0.999138583, 1.0091395, 1.019140431] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:18.204" endtime="20201116 13:05:18.206"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.199" endtime="20201116 13:05:18.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:18.209" endtime="20201116 13:05:18.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:18.212" endtime="20201116 13:05:18.232"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.211" endtime="20201116 13:05:18.232"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.207" endtime="20201116 13:05:18.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.681" endtime="20201116 13:05:18.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.132" endtime="20201116 13:05:18.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:13.132" endtime="20201116 13:05:18.234"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:18.236" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:18.244" endtime="20201116 13:05:20.338"></status>
</kw>
<msg timestamp="20201116 13:05:20.339" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 20746460, 'wakeups': [20756492, 20766493, 20776473, 20786493, 20796473...</msg>
<status status="PASS" starttime="20201116 13:05:18.243" endtime="20201116 13:05:20.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.345" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 20746460, 'wakeups': [20756492, 20766493, 20776473, 20786493, 20796473...</msg>
<status status="PASS" starttime="20201116 13:05:20.341" endtime="20201116 13:05:20.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.347" endtime="20201116 13:05:20.350"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.240" endtime="20201116 13:05:20.352"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.238" endtime="20201116 13:05:20.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:20.358" level="INFO">${RESULT} = {'start-time': 20746460, 'timer-interval': 10000, 'timer-count': 5, 'wakeups': [20756492, 20766493, 20776473, 20786493, 20796473, 20806493, 20816473, 20826493, 20836473, 20846493, 20856473, 20866493, ...</msg>
<status status="PASS" starttime="20201116 13:05:20.354" endtime="20201116 13:05:20.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.366" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:20.364" endtime="20201116 13:05:20.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.371" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:20.369" endtime="20201116 13:05:20.371"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.360" endtime="20201116 13:05:20.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.383" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:20.379" endtime="20201116 13:05:20.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.387" level="INFO">VALUE: 20746460</msg>
<status status="PASS" starttime="20201116 13:05:20.385" endtime="20201116 13:05:20.388"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.374" endtime="20201116 13:05:20.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.397" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:20.395" endtime="20201116 13:05:20.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.402" level="INFO">VALUE: [20756492, 20766493, 20776473, 20786493, 20796473, 20806493, 20816473, 20826493, 20836473, 20846493, 20856473, 20866493, 20876473, 20886493, 20896473, 20906493, 20916473, 20926493, 20936473, 20946493, 20956473, 20966493, 20976473, 20986493, 20996473, 21006493, 21016473, 21026493, 21036473, 21046493, 21056473, 21066493, 21076473, 21086493, 21096473, 21106493, 21116473, 21126493, 21136473, 21146493, 21156473, 21166493, 21176473, 21186493, 21196473, 21206493, 21216473, 21226493, 21236473, 21246493, 21256473, 21266493, 21276473, 21286493, 21296473, 21306493, 21316473, 21326493, 21336473, 21346493, 21356473, 21366493, 21376473, 21386493, 21396473, 21406493, 21416473, 21426493, 21436473, 21446493, 21456473, 21466493, 21476473, 21486493, 21496473, 21506493, 21516473, 21526493, 21536473, 21546493, 21556473, 21566493, 21576473, 21586493, 21596473, 21606493, 21616473, 21626493, 21636473, 21646493, 21656473, 21666493, 21676473, 21686493, 21696473, 21706493, 21716473, 21726493, 21736473, 21746493]</msg>
<status status="PASS" starttime="20201116 13:05:20.399" endtime="20201116 13:05:20.402"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.390" endtime="20201116 13:05:20.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.424" endtime="20201116 13:05:20.716"></status>
</kw>
<msg timestamp="20201116 13:05:20.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021126194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031159, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:05:20.421" endtime="20201116 13:05:20.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021126194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031159, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:05:20.719" endtime="20201116 13:05:20.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.727" endtime="20201116 13:05:20.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.415" endtime="20201116 13:05:20.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.411" endtime="20201116 13:05:20.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:20.753" level="INFO">${RESULT} = {'diff': [0, 0.010032805999999998, 0.010001486000000004, 0.009981694999999999, 0.010020151999999997, 0.009981681000000006, 0.01002017999999999, 0.009981681000000006, 0.010020138999999997, 0.0099816800...</msg>
<status status="PASS" starttime="20201116 13:05:20.730" endtime="20201116 13:05:20.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.757" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:20.756" endtime="20201116 13:05:20.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.759" level="INFO">VALUE: 0.021126194</msg>
<status status="PASS" starttime="20201116 13:05:20.758" endtime="20201116 13:05:20.760"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.754" endtime="20201116 13:05:20.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.765" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:20.764" endtime="20201116 13:05:20.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.768" level="INFO">VALUE: [0.031159, 0.041160486, 0.051142181, 0.061162333, 0.071144014, 0.081164194, 0.091145875, 0.101166014, 0.111147694, 0.121167875, 0.131149556, 0.141169722, 0.151151472, 0.161171556, 0.171153264, 0.181173389, 0.191155069, 0.20117525, 0.211156917, 0.221177083, 0.231158764, 0.241178944, 0.251160625, 0.261180778, 0.271162472, 0.281182611, 0.291164306, 0.301184458, 0.311166139, 0.321186375, 0.331168, 0.341188167, 0.351169833, 0.36119, 0.371171681, 0.381191847, 0.391173528, 0.401193708, 0.411175389, 0.421195542, 0.431177236, 0.441197389, 0.451179069, 0.461199222, 0.471180917, 0.481201069, 0.49118275, 0.501202917, 0.511184597, 0.521204778, 0.531186444, 0.541206625, 0.551188306, 0.561208486, 0.571190139, 0.581210319, 0.591191986, 0.601212153, 0.611193875, 0.621214, 0.631195708, 0.641215847, 0.651197528, 0.661217708, 0.671199375, 0.681219569, 0.691201236, 0.701221403, 0.711203083, 0.721223236, 0.731204958, 0.741225083, 0.751206764, 0.761226944, 0.771208625, 0.781228778, 0.791210458, 0.801230625, 0.811212306, 0.821232472, 0.831214153, 0.841234319, 0.851216014, 0.861236167, 0.871217847, 0.881238014, 0.891219708, 0.901239847, 0.911221542, 0.921241694, 0.931223403, 0.941243556, 0.951225236, 0.961245403, 0.971227083, 0.98124725, 0.991228931, 1.001249083, 1.011230778, 1.021250931] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:20.766" endtime="20201116 13:05:20.768"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.761" endtime="20201116 13:05:20.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.771" endtime="20201116 13:05:20.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:20.774" endtime="20201116 13:05:20.793"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.772" endtime="20201116 13:05:20.794"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.769" endtime="20201116 13:05:20.794"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.237" endtime="20201116 13:05:20.795"></status>
</kw>
<msg timestamp="20201116 13:05:20.795" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.803" endtime="20201116 13:05:22.896"></status>
</kw>
<msg timestamp="20201116 13:05:22.898" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 23304946, 'wakeups': [23314979, 23324979, 23334959, 23344979, 23354959...</msg>
<status status="PASS" starttime="20201116 13:05:20.801" endtime="20201116 13:05:22.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.903" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 23304946, 'wakeups': [23314979, 23324979, 23334959, 23344979, 23354959...</msg>
<status status="PASS" starttime="20201116 13:05:22.900" endtime="20201116 13:05:22.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.906" endtime="20201116 13:05:22.909"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.799" endtime="20201116 13:05:22.910"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.797" endtime="20201116 13:05:22.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:22.917" level="INFO">${RESULT} = {'start-time': 23304946, 'timer-interval': 10000, 'timer-count': 5, 'wakeups': [23314979, 23324979, 23334959, 23344979, 23354959, 23364979, 23374959, 23384979, 23394959, 23404979, 23414959, 23424979, ...</msg>
<status status="PASS" starttime="20201116 13:05:22.913" endtime="20201116 13:05:22.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.925" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:22.923" endtime="20201116 13:05:22.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.929" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:22.927" endtime="20201116 13:05:22.930"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.918" endtime="20201116 13:05:22.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.939" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:22.937" endtime="20201116 13:05:22.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.943" level="INFO">VALUE: 23304946</msg>
<status status="PASS" starttime="20201116 13:05:22.941" endtime="20201116 13:05:22.944"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.932" endtime="20201116 13:05:22.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.953" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:22.951" endtime="20201116 13:05:22.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.958" level="INFO">VALUE: [23314979, 23324979, 23334959, 23344979, 23354959, 23364979, 23374959, 23384979, 23394959, 23404979, 23414959, 23424979, 23434959, 23444979, 23454959, 23464979, 23474959, 23484979, 23494959, 23504979, 23514959, 23524979, 23534959, 23544979, 23554959, 23564979, 23574959, 23584979, 23594959, 23604979, 23614959, 23624979, 23634959, 23644979, 23654959, 23664979, 23674959, 23684979, 23694959, 23704979, 23714959, 23724979, 23734959, 23744979, 23754959, 23764979, 23774959, 23784979, 23794959, 23804979, 23814959, 23824979, 23834959, 23844979, 23854959, 23864979, 23874959, 23884979, 23894959, 23904979, 23914959, 23924979, 23934959, 23944979, 23954959, 23964979, 23974959, 23984979, 23994959, 24004979, 24014959, 24024979, 24034959, 24044979, 24054959, 24064979, 24074959, 24084979, 24094959, 24104979, 24114959, 24124979, 24134959, 24144979, 24154959, 24164979, 24174959, 24184979, 24194959, 24204979, 24214959, 24224979, 24234959, 24244979, 24254959, 24264979, 24274959, 24284979, 24294959, 24304979]</msg>
<status status="PASS" starttime="20201116 13:05:22.956" endtime="20201116 13:05:22.959"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.947" endtime="20201116 13:05:22.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.973" endtime="20201116 13:05:23.268"></status>
</kw>
<msg timestamp="20201116 13:05:23.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018134222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028167958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:22.970" endtime="20201116 13:05:23.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:23.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018134222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028167958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:23.272" endtime="20201116 13:05:23.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:23.279" endtime="20201116 13:05:23.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.965" endtime="20201116 13:05:23.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.961" endtime="20201116 13:05:23.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:23.306" level="INFO">${RESULT} = {'diff': [0, 0.010033736000000001, 0.010000374999999999, 0.009981667, 0.010020181000000003, 0.009981679999999993, 0.010020208000000003, 0.009981625000000008, 0.010020166999999996, 0.009981667, 0.01002...</msg>
<status status="PASS" starttime="20201116 13:05:23.283" endtime="20201116 13:05:23.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:23.311" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:23.309" endtime="20201116 13:05:23.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:23.313" level="INFO">VALUE: 0.018134222</msg>
<status status="PASS" starttime="20201116 13:05:23.312" endtime="20201116 13:05:23.313"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.307" endtime="20201116 13:05:23.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:23.318" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:23.317" endtime="20201116 13:05:23.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:23.320" level="INFO">VALUE: [0.028167958, 0.038168333, 0.04815, 0.058170181, 0.068151861, 0.078172069, 0.088153694, 0.098173861, 0.108155528, 0.118175736, 0.128157375, 0.138177556, 0.148159222, 0.158179389, 0.168161097, 0.178181264, 0.188162903, 0.198183069, 0.208164819, 0.218184917, 0.228166597, 0.238186764, 0.248168444, 0.258188611, 0.268170306, 0.278190444, 0.288172139, 0.298192306, 0.308173972, 0.318194139, 0.328175819, 0.338195986, 0.348177667, 0.358197847, 0.368179514, 0.378199681, 0.388181361, 0.398201597, 0.40818325, 0.418203361, 0.428185056, 0.438205236, 0.448186903, 0.458207111, 0.468188806, 0.478208903, 0.488190597, 0.49821075, 0.508192431, 0.518212611, 0.528194278, 0.538214444, 0.548196208, 0.558216292, 0.568198, 0.578218139, 0.588199833, 0.598220014, 0.608201681, 0.618221833, 0.628203514, 0.638223681, 0.648205361, 0.658225528, 0.668207222, 0.678227389, 0.688209056, 0.698229236, 0.708210903, 0.718231083, 0.728212764, 0.738232917, 0.748214597, 0.758234764, 0.768216444, 0.778236653, 0.788218333, 0.798238486, 0.808220139, 0.818240306, 0.828221986, 0.838242153, 0.848223847, 0.858244, 0.868225681, 0.878245847, 0.888227528, 0.898247694, 0.908229375, 0.918249542, 0.928231222, 0.938251375, 0.948233083, 0.958253236, 0.968234931, 0.978255069, 0.988236778, 0.998256931, 1.008238611, 1.018258764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:23.319" endtime="20201116 13:05:23.320"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.314" endtime="20201116 13:05:23.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:23.323" endtime="20201116 13:05:23.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:23.326" endtime="20201116 13:05:23.346"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.325" endtime="20201116 13:05:23.346"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.321" endtime="20201116 13:05:23.347"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.795" endtime="20201116 13:05:23.347"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.235" endtime="20201116 13:05:23.347"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:18.234" endtime="20201116 13:05:23.347"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:23.350" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:23.359" endtime="20201116 13:05:25.451"></status>
</kw>
<msg timestamp="20201116 13:05:25.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 25861169, 'wakeups': [25871210, 25881204, 25891204, 25901204, 25911204...</msg>
<status status="PASS" starttime="20201116 13:05:23.357" endtime="20201116 13:05:25.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 25861169, 'wakeups': [25871210, 25881204, 25891204, 25901204, 25911204...</msg>
<status status="PASS" starttime="20201116 13:05:25.455" endtime="20201116 13:05:25.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.461" endtime="20201116 13:05:25.464"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.354" endtime="20201116 13:05:25.465"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.352" endtime="20201116 13:05:25.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:25.472" level="INFO">${RESULT} = {'start-time': 25861169, 'timer-interval': 10000, 'timer-count': 6, 'wakeups': [25871210, 25881204, 25891204, 25901204, 25911204, 25921204, 25931204, 25941204, 25951204, 25961204, 25971204, 25981204, ...</msg>
<status status="PASS" starttime="20201116 13:05:25.468" endtime="20201116 13:05:25.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.486" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:25.483" endtime="20201116 13:05:25.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.490" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:25.488" endtime="20201116 13:05:25.490"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.479" endtime="20201116 13:05:25.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.500" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:25.498" endtime="20201116 13:05:25.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.504" level="INFO">VALUE: 25861169</msg>
<status status="PASS" starttime="20201116 13:05:25.502" endtime="20201116 13:05:25.505"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.493" endtime="20201116 13:05:25.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.514" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:25.512" endtime="20201116 13:05:25.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.518" level="INFO">VALUE: [25871210, 25881204, 25891204, 25901204, 25911204, 25921204, 25931204, 25941204, 25951204, 25961204, 25971204, 25981204, 25991204, 26001204, 26011204, 26021204, 26031204, 26041204, 26051204, 26061204, 26071204, 26081204, 26091204, 26101204, 26111204, 26121204, 26131204, 26141204, 26151204, 26161204, 26171204, 26181204, 26191204, 26201204, 26211204, 26221204, 26231204, 26241204, 26251204, 26261204, 26271204, 26281204, 26291204, 26301204, 26311204, 26321204, 26331204, 26341204, 26351204, 26361204, 26371204, 26381204, 26391204, 26401204, 26411204, 26421204, 26431204, 26441204, 26451204, 26461204, 26471204, 26481204, 26491204, 26501204, 26511204, 26521204, 26531204, 26541204, 26551204, 26561204, 26571204, 26581204, 26591204, 26601204, 26611204, 26621204, 26631204, 26641204, 26651204, 26661204, 26671204, 26681204, 26691204, 26701204, 26711204, 26721204, 26731204, 26741204, 26751204, 26761204, 26771204, 26781204, 26791204, 26801204, 26811204, 26821204, 26831204, 26841204, 26851204, 26861204]</msg>
<status status="PASS" starttime="20201116 13:05:25.516" endtime="20201116 13:05:25.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.507" endtime="20201116 13:05:25.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.525" endtime="20201116 13:05:25.816"></status>
</kw>
<msg timestamp="20201116 13:05:25.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031923694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:25.524" endtime="20201116 13:05:25.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031923694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:25.820" endtime="20201116 13:05:25.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.827" endtime="20201116 13:05:25.829"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.521" endtime="20201116 13:05:25.830"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.520" endtime="20201116 13:05:25.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:25.854" level="INFO">${RESULT} = {'diff': [0, 0.010041305000000004, 0.009995194999999998, 0.010000916999999998, 0.010000901999999999, 0.010000958999999997, 0.010000888999999999, 0.010000944000000012, 0.010000902999999992, 0.010000943...</msg>
<status status="PASS" starttime="20201116 13:05:25.831" endtime="20201116 13:05:25.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.858" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:25.857" endtime="20201116 13:05:25.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.860" level="INFO">VALUE: 0.021882389</msg>
<status status="PASS" starttime="20201116 13:05:25.859" endtime="20201116 13:05:25.861"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.855" endtime="20201116 13:05:25.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.866" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:25.864" endtime="20201116 13:05:25.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.868" level="INFO">VALUE: [0.031923694, 0.041918889, 0.051919806, 0.061920708, 0.071921667, 0.081922556, 0.0919235, 0.101924403, 0.111925347, 0.12192625, 0.131927181, 0.141928153, 0.151929028, 0.161929944, 0.171930861, 0.181931764, 0.191932722, 0.201933625, 0.211934542, 0.221935486, 0.231936389, 0.241937319, 0.251938264, 0.261939153, 0.271940097, 0.281941, 0.291941944, 0.301942833, 0.311943833, 0.321944681, 0.331945625, 0.341946542, 0.351947458, 0.361948375, 0.371949319, 0.38195025, 0.391951153, 0.401952069, 0.411953, 0.421953903, 0.431954847, 0.44195575, 0.451956694, 0.461957597, 0.471958556, 0.481959444, 0.491960375, 0.501961306, 0.511962222, 0.521963139, 0.531964069, 0.541964986, 0.551965917, 0.561966833, 0.571967764, 0.581968694, 0.591969611, 0.601970569, 0.611971458, 0.621972375, 0.631973319, 0.641974222, 0.651975153, 0.661976097, 0.671977014, 0.681977958, 0.691978861, 0.701979764, 0.711980764, 0.721981625, 0.731982611, 0.741983458, 0.751984403, 0.761985319, 0.77198625, 0.781987167, 0.791988083, 0.801989, 0.811989931, 0.821990847, 0.831991778, 0.841992694, 0.851993639, 0.861994597, 0.871995542, 0.881996458, 0.891997319, 0.901998236, 0.911999167, 0.922000083, 0.932001069, 0.942001931, 0.952002861, 0.962003778, 0.972004708, 0.982005639, 0.992006569, 1.002007472, 1.012008403, 1.022009319] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:25.867" endtime="20201116 13:05:25.869"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.862" endtime="20201116 13:05:25.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.871" endtime="20201116 13:05:25.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:25.875" endtime="20201116 13:05:25.894"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.873" endtime="20201116 13:05:25.894"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.870" endtime="20201116 13:05:25.895"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.351" endtime="20201116 13:05:25.895"></status>
</kw>
<msg timestamp="20201116 13:05:25.895" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.903" endtime="20201116 13:05:27.996"></status>
</kw>
<msg timestamp="20201116 13:05:27.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 28405527, 'wakeups': [28415569, 28425568, 28435562, 28445562, 28455562...</msg>
<status status="PASS" starttime="20201116 13:05:25.902" endtime="20201116 13:05:27.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 28405527, 'wakeups': [28415569, 28425568, 28435562, 28445562, 28455562...</msg>
<status status="PASS" starttime="20201116 13:05:27.999" endtime="20201116 13:05:28.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:28.005" endtime="20201116 13:05:28.009"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.899" endtime="20201116 13:05:28.010"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.897" endtime="20201116 13:05:28.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:28.016" level="INFO">${RESULT} = {'start-time': 28405527, 'timer-interval': 10000, 'timer-count': 6, 'wakeups': [28415569, 28425568, 28435562, 28445562, 28455562, 28465562, 28475562, 28485562, 28495562, 28505562, 28515562, 28525562, ...</msg>
<status status="PASS" starttime="20201116 13:05:28.012" endtime="20201116 13:05:28.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.024" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:28.023" endtime="20201116 13:05:28.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.029" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:28.027" endtime="20201116 13:05:28.030"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.018" endtime="20201116 13:05:28.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.039" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:28.037" endtime="20201116 13:05:28.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.045" level="INFO">VALUE: 28405527</msg>
<status status="PASS" starttime="20201116 13:05:28.041" endtime="20201116 13:05:28.046"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.032" endtime="20201116 13:05:28.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.055" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:28.053" endtime="20201116 13:05:28.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.061" level="INFO">VALUE: [28415569, 28425568, 28435562, 28445562, 28455562, 28465562, 28475562, 28485562, 28495562, 28505562, 28515562, 28525562, 28535562, 28545562, 28555562, 28565562, 28575562, 28585562, 28595562, 28605562, 28615562, 28625562, 28635562, 28645562, 28655562, 28665562, 28675562, 28685562, 28695562, 28705562, 28715562, 28725562, 28735562, 28745562, 28755562, 28765562, 28775562, 28785562, 28795562, 28805562, 28815562, 28825562, 28835562, 28845562, 28855562, 28865562, 28875562, 28885562, 28895562, 28905562, 28915562, 28925562, 28935562, 28945562, 28955562, 28965562, 28975562, 28985562, 28995562, 29005562, 29015562, 29025562, 29035562, 29045562, 29055562, 29065562, 29075562, 29085562, 29095562, 29105562, 29115562, 29125562, 29135562, 29145562, 29155562, 29165562, 29175562, 29185562, 29195562, 29205562, 29215562, 29225562, 29235562, 29245562, 29255562, 29265562, 29275562, 29285562, 29295562, 29305562, 29315562, 29325562, 29335562, 29345562, 29355562, 29365562, 29375562, 29385562, 29395562, 29405562]</msg>
<status status="PASS" starttime="20201116 13:05:28.058" endtime="20201116 13:05:28.062"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.048" endtime="20201116 13:05:28.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:28.076" endtime="20201116 13:05:28.369"></status>
</kw>
<msg timestamp="20201116 13:05:28.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018098528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028141236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:28.073" endtime="20201116 13:05:28.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018098528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028141236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:28.372" endtime="20201116 13:05:28.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:28.380" endtime="20201116 13:05:28.381"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.067" endtime="20201116 13:05:28.382"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.064" endtime="20201116 13:05:28.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:28.406" level="INFO">${RESULT} = {'diff': [0, 0.010042708000000001, 0.009999402999999997, 0.009995222000000005, 0.010000888999999999, 0.010000931000000005, 0.010000915999999999, 0.01000093099999999, 0.010000903000000005, 0.0100009439...</msg>
<status status="PASS" starttime="20201116 13:05:28.383" endtime="20201116 13:05:28.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.410" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:28.409" endtime="20201116 13:05:28.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.412" level="INFO">VALUE: 0.018098528</msg>
<status status="PASS" starttime="20201116 13:05:28.411" endtime="20201116 13:05:28.413"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.407" endtime="20201116 13:05:28.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.418" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:28.417" endtime="20201116 13:05:28.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:28.421" level="INFO">VALUE: [0.028141236, 0.038140639, 0.048135861, 0.05813675, 0.068137681, 0.078138597, 0.088139528, 0.098140431, 0.108141375, 0.118142278, 0.128143208, 0.138144139, 0.148145069, 0.158145972, 0.168146903, 0.178147806, 0.188148736, 0.198149653, 0.208150583, 0.2181515, 0.228152444, 0.238153361, 0.248154264, 0.258155181, 0.268156111, 0.278157028, 0.288157958, 0.298158861, 0.308159819, 0.318160722, 0.328161639, 0.338162556, 0.348163542, 0.358164403, 0.368165375, 0.378166264, 0.388167181, 0.398168097, 0.408169042, 0.418169931, 0.428170875, 0.438171778, 0.448172708, 0.458173639, 0.468174569, 0.478175486, 0.488176403, 0.498177306, 0.50817825, 0.518179153, 0.528180097, 0.538181, 0.548181958, 0.558182861, 0.568183778, 0.578184694, 0.588185625, 0.598186542, 0.608187472, 0.618188403, 0.628189333, 0.63819025, 0.648191167, 0.658192111, 0.668193014, 0.678193931, 0.688194861, 0.698195764, 0.708196694, 0.718197611, 0.728198556, 0.738199472, 0.748200389, 0.758201319, 0.768202236, 0.778203153, 0.788204097, 0.798205, 0.808205944, 0.818206861, 0.828207778, 0.838208681, 0.848209653, 0.858210542, 0.868211472, 0.878212375, 0.888213361, 0.898214222, 0.908215153, 0.918216069, 0.928217069, 0.938217931, 0.948218847, 0.958219764, 0.968220708, 0.978221639, 0.988222542, 0.998223458, 1.008224389, 1.018225306] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:28.420" endtime="20201116 13:05:28.422"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.414" endtime="20201116 13:05:28.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:28.424" endtime="20201116 13:05:28.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:28.428" endtime="20201116 13:05:28.447"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.426" endtime="20201116 13:05:28.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.423" endtime="20201116 13:05:28.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.896" endtime="20201116 13:05:28.449"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.349" endtime="20201116 13:05:28.449"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:23.348" endtime="20201116 13:05:28.449"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:28.452" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:28.460" endtime="20201116 13:05:30.553"></status>
</kw>
<msg timestamp="20201116 13:05:30.554" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 30961900, 'wakeups': [30971950, 30981950, 30991951, 31001951, 31011951...</msg>
<status status="PASS" starttime="20201116 13:05:28.458" endtime="20201116 13:05:30.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.560" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 30961900, 'wakeups': [30971950, 30981950, 30991951, 31001951, 31011951...</msg>
<status status="PASS" starttime="20201116 13:05:30.556" endtime="20201116 13:05:30.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.562" endtime="20201116 13:05:30.565"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.456" endtime="20201116 13:05:30.566"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.454" endtime="20201116 13:05:30.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:30.573" level="INFO">${RESULT} = {'start-time': 30961900, 'timer-interval': 10000, 'timer-count': 7, 'wakeups': [30971950, 30981950, 30991951, 31001951, 31011951, 31021951, 31031951, 31041951, 31051951, 31061951, 31071951, 31081951, ...</msg>
<status status="PASS" starttime="20201116 13:05:30.569" endtime="20201116 13:05:30.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.581" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:30.579" endtime="20201116 13:05:30.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.585" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:30.583" endtime="20201116 13:05:30.586"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.574" endtime="20201116 13:05:30.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.595" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:30.593" endtime="20201116 13:05:30.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.600" level="INFO">VALUE: 30961900</msg>
<status status="PASS" starttime="20201116 13:05:30.598" endtime="20201116 13:05:30.600"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.588" endtime="20201116 13:05:30.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.610" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:30.608" endtime="20201116 13:05:30.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.614" level="INFO">VALUE: [30971950, 30981950, 30991951, 31001951, 31011951, 31021951, 31031951, 31041951, 31051951, 31061951, 31071951, 31081951, 31091951, 31101951, 31111951, 31121951, 31131951, 31141951, 31151951, 31161951, 31171951, 31181951, 31191951, 31201951, 31211951, 31221951, 31231951, 31241951, 31251951, 31261951, 31271951, 31281951, 31291951, 31301951, 31311951, 31321951, 31331951, 31341951, 31351951, 31361951, 31371951, 31381951, 31391951, 31401951, 31411951, 31421951, 31431951, 31441951, 31451951, 31461951, 31471951, 31481951, 31491951, 31501951, 31511951, 31521951, 31531951, 31541951, 31551951, 31561951, 31571951, 31581951, 31591951, 31601951, 31611951, 31621951, 31631951, 31641951, 31651951, 31661951, 31671951, 31681951, 31691951, 31701951, 31711951, 31721951, 31731951, 31741951, 31751951, 31761951, 31771951, 31781951, 31791951, 31801951, 31811951, 31821951, 31831951, 31841951, 31851951, 31861951, 31871951, 31881951, 31891951, 31901951, 31911951, 31921951, 31931951, 31941951, 31951951, 31961951]</msg>
<status status="PASS" starttime="20201116 13:05:30.612" endtime="20201116 13:05:30.615"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.602" endtime="20201116 13:05:30.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.630" endtime="20201116 13:05:30.924"></status>
</kw>
<msg timestamp="20201116 13:05:30.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031040014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:30.627" endtime="20201116 13:05:30.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031040014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:30.928" endtime="20201116 13:05:30.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.936" endtime="20201116 13:05:30.937"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.621" endtime="20201116 13:05:30.938"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.617" endtime="20201116 13:05:30.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:30.961" level="INFO">${RESULT} = {'diff': [0, 0.010051375000000001, 0.010001236, 0.010001903, 0.010000902999999998, 0.010000971999999997, 0.010000875000000006, 0.010000915999999999, 0.010000931000000005, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:05:30.939" endtime="20201116 13:05:30.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.966" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:30.965" endtime="20201116 13:05:30.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.968" level="INFO">VALUE: 0.020988639</msg>
<status status="PASS" starttime="20201116 13:05:30.967" endtime="20201116 13:05:30.968"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.962" endtime="20201116 13:05:30.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.973" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:30.972" endtime="20201116 13:05:30.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.975" level="INFO">VALUE: [0.031040014, 0.04104125, 0.051043153, 0.061044056, 0.071045028, 0.081045903, 0.091046819, 0.10104775, 0.111048667, 0.121049597, 0.131050528, 0.141051431, 0.151052361, 0.161053278, 0.171054208, 0.181055125, 0.191056042, 0.201056958, 0.211057889, 0.221058806, 0.231059736, 0.241060653, 0.251061583, 0.2610625, 0.271063417, 0.281064361, 0.291065264, 0.301066194, 0.311067111, 0.321068042, 0.331068958, 0.341069875, 0.351070792, 0.361071792, 0.371072639, 0.381073569, 0.3910745, 0.401075417, 0.411076347, 0.421077264, 0.431078181, 0.441079097, 0.451080056, 0.461081014, 0.471081889, 0.481082792, 0.491083736, 0.501084681, 0.511085569, 0.521086569, 0.531087431, 0.541088347, 0.55108925, 0.561090181, 0.571091181, 0.581092028, 0.591093, 0.601093875, 0.611094792, 0.621095764, 0.631096653, 0.641097569, 0.651098486, 0.661099417, 0.671100333, 0.681101264, 0.691102181, 0.701103125, 0.711104028, 0.721105014, 0.731105875, 0.741106806, 0.751107736, 0.761108639, 0.771109569, 0.781110486, 0.791111417, 0.801112347, 0.811113278, 0.821114181, 0.831115125, 0.841116028, 0.851116958, 0.861117889, 0.871118806, 0.881119736, 0.891120694, 0.901121625, 0.9111225, 0.921123431, 0.931124347, 0.941125278, 0.951126208, 0.961127111, 0.971128042, 0.981128958, 0.991129903, 1.001130847, 1.011131736, 1.021132653] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:30.974" endtime="20201116 13:05:30.976"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.969" endtime="20201116 13:05:30.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.979" endtime="20201116 13:05:30.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:30.982" endtime="20201116 13:05:31.001"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.980" endtime="20201116 13:05:31.002"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.977" endtime="20201116 13:05:31.002"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.452" endtime="20201116 13:05:31.003"></status>
</kw>
<msg timestamp="20201116 13:05:31.003" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:31.012" endtime="20201116 13:05:33.104"></status>
</kw>
<msg timestamp="20201116 13:05:33.106" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 33513823, 'wakeups': [33523873, 33533873, 33543874, 33553874, 33563874...</msg>
<status status="PASS" starttime="20201116 13:05:31.009" endtime="20201116 13:05:33.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 33513823, 'wakeups': [33523873, 33533873, 33543874, 33553874, 33563874...</msg>
<status status="PASS" starttime="20201116 13:05:33.108" endtime="20201116 13:05:33.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.114" endtime="20201116 13:05:33.118"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.007" endtime="20201116 13:05:33.119"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.005" endtime="20201116 13:05:33.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:33.125" level="INFO">${RESULT} = {'start-time': 33513823, 'timer-interval': 10000, 'timer-count': 7, 'wakeups': [33523873, 33533873, 33543874, 33553874, 33563874, 33573874, 33583874, 33593874, 33603874, 33613874, 33623874, 33633874, ...</msg>
<status status="PASS" starttime="20201116 13:05:33.121" endtime="20201116 13:05:33.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.133" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:33.131" endtime="20201116 13:05:33.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.138" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:33.136" endtime="20201116 13:05:33.139"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.127" endtime="20201116 13:05:33.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.148" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:33.146" endtime="20201116 13:05:33.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.152" level="INFO">VALUE: 33513823</msg>
<status status="PASS" starttime="20201116 13:05:33.150" endtime="20201116 13:05:33.153"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.141" endtime="20201116 13:05:33.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.162" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:33.160" endtime="20201116 13:05:33.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.167" level="INFO">VALUE: [33523873, 33533873, 33543874, 33553874, 33563874, 33573874, 33583874, 33593874, 33603874, 33613874, 33623874, 33633874, 33643874, 33653874, 33663874, 33673874, 33683874, 33693874, 33703874, 33713874, 33723874, 33733874, 33743874, 33753874, 33763874, 33773874, 33783874, 33793874, 33803874, 33813874, 33823874, 33833874, 33843874, 33853874, 33863874, 33873874, 33883874, 33893874, 33903874, 33913874, 33923874, 33933874, 33943874, 33953874, 33963874, 33973874, 33983874, 33993874, 34003874, 34013874, 34023874, 34033874, 34043874, 34053874, 34063874, 34073874, 34083874, 34093874, 34103874, 34113874, 34123874, 34133874, 34143874, 34153874, 34163874, 34173874, 34183874, 34193874, 34203874, 34213874, 34223874, 34233874, 34243874, 34253874, 34263874, 34273874, 34283874, 34293874, 34303874, 34313874, 34323874, 34333874, 34343874, 34353874, 34363874, 34373874, 34383874, 34393874, 34403874, 34413874, 34423874, 34433874, 34443874, 34453874, 34463874, 34473874, 34483874, 34493874, 34503874, 34513874]</msg>
<status status="PASS" starttime="20201116 13:05:33.164" endtime="20201116 13:05:33.168"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.155" endtime="20201116 13:05:33.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.182" endtime="20201116 13:05:33.474"></status>
</kw>
<msg timestamp="20201116 13:05:33.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019124069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029175069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:33.179" endtime="20201116 13:05:33.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019124069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029175069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:33.477" endtime="20201116 13:05:33.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.485" endtime="20201116 13:05:33.487"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.174" endtime="20201116 13:05:33.487"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.170" endtime="20201116 13:05:33.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:33.511" level="INFO">${RESULT} = {'diff': [0, 0.010051000000000001, 0.010001541999999999, 0.010001903, 0.010000957999999997, 0.010000875000000006, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, 0.01000093099999999,...</msg>
<status status="PASS" starttime="20201116 13:05:33.488" endtime="20201116 13:05:33.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.516" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:33.515" endtime="20201116 13:05:33.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.518" level="INFO">VALUE: 0.019124069</msg>
<status status="PASS" starttime="20201116 13:05:33.517" endtime="20201116 13:05:33.519"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.513" endtime="20201116 13:05:33.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.524" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:33.523" endtime="20201116 13:05:33.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.526" level="INFO">VALUE: [0.029175069, 0.039176611, 0.049178514, 0.059179472, 0.069180347, 0.079181264, 0.089182194, 0.099183111, 0.109184042, 0.119184958, 0.129185889, 0.139186806, 0.149187722, 0.159188639, 0.169189556, 0.179190486, 0.189191403, 0.199192333, 0.20919325, 0.219194167, 0.229195097, 0.239196014, 0.249196931, 0.259197861, 0.269198778, 0.279199708, 0.289200653, 0.299201542, 0.3092025, 0.319203389, 0.329204319, 0.33920525, 0.349206153, 0.359207083, 0.369208014, 0.379208931, 0.389209847, 0.399210778, 0.409211694, 0.419212694, 0.429213625, 0.439214458, 0.449215389, 0.459216306, 0.469217222, 0.479218153, 0.489219083, 0.499220014, 0.509220931, 0.519221847, 0.529222792, 0.539223708, 0.549224625, 0.559225583, 0.569226458, 0.579227417, 0.589228306, 0.599229236, 0.609230167, 0.619231069, 0.629232014, 0.639232958, 0.649233875, 0.659234778, 0.669235681, 0.679236625, 0.689237542, 0.699238486, 0.709239389, 0.719240306, 0.729241236, 0.739242153, 0.749243069, 0.759244, 0.769244931, 0.779245847, 0.789246764, 0.799247681, 0.809248625, 0.819249542, 0.829250458, 0.839251389, 0.849252319, 0.859253222, 0.869254194, 0.879255111, 0.889256, 0.899256944, 0.909257847, 0.919258764, 0.929259694, 0.939260611, 0.949261528, 0.959262458, 0.969263375, 0.979264306, 0.989265236, 0.999266153, 1.009267069, 1.019268014] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:33.525" endtime="20201116 13:05:33.526"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.520" endtime="20201116 13:05:33.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.529" endtime="20201116 13:05:33.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:33.532" endtime="20201116 13:05:33.552"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.531" endtime="20201116 13:05:33.552"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.527" endtime="20201116 13:05:33.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:31.003" endtime="20201116 13:05:33.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.450" endtime="20201116 13:05:33.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:28.449" endtime="20201116 13:05:33.553"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:33.556" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.564" endtime="20201116 13:05:35.657"></status>
</kw>
<msg timestamp="20201116 13:05:35.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 36066181, 'wakeups': [36076241, 36086243, 36096243, 36106243, 36116243...</msg>
<status status="PASS" starttime="20201116 13:05:33.562" endtime="20201116 13:05:35.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.664" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 36066181, 'wakeups': [36076241, 36086243, 36096243, 36106243, 36116243...</msg>
<status status="PASS" starttime="20201116 13:05:35.661" endtime="20201116 13:05:35.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.667" endtime="20201116 13:05:35.670"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.560" endtime="20201116 13:05:35.671"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.558" endtime="20201116 13:05:35.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:35.677" level="INFO">${RESULT} = {'start-time': 36066181, 'timer-interval': 10000, 'timer-count': 8, 'wakeups': [36076241, 36086243, 36096243, 36106243, 36116243, 36126243, 36136243, 36146243, 36156243, 36166243, 36176243, 36186243, ...</msg>
<status status="PASS" starttime="20201116 13:05:35.673" endtime="20201116 13:05:35.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.712" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:35.684" endtime="20201116 13:05:35.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.716" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:35.714" endtime="20201116 13:05:35.717"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.679" endtime="20201116 13:05:35.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.730" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:35.728" endtime="20201116 13:05:35.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.734" level="INFO">VALUE: 36066181</msg>
<status status="PASS" starttime="20201116 13:05:35.732" endtime="20201116 13:05:35.735"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.719" endtime="20201116 13:05:35.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.744" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:35.742" endtime="20201116 13:05:35.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.748" level="INFO">VALUE: [36076241, 36086243, 36096243, 36106243, 36116243, 36126243, 36136243, 36146243, 36156243, 36166243, 36176243, 36186243, 36196243, 36206243, 36216243, 36226243, 36236243, 36246243, 36256243, 36266243, 36276243, 36286243, 36296243, 36306243, 36316243, 36326243, 36336243, 36346243, 36356243, 36366243, 36376243, 36386243, 36396243, 36406243, 36416243, 36426243, 36436243, 36446243, 36456243, 36466243, 36476243, 36486243, 36496243, 36506243, 36516243, 36526243, 36536243, 36546243, 36556243, 36566243, 36576243, 36586243, 36596243, 36606243, 36616243, 36626243, 36636243, 36646243, 36656243, 36666243, 36676243, 36686243, 36696243, 36706243, 36716243, 36726243, 36736243, 36746243, 36756243, 36766243, 36776243, 36786243, 36796243, 36806243, 36816243, 36826243, 36836243, 36846243, 36856243, 36866243, 36876243, 36886243, 36896243, 36906243, 36916243, 36926243, 36936243, 36946243, 36956243, 36966243, 36976243, 36986243, 36996243, 37006243, 37016243, 37026243, 37036243, 37046243, 37056243, 37066243]</msg>
<status status="PASS" starttime="20201116 13:05:35.746" endtime="20201116 13:05:35.749"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.737" endtime="20201116 13:05:35.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.760" endtime="20201116 13:05:36.051"></status>
</kw>
<msg timestamp="20201116 13:05:36.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021052153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031112653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:35.759" endtime="20201116 13:05:36.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021052153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031112653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:36.055" endtime="20201116 13:05:36.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:36.062" endtime="20201116 13:05:36.064"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.755" endtime="20201116 13:05:36.064"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.751" endtime="20201116 13:05:36.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:36.088" level="INFO">${RESULT} = {'diff': [0, 0.0100605, 0.010003083, 0.010000916999999998, 0.010000915999999999, 0.010000916999999998, 0.010000917000000012, 0.010000915999999999, 0.010000944999999997, 0.010000902999999992, 0.0100009...</msg>
<status status="PASS" starttime="20201116 13:05:36.065" endtime="20201116 13:05:36.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.092" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:36.091" endtime="20201116 13:05:36.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.094" level="INFO">VALUE: 0.021052153</msg>
<status status="PASS" starttime="20201116 13:05:36.093" endtime="20201116 13:05:36.095"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.089" endtime="20201116 13:05:36.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.100" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:36.099" endtime="20201116 13:05:36.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:36.102" level="INFO">VALUE: [0.031112653, 0.041115736, 0.051116653, 0.061117569, 0.071118486, 0.081119403, 0.091120319, 0.101121264, 0.111122167, 0.121123097, 0.131124056, 0.141124931, 0.151125861, 0.161126778, 0.171127708, 0.181128625, 0.191129569, 0.201130486, 0.211131403, 0.221132319, 0.231133236, 0.241134153, 0.251135083, 0.261136, 0.271136917, 0.281137847, 0.291138764, 0.301139708, 0.311140611, 0.321141569, 0.331142458, 0.341143375, 0.351144347, 0.36114525, 0.371146153, 0.381147069, 0.391148, 0.401148917, 0.411149833, 0.421150778, 0.431151681, 0.441152625, 0.451153528, 0.461154472, 0.471155375, 0.481156319, 0.491157222, 0.501158139, 0.511159097, 0.521159986, 0.531160917, 0.541161833, 0.551162764, 0.561163694, 0.571164625, 0.581165528, 0.591166472, 0.601167375, 0.611168306, 0.621169222, 0.631170139, 0.641171083, 0.651171986, 0.661172931, 0.671173833, 0.681174764, 0.691175681, 0.701176625, 0.711177528, 0.721178458, 0.731179375, 0.741180319, 0.751181236, 0.761182153, 0.771183069, 0.781184014, 0.791184917, 0.801185861, 0.811186764, 0.821187694, 0.831188611, 0.841189542, 0.851190458, 0.861191431, 0.871192306, 0.881193236, 0.891194153, 0.901195083, 0.911196, 0.921196931, 0.931197917, 0.941198792, 0.951199722, 0.961200639, 0.971201542, 0.981202472, 0.991203389, 1.001204319, 1.011205264, 1.021206153] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:36.101" endtime="20201116 13:05:36.103"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.096" endtime="20201116 13:05:36.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:36.106" endtime="20201116 13:05:36.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:36.109" endtime="20201116 13:05:36.129"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.108" endtime="20201116 13:05:36.129"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.104" endtime="20201116 13:05:36.130"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.557" endtime="20201116 13:05:36.130"></status>
</kw>
<msg timestamp="20201116 13:05:36.130" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:36.138" endtime="20201116 13:05:38.231"></status>
</kw>
<msg timestamp="20201116 13:05:38.232" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 38640073, 'wakeups': [38650133, 38660135, 38670135, 38680135, 38690135...</msg>
<status status="PASS" starttime="20201116 13:05:36.136" endtime="20201116 13:05:38.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.238" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 38640073, 'wakeups': [38650133, 38660135, 38670135, 38680135, 38690135...</msg>
<status status="PASS" starttime="20201116 13:05:38.234" endtime="20201116 13:05:38.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.240" endtime="20201116 13:05:38.243"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.134" endtime="20201116 13:05:38.244"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.132" endtime="20201116 13:05:38.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:38.251" level="INFO">${RESULT} = {'start-time': 38640073, 'timer-interval': 10000, 'timer-count': 8, 'wakeups': [38650133, 38660135, 38670135, 38680135, 38690135, 38700135, 38710135, 38720135, 38730135, 38740135, 38750135, 38760135, ...</msg>
<status status="PASS" starttime="20201116 13:05:38.247" endtime="20201116 13:05:38.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.259" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:38.257" endtime="20201116 13:05:38.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.263" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:38.261" endtime="20201116 13:05:38.264"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.252" endtime="20201116 13:05:38.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.273" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:38.271" endtime="20201116 13:05:38.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.278" level="INFO">VALUE: 38640073</msg>
<status status="PASS" starttime="20201116 13:05:38.276" endtime="20201116 13:05:38.278"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.266" endtime="20201116 13:05:38.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.288" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:38.286" endtime="20201116 13:05:38.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.292" level="INFO">VALUE: [38650133, 38660135, 38670135, 38680135, 38690135, 38700135, 38710135, 38720135, 38730135, 38740135, 38750135, 38760135, 38770135, 38780135, 38790135, 38800135, 38810135, 38820135, 38830135, 38840135, 38850135, 38860135, 38870135, 38880135, 38890135, 38900135, 38910135, 38920135, 38930135, 38940135, 38950135, 38960135, 38970135, 38980135, 38990135, 39000135, 39010135, 39020135, 39030135, 39040135, 39050135, 39060135, 39070135, 39080135, 39090135, 39100135, 39110135, 39120135, 39130135, 39140135, 39150135, 39160135, 39170135, 39180135, 39190135, 39200135, 39210135, 39220135, 39230135, 39240135, 39250135, 39260135, 39270135, 39280135, 39290135, 39300135, 39310135, 39320135, 39330135, 39340135, 39350135, 39360135, 39370135, 39380135, 39390135, 39400135, 39410135, 39420135, 39430135, 39440135, 39450135, 39460135, 39470135, 39480135, 39490135, 39500135, 39510135, 39520135, 39530135, 39540135, 39550135, 39560135, 39570135, 39580135, 39590135, 39600135, 39610135, 39620135, 39630135, 39640135]</msg>
<status status="PASS" starttime="20201116 13:05:38.290" endtime="20201116 13:05:38.293"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.281" endtime="20201116 13:05:38.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.309" endtime="20201116 13:05:38.601"></status>
</kw>
<msg timestamp="20201116 13:05:38.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017962431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028023444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:38.305" endtime="20201116 13:05:38.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017962431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028023444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:38.605" endtime="20201116 13:05:38.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.612" endtime="20201116 13:05:38.614"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.300" endtime="20201116 13:05:38.614"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.295" endtime="20201116 13:05:38.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:38.638" level="INFO">${RESULT} = {'diff': [0, 0.010061013, 0.010003112000000002, 0.010000888, 0.010000916999999998, 0.010000916999999998, 0.010000915999999999, 0.010000944999999997, 0.010000903000000005, 0.010000915999999999, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:05:38.616" endtime="20201116 13:05:38.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.643" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:38.642" endtime="20201116 13:05:38.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.645" level="INFO">VALUE: 0.017962431</msg>
<status status="PASS" starttime="20201116 13:05:38.644" endtime="20201116 13:05:38.645"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.639" endtime="20201116 13:05:38.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.650" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:38.649" endtime="20201116 13:05:38.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.652" level="INFO">VALUE: [0.028023444, 0.038026556, 0.048027444, 0.058028361, 0.068029278, 0.078030194, 0.088031139, 0.098032042, 0.108032958, 0.118033889, 0.128034806, 0.13803575, 0.148036681, 0.158037597, 0.168038514, 0.178039444, 0.188040333, 0.198041264, 0.208042181, 0.218043097, 0.228044056, 0.238044986, 0.248045944, 0.258046833, 0.268047708, 0.278048653, 0.288049556, 0.298050486, 0.308051403, 0.318052319, 0.32805325, 0.338054181, 0.348055111, 0.358056014, 0.368056958, 0.378057875, 0.388058778, 0.398059708, 0.408060639, 0.418061556, 0.428062472, 0.438063486, 0.448064319, 0.458065236, 0.468066167, 0.478067083, 0.488068028, 0.498068944, 0.508069861, 0.518070778, 0.528071694, 0.538072625, 0.548073542, 0.558074472, 0.568075403, 0.578076389, 0.588077236, 0.598078167, 0.608079083, 0.618080083, 0.628080944, 0.638081875, 0.648082806, 0.658083722, 0.668084639, 0.678085556, 0.688086472, 0.698087389, 0.708088333, 0.718089278, 0.728090167, 0.738091111, 0.748092028, 0.758092931, 0.768093861, 0.778094792, 0.788095708, 0.798096625, 0.808097556, 0.818098472, 0.828099403, 0.838100333, 0.84810125, 0.858102181, 0.868103097, 0.878104014, 0.888104986, 0.898105861, 0.908106792, 0.918107708, 0.928108625, 0.938109556, 0.948110472, 0.958111403, 0.968112319, 0.97811325, 0.988114167, 0.998115111, 1.008116056, 1.018116958] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:38.651" endtime="20201116 13:05:38.652"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.646" endtime="20201116 13:05:38.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.655" endtime="20201116 13:05:38.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:38.658" endtime="20201116 13:05:38.678"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.657" endtime="20201116 13:05:38.678"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.653" endtime="20201116 13:05:38.679"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:36.131" endtime="20201116 13:05:38.679"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.554" endtime="20201116 13:05:38.679"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.554" endtime="20201116 13:05:38.679"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:38.682" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.691" endtime="20201116 13:05:40.785"></status>
</kw>
<msg timestamp="20201116 13:05:40.786" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 41193440, 'wakeups': [41203510, 41213488, 41223489, 41233489, 41243489...</msg>
<status status="PASS" starttime="20201116 13:05:38.689" endtime="20201116 13:05:40.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 41193440, 'wakeups': [41203510, 41213488, 41223489, 41233489, 41243489...</msg>
<status status="PASS" starttime="20201116 13:05:40.788" endtime="20201116 13:05:40.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.794" endtime="20201116 13:05:40.797"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.686" endtime="20201116 13:05:40.798"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.684" endtime="20201116 13:05:40.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:40.805" level="INFO">${RESULT} = {'start-time': 41193440, 'timer-interval': 10000, 'timer-count': 9, 'wakeups': [41203510, 41213488, 41223489, 41233489, 41243489, 41253489, 41263489, 41273489, 41283489, 41293489, 41303489, 41313489, ...</msg>
<status status="PASS" starttime="20201116 13:05:40.801" endtime="20201116 13:05:40.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.813" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:40.811" endtime="20201116 13:05:40.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.818" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:40.816" endtime="20201116 13:05:40.818"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.807" endtime="20201116 13:05:40.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.828" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:40.825" endtime="20201116 13:05:40.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.832" level="INFO">VALUE: 41193440</msg>
<status status="PASS" starttime="20201116 13:05:40.830" endtime="20201116 13:05:40.833"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.820" endtime="20201116 13:05:40.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.842" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:40.840" endtime="20201116 13:05:40.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.846" level="INFO">VALUE: [41203510, 41213488, 41223489, 41233489, 41243489, 41253489, 41263489, 41273489, 41283489, 41293489, 41303489, 41313489, 41323489, 41333489, 41343489, 41353489, 41363489, 41373489, 41383489, 41393489, 41403489, 41413489, 41423489, 41433489, 41443489, 41453489, 41463489, 41473489, 41483489, 41493489, 41503489, 41513489, 41523489, 41533489, 41543489, 41553489, 41563489, 41573489, 41583489, 41593489, 41603489, 41613489, 41623489, 41633489, 41643489, 41653489, 41663489, 41673489, 41683489, 41693489, 41703489, 41713489, 41723489, 41733489, 41743489, 41753489, 41763489, 41773489, 41783489, 41793489, 41803489, 41813489, 41823489, 41833489, 41843489, 41853489, 41863489, 41873489, 41883489, 41893489, 41903489, 41913489, 41923489, 41933489, 41943489, 41953489, 41963489, 41973489, 41983489, 41993489, 42003489, 42013489, 42023489, 42033489, 42043489, 42053489, 42063489, 42073489, 42083489, 42093489, 42103489, 42113489, 42123489, 42133489, 42143489, 42153489, 42163489, 42173489, 42183489, 42193489]</msg>
<status status="PASS" starttime="20201116 13:05:40.844" endtime="20201116 13:05:40.847"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.835" endtime="20201116 13:05:40.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.862" endtime="20201116 13:05:41.154"></status>
</kw>
<msg timestamp="20201116 13:05:41.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032343125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:40.858" endtime="20201116 13:05:41.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032343125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:41.158" endtime="20201116 13:05:41.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:41.166" endtime="20201116 13:05:41.172"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.853" endtime="20201116 13:05:41.172"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.850" endtime="20201116 13:05:41.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:41.197" level="INFO">${RESULT} = {'diff': [0, 0.010070681000000001, 0.009979861, 0.010001916999999999, 0.010000915999999999, 0.010000930999999998, 0.010000916999999998, 0.010000916000000012, 0.010000916999999998, 0.01000098599999999,...</msg>
<status status="PASS" starttime="20201116 13:05:41.174" endtime="20201116 13:05:41.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.202" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:41.201" endtime="20201116 13:05:41.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.204" level="INFO">VALUE: 0.022272444</msg>
<status status="PASS" starttime="20201116 13:05:41.203" endtime="20201116 13:05:41.204"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.198" endtime="20201116 13:05:41.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.209" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:41.208" endtime="20201116 13:05:41.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:41.211" level="INFO">VALUE: [0.032343125, 0.042322986, 0.052324903, 0.062325819, 0.07232675, 0.082327667, 0.092328583, 0.1023295, 0.112330486, 0.122331361, 0.132332264, 0.142333194, 0.152334111, 0.162335028, 0.172335944, 0.182336875, 0.192337792, 0.202338736, 0.212339639, 0.222340569, 0.232341486, 0.242342403, 0.252343361, 0.26234425, 0.272345167, 0.282346097, 0.292347014, 0.302347931, 0.312348861, 0.322349778, 0.332350694, 0.342351625, 0.352352542, 0.362353486, 0.372354444, 0.382355306, 0.392356236, 0.402357153, 0.412358097, 0.422359, 0.432359931, 0.442360847, 0.452361833, 0.462362694, 0.472363611, 0.482364542, 0.492365472, 0.502366389, 0.512367319, 0.522368222, 0.532369153, 0.542370097, 0.552371, 0.562371917, 0.572372847, 0.582373764, 0.592374681, 0.602375625, 0.612376542, 0.622377458, 0.632378389, 0.642379306, 0.652380222, 0.662381153, 0.672382069, 0.682383, 0.692383917, 0.702384833, 0.712385764, 0.722386681, 0.732387625, 0.742388528, 0.752389458, 0.762390375, 0.772391306, 0.782392236, 0.792393153, 0.802394097, 0.812395, 0.822395931, 0.832396833, 0.842397819, 0.852398694, 0.862399639, 0.872400542, 0.882401458, 0.892402389, 0.902403306, 0.912404278, 0.922405153, 0.932406069, 0.942407, 0.952407917, 0.962408847, 0.972409792, 0.982410681, 0.992411625, 1.002412542, 1.012413458, 1.022414375] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:41.210" endtime="20201116 13:05:41.211"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.205" endtime="20201116 13:05:41.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:41.214" endtime="20201116 13:05:41.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:41.218" endtime="20201116 13:05:41.237"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.216" endtime="20201116 13:05:41.238"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.213" endtime="20201116 13:05:41.238"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.683" endtime="20201116 13:05:41.238"></status>
</kw>
<msg timestamp="20201116 13:05:41.239" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:41.247" endtime="20201116 13:05:43.339"></status>
</kw>
<msg timestamp="20201116 13:05:43.340" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 43748701, 'wakeups': [43758774, 43768774, 43778767, 43788767, 43798767...</msg>
<status status="PASS" starttime="20201116 13:05:41.245" endtime="20201116 13:05:43.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.346" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 43748701, 'wakeups': [43758774, 43768774, 43778767, 43788767, 43798767...</msg>
<status status="PASS" starttime="20201116 13:05:43.342" endtime="20201116 13:05:43.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.348" endtime="20201116 13:05:43.351"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.242" endtime="20201116 13:05:43.353"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.241" endtime="20201116 13:05:43.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:43.359" level="INFO">${RESULT} = {'start-time': 43748701, 'timer-interval': 10000, 'timer-count': 9, 'wakeups': [43758774, 43768774, 43778767, 43788767, 43798767, 43808767, 43818767, 43828767, 43838767, 43848767, 43858767, 43868767, ...</msg>
<status status="PASS" starttime="20201116 13:05:43.355" endtime="20201116 13:05:43.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.368" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:43.366" endtime="20201116 13:05:43.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.374" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:43.372" endtime="20201116 13:05:43.375"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.361" endtime="20201116 13:05:43.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.385" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:43.382" endtime="20201116 13:05:43.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.389" level="INFO">VALUE: 43748701</msg>
<status status="PASS" starttime="20201116 13:05:43.387" endtime="20201116 13:05:43.390"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.378" endtime="20201116 13:05:43.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.399" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:43.397" endtime="20201116 13:05:43.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.403" level="INFO">VALUE: [43758774, 43768774, 43778767, 43788767, 43798767, 43808767, 43818767, 43828767, 43838767, 43848767, 43858767, 43868767, 43878767, 43888767, 43898767, 43908767, 43918767, 43928767, 43938767, 43948767, 43958767, 43968767, 43978767, 43988767, 43998767, 44008767, 44018767, 44028767, 44038767, 44048767, 44058767, 44068767, 44078767, 44088767, 44098767, 44108767, 44118767, 44128767, 44138767, 44148767, 44158767, 44168767, 44178767, 44188767, 44198767, 44208767, 44218767, 44228767, 44238767, 44248767, 44258767, 44268767, 44278767, 44288767, 44298767, 44308767, 44318767, 44328767, 44338767, 44348767, 44358767, 44368767, 44378767, 44388767, 44398767, 44408767, 44418767, 44428767, 44438767, 44448767, 44458767, 44468767, 44478767, 44488767, 44498767, 44508767, 44518767, 44528767, 44538767, 44548767, 44558767, 44568767, 44578767, 44588767, 44598767, 44608767, 44618767, 44628767, 44638767, 44648767, 44658767, 44668767, 44678767, 44688767, 44698767, 44708767, 44718767, 44728767, 44738767, 44748767]</msg>
<status status="PASS" starttime="20201116 13:05:43.401" endtime="20201116 13:05:43.404"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.392" endtime="20201116 13:05:43.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.419" endtime="20201116 13:05:43.716"></status>
</kw>
<msg timestamp="20201116 13:05:43.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018161194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028234861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:43.415" endtime="20201116 13:05:43.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018161194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028234861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:43.720" endtime="20201116 13:05:43.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.727" endtime="20201116 13:05:43.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.410" endtime="20201116 13:05:43.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.406" endtime="20201116 13:05:43.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:43.753" level="INFO">${RESULT} = {'diff': [0, 0.010073667000000001, 0.010000361, 0.009994042000000002, 0.010000929999999998, 0.010000903000000005, 0.010000916999999998, 0.010000929999999991, 0.010000917000000012, 0.010000916999999998...</msg>
<status status="PASS" starttime="20201116 13:05:43.731" endtime="20201116 13:05:43.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.758" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:43.757" endtime="20201116 13:05:43.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.760" level="INFO">VALUE: 0.018161194</msg>
<status status="PASS" starttime="20201116 13:05:43.759" endtime="20201116 13:05:43.761"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.754" endtime="20201116 13:05:43.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.766" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:43.765" endtime="20201116 13:05:43.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.768" level="INFO">VALUE: [0.028234861, 0.038235222, 0.048229264, 0.058230194, 0.068231097, 0.078232014, 0.088232944, 0.098233861, 0.108234778, 0.118235708, 0.128236639, 0.138237542, 0.148238472, 0.158239431, 0.168240319, 0.178241236, 0.188242153, 0.198243069, 0.208244014, 0.218244931, 0.228245861, 0.238246764, 0.248247681, 0.258248611, 0.268249542, 0.278250444, 0.288251375, 0.298252292, 0.308253236, 0.318254139, 0.328255056, 0.338256, 0.348256917, 0.358257847, 0.368258778, 0.378259681, 0.388260625, 0.398261514, 0.408262472, 0.418263375, 0.428264278, 0.438265208, 0.448266153, 0.458267056, 0.468267972, 0.478268917, 0.488269819, 0.49827075, 0.508271722, 0.518272625, 0.528273514, 0.538274431, 0.548275375, 0.558276306, 0.568277208, 0.578278125, 0.588279042, 0.59828, 0.608280944, 0.618281833, 0.628282736, 0.638283667, 0.648284597, 0.6582855, 0.668286431, 0.678287347, 0.688288278, 0.698289222, 0.708290125, 0.718291042, 0.728291972, 0.738292958, 0.748293819, 0.75829475, 0.768295653, 0.778296597, 0.7882975, 0.798298444, 0.808299347, 0.818300278, 0.828301194, 0.838302181, 0.848303042, 0.858303972, 0.868304903, 0.878305806, 0.888306736, 0.898307653, 0.908308583, 0.918309514, 0.928310472, 0.938311361, 0.948312264, 0.958313208, 0.968314125, 0.978315042, 0.988315958, 0.998316889, 1.008317806, 1.018318792] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:43.767" endtime="20201116 13:05:43.769"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.762" endtime="20201116 13:05:43.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.771" endtime="20201116 13:05:43.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:43.775" endtime="20201116 13:05:43.794"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.773" endtime="20201116 13:05:43.795"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.770" endtime="20201116 13:05:43.795"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:41.239" endtime="20201116 13:05:43.795"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.680" endtime="20201116 13:05:43.796"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.680" endtime="20201116 13:05:43.796"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:43.799" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.806" endtime="20201116 13:05:45.900"></status>
</kw>
<msg timestamp="20201116 13:05:45.901" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 46308603, 'wakeups': [46318685, 46328685, 46338685, 46348685, 463586...</msg>
<status status="PASS" starttime="20201116 13:05:43.805" endtime="20201116 13:05:45.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.907" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 46308603, 'wakeups': [46318685, 46328685, 46338685, 46348685, 463586...</msg>
<status status="PASS" starttime="20201116 13:05:45.903" endtime="20201116 13:05:45.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:45.909" endtime="20201116 13:05:45.912"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.802" endtime="20201116 13:05:45.913"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.800" endtime="20201116 13:05:45.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:45.920" level="INFO">${RESULT} = {'start-time': 46308603, 'timer-interval': 10000, 'timer-count': 10, 'wakeups': [46318685, 46328685, 46338685, 46348685, 46358685, 46368685, 46378685, 46388685, 46398685, 46408685, 46418685, 46428685,...</msg>
<status status="PASS" starttime="20201116 13:05:45.916" endtime="20201116 13:05:45.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.928" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:45.926" endtime="20201116 13:05:45.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.932" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:45.931" endtime="20201116 13:05:45.933"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.922" endtime="20201116 13:05:45.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.943" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:45.941" endtime="20201116 13:05:45.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.947" level="INFO">VALUE: 46308603</msg>
<status status="PASS" starttime="20201116 13:05:45.945" endtime="20201116 13:05:45.948"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.936" endtime="20201116 13:05:45.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.958" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:45.956" endtime="20201116 13:05:45.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.962" level="INFO">VALUE: [46318685, 46328685, 46338685, 46348685, 46358685, 46368685, 46378685, 46388685, 46398685, 46408685, 46418685, 46428685, 46438685, 46448685, 46458685, 46468685, 46478685, 46488685, 46498685, 46508685, 46518685, 46528685, 46538685, 46548685, 46558685, 46568685, 46578685, 46588685, 46598685, 46608685, 46618685, 46628685, 46638685, 46648685, 46658685, 46668685, 46678685, 46688685, 46698685, 46708685, 46718685, 46728685, 46738685, 46748685, 46758685, 46768685, 46778685, 46788685, 46798685, 46808685, 46818685, 46828685, 46838685, 46848685, 46858685, 46868685, 46878685, 46888685, 46898685, 46908685, 46918685, 46928685, 46938685, 46948685, 46958685, 46968685, 46978685, 46988685, 46998685, 47008685, 47018685, 47028685, 47038685, 47048685, 47058685, 47068685, 47078685, 47088685, 47098685, 47108685, 47118685, 47128685, 47138685, 47148685, 47158685, 47168685, 47178685, 47188685, 47198685, 47208685, 47218685, 47228685, 47238685, 47248685, 47258685, 47268685, 47278685, 47288685, 47298685, 47308685]</msg>
<status status="PASS" starttime="20201116 13:05:45.960" endtime="20201116 13:05:45.963"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.950" endtime="20201116 13:05:45.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:45.979" endtime="20201116 13:05:46.276"></status>
</kw>
<msg timestamp="20201116 13:05:46.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031154056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:45.976" endtime="20201116 13:05:46.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:46.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031154056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:46.280" endtime="20201116 13:05:46.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:46.287" endtime="20201116 13:05:46.289"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.971" endtime="20201116 13:05:46.289"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.965" endtime="20201116 13:05:46.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:46.313" level="INFO">${RESULT} = {'diff': [0, 0.010082874999999998, 0.010001097, 0.010000875, 0.010000929999999998, 0.010000916999999998, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:05:46.290" endtime="20201116 13:05:46.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:46.318" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:46.317" endtime="20201116 13:05:46.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:46.320" level="INFO">VALUE: 0.021071181</msg>
<status status="PASS" starttime="20201116 13:05:46.319" endtime="20201116 13:05:46.320"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.314" endtime="20201116 13:05:46.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:46.325" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:46.324" endtime="20201116 13:05:46.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:46.327" level="INFO">VALUE: [0.031154056, 0.041155153, 0.051156028, 0.061156958, 0.071157875, 0.081158792, 0.091159722, 0.101160639, 0.111161556, 0.1211625, 0.131163444, 0.141164319, 0.15116525, 0.161166181, 0.171167097, 0.181168028, 0.191168944, 0.201169861, 0.211170778, 0.221171708, 0.231172625, 0.241173542, 0.251174486, 0.261175389, 0.271176319, 0.281177236, 0.291178167, 0.301179097, 0.31118, 0.321180917, 0.331181847, 0.341182764, 0.351183722, 0.361184611, 0.371185528, 0.381186486, 0.391187389, 0.401188306, 0.411189222, 0.421190153, 0.431191069, 0.441192, 0.451192917, 0.461193847, 0.471194778, 0.481195694, 0.491196611, 0.501197528, 0.511198458, 0.521199403, 0.531200306, 0.541201222, 0.551202153, 0.561203069, 0.571203986, 0.581204931, 0.591205833, 0.601206764, 0.611207694, 0.621208639, 0.631209528, 0.641210444, 0.651211375, 0.661212306, 0.671213222, 0.681214139, 0.691215097, 0.701215986, 0.711216931, 0.721217833, 0.731218778, 0.741219681, 0.751220597, 0.761221528, 0.771222444, 0.781223403, 0.791224292, 0.801225278, 0.811226139, 0.821227097, 0.831228, 0.841228931, 0.851229833, 0.861230764, 0.871231681, 0.881232611, 0.891233528, 0.901234458, 0.911235375, 0.921236375, 0.931237222, 0.941238139, 0.951239069, 0.961239986, 0.971240944, 0.981241833, 0.991242778, 1.001243736, 1.011244625, 1.021245528] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:46.326" endtime="20201116 13:05:46.328"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.321" endtime="20201116 13:05:46.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:46.330" endtime="20201116 13:05:46.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:46.338" endtime="20201116 13:05:46.357"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.336" endtime="20201116 13:05:46.358"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.329" endtime="20201116 13:05:46.358"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.799" endtime="20201116 13:05:46.358"></status>
</kw>
<msg timestamp="20201116 13:05:46.359" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:46.368" endtime="20201116 13:05:48.460"></status>
</kw>
<msg timestamp="20201116 13:05:48.461" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 48869762, 'wakeups': [48879845, 48889822, 48899838, 48909845, 489198...</msg>
<status status="PASS" starttime="20201116 13:05:46.366" endtime="20201116 13:05:48.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.467" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 48869762, 'wakeups': [48879845, 48889822, 48899838, 48909845, 489198...</msg>
<status status="PASS" starttime="20201116 13:05:48.464" endtime="20201116 13:05:48.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:48.470" endtime="20201116 13:05:48.473"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.363" endtime="20201116 13:05:48.474"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.361" endtime="20201116 13:05:48.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:48.481" level="INFO">${RESULT} = {'start-time': 48869762, 'timer-interval': 10000, 'timer-count': 10, 'wakeups': [48879845, 48889822, 48899838, 48909845, 48919844, 48929844, 48939844, 48949844, 48959844, 48969844, 48979844, 48989844,...</msg>
<status status="PASS" starttime="20201116 13:05:48.477" endtime="20201116 13:05:48.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.489" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:48.487" endtime="20201116 13:05:48.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.493" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:48.491" endtime="20201116 13:05:48.494"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.482" endtime="20201116 13:05:48.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.503" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:48.501" endtime="20201116 13:05:48.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.508" level="INFO">VALUE: 48869762</msg>
<status status="PASS" starttime="20201116 13:05:48.506" endtime="20201116 13:05:48.508"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.496" endtime="20201116 13:05:48.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.518" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:48.515" endtime="20201116 13:05:48.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.522" level="INFO">VALUE: [48879845, 48889822, 48899838, 48909845, 48919844, 48929844, 48939844, 48949844, 48959844, 48969844, 48979844, 48989844, 48999844, 49009844, 49019844, 49029844, 49039844, 49049844, 49059844, 49069844, 49079844, 49089844, 49099844, 49109844, 49119844, 49129844, 49139844, 49149844, 49159844, 49169844, 49179844, 49189844, 49199844, 49209844, 49219844, 49229844, 49239844, 49249844, 49259844, 49269844, 49279844, 49289844, 49299844, 49309844, 49319844, 49329844, 49339844, 49349844, 49359844, 49369844, 49379844, 49389844, 49399844, 49409844, 49419844, 49429844, 49439844, 49449844, 49459844, 49469844, 49479844, 49489844, 49499844, 49509844, 49519844, 49529844, 49539844, 49549844, 49559844, 49569844, 49579844, 49589844, 49599844, 49609844, 49619844, 49629844, 49639844, 49649844, 49659844, 49669844, 49679844, 49689844, 49699844, 49709844, 49719844, 49729844, 49739844, 49749844, 49759844, 49769844, 49779844, 49789844, 49799844, 49809844, 49819844, 49829844, 49839844, 49849844, 49859844, 49869844]</msg>
<status status="PASS" starttime="20201116 13:05:48.520" endtime="20201116 13:05:48.523"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.510" endtime="20201116 13:05:48.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:48.532" endtime="20201116 13:05:48.823"></status>
</kw>
<msg timestamp="20201116 13:05:48.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029156542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:48.530" endtime="20201116 13:05:48.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029156542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:48.827" endtime="20201116 13:05:48.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:48.834" endtime="20201116 13:05:48.836"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.527" endtime="20201116 13:05:48.836"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.525" endtime="20201116 13:05:48.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:48.861" level="INFO">${RESULT} = {'diff': [0, 0.010083959, 0.009978500000000001, 0.010016526999999997, 0.010008542000000002, 0.009999888999999998, 0.010000931000000005, 0.010000915999999999, 0.010000916999999998, 0.010000930000000005...</msg>
<status status="PASS" starttime="20201116 13:05:48.838" endtime="20201116 13:05:48.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.865" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:48.864" endtime="20201116 13:05:48.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.867" level="INFO">VALUE: 0.019072583</msg>
<status status="PASS" starttime="20201116 13:05:48.866" endtime="20201116 13:05:48.868"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.862" endtime="20201116 13:05:48.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.873" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:48.871" endtime="20201116 13:05:48.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:48.875" level="INFO">VALUE: [0.029156542, 0.039135042, 0.049151569, 0.059160111, 0.06916, 0.079160931, 0.089161847, 0.099162764, 0.109163694, 0.119164611, 0.129165597, 0.139166458, 0.149167375, 0.159168347, 0.169169222, 0.179170153, 0.189171056, 0.199171986, 0.209172903, 0.219173847, 0.229174764, 0.239175667, 0.249176611, 0.259177514, 0.269178444, 0.279179361, 0.289180292, 0.299181264, 0.309182139, 0.319183069, 0.329184028, 0.339184889, 0.349185889, 0.359186736, 0.369187667, 0.379188583, 0.3891895, 0.399190458, 0.409191347, 0.419192292, 0.429193194, 0.439194125, 0.449195042, 0.459196014, 0.469196903, 0.479197833, 0.489198736, 0.499199667, 0.509200583, 0.5192015, 0.529202431, 0.539203403, 0.549204292, 0.559205208, 0.569206181, 0.579207042, 0.589207972, 0.599208903, 0.609209806, 0.619210736, 0.629211694, 0.639212597, 0.6492135, 0.659214431, 0.669215361, 0.679216278, 0.689217194, 0.699218125, 0.709219069, 0.719219986, 0.729220917, 0.739221819, 0.749222736, 0.759223667, 0.769224583, 0.779225514, 0.789226458, 0.799227389, 0.809228278, 0.819229208, 0.829230125, 0.839231042, 0.849231972, 0.859232889, 0.869233819, 0.879234736, 0.889235667, 0.899236583, 0.909237514, 0.919238431, 0.929239361, 0.939240292, 0.949241222, 0.959242125, 0.969243056, 0.979243972, 0.989244903, 0.999245847, 1.009246764, 1.019247667] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:48.874" endtime="20201116 13:05:48.875"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.869" endtime="20201116 13:05:48.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:48.878" endtime="20201116 13:05:48.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:48.881" endtime="20201116 13:05:48.900"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.880" endtime="20201116 13:05:48.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:48.876" endtime="20201116 13:05:48.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:46.359" endtime="20201116 13:05:48.902"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.797" endtime="20201116 13:05:48.902"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.796" endtime="20201116 13:05:48.902"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.857" endtime="20201116 13:05:48.902"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:04:57.781" endtime="20201116 13:05:48.903" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:04:56.347" endtime="20201116 13:05:48.906"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:04:54.445" endtime="20201116 13:05:48.916"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
