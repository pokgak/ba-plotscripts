<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:05:51.865" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:05:52.433" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:05:52.441" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:05:53.547" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:05:52.431" endtime="20201116 13:05:53.548"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.550" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:05:53.549" endtime="20201116 13:05:53.551"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.430" endtime="20201116 13:05:53.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:53.554" endtime="20201116 13:05:53.738"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.552" endtime="20201116 13:05:53.739"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.752" endtime="20201116 13:05:53.767"></status>
</kw>
<msg timestamp="20201116 13:05:53.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:53.750" endtime="20201116 13:05:53.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:53.768" endtime="20201116 13:05:53.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.773" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:53.771" endtime="20201116 13:05:53.773"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:53.748" endtime="20201116 13:05:53.774"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:53.745" endtime="20201116 13:05:53.775"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.744" endtime="20201116 13:05:53.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:53.779" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:53.778" endtime="20201116 13:05:53.779"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.776" endtime="20201116 13:05:53.780"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.743" endtime="20201116 13:05:53.780"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.743" endtime="20201116 13:05:53.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.781" endtime="20201116 13:05:53.782"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.741" endtime="20201116 13:05:53.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.783" endtime="20201116 13:05:53.785"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.740" endtime="20201116 13:05:53.785"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:52.428" endtime="20201116 13:05:53.786"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:53.792" endtime="20201116 13:05:53.811"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.790" endtime="20201116 13:05:53.812"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.828" endtime="20201116 13:05:53.842"></status>
</kw>
<msg timestamp="20201116 13:05:53.843" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:53.825" endtime="20201116 13:05:53.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.845" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:53.844" endtime="20201116 13:05:53.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.848" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:53.846" endtime="20201116 13:05:53.849"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:53.821" endtime="20201116 13:05:53.849"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:53.819" endtime="20201116 13:05:53.850"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.817" endtime="20201116 13:05:53.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:53.854" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:53.853" endtime="20201116 13:05:53.854"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.851" endtime="20201116 13:05:53.854"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.816" endtime="20201116 13:05:53.854"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.816" endtime="20201116 13:05:53.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.855" endtime="20201116 13:05:53.857"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.814" endtime="20201116 13:05:53.857"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.813" endtime="20201116 13:05:53.858"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.789" endtime="20201116 13:05:53.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.865" endtime="20201116 13:05:53.875"></status>
</kw>
<msg timestamp="20201116 13:05:53.875" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:53.864" endtime="20201116 13:05:53.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.878" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:53.876" endtime="20201116 13:05:53.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:53.879" endtime="20201116 13:05:53.880"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.861" endtime="20201116 13:05:53.881"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.859" endtime="20201116 13:05:53.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.886" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:05:53.884" endtime="20201116 13:05:53.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.888" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201116 13:05:53.887" endtime="20201116 13:05:53.888"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.882" endtime="20201116 13:05:53.888"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:05:53.786" endtime="20201116 13:05:53.889" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:05:51.977" endtime="20201116 13:05:53.892"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:05:53.943" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:05:53.951" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:05:55.117" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:05:53.942" endtime="20201116 13:05:55.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.120" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:05:55.119" endtime="20201116 13:05:55.121"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.941" endtime="20201116 13:05:55.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:55.123" endtime="20201116 13:05:55.344"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.122" endtime="20201116 13:05:55.345"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.357" endtime="20201116 13:05:55.371"></status>
</kw>
<msg timestamp="20201116 13:05:55.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:55.355" endtime="20201116 13:05:55.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:55.373" endtime="20201116 13:05:55.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.377" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:55.375" endtime="20201116 13:05:55.378"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:55.353" endtime="20201116 13:05:55.378"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:55.351" endtime="20201116 13:05:55.379"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.350" endtime="20201116 13:05:55.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:55.383" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:55.382" endtime="20201116 13:05:55.383"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.380" endtime="20201116 13:05:55.384"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.349" endtime="20201116 13:05:55.384"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.348" endtime="20201116 13:05:55.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.385" endtime="20201116 13:05:55.386"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.347" endtime="20201116 13:05:55.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.387" endtime="20201116 13:05:55.389"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.345" endtime="20201116 13:05:55.390"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:53.939" endtime="20201116 13:05:55.390"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:55.396" endtime="20201116 13:05:55.417"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.395" endtime="20201116 13:05:55.417"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.431" endtime="20201116 13:05:55.446"></status>
</kw>
<msg timestamp="20201116 13:05:55.446" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:55.430" endtime="20201116 13:05:55.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:05:55.448" endtime="20201116 13:05:55.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:05:55.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:05:55.451" endtime="20201116 13:05:55.453"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:55.427" endtime="20201116 13:05:55.454"></status>
</kw>
<status status="FAIL" starttime="20201116 13:05:55.425" endtime="20201116 13:05:55.454"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.422" endtime="20201116 13:05:55.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:05:55.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:05:55.458" endtime="20201116 13:05:55.459"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.456" endtime="20201116 13:05:55.460"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.422" endtime="20201116 13:05:55.460"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.421" endtime="20201116 13:05:55.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.461" endtime="20201116 13:05:55.462"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.420" endtime="20201116 13:05:55.463"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.418" endtime="20201116 13:05:55.463"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.393" endtime="20201116 13:05:55.463"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:55.467" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:55.476" endtime="20201116 13:05:57.581"></status>
</kw>
<msg timestamp="20201116 13:05:57.582" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4509012, 'wakeups': [4519018, 4529018, 4539018, 4549018, 4559018, 4569...</msg>
<status status="PASS" starttime="20201116 13:05:55.474" endtime="20201116 13:05:57.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4509012, 'wakeups': [4519018, 4529018, 4539018, 4549018, 4559018, 4569...</msg>
<status status="PASS" starttime="20201116 13:05:57.584" endtime="20201116 13:05:57.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.590" endtime="20201116 13:05:57.594"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.471" endtime="20201116 13:05:57.595"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.469" endtime="20201116 13:05:57.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:57.601" level="INFO">${RESULT} = {'start-time': 4509012, 'timer-count': 1, 'wakeups': [4519018, 4529018, 4539018, 4549018, 4559018, 4569018, 4579018, 4589018, 4599018, 4609018, 4619018, 4629018, 4639018, 4649018, 4659018, 4669018, 46...</msg>
<status status="PASS" starttime="20201116 13:05:57.597" endtime="20201116 13:05:57.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.610" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:57.608" endtime="20201116 13:05:57.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.614" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:57.612" endtime="20201116 13:05:57.615"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.603" endtime="20201116 13:05:57.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.620" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:57.619" endtime="20201116 13:05:57.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.622" level="INFO">VALUE: 4509012</msg>
<status status="PASS" starttime="20201116 13:05:57.621" endtime="20201116 13:05:57.622"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.616" endtime="20201116 13:05:57.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.628" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:57.627" endtime="20201116 13:05:57.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.630" level="INFO">VALUE: [4519018, 4529018, 4539018, 4549018, 4559018, 4569018, 4579018, 4589018, 4599018, 4609018, 4619018, 4629018, 4639018, 4649018, 4659018, 4669018, 4679018, 4689018, 4699018, 4709018, 4719018, 4729018, 4739018, 4749018, 4759018, 4769018, 4779018, 4789018, 4799018, 4809018, 4819018, 4829018, 4839018, 4849018, 4859018, 4869018, 4879018, 4889018, 4899018, 4909018, 4919018, 4929018, 4939018, 4949018, 4959018, 4969018, 4979018, 4989018, 4999018, 5009018, 5019018, 5029018, 5039018, 5049018, 5059018, 5069018, 5079018, 5089018, 5099018, 5109018, 5119018, 5129018, 5139018, 5149018, 5159018, 5169018, 5179018, 5189018, 5199018, 5209018, 5219018, 5229018, 5239018, 5249018, 5259018, 5269018, 5279018, 5289018, 5299018, 5309018, 5319018, 5329018, 5339018, 5349018, 5359018, 5369018, 5379018, 5389018, 5399018, 5409018, 5419018, 5429018, 5439018, 5449018, 5459018, 5469018, 5479018, 5489018, 5499018, 5509018]</msg>
<status status="PASS" starttime="20201116 13:05:57.629" endtime="20201116 13:05:57.631"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.624" endtime="20201116 13:05:57.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.637" endtime="20201116 13:05:57.934"></status>
</kw>
<msg timestamp="20201116 13:05:57.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069078556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079086056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:57.636" endtime="20201116 13:05:57.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069078556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079086056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:57.938" endtime="20201116 13:05:57.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.946" endtime="20201116 13:05:57.948"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.633" endtime="20201116 13:05:57.948"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.632" endtime="20201116 13:05:57.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:57.972" level="INFO">${RESULT} = {'diff': [0, 0.010007500000000003, 0.010000762999999996, 0.010000598, 0.010000819000000008, 0.010000652999999998, 0.010000847000000007, 0.010000666999999991, 0.010000791000000009, 0.010000652999999998...</msg>
<status status="PASS" starttime="20201116 13:05:57.949" endtime="20201116 13:05:57.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.977" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:05:57.976" endtime="20201116 13:05:57.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.979" level="INFO">VALUE: 0.069078556</msg>
<status status="PASS" starttime="20201116 13:05:57.978" endtime="20201116 13:05:57.979"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.973" endtime="20201116 13:05:57.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.984" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:57.983" endtime="20201116 13:05:57.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:57.986" level="INFO">VALUE: [0.079086056, 0.089086819, 0.099087417, 0.109088236, 0.119088889, 0.129089736, 0.139090403, 0.149091194, 0.159091847, 0.169092681, 0.179093333, 0.189094153, 0.199094806, 0.209095625, 0.219096278, 0.229097097, 0.239097764, 0.249098597, 0.25909925, 0.269100056, 0.279100736, 0.289101556, 0.29910225, 0.309103014, 0.319103667, 0.329104556, 0.339105153, 0.349105986, 0.359106639, 0.369107458, 0.379108097, 0.389108917, 0.399109583, 0.409110389, 0.419111028, 0.429111861, 0.439112514, 0.449113333, 0.459113972, 0.469114778, 0.479115444, 0.48911625, 0.499116944, 0.509117708, 0.519118361, 0.529119181, 0.539119833, 0.549120639, 0.559121292, 0.569122111, 0.579122764, 0.589123625, 0.599124222, 0.609125056, 0.619125694, 0.629126514, 0.639127153, 0.649127986, 0.659128625, 0.669129444, 0.679130111, 0.689130931, 0.699131569, 0.709132403, 0.719133028, 0.729133917, 0.7391345, 0.749135333, 0.759135958, 0.769136792, 0.779137444, 0.78913825, 0.799138903, 0.809139722, 0.819140375, 0.829141194, 0.839141833, 0.849142653, 0.859143389, 0.869144139, 0.879144847, 0.889145597, 0.899146278, 0.909147111, 0.919147708, 0.929148528, 0.939149194, 0.94915, 0.959150667, 0.969151472, 0.979152125, 0.989152931, 0.999153597, 1.009154403, 1.019155056, 1.029155875, 1.039156611, 1.049157347, 1.059158, 1.069158806] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:57.985" endtime="20201116 13:05:57.987"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.980" endtime="20201116 13:05:57.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:57.990" endtime="20201116 13:05:57.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:57.994" endtime="20201116 13:05:58.013"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.992" endtime="20201116 13:05:58.014"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:57.988" endtime="20201116 13:05:58.014"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.468" endtime="20201116 13:05:58.014"></status>
</kw>
<msg timestamp="20201116 13:05:58.015" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:58.023" endtime="20201116 13:06:00.132"></status>
</kw>
<msg timestamp="20201116 13:06:00.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 7055487, 'wakeups': [7065492, 7075493, 7085493, 7095493, 7105493, 7115...</msg>
<status status="PASS" starttime="20201116 13:05:58.021" endtime="20201116 13:06:00.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.139" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 7055487, 'wakeups': [7065492, 7075493, 7085493, 7095493, 7105493, 7115...</msg>
<status status="PASS" starttime="20201116 13:06:00.136" endtime="20201116 13:06:00.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.142" endtime="20201116 13:06:00.145"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:58.019" endtime="20201116 13:06:00.146"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:58.017" endtime="20201116 13:06:00.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:00.153" level="INFO">${RESULT} = {'start-time': 7055487, 'timer-count': 1, 'wakeups': [7065492, 7075493, 7085493, 7095493, 7105493, 7115493, 7125493, 7135493, 7145493, 7155493, 7165493, 7175493, 7185493, 7195493, 7205493, 7215493, 72...</msg>
<status status="PASS" starttime="20201116 13:06:00.149" endtime="20201116 13:06:00.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.161" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:00.159" endtime="20201116 13:06:00.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.166" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:00.164" endtime="20201116 13:06:00.169"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.155" endtime="20201116 13:06:00.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.174" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:06:00.173" endtime="20201116 13:06:00.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.176" level="INFO">VALUE: 7055487</msg>
<status status="PASS" starttime="20201116 13:06:00.175" endtime="20201116 13:06:00.177"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.171" endtime="20201116 13:06:00.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.181" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:00.180" endtime="20201116 13:06:00.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.183" level="INFO">VALUE: [7065492, 7075493, 7085493, 7095493, 7105493, 7115493, 7125493, 7135493, 7145493, 7155493, 7165493, 7175493, 7185493, 7195493, 7205493, 7215493, 7225493, 7235493, 7245493, 7255493, 7265493, 7275493, 7285493, 7295493, 7305493, 7315493, 7325493, 7335493, 7345493, 7355493, 7365493, 7375493, 7385493, 7395493, 7405493, 7415493, 7425493, 7435493, 7445493, 7455493, 7465493, 7475493, 7485493, 7495493, 7505493, 7515493, 7525493, 7535493, 7545493, 7555493, 7565493, 7575493, 7585493, 7595493, 7605493, 7615493, 7625493, 7635493, 7645493, 7655493, 7665493, 7675493, 7685493, 7695493, 7705493, 7715493, 7725493, 7735493, 7745493, 7755493, 7765493, 7775493, 7785493, 7795493, 7805493, 7815493, 7825493, 7835493, 7845493, 7855493, 7865493, 7875493, 7885493, 7895493, 7905493, 7915493, 7925493, 7935493, 7945493, 7955493, 7965493, 7975493, 7985493, 7995493, 8005493, 8015493, 8025493, 8035493, 8045493, 8055493]</msg>
<status status="PASS" starttime="20201116 13:06:00.182" endtime="20201116 13:06:00.184"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.178" endtime="20201116 13:06:00.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.191" endtime="20201116 13:06:00.481"></status>
</kw>
<msg timestamp="20201116 13:06:00.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:00.189" endtime="20201116 13:06:00.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:00.485" endtime="20201116 13:06:00.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.493" endtime="20201116 13:06:00.494"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.186" endtime="20201116 13:06:00.495"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.185" endtime="20201116 13:06:00.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:00.519" level="INFO">${RESULT} = {'diff': [0, 0.010006763999999998, 0.010001819999999998, 0.010000611000000006, 0.010000818999999994, 0.010000652999999998, 0.010000820000000007, 0.010000665999999991, 0.010000806000000001, 0.010000666...</msg>
<status status="PASS" starttime="20201116 13:06:00.496" endtime="20201116 13:06:00.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.524" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:06:00.523" endtime="20201116 13:06:00.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.527" level="INFO">VALUE: 0.019409069</msg>
<status status="PASS" starttime="20201116 13:06:00.526" endtime="20201116 13:06:00.527"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.520" endtime="20201116 13:06:00.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.532" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:00.531" endtime="20201116 13:06:00.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:00.534" level="INFO">VALUE: [0.029415833, 0.039417653, 0.049418264, 0.059419083, 0.069419736, 0.079420556, 0.089421222, 0.099422028, 0.109422694, 0.119423514, 0.129424167, 0.139425, 0.149425667, 0.159426458, 0.169427153, 0.179427958, 0.189428667, 0.199429444, 0.209430069, 0.219430903, 0.229431597, 0.239432417, 0.249433042, 0.259433847, 0.2694345, 0.279435361, 0.289435986, 0.299436806, 0.309437458, 0.319438306, 0.329438958, 0.339439764, 0.349440417, 0.35944125, 0.369441917, 0.379442806, 0.389443375, 0.399444208, 0.409444847, 0.419445681, 0.429446319, 0.439447125, 0.449447778, 0.459448597, 0.46944925, 0.479450069, 0.489450708, 0.499451528, 0.509452181, 0.519453, 0.529453639, 0.539454458, 0.549455111, 0.559455917, 0.569456569, 0.579457431, 0.589458097, 0.599458917, 0.609459514, 0.619460319, 0.629460972, 0.639461792, 0.649462431, 0.659463319, 0.669463917, 0.67946475, 0.689465375, 0.699466194, 0.709466833, 0.719467653, 0.729468306, 0.739469139, 0.749469778, 0.759470597, 0.76947125, 0.779472069, 0.789472722, 0.799473583, 0.809474194, 0.819475, 0.829475653, 0.839476458, 0.849477111, 0.859477944, 0.869478583, 0.879479417, 0.889480125, 0.899480875, 0.909481528, 0.919482347, 0.929483, 0.939483819, 0.949484458, 0.959485278, 0.969485931, 0.97948675, 0.989487389, 0.999488208, 1.009488875, 1.019489694] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:00.533" endtime="20201116 13:06:00.534"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.528" endtime="20201116 13:06:00.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.537" endtime="20201116 13:06:00.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:00.541" endtime="20201116 13:06:00.560"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.539" endtime="20201116 13:06:00.561"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.536" endtime="20201116 13:06:00.561"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:58.015" endtime="20201116 13:06:00.561"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.465" endtime="20201116 13:06:00.562"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.465" endtime="20201116 13:06:00.562"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:00.564" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:00.573" endtime="20201116 13:06:02.688"></status>
</kw>
<msg timestamp="20201116 13:06:02.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9605341, 'wakeups': [9615353, 9625353, 9635353, 9645353, 9655353, 9665...</msg>
<status status="PASS" starttime="20201116 13:06:00.571" endtime="20201116 13:06:02.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.696" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9605341, 'wakeups': [9615353, 9625353, 9635353, 9645353, 9655353, 9665...</msg>
<status status="PASS" starttime="20201116 13:06:02.693" endtime="20201116 13:06:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.699" endtime="20201116 13:06:02.703"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.568" endtime="20201116 13:06:02.704"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.566" endtime="20201116 13:06:02.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:02.711" level="INFO">${RESULT} = {'start-time': 9605341, 'timer-count': 2, 'wakeups': [9615353, 9625353, 9635353, 9645353, 9655353, 9665353, 9675353, 9685353, 9695353, 9705353, 9715353, 9725353, 9735353, 9745353, 9755353, 9765353, 97...</msg>
<status status="PASS" starttime="20201116 13:06:02.707" endtime="20201116 13:06:02.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.719" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:02.717" endtime="20201116 13:06:02.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.724" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:02.722" endtime="20201116 13:06:02.725"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.713" endtime="20201116 13:06:02.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.730" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:02.729" endtime="20201116 13:06:02.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.732" level="INFO">VALUE: 9605341</msg>
<status status="PASS" starttime="20201116 13:06:02.731" endtime="20201116 13:06:02.732"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.726" endtime="20201116 13:06:02.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.737" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:02.736" endtime="20201116 13:06:02.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:02.739" level="INFO">VALUE: [9615353, 9625353, 9635353, 9645353, 9655353, 9665353, 9675353, 9685353, 9695353, 9705353, 9715353, 9725353, 9735353, 9745353, 9755353, 9765353, 9775353, 9785353, 9795353, 9805353, 9815353, 9825353, 9835353, 9845353, 9855353, 9865353, 9875353, 9885353, 9895353, 9905353, 9915353, 9925353, 9935353, 9945353, 9955353, 9965353, 9975353, 9985353, 9995353, 10005353, 10015353, 10025353, 10035353, 10045353, 10055353, 10065353, 10075353, 10085353, 10095353, 10105353, 10115353, 10125353, 10135353, 10145353, 10155353, 10165353, 10175353, 10185353, 10195353, 10205353, 10215353, 10225353, 10235353, 10245353, 10255353, 10265353, 10275353, 10285353, 10295353, 10305353, 10315353, 10325353, 10335353, 10345353, 10355353, 10365353, 10375353, 10385353, 10395353, 10405353, 10415353, 10425353, 10435353, 10445353, 10455353, 10465353, 10475353, 10485353, 10495353, 10505353, 10515353, 10525353, 10535353, 10545353, 10555353, 10565353, 10575353, 10585353, 10595353, 10605353]</msg>
<status status="PASS" starttime="20201116 13:06:02.738" endtime="20201116 13:06:02.739"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.733" endtime="20201116 13:06:02.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:02.748" endtime="20201116 13:06:03.038"></status>
</kw>
<msg timestamp="20201116 13:06:03.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032208694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:02.746" endtime="20201116 13:06:03.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:03.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032208694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:03.041" endtime="20201116 13:06:03.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:03.049" endtime="20201116 13:06:03.051"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.743" endtime="20201116 13:06:03.051"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:02.741" endtime="20201116 13:06:03.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:03.075" level="INFO">${RESULT} = {'diff': [0, 0.010012680000000003, 0.010000862, 0.010000611, 0.010000790999999995, 0.01000073600000001, 0.010000777999999988, 0.010000681000000011, 0.010000818999999994, 0.010000667000000005, 0.010000...</msg>
<status status="PASS" starttime="20201116 13:06:03.052" endtime="20201116 13:06:03.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:03.080" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:03.079" endtime="20201116 13:06:03.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:03.082" level="INFO">VALUE: 0.022196014</msg>
<status status="PASS" starttime="20201116 13:06:03.081" endtime="20201116 13:06:03.082"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.076" endtime="20201116 13:06:03.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:03.087" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:03.086" endtime="20201116 13:06:03.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:03.090" level="INFO">VALUE: [0.032208694, 0.042209556, 0.052210167, 0.062210958, 0.072211694, 0.082212472, 0.092213153, 0.102213972, 0.112214639, 0.122215444, 0.132216111, 0.142216917, 0.152217583, 0.162218389, 0.172219125, 0.182219861, 0.192220542, 0.202221375, 0.212222056, 0.222222819, 0.232223514, 0.242224319, 0.252224986, 0.262225792, 0.272226458, 0.282227264, 0.292227931, 0.302228736, 0.312229403, 0.322230222, 0.332230875, 0.342231681, 0.352232361, 0.362233167, 0.372233833, 0.382234653, 0.392235319, 0.402236139, 0.412236792, 0.422237597, 0.432238292, 0.442239097, 0.452239764, 0.462240569, 0.472241222, 0.482242014, 0.492242681, 0.502243486, 0.512244153, 0.522245028, 0.532245625, 0.542246417, 0.552247097, 0.562247889, 0.572248569, 0.582249361, 0.592250042, 0.602250847, 0.6122515, 0.622252306, 0.632252972, 0.642253764, 0.652254431, 0.662255236, 0.672255903, 0.682256708, 0.692257375, 0.702258208, 0.712258847, 0.722259653, 0.732260319, 0.742261111, 0.752261792, 0.762262583, 0.77226325, 0.782264097, 0.792264736, 0.802265569, 0.812266194, 0.822267028, 0.832267667, 0.842268472, 0.852269153, 0.862269944, 0.872270611, 0.882271417, 0.892272083, 0.902272875, 0.912273569, 0.922274347, 0.932275028, 0.942275819, 0.9522765, 0.962277306, 0.972278028, 0.982278764, 0.992279431, 1.002280264, 1.012280972, 1.022281708] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:03.089" endtime="20201116 13:06:03.090"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.083" endtime="20201116 13:06:03.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:03.093" endtime="20201116 13:06:03.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:03.096" endtime="20201116 13:06:03.115"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.094" endtime="20201116 13:06:03.116"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.091" endtime="20201116 13:06:03.116"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.565" endtime="20201116 13:06:03.117"></status>
</kw>
<msg timestamp="20201116 13:06:03.117" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:03.126" endtime="20201116 13:06:05.246"></status>
</kw>
<msg timestamp="20201116 13:06:05.247" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12158819, 'wakeups': [12168830, 12178831, 12188831, 12198831, 12208831...</msg>
<status status="PASS" starttime="20201116 13:06:03.124" endtime="20201116 13:06:05.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.253" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12158819, 'wakeups': [12168830, 12178831, 12188831, 12198831, 12208831...</msg>
<status status="PASS" starttime="20201116 13:06:05.249" endtime="20201116 13:06:05.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.255" endtime="20201116 13:06:05.259"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.122" endtime="20201116 13:06:05.260"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.119" endtime="20201116 13:06:05.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:05.266" level="INFO">${RESULT} = {'start-time': 12158819, 'timer-count': 2, 'wakeups': [12168830, 12178831, 12188831, 12198831, 12208831, 12218831, 12228831, 12238831, 12248831, 12258831, 12268831, 12278831, 12288831, 12298831, 12308...</msg>
<status status="PASS" starttime="20201116 13:06:05.262" endtime="20201116 13:06:05.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.275" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:05.273" endtime="20201116 13:06:05.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.279" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:05.277" endtime="20201116 13:06:05.280"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.268" endtime="20201116 13:06:05.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.285" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:05.284" endtime="20201116 13:06:05.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.287" level="INFO">VALUE: 12158819</msg>
<status status="PASS" starttime="20201116 13:06:05.286" endtime="20201116 13:06:05.288"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.282" endtime="20201116 13:06:05.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.292" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:05.291" endtime="20201116 13:06:05.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.295" level="INFO">VALUE: [12168830, 12178831, 12188831, 12198831, 12208831, 12218831, 12228831, 12238831, 12248831, 12258831, 12268831, 12278831, 12288831, 12298831, 12308831, 12318831, 12328831, 12338831, 12348831, 12358831, 12368831, 12378831, 12388831, 12398831, 12408831, 12418831, 12428831, 12438831, 12448831, 12458831, 12468831, 12478831, 12488831, 12498831, 12508831, 12518831, 12528831, 12538831, 12548831, 12558831, 12568831, 12578831, 12588831, 12598831, 12608831, 12618831, 12628831, 12638831, 12648831, 12658831, 12668831, 12678831, 12688831, 12698831, 12708831, 12718831, 12728831, 12738831, 12748831, 12758831, 12768831, 12778831, 12788831, 12798831, 12808831, 12818831, 12828831, 12838831, 12848831, 12858831, 12868831, 12878831, 12888831, 12898831, 12908831, 12918831, 12928831, 12938831, 12948831, 12958831, 12968831, 12978831, 12988831, 12998831, 13008831, 13018831, 13028831, 13038831, 13048831, 13058831, 13068831, 13078831, 13088831, 13098831, 13108831, 13118831, 13128831, 13138831, 13148831, 13158831]</msg>
<status status="PASS" starttime="20201116 13:06:05.293" endtime="20201116 13:06:05.295"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.289" endtime="20201116 13:06:05.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.302" endtime="20201116 13:06:05.592"></status>
</kw>
<msg timestamp="20201116 13:06:05.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:05.300" endtime="20201116 13:06:05.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:05.596" endtime="20201116 13:06:05.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.604" endtime="20201116 13:06:05.605"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.298" endtime="20201116 13:06:05.606"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.296" endtime="20201116 13:06:05.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:05.631" level="INFO">${RESULT} = {'diff': [0, 0.010012375, 0.010001847000000001, 0.010000638999999999, 0.010000778000000002, 0.010000735999999996, 0.010000778000000002, 0.010000722000000004, 0.010000791999999994, 0.010000652999999998...</msg>
<status status="PASS" starttime="20201116 13:06:05.607" endtime="20201116 13:06:05.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.635" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:05.634" endtime="20201116 13:06:05.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.637" level="INFO">VALUE: 0.020304222</msg>
<status status="PASS" starttime="20201116 13:06:05.636" endtime="20201116 13:06:05.638"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.632" endtime="20201116 13:06:05.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.643" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:05.642" endtime="20201116 13:06:05.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.645" level="INFO">VALUE: [0.030316597, 0.040318444, 0.050319083, 0.060319861, 0.070320597, 0.080321375, 0.090322097, 0.100322889, 0.110323542, 0.120324333, 0.130325014, 0.140325806, 0.150326486, 0.160327292, 0.170327958, 0.180328764, 0.190329458, 0.200330319, 0.210330917, 0.220331722, 0.230332389, 0.240333194, 0.250333861, 0.260334667, 0.270335347, 0.280336194, 0.290336819, 0.300337625, 0.310338319, 0.320339111, 0.330339778, 0.340340583, 0.350341264, 0.360342069, 0.370342736, 0.380343542, 0.390344208, 0.400345028, 0.410345708, 0.4203465, 0.430347236, 0.440347972, 0.450348653, 0.460349444, 0.470350139, 0.480350931, 0.490351597, 0.500352375, 0.510353042, 0.520353847, 0.530354514, 0.540355306, 0.550355972, 0.560356778, 0.570357444, 0.580358236, 0.590358903, 0.600359722, 0.610360375, 0.620361167, 0.630361847, 0.640362653, 0.650363347, 0.660364097, 0.670364819, 0.680365569, 0.690366278, 0.700367028, 0.710367722, 0.7203685, 0.730369181, 0.740369972, 0.750370639, 0.760371431, 0.770372097, 0.780372903, 0.790373583, 0.800374375, 0.810375069, 0.820375833, 0.830376528, 0.840377319, 0.850377986, 0.860378764, 0.870379458, 0.880380236, 0.890380903, 0.900381708, 0.910382389, 0.920383181, 0.930383847, 0.940384639, 0.950385306, 0.960386125, 0.970386778, 0.980387583, 0.99038825, 1.000389042, 1.010389708, 1.020390556] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:05.644" endtime="20201116 13:06:05.646"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.639" endtime="20201116 13:06:05.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.648" endtime="20201116 13:06:05.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:05.652" endtime="20201116 13:06:05.671"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.650" endtime="20201116 13:06:05.672"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.647" endtime="20201116 13:06:05.672"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.118" endtime="20201116 13:06:05.673"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.563" endtime="20201116 13:06:05.673"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:00.562" endtime="20201116 13:06:05.673"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:05.676" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.684" endtime="20201116 13:06:07.801"></status>
</kw>
<msg timestamp="20201116 13:06:07.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 14716664, 'wakeups': [14726681, 14736682, 14746682, 14756681, 14766682...</msg>
<status status="PASS" starttime="20201116 13:06:05.683" endtime="20201116 13:06:07.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 14716664, 'wakeups': [14726681, 14736682, 14746682, 14756681, 14766682...</msg>
<status status="PASS" starttime="20201116 13:06:07.805" endtime="20201116 13:06:07.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.811" endtime="20201116 13:06:07.814"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.680" endtime="20201116 13:06:07.815"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.678" endtime="20201116 13:06:07.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:07.822" level="INFO">${RESULT} = {'start-time': 14716664, 'timer-count': 3, 'wakeups': [14726681, 14736682, 14746682, 14756681, 14766682, 14776682, 14786682, 14796682, 14806682, 14816682, 14826682, 14836682, 14846682, 14856682, 14866...</msg>
<status status="PASS" starttime="20201116 13:06:07.818" endtime="20201116 13:06:07.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.833" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:07.831" endtime="20201116 13:06:07.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.836" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:07.835" endtime="20201116 13:06:07.837"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.824" endtime="20201116 13:06:07.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.842" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:07.841" endtime="20201116 13:06:07.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.844" level="INFO">VALUE: 14716664</msg>
<status status="PASS" starttime="20201116 13:06:07.843" endtime="20201116 13:06:07.844"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.838" endtime="20201116 13:06:07.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.850" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:07.848" endtime="20201116 13:06:07.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.852" level="INFO">VALUE: [14726681, 14736682, 14746682, 14756681, 14766682, 14776682, 14786682, 14796682, 14806682, 14816682, 14826682, 14836682, 14846682, 14856682, 14866682, 14876682, 14886682, 14896682, 14906682, 14916682, 14926682, 14936682, 14946682, 14956682, 14966682, 14976682, 14986682, 14996682, 15006682, 15016682, 15026682, 15036682, 15046682, 15056682, 15066682, 15076682, 15086682, 15096682, 15106682, 15116682, 15126682, 15136682, 15146682, 15156682, 15166682, 15176682, 15186682, 15196682, 15206682, 15216682, 15226682, 15236682, 15246682, 15256682, 15266682, 15276682, 15286682, 15296682, 15306682, 15316682, 15326682, 15336682, 15346682, 15356682, 15366682, 15376682, 15386682, 15396682, 15406682, 15416682, 15426682, 15436682, 15446682, 15456682, 15466682, 15476682, 15486682, 15496682, 15506682, 15516682, 15526682, 15536682, 15546682, 15556682, 15566682, 15576682, 15586682, 15596682, 15606682, 15616682, 15626682, 15636682, 15646682, 15656682, 15666682, 15676682, 15686682, 15696682, 15706682, 15716682]</msg>
<status status="PASS" starttime="20201116 13:06:07.851" endtime="20201116 13:06:07.853"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.846" endtime="20201116 13:06:07.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:07.860" endtime="20201116 13:06:08.151"></status>
</kw>
<msg timestamp="20201116 13:06:08.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032250208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:07.859" endtime="20201116 13:06:08.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032250208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:08.155" endtime="20201116 13:06:08.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.163" endtime="20201116 13:06:08.164"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.856" endtime="20201116 13:06:08.165"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.854" endtime="20201116 13:06:08.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:08.189" level="INFO">${RESULT} = {'diff': [0, 0.010018750000000003, 0.010000916999999998, 0.010000666999999998, 0.010000736000000003, 0.010000750000000003, 0.010000763999999995, 0.010000707999999997, 0.010000833, 0.010000639000000006...</msg>
<status status="PASS" starttime="20201116 13:06:08.166" endtime="20201116 13:06:08.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.194" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:08.193" endtime="20201116 13:06:08.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.196" level="INFO">VALUE: 0.022231458</msg>
<status status="PASS" starttime="20201116 13:06:08.195" endtime="20201116 13:06:08.196"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.190" endtime="20201116 13:06:08.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.201" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:08.200" endtime="20201116 13:06:08.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.203" level="INFO">VALUE: [0.032250208, 0.042251125, 0.052251792, 0.062252528, 0.072253278, 0.082254042, 0.09225475, 0.102255583, 0.112256222, 0.122257014, 0.132257681, 0.1422585, 0.152259153, 0.162259958, 0.172260639, 0.182261472, 0.192262139, 0.202262917, 0.212263583, 0.222264417, 0.232265069, 0.242265875, 0.252266556, 0.262267375, 0.272268014, 0.282268819, 0.292269514, 0.302270319, 0.312271028, 0.322271778, 0.332272458, 0.342273292, 0.352273931, 0.362274736, 0.372275403, 0.382276236, 0.392276875, 0.402277667, 0.412278333, 0.422279181, 0.432279806, 0.442280611, 0.452281347, 0.462282083, 0.472282722, 0.482283583, 0.492284194, 0.502285, 0.512285667, 0.5222865, 0.532287139, 0.542287944, 0.552288583, 0.562289375, 0.572290056, 0.582290861, 0.592291528, 0.602292319, 0.612293014, 0.622293792, 0.632294444, 0.64229525, 0.652295931, 0.662296736, 0.672297403, 0.682298181, 0.692298847, 0.702299667, 0.712300319, 0.722301111, 0.732301778, 0.742302597, 0.75230325, 0.762304097, 0.772304764, 0.782305528, 0.792306194, 0.802307028, 0.812307653, 0.822308472, 0.832309111, 0.842309917, 0.852310583, 0.862311403, 0.872312056, 0.882312931, 0.892313542, 0.902314347, 0.912314986, 0.922315778, 0.932316444, 0.942317333, 0.952317917, 0.962318736, 0.972319431, 0.982320194, 0.992320917, 1.002321667, 1.012322347, 1.022323139] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:08.202" endtime="20201116 13:06:08.204"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.197" endtime="20201116 13:06:08.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.206" endtime="20201116 13:06:08.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:08.210" endtime="20201116 13:06:08.229"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.208" endtime="20201116 13:06:08.230"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.205" endtime="20201116 13:06:08.230"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.676" endtime="20201116 13:06:08.231"></status>
</kw>
<msg timestamp="20201116 13:06:08.231" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.239" endtime="20201116 13:06:10.357"></status>
</kw>
<msg timestamp="20201116 13:06:10.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17272273, 'wakeups': [17282290, 17292291, 17302291, 17312290, 17322291...</msg>
<status status="PASS" starttime="20201116 13:06:08.238" endtime="20201116 13:06:10.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17272273, 'wakeups': [17282290, 17292291, 17302291, 17312290, 17322291...</msg>
<status status="PASS" starttime="20201116 13:06:10.361" endtime="20201116 13:06:10.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.367" endtime="20201116 13:06:10.370"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.235" endtime="20201116 13:06:10.371"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.233" endtime="20201116 13:06:10.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:10.378" level="INFO">${RESULT} = {'start-time': 17272273, 'timer-count': 3, 'wakeups': [17282290, 17292291, 17302291, 17312290, 17322291, 17332291, 17342291, 17352291, 17362291, 17372291, 17382291, 17392291, 17402291, 17412291, 17422...</msg>
<status status="PASS" starttime="20201116 13:06:10.374" endtime="20201116 13:06:10.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.386" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:10.384" endtime="20201116 13:06:10.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.391" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:10.389" endtime="20201116 13:06:10.391"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.379" endtime="20201116 13:06:10.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.396" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:10.394" endtime="20201116 13:06:10.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.398" level="INFO">VALUE: 17272273</msg>
<status status="PASS" starttime="20201116 13:06:10.397" endtime="20201116 13:06:10.398"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.392" endtime="20201116 13:06:10.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.404" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:10.401" endtime="20201116 13:06:10.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.406" level="INFO">VALUE: [17282290, 17292291, 17302291, 17312290, 17322291, 17332291, 17342291, 17352291, 17362291, 17372291, 17382291, 17392291, 17402291, 17412291, 17422291, 17432291, 17442291, 17452291, 17462291, 17472291, 17482291, 17492291, 17502291, 17512291, 17522291, 17532291, 17542291, 17552291, 17562291, 17572291, 17582291, 17592291, 17602291, 17612291, 17622291, 17632291, 17642291, 17652291, 17662291, 17672291, 17682291, 17692291, 17702291, 17712291, 17722291, 17732291, 17742291, 17752291, 17762291, 17772291, 17782291, 17792291, 17802291, 17812291, 17822291, 17832291, 17842291, 17852291, 17862291, 17872291, 17882291, 17892291, 17902291, 17912291, 17922291, 17932291, 17942291, 17952291, 17962291, 17972291, 17982291, 17992291, 18002291, 18012291, 18022291, 18032291, 18042291, 18052291, 18062291, 18072291, 18082291, 18092291, 18102291, 18112291, 18122291, 18132291, 18142291, 18152291, 18162291, 18172291, 18182291, 18192291, 18202291, 18212291, 18222291, 18232291, 18242291, 18252291, 18262291, 18272291]</msg>
<status status="PASS" starttime="20201116 13:06:10.405" endtime="20201116 13:06:10.406"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.399" endtime="20201116 13:06:10.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.413" endtime="20201116 13:06:10.705"></status>
</kw>
<msg timestamp="20201116 13:06:10.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01984725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029865681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:10.412" endtime="20201116 13:06:10.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01984725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029865681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:10.709" endtime="20201116 13:06:10.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.716" endtime="20201116 13:06:10.718"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.409" endtime="20201116 13:06:10.719"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.407" endtime="20201116 13:06:10.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:10.744" level="INFO">${RESULT} = {'diff': [0, 0.010018431000000001, 0.010000958, 0.010000597, 0.010000763999999995, 0.010000749999999996, 0.010000778000000002, 0.010000708000000011, 0.010000819999999994, 0.010000624999999999, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:06:10.720" endtime="20201116 13:06:10.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.748" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:10.747" endtime="20201116 13:06:10.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.750" level="INFO">VALUE: 0.01984725</msg>
<status status="PASS" starttime="20201116 13:06:10.749" endtime="20201116 13:06:10.751"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.745" endtime="20201116 13:06:10.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.756" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:10.755" endtime="20201116 13:06:10.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.758" level="INFO">VALUE: [0.029865681, 0.039866639, 0.049867236, 0.059868, 0.06986875, 0.079869528, 0.089870236, 0.099871056, 0.109871681, 0.119872514, 0.129873167, 0.139874, 0.149874667, 0.159875458, 0.169876125, 0.179876944, 0.189877667, 0.199878403, 0.209879111, 0.219879917, 0.229880611, 0.239881361, 0.249882056, 0.259882917, 0.269883514, 0.279884319, 0.289885, 0.299885819, 0.309886486, 0.319887278, 0.329887958, 0.339888806, 0.349889444, 0.35989025, 0.369890972, 0.379891819, 0.389892431, 0.399893222, 0.409893917, 0.419894764, 0.429895361, 0.439896167, 0.449896875, 0.459897653, 0.469898306, 0.479899167, 0.489899764, 0.499900583, 0.509901236, 0.519902028, 0.529902708, 0.539903542, 0.549904181, 0.559904972, 0.569905653, 0.579906486, 0.589907097, 0.599907903, 0.609908569, 0.619909389, 0.629910042, 0.639910833, 0.649911514, 0.659912333, 0.669912972, 0.679913778, 0.689914444, 0.699915278, 0.709915931, 0.719916708, 0.729917389, 0.739918194, 0.749918847, 0.759919653, 0.769920333, 0.779921181, 0.789921792, 0.799922597, 0.809923292, 0.819924167, 0.829924736, 0.839925528, 0.849926222, 0.859927014, 0.869927667, 0.879928472, 0.889929194, 0.899929958, 0.909930625, 0.919931431, 0.929932111, 0.939932917, 0.949933583, 0.959934361, 0.969935111, 0.979935847, 0.989936583, 0.999937292, 1.009937972, 1.019938778] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:10.757" endtime="20201116 13:06:10.758"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.752" endtime="20201116 13:06:10.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.761" endtime="20201116 13:06:10.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:10.765" endtime="20201116 13:06:10.784"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.763" endtime="20201116 13:06:10.785"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.759" endtime="20201116 13:06:10.786"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.231" endtime="20201116 13:06:10.786"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.674" endtime="20201116 13:06:10.786"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.673" endtime="20201116 13:06:10.786"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:10.789" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.797" endtime="20201116 13:06:12.915"></status>
</kw>
<msg timestamp="20201116 13:06:12.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 19829997, 'wakeups': [19840021, 19850020, 19860020, 19870020, 19880021...</msg>
<status status="PASS" starttime="20201116 13:06:10.796" endtime="20201116 13:06:12.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.922" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 19829997, 'wakeups': [19840021, 19850020, 19860020, 19870020, 19880021...</msg>
<status status="PASS" starttime="20201116 13:06:12.919" endtime="20201116 13:06:12.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:12.925" endtime="20201116 13:06:12.928"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.793" endtime="20201116 13:06:12.929"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.791" endtime="20201116 13:06:12.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:12.936" level="INFO">${RESULT} = {'start-time': 19829997, 'timer-count': 4, 'wakeups': [19840021, 19850020, 19860020, 19870020, 19880021, 19890020, 19900021, 19910020, 19920020, 19930020, 19940020, 19950020, 19960020, 19970020, 19980...</msg>
<status status="PASS" starttime="20201116 13:06:12.932" endtime="20201116 13:06:12.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.945" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:12.943" endtime="20201116 13:06:12.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.947" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:12.946" endtime="20201116 13:06:12.948"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:12.938" endtime="20201116 13:06:12.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.952" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:12.951" endtime="20201116 13:06:12.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.954" level="INFO">VALUE: 19829997</msg>
<status status="PASS" starttime="20201116 13:06:12.953" endtime="20201116 13:06:12.955"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:12.949" endtime="20201116 13:06:12.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.959" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:12.958" endtime="20201116 13:06:12.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:12.962" level="INFO">VALUE: [19840021, 19850020, 19860020, 19870020, 19880021, 19890020, 19900021, 19910020, 19920020, 19930020, 19940020, 19950020, 19960020, 19970020, 19980020, 19990020, 20000020, 20010020, 20020020, 20030020, 20040020, 20050020, 20060020, 20070020, 20080020, 20090020, 20100020, 20110020, 20120020, 20130020, 20140020, 20150020, 20160020, 20170020, 20180020, 20190020, 20200020, 20210020, 20220020, 20230020, 20240020, 20250020, 20260020, 20270020, 20280020, 20290020, 20300020, 20310020, 20320020, 20330020, 20340020, 20350020, 20360020, 20370020, 20380020, 20390020, 20400020, 20410020, 20420020, 20430020, 20440020, 20450020, 20460020, 20470020, 20480020, 20490020, 20500020, 20510020, 20520020, 20530020, 20540020, 20550020, 20560020, 20570020, 20580020, 20590020, 20600020, 20610020, 20620020, 20630020, 20640020, 20650020, 20660020, 20670020, 20680020, 20690020, 20700020, 20710020, 20720020, 20730020, 20740020, 20750020, 20760020, 20770020, 20780020, 20790020, 20800020, 20810020, 20820020, 20830020]</msg>
<status status="PASS" starttime="20201116 13:06:12.960" endtime="20201116 13:06:12.962"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:12.956" endtime="20201116 13:06:12.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:12.969" endtime="20201116 13:06:13.262"></status>
</kw>
<msg timestamp="20201116 13:06:13.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03238025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:12.967" endtime="20201116 13:06:13.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03238025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:13.266" endtime="20201116 13:06:13.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.273" endtime="20201116 13:06:13.275"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:12.965" endtime="20201116 13:06:13.275"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:12.963" endtime="20201116 13:06:13.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:13.299" level="INFO">${RESULT} = {'diff': [0, 0.010024722, 0.009999638999999998, 0.010000583, 0.010000972000000004, 0.010001541999999995, 0.009999958000000003, 0.010001527999999996, 0.009999806, 0.010000666000000005, 0.01000077800000...</msg>
<status status="PASS" starttime="20201116 13:06:13.277" endtime="20201116 13:06:13.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.304" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:13.303" endtime="20201116 13:06:13.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.306" level="INFO">VALUE: 0.022355528</msg>
<status status="PASS" starttime="20201116 13:06:13.305" endtime="20201116 13:06:13.306"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.300" endtime="20201116 13:06:13.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.312" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:13.310" endtime="20201116 13:06:13.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.314" level="INFO">VALUE: [0.03238025, 0.042379889, 0.052380472, 0.062381444, 0.072382986, 0.082382944, 0.092384472, 0.102384278, 0.112384944, 0.122385722, 0.132386389, 0.142387194, 0.152387903, 0.162388667, 0.172389347, 0.182390194, 0.192390847, 0.202391625, 0.212392306, 0.222393111, 0.232393806, 0.242394583, 0.252395264, 0.262396069, 0.272396764, 0.282397569, 0.292398278, 0.302399056, 0.31239975, 0.322400514, 0.332401181, 0.342401986, 0.352402681, 0.362403486, 0.372404139, 0.382404944, 0.392405708, 0.402406431, 0.412407111, 0.422407931, 0.432408625, 0.442409403, 0.452410056, 0.462410875, 0.472411556, 0.482412333, 0.492413056, 0.502413792, 0.512414486, 0.522415264, 0.532415944, 0.542416722, 0.552417417, 0.562418194, 0.572418903, 0.582419681, 0.592420347, 0.602421153, 0.612421806, 0.622422597, 0.632423292, 0.642424083, 0.652424736, 0.662425542, 0.672426222, 0.682427014, 0.692427667, 0.702428472, 0.712429153, 0.722429944, 0.732430625, 0.742431417, 0.752432097, 0.762432875, 0.772433569, 0.782434347, 0.792435042, 0.802435833, 0.8124365, 0.822437306, 0.832437972, 0.842438778, 0.852439431, 0.862440306, 0.872440917, 0.882441722, 0.892442375, 0.902443181, 0.912443875, 0.922444639, 0.932445306, 0.942446111, 0.952446792, 0.962447597, 0.97244825, 0.982449056, 0.992449736, 1.002450528, 1.012451194, 1.022451986] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:13.313" endtime="20201116 13:06:13.314"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.307" endtime="20201116 13:06:13.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.317" endtime="20201116 13:06:13.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:13.320" endtime="20201116 13:06:13.340"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.319" endtime="20201116 13:06:13.340"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.315" endtime="20201116 13:06:13.341"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.790" endtime="20201116 13:06:13.341"></status>
</kw>
<msg timestamp="20201116 13:06:13.341" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.350" endtime="20201116 13:06:15.467"></status>
</kw>
<msg timestamp="20201116 13:06:15.468" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22382972, 'wakeups': [22392996, 22402995, 22412995, 22422995, 22432996...</msg>
<status status="PASS" starttime="20201116 13:06:13.348" endtime="20201116 13:06:15.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.474" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22382972, 'wakeups': [22392996, 22402995, 22412995, 22422995, 22432996...</msg>
<status status="PASS" starttime="20201116 13:06:15.470" endtime="20201116 13:06:15.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.476" endtime="20201116 13:06:15.480"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.345" endtime="20201116 13:06:15.481"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.343" endtime="20201116 13:06:15.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:15.488" level="INFO">${RESULT} = {'start-time': 22382972, 'timer-count': 4, 'wakeups': [22392996, 22402995, 22412995, 22422995, 22432996, 22442995, 22452996, 22462995, 22472995, 22482995, 22492995, 22502995, 22512995, 22522995, 22532...</msg>
<status status="PASS" starttime="20201116 13:06:15.483" endtime="20201116 13:06:15.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.496" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:15.494" endtime="20201116 13:06:15.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.501" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:15.499" endtime="20201116 13:06:15.501"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.490" endtime="20201116 13:06:15.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.506" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:15.504" endtime="20201116 13:06:15.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.508" level="INFO">VALUE: 22382972</msg>
<status status="PASS" starttime="20201116 13:06:15.507" endtime="20201116 13:06:15.508"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.502" endtime="20201116 13:06:15.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.513" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:15.512" endtime="20201116 13:06:15.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.515" level="INFO">VALUE: [22392996, 22402995, 22412995, 22422995, 22432996, 22442995, 22452996, 22462995, 22472995, 22482995, 22492995, 22502995, 22512995, 22522995, 22532995, 22542995, 22552995, 22562995, 22572995, 22582995, 22592995, 22602995, 22612995, 22622995, 22632995, 22642995, 22652995, 22662995, 22672995, 22682995, 22692995, 22702995, 22712995, 22722995, 22732995, 22742995, 22752995, 22762995, 22772995, 22782995, 22792995, 22802995, 22812995, 22822995, 22832995, 22842995, 22852995, 22862995, 22872995, 22882995, 22892995, 22902995, 22912995, 22922995, 22932995, 22942995, 22952995, 22962995, 22972995, 22982995, 22992995, 23002995, 23012995, 23022995, 23032995, 23042995, 23052995, 23062995, 23072995, 23082995, 23092995, 23102995, 23112995, 23122995, 23132995, 23142995, 23152995, 23162995, 23172995, 23182995, 23192995, 23202995, 23212995, 23222995, 23232995, 23242995, 23252995, 23262995, 23272995, 23282995, 23292995, 23302995, 23312995, 23322995, 23332995, 23342995, 23352995, 23362995, 23372995, 23382995]</msg>
<status status="PASS" starttime="20201116 13:06:15.514" endtime="20201116 13:06:15.516"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.509" endtime="20201116 13:06:15.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.523" endtime="20201116 13:06:15.812"></status>
</kw>
<msg timestamp="20201116 13:06:15.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0302915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:06:15.521" endtime="20201116 13:06:15.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0302915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:06:15.816" endtime="20201116 13:06:15.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.823" endtime="20201116 13:06:15.825"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.518" endtime="20201116 13:06:15.826"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.517" endtime="20201116 13:06:15.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:15.851" level="INFO">${RESULT} = {'diff': [0, 0.010025068999999998, 0.009999583, 0.010000624999999999, 0.010000973000000003, 0.010001541000000003, 0.009999944999999996, 0.010001526999999996, 0.009999820000000006, 0.010000679999999998...</msg>
<status status="PASS" starttime="20201116 13:06:15.827" endtime="20201116 13:06:15.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.855" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:15.854" endtime="20201116 13:06:15.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.857" level="INFO">VALUE: 0.020266431</msg>
<status status="PASS" starttime="20201116 13:06:15.856" endtime="20201116 13:06:15.858"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.852" endtime="20201116 13:06:15.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.863" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:15.862" endtime="20201116 13:06:15.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.865" level="INFO">VALUE: [0.0302915, 0.040291083, 0.050291708, 0.060292681, 0.070294222, 0.080294167, 0.090295694, 0.100295514, 0.110296194, 0.120296986, 0.130297667, 0.140298458, 0.150299139, 0.160299917, 0.170300611, 0.180301458, 0.190302097, 0.200302889, 0.210303556, 0.220304361, 0.230305097, 0.240305847, 0.250306514, 0.260307306, 0.270308014, 0.280308792, 0.290309472, 0.300310278, 0.310310958, 0.32031175, 0.330312458, 0.34031325, 0.350313944, 0.360314722, 0.370315389, 0.380316194, 0.390316889, 0.400317681, 0.410318361, 0.420319153, 0.430319847, 0.440320611, 0.450321292, 0.460322083, 0.470322819, 0.480323556, 0.490324236, 0.500325028, 0.510325722, 0.520326486, 0.530327153, 0.540327944, 0.550328639, 0.560329417, 0.570330097, 0.580330889, 0.590331569, 0.600332347, 0.610333028, 0.620333819, 0.630334528, 0.640335306, 0.650335958, 0.660336778, 0.670337444, 0.680338222, 0.690338889, 0.700339708, 0.710340375, 0.720341167, 0.730341847, 0.740342625, 0.750343375, 0.760344097, 0.770344778, 0.780345569, 0.790346278, 0.800347042, 0.810347778, 0.8203485, 0.830349194, 0.840349972, 0.850350653, 0.860351458, 0.870352139, 0.880352917, 0.890353583, 0.900354389, 0.910355083, 0.920355861, 0.930356528, 0.940357361, 0.950358014, 0.960358792, 0.970359472, 0.980360264, 0.990360958, 1.000361736, 1.010362403, 1.020363208] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:15.864" endtime="20201116 13:06:15.865"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.859" endtime="20201116 13:06:15.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.868" endtime="20201116 13:06:15.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:15.876" endtime="20201116 13:06:15.895"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.874" endtime="20201116 13:06:15.895"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.866" endtime="20201116 13:06:15.896"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.342" endtime="20201116 13:06:15.896"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.787" endtime="20201116 13:06:15.896"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.787" endtime="20201116 13:06:15.897"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:15.900" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.908" endtime="20201116 13:06:18.024"></status>
</kw>
<msg timestamp="20201116 13:06:18.026" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 24940202, 'wakeups': [24950232, 24960232, 24970231, 24980231, 24990231...</msg>
<status status="PASS" starttime="20201116 13:06:15.906" endtime="20201116 13:06:18.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.032" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 24940202, 'wakeups': [24950232, 24960232, 24970231, 24980231, 24990231...</msg>
<status status="PASS" starttime="20201116 13:06:18.028" endtime="20201116 13:06:18.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.034" endtime="20201116 13:06:18.037"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.903" endtime="20201116 13:06:18.038"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.902" endtime="20201116 13:06:18.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:18.045" level="INFO">${RESULT} = {'start-time': 24940202, 'timer-count': 5, 'wakeups': [24950232, 24960232, 24970231, 24980231, 24990231, 25000231, 25010231, 25020231, 25030231, 25040231, 25050231, 25060231, 25070231, 25080231, 25090...</msg>
<status status="PASS" starttime="20201116 13:06:18.041" endtime="20201116 13:06:18.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.054" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:18.051" endtime="20201116 13:06:18.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.057" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:18.056" endtime="20201116 13:06:18.057"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.047" endtime="20201116 13:06:18.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.063" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:18.061" endtime="20201116 13:06:18.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.065" level="INFO">VALUE: 24940202</msg>
<status status="PASS" starttime="20201116 13:06:18.064" endtime="20201116 13:06:18.065"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.058" endtime="20201116 13:06:18.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.070" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:18.069" endtime="20201116 13:06:18.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.072" level="INFO">VALUE: [24950232, 24960232, 24970231, 24980231, 24990231, 25000231, 25010231, 25020231, 25030231, 25040231, 25050231, 25060231, 25070231, 25080231, 25090231, 25100231, 25110231, 25120231, 25130231, 25140231, 25150231, 25160231, 25170231, 25180231, 25190231, 25200231, 25210231, 25220231, 25230231, 25240231, 25250231, 25260231, 25270231, 25280231, 25290231, 25300231, 25310231, 25320231, 25330231, 25340231, 25350231, 25360231, 25370231, 25380231, 25390231, 25400231, 25410231, 25420231, 25430231, 25440231, 25450231, 25460231, 25470231, 25480231, 25490231, 25500231, 25510231, 25520231, 25530231, 25540231, 25550231, 25560231, 25570231, 25580231, 25590231, 25600231, 25610231, 25620231, 25630231, 25640231, 25650231, 25660231, 25670231, 25680231, 25690231, 25700231, 25710231, 25720231, 25730231, 25740231, 25750231, 25760231, 25770231, 25780231, 25790231, 25800231, 25810231, 25820231, 25830231, 25840231, 25850231, 25860231, 25870231, 25880231, 25890231, 25900231, 25910231, 25920231, 25930231, 25940231]</msg>
<status status="PASS" starttime="20201116 13:06:18.071" endtime="20201116 13:06:18.072"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.066" endtime="20201116 13:06:18.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.080" endtime="20201116 13:06:18.371"></status>
</kw>
<msg timestamp="20201116 13:06:18.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032251111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:18.078" endtime="20201116 13:06:18.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032251111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:18.374" endtime="20201116 13:06:18.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.382" endtime="20201116 13:06:18.384"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.076" endtime="20201116 13:06:18.384"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.074" endtime="20201116 13:06:18.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:18.408" level="INFO">${RESULT} = {'diff': [0, 0.010031708, 0.010000847, 0.009999638999999998, 0.010000361000000006, 0.010001152999999992, 0.010000388999999998, 0.010001083000000008, 0.010000806000000001, 0.010000735999999996, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:06:18.385" endtime="20201116 13:06:18.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.413" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:18.411" endtime="20201116 13:06:18.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.415" level="INFO">VALUE: 0.022219403</msg>
<status status="PASS" starttime="20201116 13:06:18.414" endtime="20201116 13:06:18.415"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.409" endtime="20201116 13:06:18.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.420" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:18.419" endtime="20201116 13:06:18.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.423" level="INFO">VALUE: [0.032251111, 0.042251958, 0.052251597, 0.062251958, 0.072253111, 0.0822535, 0.092254583, 0.102255389, 0.112256125, 0.122256847, 0.132257514, 0.142258361, 0.152259, 0.162259792, 0.1722605, 0.182261306, 0.192262014, 0.202262764, 0.212263458, 0.22226425, 0.232264931, 0.242265736, 0.252266375, 0.262267236, 0.272267875, 0.282268736, 0.292269361, 0.302270181, 0.312270875, 0.322271653, 0.332272319, 0.342273153, 0.352273806, 0.362274611, 0.372275278, 0.382276111, 0.39227675, 0.402277597, 0.412278236, 0.422279069, 0.432279694, 0.4422805, 0.452281181, 0.462281972, 0.472282653, 0.482283431, 0.492284097, 0.502284917, 0.512285597, 0.522286347, 0.532287028, 0.542287847, 0.552288486, 0.562289292, 0.572289986, 0.582290819, 0.592291458, 0.602292236, 0.612292889, 0.622293722, 0.632294375, 0.642295153, 0.652295917, 0.662296653, 0.672297306, 0.682298111, 0.692298778, 0.702299569, 0.712300236, 0.722301111, 0.732301694, 0.742302542, 0.752303208, 0.762304, 0.772304667, 0.782305472, 0.792306097, 0.802306931, 0.812307583, 0.822308389, 0.832309056, 0.842309861, 0.8523105, 0.862311403, 0.872312056, 0.882312792, 0.8923135, 0.902314278, 0.912314931, 0.922315736, 0.932316403, 0.942317264, 0.952317875, 0.962318681, 0.972319319, 0.982320167, 0.992320806, 1.002321597, 1.012322278, 1.022323097] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:18.422" endtime="20201116 13:06:18.423"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.416" endtime="20201116 13:06:18.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.426" endtime="20201116 13:06:18.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:18.430" endtime="20201116 13:06:18.449"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.428" endtime="20201116 13:06:18.450"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.424" endtime="20201116 13:06:18.450"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.900" endtime="20201116 13:06:18.450"></status>
</kw>
<msg timestamp="20201116 13:06:18.450" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.459" endtime="20201116 13:06:20.576"></status>
</kw>
<msg timestamp="20201116 13:06:20.577" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27491305, 'wakeups': [27501334, 27511335, 27521334, 27531334, 27541334...</msg>
<status status="PASS" starttime="20201116 13:06:18.457" endtime="20201116 13:06:20.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.584" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27491305, 'wakeups': [27501334, 27511335, 27521334, 27531334, 27541334...</msg>
<status status="PASS" starttime="20201116 13:06:20.580" endtime="20201116 13:06:20.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:20.586" endtime="20201116 13:06:20.590"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.455" endtime="20201116 13:06:20.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.452" endtime="20201116 13:06:20.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:20.597" level="INFO">${RESULT} = {'start-time': 27491305, 'timer-count': 5, 'wakeups': [27501334, 27511335, 27521334, 27531334, 27541334, 27551334, 27561334, 27571334, 27581334, 27591334, 27601334, 27611334, 27621334, 27631334, 27641...</msg>
<status status="PASS" starttime="20201116 13:06:20.593" endtime="20201116 13:06:20.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.606" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:20.604" endtime="20201116 13:06:20.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.611" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:20.609" endtime="20201116 13:06:20.611"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.599" endtime="20201116 13:06:20.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.620" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:20.619" endtime="20201116 13:06:20.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.622" level="INFO">VALUE: 27491305</msg>
<status status="PASS" starttime="20201116 13:06:20.621" endtime="20201116 13:06:20.623"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.614" endtime="20201116 13:06:20.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.627" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:20.626" endtime="20201116 13:06:20.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.630" level="INFO">VALUE: [27501334, 27511335, 27521334, 27531334, 27541334, 27551334, 27561334, 27571334, 27581334, 27591334, 27601334, 27611334, 27621334, 27631334, 27641334, 27651334, 27661334, 27671334, 27681334, 27691334, 27701334, 27711334, 27721334, 27731334, 27741334, 27751334, 27761334, 27771334, 27781334, 27791334, 27801334, 27811334, 27821334, 27831334, 27841334, 27851334, 27861334, 27871334, 27881334, 27891334, 27901334, 27911334, 27921334, 27931334, 27941334, 27951334, 27961334, 27971334, 27981334, 27991334, 28001334, 28011334, 28021334, 28031334, 28041334, 28051334, 28061334, 28071334, 28081334, 28091334, 28101334, 28111334, 28121334, 28131334, 28141334, 28151334, 28161334, 28171334, 28181334, 28191334, 28201334, 28211334, 28221334, 28231334, 28241334, 28251334, 28261334, 28271334, 28281334, 28291334, 28301334, 28311334, 28321334, 28331334, 28341334, 28351334, 28361334, 28371334, 28381334, 28391334, 28401334, 28411334, 28421334, 28431334, 28441334, 28451334, 28461334, 28471334, 28481334, 28491334]</msg>
<status status="PASS" starttime="20201116 13:06:20.628" endtime="20201116 13:06:20.630"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.624" endtime="20201116 13:06:20.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:20.637" endtime="20201116 13:06:20.929"></status>
</kw>
<msg timestamp="20201116 13:06:20.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019265222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02929625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:20.635" endtime="20201116 13:06:20.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019265222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02929625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:20.932" endtime="20201116 13:06:20.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:20.940" endtime="20201116 13:06:20.942"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.633" endtime="20201116 13:06:20.943"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.631" endtime="20201116 13:06:20.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:20.974" level="INFO">${RESULT} = {'diff': [0, 0.010031028, 0.010001903000000003, 0.009999583, 0.010000402999999998, 0.010001111000000007, 0.010000361, 0.010001125, 0.010000806000000001, 0.010000651999999999, 0.010000806000000001, 0.0...</msg>
<status status="PASS" starttime="20201116 13:06:20.944" endtime="20201116 13:06:20.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.979" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:20.978" endtime="20201116 13:06:20.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.981" level="INFO">VALUE: 0.019265222</msg>
<status status="PASS" starttime="20201116 13:06:20.980" endtime="20201116 13:06:20.981"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.975" endtime="20201116 13:06:20.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.986" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:20.985" endtime="20201116 13:06:20.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:20.989" level="INFO">VALUE: [0.02929625, 0.039298153, 0.049297736, 0.059298139, 0.06929925, 0.079299611, 0.089300736, 0.099301542, 0.109302194, 0.119303, 0.129303653, 0.139304486, 0.149305194, 0.159305931, 0.169306639, 0.179307444, 0.189308111, 0.199308903, 0.209309583, 0.219310389, 0.229311056, 0.239311861, 0.249312528, 0.259313361, 0.269314028, 0.279314819, 0.289315514, 0.299316319, 0.309317014, 0.319317778, 0.329318458, 0.339319278, 0.349319944, 0.35932075, 0.369321403, 0.379322236, 0.389322958, 0.399323681, 0.409324389, 0.419325222, 0.429325833, 0.439326667, 0.449327333, 0.459328139, 0.469328819, 0.479329625, 0.489330278, 0.499331125, 0.509331792, 0.519332583, 0.52933325, 0.539334111, 0.549334722, 0.559335569, 0.569336222, 0.579337042, 0.589337694, 0.599338528, 0.609339181, 0.61934, 0.629340681, 0.639341444, 0.649342153, 0.659342958, 0.669343597, 0.679344444, 0.689345097, 0.699345903, 0.709346556, 0.719347361, 0.729348042, 0.739348847, 0.7493495, 0.759350292, 0.769351, 0.779351792, 0.789352444, 0.799353236, 0.809353889, 0.819354708, 0.829355361, 0.839356153, 0.849356806, 0.859357639, 0.869358292, 0.879359069, 0.889359764, 0.899360583, 0.909361236, 0.919362042, 0.929362708, 0.9393635, 0.949364167, 0.959365028, 0.969365625, 0.979366458, 0.989367097, 0.999367889, 1.009368583, 1.019369389] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:20.987" endtime="20201116 13:06:20.989"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.982" endtime="20201116 13:06:20.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:20.992" endtime="20201116 13:06:20.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:20.995" endtime="20201116 13:06:21.014"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.994" endtime="20201116 13:06:21.015"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:20.990" endtime="20201116 13:06:21.016"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.451" endtime="20201116 13:06:21.016"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.898" endtime="20201116 13:06:21.016"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.897" endtime="20201116 13:06:21.016"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:21.019" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:21.028" endtime="20201116 13:06:23.145"></status>
</kw>
<msg timestamp="20201116 13:06:23.146" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 30060651, 'wakeups': [30070688, 30080689, 30090688, 30100687, 30110688...</msg>
<status status="PASS" starttime="20201116 13:06:21.026" endtime="20201116 13:06:23.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 30060651, 'wakeups': [30070688, 30080689, 30090688, 30100687, 30110688...</msg>
<status status="PASS" starttime="20201116 13:06:23.149" endtime="20201116 13:06:23.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.155" endtime="20201116 13:06:23.158"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.023" endtime="20201116 13:06:23.159"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.021" endtime="20201116 13:06:23.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:23.166" level="INFO">${RESULT} = {'start-time': 30060651, 'timer-count': 6, 'wakeups': [30070688, 30080689, 30090688, 30100687, 30110688, 30120688, 30130687, 30140688, 30150688, 30160688, 30170687, 30180687, 30190687, 30200688, 30210...</msg>
<status status="PASS" starttime="20201116 13:06:23.162" endtime="20201116 13:06:23.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.170" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:23.169" endtime="20201116 13:06:23.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.172" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:23.171" endtime="20201116 13:06:23.173"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.167" endtime="20201116 13:06:23.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.177" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:23.176" endtime="20201116 13:06:23.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.179" level="INFO">VALUE: 30060651</msg>
<status status="PASS" starttime="20201116 13:06:23.178" endtime="20201116 13:06:23.180"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.174" endtime="20201116 13:06:23.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.184" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:23.183" endtime="20201116 13:06:23.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.186" level="INFO">VALUE: [30070688, 30080689, 30090688, 30100687, 30110688, 30120688, 30130687, 30140688, 30150688, 30160688, 30170687, 30180687, 30190687, 30200688, 30210687, 30220687, 30230687, 30240688, 30250687, 30260687, 30270687, 30280688, 30290687, 30300687, 30310687, 30320688, 30330687, 30340687, 30350687, 30360688, 30370687, 30380687, 30390687, 30400688, 30410687, 30420687, 30430687, 30440688, 30450687, 30460687, 30470687, 30480688, 30490687, 30500687, 30510687, 30520688, 30530687, 30540687, 30550687, 30560688, 30570687, 30580687, 30590687, 30600688, 30610687, 30620687, 30630687, 30640688, 30650687, 30660687, 30670687, 30680688, 30690687, 30700687, 30710687, 30720688, 30730687, 30740687, 30750687, 30760688, 30770687, 30780687, 30790687, 30800688, 30810687, 30820687, 30830687, 30840688, 30850687, 30860687, 30870687, 30880688, 30890687, 30900687, 30910687, 30920688, 30930687, 30940687, 30950687, 30960688, 30970687, 30980687, 30990687, 31000688, 31010687, 31020687, 31030687, 31040688, 31050687, 31060687]</msg>
<status status="PASS" starttime="20201116 13:06:23.185" endtime="20201116 13:06:23.187"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.181" endtime="20201116 13:06:23.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.194" endtime="20201116 13:06:23.484"></status>
</kw>
<msg timestamp="20201116 13:06:23.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023171722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033210097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:23.192" endtime="20201116 13:06:23.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023171722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033210097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:23.488" endtime="20201116 13:06:23.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.496" endtime="20201116 13:06:23.497"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.190" endtime="20201116 13:06:23.498"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.188" endtime="20201116 13:06:23.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:23.522" level="INFO">${RESULT} = {'diff': [0, 0.010038375000000002, 0.010001597000000001, 0.010000166999999997, 0.009999778, 0.010001207999999998, 0.010001292000000009, 0.00999995799999999, 0.010001834000000001, 0.010000651999999999,...</msg>
<status status="PASS" starttime="20201116 13:06:23.499" endtime="20201116 13:06:23.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.527" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:23.526" endtime="20201116 13:06:23.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.529" level="INFO">VALUE: 0.023171722</msg>
<status status="PASS" starttime="20201116 13:06:23.528" endtime="20201116 13:06:23.529"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.523" endtime="20201116 13:06:23.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.534" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:23.533" endtime="20201116 13:06:23.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.537" level="INFO">VALUE: [0.033210097, 0.043211694, 0.053211861, 0.063211639, 0.073212847, 0.083214139, 0.093214097, 0.103215931, 0.113216583, 0.123217111, 0.133216833, 0.143217583, 0.153218542, 0.163220069, 0.173219736, 0.183220542, 0.193221514, 0.203223028, 0.213222708, 0.223223514, 0.233224444, 0.243225972, 0.253225653, 0.263226472, 0.273227403, 0.283228944, 0.293228653, 0.303229417, 0.313230361, 0.323231903, 0.333231569, 0.343232375, 0.353233319, 0.363234847, 0.373234542, 0.383235333, 0.393236278, 0.403237847, 0.413237514, 0.423238319, 0.43323925, 0.443240778, 0.453240458, 0.46324125, 0.473242208, 0.483243736, 0.493243389, 0.503244194, 0.513245139, 0.523246653, 0.533246319, 0.543247125, 0.553248097, 0.563249597, 0.57324925, 0.583250056, 0.593251, 0.603252514, 0.613252194, 0.623253042, 0.633253944, 0.643255444, 0.653255139, 0.663255931, 0.673256861, 0.683258403, 0.693258069, 0.703258847, 0.713259819, 0.723261319, 0.733260986, 0.743261806, 0.753262736, 0.76326425, 0.773263917, 0.783264722, 0.793265681, 0.803267208, 0.813266861, 0.823267667, 0.833268597, 0.843270139, 0.853269806, 0.863270597, 0.873271542, 0.883273097, 0.89327275, 0.903273528, 0.913274514, 0.923276, 0.933275667, 0.943276514, 0.953277417, 0.963278944, 0.973278611, 0.983279458, 0.993280375, 1.003281903, 1.013281542, 1.023282347] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:23.536" endtime="20201116 13:06:23.537"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.530" endtime="20201116 13:06:23.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.540" endtime="20201116 13:06:23.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:23.544" endtime="20201116 13:06:23.563"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.542" endtime="20201116 13:06:23.563"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.538" endtime="20201116 13:06:23.564"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.020" endtime="20201116 13:06:23.564"></status>
</kw>
<msg timestamp="20201116 13:06:23.565" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.573" endtime="20201116 13:06:25.690"></status>
</kw>
<msg timestamp="20201116 13:06:25.691" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 32605253, 'wakeups': [32615291, 32625291, 32635290, 32645289, 32655290...</msg>
<status status="PASS" starttime="20201116 13:06:23.571" endtime="20201116 13:06:25.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.697" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 32605253, 'wakeups': [32615291, 32625291, 32635290, 32645289, 32655290...</msg>
<status status="PASS" starttime="20201116 13:06:25.693" endtime="20201116 13:06:25.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:25.700" endtime="20201116 13:06:25.703"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.569" endtime="20201116 13:06:25.704"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.567" endtime="20201116 13:06:25.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:25.711" level="INFO">${RESULT} = {'start-time': 32605253, 'timer-count': 6, 'wakeups': [32615291, 32625291, 32635290, 32645289, 32655290, 32665290, 32675289, 32685290, 32695290, 32705290, 32715289, 32725289, 32735289, 32745290, 32755...</msg>
<status status="PASS" starttime="20201116 13:06:25.707" endtime="20201116 13:06:25.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.719" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:25.717" endtime="20201116 13:06:25.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.723" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:25.722" endtime="20201116 13:06:25.723"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:25.712" endtime="20201116 13:06:25.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.728" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:25.727" endtime="20201116 13:06:25.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.731" level="INFO">VALUE: 32605253</msg>
<status status="PASS" starttime="20201116 13:06:25.729" endtime="20201116 13:06:25.732"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:25.725" endtime="20201116 13:06:25.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.736" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:25.735" endtime="20201116 13:06:25.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:25.739" level="INFO">VALUE: [32615291, 32625291, 32635290, 32645289, 32655290, 32665290, 32675289, 32685290, 32695290, 32705290, 32715289, 32725289, 32735289, 32745290, 32755289, 32765289, 32775289, 32785290, 32795289, 32805289, 32815289, 32825290, 32835289, 32845289, 32855289, 32865290, 32875289, 32885289, 32895289, 32905290, 32915289, 32925289, 32935289, 32945290, 32955289, 32965289, 32975289, 32985290, 32995289, 33005289, 33015289, 33025290, 33035289, 33045289, 33055289, 33065290, 33075289, 33085289, 33095289, 33105290, 33115289, 33125289, 33135289, 33145290, 33155289, 33165289, 33175289, 33185290, 33195289, 33205289, 33215289, 33225290, 33235289, 33245289, 33255289, 33265290, 33275289, 33285289, 33295289, 33305290, 33315289, 33325289, 33335289, 33345290, 33355289, 33365289, 33375289, 33385290, 33395289, 33405289, 33415289, 33425290, 33435289, 33445289, 33455289, 33465290, 33475289, 33485289, 33495289, 33505290, 33515289, 33525289, 33535289, 33545290, 33555289, 33565289, 33575289, 33585290, 33595289, 33605289]</msg>
<status status="PASS" starttime="20201116 13:06:25.738" endtime="20201116 13:06:25.739"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:25.733" endtime="20201116 13:06:25.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:25.746" endtime="20201116 13:06:26.037"></status>
</kw>
<msg timestamp="20201116 13:06:26.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019271708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029310417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:25.745" endtime="20201116 13:06:26.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019271708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029310417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:26.040" endtime="20201116 13:06:26.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:26.048" endtime="20201116 13:06:26.050"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:25.742" endtime="20201116 13:06:26.050"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:25.740" endtime="20201116 13:06:26.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:26.074" level="INFO">${RESULT} = {'diff': [0, 0.010038709, 0.010000597, 0.010000153000000005, 0.009999790999999994, 0.010001195000000004, 0.010001290999999995, 0.010000000000000009, 0.010001791999999995, 0.010000680999999997, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:06:26.051" endtime="20201116 13:06:26.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.079" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:26.078" endtime="20201116 13:06:26.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.081" level="INFO">VALUE: 0.019271708</msg>
<status status="PASS" starttime="20201116 13:06:26.080" endtime="20201116 13:06:26.081"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.075" endtime="20201116 13:06:26.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.086" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:26.085" endtime="20201116 13:06:26.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.090" level="INFO">VALUE: [0.029310417, 0.039311014, 0.049311167, 0.059310958, 0.069312153, 0.079313444, 0.089313444, 0.099315236, 0.109315917, 0.119316444, 0.129316097, 0.139316903, 0.149317847, 0.159319389, 0.169319056, 0.179319847, 0.189320833, 0.199322333, 0.209322014, 0.219322806, 0.229323778, 0.239325292, 0.249324958, 0.259325764, 0.269326722, 0.27932825, 0.289327958, 0.299328736, 0.309329736, 0.319331208, 0.329330889, 0.339331681, 0.349332653, 0.359334167, 0.369333861, 0.379334639, 0.389335583, 0.399337139, 0.409336778, 0.419337569, 0.429338514, 0.439340042, 0.44933975, 0.459340514, 0.469341444, 0.479342972, 0.489342653, 0.499343431, 0.509344389, 0.519345917, 0.529345639, 0.539346375, 0.549347319, 0.559348847, 0.569348514, 0.579349306, 0.58935025, 0.599351764, 0.609351472, 0.619352236, 0.629353181, 0.639354708, 0.649354403, 0.659355167, 0.669356111, 0.679357639, 0.689357306, 0.699358111, 0.709359056, 0.719360569, 0.72936025, 0.739361056, 0.749362, 0.759363528, 0.769363181, 0.779364, 0.789364958, 0.799366458, 0.809366125, 0.819366917, 0.829367861, 0.839369389, 0.849369056, 0.859369875, 0.869370806, 0.879372375, 0.889372, 0.899372792, 0.909373792, 0.919375264, 0.929374944, 0.939375736, 0.949376681, 0.959378194, 0.969377889, 0.979378667, 0.989379611, 0.999381139, 1.009380806, 1.019381611] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:26.089" endtime="20201116 13:06:26.090"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.082" endtime="20201116 13:06:26.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:26.093" endtime="20201116 13:06:26.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:26.097" endtime="20201116 13:06:26.116"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.095" endtime="20201116 13:06:26.123"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.091" endtime="20201116 13:06:26.124"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.565" endtime="20201116 13:06:26.124"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.017" endtime="20201116 13:06:26.125"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.017" endtime="20201116 13:06:26.125"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:26.128" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:26.136" endtime="20201116 13:06:28.253"></status>
</kw>
<msg timestamp="20201116 13:06:28.254" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 35168108, 'wakeups': [35178153, 35188153, 35198153, 35208153, 35218153...</msg>
<status status="PASS" starttime="20201116 13:06:26.134" endtime="20201116 13:06:28.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 35168108, 'wakeups': [35178153, 35188153, 35198153, 35208153, 35218153...</msg>
<status status="PASS" starttime="20201116 13:06:28.256" endtime="20201116 13:06:28.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:28.262" endtime="20201116 13:06:28.266"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.131" endtime="20201116 13:06:28.267"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.130" endtime="20201116 13:06:28.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:28.274" level="INFO">${RESULT} = {'start-time': 35168108, 'timer-count': 7, 'wakeups': [35178153, 35188153, 35198153, 35208153, 35218153, 35228153, 35238153, 35248153, 35258153, 35268153, 35278153, 35288153, 35298153, 35308153, 35318...</msg>
<status status="PASS" starttime="20201116 13:06:28.269" endtime="20201116 13:06:28.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.279" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:28.278" endtime="20201116 13:06:28.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.281" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:28.280" endtime="20201116 13:06:28.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.275" endtime="20201116 13:06:28.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.285" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:28.284" endtime="20201116 13:06:28.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.288" level="INFO">VALUE: 35168108</msg>
<status status="PASS" starttime="20201116 13:06:28.287" endtime="20201116 13:06:28.288"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.282" endtime="20201116 13:06:28.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.293" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:28.292" endtime="20201116 13:06:28.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.295" level="INFO">VALUE: [35178153, 35188153, 35198153, 35208153, 35218153, 35228153, 35238153, 35248153, 35258153, 35268153, 35278153, 35288153, 35298153, 35308153, 35318153, 35328153, 35338153, 35348153, 35358153, 35368153, 35378153, 35388153, 35398153, 35408153, 35418153, 35428153, 35438153, 35448153, 35458153, 35468153, 35478153, 35488153, 35498153, 35508153, 35518153, 35528153, 35538153, 35548153, 35558153, 35568153, 35578153, 35588153, 35598153, 35608153, 35618153, 35628153, 35638153, 35648153, 35658153, 35668153, 35678153, 35688153, 35698153, 35708153, 35718153, 35728153, 35738153, 35748153, 35758153, 35768153, 35778153, 35788153, 35798153, 35808153, 35818153, 35828153, 35838153, 35848153, 35858153, 35868153, 35878153, 35888153, 35898153, 35908153, 35918153, 35928153, 35938153, 35948153, 35958153, 35968153, 35978153, 35988153, 35998153, 36008153, 36018153, 36028153, 36038153, 36048153, 36058153, 36068153, 36078153, 36088153, 36098153, 36108153, 36118153, 36128153, 36138153, 36148153, 36158153, 36168153]</msg>
<status status="PASS" starttime="20201116 13:06:28.294" endtime="20201116 13:06:28.295"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.289" endtime="20201116 13:06:28.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:28.303" endtime="20201116 13:06:28.595"></status>
</kw>
<msg timestamp="20201116 13:06:28.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029108083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039154681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:28.301" endtime="20201116 13:06:28.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029108083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039154681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:28.599" endtime="20201116 13:06:28.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:28.607" endtime="20201116 13:06:28.608"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.298" endtime="20201116 13:06:28.609"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.296" endtime="20201116 13:06:28.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:28.633" level="INFO">${RESULT} = {'diff': [0, 0.010046597999999997, 0.010000666000000005, 0.010000221999999996, 0.010001194999999997, 0.010000750000000003, 0.010000750000000003, 0.010000707999999997, 0.010000861, 0.010000598, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:06:28.610" endtime="20201116 13:06:28.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.637" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:28.636" endtime="20201116 13:06:28.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.639" level="INFO">VALUE: 0.029108083</msg>
<status status="PASS" starttime="20201116 13:06:28.638" endtime="20201116 13:06:28.640"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.634" endtime="20201116 13:06:28.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.645" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:28.644" endtime="20201116 13:06:28.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:28.647" level="INFO">VALUE: [0.039154681, 0.049155347, 0.059155569, 0.069156764, 0.079157514, 0.089158264, 0.099158972, 0.109159833, 0.119160431, 0.129160819, 0.139161931, 0.149162819, 0.159163403, 0.169163778, 0.179164875, 0.189165722, 0.199166333, 0.209167167, 0.219167819, 0.229168639, 0.239169306, 0.249170139, 0.259170778, 0.269171611, 0.27917225, 0.289173056, 0.29917375, 0.309174597, 0.319175222, 0.329176097, 0.339176681, 0.349177528, 0.359178181, 0.369178986, 0.379179639, 0.389180486, 0.399181125, 0.409181931, 0.419182653, 0.429183417, 0.439184056, 0.449184889, 0.459185528, 0.469186347, 0.479187014, 0.489187819, 0.499188444, 0.509189292, 0.519189917, 0.529190708, 0.539191403, 0.549192236, 0.559192847, 0.569193667, 0.579194319, 0.589195125, 0.599195806, 0.609196611, 0.61919725, 0.629198097, 0.639198736, 0.649199542, 0.659200208, 0.669201014, 0.679201667, 0.689202528, 0.699203125, 0.709203931, 0.719204597, 0.729205403, 0.739206056, 0.749206889, 0.759207528, 0.769208319, 0.779209, 0.789209819, 0.799210472, 0.809211278, 0.819211944, 0.82921275, 0.839213417, 0.849214208, 0.859214861, 0.869215694, 0.879216333, 0.889217125, 0.899217819, 0.909218639, 0.919219278, 0.929220083, 0.939220736, 0.949221569, 0.959222222, 0.969223028, 0.979223667, 0.989224514, 0.999225139, 1.009225944, 1.019226639, 1.029227444] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:28.646" endtime="20201116 13:06:28.647"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.641" endtime="20201116 13:06:28.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:28.650" endtime="20201116 13:06:28.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:28.653" endtime="20201116 13:06:28.673"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.652" endtime="20201116 13:06:28.673"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.648" endtime="20201116 13:06:28.674"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.128" endtime="20201116 13:06:28.674"></status>
</kw>
<msg timestamp="20201116 13:06:28.674" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:28.684" endtime="20201116 13:06:30.802"></status>
</kw>
<msg timestamp="20201116 13:06:30.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 37716333, 'wakeups': [37726379, 37736378, 37746378, 37756378, 37766378...</msg>
<status status="PASS" starttime="20201116 13:06:28.681" endtime="20201116 13:06:30.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.810" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 37716333, 'wakeups': [37726379, 37736378, 37746378, 37756378, 37766378...</msg>
<status status="PASS" starttime="20201116 13:06:30.805" endtime="20201116 13:06:30.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:30.812" endtime="20201116 13:06:30.815"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.679" endtime="20201116 13:06:30.816"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.676" endtime="20201116 13:06:30.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:30.823" level="INFO">${RESULT} = {'start-time': 37716333, 'timer-count': 7, 'wakeups': [37726379, 37736378, 37746378, 37756378, 37766378, 37776378, 37786378, 37796378, 37806378, 37816378, 37826378, 37836378, 37846378, 37856378, 37866...</msg>
<status status="PASS" starttime="20201116 13:06:30.819" endtime="20201116 13:06:30.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.832" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:30.830" endtime="20201116 13:06:30.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.836" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:30.834" endtime="20201116 13:06:30.837"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:30.825" endtime="20201116 13:06:30.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.843" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:30.842" endtime="20201116 13:06:30.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.845" level="INFO">VALUE: 37716333</msg>
<status status="PASS" starttime="20201116 13:06:30.844" endtime="20201116 13:06:30.845"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:30.839" endtime="20201116 13:06:30.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.850" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:30.849" endtime="20201116 13:06:30.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:30.852" level="INFO">VALUE: [37726379, 37736378, 37746378, 37756378, 37766378, 37776378, 37786378, 37796378, 37806378, 37816378, 37826378, 37836378, 37846378, 37856378, 37866378, 37876378, 37886378, 37896378, 37906378, 37916378, 37926378, 37936378, 37946378, 37956378, 37966378, 37976378, 37986378, 37996378, 38006378, 38016378, 38026378, 38036378, 38046378, 38056378, 38066378, 38076378, 38086378, 38096378, 38106378, 38116378, 38126378, 38136378, 38146378, 38156378, 38166378, 38176378, 38186378, 38196378, 38206378, 38216378, 38226378, 38236378, 38246378, 38256378, 38266378, 38276378, 38286378, 38296378, 38306378, 38316378, 38326378, 38336378, 38346378, 38356378, 38366378, 38376378, 38386378, 38396378, 38406378, 38416378, 38426378, 38436378, 38446378, 38456378, 38466378, 38476378, 38486378, 38496378, 38506378, 38516378, 38526378, 38536378, 38546378, 38556378, 38566378, 38576378, 38586378, 38596378, 38606378, 38616378, 38626378, 38636378, 38646378, 38656378, 38666378, 38676378, 38686378, 38696378, 38706378, 38716378]</msg>
<status status="PASS" starttime="20201116 13:06:30.851" endtime="20201116 13:06:30.852"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:30.846" endtime="20201116 13:06:30.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:30.859" endtime="20201116 13:06:31.150"></status>
</kw>
<msg timestamp="20201116 13:06:31.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030514917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:30.858" endtime="20201116 13:06:31.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:31.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030514917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:31.154" endtime="20201116 13:06:31.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:31.162" endtime="20201116 13:06:31.163"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:30.855" endtime="20201116 13:06:31.164"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:30.853" endtime="20201116 13:06:31.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:31.188" level="INFO">${RESULT} = {'diff': [0, 0.010046555999999998, 0.010000389000000002, 0.010000679999999998, 0.010000708000000004, 0.010000764000000002, 0.010000598, 0.010000888, 0.010000791999999994, 0.010000652999999998, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:06:31.165" endtime="20201116 13:06:31.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:31.197" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:31.196" endtime="20201116 13:06:31.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:31.199" level="INFO">VALUE: 0.020468361</msg>
<status status="PASS" starttime="20201116 13:06:31.198" endtime="20201116 13:06:31.200"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.193" endtime="20201116 13:06:31.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:31.205" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:31.204" endtime="20201116 13:06:31.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:31.207" level="INFO">VALUE: [0.030514917, 0.040515306, 0.050515986, 0.060516694, 0.070517458, 0.080518056, 0.090518944, 0.100519736, 0.110520389, 0.120521264, 0.130521889, 0.140522681, 0.150523347, 0.160524181, 0.170524819, 0.180525653, 0.190526292, 0.200526681, 0.210527778, 0.220528597, 0.230529278, 0.240530056, 0.250530722, 0.260531542, 0.270532208, 0.280532597, 0.290533708, 0.3005345, 0.310535153, 0.320535569, 0.330536653, 0.340537472, 0.350538111, 0.3605385, 0.370539625, 0.380540431, 0.390541097, 0.400541875, 0.410542556, 0.420543389, 0.430544042, 0.440544431, 0.450545528, 0.460546347, 0.470547028, 0.480547361, 0.490548472, 0.500549278, 0.510549972, 0.520550278, 0.530551389, 0.54055225, 0.550552861, 0.560553625, 0.570554292, 0.580555125, 0.590555778, 0.600556153, 0.610557319, 0.620558042, 0.630558708, 0.640559097, 0.650560208, 0.660561, 0.670561625, 0.680562, 0.690563111, 0.700563931, 0.710564583, 0.720565389, 0.730566097, 0.740566861, 0.750567556, 0.760567889, 0.770569, 0.780569792, 0.790570431, 0.800570833, 0.810571917, 0.820572736, 0.830573361, 0.840573736, 0.850574889, 0.860575681, 0.870576319, 0.880577111, 0.890577847, 0.900578583, 0.910579292, 0.920579625, 0.930580764, 0.940581542, 0.950582181, 0.960582569, 0.970583667, 0.980584486, 0.990585111, 1.000585528, 1.010586597, 1.020587431] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:31.206" endtime="20201116 13:06:31.207"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.201" endtime="20201116 13:06:31.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:31.210" endtime="20201116 13:06:31.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:31.213" endtime="20201116 13:06:31.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.212" endtime="20201116 13:06:31.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.208" endtime="20201116 13:06:31.234"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:28.675" endtime="20201116 13:06:31.234"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.126" endtime="20201116 13:06:31.234"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.125" endtime="20201116 13:06:31.235"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:31.237" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:31.245" endtime="20201116 13:06:33.363"></status>
</kw>
<msg timestamp="20201116 13:06:33.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 40277931, 'wakeups': [40287985, 40297984, 40307984, 40317985, 40327984...</msg>
<status status="PASS" starttime="20201116 13:06:31.244" endtime="20201116 13:06:33.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.370" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 40277931, 'wakeups': [40287985, 40297984, 40307984, 40317985, 40327984...</msg>
<status status="PASS" starttime="20201116 13:06:33.367" endtime="20201116 13:06:33.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:33.373" endtime="20201116 13:06:33.376"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.241" endtime="20201116 13:06:33.377"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.239" endtime="20201116 13:06:33.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:33.384" level="INFO">${RESULT} = {'start-time': 40277931, 'timer-count': 8, 'wakeups': [40287985, 40297984, 40307984, 40317985, 40327984, 40337984, 40347984, 40357984, 40367984, 40377984, 40387984, 40397984, 40407984, 40417984, 40427...</msg>
<status status="PASS" starttime="20201116 13:06:33.380" endtime="20201116 13:06:33.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.389" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:33.388" endtime="20201116 13:06:33.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.391" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:33.390" endtime="20201116 13:06:33.392"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.385" endtime="20201116 13:06:33.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.398" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:33.397" endtime="20201116 13:06:33.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.400" level="INFO">VALUE: 40277931</msg>
<status status="PASS" starttime="20201116 13:06:33.399" endtime="20201116 13:06:33.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.393" endtime="20201116 13:06:33.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.405" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:33.404" endtime="20201116 13:06:33.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.407" level="INFO">VALUE: [40287985, 40297984, 40307984, 40317985, 40327984, 40337984, 40347984, 40357984, 40367984, 40377984, 40387984, 40397984, 40407984, 40417984, 40427984, 40437984, 40447984, 40457984, 40467984, 40477984, 40487984, 40497984, 40507984, 40517984, 40527984, 40537984, 40547984, 40557984, 40567984, 40577984, 40587984, 40597984, 40607984, 40617984, 40627984, 40637984, 40647984, 40657984, 40667984, 40677984, 40687984, 40697984, 40707984, 40717984, 40727984, 40737984, 40747984, 40757984, 40767984, 40777984, 40787984, 40797984, 40807984, 40817984, 40827984, 40837984, 40847984, 40857984, 40867984, 40877984, 40887984, 40897984, 40907984, 40917984, 40927984, 40937984, 40947984, 40957984, 40967984, 40977984, 40987984, 40997984, 41007984, 41017984, 41027984, 41037984, 41047984, 41057984, 41067984, 41077984, 41087984, 41097984, 41107984, 41117984, 41127984, 41137984, 41147984, 41157984, 41167984, 41177984, 41187984, 41197984, 41207984, 41217984, 41227984, 41237984, 41247984, 41257984, 41267984, 41277984]</msg>
<status status="PASS" starttime="20201116 13:06:33.406" endtime="20201116 13:06:33.407"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.401" endtime="20201116 13:06:33.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:33.414" endtime="20201116 13:06:33.705"></status>
</kw>
<msg timestamp="20201116 13:06:33.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032144139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:33.413" endtime="20201116 13:06:33.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032144139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:33.709" endtime="20201116 13:06:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:33.716" endtime="20201116 13:06:33.718"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.410" endtime="20201116 13:06:33.718"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.409" endtime="20201116 13:06:33.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:33.742" level="INFO">${RESULT} = {'diff': [0, 0.010054583000000002, 0.010000679999999998, 0.010000638999999999, 0.010000916999999998, 0.010000569000000008, 0.010000778000000002, 0.01000072199999999, 0.010000806000000001, 0.0100006529...</msg>
<status status="PASS" starttime="20201116 13:06:33.719" endtime="20201116 13:06:33.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.747" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:33.746" endtime="20201116 13:06:33.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.749" level="INFO">VALUE: 0.022089556</msg>
<status status="PASS" starttime="20201116 13:06:33.748" endtime="20201116 13:06:33.749"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.743" endtime="20201116 13:06:33.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.755" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:33.754" endtime="20201116 13:06:33.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:33.757" level="INFO">VALUE: [0.032144139, 0.042144819, 0.052145458, 0.062146375, 0.072146944, 0.082147722, 0.092148444, 0.10214925, 0.112149903, 0.122150694, 0.132151375, 0.142152167, 0.152152861, 0.162153722, 0.172154347, 0.182155153, 0.192155833, 0.202156625, 0.212157292, 0.222158097, 0.232158806, 0.242159583, 0.25216025, 0.262161069, 0.272161806, 0.282162542, 0.292163208, 0.302164042, 0.31216475, 0.3221655, 0.332166181, 0.342166972, 0.352167667, 0.362168444, 0.372169111, 0.382169931, 0.392170597, 0.402171403, 0.412172056, 0.422172847, 0.432173542, 0.442174333, 0.452175014, 0.462175792, 0.472176472, 0.48217725, 0.492177931, 0.502178722, 0.512179417, 0.522180208, 0.532180861, 0.54218175, 0.552182403, 0.562183139, 0.572183819, 0.582184667, 0.592185319, 0.602186069, 0.612186764, 0.622187542, 0.632188236, 0.642189014, 0.652189681, 0.6621905, 0.672191181, 0.682191958, 0.692192639, 0.702193431, 0.712194125, 0.722194903, 0.732195583, 0.742196389, 0.752197056, 0.762197847, 0.772198542, 0.782199361, 0.7922, 0.802200806, 0.812201458, 0.822202264, 0.832202944, 0.842203736, 0.852204403, 0.862205208, 0.872205889, 0.882206681, 0.892207347, 0.902208153, 0.912208847, 0.922209611, 0.932210306, 0.942211097, 0.952211778, 0.962212556, 0.972213236, 0.982214028, 0.992214722, 1.002215528, 1.012216181, 1.022216972] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:33.756" endtime="20201116 13:06:33.758"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.750" endtime="20201116 13:06:33.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:33.761" endtime="20201116 13:06:33.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:33.764" endtime="20201116 13:06:33.783"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.762" endtime="20201116 13:06:33.784"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.759" endtime="20201116 13:06:33.784"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.238" endtime="20201116 13:06:33.785"></status>
</kw>
<msg timestamp="20201116 13:06:33.785" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:33.793" endtime="20201116 13:06:35.910"></status>
</kw>
<msg timestamp="20201116 13:06:35.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 42825663, 'wakeups': [42835716, 42845716, 42855716, 42865717, 42875716...</msg>
<status status="PASS" starttime="20201116 13:06:33.791" endtime="20201116 13:06:35.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.917" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 42825663, 'wakeups': [42835716, 42845716, 42855716, 42865717, 42875716...</msg>
<status status="PASS" starttime="20201116 13:06:35.914" endtime="20201116 13:06:35.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:35.920" endtime="20201116 13:06:35.923"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.789" endtime="20201116 13:06:35.924"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.787" endtime="20201116 13:06:35.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:35.931" level="INFO">${RESULT} = {'start-time': 42825663, 'timer-count': 8, 'wakeups': [42835716, 42845716, 42855716, 42865717, 42875716, 42885716, 42895716, 42905716, 42915716, 42925716, 42935716, 42945716, 42955716, 42965716, 42975...</msg>
<status status="PASS" starttime="20201116 13:06:35.927" endtime="20201116 13:06:35.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.939" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:35.937" endtime="20201116 13:06:35.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.941" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:35.940" endtime="20201116 13:06:35.942"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.932" endtime="20201116 13:06:35.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.946" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:35.945" endtime="20201116 13:06:35.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.948" level="INFO">VALUE: 42825663</msg>
<status status="PASS" starttime="20201116 13:06:35.947" endtime="20201116 13:06:35.949"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.943" endtime="20201116 13:06:35.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.953" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:35.952" endtime="20201116 13:06:35.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.956" level="INFO">VALUE: [42835716, 42845716, 42855716, 42865717, 42875716, 42885716, 42895716, 42905716, 42915716, 42925716, 42935716, 42945716, 42955716, 42965716, 42975716, 42985716, 42995716, 43005716, 43015716, 43025716, 43035716, 43045716, 43055716, 43065716, 43075716, 43085716, 43095716, 43105716, 43115716, 43125716, 43135716, 43145716, 43155716, 43165716, 43175716, 43185716, 43195716, 43205716, 43215716, 43225716, 43235716, 43245716, 43255716, 43265716, 43275716, 43285716, 43295716, 43305716, 43315716, 43325716, 43335716, 43345716, 43355716, 43365716, 43375716, 43385716, 43395716, 43405716, 43415716, 43425716, 43435716, 43445716, 43455716, 43465716, 43475716, 43485716, 43495716, 43505716, 43515716, 43525716, 43535716, 43545716, 43555716, 43565716, 43575716, 43585716, 43595716, 43605716, 43615716, 43625716, 43635716, 43645716, 43655716, 43665716, 43675716, 43685716, 43695716, 43705716, 43715716, 43725716, 43735716, 43745716, 43755716, 43765716, 43775716, 43785716, 43795716, 43805716, 43815716, 43825716]</msg>
<status status="PASS" starttime="20201116 13:06:35.954" endtime="20201116 13:06:35.956"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.950" endtime="20201116 13:06:35.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:35.964" endtime="20201116 13:06:36.255"></status>
</kw>
<msg timestamp="20201116 13:06:36.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029328153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:35.962" endtime="20201116 13:06:36.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:36.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029328153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:36.258" endtime="20201116 13:06:36.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:36.266" endtime="20201116 13:06:36.268"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.959" endtime="20201116 13:06:36.268"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.957" endtime="20201116 13:06:36.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:36.292" level="INFO">${RESULT} = {'diff': [0, 0.010054264, 0.010001653000000003, 0.010000665999999998, 0.010000888999999999, 0.010000583000000007, 0.010000805999999987, 0.010000667000000005, 0.010000833, 0.010000680999999997, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:06:36.269" endtime="20201116 13:06:36.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:36.297" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:36.296" endtime="20201116 13:06:36.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:36.299" level="INFO">VALUE: 0.019273889</msg>
<status status="PASS" starttime="20201116 13:06:36.298" endtime="20201116 13:06:36.299"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.293" endtime="20201116 13:06:36.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:36.304" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:36.303" endtime="20201116 13:06:36.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:36.306" level="INFO">VALUE: [0.029328153, 0.039329806, 0.049330472, 0.059331361, 0.069331944, 0.07933275, 0.089333417, 0.09933425, 0.109334931, 0.119335694, 0.129336361, 0.139337167, 0.149337875, 0.159338639, 0.169339319, 0.179340167, 0.189340819, 0.199341611, 0.209342278, 0.219343111, 0.229343792, 0.239344569, 0.24934525, 0.259346097, 0.269346736, 0.279347528, 0.289348236, 0.299349014, 0.309349708, 0.3193505, 0.329351167, 0.339351972, 0.349352681, 0.359353542, 0.369354125, 0.379354931, 0.389355625, 0.399356417, 0.409357097, 0.419357917, 0.429358597, 0.439359389, 0.449360056, 0.459360861, 0.469361556, 0.479362347, 0.489363014, 0.499363806, 0.509364514, 0.519365292, 0.529365944, 0.53936675, 0.549367431, 0.559368222, 0.569368889, 0.579369681, 0.589370375, 0.599371153, 0.609371819, 0.619372625, 0.629373319, 0.639374097, 0.649374819, 0.659375569, 0.66937625, 0.679377028, 0.689377708, 0.699378486, 0.709379181, 0.719379972, 0.729380625, 0.739381431, 0.749382125, 0.759382917, 0.769383569, 0.779384375, 0.789385056, 0.799385847, 0.809386528, 0.819387319, 0.829388014, 0.839388847, 0.849389444, 0.859390264, 0.869390958, 0.879391736, 0.889392389, 0.899393208, 0.909393903, 0.919394681, 0.929395333, 0.939396125, 0.949396833, 0.959397625, 0.969398319, 0.979399069, 0.989399764, 0.999400556, 1.009401222, 1.019402014] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:36.305" endtime="20201116 13:06:36.307"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.300" endtime="20201116 13:06:36.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:36.310" endtime="20201116 13:06:36.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:36.313" endtime="20201116 13:06:36.332"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.311" endtime="20201116 13:06:36.333"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.308" endtime="20201116 13:06:36.333"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:33.786" endtime="20201116 13:06:36.334"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.236" endtime="20201116 13:06:36.334"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:31.235" endtime="20201116 13:06:36.334"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:36.337" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:36.350" endtime="20201116 13:06:38.468"></status>
</kw>
<msg timestamp="20201116 13:06:38.469" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 45382633, 'wakeups': [45392695, 45402696, 45412696, 45422696, 45432696...</msg>
<status status="PASS" starttime="20201116 13:06:36.344" endtime="20201116 13:06:38.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.475" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 45382633, 'wakeups': [45392695, 45402696, 45412696, 45422696, 45432696...</msg>
<status status="PASS" starttime="20201116 13:06:38.471" endtime="20201116 13:06:38.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:38.477" endtime="20201116 13:06:38.480"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.341" endtime="20201116 13:06:38.482"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.339" endtime="20201116 13:06:38.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:38.488" level="INFO">${RESULT} = {'start-time': 45382633, 'timer-count': 9, 'wakeups': [45392695, 45402696, 45412696, 45422696, 45432696, 45442696, 45452696, 45462696, 45472696, 45482696, 45492696, 45502696, 45512696, 45522696, 45532...</msg>
<status status="PASS" starttime="20201116 13:06:38.484" endtime="20201116 13:06:38.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.496" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:38.495" endtime="20201116 13:06:38.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.498" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:38.497" endtime="20201116 13:06:38.498"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.490" endtime="20201116 13:06:38.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.503" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:38.502" endtime="20201116 13:06:38.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.505" level="INFO">VALUE: 45382633</msg>
<status status="PASS" starttime="20201116 13:06:38.504" endtime="20201116 13:06:38.505"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.499" endtime="20201116 13:06:38.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.510" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:38.509" endtime="20201116 13:06:38.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.512" level="INFO">VALUE: [45392695, 45402696, 45412696, 45422696, 45432696, 45442696, 45452696, 45462696, 45472696, 45482696, 45492696, 45502696, 45512696, 45522696, 45532696, 45542696, 45552696, 45562696, 45572696, 45582696, 45592696, 45602696, 45612696, 45622696, 45632696, 45642696, 45652696, 45662696, 45672696, 45682696, 45692696, 45702696, 45712696, 45722696, 45732696, 45742696, 45752696, 45762696, 45772696, 45782696, 45792696, 45802696, 45812696, 45822696, 45832696, 45842696, 45852696, 45862696, 45872696, 45882696, 45892696, 45902696, 45912696, 45922696, 45932696, 45942696, 45952696, 45962696, 45972696, 45982696, 45992696, 46002696, 46012696, 46022696, 46032696, 46042696, 46052696, 46062696, 46072696, 46082696, 46092696, 46102696, 46112696, 46122696, 46132696, 46142696, 46152696, 46162696, 46172696, 46182696, 46192696, 46202696, 46212696, 46222696, 46232696, 46242696, 46252696, 46262696, 46272696, 46282696, 46292696, 46302696, 46312696, 46322696, 46332696, 46342696, 46352696, 46362696, 46372696, 46382696]</msg>
<status status="PASS" starttime="20201116 13:06:38.511" endtime="20201116 13:06:38.512"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.506" endtime="20201116 13:06:38.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:38.519" endtime="20201116 13:06:38.811"></status>
</kw>
<msg timestamp="20201116 13:06:38.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027284736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0373485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:06:38.518" endtime="20201116 13:06:38.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027284736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0373485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:06:38.815" endtime="20201116 13:06:38.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:38.822" endtime="20201116 13:06:38.825"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.515" endtime="20201116 13:06:38.825"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.513" endtime="20201116 13:06:38.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:38.850" level="INFO">${RESULT} = {'diff': [0, 0.010063764, 0.010001250000000003, 0.010000611, 0.010000778000000002, 0.01000072199999999, 0.010000792000000008, 0.010000679999999998, 0.010000888999999999, 0.010000584000000007, 0.010000...</msg>
<status status="PASS" starttime="20201116 13:06:38.826" endtime="20201116 13:06:38.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.855" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:38.854" endtime="20201116 13:06:38.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.857" level="INFO">VALUE: 0.027284736</msg>
<status status="PASS" starttime="20201116 13:06:38.856" endtime="20201116 13:06:38.857"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.851" endtime="20201116 13:06:38.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.862" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:38.861" endtime="20201116 13:06:38.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:38.864" level="INFO">VALUE: [0.0373485, 0.04734975, 0.057350361, 0.067351139, 0.077351861, 0.087352653, 0.097353333, 0.107354222, 0.117354806, 0.127355611, 0.137356306, 0.147357153, 0.157357764, 0.167358583, 0.177359236, 0.187360097, 0.197360736, 0.207361569, 0.217362222, 0.227363056, 0.237363694, 0.247364514, 0.257365222, 0.267366014, 0.277366653, 0.287367444, 0.297368208, 0.307368986, 0.317369639, 0.327370417, 0.337371056, 0.347371889, 0.357372528, 0.367373375, 0.377374028, 0.387374833, 0.397375458, 0.407376278, 0.417376931, 0.427377764, 0.437378417, 0.447379194, 0.457379889, 0.467380708, 0.477381333, 0.487382167, 0.497382875, 0.507383653, 0.517384292, 0.527385083, 0.537385764, 0.547386611, 0.557387208, 0.567388028, 0.577388681, 0.587389528, 0.597390153, 0.607390944, 0.617391639, 0.627392458, 0.637393097, 0.647393931, 0.657394556, 0.667395417, 0.677396028, 0.687396875, 0.697397514, 0.707398347, 0.717398986, 0.727399806, 0.737400458, 0.747401278, 0.757401931, 0.76740275, 0.777403403, 0.787404222, 0.797404861, 0.807405694, 0.817406333, 0.827407181, 0.837407806, 0.847408597, 0.857409292, 0.867410111, 0.87741075, 0.887411569, 0.897412208, 0.907413056, 0.917413681, 0.927414514, 0.937415167, 0.947415986, 0.957416625, 0.967417458, 0.977418111, 0.987418931, 0.997419583, 1.007420403, 1.017421069, 1.027421875] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:38.863" endtime="20201116 13:06:38.865"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.858" endtime="20201116 13:06:38.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:38.867" endtime="20201116 13:06:38.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:38.871" endtime="20201116 13:06:38.890"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.869" endtime="20201116 13:06:38.891"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.866" endtime="20201116 13:06:38.891"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.337" endtime="20201116 13:06:38.891"></status>
</kw>
<msg timestamp="20201116 13:06:38.892" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:38.900" endtime="20201116 13:06:41.018"></status>
</kw>
<msg timestamp="20201116 13:06:41.019" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 47932496, 'wakeups': [47942559, 47952559, 47962559, 47972559, 47982559...</msg>
<status status="PASS" starttime="20201116 13:06:38.898" endtime="20201116 13:06:41.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.025" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 47932496, 'wakeups': [47942559, 47952559, 47962559, 47972559, 47982559...</msg>
<status status="PASS" starttime="20201116 13:06:41.021" endtime="20201116 13:06:41.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:41.027" endtime="20201116 13:06:41.031"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.896" endtime="20201116 13:06:41.032"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.894" endtime="20201116 13:06:41.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:41.038" level="INFO">${RESULT} = {'start-time': 47932496, 'timer-count': 9, 'wakeups': [47942559, 47952559, 47962559, 47972559, 47982559, 47992559, 48002559, 48012559, 48022559, 48032559, 48042559, 48052559, 48062559, 48072559, 48082...</msg>
<status status="PASS" starttime="20201116 13:06:41.034" endtime="20201116 13:06:41.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.048" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:41.045" endtime="20201116 13:06:41.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.052" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:41.051" endtime="20201116 13:06:41.052"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.041" endtime="20201116 13:06:41.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.057" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:41.056" endtime="20201116 13:06:41.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.059" level="INFO">VALUE: 47932496</msg>
<status status="PASS" starttime="20201116 13:06:41.058" endtime="20201116 13:06:41.059"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.053" endtime="20201116 13:06:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.064" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:41.063" endtime="20201116 13:06:41.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.066" level="INFO">VALUE: [47942559, 47952559, 47962559, 47972559, 47982559, 47992559, 48002559, 48012559, 48022559, 48032559, 48042559, 48052559, 48062559, 48072559, 48082559, 48092559, 48102559, 48112559, 48122559, 48132559, 48142559, 48152559, 48162559, 48172559, 48182559, 48192559, 48202559, 48212559, 48222559, 48232559, 48242559, 48252559, 48262559, 48272559, 48282559, 48292559, 48302559, 48312559, 48322559, 48332559, 48342559, 48352559, 48362559, 48372559, 48382559, 48392559, 48402559, 48412559, 48422559, 48432559, 48442559, 48452559, 48462559, 48472559, 48482559, 48492559, 48502559, 48512559, 48522559, 48532559, 48542559, 48552559, 48562559, 48572559, 48582559, 48592559, 48602559, 48612559, 48622559, 48632559, 48642559, 48652559, 48662559, 48672559, 48682559, 48692559, 48702559, 48712559, 48722559, 48732559, 48742559, 48752559, 48762559, 48772559, 48782559, 48792559, 48802559, 48812559, 48822559, 48832559, 48842559, 48852559, 48862559, 48872559, 48882559, 48892559, 48902559, 48912559, 48922559, 48932559]</msg>
<status status="PASS" starttime="20201116 13:06:41.065" endtime="20201116 13:06:41.066"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.060" endtime="20201116 13:06:41.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:41.073" endtime="20201116 13:06:41.364"></status>
</kw>
<msg timestamp="20201116 13:06:41.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029371222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:41.072" endtime="20201116 13:06:41.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029371222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:41.368" endtime="20201116 13:06:41.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:41.375" endtime="20201116 13:06:41.377"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.069" endtime="20201116 13:06:41.377"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.067" endtime="20201116 13:06:41.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:41.401" level="INFO">${RESULT} = {'diff': [0, 0.010064416, 0.010000277999999998, 0.010000681000000004, 0.010000762999999996, 0.010000708999999997, 0.010000791000000009, 0.010000708999999997, 0.010000819000000008, 0.010000610999999993...</msg>
<status status="PASS" starttime="20201116 13:06:41.379" endtime="20201116 13:06:41.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.406" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:41.405" endtime="20201116 13:06:41.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.409" level="INFO">VALUE: 0.019306806</msg>
<status status="PASS" starttime="20201116 13:06:41.408" endtime="20201116 13:06:41.409"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.402" endtime="20201116 13:06:41.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.414" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:41.413" endtime="20201116 13:06:41.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:41.421" level="INFO">VALUE: [0.029371222, 0.0393715, 0.049372181, 0.059372944, 0.069373653, 0.079374444, 0.089375153, 0.099375972, 0.109376583, 0.119377403, 0.129378083, 0.139378917, 0.149379542, 0.159380403, 0.169381028, 0.179381875, 0.189382556, 0.199383361, 0.209384, 0.219384833, 0.2293855, 0.239386292, 0.249386944, 0.259387861, 0.269388417, 0.279389236, 0.289389917, 0.29939075, 0.309391389, 0.319392222, 0.329392861, 0.339393708, 0.349394333, 0.359395139, 0.369395833, 0.379396694, 0.389397292, 0.399398153, 0.409398764, 0.419399597, 0.429400236, 0.439401042, 0.449401764, 0.459402542, 0.469403181, 0.479404042, 0.489404625, 0.499405458, 0.509406111, 0.519406903, 0.529407583, 0.539408403, 0.549409028, 0.559409861, 0.5694105, 0.579411347, 0.589411972, 0.599412764, 0.609413444, 0.619414278, 0.629414903, 0.639415722, 0.649416389, 0.659417208, 0.669417833, 0.679418722, 0.689419319, 0.699420139, 0.709420778, 0.719421611, 0.729422292, 0.739423097, 0.749423708, 0.759424514, 0.76942525, 0.779426014, 0.789426653, 0.799427486, 0.809428125, 0.819429014, 0.829429597, 0.839430403, 0.849431083, 0.859431903, 0.869432542, 0.879433375, 0.889434014, 0.899434833, 0.909435472, 0.919436264, 0.929436958, 0.939437792, 0.949438458, 0.959439222, 0.969439875, 0.979440722, 0.989441347, 0.999442153, 1.009442833, 1.019443694] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:41.420" endtime="20201116 13:06:41.421"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.410" endtime="20201116 13:06:41.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:41.424" endtime="20201116 13:06:41.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:41.427" endtime="20201116 13:06:41.447"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.426" endtime="20201116 13:06:41.447"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.422" endtime="20201116 13:06:41.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:38.892" endtime="20201116 13:06:41.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.335" endtime="20201116 13:06:41.449"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:36.334" endtime="20201116 13:06:41.449"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:41.451" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:41.460" endtime="20201116 13:06:43.576"></status>
</kw>
<msg timestamp="20201116 13:06:43.578" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 50492189, 'wakeups': [50502260, 50512260, 50522259, 50532259, 505422...</msg>
<status status="PASS" starttime="20201116 13:06:41.458" endtime="20201116 13:06:43.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.584" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 50492189, 'wakeups': [50502260, 50512260, 50522259, 50532259, 505422...</msg>
<status status="PASS" starttime="20201116 13:06:43.580" endtime="20201116 13:06:43.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.586" endtime="20201116 13:06:43.589"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.455" endtime="20201116 13:06:43.590"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.453" endtime="20201116 13:06:43.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:43.597" level="INFO">${RESULT} = {'start-time': 50492189, 'timer-count': 10, 'wakeups': [50502260, 50512260, 50522259, 50532259, 50542260, 50552259, 50562260, 50572260, 50582260, 50592259, 50602259, 50612259, 50622260, 50632259, 5064...</msg>
<status status="PASS" starttime="20201116 13:06:43.593" endtime="20201116 13:06:43.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.605" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:43.604" endtime="20201116 13:06:43.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.607" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:43.606" endtime="20201116 13:06:43.608"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.599" endtime="20201116 13:06:43.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.612" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:43.611" endtime="20201116 13:06:43.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.614" level="INFO">VALUE: 50492189</msg>
<status status="PASS" starttime="20201116 13:06:43.613" endtime="20201116 13:06:43.614"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.609" endtime="20201116 13:06:43.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.620" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:43.618" endtime="20201116 13:06:43.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.622" level="INFO">VALUE: [50502260, 50512260, 50522259, 50532259, 50542260, 50552259, 50562260, 50572260, 50582260, 50592259, 50602259, 50612259, 50622260, 50632259, 50642259, 50652259, 50662260, 50672259, 50682259, 50692259, 50702260, 50712259, 50722259, 50732259, 50742260, 50752259, 50762259, 50772259, 50782260, 50792259, 50802259, 50812259, 50822260, 50832259, 50842259, 50852259, 50862260, 50872259, 50882259, 50892259, 50902260, 50912259, 50922259, 50932259, 50942260, 50952259, 50962259, 50972259, 50982260, 50992259, 51002259, 51012259, 51022260, 51032259, 51042259, 51052259, 51062260, 51072259, 51082259, 51092259, 51102260, 51112259, 51122259, 51132259, 51142260, 51152259, 51162259, 51172259, 51182260, 51192259, 51202259, 51212259, 51222260, 51232259, 51242259, 51252259, 51262260, 51272259, 51282259, 51292259, 51302260, 51312259, 51322259, 51332259, 51342260, 51352259, 51362259, 51372259, 51382260, 51392259, 51402259, 51412259, 51422260, 51432259, 51442259, 51452259, 51462260, 51472259, 51482259, 51492259]</msg>
<status status="PASS" starttime="20201116 13:06:43.621" endtime="20201116 13:06:43.622"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.616" endtime="20201116 13:06:43.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.630" endtime="20201116 13:06:43.922"></status>
</kw>
<msg timestamp="20201116 13:06:43.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032391306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:43.629" endtime="20201116 13:06:43.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032391306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:43.925" endtime="20201116 13:06:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.933" endtime="20201116 13:06:43.935"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.626" endtime="20201116 13:06:43.935"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.623" endtime="20201116 13:06:43.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:43.960" level="INFO">${RESULT} = {'diff': [0, 0.010072237000000001, 0.010001055000000002, 0.009999735999999995, 0.010000792000000001, 0.010001680000000006, 0.009999819999999993, 0.010001583000000008, 0.010000834, 0.010000651999999999...</msg>
<status status="PASS" starttime="20201116 13:06:43.936" endtime="20201116 13:06:43.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.964" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:43.963" endtime="20201116 13:06:43.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.966" level="INFO">VALUE: 0.022319069</msg>
<status status="PASS" starttime="20201116 13:06:43.965" endtime="20201116 13:06:43.967"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.961" endtime="20201116 13:06:43.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.972" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:43.971" endtime="20201116 13:06:43.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.974" level="INFO">VALUE: [0.032391306, 0.042392361, 0.052392097, 0.062392889, 0.072394569, 0.082394389, 0.092395972, 0.102396806, 0.112397458, 0.122397347, 0.132398028, 0.142398833, 0.152400417, 0.162400306, 0.172400986, 0.182401792, 0.192403361, 0.202403264, 0.212403944, 0.22240475, 0.232406319, 0.24240625, 0.252406903, 0.262407708, 0.272409278, 0.282409181, 0.292409847, 0.302410667, 0.312412236, 0.322412139, 0.332412875, 0.342413611, 0.352415194, 0.362415097, 0.372415764, 0.382416625, 0.392418153, 0.402418069, 0.412418736, 0.422419528, 0.432421111, 0.442421014, 0.452421708, 0.462422514, 0.472424083, 0.482423972, 0.492424625, 0.502425417, 0.512427014, 0.522426903, 0.532427556, 0.542428403, 0.552429931, 0.562429819, 0.572430486, 0.582431292, 0.592432875, 0.60243275, 0.612433431, 0.622434236, 0.632435806, 0.642435708, 0.652436417, 0.662437153, 0.672438806, 0.682438639, 0.692439292, 0.702440083, 0.712441681, 0.722441569, 0.732442222, 0.742443028, 0.752444597, 0.762444486, 0.772445167, 0.782445958, 0.792447556, 0.802447444, 0.812448111, 0.822448917, 0.832450486, 0.842450361, 0.852451042, 0.862451847, 0.872453417, 0.882453306, 0.892453972, 0.902454778, 0.912456347, 0.92245625, 0.932456972, 0.942457708, 0.952459347, 0.962459181, 0.972459847, 0.982460667, 0.99246225, 1.002462139, 1.012462847, 1.022463611] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:43.973" endtime="20201116 13:06:43.974"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.968" endtime="20201116 13:06:43.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.977" endtime="20201116 13:06:43.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:43.981" endtime="20201116 13:06:44.000"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.979" endtime="20201116 13:06:44.001"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.975" endtime="20201116 13:06:44.001"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.452" endtime="20201116 13:06:44.002"></status>
</kw>
<msg timestamp="20201116 13:06:44.002" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:44.011" endtime="20201116 13:06:46.129"></status>
</kw>
<msg timestamp="20201116 13:06:46.130" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 53043916, 'wakeups': [53053986, 53063987, 53073986, 53083986, 530939...</msg>
<status status="PASS" starttime="20201116 13:06:44.010" endtime="20201116 13:06:46.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 53043916, 'wakeups': [53053986, 53063987, 53073986, 53083986, 530939...</msg>
<status status="PASS" starttime="20201116 13:06:46.132" endtime="20201116 13:06:46.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:46.138" endtime="20201116 13:06:46.142"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:44.007" endtime="20201116 13:06:46.143"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:44.004" endtime="20201116 13:06:46.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:46.149" level="INFO">${RESULT} = {'start-time': 53043916, 'timer-count': 10, 'wakeups': [53053986, 53063987, 53073986, 53083986, 53093987, 53103986, 53113987, 53123987, 53133987, 53143986, 53153986, 53163986, 53173987, 53183986, 5319...</msg>
<status status="PASS" starttime="20201116 13:06:46.145" endtime="20201116 13:06:46.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.158" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:46.156" endtime="20201116 13:06:46.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.161" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:46.160" endtime="20201116 13:06:46.161"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.151" endtime="20201116 13:06:46.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.166" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:46.165" endtime="20201116 13:06:46.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.168" level="INFO">VALUE: 53043916</msg>
<status status="PASS" starttime="20201116 13:06:46.167" endtime="20201116 13:06:46.168"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.162" endtime="20201116 13:06:46.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.173" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:46.172" endtime="20201116 13:06:46.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.175" level="INFO">VALUE: [53053986, 53063987, 53073986, 53083986, 53093987, 53103986, 53113987, 53123987, 53133987, 53143986, 53153986, 53163986, 53173987, 53183986, 53193986, 53203986, 53213987, 53223986, 53233986, 53243986, 53253987, 53263986, 53273986, 53283986, 53293987, 53303986, 53313986, 53323986, 53333987, 53343986, 53353986, 53363986, 53373987, 53383986, 53393986, 53403986, 53413987, 53423986, 53433986, 53443986, 53453987, 53463986, 53473986, 53483986, 53493987, 53503986, 53513986, 53523986, 53533987, 53543986, 53553986, 53563986, 53573987, 53583986, 53593986, 53603986, 53613987, 53623986, 53633986, 53643986, 53653987, 53663986, 53673986, 53683986, 53693987, 53703986, 53713986, 53723986, 53733987, 53743986, 53753986, 53763986, 53773987, 53783986, 53793986, 53803986, 53813987, 53823986, 53833986, 53843986, 53853987, 53863986, 53873986, 53883986, 53893987, 53903986, 53913986, 53923986, 53933987, 53943986, 53953986, 53963986, 53973987, 53983986, 53993986, 54003986, 54013987, 54023986, 54033986, 54043986]</msg>
<status status="PASS" starttime="20201116 13:06:46.174" endtime="20201116 13:06:46.175"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.169" endtime="20201116 13:06:46.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:46.183" endtime="20201116 13:06:46.475"></status>
</kw>
<msg timestamp="20201116 13:06:46.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020599569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030671125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:46.181" endtime="20201116 13:06:46.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020599569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030671125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:46.479" endtime="20201116 13:06:46.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:46.486" endtime="20201116 13:06:46.488"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.178" endtime="20201116 13:06:46.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.176" endtime="20201116 13:06:46.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:46.513" level="INFO">${RESULT} = {'diff': [0, 0.010071555999999999, 0.010002042000000003, 0.009999749999999995, 0.010000777000000002, 0.010001653, 0.009999847000000006, 0.010001583999999994, 0.010000833, 0.010000652999999998, 0.00999...</msg>
<status status="PASS" starttime="20201116 13:06:46.490" endtime="20201116 13:06:46.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.518" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:46.517" endtime="20201116 13:06:46.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.520" level="INFO">VALUE: 0.020599569</msg>
<status status="PASS" starttime="20201116 13:06:46.519" endtime="20201116 13:06:46.520"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.514" endtime="20201116 13:06:46.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.525" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:46.524" endtime="20201116 13:06:46.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:46.527" level="INFO">VALUE: [0.030671125, 0.040673167, 0.050672917, 0.060673694, 0.070675347, 0.080675194, 0.090676778, 0.100677611, 0.110678264, 0.120678167, 0.130678819, 0.140679639, 0.150681208, 0.160681125, 0.170681778, 0.180682625, 0.190684181, 0.200684069, 0.210684764, 0.220685625, 0.230687125, 0.240687014, 0.250687708, 0.2606885, 0.270690083, 0.280689972, 0.290690653, 0.300691458, 0.310693014, 0.320692903, 0.330693583, 0.340694375, 0.350696014, 0.360695833, 0.370696556, 0.380697319, 0.390698875, 0.400698778, 0.410699431, 0.42070025, 0.430701819, 0.440701694, 0.450702403, 0.460703167, 0.470704736, 0.480704625, 0.490705306, 0.500706097, 0.510707667, 0.520707583, 0.530708292, 0.540709028, 0.550710611, 0.5607105, 0.570711222, 0.580712042, 0.590713542, 0.600713431, 0.610714097, 0.620714917, 0.630716472, 0.640716375, 0.650717042, 0.660717833, 0.670719431, 0.680719319, 0.690719986, 0.700720778, 0.710722403, 0.720722236, 0.730722903, 0.740723708, 0.750725292, 0.760725208, 0.770725847, 0.780726653, 0.790728222, 0.800728111, 0.810728806, 0.820729597, 0.830731208, 0.840731056, 0.850731736, 0.860732514, 0.870734097, 0.880733986, 0.890734653, 0.900735458, 0.910737042, 0.920736944, 0.930737597, 0.940738403, 0.950739986, 0.960739875, 0.970740528, 0.980741389, 0.990742944, 1.000742806, 1.0107435, 1.020744278] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:46.526" endtime="20201116 13:06:46.528"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.521" endtime="20201116 13:06:46.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:46.530" endtime="20201116 13:06:46.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:46.534" endtime="20201116 13:06:46.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.532" endtime="20201116 13:06:46.554"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.529" endtime="20201116 13:06:46.554"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:44.003" endtime="20201116 13:06:46.555"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.450" endtime="20201116 13:06:46.555"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:41.449" endtime="20201116 13:06:46.555"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:55.464" endtime="20201116 13:06:46.555"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:05:55.390" endtime="20201116 13:06:46.556" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:05:53.897" endtime="20201116 13:06:46.559"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:05:51.868" endtime="20201116 13:06:46.568"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
