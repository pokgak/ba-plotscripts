<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:04:51.169" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:04:51.734" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:04:51.743" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:04:52.852" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:04:51.733" endtime="20201116 13:04:52.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:04:52.855" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:04:52.854" endtime="20201116 13:04:52.856"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:51.731" endtime="20201116 13:04:52.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:52.859" endtime="20201116 13:04:53.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:52.857" endtime="20201116 13:04:53.043"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.055" endtime="20201116 13:04:53.070"></status>
</kw>
<msg timestamp="20201116 13:04:53.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:53.054" endtime="20201116 13:04:53.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:53.072" endtime="20201116 13:04:53.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.076" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:53.074" endtime="20201116 13:04:53.076"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:53.051" endtime="20201116 13:04:53.077"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:53.049" endtime="20201116 13:04:53.078"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.048" endtime="20201116 13:04:53.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:53.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:53.081" endtime="20201116 13:04:53.082"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.079" endtime="20201116 13:04:53.083"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.047" endtime="20201116 13:04:53.083"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.046" endtime="20201116 13:04:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.084" endtime="20201116 13:04:53.085"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.045" endtime="20201116 13:04:53.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.086" endtime="20201116 13:04:53.088"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.043" endtime="20201116 13:04:53.089"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:51.730" endtime="20201116 13:04:53.089"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:53.095" endtime="20201116 13:04:53.114"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.094" endtime="20201116 13:04:53.115"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.130" endtime="20201116 13:04:53.145"></status>
</kw>
<msg timestamp="20201116 13:04:53.145" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:53.127" endtime="20201116 13:04:53.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.148" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:53.146" endtime="20201116 13:04:53.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.151" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:53.149" endtime="20201116 13:04:53.151"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:53.124" endtime="20201116 13:04:53.152"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:53.122" endtime="20201116 13:04:53.152"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.120" endtime="20201116 13:04:53.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:53.156" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:53.155" endtime="20201116 13:04:53.156"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.153" endtime="20201116 13:04:53.157"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.119" endtime="20201116 13:04:53.157"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.119" endtime="20201116 13:04:53.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.158" endtime="20201116 13:04:53.159"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.117" endtime="20201116 13:04:53.160"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.116" endtime="20201116 13:04:53.160"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.092" endtime="20201116 13:04:53.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.168" endtime="20201116 13:04:53.177"></status>
</kw>
<msg timestamp="20201116 13:04:53.177" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:53.166" endtime="20201116 13:04:53.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.180" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:53.178" endtime="20201116 13:04:53.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:53.181" endtime="20201116 13:04:53.182"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.163" endtime="20201116 13:04:53.183"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.161" endtime="20201116 13:04:53.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.188" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:04:53.187" endtime="20201116 13:04:53.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.190" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201116 13:04:53.189" endtime="20201116 13:04:53.190"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.184" endtime="20201116 13:04:53.191"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:04:53.089" endtime="20201116 13:04:53.191" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:04:51.282" endtime="20201116 13:04:53.194"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:04:53.247" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:04:53.255" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:04:54.477" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:04:53.245" endtime="20201116 13:04:54.478"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:04:54.480" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:04:54.479" endtime="20201116 13:04:54.480"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.244" endtime="20201116 13:04:54.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:54.483" endtime="20201116 13:04:54.704"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.482" endtime="20201116 13:04:54.705"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:54.717" endtime="20201116 13:04:54.731"></status>
</kw>
<msg timestamp="20201116 13:04:54.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:54.715" endtime="20201116 13:04:54.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:54.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:54.732" endtime="20201116 13:04:54.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:54.737" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:54.735" endtime="20201116 13:04:54.737"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:54.713" endtime="20201116 13:04:54.738"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:54.711" endtime="20201116 13:04:54.738"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.710" endtime="20201116 13:04:54.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:54.742" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:54.742" endtime="20201116 13:04:54.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.740" endtime="20201116 13:04:54.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.709" endtime="20201116 13:04:54.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.708" endtime="20201116 13:04:54.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:54.744" endtime="20201116 13:04:54.745"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.707" endtime="20201116 13:04:54.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:54.747" endtime="20201116 13:04:54.748"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.705" endtime="20201116 13:04:54.749"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:53.243" endtime="20201116 13:04:54.749"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:54.755" endtime="20201116 13:04:54.776"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.754" endtime="20201116 13:04:54.776"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:54.789" endtime="20201116 13:04:54.802"></status>
</kw>
<msg timestamp="20201116 13:04:54.802" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:54.787" endtime="20201116 13:04:54.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:54.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:04:54.804" endtime="20201116 13:04:54.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:04:54.808" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:04:54.806" endtime="20201116 13:04:54.809"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:54.785" endtime="20201116 13:04:54.809"></status>
</kw>
<status status="FAIL" starttime="20201116 13:04:54.782" endtime="20201116 13:04:54.810"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.781" endtime="20201116 13:04:54.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:04:54.814" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:04:54.813" endtime="20201116 13:04:54.814"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.811" endtime="20201116 13:04:54.814"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.781" endtime="20201116 13:04:54.815"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.780" endtime="20201116 13:04:54.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:54.815" endtime="20201116 13:04:54.817"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.779" endtime="20201116 13:04:54.818"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.777" endtime="20201116 13:04:54.818"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.752" endtime="20201116 13:04:54.818"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:04:54.822" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:54.832" endtime="20201116 13:04:56.923"></status>
</kw>
<msg timestamp="20201116 13:04:56.924" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4536115, 'wakeups': [4546122, 4556122, 4566121, 4576122, 4586121, 4596...</msg>
<status status="PASS" starttime="20201116 13:04:54.830" endtime="20201116 13:04:56.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4536115, 'wakeups': [4546122, 4556122, 4566121, 4576122, 4586121, 4596...</msg>
<status status="PASS" starttime="20201116 13:04:56.925" endtime="20201116 13:04:56.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.927" endtime="20201116 13:04:56.929"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.827" endtime="20201116 13:04:56.930"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.825" endtime="20201116 13:04:56.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:04:56.933" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [4546122, 4556122, 4566121, 4576122, 4586121, 4596122, 4606121, 4616122, 4626121, 4636122, 4646121, 4656122, 4666121, 4676122, 4686121, 4696122, 4706121, 4716122, ...</msg>
<status status="PASS" starttime="20201116 13:04:56.931" endtime="20201116 13:04:56.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.937" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:04:56.936" endtime="20201116 13:04:56.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.939" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:04:56.938" endtime="20201116 13:04:56.939"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.934" endtime="20201116 13:04:56.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.944" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:04:56.943" endtime="20201116 13:04:56.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.946" level="INFO">VALUE: 4536115</msg>
<status status="PASS" starttime="20201116 13:04:56.945" endtime="20201116 13:04:56.946"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.940" endtime="20201116 13:04:56.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.957" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:04:56.956" endtime="20201116 13:04:56.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:56.960" level="INFO">VALUE: [4546122, 4556122, 4566121, 4576122, 4586121, 4596122, 4606121, 4616122, 4626121, 4636122, 4646121, 4656122, 4666121, 4676122, 4686121, 4696122, 4706121, 4716122, 4726121, 4736122, 4746121, 4756122, 4766121, 4776122, 4786121, 4796122, 4806121, 4816122, 4826121, 4836122, 4846121, 4856122, 4866121, 4876122, 4886121, 4896122, 4906121, 4916122, 4926121, 4936122, 4946121, 4956122, 4966121, 4976122, 4986121, 4996122, 5006121, 5016122, 5026121, 5036122, 5046121, 5056122, 5066121, 5076122, 5086121, 5096122, 5106121, 5116122, 5126121, 5136122, 5146121, 5156122, 5166121, 5176122, 5186121, 5196122, 5206121, 5216122, 5226121, 5236122, 5246121, 5256122, 5266121, 5276122, 5286121, 5296122, 5306121, 5316122, 5326121, 5336122, 5346121, 5356122, 5366121, 5376122, 5386121, 5396122, 5406121, 5416122, 5426121, 5436122, 5446121, 5456122, 5466121, 5476122, 5486121, 5496122, 5506121, 5516122, 5526121, 5536122]</msg>
<status status="PASS" starttime="20201116 13:04:56.958" endtime="20201116 13:04:56.960"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.947" endtime="20201116 13:04:56.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:56.967" endtime="20201116 13:04:57.263"></status>
</kw>
<msg timestamp="20201116 13:04:57.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066156014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076163819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:04:56.965" endtime="20201116 13:04:57.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066156014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076163819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:04:57.267" endtime="20201116 13:04:57.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.275" endtime="20201116 13:04:57.276"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.963" endtime="20201116 13:04:57.277"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:56.961" endtime="20201116 13:04:57.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:04:57.301" level="INFO">${RESULT} = {'source_diff': [0, 0.010007804999999995, 0.010000723000000003, 0.009999833, 0.010001653, 0.009999819000000007, 0.010001625, 0.009999833999999985, 0.010001652, 0.009999834000000013, 0.0100016390000000...</msg>
<status status="PASS" starttime="20201116 13:04:57.278" endtime="20201116 13:04:57.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.305" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:04:57.304" endtime="20201116 13:04:57.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.307" level="INFO">VALUE: 0.066156014</msg>
<status status="PASS" starttime="20201116 13:04:57.306" endtime="20201116 13:04:57.308"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.302" endtime="20201116 13:04:57.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.313" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:04:57.312" endtime="20201116 13:04:57.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:57.315" level="INFO">VALUE: [0.076163819, 0.086164542, 0.096164375, 0.106166028, 0.116165847, 0.126167472, 0.136167306, 0.146168958, 0.156168792, 0.166170431, 0.176170264, 0.186171917, 0.196171736, 0.206173375, 0.216173208, 0.226174903, 0.236174694, 0.246176347, 0.256176167, 0.266177806, 0.276177639, 0.286179333, 0.296179125, 0.306180764, 0.316180611, 0.326182236, 0.336182069, 0.346183722, 0.356183542, 0.366185194, 0.376185042, 0.386186667, 0.3961865, 0.406188153, 0.416187986, 0.426189625, 0.436189444, 0.446191083, 0.456190903, 0.466192542, 0.476192403, 0.486194014, 0.496193861, 0.506195472, 0.516195333, 0.526196944, 0.536196764, 0.546198403, 0.556198278, 0.566199875, 0.576199722, 0.586201347, 0.596201236, 0.606202819, 0.616202625, 0.626204319, 0.636204111, 0.64620575, 0.656205556, 0.666207194, 0.676207042, 0.686208667, 0.696208486, 0.706210125, 0.716209958, 0.726211597, 0.736211431, 0.746213069, 0.756212903, 0.766214528, 0.776214375, 0.786216, 0.796215875, 0.806217514, 0.816217306, 0.826218972, 0.836218764, 0.846220403, 0.856220222, 0.866221861, 0.876221694, 0.886223333, 0.896223167, 0.906224819, 0.916224625, 0.926226278, 0.936226097, 0.946227792, 0.956227556, 0.966229222, 0.976229028, 0.986230681, 0.9962305, 1.006232139, 1.016231972, 1.026233597, 1.036233444, 1.046235069, 1.056234903, 1.066236542] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:04:57.314" endtime="20201116 13:04:57.315"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.309" endtime="20201116 13:04:57.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.318" endtime="20201116 13:04:57.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:57.322" endtime="20201116 13:04:57.341"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.320" endtime="20201116 13:04:57.342"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.316" endtime="20201116 13:04:57.342"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.824" endtime="20201116 13:04:57.342"></status>
</kw>
<msg timestamp="20201116 13:04:57.343" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:57.351" endtime="20201116 13:04:59.453"></status>
</kw>
<msg timestamp="20201116 13:04:59.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 7054475, 'wakeups': [7064482, 7074482, 7084481, 7094482, 7104481, 7114...</msg>
<status status="PASS" starttime="20201116 13:04:57.349" endtime="20201116 13:04:59.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 7054475, 'wakeups': [7064482, 7074482, 7084481, 7094482, 7104481, 7114...</msg>
<status status="PASS" starttime="20201116 13:04:59.455" endtime="20201116 13:04:59.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:59.458" endtime="20201116 13:04:59.459"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.346" endtime="20201116 13:04:59.460"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.345" endtime="20201116 13:04:59.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:04:59.463" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [7064482, 7074482, 7084481, 7094482, 7104481, 7114482, 7124481, 7134482, 7144481, 7154482, 7164481, 7174482, 7184481, 7194482, 7204481, 7214482, 7224481, 7234482, ...</msg>
<status status="PASS" starttime="20201116 13:04:59.461" endtime="20201116 13:04:59.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.467" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:04:59.466" endtime="20201116 13:04:59.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.469" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:04:59.468" endtime="20201116 13:04:59.471"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.464" endtime="20201116 13:04:59.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.475" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:04:59.474" endtime="20201116 13:04:59.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.477" level="INFO">VALUE: 7054475</msg>
<status status="PASS" starttime="20201116 13:04:59.476" endtime="20201116 13:04:59.478"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.472" endtime="20201116 13:04:59.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.482" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:04:59.481" endtime="20201116 13:04:59.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.484" level="INFO">VALUE: [7064482, 7074482, 7084481, 7094482, 7104481, 7114482, 7124481, 7134482, 7144481, 7154482, 7164481, 7174482, 7184481, 7194482, 7204481, 7214482, 7224481, 7234482, 7244481, 7254482, 7264481, 7274482, 7284481, 7294482, 7304481, 7314482, 7324481, 7334482, 7344481, 7354482, 7364481, 7374482, 7384481, 7394482, 7404481, 7414482, 7424481, 7434482, 7444481, 7454482, 7464481, 7474482, 7484481, 7494482, 7504481, 7514482, 7524481, 7534482, 7544481, 7554482, 7564481, 7574482, 7584481, 7594482, 7604481, 7614482, 7624481, 7634482, 7644481, 7654482, 7664481, 7674482, 7684481, 7694482, 7704481, 7714482, 7724481, 7734482, 7744481, 7754482, 7764481, 7774482, 7784481, 7794482, 7804481, 7814482, 7824481, 7834482, 7844481, 7854482, 7864481, 7874482, 7884481, 7894482, 7904481, 7914482, 7924481, 7934482, 7944481, 7954482, 7964481, 7974482, 7984481, 7994482, 8004481, 8014482, 8024481, 8034482, 8044481, 8054482]</msg>
<status status="PASS" starttime="20201116 13:04:59.483" endtime="20201116 13:04:59.484"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.479" endtime="20201116 13:04:59.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:59.491" endtime="20201116 13:04:59.784"></status>
</kw>
<msg timestamp="20201116 13:04:59.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019073083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029080903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:04:59.490" endtime="20201116 13:04:59.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019073083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029080903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:04:59.788" endtime="20201116 13:04:59.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:59.795" endtime="20201116 13:04:59.797"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.487" endtime="20201116 13:04:59.797"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.486" endtime="20201116 13:04:59.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:04:59.821" level="INFO">${RESULT} = {'source_diff': [0, 0.01000782, 0.010000708, 0.009999833, 0.010001639, 0.009999833999999992, 0.010001680000000013, 0.009999806, 0.010001625, 0.009999833, 0.010001666999999992, 0.009999805, 0.010001666...</msg>
<status status="PASS" starttime="20201116 13:04:59.798" endtime="20201116 13:04:59.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.826" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:04:59.825" endtime="20201116 13:04:59.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.828" level="INFO">VALUE: 0.019073083</msg>
<status status="PASS" starttime="20201116 13:04:59.828" endtime="20201116 13:04:59.829"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.822" endtime="20201116 13:04:59.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.834" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:04:59.833" endtime="20201116 13:04:59.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:04:59.836" level="INFO">VALUE: [0.029080903, 0.039081611, 0.049081444, 0.059083083, 0.069082917, 0.079084597, 0.089084403, 0.099086028, 0.109085861, 0.119087528, 0.129087333, 0.139089, 0.149088819, 0.1590905, 0.169090361, 0.179091958, 0.189091778, 0.199093417, 0.209093306, 0.219094903, 0.229094736, 0.239096361, 0.249096208, 0.259097847, 0.269097681, 0.279099319, 0.289099181, 0.299100806, 0.309100625, 0.319102278, 0.329102125, 0.33910375, 0.349103653, 0.35910525, 0.369105111, 0.379106694, 0.389106514, 0.399108167, 0.409107986, 0.419109639, 0.429109458, 0.439111083, 0.449110903, 0.459112556, 0.469112375, 0.479114028, 0.489113833, 0.499115472, 0.509115306, 0.519116958, 0.529116764, 0.539118403, 0.549118236, 0.559119889, 0.569119694, 0.579121333, 0.589121167, 0.599122819, 0.609122667, 0.619124264, 0.629124097, 0.639125736, 0.649125556, 0.659127208, 0.669127028, 0.679128667, 0.689128486, 0.699130139, 0.709129958, 0.719131611, 0.729131431, 0.739133069, 0.749132889, 0.759134528, 0.769134389, 0.779136028, 0.789135819, 0.799137472, 0.809137292, 0.819138944, 0.829138764, 0.839140472, 0.849140222, 0.859141861, 0.869141722, 0.879143347, 0.889143167, 0.899144806, 0.909144625, 0.919146264, 0.929146111, 0.939147736, 0.949147569, 0.959149208, 0.969149028, 0.979150736, 0.9891505, 0.999152181, 1.009151958, 1.019153611] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:04:59.835" endtime="20201116 13:04:59.836"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.830" endtime="20201116 13:04:59.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:59.839" endtime="20201116 13:04:59.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:04:59.842" endtime="20201116 13:04:59.862"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.841" endtime="20201116 13:04:59.862"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.837" endtime="20201116 13:04:59.863"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:57.343" endtime="20201116 13:04:59.863"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.820" endtime="20201116 13:04:59.864"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.820" endtime="20201116 13:04:59.864"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:04:59.867" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:04:59.875" endtime="20201116 13:05:01.989"></status>
</kw>
<msg timestamp="20201116 13:05:01.990" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9578451, 'wakeups': [9588463, 9598462, 9608461, 9618462, 9628461, 9638...</msg>
<status status="PASS" starttime="20201116 13:04:59.873" endtime="20201116 13:05:01.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9578451, 'wakeups': [9588463, 9598462, 9608461, 9618462, 9628461, 9638...</msg>
<status status="PASS" starttime="20201116 13:05:01.999" endtime="20201116 13:05:02.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.005" endtime="20201116 13:05:02.007"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.871" endtime="20201116 13:05:02.008"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.869" endtime="20201116 13:05:02.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:02.011" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [9588463, 9598462, 9608461, 9618462, 9628461, 9638462, 9648461, 9658462, 9668461, 9678462, 9688461, 9698462, 9708461, 9718462, 9728461, 9738462, 9748461, 9758462, ...</msg>
<status status="PASS" starttime="20201116 13:05:02.009" endtime="20201116 13:05:02.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.015" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:02.014" endtime="20201116 13:05:02.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.017" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:02.016" endtime="20201116 13:05:02.017"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.011" endtime="20201116 13:05:02.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.022" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:02.021" endtime="20201116 13:05:02.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.024" level="INFO">VALUE: 9578451</msg>
<status status="PASS" starttime="20201116 13:05:02.023" endtime="20201116 13:05:02.024"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.018" endtime="20201116 13:05:02.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.029" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:02.028" endtime="20201116 13:05:02.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.031" level="INFO">VALUE: [9588463, 9598462, 9608461, 9618462, 9628461, 9638462, 9648461, 9658462, 9668461, 9678462, 9688461, 9698462, 9708461, 9718462, 9728461, 9738462, 9748461, 9758462, 9768461, 9778462, 9788461, 9798462, 9808461, 9818462, 9828461, 9838462, 9848461, 9858462, 9868461, 9878462, 9888461, 9898462, 9908461, 9918462, 9928461, 9938462, 9948461, 9958462, 9968461, 9978462, 9988461, 9998462, 10008461, 10018462, 10028461, 10038462, 10048461, 10058462, 10068461, 10078462, 10088461, 10098462, 10108461, 10118462, 10128461, 10138462, 10148461, 10158462, 10168461, 10178462, 10188461, 10198462, 10208461, 10218462, 10228461, 10238462, 10248461, 10258462, 10268461, 10278462, 10288461, 10298462, 10308461, 10318462, 10328461, 10338462, 10348461, 10358462, 10368461, 10378462, 10388461, 10398462, 10408461, 10418462, 10428461, 10438462, 10448461, 10458462, 10468461, 10478462, 10488461, 10498462, 10508461, 10518462, 10528461, 10538462, 10548461, 10558462, 10568461, 10578462]</msg>
<status status="PASS" starttime="20201116 13:05:02.030" endtime="20201116 13:05:02.031"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.025" endtime="20201116 13:05:02.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.039" endtime="20201116 13:05:02.330"></status>
</kw>
<msg timestamp="20201116 13:05:02.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032452903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:02.038" endtime="20201116 13:05:02.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032452903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:02.334" endtime="20201116 13:05:02.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.342" endtime="20201116 13:05:02.343"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.035" endtime="20201116 13:05:02.344"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.032" endtime="20201116 13:05:02.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:02.367" level="INFO">${RESULT} = {'source_diff': [0, 0.010012763999999997, 0.009999819, 0.00999957, 0.010001902, 0.009999556, 0.010001999999999997, 0.009999514000000001, 0.010001971999999998, 0.00999947200000001, 0.010001986000000004...</msg>
<status status="PASS" starttime="20201116 13:05:02.345" endtime="20201116 13:05:02.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.372" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:02.371" endtime="20201116 13:05:02.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.374" level="INFO">VALUE: 0.022440139</msg>
<status status="PASS" starttime="20201116 13:05:02.373" endtime="20201116 13:05:02.375"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.369" endtime="20201116 13:05:02.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.380" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:02.379" endtime="20201116 13:05:02.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:02.382" level="INFO">VALUE: [0.032452903, 0.042452722, 0.052452292, 0.062454194, 0.07245375, 0.08245575, 0.092455264, 0.102457236, 0.112456708, 0.122458694, 0.132458181, 0.142460181, 0.152459667, 0.162461653, 0.172461139, 0.182463125, 0.192462611, 0.202464611, 0.212464069, 0.222466069, 0.232465556, 0.242467597, 0.252467028, 0.262469014, 0.2724685, 0.2824705, 0.29247, 0.302471972, 0.312471472, 0.322473458, 0.332472944, 0.342474944, 0.352474417, 0.362476417, 0.372475903, 0.382477889, 0.392477375, 0.402479361, 0.412478833, 0.422480819, 0.432480292, 0.442482292, 0.452481764, 0.462483736, 0.47248325, 0.482485208, 0.492484681, 0.502486681, 0.512486139, 0.522488139, 0.532487611, 0.542489597, 0.552489069, 0.562491056, 0.572490542, 0.582492528, 0.592492, 0.602493986, 0.612493472, 0.622495472, 0.632494931, 0.642496917, 0.652496417, 0.662498389, 0.672497875, 0.682499861, 0.692499389, 0.702501319, 0.712500792, 0.722502778, 0.732502264, 0.74250425, 0.752503722, 0.762505708, 0.772505194, 0.782507181, 0.792506653, 0.802508653, 0.812508139, 0.822510125, 0.832509597, 0.842511597, 0.852511056, 0.862513056, 0.872512528, 0.882514597, 0.892513986, 0.902515986, 0.912515472, 0.922517444, 0.932516917, 0.942518931, 0.952518458, 0.962520417, 0.972519875, 0.982521861, 0.992521347, 1.002523306, 1.012522806, 1.022524792] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:02.381" endtime="20201116 13:05:02.382"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.376" endtime="20201116 13:05:02.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.385" endtime="20201116 13:05:02.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:02.388" endtime="20201116 13:05:02.407"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.387" endtime="20201116 13:05:02.408"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.383" endtime="20201116 13:05:02.409"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.867" endtime="20201116 13:05:02.409"></status>
</kw>
<msg timestamp="20201116 13:05:02.409" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:02.418" endtime="20201116 13:05:04.537"></status>
</kw>
<msg timestamp="20201116 13:05:04.538" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12121676, 'wakeups': [12131687, 12141687, 12151686, 12161687, 12171687...</msg>
<status status="PASS" starttime="20201116 13:05:02.416" endtime="20201116 13:05:04.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.544" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12121676, 'wakeups': [12131687, 12141687, 12151686, 12161687, 12171687...</msg>
<status status="PASS" starttime="20201116 13:05:04.540" endtime="20201116 13:05:04.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:04.546" endtime="20201116 13:05:04.549"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.414" endtime="20201116 13:05:04.551"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.411" endtime="20201116 13:05:04.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:04.557" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [12131687, 12141687, 12151686, 12161687, 12171687, 12181687, 12191687, 12201687, 12211687, 12221687, 12231687, 12241687, 12251687, 12261687, 12271687, 12281687, 12...</msg>
<status status="PASS" starttime="20201116 13:05:04.553" endtime="20201116 13:05:04.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.563" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:04.562" endtime="20201116 13:05:04.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.565" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:04.564" endtime="20201116 13:05:04.565"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.559" endtime="20201116 13:05:04.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.570" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:04.569" endtime="20201116 13:05:04.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.572" level="INFO">VALUE: 12121676</msg>
<status status="PASS" starttime="20201116 13:05:04.571" endtime="20201116 13:05:04.572"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.566" endtime="20201116 13:05:04.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.577" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:04.576" endtime="20201116 13:05:04.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.579" level="INFO">VALUE: [12131687, 12141687, 12151686, 12161687, 12171687, 12181687, 12191687, 12201687, 12211687, 12221687, 12231687, 12241687, 12251687, 12261687, 12271687, 12281687, 12291687, 12301687, 12311687, 12321687, 12331687, 12341687, 12351687, 12361687, 12371687, 12381687, 12391687, 12401687, 12411687, 12421687, 12431687, 12441687, 12451687, 12461687, 12471687, 12481687, 12491687, 12501687, 12511687, 12521687, 12531687, 12541687, 12551687, 12561687, 12571687, 12581687, 12591687, 12601687, 12611687, 12621687, 12631687, 12641687, 12651687, 12661687, 12671687, 12681687, 12691687, 12701687, 12711687, 12721687, 12731687, 12741687, 12751687, 12761687, 12771687, 12781687, 12791687, 12801687, 12811687, 12821687, 12831687, 12841687, 12851687, 12861687, 12871687, 12881687, 12891687, 12901687, 12911687, 12921687, 12931687, 12941687, 12951687, 12961687, 12971687, 12981687, 12991687, 13001687, 13011687, 13021687, 13031687, 13041687, 13051687, 13061687, 13071687, 13081687, 13091687, 13101687, 13111687, 13121687]</msg>
<status status="PASS" starttime="20201116 13:05:04.578" endtime="20201116 13:05:04.579"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.573" endtime="20201116 13:05:04.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:04.586" endtime="20201116 13:05:04.878"></status>
</kw>
<msg timestamp="20201116 13:05:04.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029829431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:04.585" endtime="20201116 13:05:04.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029829431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:04.882" endtime="20201116 13:05:04.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:04.890" endtime="20201116 13:05:04.891"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.582" endtime="20201116 13:05:04.892"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.580" endtime="20201116 13:05:04.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:04.917" level="INFO">${RESULT} = {'source_diff': [0, 0.010012139, 0.010000944000000001, 0.009999471999999995, 0.010002167000000006, 0.010000778000000002, 0.01000072199999999, 0.010000722000000004, 0.010000735999999996, 0.010000736000...</msg>
<status status="PASS" starttime="20201116 13:05:04.893" endtime="20201116 13:05:04.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.921" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:05:04.920" endtime="20201116 13:05:04.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.923" level="INFO">VALUE: 0.019817292</msg>
<status status="PASS" starttime="20201116 13:05:04.922" endtime="20201116 13:05:04.923"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.918" endtime="20201116 13:05:04.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.928" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:04.927" endtime="20201116 13:05:04.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:04.930" level="INFO">VALUE: [0.029829431, 0.039830375, 0.049829847, 0.059832014, 0.069832792, 0.079833514, 0.089834236, 0.099834972, 0.109835708, 0.119836458, 0.129837181, 0.139837944, 0.149838653, 0.159839403, 0.169840125, 0.179840875, 0.189841611, 0.199842347, 0.209843083, 0.219843819, 0.229844556, 0.239845333, 0.249846028, 0.259846792, 0.269847514, 0.279848264, 0.289849, 0.299849722, 0.309850472, 0.319851208, 0.329851944, 0.339852681, 0.349853431, 0.359854153, 0.369854903, 0.379855667, 0.389856361, 0.399857111, 0.409857861, 0.419858597, 0.429859375, 0.439860042, 0.449860778, 0.459861514, 0.469862319, 0.479862972, 0.489863708, 0.499864444, 0.509865181, 0.519865903, 0.529866639, 0.539867361, 0.549868153, 0.559868847, 0.569869556, 0.579870292, 0.589871014, 0.59987175, 0.609872486, 0.619873278, 0.629873944, 0.639874681, 0.649875431, 0.659876153, 0.669876875, 0.679877611, 0.689878347, 0.699879083, 0.709879819, 0.719880542, 0.729881292, 0.739882014, 0.749882764, 0.759883472, 0.769884194, 0.779884944, 0.789885681, 0.799886403, 0.809887125, 0.819887875, 0.829888597, 0.839889333, 0.849890111, 0.859890806, 0.869891528, 0.879892278, 0.889893014, 0.899893792, 0.909894458, 0.919895208, 0.929895931, 0.939896667, 0.949897389, 0.959898139, 0.969898861, 0.979899597, 0.989900333, 0.999901069, 1.009901833, 1.019902542] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:04.929" endtime="20201116 13:05:04.931"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.924" endtime="20201116 13:05:04.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:04.934" endtime="20201116 13:05:04.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:04.937" endtime="20201116 13:05:04.957"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.936" endtime="20201116 13:05:04.957"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.932" endtime="20201116 13:05:04.958"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:02.410" endtime="20201116 13:05:04.958"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.865" endtime="20201116 13:05:04.958"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:59.864" endtime="20201116 13:05:04.958"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:04.961" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:04.969" endtime="20201116 13:05:07.085"></status>
</kw>
<msg timestamp="20201116 13:05:07.086" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 14673030, 'wakeups': [14683046, 14693045, 14703046, 14713044, 14723046...</msg>
<status status="PASS" starttime="20201116 13:05:04.968" endtime="20201116 13:05:07.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.092" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 14673030, 'wakeups': [14683046, 14693045, 14703046, 14713044, 14723046...</msg>
<status status="PASS" starttime="20201116 13:05:07.088" endtime="20201116 13:05:07.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.094" endtime="20201116 13:05:07.098"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.965" endtime="20201116 13:05:07.099"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.963" endtime="20201116 13:05:07.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:07.106" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [14683046, 14693045, 14703046, 14713044, 14723046, 14733044, 14743046, 14753044, 14763046, 14773044, 14783046, 14793044, 14803046, 14813044, 14823046, 14833044, 14...</msg>
<status status="PASS" starttime="20201116 13:05:07.102" endtime="20201116 13:05:07.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.116" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:07.115" endtime="20201116 13:05:07.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.118" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:07.117" endtime="20201116 13:05:07.118"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.108" endtime="20201116 13:05:07.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.123" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:07.122" endtime="20201116 13:05:07.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.125" level="INFO">VALUE: 14673030</msg>
<status status="PASS" starttime="20201116 13:05:07.124" endtime="20201116 13:05:07.125"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.119" endtime="20201116 13:05:07.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.130" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:07.129" endtime="20201116 13:05:07.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.132" level="INFO">VALUE: [14683046, 14693045, 14703046, 14713044, 14723046, 14733044, 14743046, 14753044, 14763046, 14773044, 14783046, 14793044, 14803046, 14813044, 14823046, 14833044, 14843046, 14853044, 14863046, 14873044, 14883046, 14893044, 14903046, 14913044, 14923046, 14933044, 14943046, 14953044, 14963046, 14973044, 14983046, 14993044, 15003046, 15013044, 15023046, 15033044, 15043046, 15053044, 15063046, 15073044, 15083046, 15093044, 15103046, 15113044, 15123046, 15133044, 15143046, 15153044, 15163046, 15173044, 15183046, 15193044, 15203046, 15213044, 15223046, 15233044, 15243046, 15253044, 15263046, 15273044, 15283046, 15293044, 15303046, 15313044, 15323046, 15333044, 15343046, 15353044, 15363046, 15373044, 15383046, 15393044, 15403046, 15413044, 15423046, 15433044, 15443046, 15453044, 15463046, 15473044, 15483046, 15493044, 15503046, 15513044, 15523046, 15533044, 15543046, 15553044, 15563046, 15573044, 15583046, 15593044, 15603046, 15613044, 15623046, 15633044, 15643046, 15653044, 15663046, 15673044]</msg>
<status status="PASS" starttime="20201116 13:05:07.131" endtime="20201116 13:05:07.136"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.126" endtime="20201116 13:05:07.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.143" endtime="20201116 13:05:07.434"></status>
</kw>
<msg timestamp="20201116 13:05:07.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031984, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:05:07.142" endtime="20201116 13:05:07.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031984, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:05:07.438" endtime="20201116 13:05:07.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.445" endtime="20201116 13:05:07.447"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.139" endtime="20201116 13:05:07.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.137" endtime="20201116 13:05:07.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:07.471" level="INFO">${RESULT} = {'source_diff': [0, 0.010017013999999998, 0.010000042, 0.010001583000000001, 0.009998944000000003, 0.01000251399999999, 0.009998945000000009, 0.010002541000000004, 0.009998916999999996, 0.010002625000...</msg>
<status status="PASS" starttime="20201116 13:05:07.449" endtime="20201116 13:05:07.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.476" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:07.475" endtime="20201116 13:05:07.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.478" level="INFO">VALUE: 0.021966986</msg>
<status status="PASS" starttime="20201116 13:05:07.477" endtime="20201116 13:05:07.478"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.472" endtime="20201116 13:05:07.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.483" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:07.482" endtime="20201116 13:05:07.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:07.485" level="INFO">VALUE: [0.031984, 0.041984042, 0.051985625, 0.061984569, 0.071987083, 0.081986028, 0.091988569, 0.101987486, 0.111990111, 0.121988972, 0.131991514, 0.141990444, 0.151993069, 0.161991917, 0.171994458, 0.181993431, 0.191995958, 0.201994875, 0.211997444, 0.221996347, 0.231998903, 0.241997833, 0.252000375, 0.261999306, 0.272001889, 0.282000847, 0.292003333, 0.302002264, 0.312004806, 0.322003736, 0.332006278, 0.342005194, 0.352007736, 0.362006681, 0.372009208, 0.382008139, 0.392010667, 0.402009597, 0.412012153, 0.422011083, 0.432013597, 0.442012597, 0.452015083, 0.462014014, 0.472016556, 0.482015458, 0.492018056, 0.502016944, 0.512019458, 0.522018389, 0.532020944, 0.542019889, 0.552022403, 0.562021333, 0.572023875, 0.582022819, 0.592025333, 0.602024264, 0.612026792, 0.622025722, 0.632028278, 0.642027181, 0.652029778, 0.662028653, 0.672031194, 0.682030125, 0.692032736, 0.702031583, 0.712034125, 0.722033069, 0.732035597, 0.742034514, 0.752037083, 0.762035986, 0.772038597, 0.782037472, 0.79204, 0.802038931, 0.812041486, 0.822040403, 0.832042931, 0.842041903, 0.852044403, 0.862043389, 0.872045889, 0.882044792, 0.892047347, 0.902046278, 0.912048806, 0.92204775, 0.932050278, 0.942049194, 0.95205175, 0.962050694, 0.972053208, 0.982052139, 0.992054681, 1.002053597, 1.012056153, 1.022055069] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:07.484" endtime="20201116 13:05:07.486"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.479" endtime="20201116 13:05:07.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.488" endtime="20201116 13:05:07.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:07.492" endtime="20201116 13:05:07.511"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.490" endtime="20201116 13:05:07.512"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.487" endtime="20201116 13:05:07.512"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.962" endtime="20201116 13:05:07.512"></status>
</kw>
<msg timestamp="20201116 13:05:07.513" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:07.521" endtime="20201116 13:05:09.637"></status>
</kw>
<msg timestamp="20201116 13:05:09.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17224878, 'wakeups': [17234893, 17244894, 17254894, 17264892, 17274894...</msg>
<status status="PASS" starttime="20201116 13:05:07.519" endtime="20201116 13:05:09.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.644" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17224878, 'wakeups': [17234893, 17244894, 17254894, 17264892, 17274894...</msg>
<status status="PASS" starttime="20201116 13:05:09.640" endtime="20201116 13:05:09.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:09.646" endtime="20201116 13:05:09.649"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.517" endtime="20201116 13:05:09.650"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.515" endtime="20201116 13:05:09.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:09.657" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [17234893, 17244894, 17254894, 17264892, 17274894, 17284892, 17294894, 17304892, 17314894, 17324892, 17334894, 17344892, 17354894, 17364892, 17374894, 17384892, 17...</msg>
<status status="PASS" starttime="20201116 13:05:09.653" endtime="20201116 13:05:09.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.665" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:09.663" endtime="20201116 13:05:09.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.669" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:09.668" endtime="20201116 13:05:09.670"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:09.659" endtime="20201116 13:05:09.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.674" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:09.673" endtime="20201116 13:05:09.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.676" level="INFO">VALUE: 17224878</msg>
<status status="PASS" starttime="20201116 13:05:09.675" endtime="20201116 13:05:09.677"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:09.671" endtime="20201116 13:05:09.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.682" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:09.680" endtime="20201116 13:05:09.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.685" level="INFO">VALUE: [17234893, 17244894, 17254894, 17264892, 17274894, 17284892, 17294894, 17304892, 17314894, 17324892, 17334894, 17344892, 17354894, 17364892, 17374894, 17384892, 17394894, 17404892, 17414894, 17424892, 17434894, 17444892, 17454894, 17464892, 17474894, 17484892, 17494894, 17504892, 17514894, 17524892, 17534894, 17544892, 17554894, 17564892, 17574894, 17584892, 17594894, 17604892, 17614894, 17624892, 17634894, 17644892, 17654894, 17664892, 17674894, 17684892, 17694894, 17704892, 17714894, 17724892, 17734894, 17744892, 17754894, 17764892, 17774894, 17784892, 17794894, 17804892, 17814894, 17824892, 17834894, 17844892, 17854894, 17864892, 17874894, 17884892, 17894894, 17904892, 17914894, 17924892, 17934894, 17944892, 17954894, 17964892, 17974894, 17984892, 17994894, 18004892, 18014894, 18024892, 18034894, 18044892, 18054894, 18064892, 18074894, 18084892, 18094894, 18104892, 18114894, 18124892, 18134894, 18144892, 18154894, 18164892, 18174894, 18184892, 18194894, 18204892, 18214894, 18224892]</msg>
<status status="PASS" starttime="20201116 13:05:09.684" endtime="20201116 13:05:09.685"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:09.678" endtime="20201116 13:05:09.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:09.692" endtime="20201116 13:05:09.981"></status>
</kw>
<msg timestamp="20201116 13:05:09.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:09.690" endtime="20201116 13:05:09.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:09.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:09.985" endtime="20201116 13:05:09.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:09.993" endtime="20201116 13:05:09.995"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:09.688" endtime="20201116 13:05:09.995"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:09.686" endtime="20201116 13:05:09.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:10.020" level="INFO">${RESULT} = {'source_diff': [0, 0.010016750000000001, 0.010001236, 0.010000666999999998, 0.009998902000000004, 0.010002542000000003, 0.009998930999999989, 0.010002541000000004, 0.009998959000000002, 0.01000254100...</msg>
<status status="PASS" starttime="20201116 13:05:09.997" endtime="20201116 13:05:10.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.024" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:05:10.023" endtime="20201116 13:05:10.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.026" level="INFO">VALUE: 0.019361653</msg>
<status status="PASS" starttime="20201116 13:05:10.025" endtime="20201116 13:05:10.026"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.021" endtime="20201116 13:05:10.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.031" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:10.030" endtime="20201116 13:05:10.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:10.034" level="INFO">VALUE: [0.029378403, 0.039379639, 0.049380306, 0.059379208, 0.06938175, 0.079380681, 0.089383222, 0.099382181, 0.109384722, 0.119383625, 0.129386194, 0.139385125, 0.149387653, 0.159386583, 0.169389125, 0.179388083, 0.189390611, 0.199389556, 0.209392083, 0.219391014, 0.229393569, 0.239392486, 0.249395056, 0.259393986, 0.269396528, 0.279395444, 0.289398, 0.299396944, 0.309399472, 0.319398403, 0.329400944, 0.339399875, 0.349402444, 0.359401375, 0.369403903, 0.379402903, 0.389405389, 0.399404333, 0.409406875, 0.419405792, 0.429408319, 0.43940725, 0.449409778, 0.459408722, 0.46941125, 0.479410181, 0.489412722, 0.499411639, 0.509414181, 0.519413111, 0.529415639, 0.539414569, 0.549417125, 0.559416042, 0.569418569, 0.5794175, 0.589420069, 0.599418958, 0.609421514, 0.619420444, 0.629422972, 0.639421917, 0.649424444, 0.659423375, 0.669425917, 0.679424819, 0.689427361, 0.699426292, 0.709428833, 0.719427806, 0.729430306, 0.739429222, 0.749431764, 0.759430694, 0.76943325, 0.779432167, 0.789434708, 0.799433625, 0.809436167, 0.819435097, 0.829437639, 0.839436556, 0.849439153, 0.859438056, 0.869440583, 0.879439514, 0.889442056, 0.899440958, 0.9094435, 0.919442431, 0.929444972, 0.939443903, 0.949446444, 0.959445361, 0.969447917, 0.979446847, 0.989449375, 0.999448306, 1.009450847, 1.019449764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:10.033" endtime="20201116 13:05:10.034"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.028" endtime="20201116 13:05:10.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.037" endtime="20201116 13:05:10.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:10.041" endtime="20201116 13:05:10.060"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.039" endtime="20201116 13:05:10.061"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.035" endtime="20201116 13:05:10.061"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:07.513" endtime="20201116 13:05:10.061"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.960" endtime="20201116 13:05:10.062"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:04.959" endtime="20201116 13:05:10.062"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:10.065" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:10.073" endtime="20201116 13:05:12.189"></status>
</kw>
<msg timestamp="20201116 13:05:12.190" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 19776483, 'wakeups': [19786505, 19796503, 19806504, 19816504, 19826503...</msg>
<status status="PASS" starttime="20201116 13:05:10.071" endtime="20201116 13:05:12.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.195" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 19776483, 'wakeups': [19786505, 19796503, 19806504, 19816504, 19826503...</msg>
<status status="PASS" starttime="20201116 13:05:12.192" endtime="20201116 13:05:12.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.198" endtime="20201116 13:05:12.201"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.069" endtime="20201116 13:05:12.202"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.067" endtime="20201116 13:05:12.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:12.215" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [19786505, 19796503, 19806504, 19816504, 19826503, 19836504, 19846503, 19856504, 19866503, 19876503, 19886504, 19896504, 19906503, 19916503, 19926504, 19936504, 19...</msg>
<status status="PASS" starttime="20201116 13:05:12.205" endtime="20201116 13:05:12.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.224" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:12.222" endtime="20201116 13:05:12.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.226" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:12.225" endtime="20201116 13:05:12.226"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.217" endtime="20201116 13:05:12.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.231" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:12.230" endtime="20201116 13:05:12.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.233" level="INFO">VALUE: 19776483</msg>
<status status="PASS" starttime="20201116 13:05:12.232" endtime="20201116 13:05:12.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.228" endtime="20201116 13:05:12.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.238" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:12.237" endtime="20201116 13:05:12.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.240" level="INFO">VALUE: [19786505, 19796503, 19806504, 19816504, 19826503, 19836504, 19846503, 19856504, 19866503, 19876503, 19886504, 19896504, 19906503, 19916503, 19926504, 19936504, 19946503, 19956504, 19966503, 19976504, 19986503, 19996504, 20006503, 20016504, 20026503, 20036503, 20046504, 20056504, 20066503, 20076503, 20086504, 20096504, 20106503, 20116504, 20126503, 20136504, 20146503, 20156504, 20166503, 20176504, 20186503, 20196503, 20206504, 20216504, 20226503, 20236503, 20246504, 20256504, 20266503, 20276504, 20286503, 20296504, 20306503, 20316504, 20326503, 20336504, 20346503, 20356503, 20366504, 20376504, 20386503, 20396503, 20406504, 20416504, 20426503, 20436504, 20446503, 20456504, 20466503, 20476504, 20486503, 20496504, 20506503, 20516503, 20526504, 20536504, 20546503, 20556503, 20566504, 20576504, 20586503, 20596504, 20606503, 20616504, 20626503, 20636504, 20646503, 20656504, 20666503, 20676503, 20686504, 20696504, 20706503, 20716503, 20726504, 20736504, 20746503, 20756504, 20766503, 20776504]</msg>
<status status="PASS" starttime="20201116 13:05:12.239" endtime="20201116 13:05:12.240"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.234" endtime="20201116 13:05:12.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.248" endtime="20201116 13:05:12.540"></status>
</kw>
<msg timestamp="20201116 13:05:12.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031968847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:12.246" endtime="20201116 13:05:12.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031968847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:12.543" endtime="20201116 13:05:12.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.551" endtime="20201116 13:05:12.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.243" endtime="20201116 13:05:12.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.242" endtime="20201116 13:05:12.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:12.577" level="INFO">${RESULT} = {'source_diff': [0, 0.010022805000000003, 0.009998972000000002, 0.010002041999999996, 0.010000388999999998, 0.010000083, 0.010001431000000005, 0.010000069, 0.010001250000000003, 0.009999735999999995, ...</msg>
<status status="PASS" starttime="20201116 13:05:12.554" endtime="20201116 13:05:12.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.581" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:12.580" endtime="20201116 13:05:12.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.583" level="INFO">VALUE: 0.021946042</msg>
<status status="PASS" starttime="20201116 13:05:12.582" endtime="20201116 13:05:12.583"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.578" endtime="20201116 13:05:12.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.589" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:12.588" endtime="20201116 13:05:12.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:12.591" level="INFO">VALUE: [0.031968847, 0.041967819, 0.051969861, 0.06197025, 0.071970333, 0.081971764, 0.091971833, 0.101973083, 0.111972819, 0.121973764, 0.131975778, 0.141976167, 0.151975833, 0.161976708, 0.171978722, 0.181979111, 0.191979194, 0.201980611, 0.211980667, 0.221982069, 0.231982153, 0.241983556, 0.251983639, 0.261984903, 0.271984667, 0.281985583, 0.291987583, 0.301988, 0.311987653, 0.321988528, 0.331990542, 0.341990931, 0.351991028, 0.361992472, 0.371992514, 0.381993889, 0.391993972, 0.401995361, 0.411995458, 0.421996694, 0.431996431, 0.441997361, 0.451999361, 0.461999819, 0.471999444, 0.482000306, 0.492002292, 0.502002694, 0.512002778, 0.522004167, 0.532004236, 0.542005611, 0.552005681, 0.562007083, 0.572007167, 0.582008417, 0.592008153, 0.602009083, 0.612011083, 0.622011472, 0.632011139, 0.642012069, 0.652014014, 0.662014403, 0.672014486, 0.682015903, 0.692015944, 0.702017347, 0.712017431, 0.722018806, 0.732018875, 0.742020181, 0.752019889, 0.762020806, 0.772022806, 0.782023208, 0.792022889, 0.80202375, 0.81202575, 0.822026139, 0.832026208, 0.842027667, 0.852027681, 0.862029069, 0.872029153, 0.882030611, 0.892030625, 0.902031875, 0.912031611, 0.922032542, 0.932034542, 0.942034944, 0.952034611, 0.9620355, 0.972037542, 0.982037875, 0.992037944, 1.002039333, 1.012039431, 1.022040819] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:12.590" endtime="20201116 13:05:12.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.585" endtime="20201116 13:05:12.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.594" endtime="20201116 13:05:12.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:12.597" endtime="20201116 13:05:12.617"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.596" endtime="20201116 13:05:12.617"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.592" endtime="20201116 13:05:12.618"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.065" endtime="20201116 13:05:12.618"></status>
</kw>
<msg timestamp="20201116 13:05:12.618" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:12.627" endtime="20201116 13:05:14.743"></status>
</kw>
<msg timestamp="20201116 13:05:14.745" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22331087, 'wakeups': [22341109, 22351108, 22361108, 22371108, 22381107...</msg>
<status status="PASS" starttime="20201116 13:05:12.625" endtime="20201116 13:05:14.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.750" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22331087, 'wakeups': [22341109, 22351108, 22361108, 22371108, 22381107...</msg>
<status status="PASS" starttime="20201116 13:05:14.747" endtime="20201116 13:05:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:14.753" endtime="20201116 13:05:14.756"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.622" endtime="20201116 13:05:14.757"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.620" endtime="20201116 13:05:14.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:14.764" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [22341109, 22351108, 22361108, 22371108, 22381107, 22391107, 22401108, 22411108, 22421107, 22431108, 22441107, 22451108, 22461107, 22471108, 22481107, 22491108, 22...</msg>
<status status="PASS" starttime="20201116 13:05:14.760" endtime="20201116 13:05:14.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.772" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:14.770" endtime="20201116 13:05:14.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.776" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:14.774" endtime="20201116 13:05:14.777"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:14.765" endtime="20201116 13:05:14.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.782" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:14.781" endtime="20201116 13:05:14.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.784" level="INFO">VALUE: 22331087</msg>
<status status="PASS" starttime="20201116 13:05:14.783" endtime="20201116 13:05:14.785"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:14.779" endtime="20201116 13:05:14.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.790" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:14.789" endtime="20201116 13:05:14.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:14.792" level="INFO">VALUE: [22341109, 22351108, 22361108, 22371108, 22381107, 22391107, 22401108, 22411108, 22421107, 22431108, 22441107, 22451108, 22461107, 22471108, 22481107, 22491108, 22501107, 22511107, 22521108, 22531108, 22541107, 22551107, 22561108, 22571108, 22581107, 22591108, 22601107, 22611108, 22621107, 22631108, 22641107, 22651108, 22661107, 22671107, 22681108, 22691108, 22701107, 22711107, 22721108, 22731108, 22741107, 22751108, 22761107, 22771108, 22781107, 22791108, 22801107, 22811108, 22821107, 22831107, 22841108, 22851108, 22861107, 22871107, 22881108, 22891108, 22901107, 22911108, 22921107, 22931108, 22941107, 22951108, 22961107, 22971108, 22981107, 22991107, 23001108, 23011108, 23021107, 23031107, 23041108, 23051108, 23061107, 23071108, 23081107, 23091108, 23101107, 23111108, 23121107, 23131108, 23141107, 23151107, 23161108, 23171108, 23181107, 23191107, 23201108, 23211108, 23221107, 23231108, 23241107, 23251108, 23261107, 23271108, 23281107, 23291108, 23301107, 23311107, 23321108, 23331108]</msg>
<status status="PASS" starttime="20201116 13:05:14.791" endtime="20201116 13:05:14.792"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:14.786" endtime="20201116 13:05:14.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:14.799" endtime="20201116 13:05:15.091"></status>
</kw>
<msg timestamp="20201116 13:05:15.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029983083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:14.798" endtime="20201116 13:05:15.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029983083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:15.095" endtime="20201116 13:05:15.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.102" endtime="20201116 13:05:15.104"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:14.795" endtime="20201116 13:05:15.104"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:14.793" endtime="20201116 13:05:15.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:15.129" level="INFO">${RESULT} = {'source_diff': [0, 0.010022666, 0.010000124999999999, 0.010001028000000002, 0.010000416999999998, 0.009999679999999997, 0.010000861, 0.010002000000000011, 0.01000043099999999, 0.010000042, 0.01000141...</msg>
<status status="PASS" starttime="20201116 13:05:15.105" endtime="20201116 13:05:15.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.134" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:05:15.133" endtime="20201116 13:05:15.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.136" level="INFO">VALUE: 0.019960417</msg>
<status status="PASS" starttime="20201116 13:05:15.135" endtime="20201116 13:05:15.136"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.130" endtime="20201116 13:05:15.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.141" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:15.140" endtime="20201116 13:05:15.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:15.143" level="INFO">VALUE: [0.029983083, 0.039983208, 0.049984236, 0.059984653, 0.069984333, 0.079985194, 0.089987194, 0.099987625, 0.109987667, 0.119989083, 0.129989167, 0.139990556, 0.149990653, 0.159992028, 0.169992097, 0.179993417, 0.189993111, 0.199994042, 0.209996083, 0.219996444, 0.229996125, 0.239997, 0.249999014, 0.259999472, 0.269999528, 0.280000889, 0.290000972, 0.300002361, 0.310002458, 0.320003861, 0.330003944, 0.340005194, 0.350004944, 0.360005903, 0.370007889, 0.380008264, 0.390007931, 0.400008792, 0.410010806, 0.420011181, 0.430011264, 0.440012653, 0.450012722, 0.460014111, 0.470014181, 0.480015569, 0.490015667, 0.500016917, 0.510016639, 0.520017597, 0.530019583, 0.540019972, 0.550019639, 0.5600205, 0.570022514, 0.580022903, 0.590022972, 0.600024361, 0.610024431, 0.620025833, 0.630025903, 0.640027306, 0.650027375, 0.660028625, 0.670028375, 0.680029319, 0.690031306, 0.700031694, 0.710031389, 0.72003225, 0.730034236, 0.740034625, 0.750034694, 0.760036111, 0.770036167, 0.780037556, 0.790037639, 0.800039083, 0.810039125, 0.820040389, 0.830040111, 0.840041056, 0.850043028, 0.860043431, 0.870043125, 0.880043958, 0.890045972, 0.900046417, 0.910046431, 0.920047819, 0.930047903, 0.940049292, 0.950049361, 0.960050778, 0.970050847, 0.980052111, 0.990051833, 1.000052764, 1.010054764, 1.020055167] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:15.142" endtime="20201116 13:05:15.143"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.137" endtime="20201116 13:05:15.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.146" endtime="20201116 13:05:15.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:15.150" endtime="20201116 13:05:15.169"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.148" endtime="20201116 13:05:15.170"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.144" endtime="20201116 13:05:15.170"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:12.619" endtime="20201116 13:05:15.171"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.063" endtime="20201116 13:05:15.171"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:10.062" endtime="20201116 13:05:15.171"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:15.174" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:15.182" endtime="20201116 13:05:17.297"></status>
</kw>
<msg timestamp="20201116 13:05:17.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 24885440, 'wakeups': [24895467, 24905466, 24915467, 24925466, 24935466...</msg>
<status status="PASS" starttime="20201116 13:05:15.180" endtime="20201116 13:05:17.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 24885440, 'wakeups': [24895467, 24905466, 24915467, 24925466, 24935466...</msg>
<status status="PASS" starttime="20201116 13:05:17.301" endtime="20201116 13:05:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.307" endtime="20201116 13:05:17.310"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.178" endtime="20201116 13:05:17.311"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.176" endtime="20201116 13:05:17.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:17.318" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [24895467, 24905466, 24915467, 24925466, 24935466, 24945466, 24955466, 24965466, 24975466, 24985466, 24995466, 25005466, 25015466, 25025466, 25035466, 25045466, 25...</msg>
<status status="PASS" starttime="20201116 13:05:17.314" endtime="20201116 13:05:17.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.326" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:17.324" endtime="20201116 13:05:17.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.330" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:17.328" endtime="20201116 13:05:17.331"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.319" endtime="20201116 13:05:17.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.338" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:17.336" endtime="20201116 13:05:17.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.340" level="INFO">VALUE: 24885440</msg>
<status status="PASS" starttime="20201116 13:05:17.339" endtime="20201116 13:05:17.340"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.333" endtime="20201116 13:05:17.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.345" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:17.344" endtime="20201116 13:05:17.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.347" level="INFO">VALUE: [24895467, 24905466, 24915467, 24925466, 24935466, 24945466, 24955466, 24965466, 24975466, 24985466, 24995466, 25005466, 25015466, 25025466, 25035466, 25045466, 25055466, 25065466, 25075466, 25085466, 25095466, 25105466, 25115466, 25125466, 25135466, 25145466, 25155466, 25165466, 25175466, 25185466, 25195466, 25205466, 25215466, 25225466, 25235466, 25245466, 25255466, 25265466, 25275466, 25285466, 25295466, 25305466, 25315466, 25325466, 25335466, 25345466, 25355466, 25365466, 25375466, 25385466, 25395466, 25405466, 25415466, 25425466, 25435466, 25445466, 25455466, 25465466, 25475466, 25485466, 25495466, 25505466, 25515466, 25525466, 25535466, 25545466, 25555466, 25565466, 25575466, 25585466, 25595466, 25605466, 25615466, 25625466, 25635466, 25645466, 25655466, 25665466, 25675466, 25685466, 25695466, 25705466, 25715466, 25725466, 25735466, 25745466, 25755466, 25765466, 25775466, 25785466, 25795466, 25805466, 25815466, 25825466, 25835466, 25845466, 25855466, 25865466, 25875466, 25885466]</msg>
<status status="PASS" starttime="20201116 13:05:17.346" endtime="20201116 13:05:17.348"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.342" endtime="20201116 13:05:17.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.360" endtime="20201116 13:05:17.652"></status>
</kw>
<msg timestamp="20201116 13:05:17.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031871792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:17.358" endtime="20201116 13:05:17.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031871792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:17.656" endtime="20201116 13:05:17.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.664" endtime="20201116 13:05:17.665"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.355" endtime="20201116 13:05:17.666"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.353" endtime="20201116 13:05:17.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:17.689" level="INFO">${RESULT} = {'source_diff': [0, 0.010028195000000004, 0.009999860999999999, 0.010001861, 0.009999679999999997, 0.010000805999999994, 0.010000667000000005, 0.010000777000000002, 0.010000695000000004, 0.01000081899...</msg>
<status status="PASS" starttime="20201116 13:05:17.667" endtime="20201116 13:05:17.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.694" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:17.693" endtime="20201116 13:05:17.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.696" level="INFO">VALUE: 0.021843597</msg>
<status status="PASS" starttime="20201116 13:05:17.695" endtime="20201116 13:05:17.696"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.690" endtime="20201116 13:05:17.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.701" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:17.700" endtime="20201116 13:05:17.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:17.704" level="INFO">VALUE: [0.031871792, 0.041871653, 0.051873514, 0.061873194, 0.071874, 0.081874667, 0.091875444, 0.101876139, 0.111876958, 0.121877611, 0.131878403, 0.141879083, 0.151879875, 0.161880556, 0.171881361, 0.181882069, 0.191882819, 0.201883569, 0.211884375, 0.221884986, 0.231885792, 0.241886458, 0.25188725, 0.261887944, 0.271888736, 0.281889417, 0.291890208, 0.301890889, 0.311891681, 0.321892375, 0.331893153, 0.341893847, 0.351894625, 0.361895361, 0.371896125, 0.381896819, 0.391897583, 0.401898333, 0.411899153, 0.421899764, 0.431900583, 0.44190125, 0.451902014, 0.461902708, 0.4719035, 0.481904208, 0.491905, 0.501905667, 0.511906444, 0.521907181, 0.531907917, 0.541908597, 0.551909403, 0.561910056, 0.571910833, 0.581911514, 0.591912292, 0.601912986, 0.611913764, 0.621914458, 0.631915222, 0.641915903, 0.651916694, 0.661917444, 0.671918167, 0.681918833, 0.691919611, 0.701920319, 0.711921083, 0.721921778, 0.731922542, 0.741923236, 0.751924028, 0.761924708, 0.771925472, 0.781926167, 0.791926958, 0.801927625, 0.811928403, 0.821929111, 0.831929875, 0.841930556, 0.851931333, 0.861932042, 0.871932806, 0.881933486, 0.891934264, 0.901934972, 0.911935736, 0.921936444, 0.931937208, 0.941937889, 0.951938667, 0.961939361, 0.971940139, 0.981940819, 0.991941611, 1.001942292, 1.011943069, 1.02194375] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:17.703" endtime="20201116 13:05:17.704"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.697" endtime="20201116 13:05:17.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.707" endtime="20201116 13:05:17.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:17.710" endtime="20201116 13:05:17.730"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.709" endtime="20201116 13:05:17.730"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.705" endtime="20201116 13:05:17.731"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.174" endtime="20201116 13:05:17.731"></status>
</kw>
<msg timestamp="20201116 13:05:17.731" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:17.739" endtime="20201116 13:05:19.855"></status>
</kw>
<msg timestamp="20201116 13:05:19.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27443164, 'wakeups': [27453190, 27463190, 27473191, 27483190, 27493190...</msg>
<status status="PASS" starttime="20201116 13:05:17.738" endtime="20201116 13:05:19.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.863" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27443164, 'wakeups': [27453190, 27463190, 27473191, 27483190, 27493190...</msg>
<status status="PASS" starttime="20201116 13:05:19.860" endtime="20201116 13:05:19.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:19.865" endtime="20201116 13:05:19.869"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.735" endtime="20201116 13:05:19.870"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.733" endtime="20201116 13:05:19.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:19.876" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [27453190, 27463190, 27473191, 27483190, 27493190, 27503190, 27513190, 27523190, 27533190, 27543190, 27553190, 27563190, 27573190, 27583190, 27593190, 27603190, 27...</msg>
<status status="PASS" starttime="20201116 13:05:19.872" endtime="20201116 13:05:19.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.885" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:19.883" endtime="20201116 13:05:19.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.889" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:19.887" endtime="20201116 13:05:19.889"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.878" endtime="20201116 13:05:19.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.894" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:19.893" endtime="20201116 13:05:19.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.896" level="INFO">VALUE: 27443164</msg>
<status status="PASS" starttime="20201116 13:05:19.895" endtime="20201116 13:05:19.896"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.890" endtime="20201116 13:05:19.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.901" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:19.900" endtime="20201116 13:05:19.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:19.903" level="INFO">VALUE: [27453190, 27463190, 27473191, 27483190, 27493190, 27503190, 27513190, 27523190, 27533190, 27543190, 27553190, 27563190, 27573190, 27583190, 27593190, 27603190, 27613190, 27623190, 27633190, 27643190, 27653190, 27663190, 27673190, 27683190, 27693190, 27703190, 27713190, 27723190, 27733190, 27743190, 27753190, 27763190, 27773190, 27783190, 27793190, 27803190, 27813190, 27823190, 27833190, 27843190, 27853190, 27863190, 27873190, 27883190, 27893190, 27903190, 27913190, 27923190, 27933190, 27943190, 27953190, 27963190, 27973190, 27983190, 27993190, 28003190, 28013190, 28023190, 28033190, 28043190, 28053190, 28063190, 28073190, 28083190, 28093190, 28103190, 28113190, 28123190, 28133190, 28143190, 28153190, 28163190, 28173190, 28183190, 28193190, 28203190, 28213190, 28223190, 28233190, 28243190, 28253190, 28263190, 28273190, 28283190, 28293190, 28303190, 28313190, 28323190, 28333190, 28343190, 28353190, 28363190, 28373190, 28383190, 28393190, 28403190, 28413190, 28423190, 28433190, 28443190]</msg>
<status status="PASS" starttime="20201116 13:05:19.902" endtime="20201116 13:05:19.903"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.897" endtime="20201116 13:05:19.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:19.910" endtime="20201116 13:05:20.203"></status>
</kw>
<msg timestamp="20201116 13:05:20.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019041139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029068597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:19.909" endtime="20201116 13:05:20.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019041139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029068597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:20.207" endtime="20201116 13:05:20.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.214" endtime="20201116 13:05:20.216"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.906" endtime="20201116 13:05:20.217"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:19.904" endtime="20201116 13:05:20.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:20.241" level="INFO">${RESULT} = {'source_diff': [0, 0.010027458000000003, 0.010000680999999997, 0.010001625, 0.009999805, 0.010000680999999997, 0.010000819000000008, 0.010000638999999992, 0.010000806000000001, 0.010000666000000005, ...</msg>
<status status="PASS" starttime="20201116 13:05:20.218" endtime="20201116 13:05:20.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.245" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:05:20.244" endtime="20201116 13:05:20.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.248" level="INFO">VALUE: 0.019041139</msg>
<status status="PASS" starttime="20201116 13:05:20.247" endtime="20201116 13:05:20.248"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.242" endtime="20201116 13:05:20.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.253" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:20.252" endtime="20201116 13:05:20.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:20.255" level="INFO">VALUE: [0.029068597, 0.039069278, 0.049070903, 0.059070708, 0.069071389, 0.079072208, 0.089072847, 0.099073653, 0.109074319, 0.119075111, 0.129075806, 0.139076597, 0.149077278, 0.159078069, 0.16907875, 0.179079556, 0.189080222, 0.199081014, 0.209081722, 0.2190825, 0.229083181, 0.239083972, 0.249084667, 0.259085444, 0.269086139, 0.279086944, 0.289087611, 0.299088403, 0.309089097, 0.319089875, 0.329090556, 0.339091333, 0.349092014, 0.359092861, 0.369093472, 0.379094264, 0.389094931, 0.399095806, 0.409096431, 0.419097181, 0.429097861, 0.439098667, 0.449099333, 0.459100111, 0.469100792, 0.479101639, 0.48910225, 0.499103042, 0.509103722, 0.519104528, 0.529105181, 0.539105972, 0.549106667, 0.559107444, 0.569108111, 0.579108903, 0.589109583, 0.599110389, 0.609111042, 0.619111833, 0.629112514, 0.639113306, 0.649113972, 0.659114778, 0.669115444, 0.679116236, 0.689116917, 0.699117708, 0.709118389, 0.719119181, 0.729119903, 0.739120667, 0.749121347, 0.759122125, 0.769122806, 0.779123583, 0.789124278, 0.799125056, 0.80912575, 0.819126542, 0.829127208, 0.839128014, 0.849128681, 0.859129486, 0.869130153, 0.879130944, 0.889131625, 0.899132417, 0.909133097, 0.919133889, 0.929134569, 0.939135347, 0.949136042, 0.959136819, 0.9691375, 0.979138292, 0.989138972, 0.999139778, 1.0091405, 1.01914125] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:20.254" endtime="20201116 13:05:20.255"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.249" endtime="20201116 13:05:20.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.258" endtime="20201116 13:05:20.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:20.261" endtime="20201116 13:05:20.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.260" endtime="20201116 13:05:20.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.256" endtime="20201116 13:05:20.282"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:17.732" endtime="20201116 13:05:20.282"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.172" endtime="20201116 13:05:20.282"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:15.171" endtime="20201116 13:05:20.282"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:20.285" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:20.294" endtime="20201116 13:05:22.410"></status>
</kw>
<msg timestamp="20201116 13:05:22.411" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 29997898, 'wakeups': [30007931, 30017931, 30027931, 30037931, 30047931...</msg>
<status status="PASS" starttime="20201116 13:05:20.292" endtime="20201116 13:05:22.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.417" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 29997898, 'wakeups': [30007931, 30017931, 30027931, 30037931, 30047931...</msg>
<status status="PASS" starttime="20201116 13:05:22.413" endtime="20201116 13:05:22.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.420" endtime="20201116 13:05:22.423"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.289" endtime="20201116 13:05:22.424"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.287" endtime="20201116 13:05:22.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:22.431" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [30007931, 30017931, 30027931, 30037931, 30047931, 30057931, 30067931, 30077931, 30087931, 30097931, 30107931, 30117931, 30127931, 30137931, 30147931, 30157931, 30...</msg>
<status status="PASS" starttime="20201116 13:05:22.426" endtime="20201116 13:05:22.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.444" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:22.443" endtime="20201116 13:05:22.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.446" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:22.445" endtime="20201116 13:05:22.446"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.438" endtime="20201116 13:05:22.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.451" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:22.450" endtime="20201116 13:05:22.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.453" level="INFO">VALUE: 29997898</msg>
<status status="PASS" starttime="20201116 13:05:22.452" endtime="20201116 13:05:22.453"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.448" endtime="20201116 13:05:22.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.458" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:22.457" endtime="20201116 13:05:22.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.460" level="INFO">VALUE: [30007931, 30017931, 30027931, 30037931, 30047931, 30057931, 30067931, 30077931, 30087931, 30097931, 30107931, 30117931, 30127931, 30137931, 30147931, 30157931, 30167931, 30177931, 30187931, 30197931, 30207931, 30217931, 30227931, 30237931, 30247931, 30257931, 30267931, 30277931, 30287931, 30297931, 30307931, 30317931, 30327931, 30337931, 30347931, 30357931, 30367931, 30377931, 30387931, 30397931, 30407931, 30417931, 30427931, 30437931, 30447931, 30457931, 30467931, 30477931, 30487931, 30497931, 30507931, 30517931, 30527931, 30537931, 30547931, 30557931, 30567931, 30577931, 30587931, 30597931, 30607931, 30617931, 30627931, 30637931, 30647931, 30657931, 30667931, 30677931, 30687931, 30697931, 30707931, 30717931, 30727931, 30737931, 30747931, 30757931, 30767931, 30777931, 30787931, 30797931, 30807931, 30817931, 30827931, 30837931, 30847931, 30857931, 30867931, 30877931, 30887931, 30897931, 30907931, 30917931, 30927931, 30937931, 30947931, 30957931, 30967931, 30977931, 30987931, 30997931]</msg>
<status status="PASS" starttime="20201116 13:05:22.459" endtime="20201116 13:05:22.460"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.454" endtime="20201116 13:05:22.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.467" endtime="20201116 13:05:22.759"></status>
</kw>
<msg timestamp="20201116 13:05:22.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032835889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:05:22.466" endtime="20201116 13:05:22.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032835889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:05:22.763" endtime="20201116 13:05:22.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.770" endtime="20201116 13:05:22.772"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.463" endtime="20201116 13:05:22.772"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.461" endtime="20201116 13:05:22.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:22.796" level="INFO">${RESULT} = {'source_diff': [0, 0.010034639000000001, 0.010000110999999999, 0.010001528000000003, 0.009999985999999995, 0.010001499999999997, 0.00999997200000001, 0.010001514000000003, 0.009999985999999988, 0.010...</msg>
<status status="PASS" starttime="20201116 13:05:22.773" endtime="20201116 13:05:22.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.801" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:22.800" endtime="20201116 13:05:22.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.803" level="INFO">VALUE: 0.02280125</msg>
<status status="PASS" starttime="20201116 13:05:22.802" endtime="20201116 13:05:22.803"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.797" endtime="20201116 13:05:22.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.808" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:22.807" endtime="20201116 13:05:22.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:22.811" level="INFO">VALUE: [0.032835889, 0.042836, 0.052837528, 0.062837514, 0.072839014, 0.082838986, 0.0928405, 0.102840486, 0.112841958, 0.122841944, 0.132843458, 0.142843458, 0.152844917, 0.162844917, 0.172846417, 0.182846389, 0.192847875, 0.202847875, 0.212849361, 0.222849347, 0.232850847, 0.242850819, 0.252852319, 0.262852306, 0.272853792, 0.282853778, 0.292855292, 0.302855264, 0.312856764, 0.322856736, 0.332858236, 0.342858236, 0.352859722, 0.362859694, 0.372861194, 0.382861181, 0.392862681, 0.402862667, 0.412864153, 0.422864125, 0.432865625, 0.442865597, 0.452867097, 0.462867056, 0.472868556, 0.482868528, 0.492870028, 0.502870014, 0.512871486, 0.522871458, 0.532872986, 0.542872931, 0.552874458, 0.562874403, 0.572875903, 0.582875861, 0.592877347, 0.602877333, 0.612878903, 0.622878806, 0.632880292, 0.642880264, 0.652881764, 0.662881736, 0.672883236, 0.682883208, 0.692884736, 0.702884736, 0.712886181, 0.722886139, 0.732887625, 0.742887625, 0.752889111, 0.762889083, 0.772890569, 0.782890556, 0.792892056, 0.802892014, 0.812893514, 0.822893486, 0.832894986, 0.842894958, 0.852896444, 0.862896444, 0.872897931, 0.882897903, 0.892899389, 0.902899375, 0.912900875, 0.922900833, 0.932902389, 0.942902319, 0.952903806, 0.962903778, 0.972905306, 0.98290525, 0.992906736, 1.002906722, 1.01290825, 1.022908194] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:22.810" endtime="20201116 13:05:22.811"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.804" endtime="20201116 13:05:22.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.814" endtime="20201116 13:05:22.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:22.817" endtime="20201116 13:05:22.837"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.816" endtime="20201116 13:05:22.837"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.812" endtime="20201116 13:05:22.838"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.286" endtime="20201116 13:05:22.838"></status>
</kw>
<msg timestamp="20201116 13:05:22.838" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:22.846" endtime="20201116 13:05:24.962"></status>
</kw>
<msg timestamp="20201116 13:05:24.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 32550118, 'wakeups': [32560152, 32570152, 32580151, 32590151, 32600151...</msg>
<status status="PASS" starttime="20201116 13:05:22.845" endtime="20201116 13:05:24.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.969" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 32550118, 'wakeups': [32560152, 32570152, 32580151, 32590151, 32600151...</msg>
<status status="PASS" starttime="20201116 13:05:24.966" endtime="20201116 13:05:24.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:24.971" endtime="20201116 13:05:24.975"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.842" endtime="20201116 13:05:24.976"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.840" endtime="20201116 13:05:24.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:24.982" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [32560152, 32570152, 32580151, 32590151, 32600151, 32610151, 32620151, 32630151, 32640151, 32650151, 32660151, 32670151, 32680151, 32690151, 32700151, 32710151, 32...</msg>
<status status="PASS" starttime="20201116 13:05:24.978" endtime="20201116 13:05:24.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.991" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:24.989" endtime="20201116 13:05:24.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:24.995" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:24.993" endtime="20201116 13:05:24.996"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.984" endtime="20201116 13:05:24.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.002" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:25.001" endtime="20201116 13:05:25.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.005" level="INFO">VALUE: 32550118</msg>
<status status="PASS" starttime="20201116 13:05:25.003" endtime="20201116 13:05:25.005"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:24.998" endtime="20201116 13:05:25.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.010" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:25.009" endtime="20201116 13:05:25.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.012" level="INFO">VALUE: [32560152, 32570152, 32580151, 32590151, 32600151, 32610151, 32620151, 32630151, 32640151, 32650151, 32660151, 32670151, 32680151, 32690151, 32700151, 32710151, 32720151, 32730151, 32740151, 32750151, 32760151, 32770151, 32780151, 32790151, 32800151, 32810151, 32820151, 32830151, 32840151, 32850151, 32860151, 32870151, 32880151, 32890151, 32900151, 32910151, 32920151, 32930151, 32940151, 32950151, 32960151, 32970151, 32980151, 32990151, 33000151, 33010151, 33020151, 33030151, 33040151, 33050151, 33060151, 33070151, 33080151, 33090151, 33100151, 33110151, 33120151, 33130151, 33140151, 33150151, 33160151, 33170151, 33180151, 33190151, 33200151, 33210151, 33220151, 33230151, 33240151, 33250151, 33260151, 33270151, 33280151, 33290151, 33300151, 33310151, 33320151, 33330151, 33340151, 33350151, 33360151, 33370151, 33380151, 33390151, 33400151, 33410151, 33420151, 33430151, 33440151, 33450151, 33460151, 33470151, 33480151, 33490151, 33500151, 33510151, 33520151, 33530151, 33540151, 33550151]</msg>
<status status="PASS" starttime="20201116 13:05:25.011" endtime="20201116 13:05:25.013"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.006" endtime="20201116 13:05:25.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.020" endtime="20201116 13:05:25.311"></status>
</kw>
<msg timestamp="20201116 13:05:25.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019073333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029108333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:25.018" endtime="20201116 13:05:25.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019073333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029108333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:25.315" endtime="20201116 13:05:25.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.323" endtime="20201116 13:05:25.324"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.016" endtime="20201116 13:05:25.325"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.014" endtime="20201116 13:05:25.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:25.348" level="INFO">${RESULT} = {'source_diff': [0, 0.010034999999999999, 0.010000084, 0.010000541000000002, 0.009999985999999995, 0.010001499999999997, 0.00999997300000001, 0.010001486000000004, 0.009999999999999995, 0.010001486000...</msg>
<status status="PASS" starttime="20201116 13:05:25.326" endtime="20201116 13:05:25.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.353" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:05:25.352" endtime="20201116 13:05:25.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.355" level="INFO">VALUE: 0.019073333</msg>
<status status="PASS" starttime="20201116 13:05:25.354" endtime="20201116 13:05:25.355"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.349" endtime="20201116 13:05:25.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.360" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:25.359" endtime="20201116 13:05:25.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:25.364" level="INFO">VALUE: [0.029108333, 0.039108417, 0.049108958, 0.059108944, 0.069110444, 0.079110417, 0.089111903, 0.099111903, 0.109113389, 0.119113361, 0.129114861, 0.139114847, 0.149116333, 0.159116333, 0.169117819, 0.179117792, 0.189119306, 0.199119292, 0.209120778, 0.219120764, 0.229122264, 0.23912225, 0.249123722, 0.259123708, 0.269125208, 0.279125208, 0.289126681, 0.299126667, 0.309128167, 0.319128153, 0.329129639, 0.339129653, 0.349131125, 0.359131125, 0.369132597, 0.379132583, 0.389134083, 0.399134069, 0.409135556, 0.419135542, 0.429137056, 0.439137028, 0.4491385, 0.459138486, 0.469139972, 0.479139958, 0.489141458, 0.499141431, 0.509142917, 0.519142903, 0.529144389, 0.539144361, 0.549145847, 0.559145847, 0.569147389, 0.579147306, 0.589148792, 0.599148778, 0.609150264, 0.61915025, 0.629151736, 0.639151722, 0.649153208, 0.659153208, 0.669154764, 0.679154653, 0.689156153, 0.699156125, 0.709157625, 0.719157653, 0.729159083, 0.739159083, 0.749160569, 0.759160569, 0.769162042, 0.779162014, 0.789163514, 0.799163486, 0.809165042, 0.819164958, 0.829166444, 0.839166444, 0.849167931, 0.859167903, 0.869169403, 0.879169375, 0.889170875, 0.899170847, 0.909172333, 0.919172319, 0.929173847, 0.939173847, 0.949175278, 0.959175278, 0.969176778, 0.979176736, 0.989178236, 0.999178208, 1.009179694, 1.019179694] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:25.363" endtime="20201116 13:05:25.364"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.356" endtime="20201116 13:05:25.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.367" endtime="20201116 13:05:25.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:25.370" endtime="20201116 13:05:25.390"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.369" endtime="20201116 13:05:25.391"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.365" endtime="20201116 13:05:25.391"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:22.839" endtime="20201116 13:05:25.391"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.284" endtime="20201116 13:05:25.392"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:20.283" endtime="20201116 13:05:25.392"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:25.394" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:25.402" endtime="20201116 13:05:27.518"></status>
</kw>
<msg timestamp="20201116 13:05:27.520" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 35106100, 'wakeups': [35116141, 35126139, 35136141, 35146140, 35156139...</msg>
<status status="PASS" starttime="20201116 13:05:25.401" endtime="20201116 13:05:27.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.525" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 35106100, 'wakeups': [35116141, 35126139, 35136141, 35146140, 35156139...</msg>
<status status="PASS" starttime="20201116 13:05:27.522" endtime="20201116 13:05:27.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.528" endtime="20201116 13:05:27.531"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.398" endtime="20201116 13:05:27.532"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.396" endtime="20201116 13:05:27.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:27.539" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [35116141, 35126139, 35136141, 35146140, 35156139, 35166140, 35176139, 35186140, 35196139, 35206140, 35216139, 35226140, 35236139, 35246140, 35256139, 35266140, 35...</msg>
<status status="PASS" starttime="20201116 13:05:27.534" endtime="20201116 13:05:27.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.547" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:27.545" endtime="20201116 13:05:27.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.551" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:27.549" endtime="20201116 13:05:27.552"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.540" endtime="20201116 13:05:27.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.557" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:27.556" endtime="20201116 13:05:27.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.559" level="INFO">VALUE: 35106100</msg>
<status status="PASS" starttime="20201116 13:05:27.558" endtime="20201116 13:05:27.559"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.554" endtime="20201116 13:05:27.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.564" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:27.563" endtime="20201116 13:05:27.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.566" level="INFO">VALUE: [35116141, 35126139, 35136141, 35146140, 35156139, 35166140, 35176139, 35186140, 35196139, 35206140, 35216139, 35226140, 35236139, 35246140, 35256139, 35266140, 35276139, 35286140, 35296139, 35306140, 35316139, 35326140, 35336139, 35346140, 35356139, 35366140, 35376139, 35386140, 35396139, 35406140, 35416139, 35426140, 35436139, 35446140, 35456139, 35466140, 35476139, 35486140, 35496139, 35506140, 35516139, 35526140, 35536139, 35546140, 35556139, 35566140, 35576139, 35586140, 35596139, 35606140, 35616139, 35626140, 35636139, 35646140, 35656139, 35666140, 35676139, 35686140, 35696139, 35706140, 35716139, 35726140, 35736139, 35746140, 35756139, 35766140, 35776139, 35786140, 35796139, 35806140, 35816139, 35826140, 35836139, 35846140, 35856139, 35866140, 35876139, 35886140, 35896139, 35906140, 35916139, 35926140, 35936139, 35946140, 35956139, 35966140, 35976139, 35986140, 35996139, 36006140, 36016139, 36026140, 36036139, 36046140, 36056139, 36066140, 36076139, 36086140, 36096139, 36106140]</msg>
<status status="PASS" starttime="20201116 13:05:27.565" endtime="20201116 13:05:27.566"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.561" endtime="20201116 13:05:27.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.580" endtime="20201116 13:05:27.873"></status>
</kw>
<msg timestamp="20201116 13:05:27.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031865417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:27.578" endtime="20201116 13:05:27.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031865417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:27.877" endtime="20201116 13:05:27.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.884" endtime="20201116 13:05:27.886"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.569" endtime="20201116 13:05:27.887"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.568" endtime="20201116 13:05:27.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:27.910" level="INFO">${RESULT} = {'source_diff': [0, 0.010042138999999999, 0.009998208000000001, 0.010002805999999996, 0.010000263000000002, 0.009999152999999997, 0.010002320000000009, 0.009999151999999997, 0.010002334000000002, 0.00...</msg>
<status status="PASS" starttime="20201116 13:05:27.888" endtime="20201116 13:05:27.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.914" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:27.913" endtime="20201116 13:05:27.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.916" level="INFO">VALUE: 0.021823278</msg>
<status status="PASS" starttime="20201116 13:05:27.915" endtime="20201116 13:05:27.917"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.911" endtime="20201116 13:05:27.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.922" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:27.921" endtime="20201116 13:05:27.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:27.924" level="INFO">VALUE: [0.031865417, 0.041863625, 0.051866431, 0.061866694, 0.071865847, 0.081868167, 0.091867319, 0.101869653, 0.111868833, 0.121871125, 0.131870333, 0.141872611, 0.15187175, 0.161874125, 0.171873236, 0.181875569, 0.191874708, 0.201877042, 0.211876208, 0.221878528, 0.231877667, 0.24188, 0.251879167, 0.261881472, 0.271880625, 0.281882944, 0.291882111, 0.301884444, 0.311883639, 0.321885903, 0.331885083, 0.341887389, 0.351886556, 0.361888861, 0.371888014, 0.381890361, 0.3918895, 0.401891819, 0.411890972, 0.421893306, 0.4318925, 0.441894792, 0.451893931, 0.461896264, 0.471895417, 0.481897736, 0.491896875, 0.501899181, 0.511898389, 0.521900667, 0.531899806, 0.541902125, 0.551901333, 0.561903583, 0.571902736, 0.581905042, 0.591904194, 0.601906514, 0.611905736, 0.621908, 0.631907125, 0.641909444, 0.651908597, 0.661910917, 0.671910069, 0.681912375, 0.691911528, 0.701913861, 0.711913056, 0.721915375, 0.731914514, 0.741916778, 0.751915931, 0.76191825, 0.771917403, 0.781919736, 0.791918861, 0.801921194, 0.811920347, 0.821922722, 0.831921819, 0.841924125, 0.851923278, 0.861925597, 0.87192475, 0.881927069, 0.891926208, 0.901928528, 0.911927681, 0.921930014, 0.931929153, 0.941931472, 0.951930625, 0.961932944, 0.971932167, 0.981934403, 0.991933556, 1.001935875, 1.011935042, 1.021937333] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:27.923" endtime="20201116 13:05:27.924"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.918" endtime="20201116 13:05:27.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.927" endtime="20201116 13:05:27.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:27.930" endtime="20201116 13:05:27.950"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.929" endtime="20201116 13:05:27.950"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.925" endtime="20201116 13:05:27.951"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.395" endtime="20201116 13:05:27.951"></status>
</kw>
<msg timestamp="20201116 13:05:27.951" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:27.960" endtime="20201116 13:05:30.075"></status>
</kw>
<msg timestamp="20201116 13:05:30.077" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 37663946, 'wakeups': [37673985, 37683986, 37693987, 37703986, 37713985...</msg>
<status status="PASS" starttime="20201116 13:05:27.958" endtime="20201116 13:05:30.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 37663946, 'wakeups': [37673985, 37683986, 37693987, 37703986, 37713985...</msg>
<status status="PASS" starttime="20201116 13:05:30.080" endtime="20201116 13:05:30.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.085" endtime="20201116 13:05:30.089"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.955" endtime="20201116 13:05:30.090"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.953" endtime="20201116 13:05:30.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:30.096" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [37673985, 37683986, 37693987, 37703986, 37713985, 37723986, 37733985, 37743986, 37753985, 37763986, 37773985, 37783986, 37793985, 37803986, 37813985, 37823986, 37...</msg>
<status status="PASS" starttime="20201116 13:05:30.092" endtime="20201116 13:05:30.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.105" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:30.103" endtime="20201116 13:05:30.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.109" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:30.107" endtime="20201116 13:05:30.109"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.098" endtime="20201116 13:05:30.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.113" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:30.112" endtime="20201116 13:05:30.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.115" level="INFO">VALUE: 37663946</msg>
<status status="PASS" starttime="20201116 13:05:30.114" endtime="20201116 13:05:30.116"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.110" endtime="20201116 13:05:30.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.120" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:30.119" endtime="20201116 13:05:30.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.122" level="INFO">VALUE: [37673985, 37683986, 37693987, 37703986, 37713985, 37723986, 37733985, 37743986, 37753985, 37763986, 37773985, 37783986, 37793985, 37803986, 37813985, 37823986, 37833985, 37843986, 37853985, 37863986, 37873985, 37883986, 37893985, 37903986, 37913985, 37923986, 37933985, 37943986, 37953985, 37963986, 37973985, 37983986, 37993985, 38003986, 38013985, 38023986, 38033985, 38043986, 38053985, 38063986, 38073985, 38083986, 38093985, 38103986, 38113985, 38123986, 38133985, 38143986, 38153985, 38163986, 38173985, 38183986, 38193985, 38203986, 38213985, 38223986, 38233985, 38243986, 38253985, 38263986, 38273985, 38283986, 38293985, 38303986, 38313985, 38323986, 38333985, 38343986, 38353985, 38363986, 38373985, 38383986, 38393985, 38403986, 38413985, 38423986, 38433985, 38443986, 38453985, 38463986, 38473985, 38483986, 38493985, 38503986, 38513985, 38523986, 38533985, 38543986, 38553985, 38563986, 38573985, 38583986, 38593985, 38603986, 38613985, 38623986, 38633985, 38643986, 38653985, 38663986]</msg>
<status status="PASS" starttime="20201116 13:05:30.121" endtime="20201116 13:05:30.123"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.117" endtime="20201116 13:05:30.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.130" endtime="20201116 13:05:30.422"></status>
</kw>
<msg timestamp="20201116 13:05:30.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03000725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:05:30.128" endtime="20201116 13:05:30.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03000725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:05:30.426" endtime="20201116 13:05:30.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.433" endtime="20201116 13:05:30.435"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.126" endtime="20201116 13:05:30.435"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.124" endtime="20201116 13:05:30.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:30.459" level="INFO">${RESULT} = {'source_diff': [0, 0.010040971999999999, 0.010001028000000002, 0.010001763999999996, 0.010000319, 0.009999167000000003, 0.010002346999999995, 0.009999124999999998, 0.01000231900000001, 0.009999167000...</msg>
<status status="PASS" starttime="20201116 13:05:30.436" endtime="20201116 13:05:30.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.464" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:05:30.463" endtime="20201116 13:05:30.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.466" level="INFO">VALUE: 0.019966278</msg>
<status status="PASS" starttime="20201116 13:05:30.465" endtime="20201116 13:05:30.467"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.461" endtime="20201116 13:05:30.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.472" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:30.471" endtime="20201116 13:05:30.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:30.474" level="INFO">VALUE: [0.03000725, 0.040008278, 0.050010042, 0.060010361, 0.070009528, 0.080011875, 0.090011, 0.100013319, 0.110012486, 0.120014806, 0.130013944, 0.140016292, 0.150015417, 0.16001775, 0.170016903, 0.180019222, 0.190018375, 0.200020708, 0.210019847, 0.220022181, 0.230021333, 0.240023653, 0.250022806, 0.260025139, 0.270024292, 0.280026625, 0.290025778, 0.300028097, 0.310027236, 0.320029583, 0.330028764, 0.340031042, 0.350030194, 0.360032528, 0.370031681, 0.380034, 0.390033153, 0.4000355, 0.410034639, 0.420036958, 0.430036111, 0.440038458, 0.450037611, 0.460039917, 0.470039111, 0.480041417, 0.490040556, 0.500042875, 0.510042028, 0.520044361, 0.530043528, 0.540045833, 0.550044986, 0.560047333, 0.570046542, 0.580048792, 0.590047944, 0.600050278, 0.610049431, 0.620051806, 0.630050903, 0.640053208, 0.650052361, 0.660054736, 0.670053819, 0.680056139, 0.690055306, 0.700057611, 0.710056764, 0.720059083, 0.730058236, 0.740060542, 0.750059681, 0.760062, 0.770061222, 0.780063472, 0.790062625, 0.800064931, 0.810064097, 0.820066417, 0.830065556, 0.840067875, 0.850067014, 0.860069347, 0.870068514, 0.880070819, 0.890069944, 0.900072264, 0.910071444, 0.920073736, 0.930072889, 0.940075236, 0.950074347, 0.960076681, 0.970075833, 0.980078139, 0.990077292, 1.000079597, 1.01007875, 1.020081069] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:30.473" endtime="20201116 13:05:30.474"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.468" endtime="20201116 13:05:30.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.477" endtime="20201116 13:05:30.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:30.480" endtime="20201116 13:05:30.500"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.479" endtime="20201116 13:05:30.500"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.475" endtime="20201116 13:05:30.501"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:27.952" endtime="20201116 13:05:30.501"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.393" endtime="20201116 13:05:30.501"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:25.392" endtime="20201116 13:05:30.501"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:30.504" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:30.512" endtime="20201116 13:05:32.627"></status>
</kw>
<msg timestamp="20201116 13:05:32.629" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 40215802, 'wakeups': [40225852, 40235851, 40245849, 40255851, 40265851...</msg>
<status status="PASS" starttime="20201116 13:05:30.511" endtime="20201116 13:05:32.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.634" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 40215802, 'wakeups': [40225852, 40235851, 40245849, 40255851, 40265851...</msg>
<status status="PASS" starttime="20201116 13:05:32.631" endtime="20201116 13:05:32.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:32.637" endtime="20201116 13:05:32.640"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.508" endtime="20201116 13:05:32.641"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.506" endtime="20201116 13:05:32.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:32.648" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [40225852, 40235851, 40245849, 40255851, 40265851, 40275851, 40285851, 40295851, 40305851, 40315851, 40325851, 40335851, 40345851, 40355851, 40365851, 40375851, 40...</msg>
<status status="PASS" starttime="20201116 13:05:32.644" endtime="20201116 13:05:32.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.661" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:32.654" endtime="20201116 13:05:32.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.664" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:32.663" endtime="20201116 13:05:32.664"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.649" endtime="20201116 13:05:32.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.671" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:32.670" endtime="20201116 13:05:32.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.673" level="INFO">VALUE: 40215802</msg>
<status status="PASS" starttime="20201116 13:05:32.672" endtime="20201116 13:05:32.673"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.666" endtime="20201116 13:05:32.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.678" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:32.677" endtime="20201116 13:05:32.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.680" level="INFO">VALUE: [40225852, 40235851, 40245849, 40255851, 40265851, 40275851, 40285851, 40295851, 40305851, 40315851, 40325851, 40335851, 40345851, 40355851, 40365851, 40375851, 40385851, 40395851, 40405851, 40415851, 40425851, 40435851, 40445851, 40455851, 40465851, 40475851, 40485851, 40495851, 40505851, 40515851, 40525851, 40535851, 40545851, 40555851, 40565851, 40575851, 40585851, 40595851, 40605851, 40615851, 40625851, 40635851, 40645851, 40655851, 40665851, 40675851, 40685851, 40695851, 40705851, 40715851, 40725851, 40735851, 40745851, 40755851, 40765851, 40775851, 40785851, 40795851, 40805851, 40815851, 40825851, 40835851, 40845851, 40855851, 40865851, 40875851, 40885851, 40895851, 40905851, 40915851, 40925851, 40935851, 40945851, 40955851, 40965851, 40975851, 40985851, 40995851, 41005851, 41015851, 41025851, 41035851, 41045851, 41055851, 41065851, 41075851, 41085851, 41095851, 41105851, 41115851, 41125851, 41135851, 41145851, 41155851, 41165851, 41175851, 41185851, 41195851, 41205851, 41215851]</msg>
<status status="PASS" starttime="20201116 13:05:32.679" endtime="20201116 13:05:32.680"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.674" endtime="20201116 13:05:32.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:32.687" endtime="20201116 13:05:32.977"></status>
</kw>
<msg timestamp="20201116 13:05:32.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031968, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:05:32.685" endtime="20201116 13:05:32.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:32.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031968, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:05:32.981" endtime="20201116 13:05:32.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:32.989" endtime="20201116 13:05:32.991"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.683" endtime="20201116 13:05:32.991"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:32.681" endtime="20201116 13:05:32.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:33.014" level="INFO">${RESULT} = {'source_diff': [0, 0.010050806000000002, 0.009999292, 0.009998721999999995, 0.010002764000000004, 0.010000694000000004, 0.010000763999999995, 0.010000722000000004, 0.010000819999999994, 0.01000065299...</msg>
<status status="PASS" starttime="20201116 13:05:32.992" endtime="20201116 13:05:33.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.019" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:33.018" endtime="20201116 13:05:33.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.021" level="INFO">VALUE: 0.021917194</msg>
<status status="PASS" starttime="20201116 13:05:33.020" endtime="20201116 13:05:33.021"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.015" endtime="20201116 13:05:33.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.027" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:33.026" endtime="20201116 13:05:33.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:33.029" level="INFO">VALUE: [0.031968, 0.041967292, 0.051966014, 0.061968778, 0.071969472, 0.081970236, 0.091970958, 0.101971778, 0.111972431, 0.121973208, 0.131973903, 0.141974667, 0.151975389, 0.161976153, 0.171976861, 0.181977625, 0.191978333, 0.201979139, 0.211979819, 0.221980639, 0.231981292, 0.241982056, 0.251982778, 0.261983528, 0.271984264, 0.281985028, 0.291985736, 0.3019865, 0.311987208, 0.321987972, 0.331988681, 0.341989458, 0.351990167, 0.361990931, 0.371991639, 0.381992403, 0.391993181, 0.401993875, 0.411994569, 0.421995361, 0.431996028, 0.441996806, 0.4519975, 0.46199825, 0.471998986, 0.481999736, 0.492000444, 0.502001181, 0.512001889, 0.522002667, 0.532003361, 0.542004125, 0.552004833, 0.562005583, 0.572006292, 0.582007056, 0.592007764, 0.602008514, 0.61200925, 0.622009986, 0.632010694, 0.642011458, 0.652012236, 0.662012931, 0.672013625, 0.682014403, 0.692015125, 0.702015861, 0.712016569, 0.722017319, 0.732018042, 0.742018819, 0.7520195, 0.76202025, 0.772020958, 0.782021736, 0.792022431, 0.802023208, 0.812023917, 0.822024653, 0.832025361, 0.842026125, 0.852026847, 0.862027597, 0.872028319, 0.882029056, 0.892029778, 0.902030528, 0.91203125, 0.922032014, 0.932032708, 0.942033458, 0.952034181, 0.962034931, 0.972035639, 0.982036417, 0.992037111, 1.002037931, 1.012038583, 1.022039333] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:33.028" endtime="20201116 13:05:33.030"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.022" endtime="20201116 13:05:33.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.033" endtime="20201116 13:05:33.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:33.036" endtime="20201116 13:05:33.055"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.035" endtime="20201116 13:05:33.056"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.031" endtime="20201116 13:05:33.056"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.505" endtime="20201116 13:05:33.057"></status>
</kw>
<msg timestamp="20201116 13:05:33.057" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:33.065" endtime="20201116 13:05:35.181"></status>
</kw>
<msg timestamp="20201116 13:05:35.182" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 42768777, 'wakeups': [42778826, 42788824, 42798824, 42808826, 42818826...</msg>
<status status="PASS" starttime="20201116 13:05:33.063" endtime="20201116 13:05:35.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.188" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 42768777, 'wakeups': [42778826, 42788824, 42798824, 42808826, 42818826...</msg>
<status status="PASS" starttime="20201116 13:05:35.184" endtime="20201116 13:05:35.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.190" endtime="20201116 13:05:35.194"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.061" endtime="20201116 13:05:35.195"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.059" endtime="20201116 13:05:35.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:35.201" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [42778826, 42788824, 42798824, 42808826, 42818826, 42828826, 42838826, 42848826, 42858826, 42868826, 42878826, 42888826, 42898826, 42908826, 42918826, 42928826, 42...</msg>
<status status="PASS" starttime="20201116 13:05:35.197" endtime="20201116 13:05:35.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.210" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:35.207" endtime="20201116 13:05:35.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.214" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:35.212" endtime="20201116 13:05:35.214"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.203" endtime="20201116 13:05:35.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.221" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:35.220" endtime="20201116 13:05:35.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.223" level="INFO">VALUE: 42768777</msg>
<status status="PASS" starttime="20201116 13:05:35.222" endtime="20201116 13:05:35.223"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.217" endtime="20201116 13:05:35.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.228" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:35.227" endtime="20201116 13:05:35.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.230" level="INFO">VALUE: [42778826, 42788824, 42798824, 42808826, 42818826, 42828826, 42838826, 42848826, 42858826, 42868826, 42878826, 42888826, 42898826, 42908826, 42918826, 42928826, 42938826, 42948826, 42958826, 42968826, 42978826, 42988826, 42998826, 43008826, 43018826, 43028826, 43038826, 43048826, 43058826, 43068826, 43078826, 43088826, 43098826, 43108826, 43118826, 43128826, 43138826, 43148826, 43158826, 43168826, 43178826, 43188826, 43198826, 43208826, 43218826, 43228826, 43238826, 43248826, 43258826, 43268826, 43278826, 43288826, 43298826, 43308826, 43318826, 43328826, 43338826, 43348826, 43358826, 43368826, 43378826, 43388826, 43398826, 43408826, 43418826, 43428826, 43438826, 43448826, 43458826, 43468826, 43478826, 43488826, 43498826, 43508826, 43518826, 43528826, 43538826, 43548826, 43558826, 43568826, 43578826, 43588826, 43598826, 43608826, 43618826, 43628826, 43638826, 43648826, 43658826, 43668826, 43678826, 43688826, 43698826, 43708826, 43718826, 43728826, 43738826, 43748826, 43758826, 43768826]</msg>
<status status="PASS" starttime="20201116 13:05:35.229" endtime="20201116 13:05:35.230"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.224" endtime="20201116 13:05:35.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.239" endtime="20201116 13:05:35.530"></status>
</kw>
<msg timestamp="20201116 13:05:35.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019126236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029176375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:35.236" endtime="20201116 13:05:35.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019126236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029176375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:35.534" endtime="20201116 13:05:35.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.541" endtime="20201116 13:05:35.543"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.234" endtime="20201116 13:05:35.544"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.231" endtime="20201116 13:05:35.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:35.567" level="INFO">${RESULT} = {'source_diff': [0, 0.010050139, 0.009998457999999998, 0.01000057, 0.010002763999999997, 0.010000721999999997, 0.01000076400000001, 0.010000707999999997, 0.010000791999999994, 0.010000694000000004, 0....</msg>
<status status="PASS" starttime="20201116 13:05:35.545" endtime="20201116 13:05:35.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.571" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:05:35.570" endtime="20201116 13:05:35.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.573" level="INFO">VALUE: 0.019126236</msg>
<status status="PASS" starttime="20201116 13:05:35.572" endtime="20201116 13:05:35.574"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.568" endtime="20201116 13:05:35.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.579" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:35.578" endtime="20201116 13:05:35.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:35.581" level="INFO">VALUE: [0.029176375, 0.039174833, 0.049175403, 0.059178167, 0.069178889, 0.079179653, 0.089180361, 0.099181153, 0.109181847, 0.119182597, 0.129183319, 0.139184069, 0.149184806, 0.159185556, 0.169186264, 0.179187069, 0.189187736, 0.1991885, 0.209189236, 0.21919, 0.229190694, 0.239191458, 0.249192181, 0.259192931, 0.269193681, 0.279194417, 0.289195139, 0.299195889, 0.309196611, 0.319197389, 0.329198083, 0.339198861, 0.349199556, 0.359200319, 0.369201042, 0.379201819, 0.389202514, 0.399203292, 0.409204014, 0.419204764, 0.429205542, 0.439206236, 0.449206931, 0.459207681, 0.469208403, 0.479209153, 0.489209861, 0.499210611, 0.509211333, 0.519212125, 0.529212806, 0.539213542, 0.549214264, 0.559215069, 0.569215722, 0.579216472, 0.589217181, 0.599217944, 0.609218667, 0.619219444, 0.629220111, 0.639220889, 0.649221583, 0.659222347, 0.669223097, 0.679223819, 0.689224514, 0.699225278, 0.709226042, 0.719226736, 0.729227458, 0.739228236, 0.749228944, 0.759229681, 0.769230375, 0.779231139, 0.789231861, 0.799232611, 0.809233403, 0.819234083, 0.829234792, 0.839235569, 0.849236264, 0.859237014, 0.869237736, 0.879238486, 0.889239208, 0.899239944, 0.909240653, 0.919241417, 0.929242153, 0.939242875, 0.949243611, 0.959244347, 0.969245069, 0.979245833, 0.989246528, 0.999247278, 1.009248028, 1.019248764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:35.580" endtime="20201116 13:05:35.581"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.575" endtime="20201116 13:05:35.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.584" endtime="20201116 13:05:35.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:35.587" endtime="20201116 13:05:35.606"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.586" endtime="20201116 13:05:35.607"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.582" endtime="20201116 13:05:35.608"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:33.058" endtime="20201116 13:05:35.608"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.502" endtime="20201116 13:05:35.608"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:30.502" endtime="20201116 13:05:35.608"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:35.611" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:35.620" endtime="20201116 13:05:37.736"></status>
</kw>
<msg timestamp="20201116 13:05:37.738" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 45324005, 'wakeups': [45334064, 45344059, 45354060, 45364060, 45374060...</msg>
<status status="PASS" starttime="20201116 13:05:35.618" endtime="20201116 13:05:37.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.743" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 45324005, 'wakeups': [45334064, 45344059, 45354060, 45364060, 45374060...</msg>
<status status="PASS" starttime="20201116 13:05:37.740" endtime="20201116 13:05:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:37.746" endtime="20201116 13:05:37.749"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.615" endtime="20201116 13:05:37.750"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.613" endtime="20201116 13:05:37.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:37.757" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [45334064, 45344059, 45354060, 45364060, 45374060, 45384060, 45394060, 45404060, 45414060, 45424060, 45434060, 45444060, 45454060, 45464060, 45474060, 45484060, 45...</msg>
<status status="PASS" starttime="20201116 13:05:37.753" endtime="20201116 13:05:37.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.765" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:37.763" endtime="20201116 13:05:37.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.769" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:37.767" endtime="20201116 13:05:37.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.758" endtime="20201116 13:05:37.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.776" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:37.775" endtime="20201116 13:05:37.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.778" level="INFO">VALUE: 45324005</msg>
<status status="PASS" starttime="20201116 13:05:37.777" endtime="20201116 13:05:37.778"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.772" endtime="20201116 13:05:37.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.783" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:37.782" endtime="20201116 13:05:37.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:37.785" level="INFO">VALUE: [45334064, 45344059, 45354060, 45364060, 45374060, 45384060, 45394060, 45404060, 45414060, 45424060, 45434060, 45444060, 45454060, 45464060, 45474060, 45484060, 45494060, 45504060, 45514060, 45524060, 45534060, 45544060, 45554060, 45564060, 45574060, 45584060, 45594060, 45604060, 45614060, 45624060, 45634060, 45644060, 45654060, 45664060, 45674060, 45684060, 45694060, 45704060, 45714060, 45724060, 45734060, 45744060, 45754060, 45764060, 45774060, 45784060, 45794060, 45804060, 45814060, 45824060, 45834060, 45844060, 45854060, 45864060, 45874060, 45884060, 45894060, 45904060, 45914060, 45924060, 45934060, 45944060, 45954060, 45964060, 45974060, 45984060, 45994060, 46004060, 46014060, 46024060, 46034060, 46044060, 46054060, 46064060, 46074060, 46084060, 46094060, 46104060, 46114060, 46124060, 46134060, 46144060, 46154060, 46164060, 46174060, 46184060, 46194060, 46204060, 46214060, 46224060, 46234060, 46244060, 46254060, 46264060, 46274060, 46284060, 46294060, 46304060, 46314060, 46324060]</msg>
<status status="PASS" starttime="20201116 13:05:37.784" endtime="20201116 13:05:37.785"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.779" endtime="20201116 13:05:37.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:37.792" endtime="20201116 13:05:38.083"></status>
</kw>
<msg timestamp="20201116 13:05:38.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033226319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:37.791" endtime="20201116 13:05:38.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033226319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:38.087" endtime="20201116 13:05:38.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.094" endtime="20201116 13:05:38.100"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.788" endtime="20201116 13:05:38.101"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:37.786" endtime="20201116 13:05:38.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:38.125" level="INFO">${RESULT} = {'source_diff': [0, 0.010059776999999999, 0.009996598000000002, 0.010001457999999998, 0.010000500000000002, 0.010000722000000004, 0.010000750000000003, 0.01000072199999999, 0.010000750000000003, 0.010...</msg>
<status status="PASS" starttime="20201116 13:05:38.102" endtime="20201116 13:05:38.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.130" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:38.129" endtime="20201116 13:05:38.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.132" level="INFO">VALUE: 0.023166542</msg>
<status status="PASS" starttime="20201116 13:05:38.131" endtime="20201116 13:05:38.132"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.126" endtime="20201116 13:05:38.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.137" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:38.136" endtime="20201116 13:05:38.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:38.139" level="INFO">VALUE: [0.033226319, 0.043222917, 0.053224375, 0.063224875, 0.073225597, 0.083226347, 0.093227069, 0.103227819, 0.113228556, 0.123229306, 0.133230028, 0.143230792, 0.153231514, 0.163232236, 0.173233042, 0.183233722, 0.193234444, 0.203235194, 0.213235944, 0.223236667, 0.233237403, 0.243238139, 0.253238903, 0.263239639, 0.273240375, 0.283241097, 0.293241847, 0.303242569, 0.313243306, 0.323244125, 0.333244792, 0.343245528, 0.353246264, 0.363247014, 0.373247736, 0.3832485, 0.393249222, 0.403249958, 0.413250736, 0.423251444, 0.433252181, 0.443252931, 0.453253653, 0.463254403, 0.473255153, 0.483255889, 0.493256611, 0.503257347, 0.513258069, 0.523258806, 0.533259597, 0.543260264, 0.553261, 0.563261764, 0.573262458, 0.583263194, 0.593263917, 0.603264681, 0.613265389, 0.623266125, 0.633266847, 0.643267625, 0.653268333, 0.663269056, 0.673269778, 0.683270528, 0.693271306, 0.703271986, 0.713272708, 0.723273472, 0.733274181, 0.743274917, 0.753275653, 0.763276403, 0.773277125, 0.783277875, 0.793278583, 0.803279319, 0.813280056, 0.823280792, 0.833281514, 0.84328225, 0.853283, 0.863283722, 0.873284444, 0.883285194, 0.893285931, 0.903286653, 0.913287389, 0.923288181, 0.933288861, 0.943289597, 0.953290319, 0.963291056, 0.973291792, 0.983292528, 0.993293264, 1.003294, 1.013294722, 1.023295458] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:38.138" endtime="20201116 13:05:38.140"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.133" endtime="20201116 13:05:38.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.142" endtime="20201116 13:05:38.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:38.146" endtime="20201116 13:05:38.165"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.144" endtime="20201116 13:05:38.166"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.141" endtime="20201116 13:05:38.166"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.612" endtime="20201116 13:05:38.166"></status>
</kw>
<msg timestamp="20201116 13:05:38.167" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:38.175" endtime="20201116 13:05:40.273"></status>
</kw>
<msg timestamp="20201116 13:05:40.274" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 47878358, 'wakeups': [47888415, 47898413, 47908413, 47918413, 47928413...</msg>
<status status="PASS" starttime="20201116 13:05:38.173" endtime="20201116 13:05:40.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.277" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 47878358, 'wakeups': [47888415, 47898413, 47908413, 47918413, 47928413...</msg>
<status status="PASS" starttime="20201116 13:05:40.275" endtime="20201116 13:05:40.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.278" endtime="20201116 13:05:40.280"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.171" endtime="20201116 13:05:40.280"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.169" endtime="20201116 13:05:40.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:40.283" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [47888415, 47898413, 47908413, 47918413, 47928413, 47938413, 47948413, 47958413, 47968413, 47978413, 47988413, 47998413, 48008413, 48018413, 48028413, 48038413, 48...</msg>
<status status="PASS" starttime="20201116 13:05:40.281" endtime="20201116 13:05:40.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.288" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:40.287" endtime="20201116 13:05:40.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.291" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:40.290" endtime="20201116 13:05:40.291"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.284" endtime="20201116 13:05:40.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.296" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:40.295" endtime="20201116 13:05:40.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.298" level="INFO">VALUE: 47878358</msg>
<status status="PASS" starttime="20201116 13:05:40.297" endtime="20201116 13:05:40.298"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.292" endtime="20201116 13:05:40.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.303" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:40.302" endtime="20201116 13:05:40.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.305" level="INFO">VALUE: [47888415, 47898413, 47908413, 47918413, 47928413, 47938413, 47948413, 47958413, 47968413, 47978413, 47988413, 47998413, 48008413, 48018413, 48028413, 48038413, 48048413, 48058413, 48068413, 48078413, 48088413, 48098413, 48108413, 48118413, 48128413, 48138413, 48148413, 48158413, 48168413, 48178413, 48188413, 48198413, 48208413, 48218413, 48228413, 48238413, 48248413, 48258413, 48268413, 48278413, 48288413, 48298413, 48308413, 48318413, 48328413, 48338413, 48348413, 48358413, 48368413, 48378413, 48388413, 48398413, 48408413, 48418413, 48428413, 48438413, 48448413, 48458413, 48468413, 48478413, 48488413, 48498413, 48508413, 48518413, 48528413, 48538413, 48548413, 48558413, 48568413, 48578413, 48588413, 48598413, 48608413, 48618413, 48628413, 48638413, 48648413, 48658413, 48668413, 48678413, 48688413, 48698413, 48708413, 48718413, 48728413, 48738413, 48748413, 48758413, 48768413, 48778413, 48788413, 48798413, 48808413, 48818413, 48828413, 48838413, 48848413, 48858413, 48868413, 48878413]</msg>
<status status="PASS" starttime="20201116 13:05:40.304" endtime="20201116 13:05:40.305"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.299" endtime="20201116 13:05:40.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.312" endtime="20201116 13:05:40.604"></status>
</kw>
<msg timestamp="20201116 13:05:40.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018976347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029034556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:40.311" endtime="20201116 13:05:40.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018976347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029034556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:40.608" endtime="20201116 13:05:40.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.615" endtime="20201116 13:05:40.617"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.308" endtime="20201116 13:05:40.618"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.306" endtime="20201116 13:05:40.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:40.641" level="INFO">${RESULT} = {'source_diff': [0, 0.010058208999999999, 0.009999471999999999, 0.010000472000000003, 0.010000556, 0.010000651999999999, 0.010000778000000002, 0.010000707999999997, 0.010000736999999996, 0.01000076300...</msg>
<status status="PASS" starttime="20201116 13:05:40.619" endtime="20201116 13:05:40.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.646" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:05:40.645" endtime="20201116 13:05:40.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.648" level="INFO">VALUE: 0.018976347</msg>
<status status="PASS" starttime="20201116 13:05:40.647" endtime="20201116 13:05:40.649"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.642" endtime="20201116 13:05:40.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.654" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:40.653" endtime="20201116 13:05:40.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:40.656" level="INFO">VALUE: [0.029034556, 0.039034028, 0.0490345, 0.059035056, 0.069035708, 0.079036486, 0.089037194, 0.099037931, 0.109038694, 0.119039403, 0.129040139, 0.139040875, 0.149041611, 0.159042361, 0.169043097, 0.179043833, 0.189044583, 0.199045306, 0.209046056, 0.219046778, 0.229047514, 0.239048264, 0.249049, 0.259049736, 0.269050472, 0.279051222, 0.289051944, 0.299052694, 0.309053417, 0.319054194, 0.329054903, 0.339055639, 0.349056375, 0.359057153, 0.369057861, 0.379058597, 0.389059347, 0.399060069, 0.409060819, 0.419061556, 0.429062292, 0.439063028, 0.449063806, 0.459064514, 0.469065278, 0.479065986, 0.489066722, 0.499067486, 0.509068194, 0.519068944, 0.529069667, 0.539070431, 0.549071125, 0.559071875, 0.569072597, 0.579073347, 0.589074069, 0.599074792, 0.609075583, 0.619076264, 0.629076986, 0.639077722, 0.649078444, 0.65907925, 0.669079917, 0.679080667, 0.689081375, 0.699082111, 0.709082875, 0.719083583, 0.729084319, 0.739085056, 0.749085833, 0.759086514, 0.769087236, 0.779087986, 0.789088708, 0.799089458, 0.809090181, 0.819090917, 0.829091639, 0.839092389, 0.849093111, 0.859093847, 0.869094583, 0.879095333, 0.889096042, 0.899096778, 0.9090975, 0.919098306, 0.929098972, 0.939099708, 0.949100444, 0.959101194, 0.969101917, 0.979102639, 0.989103375, 0.999104111, 1.009104861, 1.019105583] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:40.655" endtime="20201116 13:05:40.657"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.650" endtime="20201116 13:05:40.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.659" endtime="20201116 13:05:40.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:40.663" endtime="20201116 13:05:40.682"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.661" endtime="20201116 13:05:40.683"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.658" endtime="20201116 13:05:40.683"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:38.167" endtime="20201116 13:05:40.683"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.609" endtime="20201116 13:05:40.684"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:35.609" endtime="20201116 13:05:40.684"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:05:40.686" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:40.694" endtime="20201116 13:05:42.794"></status>
</kw>
<msg timestamp="20201116 13:05:42.795" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 50398305, 'wakeups': [50408373, 50418369, 50428370, 50438369, 504483...</msg>
<status status="PASS" starttime="20201116 13:05:40.693" endtime="20201116 13:05:42.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 50398305, 'wakeups': [50408373, 50418369, 50428370, 50438369, 504483...</msg>
<status status="PASS" starttime="20201116 13:05:42.796" endtime="20201116 13:05:42.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:42.799" endtime="20201116 13:05:42.801"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.690" endtime="20201116 13:05:42.801"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.688" endtime="20201116 13:05:42.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:42.804" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [50408373, 50418369, 50428370, 50438369, 50448370, 50458370, 50468370, 50478370, 50488370, 50498370, 50508370, 50518370, 50528370, 50538370, 50548370, 50558370, 50...</msg>
<status status="PASS" starttime="20201116 13:05:42.802" endtime="20201116 13:05:42.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.808" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:42.807" endtime="20201116 13:05:42.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.810" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:42.809" endtime="20201116 13:05:42.811"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.805" endtime="20201116 13:05:42.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.815" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:42.814" endtime="20201116 13:05:42.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.817" level="INFO">VALUE: 50398305</msg>
<status status="PASS" starttime="20201116 13:05:42.816" endtime="20201116 13:05:42.818"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.812" endtime="20201116 13:05:42.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.823" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:42.822" endtime="20201116 13:05:42.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:42.825" level="INFO">VALUE: [50408373, 50418369, 50428370, 50438369, 50448370, 50458370, 50468370, 50478370, 50488370, 50498370, 50508370, 50518370, 50528370, 50538370, 50548370, 50558370, 50568370, 50578370, 50588370, 50598370, 50608370, 50618370, 50628370, 50638370, 50648370, 50658370, 50668370, 50678370, 50688370, 50698370, 50708370, 50718370, 50728370, 50738370, 50748370, 50758370, 50768370, 50778370, 50788370, 50798370, 50808370, 50818370, 50828370, 50838370, 50848370, 50858370, 50868370, 50878370, 50888370, 50898370, 50908370, 50918370, 50928370, 50938370, 50948370, 50958370, 50968370, 50978370, 50988370, 50998370, 51008370, 51018370, 51028370, 51038370, 51048370, 51058370, 51068370, 51078370, 51088370, 51098370, 51108370, 51118370, 51128370, 51138370, 51148370, 51158370, 51168370, 51178370, 51188370, 51198370, 51208370, 51218370, 51228370, 51238370, 51248370, 51258370, 51268370, 51278370, 51288370, 51298370, 51308370, 51318370, 51328370, 51338370, 51348370, 51358370, 51368370, 51378370, 51388370, 51398370]</msg>
<status status="PASS" starttime="20201116 13:05:42.824" endtime="20201116 13:05:42.825"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.819" endtime="20201116 13:05:42.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:42.833" endtime="20201116 13:05:43.123"></status>
</kw>
<msg timestamp="20201116 13:05:43.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032107167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:42.832" endtime="20201116 13:05:43.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032107167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:05:43.126" endtime="20201116 13:05:43.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.134" endtime="20201116 13:05:43.136"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.829" endtime="20201116 13:05:43.136"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:42.826" endtime="20201116 13:05:43.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:43.160" level="INFO">${RESULT} = {'source_diff': [0, 0.010069334, 0.009996416000000001, 0.010001584, 0.010000485999999996, 0.010001069000000001, 0.010001320000000008, 0.010000138999999991, 0.010001333000000001, 0.010000139000000005, ...</msg>
<status status="PASS" starttime="20201116 13:05:43.138" endtime="20201116 13:05:43.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.165" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:43.164" endtime="20201116 13:05:43.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.167" level="INFO">VALUE: 0.022037833</msg>
<status status="PASS" starttime="20201116 13:05:43.166" endtime="20201116 13:05:43.167"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.161" endtime="20201116 13:05:43.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.172" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:43.171" endtime="20201116 13:05:43.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:43.174" level="INFO">VALUE: [0.032107167, 0.042103583, 0.052105167, 0.062105653, 0.072106722, 0.082108042, 0.092108181, 0.102109514, 0.112109653, 0.122110986, 0.132111139, 0.142112458, 0.152112625, 0.162113958, 0.172114097, 0.182115417, 0.192115569, 0.202116889, 0.212117028, 0.222118361, 0.232118514, 0.242119847, 0.252119986, 0.262121361, 0.272121458, 0.282122792, 0.292122931, 0.302124264, 0.312124472, 0.322125736, 0.332125917, 0.342127222, 0.352127347, 0.362128681, 0.372128806, 0.382130181, 0.392130278, 0.402131611, 0.412131806, 0.422133083, 0.432133236, 0.442134542, 0.452134694, 0.462136056, 0.472136208, 0.482137528, 0.492137625, 0.502138958, 0.512139083, 0.522140417, 0.532140556, 0.542141903, 0.552142028, 0.562143375, 0.5721435, 0.582144833, 0.592144958, 0.602146306, 0.612146444, 0.622147806, 0.632147903, 0.642149236, 0.652149375, 0.662150708, 0.672150847, 0.682152194, 0.692152306, 0.702153653, 0.712153778, 0.722155111, 0.732155264, 0.742156583, 0.752156736, 0.762158083, 0.772158194, 0.782159528, 0.792159681, 0.802161, 0.812161139, 0.822162472, 0.832162611, 0.842163931, 0.852164069, 0.862165403, 0.872165542, 0.882166875, 0.892167014, 0.902168375, 0.912168514, 0.922169819, 0.932169972, 0.942171292, 0.952171431, 0.962172764, 0.972172903, 0.982174222, 0.992174375, 1.002175694, 1.012175847, 1.022177167] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:43.173" endtime="20201116 13:05:43.175"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.168" endtime="20201116 13:05:43.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.178" endtime="20201116 13:05:43.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:43.186" endtime="20201116 13:05:43.206"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.185" endtime="20201116 13:05:43.207"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.176" endtime="20201116 13:05:43.207"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.687" endtime="20201116 13:05:43.208"></status>
</kw>
<msg timestamp="20201116 13:05:43.208" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:43.217" endtime="20201116 13:05:45.334"></status>
</kw>
<msg timestamp="20201116 13:05:45.335" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 52920418, 'wakeups': [52930484, 52940482, 52950483, 52960482, 529704...</msg>
<status status="PASS" starttime="20201116 13:05:43.215" endtime="20201116 13:05:45.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.339" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 52920418, 'wakeups': [52930484, 52940482, 52950483, 52960482, 529704...</msg>
<status status="PASS" starttime="20201116 13:05:45.337" endtime="20201116 13:05:45.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:45.340" endtime="20201116 13:05:45.342"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.212" endtime="20201116 13:05:45.342"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.210" endtime="20201116 13:05:45.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:45.345" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [52930484, 52940482, 52950483, 52960482, 52970483, 52980483, 52990483, 53000483, 53010483, 53020483, 53030483, 53040483, 53050483, 53060483, 53070483, 53080483, 53...</msg>
<status status="PASS" starttime="20201116 13:05:45.343" endtime="20201116 13:05:45.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.349" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:05:45.348" endtime="20201116 13:05:45.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.351" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:05:45.350" endtime="20201116 13:05:45.352"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.346" endtime="20201116 13:05:45.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.356" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:45.355" endtime="20201116 13:05:45.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.358" level="INFO">VALUE: 52920418</msg>
<status status="PASS" starttime="20201116 13:05:45.357" endtime="20201116 13:05:45.359"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.353" endtime="20201116 13:05:45.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.363" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:45.362" endtime="20201116 13:05:45.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.365" level="INFO">VALUE: [52930484, 52940482, 52950483, 52960482, 52970483, 52980483, 52990483, 53000483, 53010483, 53020483, 53030483, 53040483, 53050483, 53060483, 53070483, 53080483, 53090483, 53100483, 53110483, 53120483, 53130483, 53140483, 53150483, 53160483, 53170483, 53180483, 53190483, 53200483, 53210483, 53220483, 53230483, 53240483, 53250483, 53260483, 53270483, 53280483, 53290483, 53300483, 53310483, 53320483, 53330483, 53340483, 53350483, 53360483, 53370483, 53380483, 53390483, 53400483, 53410483, 53420483, 53430483, 53440483, 53450483, 53460483, 53470483, 53480483, 53490483, 53500483, 53510483, 53520483, 53530483, 53540483, 53550483, 53560483, 53570483, 53580483, 53590483, 53600483, 53610483, 53620483, 53630483, 53640483, 53650483, 53660483, 53670483, 53680483, 53690483, 53700483, 53710483, 53720483, 53730483, 53740483, 53750483, 53760483, 53770483, 53780483, 53790483, 53800483, 53810483, 53820483, 53830483, 53840483, 53850483, 53860483, 53870483, 53880483, 53890483, 53900483, 53910483, 53920483]</msg>
<status status="PASS" starttime="20201116 13:05:45.364" endtime="20201116 13:05:45.366"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.360" endtime="20201116 13:05:45.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:45.373" endtime="20201116 13:05:45.664"></status>
</kw>
<msg timestamp="20201116 13:05:45.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0301605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:05:45.371" endtime="20201116 13:05:45.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0301605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201116 13:05:45.668" endtime="20201116 13:05:45.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:45.675" endtime="20201116 13:05:45.677"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.368" endtime="20201116 13:05:45.677"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.367" endtime="20201116 13:05:45.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:05:45.702" level="INFO">${RESULT} = {'source_diff': [0, 0.010067680999999998, 0.009998403000000003, 0.010001568999999995, 0.010000514000000002, 0.010001027999999995, 0.010001333000000001, 0.010000195000000003, 0.010001290999999995, 0.01...</msg>
<status status="PASS" starttime="20201116 13:05:45.679" endtime="20201116 13:05:45.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.706" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:05:45.705" endtime="20201116 13:05:45.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.708" level="INFO">VALUE: 0.020092819</msg>
<status status="PASS" starttime="20201116 13:05:45.707" endtime="20201116 13:05:45.708"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.703" endtime="20201116 13:05:45.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.713" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:05:45.712" endtime="20201116 13:05:45.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:05:45.715" level="INFO">VALUE: [0.0301605, 0.040158903, 0.050160472, 0.060160986, 0.070162014, 0.080163347, 0.090163542, 0.100164833, 0.110165014, 0.120166319, 0.130166444, 0.140167792, 0.150167931, 0.160169264, 0.170169417, 0.180170736, 0.190170889, 0.200172222, 0.210172361, 0.220173694, 0.230173847, 0.240175181, 0.250175319, 0.260176667, 0.270176806, 0.280178139, 0.290178278, 0.300179625, 0.310179764, 0.320181111, 0.330181236, 0.340182569, 0.350182736, 0.360184069, 0.370184208, 0.380185542, 0.390185681, 0.400187069, 0.410187167, 0.420188528, 0.430188639, 0.440190014, 0.450190125, 0.460191458, 0.470191611, 0.480192958, 0.490193097, 0.500194417, 0.510194569, 0.520195958, 0.530196042, 0.540197361, 0.5501975, 0.560198833, 0.570198972, 0.580200292, 0.590200431, 0.600201764, 0.610201903, 0.620203222, 0.630203431, 0.640204694, 0.650204833, 0.660206167, 0.670206306, 0.680207639, 0.690207778, 0.700209097, 0.710209236, 0.720210569, 0.730210722, 0.740212042, 0.750212222, 0.7602135, 0.770213653, 0.780215, 0.790215111, 0.800216444, 0.810216583, 0.820217917, 0.830218056, 0.840219375, 0.850219597, 0.860220847, 0.870221, 0.880222319, 0.890222472, 0.900223806, 0.910223931, 0.920225264, 0.930225417, 0.940226736, 0.950226889, 0.960228194, 0.970228361, 0.980229681, 0.990229806, 1.000231139, 1.010231278, 1.020232611] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:05:45.714" endtime="20201116 13:05:45.716"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.709" endtime="20201116 13:05:45.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:05:45.719" endtime="20201116 13:05:45.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:05:45.722" endtime="20201116 13:05:45.741"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.721" endtime="20201116 13:05:45.742"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:45.717" endtime="20201116 13:05:45.742"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:43.208" endtime="20201116 13:05:45.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.685" endtime="20201116 13:05:45.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:05:40.684" endtime="20201116 13:05:45.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:04:54.819" endtime="20201116 13:05:45.743"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:04:54.750" endtime="20201116 13:05:45.745" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:04:53.199" endtime="20201116 13:05:45.751"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:04:51.172" endtime="20201116 13:05:45.761"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
