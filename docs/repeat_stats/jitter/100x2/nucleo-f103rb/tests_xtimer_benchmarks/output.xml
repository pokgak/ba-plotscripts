<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201116 13:06:01.957" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:06:03.215" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:06:03.231" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:06:05.057" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:06:03.211" endtime="20201116 13:06:05.059"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.065" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:06:05.061" endtime="20201116 13:06:05.065"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.208" endtime="20201116 13:06:05.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:05.072" endtime="20201116 13:06:05.404"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.069" endtime="20201116 13:06:05.406"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.438" endtime="20201116 13:06:05.460"></status>
</kw>
<msg timestamp="20201116 13:06:05.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:05.435" endtime="20201116 13:06:05.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:05.463" endtime="20201116 13:06:05.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.475" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:06:05.470" endtime="20201116 13:06:05.475"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:05.428" endtime="20201116 13:06:05.477"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:05.423" endtime="20201116 13:06:05.479"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.419" endtime="20201116 13:06:05.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:06:05.488" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:06:05.486" endtime="20201116 13:06:05.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.482" endtime="20201116 13:06:05.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.417" endtime="20201116 13:06:05.490"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.415" endtime="20201116 13:06:05.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.492" endtime="20201116 13:06:05.495"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.411" endtime="20201116 13:06:05.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.498" endtime="20201116 13:06:05.502"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.408" endtime="20201116 13:06:05.504"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:03.205" endtime="20201116 13:06:05.505"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:05.521" endtime="20201116 13:06:05.543"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.518" endtime="20201116 13:06:05.545"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.582" endtime="20201116 13:06:05.600"></status>
</kw>
<msg timestamp="20201116 13:06:05.602" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:05.578" endtime="20201116 13:06:05.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.608" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:05.604" endtime="20201116 13:06:05.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.615" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:06:05.611" endtime="20201116 13:06:05.616"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:05.571" endtime="20201116 13:06:05.618"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:05.564" endtime="20201116 13:06:05.619"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.560" endtime="20201116 13:06:05.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:06:05.629" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:06:05.628" endtime="20201116 13:06:05.630"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.623" endtime="20201116 13:06:05.630"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.558" endtime="20201116 13:06:05.631"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.556" endtime="20201116 13:06:05.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.633" endtime="20201116 13:06:05.636"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.551" endtime="20201116 13:06:05.638"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.547" endtime="20201116 13:06:05.639"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.515" endtime="20201116 13:06:05.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.658" endtime="20201116 13:06:05.672"></status>
</kw>
<msg timestamp="20201116 13:06:05.673" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:05.655" endtime="20201116 13:06:05.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.679" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:05.675" endtime="20201116 13:06:05.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:05.681" endtime="20201116 13:06:05.687"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.647" endtime="20201116 13:06:05.689"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.642" endtime="20201116 13:06:05.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.701" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:06:05.698" endtime="20201116 13:06:05.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.706" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201116 13:06:05.703" endtime="20201116 13:06:05.706"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.692" endtime="20201116 13:06:05.708"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:06:05.506" endtime="20201116 13:06:05.710" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:06:02.224" endtime="20201116 13:06:05.717"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:06:05.852" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:06:05.869" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:06:07.637" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:06:05.849" endtime="20201116 13:06:07.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:06:07.644" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:06:07.640" endtime="20201116 13:06:07.645"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.846" endtime="20201116 13:06:07.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:07.651" endtime="20201116 13:06:07.986"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.648" endtime="20201116 13:06:07.988"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.018" endtime="20201116 13:06:08.041"></status>
</kw>
<msg timestamp="20201116 13:06:08.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:08.015" endtime="20201116 13:06:08.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.049" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:08.045" endtime="20201116 13:06:08.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.056" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:06:08.051" endtime="20201116 13:06:08.057"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:08.009" endtime="20201116 13:06:08.059"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:08.003" endtime="20201116 13:06:08.060"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.000" endtime="20201116 13:06:08.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:06:08.069" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:06:08.068" endtime="20201116 13:06:08.070"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.063" endtime="20201116 13:06:08.072"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.998" endtime="20201116 13:06:08.073"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.996" endtime="20201116 13:06:08.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.075" endtime="20201116 13:06:08.078"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.993" endtime="20201116 13:06:08.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.081" endtime="20201116 13:06:08.085"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:07.990" endtime="20201116 13:06:08.087"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:05.843" endtime="20201116 13:06:08.088"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:08.104" endtime="20201116 13:06:08.126"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.100" endtime="20201116 13:06:08.128"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.161" endtime="20201116 13:06:08.181"></status>
</kw>
<msg timestamp="20201116 13:06:08.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:08.158" endtime="20201116 13:06:08.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:06:08.185" endtime="20201116 13:06:08.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:06:08.196" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:06:08.191" endtime="20201116 13:06:08.196"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:08.151" endtime="20201116 13:06:08.198"></status>
</kw>
<status status="FAIL" starttime="20201116 13:06:08.144" endtime="20201116 13:06:08.200"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.141" endtime="20201116 13:06:08.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:06:08.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:06:08.208" endtime="20201116 13:06:08.210"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.203" endtime="20201116 13:06:08.210"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.140" endtime="20201116 13:06:08.211"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.138" endtime="20201116 13:06:08.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.213" endtime="20201116 13:06:08.216"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.134" endtime="20201116 13:06:08.218"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.129" endtime="20201116 13:06:08.219"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.097" endtime="20201116 13:06:08.220"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:08.230" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:08.314" endtime="20201116 13:06:10.419"></status>
</kw>
<msg timestamp="20201116 13:06:10.420" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 761285, 'wakeups': [771294, 781294, 791294, 801294, 811294, 821294, 83...</msg>
<status status="PASS" starttime="20201116 13:06:08.311" endtime="20201116 13:06:10.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.424" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 761285, 'wakeups': [771294, 781294, 791294, 801294, 811294, 821294, 83...</msg>
<status status="PASS" starttime="20201116 13:06:10.422" endtime="20201116 13:06:10.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.425" endtime="20201116 13:06:10.427"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.303" endtime="20201116 13:06:10.428"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.235" endtime="20201116 13:06:10.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:10.432" level="INFO">${RESULT} = {'wakeups': [771294, 781294, 791294, 801294, 811294, 821294, 831294, 841294, 851294, 861294, 871294, 881294, 891294, 901294, 911294, 921294, 931294, 941294, 951294, 961294, 971294, 981294, 991294, 100...</msg>
<status status="PASS" starttime="20201116 13:06:10.429" endtime="20201116 13:06:10.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.437" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:10.436" endtime="20201116 13:06:10.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.439" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:10.438" endtime="20201116 13:06:10.439"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.432" endtime="20201116 13:06:10.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.445" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:06:10.444" endtime="20201116 13:06:10.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.447" level="INFO">VALUE: 761285</msg>
<status status="PASS" starttime="20201116 13:06:10.446" endtime="20201116 13:06:10.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.441" endtime="20201116 13:06:10.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.454" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:10.452" endtime="20201116 13:06:10.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.456" level="INFO">VALUE: [771294, 781294, 791294, 801294, 811294, 821294, 831294, 841294, 851294, 861294, 871294, 881294, 891294, 901294, 911294, 921294, 931294, 941294, 951294, 961294, 971294, 981294, 991294, 1001294, 1011294, 1021294, 1031294, 1041294, 1051294, 1061294, 1071294, 1081294, 1091294, 1101294, 1111294, 1121294, 1131294, 1141294, 1151294, 1161294, 1171294, 1181294, 1191294, 1201294, 1211294, 1221294, 1231294, 1241294, 1251294, 1261294, 1271294, 1281294, 1291294, 1301294, 1311294, 1321294, 1331294, 1341294, 1351294, 1361294, 1371294, 1381294, 1391294, 1401294, 1411294, 1421294, 1431294, 1441294, 1451294, 1461294, 1471294, 1481294, 1491294, 1501294, 1511294, 1521294, 1531294, 1541294, 1551294, 1561294, 1571294, 1581294, 1591294, 1601294, 1611294, 1621294, 1631294, 1641294, 1651294, 1661294, 1671294, 1681294, 1691294, 1701294, 1711294, 1721294, 1731294, 1741294, 1751294, 1761294]</msg>
<status status="PASS" starttime="20201116 13:06:10.455" endtime="20201116 13:06:10.456"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.449" endtime="20201116 13:06:10.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.465" endtime="20201116 13:06:10.761"></status>
</kw>
<msg timestamp="20201116 13:06:10.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.201410028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.211420208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:10.463" endtime="20201116 13:06:10.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.201410028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.211420208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:10.765" endtime="20201116 13:06:10.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.773" endtime="20201116 13:06:10.775"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.460" endtime="20201116 13:06:10.776"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.458" endtime="20201116 13:06:10.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:10.814" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:10.777" endtime="20201116 13:06:10.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.826" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:06:10.823" endtime="20201116 13:06:10.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.830" level="INFO">VALUE: 0.201410028</msg>
<status status="PASS" starttime="20201116 13:06:10.828" endtime="20201116 13:06:10.831"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.816" endtime="20201116 13:06:10.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.845" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:10.842" endtime="20201116 13:06:10.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:10.849" level="INFO">VALUE: [0.211420208, 0.221421361, 0.231422361, 0.241423528, 0.251424556, 0.261425708, 0.271426708, 0.281427931, 0.291428903, 0.301430056, 0.311431069, 0.321432236, 0.331433236, 0.341434417, 0.351435431, 0.361436583, 0.371437583, 0.381438764, 0.391439833, 0.401440972, 0.411441958, 0.421443111, 0.431444125, 0.441445361, 0.451446306, 0.461447486, 0.471448472, 0.481449653, 0.491450694, 0.501451819, 0.511452819, 0.521454, 0.531455, 0.541456181, 0.551457181, 0.561458361, 0.571459361, 0.581460542, 0.591461528, 0.601462694, 0.611463708, 0.621464875, 0.631465917, 0.641467056, 0.651468056, 0.661469292, 0.671470236, 0.681471444, 0.691472417, 0.701473597, 0.711474583, 0.721475764, 0.731476764, 0.741477931, 0.751478944, 0.761480125, 0.771481125, 0.781482292, 0.791483292, 0.801484472, 0.811485472, 0.821486639, 0.831487639, 0.841488819, 0.851489875, 0.861491, 0.871492, 0.881493167, 0.891494167, 0.901495361, 0.911496347, 0.921497514, 0.931498542, 0.941499694, 0.951500708, 0.961501889, 0.971502875, 0.981504042, 0.991505069, 1.001506222, 1.011507222, 1.021508403, 1.031509417, 1.041510583, 1.051511583, 1.06151275, 1.071513764, 1.081514931, 1.091515958, 1.101517125, 1.111518125, 1.121519292, 1.131520292, 1.141521458, 1.151522458, 1.161523639, 1.171524639, 1.181525833, 1.191526806, 1.201527986] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:10.847" endtime="20201116 13:06:10.850"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.834" endtime="20201116 13:06:10.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.859" endtime="20201116 13:06:10.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:10.869" endtime="20201116 13:06:10.890"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.864" endtime="20201116 13:06:10.892"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.854" endtime="20201116 13:06:10.894"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.231" endtime="20201116 13:06:10.894"></status>
</kw>
<msg timestamp="20201116 13:06:10.895" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:10.916" endtime="20201116 13:06:13.028"></status>
</kw>
<msg timestamp="20201116 13:06:13.029" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3363235, 'wakeups': [3373244, 3383244, 3393244, 3403244, 3413244, 3423...</msg>
<status status="PASS" starttime="20201116 13:06:10.913" endtime="20201116 13:06:13.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.036" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3363235, 'wakeups': [3373244, 3383244, 3393244, 3403244, 3413244, 3423...</msg>
<status status="PASS" starttime="20201116 13:06:13.032" endtime="20201116 13:06:13.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.039" endtime="20201116 13:06:13.043"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.905" endtime="20201116 13:06:13.044"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.900" endtime="20201116 13:06:13.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:13.052" level="INFO">${RESULT} = {'wakeups': [3373244, 3383244, 3393244, 3403244, 3413244, 3423244, 3433244, 3443244, 3453244, 3463244, 3473244, 3483244, 3493244, 3503244, 3513244, 3523244, 3533244, 3543244, 3553244, 3563244, 3573244...</msg>
<status status="PASS" starttime="20201116 13:06:13.047" endtime="20201116 13:06:13.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.062" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:13.060" endtime="20201116 13:06:13.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.067" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:13.064" endtime="20201116 13:06:13.067"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.054" endtime="20201116 13:06:13.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.079" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:06:13.077" endtime="20201116 13:06:13.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.084" level="INFO">VALUE: 3363235</msg>
<status status="PASS" starttime="20201116 13:06:13.082" endtime="20201116 13:06:13.085"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.070" endtime="20201116 13:06:13.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.097" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:13.094" endtime="20201116 13:06:13.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.101" level="INFO">VALUE: [3373244, 3383244, 3393244, 3403244, 3413244, 3423244, 3433244, 3443244, 3453244, 3463244, 3473244, 3483244, 3493244, 3503244, 3513244, 3523244, 3533244, 3543244, 3553244, 3563244, 3573244, 3583244, 3593244, 3603244, 3613244, 3623244, 3633244, 3643244, 3653244, 3663244, 3673244, 3683244, 3693244, 3703244, 3713244, 3723244, 3733244, 3743244, 3753244, 3763244, 3773244, 3783244, 3793244, 3803244, 3813244, 3823244, 3833244, 3843244, 3853244, 3863244, 3873244, 3883244, 3893244, 3903244, 3913244, 3923244, 3933244, 3943244, 3953244, 3963244, 3973244, 3983244, 3993244, 4003244, 4013244, 4023244, 4033244, 4043244, 4053244, 4063244, 4073244, 4083244, 4093244, 4103244, 4113244, 4123244, 4133244, 4143244, 4153244, 4163244, 4173244, 4183244, 4193244, 4203244, 4213244, 4223244, 4233244, 4243244, 4253244, 4263244, 4273244, 4283244, 4293244, 4303244, 4313244, 4323244, 4333244, 4343244, 4353244, 4363244]</msg>
<status status="PASS" starttime="20201116 13:06:13.099" endtime="20201116 13:06:13.102"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.088" endtime="20201116 13:06:13.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.122" endtime="20201116 13:06:13.480"></status>
</kw>
<msg timestamp="20201116 13:06:13.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038787889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048798028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:13.118" endtime="20201116 13:06:13.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038787889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048798028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:13.489" endtime="20201116 13:06:13.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.506" endtime="20201116 13:06:13.510"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.110" endtime="20201116 13:06:13.511"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.105" endtime="20201116 13:06:13.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:13.567" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:13.514" endtime="20201116 13:06:13.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.578" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:06:13.576" endtime="20201116 13:06:13.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.583" level="INFO">VALUE: 0.038787889</msg>
<status status="PASS" starttime="20201116 13:06:13.581" endtime="20201116 13:06:13.584"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.569" endtime="20201116 13:06:13.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.597" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:13.594" endtime="20201116 13:06:13.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:13.601" level="INFO">VALUE: [0.048798028, 0.058799181, 0.068800181, 0.078801347, 0.088802361, 0.098803556, 0.108804542, 0.11880575, 0.128806694, 0.138807875, 0.148808944, 0.158810042, 0.168811056, 0.178812236, 0.18881325, 0.198814403, 0.208815403, 0.218816583, 0.228817583, 0.238818736, 0.248819736, 0.258820917, 0.268821917, 0.278823069, 0.288824083, 0.29882525, 0.308826264, 0.318827417, 0.328828417, 0.338829597, 0.348830597, 0.358831764, 0.368832764, 0.378833944, 0.388834986, 0.398836125, 0.408837111, 0.418838292, 0.428839292, 0.438840472, 0.448841472, 0.458842639, 0.468843694, 0.478844819, 0.488845819, 0.498846986, 0.508847986, 0.518849167, 0.528850236, 0.538851333, 0.548852333, 0.558853514, 0.568854528, 0.578855681, 0.588856681, 0.598857875, 0.608858917, 0.618860028, 0.628861028, 0.638862208, 0.648863222, 0.658864375, 0.668865403, 0.678866583, 0.688867569, 0.698868722, 0.708869778, 0.718870903, 0.728871917, 0.738873069, 0.748874083, 0.758875264, 0.76887625, 0.778877417, 0.788878431, 0.798879611, 0.808880597, 0.818881819, 0.828882792, 0.838883944, 0.848884944, 0.858886111, 0.868887125, 0.878888306, 0.888889292, 0.898890458, 0.908891486, 0.918892639, 0.928893653, 0.938894819, 0.948895819, 0.958897056, 0.968897986, 0.978899181, 0.988900181, 0.998901333, 1.008902333, 1.018903528, 1.028904542, 1.038905694] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:13.599" endtime="20201116 13:06:13.602"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.587" endtime="20201116 13:06:13.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.610" endtime="20201116 13:06:13.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:13.620" endtime="20201116 13:06:13.644"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.614" endtime="20201116 13:06:13.646"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.606" endtime="20201116 13:06:13.647"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:10.896" endtime="20201116 13:06:13.648"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.226" endtime="20201116 13:06:13.648"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.224" endtime="20201116 13:06:13.649"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:13.655" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:13.676" endtime="20201116 13:06:15.770"></status>
</kw>
<msg timestamp="20201116 13:06:15.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 6124037, 'wakeups': [6134053, 6144053, 6154053, 6164053, 6174053, 6184...</msg>
<status status="PASS" starttime="20201116 13:06:13.673" endtime="20201116 13:06:15.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.775" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 6124037, 'wakeups': [6134053, 6144053, 6154053, 6164053, 6174053, 6184...</msg>
<status status="PASS" starttime="20201116 13:06:15.772" endtime="20201116 13:06:15.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.776" endtime="20201116 13:06:15.779"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.665" endtime="20201116 13:06:15.780"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.660" endtime="20201116 13:06:15.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:15.784" level="INFO">${RESULT} = {'wakeups': [6134053, 6144053, 6154053, 6164053, 6174053, 6184053, 6194053, 6204053, 6214053, 6224053, 6234053, 6244053, 6254053, 6264053, 6274053, 6284053, 6294053, 6304053, 6314053, 6324053, 6334053...</msg>
<status status="PASS" starttime="20201116 13:06:15.781" endtime="20201116 13:06:15.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.788" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:15.787" endtime="20201116 13:06:15.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.791" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:15.790" endtime="20201116 13:06:15.791"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.784" endtime="20201116 13:06:15.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.797" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:15.795" endtime="20201116 13:06:15.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.799" level="INFO">VALUE: 6124037</msg>
<status status="PASS" starttime="20201116 13:06:15.798" endtime="20201116 13:06:15.799"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.792" endtime="20201116 13:06:15.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.805" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:15.804" endtime="20201116 13:06:15.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:15.807" level="INFO">VALUE: [6134053, 6144053, 6154053, 6164053, 6174053, 6184053, 6194053, 6204053, 6214053, 6224053, 6234053, 6244053, 6254053, 6264053, 6274053, 6284053, 6294053, 6304053, 6314053, 6324053, 6334053, 6344053, 6354053, 6364053, 6374053, 6384053, 6394053, 6404053, 6414053, 6424053, 6434053, 6444053, 6454053, 6464053, 6474053, 6484053, 6494053, 6504053, 6514053, 6524053, 6534053, 6544053, 6554053, 6564053, 6574053, 6584053, 6594053, 6604053, 6614053, 6624053, 6634053, 6644053, 6654053, 6664053, 6674053, 6684053, 6694053, 6704053, 6714053, 6724053, 6734053, 6744053, 6754053, 6764053, 6774053, 6784053, 6794053, 6804053, 6814053, 6824053, 6834053, 6844053, 6854053, 6864053, 6874053, 6884053, 6894053, 6904053, 6914053, 6924053, 6934053, 6944053, 6954053, 6964053, 6974053, 6984053, 6994053, 7004053, 7014053, 7024053, 7034053, 7044053, 7054053, 7064053, 7074053, 7084053, 7094053, 7104053, 7114053, 7124053]</msg>
<status status="PASS" starttime="20201116 13:06:15.806" endtime="20201116 13:06:15.807"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.800" endtime="20201116 13:06:15.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:15.816" endtime="20201116 13:06:16.140"></status>
</kw>
<msg timestamp="20201116 13:06:16.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046326319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056344069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:15.814" endtime="20201116 13:06:16.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:16.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046326319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056344069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:16.149" endtime="20201116 13:06:16.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:16.167" endtime="20201116 13:06:16.170"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.811" endtime="20201116 13:06:16.172"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:15.809" endtime="20201116 13:06:16.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:16.231" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:16.176" endtime="20201116 13:06:16.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:16.241" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:16.239" endtime="20201116 13:06:16.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:16.246" level="INFO">VALUE: 0.046326319</msg>
<status status="PASS" starttime="20201116 13:06:16.244" endtime="20201116 13:06:16.247"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.233" endtime="20201116 13:06:16.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:16.260" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:16.257" endtime="20201116 13:06:16.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:16.264" level="INFO">VALUE: [0.056344069, 0.066345264, 0.076346236, 0.086347403, 0.096348417, 0.106349569, 0.116350583, 0.126351778, 0.13635275, 0.146353903, 0.156354903, 0.166356069, 0.176357069, 0.18635825, 0.19635925, 0.206360431, 0.216361458, 0.226362583, 0.236363583, 0.246364764, 0.25636575, 0.266366958, 0.276367917, 0.286369097, 0.296370097, 0.306371264, 0.316372264, 0.326373431, 0.336374431, 0.346375611, 0.356376625, 0.366377778, 0.376378792, 0.386379958, 0.396380944, 0.406382111, 0.416383125, 0.426384306, 0.436385292, 0.446386458, 0.456387486, 0.466388625, 0.476389625, 0.486390819, 0.496391806, 0.506392986, 0.516393972, 0.526395139, 0.536396139, 0.546397333, 0.556398319, 0.566399514, 0.5764005, 0.586401667, 0.596402667, 0.606403833, 0.616404833, 0.626406, 0.636407, 0.646408167, 0.656409181, 0.666410403, 0.676411361, 0.686412583, 0.696413514, 0.706414694, 0.716415681, 0.726416847, 0.736417875, 0.746419028, 0.756420028, 0.766421194, 0.776422222, 0.786423389, 0.796424375, 0.806425556, 0.816426542, 0.826427722, 0.836428708, 0.846429889, 0.856430903, 0.866432069, 0.876433083, 0.886434222, 0.896435222, 0.906436403, 0.916437403, 0.926438583, 0.936439569, 0.946440736, 0.95644175, 0.966442917, 0.976443917, 0.986445097, 0.996446153, 1.006447264, 1.01644825, 1.026449431, 1.036450444, 1.046451597] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:16.262" endtime="20201116 13:06:16.265"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.250" endtime="20201116 13:06:16.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:16.273" endtime="20201116 13:06:16.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:16.282" endtime="20201116 13:06:16.304"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.277" endtime="20201116 13:06:16.305"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.269" endtime="20201116 13:06:16.307"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.656" endtime="20201116 13:06:16.308"></status>
</kw>
<msg timestamp="20201116 13:06:16.308" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:16.329" endtime="20201116 13:06:18.441"></status>
</kw>
<msg timestamp="20201116 13:06:18.442" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8776227, 'wakeups': [8786244, 8796243, 8806243, 8816243, 8826243, 8836...</msg>
<status status="PASS" starttime="20201116 13:06:16.326" endtime="20201116 13:06:18.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.449" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8776227, 'wakeups': [8786244, 8796243, 8806243, 8816243, 8826243, 8836...</msg>
<status status="PASS" starttime="20201116 13:06:18.445" endtime="20201116 13:06:18.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.452" endtime="20201116 13:06:18.455"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.319" endtime="20201116 13:06:18.457"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.313" endtime="20201116 13:06:18.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:18.465" level="INFO">${RESULT} = {'wakeups': [8786244, 8796243, 8806243, 8816243, 8826243, 8836243, 8846243, 8856243, 8866243, 8876243, 8886243, 8896243, 8906243, 8916243, 8926243, 8936243, 8946243, 8956243, 8966243, 8976243, 8986243...</msg>
<status status="PASS" starttime="20201116 13:06:18.460" endtime="20201116 13:06:18.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.476" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:18.473" endtime="20201116 13:06:18.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.480" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:18.478" endtime="20201116 13:06:18.481"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.467" endtime="20201116 13:06:18.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.493" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:18.491" endtime="20201116 13:06:18.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.498" level="INFO">VALUE: 8776227</msg>
<status status="PASS" starttime="20201116 13:06:18.495" endtime="20201116 13:06:18.498"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.484" endtime="20201116 13:06:18.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.510" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:18.508" endtime="20201116 13:06:18.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.515" level="INFO">VALUE: [8786244, 8796243, 8806243, 8816243, 8826243, 8836243, 8846243, 8856243, 8866243, 8876243, 8886243, 8896243, 8906243, 8916243, 8926243, 8936243, 8946243, 8956243, 8966243, 8976243, 8986243, 8996243, 9006243, 9016243, 9026243, 9036243, 9046243, 9056243, 9066243, 9076243, 9086243, 9096243, 9106243, 9116243, 9126243, 9136243, 9146243, 9156243, 9166243, 9176243, 9186243, 9196243, 9206243, 9216243, 9226243, 9236243, 9246243, 9256243, 9266243, 9276243, 9286243, 9296243, 9306243, 9316243, 9326243, 9336243, 9346243, 9356243, 9366243, 9376243, 9386243, 9396243, 9406243, 9416243, 9426243, 9436243, 9446243, 9456243, 9466243, 9476243, 9486243, 9496243, 9506243, 9516243, 9526243, 9536243, 9546243, 9556243, 9566243, 9576243, 9586243, 9596243, 9606243, 9616243, 9626243, 9636243, 9646243, 9656243, 9666243, 9676243, 9686243, 9696243, 9706243, 9716243, 9726243, 9736243, 9746243, 9756243, 9766243, 9776243]</msg>
<status status="PASS" starttime="20201116 13:06:18.512" endtime="20201116 13:06:18.516"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.501" endtime="20201116 13:06:18.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.536" endtime="20201116 13:06:18.886"></status>
</kw>
<msg timestamp="20201116 13:06:18.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038663986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048682056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:18.533" endtime="20201116 13:06:18.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038663986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048682056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:18.894" endtime="20201116 13:06:18.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:18.911" endtime="20201116 13:06:18.915"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.525" endtime="20201116 13:06:18.917"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.519" endtime="20201116 13:06:18.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:18.972" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:18.920" endtime="20201116 13:06:18.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.983" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:06:18.981" endtime="20201116 13:06:18.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.986" level="INFO">VALUE: 0.038663986</msg>
<status status="PASS" starttime="20201116 13:06:18.984" endtime="20201116 13:06:18.986"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.974" endtime="20201116 13:06:18.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.992" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:18.991" endtime="20201116 13:06:18.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:18.994" level="INFO">VALUE: [0.048682056, 0.058682222, 0.06868325, 0.078684444, 0.088685403, 0.098686653, 0.108687611, 0.118688764, 0.128689806, 0.138690931, 0.148691931, 0.158693097, 0.168694125, 0.178695278, 0.188696361, 0.198697458, 0.208698472, 0.218699639, 0.228700639, 0.238701875, 0.248702806, 0.258704028, 0.268705014, 0.278706167, 0.288707167, 0.298708333, 0.308709361, 0.318710514, 0.328711514, 0.338712694, 0.34871375, 0.358714875, 0.368715875, 0.378717042, 0.388718083, 0.398719222, 0.408720236, 0.418721403, 0.428722431, 0.438723597, 0.448724583, 0.45872575, 0.468726764, 0.478727931, 0.488728944, 0.498730125, 0.508731111, 0.518732306, 0.528733306, 0.538734472, 0.548735528, 0.558736653, 0.568737722, 0.578738875, 0.588739819, 0.598741, 0.608742, 0.618743181, 0.628744181, 0.638745361, 0.648746361, 0.658747528, 0.668748556, 0.678749708, 0.688750722, 0.698751889, 0.708752889, 0.718754069, 0.728755069, 0.73875625, 0.74875725, 0.758758417, 0.768759431, 0.778760597, 0.788761625, 0.798762778, 0.808763778, 0.818764958, 0.828765958, 0.838767167, 0.848768139, 0.858769306, 0.868770319, 0.8787715, 0.8887725, 0.898773667, 0.908774681, 0.918775889, 0.928776847, 0.938778028, 0.948779083, 0.95878025, 0.968781208, 0.978782389, 0.988783389, 0.998784569, 1.008785569, 1.018786736, 1.02878775, 1.038788931] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:18.993" endtime="20201116 13:06:19.001"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:18.987" endtime="20201116 13:06:19.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:19.005" endtime="20201116 13:06:19.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:19.009" endtime="20201116 13:06:19.029"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.007" endtime="20201116 13:06:19.029"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.003" endtime="20201116 13:06:19.030"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:16.309" endtime="20201116 13:06:19.030"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.651" endtime="20201116 13:06:19.031"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:13.650" endtime="20201116 13:06:19.031"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:19.034" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:19.045" endtime="20201116 13:06:21.162"></status>
</kw>
<msg timestamp="20201116 13:06:21.164" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 11489657, 'wakeups': [11499682, 11509682, 11519682, 11529682, 11539682...</msg>
<status status="PASS" starttime="20201116 13:06:19.043" endtime="20201116 13:06:21.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.171" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 11489657, 'wakeups': [11499682, 11509682, 11519682, 11529682, 11539682...</msg>
<status status="PASS" starttime="20201116 13:06:21.166" endtime="20201116 13:06:21.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:21.173" endtime="20201116 13:06:21.177"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.039" endtime="20201116 13:06:21.178"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.036" endtime="20201116 13:06:21.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:21.186" level="INFO">${RESULT} = {'wakeups': [11499682, 11509682, 11519682, 11529682, 11539682, 11549682, 11559682, 11569682, 11579682, 11589682, 11599682, 11609682, 11619682, 11629682, 11639682, 11649682, 11659682, 11669682, 1167968...</msg>
<status status="PASS" starttime="20201116 13:06:21.181" endtime="20201116 13:06:21.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.197" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:21.194" endtime="20201116 13:06:21.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.202" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:21.199" endtime="20201116 13:06:21.202"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.188" endtime="20201116 13:06:21.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.214" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:21.212" endtime="20201116 13:06:21.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.219" level="INFO">VALUE: 11489657</msg>
<status status="PASS" starttime="20201116 13:06:21.217" endtime="20201116 13:06:21.219"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.205" endtime="20201116 13:06:21.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.231" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:21.229" endtime="20201116 13:06:21.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.236" level="INFO">VALUE: [11499682, 11509682, 11519682, 11529682, 11539682, 11549682, 11559682, 11569682, 11579682, 11589682, 11599682, 11609682, 11619682, 11629682, 11639682, 11649682, 11659682, 11669682, 11679682, 11689682, 11699682, 11709682, 11719682, 11729682, 11739682, 11749682, 11759682, 11769682, 11779682, 11789682, 11799682, 11809682, 11819682, 11829682, 11839682, 11849682, 11859682, 11869682, 11879682, 11889682, 11899682, 11909682, 11919682, 11929682, 11939682, 11949682, 11959682, 11969682, 11979682, 11989682, 11999682, 12009682, 12019682, 12029682, 12039682, 12049682, 12059682, 12069682, 12079682, 12089682, 12099682, 12109682, 12119682, 12129682, 12139682, 12149682, 12159682, 12169682, 12179682, 12189682, 12199682, 12209682, 12219682, 12229682, 12239682, 12249682, 12259682, 12269682, 12279682, 12289682, 12299682, 12309682, 12319682, 12329682, 12339682, 12349682, 12359682, 12369682, 12379682, 12389682, 12399682, 12409682, 12419682, 12429682, 12439682, 12449682, 12459682, 12469682, 12479682, 12489682]</msg>
<status status="PASS" starttime="20201116 13:06:21.233" endtime="20201116 13:06:21.238"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.222" endtime="20201116 13:06:21.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:21.256" endtime="20201116 13:06:21.598"></status>
</kw>
<msg timestamp="20201116 13:06:21.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025744347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035771639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:21.253" endtime="20201116 13:06:21.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025744347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035771639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:21.607" endtime="20201116 13:06:21.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:21.624" endtime="20201116 13:06:21.628"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.245" endtime="20201116 13:06:21.630"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.241" endtime="20201116 13:06:21.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:21.687" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:21.633" endtime="20201116 13:06:21.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.697" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:21.695" endtime="20201116 13:06:21.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.702" level="INFO">VALUE: 0.025744347</msg>
<status status="PASS" starttime="20201116 13:06:21.700" endtime="20201116 13:06:21.703"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.689" endtime="20201116 13:06:21.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.716" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:21.713" endtime="20201116 13:06:21.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:21.720" level="INFO">VALUE: [0.035771639, 0.045772653, 0.055773694, 0.065774819, 0.075775819, 0.085777028, 0.095778014, 0.105779167, 0.115780167, 0.125781361, 0.135782347, 0.145783528, 0.155784514, 0.165785681, 0.175786694, 0.185787875, 0.195788875, 0.205790056, 0.215791056, 0.225792222, 0.235793208, 0.245794403, 0.255795403, 0.265796556, 0.275797556, 0.285798764, 0.29579975, 0.305800917, 0.315801903, 0.325803083, 0.335804083, 0.345805292, 0.355806306, 0.365807431, 0.375808431, 0.385809597, 0.395810611, 0.405811792, 0.415812778, 0.425813986, 0.435814958, 0.445816125, 0.455817139, 0.465818306, 0.475819306, 0.485820486, 0.4958215, 0.505822667, 0.515823708, 0.525824833, 0.535825847, 0.545827083, 0.555828028, 0.565829208, 0.575830181, 0.585831361, 0.595832361, 0.605833583, 0.615834542, 0.625835708, 0.635836708, 0.645837875, 0.655838889, 0.665840083, 0.675841069, 0.685842236, 0.695843236, 0.705844403, 0.715845417, 0.725846583, 0.735847583, 0.745848778, 0.755849764, 0.765850944, 0.775851944, 0.785853111, 0.795854111, 0.805855306, 0.815856292, 0.825857486, 0.835858458, 0.845859653, 0.855860653, 0.865861806, 0.875862819, 0.885864, 0.895865028, 0.90586625, 0.915867181, 0.925868347, 0.935869333, 0.945870514, 0.955871514, 0.965872681, 0.975873694, 0.985874861, 0.995875861, 1.005877056, 1.015878042, 1.025879222] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:21.718" endtime="20201116 13:06:21.721"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.706" endtime="20201116 13:06:21.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:21.729" endtime="20201116 13:06:21.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:21.737" endtime="20201116 13:06:21.759"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.733" endtime="20201116 13:06:21.761"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.724" endtime="20201116 13:06:21.762"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.035" endtime="20201116 13:06:21.763"></status>
</kw>
<msg timestamp="20201116 13:06:21.763" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:21.785" endtime="20201116 13:06:23.904"></status>
</kw>
<msg timestamp="20201116 13:06:23.906" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 14231478, 'wakeups': [14241504, 14251503, 14261503, 14271503, 14281503...</msg>
<status status="PASS" starttime="20201116 13:06:21.781" endtime="20201116 13:06:23.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 14231478, 'wakeups': [14241504, 14251503, 14261503, 14271503, 14281503...</msg>
<status status="PASS" starttime="20201116 13:06:23.908" endtime="20201116 13:06:23.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.913" endtime="20201116 13:06:23.915"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.774" endtime="20201116 13:06:23.916"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.768" endtime="20201116 13:06:23.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:23.919" level="INFO">${RESULT} = {'wakeups': [14241504, 14251503, 14261503, 14271503, 14281503, 14291503, 14301503, 14311503, 14321503, 14331503, 14341503, 14351503, 14361503, 14371503, 14381503, 14391503, 14401503, 14411503, 1442150...</msg>
<status status="PASS" starttime="20201116 13:06:23.917" endtime="20201116 13:06:23.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.924" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:23.923" endtime="20201116 13:06:23.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.927" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:23.925" endtime="20201116 13:06:23.927"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.920" endtime="20201116 13:06:23.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.932" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:23.931" endtime="20201116 13:06:23.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.935" level="INFO">VALUE: 14231478</msg>
<status status="PASS" starttime="20201116 13:06:23.933" endtime="20201116 13:06:23.935"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.928" endtime="20201116 13:06:23.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.941" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:23.940" endtime="20201116 13:06:23.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:23.944" level="INFO">VALUE: [14241504, 14251503, 14261503, 14271503, 14281503, 14291503, 14301503, 14311503, 14321503, 14331503, 14341503, 14351503, 14361503, 14371503, 14381503, 14391503, 14401503, 14411503, 14421503, 14431503, 14441503, 14451503, 14461503, 14471503, 14481503, 14491503, 14501503, 14511503, 14521503, 14531503, 14541503, 14551503, 14561503, 14571503, 14581503, 14591503, 14601503, 14611503, 14621503, 14631503, 14641503, 14651503, 14661503, 14671503, 14681503, 14691503, 14701503, 14711503, 14721503, 14731503, 14741503, 14751503, 14761503, 14771503, 14781503, 14791503, 14801503, 14811503, 14821503, 14831503, 14841503, 14851503, 14861503, 14871503, 14881503, 14891503, 14901503, 14911503, 14921503, 14931503, 14941503, 14951503, 14961503, 14971503, 14981503, 14991503, 15001503, 15011503, 15021503, 15031503, 15041503, 15051503, 15061503, 15071503, 15081503, 15091503, 15101503, 15111503, 15121503, 15131503, 15141503, 15151503, 15161503, 15171503, 15181503, 15191503, 15201503, 15211503, 15221503, 15231503]</msg>
<status status="PASS" starttime="20201116 13:06:23.943" endtime="20201116 13:06:23.944"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.936" endtime="20201116 13:06:23.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:23.953" endtime="20201116 13:06:24.288"></status>
</kw>
<msg timestamp="20201116 13:06:24.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0388695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0488975, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201116 13:06:23.951" endtime="20201116 13:06:24.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:24.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0388695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0488975, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201116 13:06:24.296" endtime="20201116 13:06:24.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:24.313" endtime="20201116 13:06:24.317"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.948" endtime="20201116 13:06:24.319"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:23.946" endtime="20201116 13:06:24.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:24.374" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:24.323" endtime="20201116 13:06:24.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:24.385" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:06:24.383" endtime="20201116 13:06:24.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:24.390" level="INFO">VALUE: 0.0388695</msg>
<status status="PASS" starttime="20201116 13:06:24.388" endtime="20201116 13:06:24.390"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.376" endtime="20201116 13:06:24.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:24.403" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:24.401" endtime="20201116 13:06:24.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:24.408" level="INFO">VALUE: [0.0488975, 0.058897556, 0.068898514, 0.078899694, 0.088900694, 0.098901875, 0.108902861, 0.118904042, 0.128905042, 0.138906222, 0.148907222, 0.158908375, 0.168909389, 0.178910542, 0.188911542, 0.198912708, 0.208913722, 0.218914889, 0.228915889, 0.238917069, 0.248918056, 0.258919222, 0.26892025, 0.278921431, 0.288922472, 0.298923569, 0.308924583, 0.31892575, 0.32892675, 0.338927917, 0.348928931, 0.358930139, 0.368931097, 0.378932264, 0.388933278, 0.398934431, 0.408935444, 0.418936681, 0.428937611, 0.438938792, 0.448939792, 0.458940972, 0.468941958, 0.478943125, 0.488944139, 0.498945306, 0.508946319, 0.518947472, 0.528948472, 0.538949667, 0.548950653, 0.558951819, 0.568952819, 0.578954028, 0.588955, 0.598956181, 0.608957167, 0.618958347, 0.628959347, 0.638960528, 0.648961528, 0.658962708, 0.668963722, 0.678964903, 0.688965861, 0.698967056, 0.708968056, 0.71896925, 0.728970222, 0.738971375, 0.748972389, 0.758973556, 0.768974556, 0.778975778, 0.788976736, 0.798977917, 0.808978917, 0.818980069, 0.828981069, 0.83898225, 0.848983264, 0.858984417, 0.868985417, 0.878986667, 0.888987611, 0.898988764, 0.908989778, 0.918990944, 0.928991944, 0.938993125, 0.948994125, 0.958995292, 0.968996292, 0.978997458, 0.988998458, 0.998999639, 1.009000667, 1.019001861, 1.029002806, 1.039004] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:24.405" endtime="20201116 13:06:24.409"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.393" endtime="20201116 13:06:24.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:24.417" endtime="20201116 13:06:24.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:24.425" endtime="20201116 13:06:24.448"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.421" endtime="20201116 13:06:24.450"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.412" endtime="20201116 13:06:24.451"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:21.765" endtime="20201116 13:06:24.452"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.032" endtime="20201116 13:06:24.453"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:19.031" endtime="20201116 13:06:24.453"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:24.459" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:24.480" endtime="20201116 13:06:26.603"></status>
</kw>
<msg timestamp="20201116 13:06:26.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 16926915, 'wakeups': [16936952, 16946951, 16956951, 16966951, 16976951...</msg>
<status status="PASS" starttime="20201116 13:06:24.477" endtime="20201116 13:06:26.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.611" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 16926915, 'wakeups': [16936952, 16946951, 16956951, 16966951, 16976951...</msg>
<status status="PASS" starttime="20201116 13:06:26.607" endtime="20201116 13:06:26.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:26.614" endtime="20201116 13:06:26.618"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.470" endtime="20201116 13:06:26.619"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.464" endtime="20201116 13:06:26.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:26.627" level="INFO">${RESULT} = {'wakeups': [16936952, 16946951, 16956951, 16966951, 16976951, 16986951, 16996951, 17006951, 17016951, 17026951, 17036951, 17046951, 17056951, 17066951, 17076951, 17086951, 17096951, 17106951, 1711695...</msg>
<status status="PASS" starttime="20201116 13:06:26.622" endtime="20201116 13:06:26.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.638" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:26.635" endtime="20201116 13:06:26.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.642" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:26.640" endtime="20201116 13:06:26.643"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.629" endtime="20201116 13:06:26.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.655" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:26.652" endtime="20201116 13:06:26.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.659" level="INFO">VALUE: 16926915</msg>
<status status="PASS" starttime="20201116 13:06:26.657" endtime="20201116 13:06:26.660"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.646" endtime="20201116 13:06:26.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.672" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:26.669" endtime="20201116 13:06:26.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:26.676" level="INFO">VALUE: [16936952, 16946951, 16956951, 16966951, 16976951, 16986951, 16996951, 17006951, 17016951, 17026951, 17036951, 17046951, 17056951, 17066951, 17076951, 17086951, 17096951, 17106951, 17116951, 17126951, 17136951, 17146951, 17156951, 17166951, 17176951, 17186951, 17196951, 17206951, 17216951, 17226951, 17236951, 17246951, 17256951, 17266951, 17276951, 17286951, 17296951, 17306951, 17316951, 17326951, 17336951, 17346951, 17356951, 17366951, 17376951, 17386951, 17396951, 17406951, 17416951, 17426951, 17436951, 17446951, 17456951, 17466951, 17476951, 17486951, 17496951, 17506951, 17516951, 17526951, 17536951, 17546951, 17556951, 17566951, 17576951, 17586951, 17596951, 17606951, 17616951, 17626951, 17636951, 17646951, 17656951, 17666951, 17676951, 17686951, 17696951, 17706951, 17716951, 17726951, 17736951, 17746951, 17756951, 17766951, 17776951, 17786951, 17796951, 17806951, 17816951, 17826951, 17836951, 17846951, 17856951, 17866951, 17876951, 17886951, 17896951, 17906951, 17916951, 17926951]</msg>
<status status="PASS" starttime="20201116 13:06:26.674" endtime="20201116 13:06:26.677"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.663" endtime="20201116 13:06:26.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:26.695" endtime="20201116 13:06:27.058"></status>
</kw>
<msg timestamp="20201116 13:06:27.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045128583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:06:26.692" endtime="20201116 13:06:27.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045128583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:06:27.066" endtime="20201116 13:06:27.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:27.079" endtime="20201116 13:06:27.081"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.685" endtime="20201116 13:06:27.081"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:26.680" endtime="20201116 13:06:27.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:27.106" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:27.083" endtime="20201116 13:06:27.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.111" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:27.110" endtime="20201116 13:06:27.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.114" level="INFO">VALUE: 0.045128583</msg>
<status status="PASS" starttime="20201116 13:06:27.112" endtime="20201116 13:06:27.114"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.107" endtime="20201116 13:06:27.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.120" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:27.119" endtime="20201116 13:06:27.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:27.123" level="INFO">VALUE: [0.055167, 0.065167125, 0.075168139, 0.085169306, 0.095170306, 0.105171486, 0.115172472, 0.125173681, 0.135174653, 0.145175806, 0.155176819, 0.165177972, 0.175178972, 0.185180167, 0.195181153, 0.205182333, 0.215183319, 0.225184486, 0.235185486, 0.245186667, 0.255187681, 0.265188833, 0.275189833, 0.285191014, 0.295192, 0.305193167, 0.315194181, 0.325195347, 0.335196389, 0.345197514, 0.355198514, 0.365199681, 0.375200694, 0.385201875, 0.395202861, 0.405204028, 0.415205028, 0.425206194, 0.435207208, 0.445208375, 0.455209375, 0.465210569, 0.475211611, 0.485212722, 0.495213736, 0.505214889, 0.515215917, 0.525217056, 0.535218069, 0.545219222, 0.555220292, 0.565221403, 0.575222431, 0.585223625, 0.595224653, 0.60522575, 0.615226792, 0.625227917, 0.635228931, 0.645230097, 0.655231083, 0.665232278, 0.675233264, 0.685234431, 0.695235431, 0.705236611, 0.715237611, 0.725238778, 0.735239778, 0.745240944, 0.755242014, 0.765243111, 0.775244153, 0.785245306, 0.795246306, 0.805247458, 0.815248458, 0.825249625, 0.835250653, 0.845251806, 0.855252819, 0.865253972, 0.875254972, 0.885256167, 0.895257167, 0.905258333, 0.915259319, 0.925260486, 0.935261486, 0.945262681, 0.955263736, 0.965264847, 0.975265833, 0.985267056, 0.995268, 1.005269194, 1.015270181, 1.025271347, 1.035272347, 1.045273514] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:27.122" endtime="20201116 13:06:27.123"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.115" endtime="20201116 13:06:27.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:27.127" endtime="20201116 13:06:27.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:27.131" endtime="20201116 13:06:27.150"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.129" endtime="20201116 13:06:27.151"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.125" endtime="20201116 13:06:27.152"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.460" endtime="20201116 13:06:27.152"></status>
</kw>
<msg timestamp="20201116 13:06:27.152" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:27.162" endtime="20201116 13:06:29.283"></status>
</kw>
<msg timestamp="20201116 13:06:29.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 19607091, 'wakeups': [19617127, 19627127, 19637127, 19647127, 19657127...</msg>
<status status="PASS" starttime="20201116 13:06:27.161" endtime="20201116 13:06:29.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.292" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 19607091, 'wakeups': [19617127, 19627127, 19637127, 19647127, 19657127...</msg>
<status status="PASS" starttime="20201116 13:06:29.287" endtime="20201116 13:06:29.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:29.295" endtime="20201116 13:06:29.299"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.157" endtime="20201116 13:06:29.300"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.155" endtime="20201116 13:06:29.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:29.310" level="INFO">${RESULT} = {'wakeups': [19617127, 19627127, 19637127, 19647127, 19657127, 19667127, 19677127, 19687127, 19697127, 19707127, 19717127, 19727127, 19737127, 19747127, 19757127, 19767127, 19777127, 19787127, 1979712...</msg>
<status status="PASS" starttime="20201116 13:06:29.304" endtime="20201116 13:06:29.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.321" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:29.319" endtime="20201116 13:06:29.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.325" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:29.324" endtime="20201116 13:06:29.326"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.312" endtime="20201116 13:06:29.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.331" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:29.330" endtime="20201116 13:06:29.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.334" level="INFO">VALUE: 19607091</msg>
<status status="PASS" starttime="20201116 13:06:29.332" endtime="20201116 13:06:29.334"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.327" endtime="20201116 13:06:29.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.344" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:29.342" endtime="20201116 13:06:29.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.346" level="INFO">VALUE: [19617127, 19627127, 19637127, 19647127, 19657127, 19667127, 19677127, 19687127, 19697127, 19707127, 19717127, 19727127, 19737127, 19747127, 19757127, 19767127, 19777127, 19787127, 19797127, 19807127, 19817127, 19827127, 19837127, 19847127, 19857127, 19867127, 19877127, 19887127, 19897127, 19907127, 19917127, 19927127, 19937127, 19947127, 19957127, 19967127, 19977127, 19987127, 19997127, 20007127, 20017127, 20027127, 20037127, 20047127, 20057127, 20067127, 20077127, 20087127, 20097127, 20107127, 20117127, 20127127, 20137127, 20147127, 20157127, 20167127, 20177127, 20187127, 20197127, 20207127, 20217127, 20227127, 20237127, 20247127, 20257127, 20267127, 20277127, 20287127, 20297127, 20307127, 20317127, 20327127, 20337127, 20347127, 20357127, 20367127, 20377127, 20387127, 20397127, 20407127, 20417127, 20427127, 20437127, 20447127, 20457127, 20467127, 20477127, 20487127, 20497127, 20507127, 20517127, 20527127, 20537127, 20547127, 20557127, 20567127, 20577127, 20587127, 20597127, 20607127]</msg>
<status status="PASS" starttime="20201116 13:06:29.345" endtime="20201116 13:06:29.346"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.335" endtime="20201116 13:06:29.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:29.355" endtime="20201116 13:06:29.703"></status>
</kw>
<msg timestamp="20201116 13:06:29.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03166575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:29.353" endtime="20201116 13:06:29.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03166575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:29.712" endtime="20201116 13:06:29.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:29.729" endtime="20201116 13:06:29.733"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.350" endtime="20201116 13:06:29.734"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.348" endtime="20201116 13:06:29.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:29.791" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:29.737" endtime="20201116 13:06:29.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.801" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:06:29.799" endtime="20201116 13:06:29.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.806" level="INFO">VALUE: 0.021627639</msg>
<status status="PASS" starttime="20201116 13:06:29.804" endtime="20201116 13:06:29.806"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.792" endtime="20201116 13:06:29.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.819" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:29.817" endtime="20201116 13:06:29.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:29.824" level="INFO">VALUE: [0.03166575, 0.041666861, 0.051667861, 0.061669028, 0.071670028, 0.081671181, 0.091672278, 0.101673361, 0.111674375, 0.121675542, 0.131676556, 0.141677736, 0.151678722, 0.161679903, 0.171680917, 0.181682069, 0.191683069, 0.20168425, 0.211685264, 0.221686444, 0.231687431, 0.241688611, 0.251689611, 0.261690778, 0.271691792, 0.281692972, 0.291693972, 0.301695153, 0.311696181, 0.321697347, 0.331698333, 0.3416995, 0.351700514, 0.361701667, 0.371702694, 0.381703847, 0.391704861, 0.401706028, 0.411707028, 0.421708208, 0.431709222, 0.441710389, 0.451711472, 0.461712569, 0.471713569, 0.48171475, 0.49171575, 0.501716917, 0.511717931, 0.521719097, 0.531720139, 0.541721292, 0.551722306, 0.561723458, 0.571724472, 0.581725653, 0.591726653, 0.601727819, 0.611728819, 0.621730014, 0.631731, 0.641732194, 0.651733194, 0.661734389, 0.671735361, 0.681736556, 0.691737542, 0.701738708, 0.711739736, 0.721740931, 0.731741917, 0.741743069, 0.751744069, 0.761745278, 0.77174625, 0.781747431, 0.791748444, 0.801749639, 0.811750611, 0.821751806, 0.831752833, 0.841753958, 0.851754972, 0.861756167, 0.871757222, 0.881758319, 0.891759361, 0.9017605, 0.9117615, 0.921762694, 0.931763708, 0.941764861, 0.951765917, 0.961767056, 0.971768056, 0.981769222, 0.991770236, 1.001771389, 1.011772486, 1.021773569] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:29.821" endtime="20201116 13:06:29.825"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.809" endtime="20201116 13:06:29.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:29.833" endtime="20201116 13:06:29.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:29.842" endtime="20201116 13:06:29.864"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.837" endtime="20201116 13:06:29.865"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.828" endtime="20201116 13:06:29.867"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:27.153" endtime="20201116 13:06:29.867"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.456" endtime="20201116 13:06:29.868"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:24.454" endtime="20201116 13:06:29.868"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:29.875" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:29.896" endtime="20201116 13:06:32.018"></status>
</kw>
<msg timestamp="20201116 13:06:32.019" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 22342169, 'wakeups': [22352219, 22362218, 22372218, 22382218, 22392218...</msg>
<status status="PASS" starttime="20201116 13:06:29.892" endtime="20201116 13:06:32.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.026" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 22342169, 'wakeups': [22352219, 22362218, 22372218, 22382218, 22392218...</msg>
<status status="PASS" starttime="20201116 13:06:32.021" endtime="20201116 13:06:32.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:32.029" endtime="20201116 13:06:32.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.885" endtime="20201116 13:06:32.034"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.880" endtime="20201116 13:06:32.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:32.042" level="INFO">${RESULT} = {'wakeups': [22352219, 22362218, 22372218, 22382218, 22392218, 22402218, 22412218, 22422218, 22432218, 22442218, 22452218, 22462218, 22472218, 22482218, 22492218, 22502218, 22512218, 22522218, 2253221...</msg>
<status status="PASS" starttime="20201116 13:06:32.037" endtime="20201116 13:06:32.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.052" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:32.050" endtime="20201116 13:06:32.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.056" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:32.054" endtime="20201116 13:06:32.057"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.044" endtime="20201116 13:06:32.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.069" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:32.066" endtime="20201116 13:06:32.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.073" level="INFO">VALUE: 22342169</msg>
<status status="PASS" starttime="20201116 13:06:32.071" endtime="20201116 13:06:32.074"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.060" endtime="20201116 13:06:32.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.086" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:32.083" endtime="20201116 13:06:32.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.090" level="INFO">VALUE: [22352219, 22362218, 22372218, 22382218, 22392218, 22402218, 22412218, 22422218, 22432218, 22442218, 22452218, 22462218, 22472218, 22482218, 22492218, 22502218, 22512218, 22522218, 22532218, 22542218, 22552218, 22562218, 22572218, 22582218, 22592218, 22602218, 22612218, 22622218, 22632218, 22642218, 22652218, 22662218, 22672218, 22682218, 22692218, 22702218, 22712218, 22722218, 22732218, 22742218, 22752218, 22762218, 22772218, 22782218, 22792218, 22802218, 22812218, 22822218, 22832218, 22842218, 22852218, 22862218, 22872218, 22882218, 22892218, 22902218, 22912218, 22922218, 22932218, 22942218, 22952218, 22962218, 22972218, 22982218, 22992218, 23002218, 23012218, 23022218, 23032218, 23042218, 23052218, 23062218, 23072218, 23082218, 23092218, 23102218, 23112218, 23122218, 23132218, 23142218, 23152218, 23162218, 23172218, 23182218, 23192218, 23202218, 23212218, 23222218, 23232218, 23242218, 23252218, 23262218, 23272218, 23282218, 23292218, 23302218, 23312218, 23322218, 23332218, 23342218]</msg>
<status status="PASS" starttime="20201116 13:06:32.088" endtime="20201116 13:06:32.091"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.077" endtime="20201116 13:06:32.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:32.112" endtime="20201116 13:06:32.458"></status>
</kw>
<msg timestamp="20201116 13:06:32.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045100903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05515225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:32.109" endtime="20201116 13:06:32.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045100903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05515225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:06:32.462" endtime="20201116 13:06:32.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:32.469" endtime="20201116 13:06:32.471"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.099" endtime="20201116 13:06:32.472"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.094" endtime="20201116 13:06:32.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:32.497" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:32.473" endtime="20201116 13:06:32.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.502" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:32.501" endtime="20201116 13:06:32.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.504" level="INFO">VALUE: 0.045100903</msg>
<status status="PASS" starttime="20201116 13:06:32.503" endtime="20201116 13:06:32.504"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.498" endtime="20201116 13:06:32.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.510" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:32.509" endtime="20201116 13:06:32.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:32.513" level="INFO">VALUE: [0.05515225, 0.065152903, 0.075153903, 0.085155097, 0.095156083, 0.10515725, 0.11515825, 0.125159444, 0.135160444, 0.145161611, 0.155162625, 0.165163792, 0.175164778, 0.185165958, 0.195166958, 0.205168153, 0.215169139, 0.225170319, 0.235171319, 0.245172472, 0.255173486, 0.265174653, 0.275175653, 0.285176833, 0.295177833, 0.305179028, 0.315180014, 0.325181181, 0.335182181, 0.345183375, 0.355184361, 0.365185542, 0.375186542, 0.385187736, 0.395188736, 0.405189889, 0.415190903, 0.425192069, 0.435193083, 0.445194278, 0.45519525, 0.465196444, 0.475197417, 0.485198597, 0.495199611, 0.505200792, 0.515201792, 0.525203, 0.535204, 0.545205167, 0.555206125, 0.565207306, 0.575208319, 0.585209486, 0.595210542, 0.605211653, 0.615212667, 0.625213833, 0.635214833, 0.645216014, 0.655217014, 0.665218194, 0.675219194, 0.685220417, 0.695221389, 0.705222542, 0.715223542, 0.725224722, 0.735225722, 0.745226903, 0.755227917, 0.765229069, 0.775230097, 0.78523125, 0.79523225, 0.805233444, 0.815234444, 0.825235611, 0.835236611, 0.845237778, 0.855238792, 0.865239958, 0.875240972, 0.885242139, 0.895243139, 0.905244319, 0.915245319, 0.9252465, 0.9352475, 0.945248667, 0.955249681, 0.965250847, 0.975251875, 0.985253014, 0.995254028, 1.005255194, 1.015256194, 1.025257458, 1.035258375, 1.045259556] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:32.511" endtime="20201116 13:06:32.513"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.506" endtime="20201116 13:06:32.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:32.517" endtime="20201116 13:06:32.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:32.521" endtime="20201116 13:06:32.540"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.519" endtime="20201116 13:06:32.541"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.515" endtime="20201116 13:06:32.541"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.876" endtime="20201116 13:06:32.542"></status>
</kw>
<msg timestamp="20201116 13:06:32.542" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:32.553" endtime="20201116 13:06:34.653"></status>
</kw>
<msg timestamp="20201116 13:06:34.654" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 24997723, 'wakeups': [25007772, 25017772, 25027772, 25037772, 25047772...</msg>
<status status="PASS" starttime="20201116 13:06:32.551" endtime="20201116 13:06:34.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.661" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 24997723, 'wakeups': [25007772, 25017772, 25027772, 25037772, 25047772...</msg>
<status status="PASS" starttime="20201116 13:06:34.659" endtime="20201116 13:06:34.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:34.662" endtime="20201116 13:06:34.664"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.547" endtime="20201116 13:06:34.665"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.544" endtime="20201116 13:06:34.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:34.669" level="INFO">${RESULT} = {'wakeups': [25007772, 25017772, 25027772, 25037772, 25047772, 25057772, 25067772, 25077772, 25087772, 25097772, 25107772, 25117772, 25127772, 25137772, 25147772, 25157772, 25167772, 25177772, 2518777...</msg>
<status status="PASS" starttime="20201116 13:06:34.666" endtime="20201116 13:06:34.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.674" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:34.672" endtime="20201116 13:06:34.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.676" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:34.675" endtime="20201116 13:06:34.676"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:34.670" endtime="20201116 13:06:34.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.682" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:34.680" endtime="20201116 13:06:34.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.684" level="INFO">VALUE: 24997723</msg>
<status status="PASS" starttime="20201116 13:06:34.683" endtime="20201116 13:06:34.684"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:34.677" endtime="20201116 13:06:34.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.690" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:34.689" endtime="20201116 13:06:34.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:34.692" level="INFO">VALUE: [25007772, 25017772, 25027772, 25037772, 25047772, 25057772, 25067772, 25077772, 25087772, 25097772, 25107772, 25117772, 25127772, 25137772, 25147772, 25157772, 25167772, 25177772, 25187772, 25197772, 25207772, 25217772, 25227772, 25237772, 25247772, 25257772, 25267772, 25277772, 25287772, 25297772, 25307772, 25317772, 25327772, 25337772, 25347772, 25357772, 25367772, 25377772, 25387772, 25397772, 25407772, 25417772, 25427772, 25437772, 25447772, 25457772, 25467772, 25477772, 25487772, 25497772, 25507772, 25517772, 25527772, 25537772, 25547772, 25557772, 25567772, 25577772, 25587772, 25597772, 25607772, 25617772, 25627772, 25637772, 25647772, 25657772, 25667772, 25677772, 25687772, 25697772, 25707772, 25717772, 25727772, 25737772, 25747772, 25757772, 25767772, 25777772, 25787772, 25797772, 25807772, 25817772, 25827772, 25837772, 25847772, 25857772, 25867772, 25877772, 25887772, 25897772, 25907772, 25917772, 25927772, 25937772, 25947772, 25957772, 25967772, 25977772, 25987772, 25997772]</msg>
<status status="PASS" starttime="20201116 13:06:34.691" endtime="20201116 13:06:34.693"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:34.686" endtime="20201116 13:06:34.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:34.701" endtime="20201116 13:06:35.025"></status>
</kw>
<msg timestamp="20201116 13:06:35.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032662847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:34.700" endtime="20201116 13:06:35.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032662847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:35.034" endtime="20201116 13:06:35.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:35.051" endtime="20201116 13:06:35.055"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:34.696" endtime="20201116 13:06:35.057"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:34.694" endtime="20201116 13:06:35.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:35.114" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:35.060" endtime="20201116 13:06:35.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.125" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:06:35.122" endtime="20201116 13:06:35.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.129" level="INFO">VALUE: 0.022611903</msg>
<status status="PASS" starttime="20201116 13:06:35.127" endtime="20201116 13:06:35.130"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.116" endtime="20201116 13:06:35.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.143" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:35.140" endtime="20201116 13:06:35.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:35.147" level="INFO">VALUE: [0.032662847, 0.042664542, 0.052665528, 0.062666708, 0.072667694, 0.082668861, 0.092669889, 0.102671097, 0.112672042, 0.122673208, 0.132674278, 0.142675389, 0.152676403, 0.162677569, 0.172678569, 0.182679736, 0.192680736, 0.202681903, 0.212682917, 0.222684083, 0.232685083, 0.24268625, 0.252687292, 0.262688458, 0.2726895, 0.282690611, 0.292691625, 0.302692778, 0.312693806, 0.322694958, 0.332695986, 0.342697139, 0.352698167, 0.362699306, 0.372700319, 0.382701542, 0.392702486, 0.402703653, 0.412704667, 0.422705833, 0.432706847, 0.442708056, 0.452709028, 0.462710181, 0.472711181, 0.482712403, 0.492713431, 0.502714528, 0.512715597, 0.522716708, 0.532717722, 0.542718903, 0.552719903, 0.562721056, 0.572722069, 0.582723236, 0.592724236, 0.602725403, 0.612726431, 0.622727583, 0.632728583, 0.642729778, 0.652730764, 0.662731931, 0.672732944, 0.682734111, 0.692735111, 0.702736306, 0.712737292, 0.722738472, 0.7327395, 0.742740653, 0.752741639, 0.762742833, 0.772743833, 0.782744986, 0.792745986, 0.802747222, 0.812748181, 0.822749347, 0.832750361, 0.842751514, 0.852752528, 0.862753694, 0.872754708, 0.882755861, 0.892756875, 0.902758056, 0.912759042, 0.922760236, 0.932761222, 0.942762389, 0.952763389, 0.962764569, 0.972765569, 0.98276675, 0.99276775, 1.002768917, 1.012769917, 1.022771097] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:35.145" endtime="20201116 13:06:35.148"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.133" endtime="20201116 13:06:35.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:35.156" endtime="20201116 13:06:35.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:35.164" endtime="20201116 13:06:35.186"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.160" endtime="20201116 13:06:35.188"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.151" endtime="20201116 13:06:35.190"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:32.543" endtime="20201116 13:06:35.190"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.871" endtime="20201116 13:06:35.191"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:29.869" endtime="20201116 13:06:35.191"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:35.197" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:35.218" endtime="20201116 13:06:37.340"></status>
</kw>
<msg timestamp="20201116 13:06:37.342" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 27664543, 'wakeups': [27674606, 27684605, 27694605, 27704605, 27714605...</msg>
<status status="PASS" starttime="20201116 13:06:35.215" endtime="20201116 13:06:37.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 27664543, 'wakeups': [27674606, 27684605, 27694605, 27704605, 27714605...</msg>
<status status="PASS" starttime="20201116 13:06:37.344" endtime="20201116 13:06:37.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:37.351" endtime="20201116 13:06:37.355"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.208" endtime="20201116 13:06:37.356"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.202" endtime="20201116 13:06:37.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:37.364" level="INFO">${RESULT} = {'wakeups': [27674606, 27684605, 27694605, 27704605, 27714605, 27724605, 27734605, 27744605, 27754605, 27764605, 27774605, 27784605, 27794605, 27804605, 27814605, 27824605, 27834605, 27844605, 2785460...</msg>
<status status="PASS" starttime="20201116 13:06:37.359" endtime="20201116 13:06:37.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.375" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:37.372" endtime="20201116 13:06:37.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.379" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:37.377" endtime="20201116 13:06:37.380"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.366" endtime="20201116 13:06:37.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.391" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:37.389" endtime="20201116 13:06:37.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.396" level="INFO">VALUE: 27664543</msg>
<status status="PASS" starttime="20201116 13:06:37.394" endtime="20201116 13:06:37.397"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.383" endtime="20201116 13:06:37.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.408" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:37.406" endtime="20201116 13:06:37.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.415" level="INFO">VALUE: [27674606, 27684605, 27694605, 27704605, 27714605, 27724605, 27734605, 27744605, 27754605, 27764605, 27774605, 27784605, 27794605, 27804605, 27814605, 27824605, 27834605, 27844605, 27854605, 27864605, 27874605, 27884605, 27894605, 27904605, 27914605, 27924605, 27934605, 27944605, 27954605, 27964605, 27974605, 27984605, 27994605, 28004605, 28014605, 28024605, 28034605, 28044605, 28054605, 28064605, 28074605, 28084605, 28094605, 28104605, 28114605, 28124605, 28134605, 28144605, 28154605, 28164605, 28174605, 28184605, 28194605, 28204605, 28214605, 28224605, 28234605, 28244605, 28254605, 28264605, 28274605, 28284605, 28294605, 28304605, 28314605, 28324605, 28334605, 28344605, 28354605, 28364605, 28374605, 28384605, 28394605, 28404605, 28414605, 28424605, 28434605, 28444605, 28454605, 28464605, 28474605, 28484605, 28494605, 28504605, 28514605, 28524605, 28534605, 28544605, 28554605, 28564605, 28574605, 28584605, 28594605, 28604605, 28614605, 28624605, 28634605, 28644605, 28654605, 28664605]</msg>
<status status="PASS" starttime="20201116 13:06:37.411" endtime="20201116 13:06:37.416"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.400" endtime="20201116 13:06:37.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:37.434" endtime="20201116 13:06:37.788"></status>
</kw>
<msg timestamp="20201116 13:06:37.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044931806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054997, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:06:37.431" endtime="20201116 13:06:37.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044931806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054997, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:06:37.797" endtime="20201116 13:06:37.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:37.814" endtime="20201116 13:06:37.818"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.424" endtime="20201116 13:06:37.819"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.419" endtime="20201116 13:06:37.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:37.876" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:37.822" endtime="20201116 13:06:37.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.886" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:37.884" endtime="20201116 13:06:37.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.891" level="INFO">VALUE: 0.044931806</msg>
<status status="PASS" starttime="20201116 13:06:37.889" endtime="20201116 13:06:37.891"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.877" endtime="20201116 13:06:37.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.898" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:37.897" endtime="20201116 13:06:37.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:37.900" level="INFO">VALUE: [0.054997, 0.064997639, 0.074998597, 0.084999764, 0.095000764, 0.105001944, 0.115002944, 0.125004111, 0.135005111, 0.145006278, 0.155007319, 0.165008458, 0.175009458, 0.185010625, 0.195011639, 0.205012833, 0.215013806, 0.225015014, 0.235015986, 0.245017153, 0.255018153, 0.265019319, 0.275020333, 0.285021486, 0.295022514, 0.305023667, 0.315024667, 0.325025833, 0.335026847, 0.345028028, 0.355029028, 0.365030194, 0.375031194, 0.385032361, 0.395033361, 0.405034569, 0.415035542, 0.425036708, 0.435037708, 0.445038903, 0.455039889, 0.465041069, 0.475042069, 0.485043236, 0.495044236, 0.505045403, 0.515046431, 0.525047597, 0.535048583, 0.545049806, 0.555050819, 0.565051972, 0.575052944, 0.585054111, 0.595055111, 0.605056278, 0.615057319, 0.625058472, 0.635059458, 0.645060625, 0.655061639, 0.665062847, 0.675063806, 0.685064986, 0.695065986, 0.705067153, 0.715068167, 0.725069333, 0.735070333, 0.7450715, 0.7550725, 0.765073681, 0.775074681, 0.785075847, 0.795076861, 0.805078028, 0.815079028, 0.825080208, 0.835081236, 0.845082375, 0.855083375, 0.865084569, 0.875085556, 0.885086736, 0.895087722, 0.905088972, 0.915089903, 0.925091139, 0.935092083, 0.945093264, 0.955094292, 0.965095417, 0.975096431, 0.985097597, 0.995098611, 1.005099778, 1.015100833, 1.025101944, 1.035102944, 1.045104139] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:37.899" endtime="20201116 13:06:37.901"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.893" endtime="20201116 13:06:37.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:37.904" endtime="20201116 13:06:37.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:37.908" endtime="20201116 13:06:37.928"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.906" endtime="20201116 13:06:37.929"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.902" endtime="20201116 13:06:37.929"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.198" endtime="20201116 13:06:37.930"></status>
</kw>
<msg timestamp="20201116 13:06:37.930" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:37.941" endtime="20201116 13:06:40.051"></status>
</kw>
<msg timestamp="20201116 13:06:40.052" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 30385590, 'wakeups': [30395654, 30405652, 30415652, 30425652, 30435652...</msg>
<status status="PASS" starttime="20201116 13:06:37.939" endtime="20201116 13:06:40.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.055" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 30385590, 'wakeups': [30395654, 30405652, 30415652, 30425652, 30435652...</msg>
<status status="PASS" starttime="20201116 13:06:40.053" endtime="20201116 13:06:40.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:40.057" endtime="20201116 13:06:40.058"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.936" endtime="20201116 13:06:40.059"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.932" endtime="20201116 13:06:40.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:40.063" level="INFO">${RESULT} = {'wakeups': [30395654, 30405652, 30415652, 30425652, 30435652, 30445652, 30455652, 30465652, 30475652, 30485652, 30495652, 30505652, 30515652, 30525652, 30535652, 30545652, 30555652, 30565652, 3057565...</msg>
<status status="PASS" starttime="20201116 13:06:40.060" endtime="20201116 13:06:40.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.068" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:40.067" endtime="20201116 13:06:40.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.070" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:40.069" endtime="20201116 13:06:40.070"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.064" endtime="20201116 13:06:40.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.076" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:40.075" endtime="20201116 13:06:40.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.078" level="INFO">VALUE: 30385590</msg>
<status status="PASS" starttime="20201116 13:06:40.077" endtime="20201116 13:06:40.078"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.071" endtime="20201116 13:06:40.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.084" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:40.083" endtime="20201116 13:06:40.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.087" level="INFO">VALUE: [30395654, 30405652, 30415652, 30425652, 30435652, 30445652, 30455652, 30465652, 30475652, 30485652, 30495652, 30505652, 30515652, 30525652, 30535652, 30545652, 30555652, 30565652, 30575652, 30585652, 30595652, 30605652, 30615652, 30625652, 30635652, 30645652, 30655652, 30665652, 30675652, 30685652, 30695652, 30705652, 30715652, 30725652, 30735652, 30745652, 30755652, 30765652, 30775652, 30785652, 30795652, 30805652, 30815652, 30825652, 30835652, 30845652, 30855652, 30865652, 30875652, 30885652, 30895652, 30905652, 30915652, 30925652, 30935652, 30945652, 30955652, 30965652, 30975652, 30985652, 30995652, 31005652, 31015652, 31025652, 31035652, 31045652, 31055652, 31065652, 31075652, 31085652, 31095652, 31105652, 31115652, 31125652, 31135652, 31145652, 31155652, 31165652, 31175652, 31185652, 31195652, 31205652, 31215652, 31225652, 31235652, 31245652, 31255652, 31265652, 31275652, 31285652, 31295652, 31305652, 31315652, 31325652, 31335652, 31345652, 31355652, 31365652, 31375652, 31385652]</msg>
<status status="PASS" starttime="20201116 13:06:40.085" endtime="20201116 13:06:40.087"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.079" endtime="20201116 13:06:40.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:40.096" endtime="20201116 13:06:40.404"></status>
</kw>
<msg timestamp="20201116 13:06:40.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032849097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:40.094" endtime="20201116 13:06:40.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032849097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:40.412" endtime="20201116 13:06:40.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:40.429" endtime="20201116 13:06:40.433"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.090" endtime="20201116 13:06:40.435"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.088" endtime="20201116 13:06:40.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:40.493" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:40.438" endtime="20201116 13:06:40.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.504" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:06:40.501" endtime="20201116 13:06:40.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.508" level="INFO">VALUE: 0.022783375</msg>
<status status="PASS" starttime="20201116 13:06:40.506" endtime="20201116 13:06:40.509"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.495" endtime="20201116 13:06:40.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.521" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:40.519" endtime="20201116 13:06:40.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:40.526" level="INFO">VALUE: [0.032849097, 0.042848847, 0.052849847, 0.062851028, 0.072852028, 0.082853181, 0.092854236, 0.102855361, 0.112856375, 0.122857528, 0.132858528, 0.142859694, 0.152860694, 0.162861903, 0.172862861, 0.182864028, 0.192865042, 0.202866194, 0.212867194, 0.222868375, 0.232869375, 0.242870542, 0.252871542, 0.262872722, 0.272873736, 0.282874903, 0.292875917, 0.302877097, 0.312878097, 0.322879278, 0.332880292, 0.342881458, 0.352882472, 0.362883653, 0.372884667, 0.382885861, 0.392886847, 0.402888014, 0.412889014, 0.422890264, 0.432891194, 0.442892375, 0.452893417, 0.462894556, 0.472895569, 0.482896736, 0.492897764, 0.502898931, 0.512899931, 0.522901181, 0.532902125, 0.542903292, 0.552904292, 0.562905472, 0.5729065, 0.582907708, 0.592908667, 0.602909847, 0.612910861, 0.622912028, 0.632913028, 0.642914278, 0.652915208, 0.662916389, 0.672917403, 0.682918569, 0.692919597, 0.70292075, 0.712921764, 0.722922958, 0.732923944, 0.742925111, 0.752926139, 0.762927306, 0.772928319, 0.782929486, 0.792930486, 0.802931667, 0.812932736, 0.822933875, 0.832934847, 0.842936028, 0.852937028, 0.862938222, 0.872939236, 0.882940389, 0.892941403, 0.902942569, 0.912943583, 0.922944764, 0.932945764, 0.942946944, 0.952947958, 0.962949125, 0.972950125, 0.982951292, 0.992952347, 1.002953486, 1.012954486, 1.022955667] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:40.524" endtime="20201116 13:06:40.527"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.511" endtime="20201116 13:06:40.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:40.535" endtime="20201116 13:06:40.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:40.543" endtime="20201116 13:06:40.566"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.539" endtime="20201116 13:06:40.567"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.530" endtime="20201116 13:06:40.569"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:37.930" endtime="20201116 13:06:40.570"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.194" endtime="20201116 13:06:40.570"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:35.192" endtime="20201116 13:06:40.570"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:40.576" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:40.597" endtime="20201116 13:06:42.720"></status>
</kw>
<msg timestamp="20201116 13:06:42.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 33043787, 'wakeups': [33053865, 33063864, 33073864, 33083864, 33093864...</msg>
<status status="PASS" starttime="20201116 13:06:40.594" endtime="20201116 13:06:42.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 33043787, 'wakeups': [33053865, 33063864, 33073864, 33083864, 33093864...</msg>
<status status="PASS" starttime="20201116 13:06:42.723" endtime="20201116 13:06:42.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:42.730" endtime="20201116 13:06:42.734"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.587" endtime="20201116 13:06:42.736"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.581" endtime="20201116 13:06:42.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:42.744" level="INFO">${RESULT} = {'wakeups': [33053865, 33063864, 33073864, 33083864, 33093864, 33103864, 33113864, 33123864, 33133864, 33143864, 33153864, 33163864, 33173864, 33183864, 33193864, 33203864, 33213864, 33223864, 3323386...</msg>
<status status="PASS" starttime="20201116 13:06:42.739" endtime="20201116 13:06:42.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.755" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:42.753" endtime="20201116 13:06:42.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.760" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:42.758" endtime="20201116 13:06:42.761"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:42.746" endtime="20201116 13:06:42.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.773" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:42.771" endtime="20201116 13:06:42.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.778" level="INFO">VALUE: 33043787</msg>
<status status="PASS" starttime="20201116 13:06:42.776" endtime="20201116 13:06:42.778"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:42.764" endtime="20201116 13:06:42.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.790" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:42.788" endtime="20201116 13:06:42.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:42.797" level="INFO">VALUE: [33053865, 33063864, 33073864, 33083864, 33093864, 33103864, 33113864, 33123864, 33133864, 33143864, 33153864, 33163864, 33173864, 33183864, 33193864, 33203864, 33213864, 33223864, 33233864, 33243864, 33253864, 33263864, 33273864, 33283864, 33293864, 33303864, 33313864, 33323864, 33333864, 33343864, 33353864, 33363864, 33373864, 33383864, 33393864, 33403864, 33413864, 33423864, 33433864, 33443864, 33453864, 33463864, 33473864, 33483864, 33493864, 33503864, 33513864, 33523864, 33533864, 33543864, 33553864, 33563864, 33573864, 33583864, 33593864, 33603864, 33613864, 33623864, 33633864, 33643864, 33653864, 33663864, 33673864, 33683864, 33693864, 33703864, 33713864, 33723864, 33733864, 33743864, 33753864, 33763864, 33773864, 33783864, 33793864, 33803864, 33813864, 33823864, 33833864, 33843864, 33853864, 33863864, 33873864, 33883864, 33893864, 33903864, 33913864, 33923864, 33933864, 33943864, 33953864, 33963864, 33973864, 33983864, 33993864, 34003864, 34013864, 34023864, 34033864, 34043864]</msg>
<status status="PASS" starttime="20201116 13:06:42.794" endtime="20201116 13:06:42.798"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:42.781" endtime="20201116 13:06:42.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:42.817" endtime="20201116 13:06:43.171"></status>
</kw>
<msg timestamp="20201116 13:06:43.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044841986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054922139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:42.814" endtime="20201116 13:06:43.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044841986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054922139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:43.180" endtime="20201116 13:06:43.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.197" endtime="20201116 13:06:43.201"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:42.806" endtime="20201116 13:06:43.203"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:42.801" endtime="20201116 13:06:43.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:43.259" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:43.206" endtime="20201116 13:06:43.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.269" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:43.267" endtime="20201116 13:06:43.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.274" level="INFO">VALUE: 0.044841986</msg>
<status status="PASS" starttime="20201116 13:06:43.272" endtime="20201116 13:06:43.275"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.260" endtime="20201116 13:06:43.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.287" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:43.285" endtime="20201116 13:06:43.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:43.292" level="INFO">VALUE: [0.054922139, 0.064922208, 0.074923236, 0.084924458, 0.094925403, 0.104926569, 0.114927569, 0.124928764, 0.13492975, 0.144930917, 0.154931931, 0.164933111, 0.174934125, 0.184935319, 0.194936278, 0.204937472, 0.214938458, 0.224939653, 0.234940694, 0.244941819, 0.254942819, 0.264944, 0.274945, 0.284946167, 0.294947181, 0.304948361, 0.314949361, 0.324950528, 0.334951542, 0.344952708, 0.354953722, 0.364954889, 0.374955903, 0.384957069, 0.394958083, 0.40495925, 0.414960264, 0.424961431, 0.434962472, 0.444963625, 0.454964625, 0.464965792, 0.474966806, 0.484967972, 0.494968972, 0.504970153, 0.514971167, 0.524972347, 0.534973333, 0.544974514, 0.554975528, 0.564976694, 0.574977694, 0.584978889, 0.594979875, 0.604981083, 0.614982056, 0.624983236, 0.634984236, 0.644985458, 0.654986417, 0.664987611, 0.674988597, 0.684989778, 0.694990792, 0.704991986, 0.714992972, 0.724994153, 0.734995153, 0.744996333, 0.754997319, 0.7649985, 0.7749995, 0.785000681, 0.795001681, 0.805002875, 0.815003903, 0.825005042, 0.835006056, 0.845007236, 0.85500825, 0.865009431, 0.875010403, 0.885011583, 0.895012625, 0.905013764, 0.915014806, 0.925015944, 0.935016944, 0.945018125, 0.955019125, 0.965020306, 0.975021306, 0.9850225, 0.995023486, 1.005024667, 1.015025694, 1.025026861, 1.035027861, 1.045029083] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:43.289" endtime="20201116 13:06:43.293"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.277" endtime="20201116 13:06:43.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.301" endtime="20201116 13:06:43.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:43.309" endtime="20201116 13:06:43.331"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.305" endtime="20201116 13:06:43.332"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.296" endtime="20201116 13:06:43.334"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.578" endtime="20201116 13:06:43.335"></status>
</kw>
<msg timestamp="20201116 13:06:43.335" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:43.354" endtime="20201116 13:06:45.474"></status>
</kw>
<msg timestamp="20201116 13:06:45.475" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 35798469, 'wakeups': [35808548, 35818546, 35828546, 35838546, 35848546...</msg>
<status status="PASS" starttime="20201116 13:06:43.352" endtime="20201116 13:06:45.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 35798469, 'wakeups': [35808548, 35818546, 35828546, 35838546, 35848546...</msg>
<status status="PASS" starttime="20201116 13:06:45.478" endtime="20201116 13:06:45.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:45.485" endtime="20201116 13:06:45.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.347" endtime="20201116 13:06:45.491"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.340" endtime="20201116 13:06:45.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:45.498" level="INFO">${RESULT} = {'wakeups': [35808548, 35818546, 35828546, 35838546, 35848546, 35858546, 35868546, 35878546, 35888546, 35898546, 35908546, 35918546, 35928546, 35938546, 35948546, 35958546, 35968546, 35978546, 3598854...</msg>
<status status="PASS" starttime="20201116 13:06:45.494" endtime="20201116 13:06:45.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.507" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:45.506" endtime="20201116 13:06:45.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.509" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:45.508" endtime="20201116 13:06:45.510"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.500" endtime="20201116 13:06:45.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.515" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:45.514" endtime="20201116 13:06:45.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.517" level="INFO">VALUE: 35798469</msg>
<status status="PASS" starttime="20201116 13:06:45.516" endtime="20201116 13:06:45.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.511" endtime="20201116 13:06:45.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.523" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:45.522" endtime="20201116 13:06:45.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.526" level="INFO">VALUE: [35808548, 35818546, 35828546, 35838546, 35848546, 35858546, 35868546, 35878546, 35888546, 35898546, 35908546, 35918546, 35928546, 35938546, 35948546, 35958546, 35968546, 35978546, 35988546, 35998546, 36008546, 36018546, 36028546, 36038546, 36048546, 36058546, 36068546, 36078546, 36088546, 36098546, 36108546, 36118546, 36128546, 36138546, 36148546, 36158546, 36168546, 36178546, 36188546, 36198546, 36208546, 36218546, 36228546, 36238546, 36248546, 36258546, 36268546, 36278546, 36288546, 36298546, 36308546, 36318546, 36328546, 36338546, 36348546, 36358546, 36368546, 36378546, 36388546, 36398546, 36408546, 36418546, 36428546, 36438546, 36448546, 36458546, 36468546, 36478546, 36488546, 36498546, 36508546, 36518546, 36528546, 36538546, 36548546, 36558546, 36568546, 36578546, 36588546, 36598546, 36608546, 36618546, 36628546, 36638546, 36648546, 36658546, 36668546, 36678546, 36688546, 36698546, 36708546, 36718546, 36728546, 36738546, 36748546, 36758546, 36768546, 36778546, 36788546, 36798546]</msg>
<status status="PASS" starttime="20201116 13:06:45.524" endtime="20201116 13:06:45.526"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.519" endtime="20201116 13:06:45.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:45.535" endtime="20201116 13:06:45.861"></status>
</kw>
<msg timestamp="20201116 13:06:45.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044500472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201116 13:06:45.533" endtime="20201116 13:06:45.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044500472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201116 13:06:45.870" endtime="20201116 13:06:45.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:45.887" endtime="20201116 13:06:45.891"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.530" endtime="20201116 13:06:45.893"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.527" endtime="20201116 13:06:45.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:45.951" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:45.896" endtime="20201116 13:06:45.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.963" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:06:45.961" endtime="20201116 13:06:45.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.967" level="INFO">VALUE: 0.03442</msg>
<status status="PASS" starttime="20201116 13:06:45.965" endtime="20201116 13:06:45.968"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.954" endtime="20201116 13:06:45.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.981" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:45.978" endtime="20201116 13:06:45.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:45.985" level="INFO">VALUE: [0.044500472, 0.054499569, 0.064500569, 0.074501736, 0.084502736, 0.094503903, 0.104504917, 0.114506097, 0.124507083, 0.134508278, 0.144509264, 0.154510444, 0.164511458, 0.174512625, 0.184513625, 0.194514792, 0.204515792, 0.214516986, 0.224517986, 0.234519139, 0.244520139, 0.254521319, 0.264522375, 0.2745235, 0.284524514, 0.294525667, 0.304526667, 0.314527903, 0.324528847, 0.334530028, 0.344531056, 0.354532194, 0.364533208, 0.374534375, 0.384535389, 0.394536569, 0.404537556, 0.414538819, 0.424539736, 0.434540903, 0.444541917, 0.454543083, 0.464544125, 0.474545264, 0.484546264, 0.494547444, 0.504548444, 0.514549625, 0.524550639, 0.534551806, 0.544552847, 0.554553972, 0.564554986, 0.574556167, 0.584557167, 0.594558361, 0.604559333, 0.614560514, 0.624561514, 0.634562708, 0.644563708, 0.654564861, 0.664565875, 0.674567042, 0.684568056, 0.694569236, 0.704570222, 0.714571403, 0.724572403, 0.734573597, 0.744574597, 0.754575792, 0.764576764, 0.774577931, 0.784578944, 0.794580125, 0.804581125, 0.814582292, 0.824583292, 0.834584472, 0.8445855, 0.854586639, 0.864587667, 0.874588833, 0.884589847, 0.894591, 0.904592, 0.914593194, 0.924594194, 0.934595375, 0.944596389, 0.954597542, 0.964598556, 0.974599722, 0.984600736, 0.994601903, 1.004602917, 1.014604069, 1.024605069, 1.03460625] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:45.983" endtime="20201116 13:06:45.986"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.971" endtime="20201116 13:06:45.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:45.994" endtime="20201116 13:06:45.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:46.003" endtime="20201116 13:06:46.024"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.998" endtime="20201116 13:06:46.026"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:45.990" endtime="20201116 13:06:46.028"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:43.336" endtime="20201116 13:06:46.028"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.573" endtime="20201116 13:06:46.029"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:40.571" endtime="20201116 13:06:46.029"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:46.035" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:46.056" endtime="20201116 13:06:48.179"></status>
</kw>
<msg timestamp="20201116 13:06:48.180" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 38502660, 'wakeups': [38512757, 38522754, 38532754, 38542754, 38552754...</msg>
<status status="PASS" starttime="20201116 13:06:46.053" endtime="20201116 13:06:48.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.187" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 38502660, 'wakeups': [38512757, 38522754, 38532754, 38542754, 38552754...</msg>
<status status="PASS" starttime="20201116 13:06:48.183" endtime="20201116 13:06:48.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:48.190" endtime="20201116 13:06:48.193"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.046" endtime="20201116 13:06:48.195"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.040" endtime="20201116 13:06:48.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:48.203" level="INFO">${RESULT} = {'wakeups': [38512757, 38522754, 38532754, 38542754, 38552754, 38562754, 38572754, 38582754, 38592754, 38602754, 38612754, 38622754, 38632754, 38642754, 38652754, 38662754, 38672754, 38682754, 3869275...</msg>
<status status="PASS" starttime="20201116 13:06:48.198" endtime="20201116 13:06:48.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.214" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:48.211" endtime="20201116 13:06:48.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.219" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:48.217" endtime="20201116 13:06:48.220"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.204" endtime="20201116 13:06:48.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.233" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:48.230" endtime="20201116 13:06:48.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.237" level="INFO">VALUE: 38502660</msg>
<status status="PASS" starttime="20201116 13:06:48.235" endtime="20201116 13:06:48.238"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.223" endtime="20201116 13:06:48.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.251" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:48.247" endtime="20201116 13:06:48.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.256" level="INFO">VALUE: [38512757, 38522754, 38532754, 38542754, 38552754, 38562754, 38572754, 38582754, 38592754, 38602754, 38612754, 38622754, 38632754, 38642754, 38652754, 38662754, 38672754, 38682754, 38692754, 38702754, 38712754, 38722754, 38732754, 38742754, 38752754, 38762754, 38772754, 38782754, 38792754, 38802754, 38812754, 38822754, 38832754, 38842754, 38852754, 38862754, 38872754, 38882754, 38892754, 38902754, 38912754, 38922754, 38932754, 38942754, 38952754, 38962754, 38972754, 38982754, 38992754, 39002754, 39012754, 39022754, 39032754, 39042754, 39052754, 39062754, 39072754, 39082754, 39092754, 39102754, 39112754, 39122754, 39132754, 39142754, 39152754, 39162754, 39172754, 39182754, 39192754, 39202754, 39212754, 39222754, 39232754, 39242754, 39252754, 39262754, 39272754, 39282754, 39292754, 39302754, 39312754, 39322754, 39332754, 39342754, 39352754, 39362754, 39372754, 39382754, 39392754, 39402754, 39412754, 39422754, 39432754, 39442754, 39452754, 39462754, 39472754, 39482754, 39492754, 39502754]</msg>
<status status="PASS" starttime="20201116 13:06:48.254" endtime="20201116 13:06:48.257"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.241" endtime="20201116 13:06:48.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:48.276" endtime="20201116 13:06:48.630"></status>
</kw>
<msg timestamp="20201116 13:06:48.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055106944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:48.272" endtime="20201116 13:06:48.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055106944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:48.640" endtime="20201116 13:06:48.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:48.657" endtime="20201116 13:06:48.661"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.265" endtime="20201116 13:06:48.663"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.260" endtime="20201116 13:06:48.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:48.712" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:48.666" endtime="20201116 13:06:48.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.718" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:48.717" endtime="20201116 13:06:48.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.720" level="INFO">VALUE: 0.045008486</msg>
<status status="PASS" starttime="20201116 13:06:48.719" endtime="20201116 13:06:48.720"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.713" endtime="20201116 13:06:48.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.726" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:48.725" endtime="20201116 13:06:48.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:48.728" level="INFO">VALUE: [0.055106944, 0.065104986, 0.075105972, 0.085107139, 0.095108139, 0.105109319, 0.115110319, 0.125111486, 0.135112486, 0.145113722, 0.155114681, 0.165115847, 0.175116833, 0.185118028, 0.195119028, 0.205120181, 0.215121181, 0.225122375, 0.235123375, 0.245124528, 0.255125542, 0.265126722, 0.275127722, 0.285128903, 0.295129889, 0.305131069, 0.315132056, 0.325133236, 0.33513425, 0.345135403, 0.355136431, 0.365137583, 0.375138597, 0.385139778, 0.395140764, 0.405141931, 0.415142944, 0.425144111, 0.435145125, 0.445146292, 0.455147292, 0.465148472, 0.475149472, 0.485150653, 0.495151639, 0.505152819, 0.515153819, 0.525155, 0.535155986, 0.545157208, 0.555158167, 0.565159389, 0.575160361, 0.585161514, 0.595162514, 0.605163694, 0.615164708, 0.625165875, 0.635166875, 0.645168042, 0.655169042, 0.665170236, 0.675171222, 0.685172389, 0.695173417, 0.705174597, 0.715175639, 0.725176764, 0.735177764, 0.745178917, 0.755179944, 0.765181097, 0.775182097, 0.785183306, 0.795184278, 0.805185444, 0.815186472, 0.825187625, 0.835188639, 0.845189847, 0.855190806, 0.865191972, 0.875193028, 0.885194167, 0.895195194, 0.905196333, 0.915197347, 0.9251985, 0.935199542, 0.945200708, 0.955201694, 0.965202861, 0.975203875, 0.985205028, 0.995206028, 1.005207222, 1.015208222, 1.025209389, 1.035210389, 1.045211569] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:48.727" endtime="20201116 13:06:48.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.722" endtime="20201116 13:06:48.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:48.733" endtime="20201116 13:06:48.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:48.737" endtime="20201116 13:06:48.756"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.735" endtime="20201116 13:06:48.757"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.731" endtime="20201116 13:06:48.758"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.037" endtime="20201116 13:06:48.758"></status>
</kw>
<msg timestamp="20201116 13:06:48.759" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:48.769" endtime="20201116 13:06:50.886"></status>
</kw>
<msg timestamp="20201116 13:06:50.887" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 41213342, 'wakeups': [41223439, 41233436, 41243436, 41253436, 41263436...</msg>
<status status="PASS" starttime="20201116 13:06:48.767" endtime="20201116 13:06:50.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 41213342, 'wakeups': [41223439, 41233436, 41243436, 41253436, 41263436...</msg>
<status status="PASS" starttime="20201116 13:06:50.889" endtime="20201116 13:06:50.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:50.898" endtime="20201116 13:06:50.902"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.764" endtime="20201116 13:06:50.904"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.761" endtime="20201116 13:06:50.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:50.911" level="INFO">${RESULT} = {'wakeups': [41223439, 41233436, 41243436, 41253436, 41263436, 41273436, 41283436, 41293436, 41303436, 41313436, 41323436, 41333436, 41343436, 41353436, 41363436, 41373436, 41383436, 41393436, 4140343...</msg>
<status status="PASS" starttime="20201116 13:06:50.907" endtime="20201116 13:06:50.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.919" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:50.918" endtime="20201116 13:06:50.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.922" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:50.921" endtime="20201116 13:06:50.922"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:50.913" endtime="20201116 13:06:50.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.928" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:50.926" endtime="20201116 13:06:50.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.930" level="INFO">VALUE: 41213342</msg>
<status status="PASS" starttime="20201116 13:06:50.929" endtime="20201116 13:06:50.930"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:50.923" endtime="20201116 13:06:50.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.936" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:50.935" endtime="20201116 13:06:50.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:50.938" level="INFO">VALUE: [41223439, 41233436, 41243436, 41253436, 41263436, 41273436, 41283436, 41293436, 41303436, 41313436, 41323436, 41333436, 41343436, 41353436, 41363436, 41373436, 41383436, 41393436, 41403436, 41413436, 41423436, 41433436, 41443436, 41453436, 41463436, 41473436, 41483436, 41493436, 41503436, 41513436, 41523436, 41533436, 41543436, 41553436, 41563436, 41573436, 41583436, 41593436, 41603436, 41613436, 41623436, 41633436, 41643436, 41653436, 41663436, 41673436, 41683436, 41693436, 41703436, 41713436, 41723436, 41733436, 41743436, 41753436, 41763436, 41773436, 41783436, 41793436, 41803436, 41813436, 41823436, 41833436, 41843436, 41853436, 41863436, 41873436, 41883436, 41893436, 41903436, 41913436, 41923436, 41933436, 41943436, 41953436, 41963436, 41973436, 41983436, 41993436, 42003436, 42013436, 42023436, 42033436, 42043436, 42053436, 42063436, 42073436, 42083436, 42093436, 42103436, 42113436, 42123436, 42133436, 42143436, 42153436, 42163436, 42173436, 42183436, 42193436, 42203436, 42213436]</msg>
<status status="PASS" starttime="20201116 13:06:50.937" endtime="20201116 13:06:50.938"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:50.931" endtime="20201116 13:06:50.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:50.947" endtime="20201116 13:06:51.276"></status>
</kw>
<msg timestamp="20201116 13:06:51.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032114556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:50.946" endtime="20201116 13:06:51.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:51.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032114556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:51.284" endtime="20201116 13:06:51.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:51.303" endtime="20201116 13:06:51.308"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:50.942" endtime="20201116 13:06:51.310"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:50.940" endtime="20201116 13:06:51.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:51.365" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:51.313" endtime="20201116 13:06:51.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:51.376" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:06:51.374" endtime="20201116 13:06:51.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:51.380" level="INFO">VALUE: 0.022016028</msg>
<status status="PASS" starttime="20201116 13:06:51.378" endtime="20201116 13:06:51.381"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.367" endtime="20201116 13:06:51.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:51.394" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:51.391" endtime="20201116 13:06:51.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:51.399" level="INFO">VALUE: [0.032114556, 0.042112583, 0.052113597, 0.062114764, 0.072115764, 0.082116917, 0.092117931, 0.102119111, 0.112120097, 0.122121264, 0.132122278, 0.142123431, 0.152124431, 0.162125611, 0.172126625, 0.182127778, 0.192128778, 0.202129958, 0.212130944, 0.222132111, 0.232133139, 0.242134292, 0.252135292, 0.262136458, 0.272137458, 0.282138625, 0.292139639, 0.302140806, 0.312141819, 0.322142972, 0.332143972, 0.342145153, 0.352146153, 0.362147319, 0.372148347, 0.3821495, 0.392150514, 0.402151681, 0.412152667, 0.422153861, 0.432154847, 0.442156014, 0.452157014, 0.462158194, 0.472159208, 0.482160375, 0.492161389, 0.502162542, 0.512163569, 0.522164708, 0.53216575, 0.542166889, 0.552167889, 0.562169056, 0.572170056, 0.582171236, 0.592172236, 0.602173417, 0.612174403, 0.622175569, 0.632176583, 0.642177764, 0.652178778, 0.662179931, 0.672180917, 0.682182083, 0.692183097, 0.702184264, 0.712185264, 0.722186444, 0.732187444, 0.742188667, 0.752189625, 0.762190778, 0.772191806, 0.782192958, 0.792193958, 0.802195125, 0.812196194, 0.822197306, 0.832198306, 0.842199486, 0.852200472, 0.862201667, 0.872202653, 0.882203819, 0.892204819, 0.902206056, 0.912207, 0.922208167, 0.932209167, 0.942210347, 0.952211361, 0.962212514, 0.972213514, 0.982214681, 0.992215694, 1.002216861, 1.012217861, 1.022219028] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:51.397" endtime="20201116 13:06:51.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.384" endtime="20201116 13:06:51.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:51.408" endtime="20201116 13:06:51.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:51.416" endtime="20201116 13:06:51.438"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.412" endtime="20201116 13:06:51.439"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.403" endtime="20201116 13:06:51.441"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:48.759" endtime="20201116 13:06:51.442"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.032" endtime="20201116 13:06:51.442"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:46.030" endtime="20201116 13:06:51.443"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:51.449" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:51.471" endtime="20201116 13:06:53.593"></status>
</kw>
<msg timestamp="20201116 13:06:53.594" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 43916909, 'wakeups': [43927022, 43937022, 43947022, 43957022, 43967022...</msg>
<status status="PASS" starttime="20201116 13:06:51.466" endtime="20201116 13:06:53.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.601" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 43916909, 'wakeups': [43927022, 43937022, 43947022, 43957022, 43967022...</msg>
<status status="PASS" starttime="20201116 13:06:53.597" endtime="20201116 13:06:53.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:53.604" endtime="20201116 13:06:53.609"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.459" endtime="20201116 13:06:53.610"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.454" endtime="20201116 13:06:53.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:53.618" level="INFO">${RESULT} = {'wakeups': [43927022, 43937022, 43947022, 43957022, 43967022, 43977022, 43987022, 43997022, 44007022, 44017022, 44027022, 44037022, 44047022, 44057022, 44067022, 44077022, 44087022, 44097022, 4410702...</msg>
<status status="PASS" starttime="20201116 13:06:53.614" endtime="20201116 13:06:53.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.628" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:53.626" endtime="20201116 13:06:53.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.633" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:53.631" endtime="20201116 13:06:53.634"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:53.620" endtime="20201116 13:06:53.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.645" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:53.643" endtime="20201116 13:06:53.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.649" level="INFO">VALUE: 43916909</msg>
<status status="PASS" starttime="20201116 13:06:53.647" endtime="20201116 13:06:53.650"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:53.636" endtime="20201116 13:06:53.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.662" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:53.660" endtime="20201116 13:06:53.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:53.667" level="INFO">VALUE: [43927022, 43937022, 43947022, 43957022, 43967022, 43977022, 43987022, 43997022, 44007022, 44017022, 44027022, 44037022, 44047022, 44057022, 44067022, 44077022, 44087022, 44097022, 44107022, 44117022, 44127022, 44137022, 44147022, 44157022, 44167022, 44177022, 44187022, 44197022, 44207022, 44217022, 44227022, 44237022, 44247022, 44257022, 44267022, 44277022, 44287022, 44297022, 44307022, 44317022, 44327022, 44337022, 44347022, 44357022, 44367022, 44377022, 44387022, 44397022, 44407022, 44417022, 44427022, 44437022, 44447022, 44457022, 44467022, 44477022, 44487022, 44497022, 44507022, 44517022, 44527022, 44537022, 44547022, 44557022, 44567022, 44577022, 44587022, 44597022, 44607022, 44617022, 44627022, 44637022, 44647022, 44657022, 44667022, 44677022, 44687022, 44697022, 44707022, 44717022, 44727022, 44737022, 44747022, 44757022, 44767022, 44777022, 44787022, 44797022, 44807022, 44817022, 44827022, 44837022, 44847022, 44857022, 44867022, 44877022, 44887022, 44897022, 44907022, 44917022]</msg>
<status status="PASS" starttime="20201116 13:06:53.665" endtime="20201116 13:06:53.668"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:53.653" endtime="20201116 13:06:53.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:53.687" endtime="20201116 13:06:54.030"></status>
</kw>
<msg timestamp="20201116 13:06:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045592083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055707694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:53.684" endtime="20201116 13:06:54.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:54.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045592083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055707694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:54.039" endtime="20201116 13:06:54.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:54.056" endtime="20201116 13:06:54.061"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:53.676" endtime="20201116 13:06:54.063"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:53.671" endtime="20201116 13:06:54.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:54.090" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:54.066" endtime="20201116 13:06:54.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:54.095" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:54.094" endtime="20201116 13:06:54.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:54.097" level="INFO">VALUE: 0.045592083</msg>
<status status="PASS" starttime="20201116 13:06:54.096" endtime="20201116 13:06:54.097"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.090" endtime="20201116 13:06:54.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:54.103" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:54.102" endtime="20201116 13:06:54.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:54.106" level="INFO">VALUE: [0.055707694, 0.065708847, 0.075709875, 0.085711014, 0.095712028, 0.10571325, 0.115714194, 0.125715375, 0.135716389, 0.145717542, 0.155718556, 0.165719722, 0.175720722, 0.185721931, 0.195722903, 0.205724097, 0.215725097, 0.22572625, 0.235727319, 0.245728431, 0.255729458, 0.265730611, 0.275731625, 0.285732833, 0.295733806, 0.305734972, 0.315735986, 0.325737153, 0.335738181, 0.345739333, 0.355740333, 0.365741514, 0.375742528, 0.385743681, 0.395744694, 0.405745875, 0.415746875, 0.425748056, 0.435749042, 0.445750222, 0.455751222, 0.465752403, 0.475753403, 0.485754583, 0.495755597, 0.505756764, 0.515757764, 0.525758931, 0.535759958, 0.545761125, 0.555762125, 0.565763292, 0.575764292, 0.585765472, 0.595766472, 0.605767653, 0.615768653, 0.625769847, 0.635770833, 0.645772014, 0.655773042, 0.665774194, 0.675775208, 0.685776361, 0.695777375, 0.705778569, 0.715779556, 0.725780722, 0.73578175, 0.745782917, 0.755783917, 0.765785083, 0.775786083, 0.785787264, 0.795788264, 0.805789472, 0.815790458, 0.825791625, 0.835792625, 0.845793806, 0.855794806, 0.865795986, 0.875796986, 0.885798167, 0.895799222, 0.905800347, 0.915801347, 0.925802528, 0.935803514, 0.945804708, 0.955805694, 0.965806875, 0.975807903, 0.985809097, 0.995810056, 1.005811222, 1.015812236, 1.025813403, 1.035814431, 1.045815597] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:54.104" endtime="20201116 13:06:54.106"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.099" endtime="20201116 13:06:54.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:54.110" endtime="20201116 13:06:54.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:54.114" endtime="20201116 13:06:54.133"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.112" endtime="20201116 13:06:54.134"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.108" endtime="20201116 13:06:54.135"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.450" endtime="20201116 13:06:54.135"></status>
</kw>
<msg timestamp="20201116 13:06:54.135" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:54.145" endtime="20201116 13:06:56.262"></status>
</kw>
<msg timestamp="20201116 13:06:56.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 46589587, 'wakeups': [46599701, 46609700, 46619700, 46629700, 46639700...</msg>
<status status="PASS" starttime="20201116 13:06:54.143" endtime="20201116 13:06:56.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.271" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 46589587, 'wakeups': [46599701, 46609700, 46619700, 46629700, 46639700...</msg>
<status status="PASS" starttime="20201116 13:06:56.266" endtime="20201116 13:06:56.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:56.273" endtime="20201116 13:06:56.277"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.140" endtime="20201116 13:06:56.278"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.138" endtime="20201116 13:06:56.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:56.286" level="INFO">${RESULT} = {'wakeups': [46599701, 46609700, 46619700, 46629700, 46639700, 46649700, 46659700, 46669700, 46679700, 46689700, 46699700, 46709700, 46719700, 46729700, 46739700, 46749700, 46759700, 46769700, 4677970...</msg>
<status status="PASS" starttime="20201116 13:06:56.281" endtime="20201116 13:06:56.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.298" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:56.295" endtime="20201116 13:06:56.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.302" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:56.300" endtime="20201116 13:06:56.303"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.289" endtime="20201116 13:06:56.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.314" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:56.312" endtime="20201116 13:06:56.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.319" level="INFO">VALUE: 46589587</msg>
<status status="PASS" starttime="20201116 13:06:56.317" endtime="20201116 13:06:56.319"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.306" endtime="20201116 13:06:56.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.331" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:56.329" endtime="20201116 13:06:56.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.336" level="INFO">VALUE: [46599701, 46609700, 46619700, 46629700, 46639700, 46649700, 46659700, 46669700, 46679700, 46689700, 46699700, 46709700, 46719700, 46729700, 46739700, 46749700, 46759700, 46769700, 46779700, 46789700, 46799700, 46809700, 46819700, 46829700, 46839700, 46849700, 46859700, 46869700, 46879700, 46889700, 46899700, 46909700, 46919700, 46929700, 46939700, 46949700, 46959700, 46969700, 46979700, 46989700, 46999700, 47009700, 47019700, 47029700, 47039700, 47049700, 47059700, 47069700, 47079700, 47089700, 47099700, 47109700, 47119700, 47129700, 47139700, 47149700, 47159700, 47169700, 47179700, 47189700, 47199700, 47209700, 47219700, 47229700, 47239700, 47249700, 47259700, 47269700, 47279700, 47289700, 47299700, 47309700, 47319700, 47329700, 47339700, 47349700, 47359700, 47369700, 47379700, 47389700, 47399700, 47409700, 47419700, 47429700, 47439700, 47449700, 47459700, 47469700, 47479700, 47489700, 47499700, 47509700, 47519700, 47529700, 47539700, 47549700, 47559700, 47569700, 47579700, 47589700]</msg>
<status status="PASS" starttime="20201116 13:06:56.334" endtime="20201116 13:06:56.340"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.322" endtime="20201116 13:06:56.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:56.358" endtime="20201116 13:06:56.702"></status>
</kw>
<msg timestamp="20201116 13:06:56.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031790208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:56.355" endtime="20201116 13:06:56.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031790208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:56.710" endtime="20201116 13:06:56.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:56.727" endtime="20201116 13:06:56.731"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.348" endtime="20201116 13:06:56.733"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.343" endtime="20201116 13:06:56.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:56.788" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:56.736" endtime="20201116 13:06:56.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.798" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:06:56.796" endtime="20201116 13:06:56.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.803" level="INFO">VALUE: 0.021674403</msg>
<status status="PASS" starttime="20201116 13:06:56.801" endtime="20201116 13:06:56.804"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.790" endtime="20201116 13:06:56.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.816" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:56.814" endtime="20201116 13:06:56.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:56.822" level="INFO">VALUE: [0.031790208, 0.041790556, 0.0517915, 0.061792667, 0.071793694, 0.081794861, 0.091795847, 0.101797028, 0.111798028, 0.121799194, 0.131800194, 0.141801361, 0.151802375, 0.161803542, 0.171804556, 0.181805736, 0.191806722, 0.201807944, 0.211808931, 0.221810097, 0.231811083, 0.24181225, 0.251813264, 0.261814417, 0.271815431, 0.281816597, 0.291817611, 0.301818778, 0.311819806, 0.321820944, 0.331821958, 0.341823125, 0.351824167, 0.361825306, 0.371826306, 0.381827486, 0.391828486, 0.401829667, 0.411830681, 0.421831847, 0.431832833, 0.441834028, 0.451835028, 0.461836194, 0.471837194, 0.481838389, 0.491839389, 0.501840542, 0.511841639, 0.521842722, 0.531843722, 0.541844903, 0.551845903, 0.561847097, 0.571848083, 0.581849264, 0.591850264, 0.601851472, 0.611852444, 0.621853639, 0.631854611, 0.641855792, 0.651856792, 0.661857972, 0.671858972, 0.681860139, 0.691861153, 0.701862319, 0.711863333, 0.7218645, 0.731865514, 0.741866681, 0.751867681, 0.761868861, 0.771869861, 0.781871042, 0.791872069, 0.801873222, 0.811874208, 0.821875389, 0.831876389, 0.841877583, 0.851878583, 0.86187975, 0.87188075, 0.881881917, 0.891882917, 0.901884125, 0.911885111, 0.921886278, 0.931887278, 0.9418885, 0.951889458, 0.961890625, 0.971891639, 0.981892806, 0.991893833, 1.001895, 1.011896056, 1.021897167] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:56.819" endtime="20201116 13:06:56.823"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.807" endtime="20201116 13:06:56.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:56.831" endtime="20201116 13:06:56.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:56.839" endtime="20201116 13:06:56.862"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.835" endtime="20201116 13:06:56.864"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.826" endtime="20201116 13:06:56.865"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:54.136" endtime="20201116 13:06:56.866"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.445" endtime="20201116 13:06:56.866"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:51.444" endtime="20201116 13:06:56.867"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:06:56.873" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:56.894" endtime="20201116 13:06:58.997"></status>
</kw>
<msg timestamp="20201116 13:06:58.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 49340502, 'wakeups': [49350635, 49360634, 49370634, 49380634, 493906...</msg>
<status status="PASS" starttime="20201116 13:06:56.891" endtime="20201116 13:06:58.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.001" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 49340502, 'wakeups': [49350635, 49360634, 49370634, 49380634, 493906...</msg>
<status status="PASS" starttime="20201116 13:06:58.999" endtime="20201116 13:06:59.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:59.002" endtime="20201116 13:06:59.004"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.884" endtime="20201116 13:06:59.005"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.878" endtime="20201116 13:06:59.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:59.008" level="INFO">${RESULT} = {'wakeups': [49350635, 49360634, 49370634, 49380634, 49390634, 49400634, 49410634, 49420634, 49430634, 49440634, 49450634, 49460634, 49470634, 49480634, 49490634, 49500634, 49510634, 49520634, 4953063...</msg>
<status status="PASS" starttime="20201116 13:06:59.006" endtime="20201116 13:06:59.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.013" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:06:59.012" endtime="20201116 13:06:59.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.015" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:06:59.014" endtime="20201116 13:06:59.016"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.009" endtime="20201116 13:06:59.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.022" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:59.021" endtime="20201116 13:06:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.024" level="INFO">VALUE: 49340502</msg>
<status status="PASS" starttime="20201116 13:06:59.023" endtime="20201116 13:06:59.024"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.017" endtime="20201116 13:06:59.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.030" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:59.029" endtime="20201116 13:06:59.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.033" level="INFO">VALUE: [49350635, 49360634, 49370634, 49380634, 49390634, 49400634, 49410634, 49420634, 49430634, 49440634, 49450634, 49460634, 49470634, 49480634, 49490634, 49500634, 49510634, 49520634, 49530634, 49540634, 49550634, 49560634, 49570634, 49580634, 49590634, 49600634, 49610634, 49620634, 49630634, 49640634, 49650634, 49660634, 49670634, 49680634, 49690634, 49700634, 49710634, 49720634, 49730634, 49740634, 49750634, 49760634, 49770634, 49780634, 49790634, 49800634, 49810634, 49820634, 49830634, 49840634, 49850634, 49860634, 49870634, 49880634, 49890634, 49900634, 49910634, 49920634, 49930634, 49940634, 49950634, 49960634, 49970634, 49980634, 49990634, 50000634, 50010634, 50020634, 50030634, 50040634, 50050634, 50060634, 50070634, 50080634, 50090634, 50100634, 50110634, 50120634, 50130634, 50140634, 50150634, 50160634, 50170634, 50180634, 50190634, 50200634, 50210634, 50220634, 50230634, 50240634, 50250634, 50260634, 50270634, 50280634, 50290634, 50300634, 50310634, 50320634, 50330634, 50340634]</msg>
<status status="PASS" starttime="20201116 13:06:59.031" endtime="20201116 13:06:59.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.026" endtime="20201116 13:06:59.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:59.042" endtime="20201116 13:06:59.380"></status>
</kw>
<msg timestamp="20201116 13:06:59.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045145514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055279861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:59.040" endtime="20201116 13:06:59.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045145514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055279861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:06:59.389" endtime="20201116 13:06:59.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:59.406" endtime="20201116 13:06:59.410"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.037" endtime="20201116 13:06:59.412"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.035" endtime="20201116 13:06:59.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:06:59.469" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:06:59.415" endtime="20201116 13:06:59.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.480" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:06:59.478" endtime="20201116 13:06:59.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.485" level="INFO">VALUE: 0.045145514</msg>
<status status="PASS" starttime="20201116 13:06:59.482" endtime="20201116 13:06:59.485"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.471" endtime="20201116 13:06:59.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.499" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:06:59.496" endtime="20201116 13:06:59.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:06:59.503" level="INFO">VALUE: [0.055279861, 0.065280389, 0.075281389, 0.085282556, 0.095283569, 0.105284736, 0.115285736, 0.125286903, 0.135287917, 0.145289083, 0.155290083, 0.165291264, 0.17529225, 0.185293444, 0.195294444, 0.205295611, 0.215296625, 0.225297778, 0.235298792, 0.245299944, 0.255300958, 0.265302139, 0.275303125, 0.285304306, 0.295305319, 0.305306542, 0.315307472, 0.325308694, 0.335309653, 0.345310819, 0.355311833, 0.365313, 0.375314, 0.385315181, 0.395316181, 0.405317347, 0.415318403, 0.425319528, 0.435320528, 0.445321694, 0.455322708, 0.465323875, 0.475324958, 0.485326069, 0.495327056, 0.505328236, 0.515329236, 0.525330403, 0.535331403, 0.545332583, 0.555333597, 0.56533475, 0.575335764, 0.585336931, 0.595337931, 0.605339139, 0.615340139, 0.625341278, 0.635342292, 0.645343458, 0.655344458, 0.665345625, 0.675346653, 0.685347819, 0.695348806, 0.705349986, 0.715350986, 0.725352153, 0.735353222, 0.745354333, 0.755355375, 0.765356514, 0.775357514, 0.785358708, 0.795359681, 0.805360861, 0.815361861, 0.825363056, 0.835364042, 0.845365208, 0.855366222, 0.865367389, 0.875368389, 0.885369583, 0.895370625, 0.905371736, 0.915372806, 0.925373917, 0.935374931, 0.945376083, 0.955377097, 0.965378278, 0.975379264, 0.985380444, 0.995381444, 1.005382611, 1.015383639, 1.025384792, 1.035385847, 1.045386986] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:06:59.501" endtime="20201116 13:06:59.504"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.488" endtime="20201116 13:06:59.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:59.512" endtime="20201116 13:06:59.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:06:59.522" endtime="20201116 13:06:59.544"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.517" endtime="20201116 13:06:59.545"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.508" endtime="20201116 13:06:59.547"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.874" endtime="20201116 13:06:59.548"></status>
</kw>
<msg timestamp="20201116 13:06:59.548" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:06:59.569" endtime="20201116 13:07:01.696"></status>
</kw>
<msg timestamp="20201116 13:07:01.697" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 52015824, 'wakeups': [52025957, 52035956, 52045956, 52055956, 520659...</msg>
<status status="PASS" starttime="20201116 13:06:59.566" endtime="20201116 13:07:01.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.704" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 52015824, 'wakeups': [52025957, 52035956, 52045956, 52055956, 520659...</msg>
<status status="PASS" starttime="20201116 13:07:01.700" endtime="20201116 13:07:01.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:07:01.707" endtime="20201116 13:07:01.711"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.559" endtime="20201116 13:07:01.712"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.553" endtime="20201116 13:07:01.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:07:01.722" level="INFO">${RESULT} = {'wakeups': [52025957, 52035956, 52045956, 52055956, 52065956, 52075956, 52085956, 52095956, 52105956, 52115956, 52125956, 52135956, 52145956, 52155956, 52165956, 52175956, 52185956, 52195956, 5220595...</msg>
<status status="PASS" starttime="20201116 13:07:01.715" endtime="20201116 13:07:01.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.732" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:07:01.730" endtime="20201116 13:07:01.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.737" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:07:01.735" endtime="20201116 13:07:01.738"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:01.724" endtime="20201116 13:07:01.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.749" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:07:01.747" endtime="20201116 13:07:01.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.754" level="INFO">VALUE: 52015824</msg>
<status status="PASS" starttime="20201116 13:07:01.752" endtime="20201116 13:07:01.755"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:01.740" endtime="20201116 13:07:01.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.767" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:07:01.764" endtime="20201116 13:07:01.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:07:01.772" level="INFO">VALUE: [52025957, 52035956, 52045956, 52055956, 52065956, 52075956, 52085956, 52095956, 52105956, 52115956, 52125956, 52135956, 52145956, 52155956, 52165956, 52175956, 52185956, 52195956, 52205956, 52215956, 52225956, 52235956, 52245956, 52255956, 52265956, 52275956, 52285956, 52295956, 52305956, 52315956, 52325956, 52335956, 52345956, 52355956, 52365956, 52375956, 52385956, 52395956, 52405956, 52415956, 52425956, 52435956, 52445956, 52455956, 52465956, 52475956, 52485956, 52495956, 52505956, 52515956, 52525956, 52535956, 52545956, 52555956, 52565956, 52575956, 52585956, 52595956, 52605956, 52615956, 52625956, 52635956, 52645956, 52655956, 52665956, 52675956, 52685956, 52695956, 52705956, 52715956, 52725956, 52735956, 52745956, 52755956, 52765956, 52775956, 52785956, 52795956, 52805956, 52815956, 52825956, 52835956, 52845956, 52855956, 52865956, 52875956, 52885956, 52895956, 52905956, 52915956, 52925956, 52935956, 52945956, 52955956, 52965956, 52975956, 52985956, 52995956, 53005956, 53015956]</msg>
<status status="PASS" starttime="20201116 13:07:01.769" endtime="20201116 13:07:01.772"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:01.758" endtime="20201116 13:07:01.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:07:01.792" endtime="20201116 13:07:02.135"></status>
</kw>
<msg timestamp="20201116 13:07:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039131, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049265278, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:07:01.788" endtime="20201116 13:07:02.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:07:02.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039131, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049265278, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:07:02.144" endtime="20201116 13:07:02.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:07:02.160" endtime="20201116 13:07:02.162"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:01.780" endtime="20201116 13:07:02.162"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:01.775" endtime="20201116 13:07:02.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:07:02.188" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:07:02.164" endtime="20201116 13:07:02.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:07:02.193" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:07:02.192" endtime="20201116 13:07:02.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:07:02.195" level="INFO">VALUE: 0.039131</msg>
<status status="PASS" starttime="20201116 13:07:02.194" endtime="20201116 13:07:02.195"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:02.189" endtime="20201116 13:07:02.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:07:02.201" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:07:02.200" endtime="20201116 13:07:02.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:07:02.204" level="INFO">VALUE: [0.049265278, 0.059265847, 0.069266889, 0.079268014, 0.089269014, 0.099270181, 0.109271181, 0.119272361, 0.129273361, 0.139274528, 0.149275528, 0.159276708, 0.169277708, 0.179278875, 0.189279875, 0.199281042, 0.209282042, 0.219283208, 0.229284222, 0.239285389, 0.249286403, 0.259287569, 0.269288556, 0.279289736, 0.289290736, 0.299291903, 0.309292903, 0.319294125, 0.329295111, 0.33929625, 0.349297306, 0.359298431, 0.369299444, 0.379300611, 0.389301597, 0.399302778, 0.409303792, 0.419304958, 0.429305944, 0.439307125, 0.449308125, 0.459309292, 0.469310292, 0.479311486, 0.489312472, 0.499313681, 0.509314653, 0.519315847, 0.529316819, 0.539317986, 0.549318986, 0.559320194, 0.569321167, 0.579322333, 0.589323347, 0.599324514, 0.609325514, 0.619326681, 0.629327694, 0.639328875, 0.649329875, 0.659331042, 0.669332042, 0.679333208, 0.689334208, 0.699335389, 0.709336375, 0.719337569, 0.729338556, 0.739339736, 0.749340722, 0.759341903, 0.769342903, 0.779344069, 0.789345069, 0.79934625, 0.80934725, 0.819348431, 0.829349431, 0.839350597, 0.849351597, 0.859352764, 0.869353764, 0.879354958, 0.889355958, 0.899357111, 0.909358125, 0.919359347, 0.929360292, 0.939361472, 0.9493625, 0.959363653, 0.969364653, 0.979365806, 0.989366819, 0.999368, 1.009369014, 1.019370153, 1.029371167, 1.039372333] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:07:02.202" endtime="20201116 13:07:02.204"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:02.197" endtime="20201116 13:07:02.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:07:02.208" endtime="20201116 13:07:02.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:07:02.212" endtime="20201116 13:07:02.231"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:02.210" endtime="20201116 13:07:02.232"></status>
</kw>
<status status="PASS" starttime="20201116 13:07:02.206" endtime="20201116 13:07:02.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:59.549" endtime="20201116 13:07:02.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.869" endtime="20201116 13:07:02.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:56.868" endtime="20201116 13:07:02.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:06:08.222" endtime="20201116 13:07:02.234"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:06:08.089" endtime="20201116 13:07:02.235" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:06:05.732" endtime="20201116 13:07:02.239"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:06:01.967" endtime="20201116 13:07:02.250"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
