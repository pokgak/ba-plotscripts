<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:09:52.815" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:53.392" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:53.400" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:54.481" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:53.390" endtime="20201116 13:09:54.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.485" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:54.483" endtime="20201116 13:09:54.485"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:53.389" endtime="20201116 13:09:54.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:54.488" endtime="20201116 13:09:54.675"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.486" endtime="20201116 13:09:54.675"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.688" endtime="20201116 13:09:54.708"></status>
</kw>
<msg timestamp="20201116 13:09:54.708" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.687" endtime="20201116 13:09:54.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.711" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.709" endtime="20201116 13:09:54.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.714" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:54.712" endtime="20201116 13:09:54.714"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.684" endtime="20201116 13:09:54.715"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.682" endtime="20201116 13:09:54.716"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.681" endtime="20201116 13:09:54.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:54.720" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:54.719" endtime="20201116 13:09:54.721"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.717" endtime="20201116 13:09:54.721"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.680" endtime="20201116 13:09:54.721"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.679" endtime="20201116 13:09:54.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.722" endtime="20201116 13:09:54.723"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.678" endtime="20201116 13:09:54.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.725" endtime="20201116 13:09:54.726"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.676" endtime="20201116 13:09:54.727"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:53.387" endtime="20201116 13:09:54.727"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:54.735" endtime="20201116 13:09:54.754"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.733" endtime="20201116 13:09:54.755"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.770" endtime="20201116 13:09:54.792"></status>
</kw>
<msg timestamp="20201116 13:09:54.792" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.767" endtime="20201116 13:09:54.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.794" endtime="20201116 13:09:54.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.798" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:54.796" endtime="20201116 13:09:54.799"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.764" endtime="20201116 13:09:54.799"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.762" endtime="20201116 13:09:54.800"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.760" endtime="20201116 13:09:54.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:54.804" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:54.803" endtime="20201116 13:09:54.805"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.801" endtime="20201116 13:09:54.805"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.759" endtime="20201116 13:09:54.805"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.759" endtime="20201116 13:09:54.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.806" endtime="20201116 13:09:54.808"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.757" endtime="20201116 13:09:54.808"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.755" endtime="20201116 13:09:54.809"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.731" endtime="20201116 13:09:54.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.817" endtime="20201116 13:09:54.832"></status>
</kw>
<msg timestamp="20201116 13:09:54.832" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.815" endtime="20201116 13:09:54.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.835" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.833" endtime="20201116 13:09:54.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.836" endtime="20201116 13:09:54.838"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.813" endtime="20201116 13:09:54.838"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.811" endtime="20201116 13:09:54.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.844" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:09:54.843" endtime="20201116 13:09:54.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.846" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201116 13:09:54.845" endtime="20201116 13:09:54.846"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.840" endtime="20201116 13:09:54.847"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:54.728" endtime="20201116 13:09:54.848" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:52.929" endtime="20201116 13:09:54.853"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.909" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:54.932" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:56.133" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:54.908" endtime="20201116 13:09:56.134"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:56.136" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:56.135" endtime="20201116 13:09:56.137"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.906" endtime="20201116 13:09:56.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:56.139" endtime="20201116 13:09:56.361"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.138" endtime="20201116 13:09:56.362"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:56.374" endtime="20201116 13:09:56.391"></status>
</kw>
<msg timestamp="20201116 13:09:56.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:56.373" endtime="20201116 13:09:56.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:56.394" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:56.393" endtime="20201116 13:09:56.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:56.398" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:56.396" endtime="20201116 13:09:56.398"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:56.370" endtime="20201116 13:09:56.399"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:56.368" endtime="20201116 13:09:56.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.367" endtime="20201116 13:09:56.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:56.404" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:56.403" endtime="20201116 13:09:56.404"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.401" endtime="20201116 13:09:56.405"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.366" endtime="20201116 13:09:56.405"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.365" endtime="20201116 13:09:56.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:56.406" endtime="20201116 13:09:56.408"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.364" endtime="20201116 13:09:56.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:56.409" endtime="20201116 13:09:56.411"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.363" endtime="20201116 13:09:56.411"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.904" endtime="20201116 13:09:56.411"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:56.418" endtime="20201116 13:09:56.439"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.417" endtime="20201116 13:09:56.439"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:56.453" endtime="20201116 13:09:56.473"></status>
</kw>
<msg timestamp="20201116 13:09:56.473" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:56.452" endtime="20201116 13:09:56.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:56.476" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:56.475" endtime="20201116 13:09:56.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:56.479" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:56.477" endtime="20201116 13:09:56.480"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:56.449" endtime="20201116 13:09:56.480"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:56.446" endtime="20201116 13:09:56.481"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.445" endtime="20201116 13:09:56.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:56.485" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:56.484" endtime="20201116 13:09:56.486"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.482" endtime="20201116 13:09:56.486"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.444" endtime="20201116 13:09:56.486"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.443" endtime="20201116 13:09:56.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:56.487" endtime="20201116 13:09:56.488"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.442" endtime="20201116 13:09:56.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.440" endtime="20201116 13:09:56.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.415" endtime="20201116 13:09:56.490"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:56.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:56.504" endtime="20201116 13:09:58.619"></status>
</kw>
<msg timestamp="20201116 13:09:58.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 423126, 'wakeups': [433135, 443145, 453155, 463134, 473144, 483154, 49...</msg>
<status status="PASS" starttime="20201116 13:09:56.501" endtime="20201116 13:09:58.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.627" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 423126, 'wakeups': [433135, 443145, 453155, 463134, 473144, 483154, 49...</msg>
<status status="PASS" starttime="20201116 13:09:58.623" endtime="20201116 13:09:58.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.629" endtime="20201116 13:09:58.633"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.498" endtime="20201116 13:09:58.634"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.496" endtime="20201116 13:09:58.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:58.641" level="INFO">${RESULT} = {'start-time': 423126, 'timer-interval': 10000, 'timer-count': 1, 'wakeups': [433135, 443145, 453155, 463134, 473144, 483154, 493133, 503143, 513153, 523132, 533142, 543151, 553131, 563140, 573150, 58...</msg>
<status status="PASS" starttime="20201116 13:09:58.637" endtime="20201116 13:09:58.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.650" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:58.648" endtime="20201116 13:09:58.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.655" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:58.653" endtime="20201116 13:09:58.655"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.643" endtime="20201116 13:09:58.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.664" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:58.662" endtime="20201116 13:09:58.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.666" level="INFO">VALUE: 423126</msg>
<status status="PASS" starttime="20201116 13:09:58.665" endtime="20201116 13:09:58.666"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.658" endtime="20201116 13:09:58.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.671" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:58.670" endtime="20201116 13:09:58.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.674" level="INFO">VALUE: [433135, 443145, 453155, 463134, 473144, 483154, 493133, 503143, 513153, 523132, 533142, 543151, 553131, 563140, 573150, 583129, 593139, 603149, 613128, 623138, 633148, 643127, 653137, 663146, 673156, 683135, 693145, 703155, 713134, 723144, 733154, 743133, 753143, 763153, 773132, 783142, 793151, 803131, 813140, 823150, 833129, 843139, 853149, 863128, 873138, 883148, 893127, 903137, 913146, 923156, 933135, 943145, 953155, 963134, 973144, 983154, 993133, 1003143, 1013153, 1023132, 1033142, 1043151, 1053131, 1063140, 1073150, 1083129, 1093139, 1103149, 1113128, 1123138, 1133148, 1143127, 1153137, 1163146, 1173156, 1183135, 1193145, 1203155, 1213134, 1223144, 1233154, 1243133, 1253143, 1263153, 1273132, 1283142, 1293151, 1303131, 1313140, 1323150, 1333129, 1343139, 1353149, 1363128, 1373138, 1383148, 1393127, 1403137, 1413146, 1423156]</msg>
<status status="PASS" starttime="20201116 13:09:58.672" endtime="20201116 13:09:58.674"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.668" endtime="20201116 13:09:58.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.681" endtime="20201116 13:09:58.977"></status>
</kw>
<msg timestamp="20201116 13:09:58.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076595264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086608764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:58.680" endtime="20201116 13:09:58.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076595264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086608764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:58.981" endtime="20201116 13:09:58.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.989" endtime="20201116 13:09:58.991"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.677" endtime="20201116 13:09:58.991"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.675" endtime="20201116 13:09:58.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:59.016" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:58.992" endtime="20201116 13:09:59.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:59.021" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:59.020" endtime="20201116 13:09:59.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:59.023" level="INFO">VALUE: 0.076595264</msg>
<status status="PASS" starttime="20201116 13:09:59.022" endtime="20201116 13:09:59.023"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.017" endtime="20201116 13:09:59.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:59.029" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:59.028" endtime="20201116 13:09:59.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:59.031" level="INFO">VALUE: [0.086608764, 0.096618181, 0.106627653, 0.116606556, 0.126616111, 0.136625528, 0.146604458, 0.156613931, 0.166623361, 0.176602403, 0.186611819, 0.196621222, 0.206600125, 0.216609597, 0.226619097, 0.236597972, 0.246607458, 0.256616917, 0.266595819, 0.276605319, 0.286614722, 0.296593653, 0.306603167, 0.316612556, 0.326622028, 0.336600972, 0.346610403, 0.356619875, 0.366598819, 0.37660825, 0.386617681, 0.396596653, 0.406606167, 0.416615611, 0.426594458, 0.436603972, 0.446613417, 0.456592375, 0.466601819, 0.47661125, 0.486590208, 0.496599653, 0.506609083, 0.516587986, 0.526597528, 0.536606944, 0.546585903, 0.556595375, 0.566604861, 0.57661425, 0.586593208, 0.596602681, 0.606612111, 0.616591056, 0.626600444, 0.636609889, 0.646588847, 0.656598319, 0.666607819, 0.67658675, 0.686596153, 0.696605639, 0.706584597, 0.716594042, 0.726603514, 0.736582417, 0.746591875, 0.756601347, 0.766580264, 0.776589694, 0.786599194, 0.796578097, 0.806587597, 0.816597028, 0.826606458, 0.836585375, 0.846594889, 0.856604306, 0.86658325, 0.876592722, 0.886602181, 0.896581083, 0.906590583, 0.916599986, 0.926578986, 0.936588389, 0.946597792, 0.956576778, 0.966586222, 0.976595708, 0.986574611, 0.996584069, 1.006593528, 1.016572514, 1.026581931, 1.036591403, 1.046570278, 1.056579778, 1.066589236, 1.076598653] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:59.030" endtime="20201116 13:09:59.031"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.025" endtime="20201116 13:09:59.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:59.034" endtime="20201116 13:09:59.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:59.038" endtime="20201116 13:09:59.058"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.037" endtime="20201116 13:09:59.058"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.032" endtime="20201116 13:09:59.059"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.495" endtime="20201116 13:09:59.059"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.492" endtime="20201116 13:09:59.059"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.491" endtime="20201116 13:09:59.059"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:59.062" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:59.071" endtime="20201116 13:10:01.197"></status>
</kw>
<msg timestamp="20201116 13:10:01.199" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2990722, 'wakeups': [3000762, 3010742, 3020751, 3030731, 3040740, 3050...</msg>
<status status="PASS" starttime="20201116 13:09:59.069" endtime="20201116 13:10:01.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.205" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2990722, 'wakeups': [3000762, 3010742, 3020751, 3030731, 3040740, 3050...</msg>
<status status="PASS" starttime="20201116 13:10:01.201" endtime="20201116 13:10:01.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:01.207" endtime="20201116 13:10:01.211"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.066" endtime="20201116 13:10:01.212"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.064" endtime="20201116 13:10:01.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:01.218" level="INFO">${RESULT} = {'start-time': 2990722, 'timer-interval': 10000, 'timer-count': 2, 'wakeups': [3000762, 3010742, 3020751, 3030731, 3040740, 3050750, 3060729, 3070739, 3080749, 3090728, 3100738, 3110748, 3120727, 3130...</msg>
<status status="PASS" starttime="20201116 13:10:01.215" endtime="20201116 13:10:01.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.222" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:01.221" endtime="20201116 13:10:01.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.226" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:01.223" endtime="20201116 13:10:01.226"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.219" endtime="20201116 13:10:01.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.231" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:10:01.230" endtime="20201116 13:10:01.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.233" level="INFO">VALUE: 2990722</msg>
<status status="PASS" starttime="20201116 13:10:01.232" endtime="20201116 13:10:01.233"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.227" endtime="20201116 13:10:01.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.238" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:01.237" endtime="20201116 13:10:01.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.240" level="INFO">VALUE: [3000762, 3010742, 3020751, 3030731, 3040740, 3050750, 3060729, 3070739, 3080749, 3090728, 3100738, 3110748, 3120727, 3130737, 3140747, 3150726, 3160736, 3170745, 3180725, 3190734, 3200744, 3210723, 3220733, 3230743, 3240722, 3250732, 3260742, 3270751, 3280731, 3290740, 3300750, 3310729, 3320739, 3330749, 3340728, 3350738, 3360748, 3370727, 3380737, 3390747, 3400726, 3410736, 3420745, 3430725, 3440734, 3450744, 3460723, 3470733, 3480743, 3490722, 3500732, 3510742, 3520751, 3530731, 3540740, 3550750, 3560729, 3570739, 3580749, 3590728, 3600738, 3610748, 3620727, 3630737, 3640747, 3650726, 3660736, 3670745, 3680725, 3690734, 3700744, 3710723, 3720733, 3730743, 3740722, 3750732, 3760742, 3770751, 3780731, 3790740, 3800750, 3810729, 3820739, 3830749, 3840728, 3850738, 3860748, 3870727, 3880737, 3890747, 3900726, 3910736, 3920745, 3930725, 3940734, 3950744, 3960723, 3970733, 3980743, 3990722]</msg>
<status status="PASS" starttime="20201116 13:10:01.239" endtime="20201116 13:10:01.241"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.234" endtime="20201116 13:10:01.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:01.248" endtime="20201116 13:10:01.539"></status>
</kw>
<msg timestamp="20201116 13:10:01.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025009542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035032667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:01.247" endtime="20201116 13:10:01.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025009542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035032667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:01.543" endtime="20201116 13:10:01.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:01.551" endtime="20201116 13:10:01.553"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.244" endtime="20201116 13:10:01.554"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.242" endtime="20201116 13:10:01.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:01.579" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:01.555" endtime="20201116 13:10:01.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.585" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:10:01.583" endtime="20201116 13:10:01.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.587" level="INFO">VALUE: 0.025009542</msg>
<status status="PASS" starttime="20201116 13:10:01.586" endtime="20201116 13:10:01.587"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.580" endtime="20201116 13:10:01.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.592" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:01.591" endtime="20201116 13:10:01.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:01.595" level="INFO">VALUE: [0.035032667, 0.045030542, 0.055040097, 0.065019014, 0.075028486, 0.085037958, 0.095016875, 0.105026333, 0.115035792, 0.125014681, 0.135024167, 0.145033653, 0.155012583, 0.165022028, 0.175031472, 0.185010431, 0.195019861, 0.205029306, 0.215008236, 0.225017694, 0.235027167, 0.245006111, 0.255015583, 0.265025056, 0.275003986, 0.285013431, 0.295022861, 0.305032306, 0.31501125, 0.325020736, 0.335030181, 0.345009125, 0.355018569, 0.365027986, 0.375006958, 0.385016417, 0.395025819, 0.405004778, 0.41501425, 0.425023694, 0.435002653, 0.445012056, 0.455021528, 0.465000486, 0.475009889, 0.485019403, 0.494998347, 0.505007764, 0.515017208, 0.524996167, 0.535005639, 0.545015042, 0.555024514, 0.565003417, 0.575012931, 0.585022375, 0.595001306, 0.605010764, 0.615020236, 0.624999167, 0.635008625, 0.645018056, 0.654997042, 0.665006486, 0.675015875, 0.684994806, 0.695004319, 0.705013764, 0.714992653, 0.725002153, 0.735011625, 0.744990514, 0.755000014, 0.765009472, 0.774988375, 0.784997903, 0.79500725, 0.805016764, 0.814995764, 0.825005125, 0.835014597, 0.844993556, 0.855002972, 0.865012472, 0.874991375, 0.885000833, 0.895010292, 0.904989222, 0.914998694, 0.925008111, 0.934987056, 0.9449965, 0.955005986, 0.964984958, 0.974994361, 0.985003806, 0.994982736, 1.004992194, 1.015001653, 1.024980597] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:01.594" endtime="20201116 13:10:01.595"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.588" endtime="20201116 13:10:01.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:01.598" endtime="20201116 13:10:01.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:01.601" endtime="20201116 13:10:01.621"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.600" endtime="20201116 13:10:01.621"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.596" endtime="20201116 13:10:01.622"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.063" endtime="20201116 13:10:01.622"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.061" endtime="20201116 13:10:01.623"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:59.060" endtime="20201116 13:10:01.623"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:01.625" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:01.634" endtime="20201116 13:10:03.756"></status>
</kw>
<msg timestamp="20201116 13:10:03.757" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5553314, 'wakeups': [5563354, 5573364, 5583343, 5593353, 5603332, 5613...</msg>
<status status="PASS" starttime="20201116 13:10:01.632" endtime="20201116 13:10:03.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.764" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5553314, 'wakeups': [5563354, 5573364, 5583343, 5593353, 5603332, 5613...</msg>
<status status="PASS" starttime="20201116 13:10:03.760" endtime="20201116 13:10:03.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.766" endtime="20201116 13:10:03.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.630" endtime="20201116 13:10:03.771"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.628" endtime="20201116 13:10:03.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:03.775" level="INFO">${RESULT} = {'start-time': 5553314, 'timer-interval': 10000, 'timer-count': 3, 'wakeups': [5563354, 5573364, 5583343, 5593353, 5603332, 5613372, 5623321, 5633361, 5643341, 5653350, 5663330, 5673370, 5683319, 5693...</msg>
<status status="PASS" starttime="20201116 13:10:03.773" endtime="20201116 13:10:03.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.779" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:03.778" endtime="20201116 13:10:03.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.781" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:03.780" endtime="20201116 13:10:03.782"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.776" endtime="20201116 13:10:03.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.786" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:10:03.785" endtime="20201116 13:10:03.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.789" level="INFO">VALUE: 5553314</msg>
<status status="PASS" starttime="20201116 13:10:03.788" endtime="20201116 13:10:03.789"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.783" endtime="20201116 13:10:03.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.794" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:03.792" endtime="20201116 13:10:03.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.796" level="INFO">VALUE: [5563354, 5573364, 5583343, 5593353, 5603332, 5613372, 5623321, 5633361, 5643341, 5653350, 5663330, 5673370, 5683319, 5693359, 5703338, 5713348, 5723327, 5733367, 5743316, 5753356, 5763336, 5773345, 5783325, 5793365, 5803344, 5813354, 5823333, 5833374, 5843322, 5853363, 5863342, 5873352, 5883331, 5893371, 5903320, 5913360, 5923339, 5933349, 5943328, 5953369, 5963317, 5973358, 5983337, 5993347, 6003326, 6013366, 6023315, 6033355, 6043334, 6053375, 6063323, 6073364, 6083343, 6093353, 6103332, 6113372, 6123321, 6133361, 6143341, 6153350, 6163330, 6173370, 6183319, 6193359, 6203338, 6213348, 6223327, 6233367, 6243316, 6253356, 6263336, 6273345, 6283325, 6293365, 6303344, 6313354, 6323333, 6333374, 6343322, 6353363, 6363342, 6373352, 6383331, 6393371, 6403320, 6413360, 6423339, 6433349, 6443328, 6453369, 6463317, 6473358, 6483337, 6493347, 6503326, 6513366, 6523315, 6533355, 6543334, 6553375]</msg>
<status status="PASS" starttime="20201116 13:10:03.795" endtime="20201116 13:10:03.796"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.790" endtime="20201116 13:10:03.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.805" endtime="20201116 13:10:04.094"></status>
</kw>
<msg timestamp="20201116 13:10:04.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034020792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:10:03.803" endtime="20201116 13:10:04.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:04.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034020792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:10:04.098" endtime="20201116 13:10:04.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:04.106" endtime="20201116 13:10:04.108"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.800" endtime="20201116 13:10:04.109"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.797" endtime="20201116 13:10:04.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:04.133" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:04.110" endtime="20201116 13:10:04.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:04.138" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:10:04.137" endtime="20201116 13:10:04.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:04.140" level="INFO">VALUE: 0.023981</msg>
<status status="PASS" starttime="20201116 13:10:04.139" endtime="20201116 13:10:04.140"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.134" endtime="20201116 13:10:04.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:04.145" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:04.144" endtime="20201116 13:10:04.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:04.148" level="INFO">VALUE: [0.034020792, 0.044018292, 0.054011167, 0.064006764, 0.073999556, 0.084025694, 0.093987917, 0.104014139, 0.114006889, 0.124002556, 0.133995292, 0.144021417, 0.153983653, 0.164009722, 0.174002528, 0.183998139, 0.193990944, 0.204017083, 0.213979264, 0.224005431, 0.233998222, 0.243993875, 0.253986639, 0.264012819, 0.274005556, 0.284001153, 0.293993847, 0.304020083, 0.313982361, 0.324008542, 0.334001236, 0.343996861, 0.353989583, 0.36401575, 0.373977972, 0.384004181, 0.393996972, 0.403992528, 0.413985292, 0.424011389, 0.433973681, 0.443999806, 0.453992556, 0.463988292, 0.473980986, 0.484007167, 0.493969431, 0.503995583, 0.513988333, 0.524014431, 0.533976694, 0.544002861, 0.553995625, 0.563991264, 0.573983972, 0.584010167, 0.593972403, 0.603998542, 0.613991333, 0.623986958, 0.633979681, 0.644005833, 0.653968069, 0.663994181, 0.673986986, 0.683982681, 0.693975417, 0.704001556, 0.713963708, 0.72399, 0.733982667, 0.743978361, 0.753971028, 0.763997222, 0.773989944, 0.783985653, 0.793978361, 0.804004542, 0.813966778, 0.823992944, 0.833985653, 0.843981306, 0.853974028, 0.864000222, 0.873962431, 0.883988611, 0.893981361, 0.903977028, 0.913969708, 0.923995889, 0.933958097, 0.943984208, 0.953976986, 0.963972653, 0.973965444, 0.983991569, 0.993953806, 1.00398, 1.013972708, 1.023998889] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:04.147" endtime="20201116 13:10:04.148"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.141" endtime="20201116 13:10:04.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:04.151" endtime="20201116 13:10:04.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:04.154" endtime="20201116 13:10:04.175"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.153" endtime="20201116 13:10:04.175"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.149" endtime="20201116 13:10:04.176"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.626" endtime="20201116 13:10:04.176"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.624" endtime="20201116 13:10:04.176"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.623" endtime="20201116 13:10:04.177"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:04.179" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:04.188" endtime="20201116 13:10:06.308"></status>
</kw>
<msg timestamp="20201116 13:10:06.309" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 8105865, 'wakeups': [8115936, 8125915, 8135925, 8145904, 8155914, 8165...</msg>
<status status="PASS" starttime="20201116 13:10:04.186" endtime="20201116 13:10:06.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.315" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 8105865, 'wakeups': [8115936, 8125915, 8135925, 8145904, 8155914, 8165...</msg>
<status status="PASS" starttime="20201116 13:10:06.312" endtime="20201116 13:10:06.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.318" endtime="20201116 13:10:06.322"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.183" endtime="20201116 13:10:06.323"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.181" endtime="20201116 13:10:06.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:06.329" level="INFO">${RESULT} = {'start-time': 8105865, 'timer-interval': 10000, 'timer-count': 4, 'wakeups': [8115936, 8125915, 8135925, 8145904, 8155914, 8165924, 8175903, 8185913, 8195922, 8205902, 8215911, 8225921, 8235900, 8245...</msg>
<status status="PASS" starttime="20201116 13:10:06.326" endtime="20201116 13:10:06.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.340" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:06.339" endtime="20201116 13:10:06.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.342" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:06.341" endtime="20201116 13:10:06.342"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.336" endtime="20201116 13:10:06.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.347" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:10:06.346" endtime="20201116 13:10:06.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.349" level="INFO">VALUE: 8105865</msg>
<status status="PASS" starttime="20201116 13:10:06.348" endtime="20201116 13:10:06.350"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.343" endtime="20201116 13:10:06.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.354" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:06.353" endtime="20201116 13:10:06.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.357" level="INFO">VALUE: [8115936, 8125915, 8135925, 8145904, 8155914, 8165924, 8175903, 8185913, 8195922, 8205902, 8215911, 8225921, 8235900, 8245910, 8255920, 8265899, 8275909, 8285919, 8295898, 8305908, 8315917, 8325897, 8335906, 8345916, 8355895, 8365905, 8375915, 8385925, 8395904, 8405914, 8415924, 8425903, 8435913, 8445922, 8455902, 8465911, 8475921, 8485900, 8495910, 8505920, 8515899, 8525909, 8535919, 8545898, 8555908, 8565917, 8575897, 8585906, 8595916, 8605895, 8615905, 8625915, 8635925, 8645904, 8655914, 8665924, 8675903, 8685913, 8695922, 8705902, 8715911, 8725921, 8735900, 8745910, 8755920, 8765899, 8775909, 8785919, 8795898, 8805908, 8815917, 8825897, 8835906, 8845916, 8855895, 8865905, 8875915, 8885925, 8895904, 8905914, 8915924, 8925903, 8935913, 8945922, 8955902, 8965911, 8975921, 8985900, 8995910, 9005920, 9015899, 9025909, 9035919, 9045898, 9055908, 9065917, 9075897, 9085906, 9095916, 9105895]</msg>
<status status="PASS" starttime="20201116 13:10:06.355" endtime="20201116 13:10:06.357"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.351" endtime="20201116 13:10:06.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.364" endtime="20201116 13:10:06.657"></status>
</kw>
<msg timestamp="20201116 13:10:06.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032542278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:06.362" endtime="20201116 13:10:06.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032542278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:06.661" endtime="20201116 13:10:06.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.669" endtime="20201116 13:10:06.670"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.360" endtime="20201116 13:10:06.671"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.358" endtime="20201116 13:10:06.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:06.696" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:06.672" endtime="20201116 13:10:06.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.701" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:10:06.700" endtime="20201116 13:10:06.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.704" level="INFO">VALUE: 0.022465792</msg>
<status status="PASS" starttime="20201116 13:10:06.703" endtime="20201116 13:10:06.704"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.697" endtime="20201116 13:10:06.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.710" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:06.709" endtime="20201116 13:10:06.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.713" level="INFO">VALUE: [0.032542278, 0.042521028, 0.0525305, 0.062509514, 0.072518861, 0.082528319, 0.09250725, 0.102516681, 0.112526208, 0.122504986, 0.132514569, 0.142523944, 0.152502931, 0.162512444, 0.172521889, 0.182500806, 0.192510236, 0.202519736, 0.212498569, 0.222508083, 0.232517556, 0.242496486, 0.252505889, 0.262515569, 0.272494889, 0.282503778, 0.292513333, 0.302522611, 0.312501625, 0.322511083, 0.332520639, 0.342499389, 0.352508875, 0.362518292, 0.372497361, 0.382506736, 0.392516222, 0.402495167, 0.412504542, 0.422514097, 0.432492958, 0.442502458, 0.452512, 0.462490833, 0.472500292, 0.48250975, 0.492488722, 0.502498111, 0.512507764, 0.522487125, 0.532496042, 0.542505444, 0.552514847, 0.562493847, 0.572503319, 0.582512736, 0.592491736, 0.602501153, 0.612510597, 0.622489528, 0.632498931, 0.642508417, 0.652487417, 0.662496778, 0.672506236, 0.682485236, 0.692494667, 0.702504097, 0.712483111, 0.7224925, 0.732502042, 0.742480819, 0.752490347, 0.762499972, 0.772479361, 0.782488208, 0.792497639, 0.802507069, 0.812486083, 0.822495528, 0.832504972, 0.842483875, 0.852493375, 0.862502694, 0.872481806, 0.882491181, 0.892500528, 0.902479597, 0.912488931, 0.922498556, 0.932477444, 0.942486833, 0.952496375, 0.962475278, 0.972484722, 0.982494167, 0.992473111, 1.002482556, 1.012492125, 1.022471569] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:06.712" endtime="20201116 13:10:06.713"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.705" endtime="20201116 13:10:06.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.716" endtime="20201116 13:10:06.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:06.720" endtime="20201116 13:10:06.739"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.718" endtime="20201116 13:10:06.740"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.714" endtime="20201116 13:10:06.740"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.180" endtime="20201116 13:10:06.740"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.178" endtime="20201116 13:10:06.741"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:04.177" endtime="20201116 13:10:06.741"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:06.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.752" endtime="20201116 13:10:08.885"></status>
</kw>
<msg timestamp="20201116 13:10:08.885" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10673492, 'wakeups': [10683593, 10693542, 10703582, 10713531, 10723571...</msg>
<status status="PASS" starttime="20201116 13:10:06.751" endtime="20201116 13:10:08.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.888" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10673492, 'wakeups': [10683593, 10693542, 10703582, 10713531, 10723571...</msg>
<status status="PASS" starttime="20201116 13:10:08.886" endtime="20201116 13:10:08.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.890" endtime="20201116 13:10:08.891"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.748" endtime="20201116 13:10:08.892"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.746" endtime="20201116 13:10:08.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:08.895" level="INFO">${RESULT} = {'start-time': 10673492, 'timer-interval': 10000, 'timer-count': 5, 'wakeups': [10683593, 10693542, 10703582, 10713531, 10723571, 10733551, 10743560, 10753540, 10763519, 10773559, 10783538, 10793518, ...</msg>
<status status="PASS" starttime="20201116 13:10:08.893" endtime="20201116 13:10:08.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.899" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:08.898" endtime="20201116 13:10:08.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.901" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:08.900" endtime="20201116 13:10:08.902"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.896" endtime="20201116 13:10:08.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.907" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:10:08.905" endtime="20201116 13:10:08.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.909" level="INFO">VALUE: 10673492</msg>
<status status="PASS" starttime="20201116 13:10:08.908" endtime="20201116 13:10:08.909"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.903" endtime="20201116 13:10:08.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.914" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:08.913" endtime="20201116 13:10:08.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.917" level="INFO">VALUE: [10683593, 10693542, 10703582, 10713531, 10723571, 10733551, 10743560, 10753540, 10763519, 10773559, 10783538, 10793518, 10803558, 10813537, 10823516, 10833557, 10843536, 10853515, 10863555, 10873535, 10883514, 10893554, 10903533, 10913513, 10923522, 10933563, 10943542, 10953582, 10963531, 10973510, 10983581, 10993530, 11003509, 11013580, 11023529, 11033508, 11043579, 11053527, 11063507, 11073577, 11083526, 11093505, 11103576, 11113525, 11123504, 11133575, 11143524, 11153503, 11163574, 11173522, 11183502, 11193572, 11203552, 11213500, 11223571, 11233551, 11243499, 11253570, 11263549, 11273498, 11283569, 11293548, 11303497, 11313568, 11323547, 11333496, 11343566, 11353546, 11363494, 11373565, 11383544, 11393493, 11403564, 11413543, 11423553, 11433532, 11443511, 11453582, 11463531, 11473510, 11483581, 11493530, 11503509, 11513580, 11523529, 11533508, 11543579, 11553527, 11563507, 11573577, 11583526, 11593505, 11603576, 11613525, 11623504, 11633575, 11643524, 11653503, 11663574, 11673492]</msg>
<status status="PASS" starttime="20201116 13:10:08.915" endtime="20201116 13:10:08.917"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.911" endtime="20201116 13:10:08.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.924" endtime="20201116 13:10:09.217"></status>
</kw>
<msg timestamp="20201116 13:10:09.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025336653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035439222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:08.922" endtime="20201116 13:10:09.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:09.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025336653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035439222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:09.221" endtime="20201116 13:10:09.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:09.229" endtime="20201116 13:10:09.230"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.920" endtime="20201116 13:10:09.231"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.918" endtime="20201116 13:10:09.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:09.256" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:09.232" endtime="20201116 13:10:09.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:09.261" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:10:09.260" endtime="20201116 13:10:09.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:09.263" level="INFO">VALUE: 0.025336653</msg>
<status status="PASS" starttime="20201116 13:10:09.262" endtime="20201116 13:10:09.263"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.257" endtime="20201116 13:10:09.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:09.269" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:09.268" endtime="20201116 13:10:09.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:09.271" level="INFO">VALUE: [0.035439222, 0.045399306, 0.055427236, 0.065387694, 0.075415681, 0.085406819, 0.095404167, 0.105377236, 0.115368528, 0.125401847, 0.135375056, 0.145366333, 0.155399778, 0.165372958, 0.175364181, 0.185397597, 0.195370778, 0.205361972, 0.215395458, 0.225368583, 0.235359819, 0.245393319, 0.255366472, 0.265357764, 0.275372861, 0.285400597, 0.295391597, 0.305419611, 0.315362111, 0.325353403, 0.335417361, 0.345359972, 0.355351153, 0.365415222, 0.375357917, 0.385349056, 0.395413056, 0.405355694, 0.415346889, 0.425410931, 0.435353528, 0.445344806, 0.455408708, 0.465351333, 0.475342653, 0.485406486, 0.495349208, 0.505340458, 0.515403778, 0.525347042, 0.535338292, 0.545402222, 0.555375403, 0.565336139, 0.575400069, 0.585373278, 0.595334028, 0.605397861, 0.615371125, 0.625331833, 0.635395833, 0.645368944, 0.655329611, 0.665393722, 0.675366778, 0.685327583, 0.695391389, 0.705364653, 0.715325389, 0.725389319, 0.735362486, 0.745323167, 0.755387208, 0.765360375, 0.77537575, 0.785348778, 0.795339986, 0.805403931, 0.815346514, 0.825337806, 0.835401861, 0.845344417, 0.855335667, 0.865399667, 0.87534225, 0.885333514, 0.895397458, 0.905340153, 0.915331347, 0.925395361, 0.935337931, 0.945329125, 0.955393069, 0.965335833, 0.975326958, 0.985390972, 0.995333667, 1.005324903, 1.015388944, 1.025313667] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:09.270" endtime="20201116 13:10:09.271"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.264" endtime="20201116 13:10:09.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:09.274" endtime="20201116 13:10:09.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:09.278" endtime="20201116 13:10:09.297"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.276" endtime="20201116 13:10:09.298"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.273" endtime="20201116 13:10:09.299"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.744" endtime="20201116 13:10:09.299"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.742" endtime="20201116 13:10:09.299"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.741" endtime="20201116 13:10:09.299"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:09.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:09.311" endtime="20201116 13:10:11.440"></status>
</kw>
<msg timestamp="20201116 13:10:11.441" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13231048, 'wakeups': [13241180, 13251129, 13261138, 13271087, 13281066...</msg>
<status status="PASS" starttime="20201116 13:10:09.309" endtime="20201116 13:10:11.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.444" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13231048, 'wakeups': [13241180, 13251129, 13261138, 13271087, 13281066...</msg>
<status status="PASS" starttime="20201116 13:10:11.442" endtime="20201116 13:10:11.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.445" endtime="20201116 13:10:11.447"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.306" endtime="20201116 13:10:11.447"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.304" endtime="20201116 13:10:11.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:11.451" level="INFO">${RESULT} = {'start-time': 13231048, 'timer-interval': 10000, 'timer-count': 6, 'wakeups': [13241180, 13251129, 13261138, 13271087, 13281066, 13291168, 13301116, 13311126, 13321105, 13331054, 13341156, 13351135, ...</msg>
<status status="PASS" starttime="20201116 13:10:11.448" endtime="20201116 13:10:11.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.455" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:11.454" endtime="20201116 13:10:11.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.457" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:11.456" endtime="20201116 13:10:11.457"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.451" endtime="20201116 13:10:11.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.463" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:10:11.461" endtime="20201116 13:10:11.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.465" level="INFO">VALUE: 13231048</msg>
<status status="PASS" starttime="20201116 13:10:11.464" endtime="20201116 13:10:11.466"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.459" endtime="20201116 13:10:11.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.471" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:11.470" endtime="20201116 13:10:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.473" level="INFO">VALUE: [13241180, 13251129, 13261138, 13271087, 13281066, 13291168, 13301116, 13311126, 13321105, 13331054, 13341156, 13351135, 13361114, 13371093, 13381072, 13391143, 13401123, 13411132, 13421081, 13431060, 13441162, 13451110, 13461120, 13471099, 13481109, 13491119, 13501098, 13511077, 13521148, 13531127, 13541137, 13551086, 13561065, 13571166, 13581115, 13591125, 13601104, 13611053, 13621154, 13631134, 13641113, 13651092, 13661071, 13671142, 13681121, 13691131, 13701080, 13711059, 13721160, 13731140, 13741119, 13751129, 13761108, 13771057, 13781158, 13791137, 13801116, 13811096, 13821075, 13831146, 13841125, 13851135, 13861083, 13871063, 13881164, 13891113, 13901123, 13911102, 13921051, 13931152, 13941131, 13951110, 13961090, 13971069, 13981109, 13991088, 14001068, 14011169, 14021118, 14031127, 14041107, 14051055, 14061157, 14071136, 14081115, 14091094, 14101074, 14111145, 14121124, 14131134, 14141082, 14151062, 14161163, 14171112, 14181121, 14191101, 14201049, 14211151, 14221130, 14231079]</msg>
<status status="PASS" starttime="20201116 13:10:11.472" endtime="20201116 13:10:11.478"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.467" endtime="20201116 13:10:11.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.486" endtime="20201116 13:10:11.776"></status>
</kw>
<msg timestamp="20201116 13:10:11.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024016486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034127722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:11.484" endtime="20201116 13:10:11.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024016486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034127722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:11.780" endtime="20201116 13:10:11.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.788" endtime="20201116 13:10:11.790"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.482" endtime="20201116 13:10:11.790"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.480" endtime="20201116 13:10:11.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:11.815" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:11.791" endtime="20201116 13:10:11.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.820" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:10:11.819" endtime="20201116 13:10:11.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.822" level="INFO">VALUE: 0.024016486</msg>
<status status="PASS" starttime="20201116 13:10:11.821" endtime="20201116 13:10:11.822"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.816" endtime="20201116 13:10:11.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.827" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:11.826" endtime="20201116 13:10:11.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.830" level="INFO">VALUE: [0.034127722, 0.0440865, 0.054077125, 0.06403725, 0.074028083, 0.084112917, 0.094072764, 0.104063194, 0.114054014, 0.124014292, 0.134099111, 0.144089472, 0.1540495, 0.164040306, 0.174031014, 0.184085375, 0.194075722, 0.204066194, 0.214026472, 0.224017236, 0.234102208, 0.244062, 0.254052569, 0.26404325, 0.274060181, 0.284050417, 0.294041139, 0.304031917, 0.314086264, 0.324076528, 0.334067153, 0.344027264, 0.354018069, 0.364102903, 0.374062819, 0.384053306, 0.394044167, 0.404004333, 0.414089167, 0.424079583, 0.434039625, 0.444030375, 0.454021153, 0.464075417, 0.474065806, 0.484056403, 0.494016528, 0.504007347, 0.514091069, 0.524071472, 0.5340615, 0.544052083, 0.554042875, 0.564003028, 0.574087875, 0.584078278, 0.594038333, 0.604029056, 0.614019806, 0.624073986, 0.634064472, 0.644055042, 0.654015236, 0.664006, 0.674090861, 0.684050639, 0.694041264, 0.704032042, 0.713992194, 0.724076972, 0.734067333, 0.744027569, 0.754018181, 0.764009014, 0.774025722, 0.784016292, 0.794006792, 0.804091653, 0.814051583, 0.824042069, 0.834032792, 0.843993111, 0.854077931, 0.864068292, 0.874028333, 0.884019097, 0.894009764, 0.904064194, 0.914054583, 0.924045125, 0.934005292, 0.943996042, 0.954080861, 0.964040778, 0.974031375, 0.984022111, 0.993982319, 1.004067292, 1.014057097, 1.023999292] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:11.829" endtime="20201116 13:10:11.831"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.823" endtime="20201116 13:10:11.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.834" endtime="20201116 13:10:11.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:11.837" endtime="20201116 13:10:11.857"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.835" endtime="20201116 13:10:11.858"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.832" endtime="20201116 13:10:11.858"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.303" endtime="20201116 13:10:11.859"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.301" endtime="20201116 13:10:11.859"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:09.300" endtime="20201116 13:10:11.859"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:11.862" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.871" endtime="20201116 13:10:13.999"></status>
</kw>
<msg timestamp="20201116 13:10:13.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15793640, 'wakeups': [15803802, 15813720, 15823791, 15833709, 15843780...</msg>
<status status="PASS" starttime="20201116 13:10:11.870" endtime="20201116 13:10:14.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15793640, 'wakeups': [15803802, 15813720, 15823791, 15833709, 15843780...</msg>
<status status="PASS" starttime="20201116 13:10:14.001" endtime="20201116 13:10:14.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:14.004" endtime="20201116 13:10:14.005"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.867" endtime="20201116 13:10:14.006"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.864" endtime="20201116 13:10:14.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:14.009" level="INFO">${RESULT} = {'start-time': 15793640, 'timer-interval': 10000, 'timer-count': 7, 'wakeups': [15803802, 15813720, 15823791, 15833709, 15843780, 15853729, 15863769, 15873718, 15883789, 15893707, 15903778, 15913726, ...</msg>
<status status="PASS" starttime="20201116 13:10:14.007" endtime="20201116 13:10:14.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.013" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:14.012" endtime="20201116 13:10:14.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.016" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:14.015" endtime="20201116 13:10:14.016"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.010" endtime="20201116 13:10:14.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.021" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:10:14.020" endtime="20201116 13:10:14.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.023" level="INFO">VALUE: 15793640</msg>
<status status="PASS" starttime="20201116 13:10:14.022" endtime="20201116 13:10:14.023"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.017" endtime="20201116 13:10:14.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.028" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:14.027" endtime="20201116 13:10:14.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.030" level="INFO">VALUE: [15803802, 15813720, 15823791, 15833709, 15843780, 15853729, 15863769, 15873718, 15883789, 15893707, 15903778, 15913726, 15923767, 15933715, 15943786, 15953704, 15963775, 15973724, 15983764, 15993713, 16003784, 16013702, 16023773, 16033721, 16043792, 16053710, 16063781, 16073730, 16083770, 16093719, 16103790, 16113708, 16123779, 16133728, 16143768, 16153717, 16163787, 16173706, 16183776, 16193725, 16203765, 16213714, 16223785, 16233703, 16243774, 16253723, 16263763, 16273712, 16283782, 16293731, 16303771, 16313720, 16323791, 16333709, 16343780, 16353729, 16363769, 16373718, 16383789, 16393707, 16403778, 16413726, 16423767, 16433715, 16443786, 16453704, 16463775, 16473724, 16483764, 16493713, 16503784, 16513702, 16523773, 16533721, 16543792, 16553710, 16563781, 16573730, 16583770, 16593719, 16603790, 16613708, 16623779, 16633728, 16643768, 16653717, 16663787, 16673706, 16683776, 16693725, 16703765, 16713714, 16723785, 16733703, 16743774, 16753723, 16763763, 16773712, 16783782, 16793731]</msg>
<status status="PASS" starttime="20201116 13:10:14.029" endtime="20201116 13:10:14.031"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.024" endtime="20201116 13:10:14.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:14.039" endtime="20201116 13:10:14.332"></status>
</kw>
<msg timestamp="20201116 13:10:14.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03708925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:10:14.036" endtime="20201116 13:10:14.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03708925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:10:14.335" endtime="20201116 13:10:14.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:14.344" endtime="20201116 13:10:14.346"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.033" endtime="20201116 13:10:14.346"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.032" endtime="20201116 13:10:14.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:14.371" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:14.347" endtime="20201116 13:10:14.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.375" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:10:14.374" endtime="20201116 13:10:14.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.377" level="INFO">VALUE: 0.026950875</msg>
<status status="PASS" starttime="20201116 13:10:14.376" endtime="20201116 13:10:14.378"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.372" endtime="20201116 13:10:14.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.383" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:14.382" endtime="20201116 13:10:14.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:14.385" level="INFO">VALUE: [0.03708925, 0.047027806, 0.057076472, 0.067016111, 0.077064847, 0.087035167, 0.09705325, 0.107023514, 0.117072111, 0.127011889, 0.137060597, 0.147030806, 0.157049042, 0.167019222, 0.177067889, 0.187007639, 0.197056292, 0.207026403, 0.217044611, 0.227014806, 0.237063472, 0.247003292, 0.257051958, 0.267022264, 0.277070903, 0.287010583, 0.297059264, 0.307029472, 0.317047569, 0.327017833, 0.337066611, 0.347006292, 0.357054792, 0.367025181, 0.377043306, 0.387013542, 0.397062167, 0.407001931, 0.417050569, 0.427020889, 0.437039083, 0.447009306, 0.457057917, 0.466997667, 0.477046333, 0.487016542, 0.497034639, 0.507004889, 0.517053653, 0.527023917, 0.537042014, 0.547012292, 0.557060861, 0.567000486, 0.577049306, 0.587019569, 0.597037722, 0.607007889, 0.617056583, 0.626996375, 0.637044931, 0.647015125, 0.657033292, 0.667003583, 0.677052319, 0.686992042, 0.697040597, 0.707010986, 0.717029, 0.726999347, 0.737048056, 0.746987653, 0.757036403, 0.767006569, 0.777055292, 0.786994958, 0.797043625, 0.807013875, 0.817031958, 0.827002319, 0.837051028, 0.846990583, 0.857039333, 0.867009639, 0.877027764, 0.886998014, 0.897046556, 0.906986458, 0.917035056, 0.927005278, 0.937023444, 0.946993708, 0.957042375, 0.966982097, 0.977030764, 0.987001083, 0.997019153, 1.006989458, 1.017038069, 1.027008292] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:14.384" endtime="20201116 13:10:14.385"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.379" endtime="20201116 13:10:14.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:14.388" endtime="20201116 13:10:14.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:14.392" endtime="20201116 13:10:14.412"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.390" endtime="20201116 13:10:14.412"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.387" endtime="20201116 13:10:14.413"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.863" endtime="20201116 13:10:14.413"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.860" endtime="20201116 13:10:14.413"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.859" endtime="20201116 13:10:14.413"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:14.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:14.425" endtime="20201116 13:10:16.557"></status>
</kw>
<msg timestamp="20201116 13:10:16.558" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18346221, 'wakeups': [18356353, 18366363, 18376373, 18386352, 18396362...</msg>
<status status="PASS" starttime="20201116 13:10:14.424" endtime="20201116 13:10:16.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18346221, 'wakeups': [18356353, 18366363, 18376373, 18386352, 18396362...</msg>
<status status="PASS" starttime="20201116 13:10:16.559" endtime="20201116 13:10:16.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.562" endtime="20201116 13:10:16.564"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.420" endtime="20201116 13:10:16.564"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.418" endtime="20201116 13:10:16.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:16.572" level="INFO">${RESULT} = {'start-time': 18346221, 'timer-interval': 10000, 'timer-count': 8, 'wakeups': [18356353, 18366363, 18376373, 18386352, 18396362, 18406372, 18416351, 18426361, 18436370, 18446350, 18456359, 18466369, ...</msg>
<status status="PASS" starttime="20201116 13:10:16.570" endtime="20201116 13:10:16.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.576" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:16.575" endtime="20201116 13:10:16.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.579" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:16.578" endtime="20201116 13:10:16.579"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.573" endtime="20201116 13:10:16.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.584" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:10:16.583" endtime="20201116 13:10:16.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.586" level="INFO">VALUE: 18346221</msg>
<status status="PASS" starttime="20201116 13:10:16.585" endtime="20201116 13:10:16.586"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.580" endtime="20201116 13:10:16.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.591" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:16.590" endtime="20201116 13:10:16.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.593" level="INFO">VALUE: [18356353, 18366363, 18376373, 18386352, 18396362, 18406372, 18416351, 18426361, 18436370, 18446350, 18456359, 18466369, 18476348, 18486358, 18496368, 18506347, 18516357, 18526367, 18536346, 18546356, 18556365, 18566345, 18576354, 18586364, 18596343, 18606353, 18616363, 18626373, 18636352, 18646362, 18656372, 18666351, 18676361, 18686370, 18696350, 18706359, 18716369, 18726348, 18736358, 18746368, 18756347, 18766357, 18776367, 18786346, 18796356, 18806365, 18816345, 18826354, 18836364, 18846343, 18856353, 18866363, 18876373, 18886352, 18896362, 18906372, 18916351, 18926361, 18936370, 18946350, 18956359, 18966369, 18976348, 18986358, 18996368, 19006347, 19016357, 19026367, 19036346, 19046356, 19056365, 19066345, 19076354, 19086364, 19096343, 19106353, 19116363, 19126373, 19136352, 19146362, 19156372, 19166351, 19176361, 19186370, 19196350, 19206359, 19216369, 19226348, 19236358, 19246368, 19256347, 19266357, 19276367, 19286346, 19296356, 19306365, 19316345, 19326354, 19336364, 19346343]</msg>
<status status="PASS" starttime="20201116 13:10:16.592" endtime="20201116 13:10:16.594"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.587" endtime="20201116 13:10:16.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.601" endtime="20201116 13:10:16.893"></status>
</kw>
<msg timestamp="20201116 13:10:16.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024402917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034560375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:16.599" endtime="20201116 13:10:16.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024402917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034560375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:16.898" endtime="20201116 13:10:16.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.905" endtime="20201116 13:10:16.907"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.597" endtime="20201116 13:10:16.908"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.595" endtime="20201116 13:10:16.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:16.933" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:16.909" endtime="20201116 13:10:16.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.938" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:10:16.937" endtime="20201116 13:10:16.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.940" level="INFO">VALUE: 0.024402917</msg>
<status status="PASS" starttime="20201116 13:10:16.939" endtime="20201116 13:10:16.941"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.934" endtime="20201116 13:10:16.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.947" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:16.945" endtime="20201116 13:10:16.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.949" level="INFO">VALUE: [0.034560375, 0.044567972, 0.054577431, 0.064556347, 0.074565708, 0.084575111, 0.094554139, 0.104563597, 0.114572944, 0.124551944, 0.134561403, 0.144570958, 0.154549806, 0.164559361, 0.174568792, 0.18454775, 0.194557208, 0.204566625, 0.214545639, 0.224554958, 0.234564472, 0.244543389, 0.254552792, 0.264562278, 0.274541181, 0.284550708, 0.294560125, 0.304569583, 0.314548625, 0.324558083, 0.334567458, 0.344546458, 0.354555903, 0.364565361, 0.374544208, 0.384553792, 0.394563181, 0.404542028, 0.414551597, 0.424560931, 0.434539847, 0.444549417, 0.454558861, 0.464537847, 0.474547319, 0.484556778, 0.494535569, 0.504544986, 0.514554542, 0.5245335, 0.534542958, 0.544552417, 0.554561792, 0.564540847, 0.574550292, 0.584559639, 0.594538653, 0.604548028, 0.614557528, 0.624536458, 0.634545903, 0.644555319, 0.654534194, 0.664543806, 0.674553208, 0.684532097, 0.694541528, 0.704551042, 0.714530042, 0.724539417, 0.734548986, 0.744527917, 0.754537208, 0.764546694, 0.774525583, 0.784535125, 0.794544542, 0.804554014, 0.814532972, 0.824542472, 0.834551806, 0.844530875, 0.854540278, 0.864549653, 0.874528736, 0.884538208, 0.894547667, 0.904526583, 0.914536056, 0.924545514, 0.934524319, 0.944533903, 0.954543278, 0.964522181, 0.974531611, 0.984541083, 0.994520167, 1.004529472, 1.014538944, 1.024517819] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:16.948" endtime="20201116 13:10:16.949"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.942" endtime="20201116 13:10:16.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.952" endtime="20201116 13:10:16.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:16.956" endtime="20201116 13:10:16.975"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.954" endtime="20201116 13:10:16.976"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.950" endtime="20201116 13:10:16.976"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.417" endtime="20201116 13:10:16.977"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.414" endtime="20201116 13:10:16.977"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:14.414" endtime="20201116 13:10:16.977"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:16.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.988" endtime="20201116 13:10:19.111"></status>
</kw>
<msg timestamp="20201116 13:10:19.111" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20908813, 'wakeups': [20918975, 20928985, 20938995, 20948974, 20958984...</msg>
<status status="PASS" starttime="20201116 13:10:16.987" endtime="20201116 13:10:19.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.114" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20908813, 'wakeups': [20918975, 20928985, 20938995, 20948974, 20958984...</msg>
<status status="PASS" starttime="20201116 13:10:19.113" endtime="20201116 13:10:19.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:19.115" endtime="20201116 13:10:19.117"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.984" endtime="20201116 13:10:19.118"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.982" endtime="20201116 13:10:19.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:19.121" level="INFO">${RESULT} = {'start-time': 20908813, 'timer-interval': 10000, 'timer-count': 9, 'wakeups': [20918975, 20928985, 20938995, 20948974, 20958984, 20968994, 20978973, 20988983, 20998992, 21008972, 21018981, 21028991, ...</msg>
<status status="PASS" starttime="20201116 13:10:19.119" endtime="20201116 13:10:19.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.127" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:19.124" endtime="20201116 13:10:19.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.129" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:19.128" endtime="20201116 13:10:19.129"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.122" endtime="20201116 13:10:19.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.134" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:10:19.133" endtime="20201116 13:10:19.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.136" level="INFO">VALUE: 20908813</msg>
<status status="PASS" starttime="20201116 13:10:19.135" endtime="20201116 13:10:19.137"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.130" endtime="20201116 13:10:19.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.142" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:19.141" endtime="20201116 13:10:19.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.144" level="INFO">VALUE: [20918975, 20928985, 20938995, 20948974, 20958984, 20968994, 20978973, 20988983, 20998992, 21008972, 21018981, 21028991, 21038970, 21048980, 21058990, 21068969, 21078979, 21088989, 21098968, 21108978, 21118988, 21128967, 21138977, 21148986, 21158966, 21168975, 21178985, 21188995, 21198974, 21208984, 21218994, 21228973, 21238983, 21248992, 21258972, 21268981, 21278991, 21288970, 21298980, 21308990, 21318969, 21328979, 21338989, 21348968, 21358978, 21368988, 21378967, 21388977, 21398986, 21408966, 21418975, 21428985, 21438995, 21448974, 21458984, 21468994, 21478973, 21488983, 21498992, 21508972, 21518981, 21528991, 21538970, 21548980, 21558990, 21568969, 21578979, 21588989, 21598968, 21608978, 21618988, 21628967, 21638977, 21648986, 21658966, 21668975, 21678985, 21688995, 21698974, 21708984, 21718994, 21728973, 21738983, 21748992, 21758972, 21768981, 21778991, 21788970, 21798980, 21808990, 21818969, 21828979, 21838989, 21848968, 21858978, 21868988, 21878967, 21888977, 21898986, 21908966]</msg>
<status status="PASS" starttime="20201116 13:10:19.143" endtime="20201116 13:10:19.144"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.138" endtime="20201116 13:10:19.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:19.152" endtime="20201116 13:10:19.443"></status>
</kw>
<msg timestamp="20201116 13:10:19.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023006736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033191833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:19.150" endtime="20201116 13:10:19.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023006736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033191833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:19.446" endtime="20201116 13:10:19.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:19.454" endtime="20201116 13:10:19.456"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.147" endtime="20201116 13:10:19.457"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.145" endtime="20201116 13:10:19.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:19.481" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:19.458" endtime="20201116 13:10:19.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.487" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:10:19.485" endtime="20201116 13:10:19.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.489" level="INFO">VALUE: 0.023006736</msg>
<status status="PASS" starttime="20201116 13:10:19.488" endtime="20201116 13:10:19.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.482" endtime="20201116 13:10:19.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.494" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:19.493" endtime="20201116 13:10:19.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:19.496" level="INFO">VALUE: [0.033191833, 0.043198028, 0.053207556, 0.063186542, 0.073195931, 0.083205347, 0.093184306, 0.103193792, 0.113203264, 0.123182167, 0.133191764, 0.143201125, 0.153179944, 0.163189542, 0.173198931, 0.183177903, 0.193187347, 0.203196764, 0.213175722, 0.223185056, 0.233194583, 0.243173472, 0.253183042, 0.26319225, 0.273172306, 0.283180806, 0.293190264, 0.303199819, 0.313178736, 0.323188042, 0.333197625, 0.343176639, 0.353186, 0.363195333, 0.373174389, 0.383183931, 0.393193319, 0.403172167, 0.413181681, 0.423191167, 0.433170056, 0.443179583, 0.453188944, 0.463167986, 0.473177333, 0.483186889, 0.493165736, 0.503175222, 0.513184556, 0.523164583, 0.533173028, 0.543182444, 0.553192611, 0.563171097, 0.573180333, 0.583189903, 0.593168667, 0.603178222, 0.613187625, 0.623166667, 0.633176083, 0.643185542, 0.653164486, 0.663173917, 0.673183389, 0.683162333, 0.693171847, 0.70318125, 0.713160208, 0.723169667, 0.733179167, 0.743158083, 0.753167444, 0.763176833, 0.773156722, 0.783165194, 0.793174722, 0.803184292, 0.813163056, 0.823172583, 0.833182083, 0.843161014, 0.853170417, 0.863179833, 0.873158792, 0.883168194, 0.893177681, 0.903156694, 0.913166139, 0.923175611, 0.933154542, 0.943164014, 0.953173514, 0.963152389, 0.973161861, 0.983171292, 0.993150292, 1.003159764, 1.013168986, 1.023148958] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:19.495" endtime="20201116 13:10:19.497"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.490" endtime="20201116 13:10:19.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:19.500" endtime="20201116 13:10:19.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:19.504" endtime="20201116 13:10:19.523"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.502" endtime="20201116 13:10:19.524"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.498" endtime="20201116 13:10:19.524"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.981" endtime="20201116 13:10:19.525"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.978" endtime="20201116 13:10:19.525"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.977" endtime="20201116 13:10:19.525"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:19.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:19.536" endtime="20201116 13:10:21.671"></status>
</kw>
<msg timestamp="20201116 13:10:21.671" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23461425, 'wakeups': [23471649, 23481628, 23491577, 23501525, 235115...</msg>
<status status="PASS" starttime="20201116 13:10:19.535" endtime="20201116 13:10:21.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.674" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23461425, 'wakeups': [23471649, 23481628, 23491577, 23501525, 235115...</msg>
<status status="PASS" starttime="20201116 13:10:21.673" endtime="20201116 13:10:21.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:21.675" endtime="20201116 13:10:21.677"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.532" endtime="20201116 13:10:21.678"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.530" endtime="20201116 13:10:21.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:21.681" level="INFO">${RESULT} = {'start-time': 23461425, 'timer-interval': 10000, 'timer-count': 10, 'wakeups': [23471649, 23481628, 23491577, 23501525, 23511505, 23521484, 23531433, 23541595, 23551544, 23561584, 23571624, 23581573,...</msg>
<status status="PASS" starttime="20201116 13:10:21.679" endtime="20201116 13:10:21.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.685" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:21.684" endtime="20201116 13:10:21.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.688" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:21.686" endtime="20201116 13:10:21.688"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.682" endtime="20201116 13:10:21.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.693" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:10:21.691" endtime="20201116 13:10:21.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.695" level="INFO">VALUE: 23461425</msg>
<status status="PASS" starttime="20201116 13:10:21.694" endtime="20201116 13:10:21.695"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.689" endtime="20201116 13:10:21.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.700" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:21.699" endtime="20201116 13:10:21.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.702" level="INFO">VALUE: [23471649, 23481628, 23491577, 23501525, 23511505, 23521484, 23531433, 23541595, 23551544, 23561584, 23571624, 23581573, 23591522, 23601501, 23611480, 23621429, 23631591, 23641540, 23651580, 23661621, 23671569, 23681518, 23691497, 23701477, 23711425, 23721588, 23731536, 23741607, 23751617, 23761566, 23771545, 23781494, 23791473, 23801452, 23811584, 23821533, 23831604, 23841613, 23851562, 23861541, 23871490, 23881469, 23891448, 23901580, 23911529, 23921600, 23931610, 23941558, 23951538, 23961486, 23971466, 23981445, 23991607, 24001525, 24011596, 24021636, 24031555, 24041534, 24051513, 24061462, 24071441, 24081604, 24091522, 24101593, 24111633, 24121551, 24131530, 24141510, 24151458, 24161437, 24171600, 24181518, 24191589, 24201629, 24211547, 24221527, 24231506, 24241485, 24251434, 24261596, 24271545, 24281585, 24291625, 24301574, 24311523, 24321502, 24331481, 24341430, 24351593, 24361541, 24371582, 24381622, 24391571, 24401519, 24411499, 24421478, 24431427, 24441589, 24451538, 24461578]</msg>
<status status="PASS" starttime="20201116 13:10:21.701" endtime="20201116 13:10:21.707"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.696" endtime="20201116 13:10:21.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:21.716" endtime="20201116 13:10:22.009"></status>
</kw>
<msg timestamp="20201116 13:10:22.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027131889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037350694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:21.715" endtime="20201116 13:10:22.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:22.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027131889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037350694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:22.013" endtime="20201116 13:10:22.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:22.021" endtime="20201116 13:10:22.023"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.712" endtime="20201116 13:10:22.023"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.709" endtime="20201116 13:10:22.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:22.048" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:10:22.025" endtime="20201116 13:10:22.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:22.053" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:10:22.052" endtime="20201116 13:10:22.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:22.055" level="INFO">VALUE: 0.027131889</msg>
<status status="PASS" starttime="20201116 13:10:22.054" endtime="20201116 13:10:22.055"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:22.049" endtime="20201116 13:10:22.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:22.061" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:22.060" endtime="20201116 13:10:22.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:22.063" level="INFO">VALUE: [0.037350694, 0.047326819, 0.057270306, 0.067205319, 0.077193264, 0.087181333, 0.097138889, 0.107277861, 0.117243847, 0.127288097, 0.137320042, 0.147263889, 0.157198833, 0.167186694, 0.177174889, 0.187132431, 0.197271431, 0.207237403, 0.217281431, 0.227313569, 0.237257361, 0.247192417, 0.257180375, 0.267168417, 0.277125972, 0.287265069, 0.297230972, 0.307305625, 0.317307139, 0.327250903, 0.337216486, 0.347173917, 0.357162028, 0.367150028, 0.377258458, 0.387224486, 0.397299139, 0.407300778, 0.417244431, 0.42721, 0.437167389, 0.447155458, 0.457143542, 0.467252236, 0.477217986, 0.487292694, 0.497294264, 0.507237903, 0.517203597, 0.527160986, 0.537149028, 0.547137097, 0.557276125, 0.567211542, 0.577286069, 0.587318375, 0.597231375, 0.607197083, 0.617184986, 0.627142389, 0.637130583, 0.647269625, 0.657205153, 0.667279792, 0.677311903, 0.687224986, 0.697190625, 0.707178542, 0.717136069, 0.727124167, 0.737263125, 0.747198597, 0.757273167, 0.767305417, 0.777218528, 0.787184167, 0.797172111, 0.807160125, 0.817117653, 0.827256806, 0.837222639, 0.84726675, 0.857298806, 0.867242583, 0.877177667, 0.887165583, 0.897153569, 0.907111181, 0.917250292, 0.927216056, 0.937260347, 0.947292333, 0.957236111, 0.967171111, 0.977159125, 0.987147264, 0.997104778, 1.007243764, 1.017209708, 1.027253944] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:22.062" endtime="20201116 13:10:22.063"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:22.057" endtime="20201116 13:10:22.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:22.066" endtime="20201116 13:10:22.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:22.070" endtime="20201116 13:10:22.090"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:22.068" endtime="20201116 13:10:22.091"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:22.065" endtime="20201116 13:10:22.091"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.529" endtime="20201116 13:10:22.091"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.526" endtime="20201116 13:10:22.092"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:19.525" endtime="20201116 13:10:22.092"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:56.491" endtime="20201116 13:10:22.092"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:56.412" endtime="20201116 13:10:22.093" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:54.861" endtime="20201116 13:10:22.098"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:09:52.818" endtime="20201116 13:10:22.109"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
