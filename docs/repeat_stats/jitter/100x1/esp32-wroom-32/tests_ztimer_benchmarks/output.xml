<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:09:22.707" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.274" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:23.282" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:24.251" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:23.272" endtime="20201116 13:09:24.251"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.254" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:24.252" endtime="20201116 13:09:24.254"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.271" endtime="20201116 13:09:24.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:24.257" endtime="20201116 13:09:24.438"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.256" endtime="20201116 13:09:24.439"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.452" endtime="20201116 13:09:24.473"></status>
</kw>
<msg timestamp="20201116 13:09:24.473" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:24.450" endtime="20201116 13:09:24.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.476" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:24.474" endtime="20201116 13:09:24.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.479" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:24.477" endtime="20201116 13:09:24.479"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:24.448" endtime="20201116 13:09:24.480"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:24.445" endtime="20201116 13:09:24.481"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.444" endtime="20201116 13:09:24.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:24.485" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:24.484" endtime="20201116 13:09:24.485"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.482" endtime="20201116 13:09:24.486"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.443" endtime="20201116 13:09:24.486"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.443" endtime="20201116 13:09:24.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.487" endtime="20201116 13:09:24.488"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.441" endtime="20201116 13:09:24.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.489" endtime="20201116 13:09:24.491"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.440" endtime="20201116 13:09:24.491"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.269" endtime="20201116 13:09:24.492"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:24.498" endtime="20201116 13:09:24.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.497" endtime="20201116 13:09:24.518"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.533" endtime="20201116 13:09:24.549"></status>
</kw>
<msg timestamp="20201116 13:09:24.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:24.530" endtime="20201116 13:09:24.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:24.550" endtime="20201116 13:09:24.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.555" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:24.553" endtime="20201116 13:09:24.555"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:24.528" endtime="20201116 13:09:24.556"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:24.525" endtime="20201116 13:09:24.556"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.523" endtime="20201116 13:09:24.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:24.560" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:24.559" endtime="20201116 13:09:24.561"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.557" endtime="20201116 13:09:24.561"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.522" endtime="20201116 13:09:24.561"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.522" endtime="20201116 13:09:24.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.562" endtime="20201116 13:09:24.563"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.521" endtime="20201116 13:09:24.564"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.519" endtime="20201116 13:09:24.564"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.496" endtime="20201116 13:09:24.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.572" endtime="20201116 13:09:24.586"></status>
</kw>
<msg timestamp="20201116 13:09:24.586" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:24.571" endtime="20201116 13:09:24.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.589" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:24.587" endtime="20201116 13:09:24.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.590" endtime="20201116 13:09:24.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.568" endtime="20201116 13:09:24.592"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.566" endtime="20201116 13:09:24.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.597" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:09:24.596" endtime="20201116 13:09:24.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.599" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201116 13:09:24.598" endtime="20201116 13:09:24.600"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.593" endtime="20201116 13:09:24.600"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:24.492" endtime="20201116 13:09:24.601" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:22.823" endtime="20201116 13:09:24.606"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.661" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:24.669" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:25.729" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:24.660" endtime="20201116 13:09:25.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:25.736" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:25.733" endtime="20201116 13:09:25.737"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.659" endtime="20201116 13:09:25.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:25.742" endtime="20201116 13:09:25.961"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:25.739" endtime="20201116 13:09:25.962"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:25.974" endtime="20201116 13:09:25.994"></status>
</kw>
<msg timestamp="20201116 13:09:25.994" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:25.972" endtime="20201116 13:09:25.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:25.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:25.995" endtime="20201116 13:09:25.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.000" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:25.998" endtime="20201116 13:09:26.000"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:25.970" endtime="20201116 13:09:26.001"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:25.968" endtime="20201116 13:09:26.001"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:25.967" endtime="20201116 13:09:26.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:26.005" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:26.005" endtime="20201116 13:09:26.006"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.003" endtime="20201116 13:09:26.006"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:25.966" endtime="20201116 13:09:26.006"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:25.965" endtime="20201116 13:09:26.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.007" endtime="20201116 13:09:26.009"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:25.964" endtime="20201116 13:09:26.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.010" endtime="20201116 13:09:26.011"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:25.963" endtime="20201116 13:09:26.012"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.658" endtime="20201116 13:09:26.012"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:26.019" endtime="20201116 13:09:26.039"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.017" endtime="20201116 13:09:26.040"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.052" endtime="20201116 13:09:26.071"></status>
</kw>
<msg timestamp="20201116 13:09:26.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:26.051" endtime="20201116 13:09:26.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:26.073" endtime="20201116 13:09:26.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.077" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:26.075" endtime="20201116 13:09:26.077"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:26.048" endtime="20201116 13:09:26.078"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:26.046" endtime="20201116 13:09:26.078"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.045" endtime="20201116 13:09:26.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:26.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:26.082" endtime="20201116 13:09:26.083"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.080" endtime="20201116 13:09:26.083"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.044" endtime="20201116 13:09:26.083"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.043" endtime="20201116 13:09:26.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.084" endtime="20201116 13:09:26.086"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.042" endtime="20201116 13:09:26.086"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.040" endtime="20201116 13:09:26.086"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.016" endtime="20201116 13:09:26.087"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:26.091" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.100" endtime="20201116 13:09:28.177"></status>
</kw>
<msg timestamp="20201116 13:09:28.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 328785, 'wakeups': [338813, 348802, 358792, 368792, 378792, 388792, 39...</msg>
<status status="PASS" starttime="20201116 13:09:26.098" endtime="20201116 13:09:28.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.184" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 328785, 'wakeups': [338813, 348802, 358792, 368792, 378792, 388792, 39...</msg>
<status status="PASS" starttime="20201116 13:09:28.181" endtime="20201116 13:09:28.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.187" endtime="20201116 13:09:28.190"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.095" endtime="20201116 13:09:28.191"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.093" endtime="20201116 13:09:28.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:28.198" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 328785, 'wakeups': [338813, 348802, 358792, 368792, 378792, 388792, 398792, 408792, 418792, 428792, 438792, 448792, 458792, 468792, 478792, 488792, 498792, 5087...</msg>
<status status="PASS" starttime="20201116 13:09:28.194" endtime="20201116 13:09:28.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.206" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:28.204" endtime="20201116 13:09:28.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.210" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:28.208" endtime="20201116 13:09:28.211"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.199" endtime="20201116 13:09:28.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.221" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:28.219" endtime="20201116 13:09:28.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.226" level="INFO">VALUE: 328785</msg>
<status status="PASS" starttime="20201116 13:09:28.223" endtime="20201116 13:09:28.226"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.214" endtime="20201116 13:09:28.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.242" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:28.240" endtime="20201116 13:09:28.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.247" level="INFO">VALUE: [338813, 348802, 358792, 368792, 378792, 388792, 398792, 408792, 418792, 428792, 438792, 448792, 458792, 468792, 478792, 488792, 498792, 508792, 518792, 528792, 538792, 548792, 558792, 568792, 578792, 588792, 598792, 608792, 618792, 628792, 638792, 648792, 658792, 668792, 678792, 688792, 698792, 708792, 718792, 728792, 738792, 748792, 758792, 768792, 778792, 788792, 798792, 808792, 818792, 828792, 838792, 848792, 858792, 868792, 878792, 888792, 898792, 908792, 918792, 928792, 938792, 948792, 958792, 968792, 978792, 988792, 998792, 1008792, 1018792, 1028792, 1038792, 1048792, 1058792, 1068792, 1078792, 1088792, 1098792, 1108792, 1118792, 1128792, 1138792, 1148792, 1158792, 1168792, 1178792, 1188792, 1198792, 1208792, 1218792, 1228792, 1238792, 1248792, 1258792, 1268792, 1278792, 1288792, 1298792, 1308792, 1318792, 1328792]</msg>
<status status="PASS" starttime="20201116 13:09:28.245" endtime="20201116 13:09:28.248"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.235" endtime="20201116 13:09:28.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.261" endtime="20201116 13:09:28.558"></status>
</kw>
<msg timestamp="20201116 13:09:28.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069864403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079893694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:28.259" endtime="20201116 13:09:28.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069864403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079893694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:28.562" endtime="20201116 13:09:28.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.569" endtime="20201116 13:09:28.571"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.254" endtime="20201116 13:09:28.571"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.250" endtime="20201116 13:09:28.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:28.595" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:28.572" endtime="20201116 13:09:28.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.600" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:28.599" endtime="20201116 13:09:28.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.602" level="INFO">VALUE: 0.069864403</msg>
<status status="PASS" starttime="20201116 13:09:28.601" endtime="20201116 13:09:28.602"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.596" endtime="20201116 13:09:28.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.607" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:28.606" endtime="20201116 13:09:28.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.609" level="INFO">VALUE: [0.079893694, 0.08988325, 0.099874181, 0.109875153, 0.119876028, 0.129876972, 0.139877875, 0.149878792, 0.159879722, 0.169880667, 0.179881569, 0.189882486, 0.199883431, 0.209884333, 0.219885278, 0.229886181, 0.239887111, 0.249888028, 0.259889028, 0.269889875, 0.279890792, 0.289891722, 0.299892639, 0.309893569, 0.319894486, 0.329895444, 0.339896319, 0.349897264, 0.359898167, 0.369899083, 0.379900014, 0.389900931, 0.399901861, 0.409902778, 0.419903708, 0.429904639, 0.439905542, 0.449906472, 0.459907389, 0.469908306, 0.479909236, 0.489910181, 0.499911069, 0.509912069, 0.519912931, 0.529913847, 0.539914764, 0.549915694, 0.559916611, 0.569917528, 0.579918528, 0.589919375, 0.599920306, 0.609921222, 0.619922153, 0.629923125, 0.639923986, 0.649924958, 0.659925833, 0.669926764, 0.679927681, 0.689928625, 0.699929528, 0.709930458, 0.719931458, 0.729932319, 0.739933236, 0.749934153, 0.759935069, 0.769935986, 0.779936917, 0.789937833, 0.799938764, 0.809939681, 0.819940625, 0.829941542, 0.839942444, 0.849943389, 0.859944319, 0.869945222, 0.879946139, 0.889947069, 0.899947986, 0.909948944, 0.919949833, 0.929950778, 0.939951694, 0.949952611, 0.959953528, 0.969954458, 0.979955389, 0.989956292, 0.999957278, 1.009958167, 1.019959083, 1.029959986, 1.039960917, 1.049961847, 1.059962764, 1.069963681] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:28.608" endtime="20201116 13:09:28.610"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.603" endtime="20201116 13:09:28.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.612" endtime="20201116 13:09:28.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:28.616" endtime="20201116 13:09:28.635"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.614" endtime="20201116 13:09:28.636"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.611" endtime="20201116 13:09:28.636"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.092" endtime="20201116 13:09:28.637"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.090" endtime="20201116 13:09:28.637"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.089" endtime="20201116 13:09:28.637"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:28.640" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.648" endtime="20201116 13:09:30.730"></status>
</kw>
<msg timestamp="20201116 13:09:30.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2876015, 'wakeups': [2886039, 2896028, 2906027, 2916027, 2926027, 2936...</msg>
<status status="PASS" starttime="20201116 13:09:28.646" endtime="20201116 13:09:30.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2876015, 'wakeups': [2886039, 2896028, 2906027, 2916027, 2926027, 2936...</msg>
<status status="PASS" starttime="20201116 13:09:30.733" endtime="20201116 13:09:30.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:30.739" endtime="20201116 13:09:30.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.644" endtime="20201116 13:09:30.744"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.642" endtime="20201116 13:09:30.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:30.750" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 2876015, 'wakeups': [2886039, 2896028, 2906027, 2916027, 2926027, 2936027, 2946027, 2956027, 2966027, 2976027, 2986027, 2996027, 3006027, 3016027, 3026027, 3036...</msg>
<status status="PASS" starttime="20201116 13:09:30.746" endtime="20201116 13:09:30.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.758" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:30.756" endtime="20201116 13:09:30.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.765" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:30.761" endtime="20201116 13:09:30.765"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:30.752" endtime="20201116 13:09:30.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.775" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:09:30.773" endtime="20201116 13:09:30.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.779" level="INFO">VALUE: 2876015</msg>
<status status="PASS" starttime="20201116 13:09:30.777" endtime="20201116 13:09:30.780"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:30.768" endtime="20201116 13:09:30.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.789" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:30.787" endtime="20201116 13:09:30.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:30.793" level="INFO">VALUE: [2886039, 2896028, 2906027, 2916027, 2926027, 2936027, 2946027, 2956027, 2966027, 2976027, 2986027, 2996027, 3006027, 3016027, 3026027, 3036027, 3046027, 3056027, 3066027, 3076027, 3086027, 3096027, 3106027, 3116027, 3126027, 3136027, 3146027, 3156027, 3166027, 3176027, 3186027, 3196027, 3206027, 3216027, 3226027, 3236027, 3246027, 3256027, 3266027, 3276027, 3286027, 3296027, 3306027, 3316027, 3326027, 3336027, 3346027, 3356027, 3366027, 3376027, 3386027, 3396027, 3406027, 3416027, 3426027, 3436027, 3446027, 3456027, 3466027, 3476027, 3486027, 3496027, 3506027, 3516027, 3526027, 3536027, 3546027, 3556027, 3566027, 3576027, 3586027, 3596027, 3606027, 3616027, 3626027, 3636027, 3646027, 3656027, 3666027, 3676027, 3686027, 3696027, 3706027, 3716027, 3726027, 3736027, 3746027, 3756027, 3766027, 3776027, 3786027, 3796027, 3806027, 3816027, 3826027, 3836027, 3846027, 3856027, 3866027, 3876027]</msg>
<status status="PASS" starttime="20201116 13:09:30.791" endtime="20201116 13:09:30.794"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:30.782" endtime="20201116 13:09:30.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:30.809" endtime="20201116 13:09:31.108"></status>
</kw>
<msg timestamp="20201116 13:09:31.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020849069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030874569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:30.806" endtime="20201116 13:09:31.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020849069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030874569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:31.112" endtime="20201116 13:09:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.120" endtime="20201116 13:09:31.121"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:30.801" endtime="20201116 13:09:31.122"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:30.796" endtime="20201116 13:09:31.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:31.146" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:31.123" endtime="20201116 13:09:31.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.151" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:09:31.150" endtime="20201116 13:09:31.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.153" level="INFO">VALUE: 0.020849069</msg>
<status status="PASS" starttime="20201116 13:09:31.152" endtime="20201116 13:09:31.153"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.147" endtime="20201116 13:09:31.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.158" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:31.157" endtime="20201116 13:09:31.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.160" level="INFO">VALUE: [0.030874569, 0.040863931, 0.050863861, 0.060864847, 0.070865736, 0.080866681, 0.090867556, 0.100868472, 0.110869403, 0.120870333, 0.130871236, 0.140872167, 0.150873083, 0.160874, 0.170875, 0.180875847, 0.190876792, 0.200877708, 0.210878611, 0.220879542, 0.230880472, 0.240881472, 0.250882319, 0.260883222, 0.270884167, 0.280885083, 0.290886, 0.300886958, 0.310887833, 0.320888764, 0.330889694, 0.340890625, 0.350891542, 0.360892486, 0.370893375, 0.380894306, 0.390895236, 0.400896139, 0.410897083, 0.420897986, 0.430898917, 0.440899847, 0.450900764, 0.460901681, 0.470902611, 0.480903528, 0.490904458, 0.500905389, 0.510906306, 0.520907236, 0.530908153, 0.540909083, 0.550910014, 0.560910917, 0.570911833, 0.580912806, 0.590913681, 0.600914611, 0.610915542, 0.620916472, 0.630917375, 0.640918319, 0.650919292, 0.660920153, 0.670921083, 0.680922069, 0.690922931, 0.700923847, 0.710924764, 0.720925694, 0.730926625, 0.740927542, 0.750928458, 0.760929431, 0.770930306, 0.780931236, 0.790932153, 0.800933097, 0.810934, 0.820934944, 0.830935861, 0.840936778, 0.850937694, 0.860938625, 0.870939542, 0.880940472, 0.890941389, 0.900942333, 0.91094325, 0.920944167, 0.930945083, 0.940946042, 0.950946931, 0.960947875, 0.970948778, 0.980949708, 0.990950639, 1.000951556, 1.010952472, 1.020953444] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:31.159" endtime="20201116 13:09:31.161"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.154" endtime="20201116 13:09:31.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.163" endtime="20201116 13:09:31.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:31.167" endtime="20201116 13:09:31.186"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.165" endtime="20201116 13:09:31.187"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.162" endtime="20201116 13:09:31.187"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.640" endtime="20201116 13:09:31.187"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.638" endtime="20201116 13:09:31.188"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.637" endtime="20201116 13:09:31.188"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:31.190" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.199" endtime="20201116 13:09:33.281"></status>
</kw>
<msg timestamp="20201116 13:09:33.283" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5427159, 'wakeups': [5437176, 5447176, 5457177, 5467177, 5477177, 5487...</msg>
<status status="PASS" starttime="20201116 13:09:31.197" endtime="20201116 13:09:33.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.289" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5427159, 'wakeups': [5437176, 5447176, 5457177, 5467177, 5477177, 5487...</msg>
<status status="PASS" starttime="20201116 13:09:33.285" endtime="20201116 13:09:33.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.291" endtime="20201116 13:09:33.294"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.194" endtime="20201116 13:09:33.295"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.192" endtime="20201116 13:09:33.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:33.302" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 5427159, 'wakeups': [5437176, 5447176, 5457177, 5467177, 5477177, 5487177, 5497177, 5507177, 5517177, 5527177, 5537177, 5547177, 5557177, 5567177, 5577177, 5587...</msg>
<status status="PASS" starttime="20201116 13:09:33.298" endtime="20201116 13:09:33.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.310" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:33.308" endtime="20201116 13:09:33.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.314" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:33.312" endtime="20201116 13:09:33.315"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.303" endtime="20201116 13:09:33.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.324" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:09:33.322" endtime="20201116 13:09:33.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.329" level="INFO">VALUE: 5427159</msg>
<status status="PASS" starttime="20201116 13:09:33.327" endtime="20201116 13:09:33.330"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.317" endtime="20201116 13:09:33.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.340" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:33.337" endtime="20201116 13:09:33.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.344" level="INFO">VALUE: [5437176, 5447176, 5457177, 5467177, 5477177, 5487177, 5497177, 5507177, 5517177, 5527177, 5537177, 5547177, 5557177, 5567177, 5577177, 5587177, 5597177, 5607177, 5617177, 5627177, 5637177, 5647177, 5657177, 5667177, 5677177, 5687177, 5697177, 5707177, 5717177, 5727177, 5737177, 5747177, 5757177, 5767177, 5777177, 5787177, 5797177, 5807177, 5817177, 5827177, 5837177, 5847177, 5857177, 5867177, 5877177, 5887177, 5897177, 5907177, 5917177, 5927177, 5937177, 5947177, 5957177, 5967177, 5977177, 5987177, 5997177, 6007177, 6017177, 6027177, 6037177, 6047177, 6057177, 6067177, 6077177, 6087177, 6097177, 6107177, 6117177, 6127177, 6137177, 6147177, 6157177, 6167177, 6177177, 6187177, 6197177, 6207177, 6217177, 6227177, 6237177, 6247177, 6257177, 6267177, 6277177, 6287177, 6297177, 6307177, 6317177, 6327177, 6337177, 6347177, 6357177, 6367177, 6377177, 6387177, 6397177, 6407177, 6417177, 6427177]</msg>
<status status="PASS" starttime="20201116 13:09:33.342" endtime="20201116 13:09:33.345"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.332" endtime="20201116 13:09:33.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.362" endtime="20201116 13:09:33.658"></status>
</kw>
<msg timestamp="20201116 13:09:33.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031273194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:33.359" endtime="20201116 13:09:33.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031273194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:33.662" endtime="20201116 13:09:33.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.670" endtime="20201116 13:09:33.671"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.354" endtime="20201116 13:09:33.676"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.348" endtime="20201116 13:09:33.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:33.699" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:33.677" endtime="20201116 13:09:33.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.703" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:09:33.702" endtime="20201116 13:09:33.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.705" level="INFO">VALUE: 0.021254653</msg>
<status status="PASS" starttime="20201116 13:09:33.704" endtime="20201116 13:09:33.706"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.700" endtime="20201116 13:09:33.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.711" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:33.710" endtime="20201116 13:09:33.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.713" level="INFO">VALUE: [0.031273194, 0.041273306, 0.05127525, 0.061276167, 0.071277083, 0.081278, 0.091278917, 0.101279833, 0.111280764, 0.121281681, 0.131282611, 0.141283528, 0.151284458, 0.161285389, 0.171286306, 0.181287208, 0.191288194, 0.201289056, 0.211289986, 0.221290903, 0.231291819, 0.241292764, 0.251293667, 0.261294597, 0.271295528, 0.281296458, 0.291297389, 0.301298292, 0.311299222, 0.321300125, 0.331301056, 0.341302014, 0.351302903, 0.361303889, 0.371304764, 0.381305667, 0.391306597, 0.401307514, 0.411308458, 0.421309361, 0.431310278, 0.441311208, 0.451312194, 0.461313056, 0.471313972, 0.481314917, 0.491315833, 0.50131675, 0.511317667, 0.521318597, 0.531319528, 0.541320431, 0.551321375, 0.561322278, 0.571323208, 0.581324125, 0.591325069, 0.601325972, 0.611326903, 0.621327833, 0.63132875, 0.641329667, 0.651330597, 0.661331514, 0.671332486, 0.681333361, 0.691334292, 0.701335222, 0.711336153, 0.721337056, 0.731337986, 0.741338944, 0.751339833, 0.76134075, 0.771341681, 0.781342611, 0.791343528, 0.801344444, 0.811345431, 0.821346292, 0.831347222, 0.841348139, 0.851349125, 0.86135, 0.871350903, 0.881351833, 0.891352764, 0.901353708, 0.911354625, 0.921355528, 0.931356458, 0.941357389, 0.951358292, 0.961359236, 0.971360139, 0.981361083, 0.991361986, 1.001362917, 1.011363847, 1.021364764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:33.712" endtime="20201116 13:09:33.713"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.707" endtime="20201116 13:09:33.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.716" endtime="20201116 13:09:33.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:33.720" endtime="20201116 13:09:33.740"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.718" endtime="20201116 13:09:33.740"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.715" endtime="20201116 13:09:33.741"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.191" endtime="20201116 13:09:33.741"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.189" endtime="20201116 13:09:33.741"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.188" endtime="20201116 13:09:33.741"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:33.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.752" endtime="20201116 13:09:35.834"></status>
</kw>
<msg timestamp="20201116 13:09:35.835" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 7980386, 'wakeups': [7990410, 8000411, 8010410, 8020410, 8030410, 8040...</msg>
<status status="PASS" starttime="20201116 13:09:33.751" endtime="20201116 13:09:35.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.841" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 7980386, 'wakeups': [7990410, 8000411, 8010410, 8020410, 8030410, 8040...</msg>
<status status="PASS" starttime="20201116 13:09:35.837" endtime="20201116 13:09:35.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:35.843" endtime="20201116 13:09:35.847"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.748" endtime="20201116 13:09:35.848"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.746" endtime="20201116 13:09:35.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:35.855" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 7980386, 'wakeups': [7990410, 8000411, 8010410, 8020410, 8030410, 8040410, 8050410, 8060410, 8070410, 8080410, 8090410, 8100410, 8110410, 8120410, 8130410, 8140...</msg>
<status status="PASS" starttime="20201116 13:09:35.850" endtime="20201116 13:09:35.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.863" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:35.861" endtime="20201116 13:09:35.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.867" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:35.865" endtime="20201116 13:09:35.868"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:35.856" endtime="20201116 13:09:35.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.877" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:09:35.875" endtime="20201116 13:09:35.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.881" level="INFO">VALUE: 7980386</msg>
<status status="PASS" starttime="20201116 13:09:35.880" endtime="20201116 13:09:35.882"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:35.870" endtime="20201116 13:09:35.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.891" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:35.889" endtime="20201116 13:09:35.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:35.896" level="INFO">VALUE: [7990410, 8000411, 8010410, 8020410, 8030410, 8040410, 8050410, 8060410, 8070410, 8080410, 8090410, 8100410, 8110410, 8120410, 8130410, 8140410, 8150410, 8160410, 8170410, 8180410, 8190410, 8200410, 8210410, 8220410, 8230410, 8240410, 8250410, 8260410, 8270410, 8280410, 8290410, 8300410, 8310410, 8320410, 8330410, 8340410, 8350410, 8360410, 8370410, 8380410, 8390410, 8400410, 8410410, 8420410, 8430410, 8440410, 8450410, 8460410, 8470410, 8480410, 8490410, 8500410, 8510410, 8520410, 8530410, 8540410, 8550410, 8560410, 8570410, 8580410, 8590410, 8600410, 8610410, 8620410, 8630410, 8640410, 8650410, 8660410, 8670410, 8680410, 8690410, 8700410, 8710410, 8720410, 8730410, 8740410, 8750410, 8760410, 8770410, 8780410, 8790410, 8800410, 8810410, 8820410, 8830410, 8840410, 8850410, 8860410, 8870410, 8880410, 8890410, 8900410, 8910410, 8920410, 8930410, 8940410, 8950410, 8960410, 8970410, 8980410]</msg>
<status status="PASS" starttime="20201116 13:09:35.894" endtime="20201116 13:09:35.897"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:35.884" endtime="20201116 13:09:35.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:35.911" endtime="20201116 13:09:36.202"></status>
</kw>
<msg timestamp="20201116 13:09:36.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021118611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031143792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:35.908" endtime="20201116 13:09:36.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021118611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031143792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:36.206" endtime="20201116 13:09:36.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.213" endtime="20201116 13:09:36.215"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:35.902" endtime="20201116 13:09:36.216"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:35.899" endtime="20201116 13:09:36.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:36.240" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:36.217" endtime="20201116 13:09:36.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.244" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:09:36.243" endtime="20201116 13:09:36.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.246" level="INFO">VALUE: 0.021118611</msg>
<status status="PASS" starttime="20201116 13:09:36.245" endtime="20201116 13:09:36.246"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.241" endtime="20201116 13:09:36.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.252" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:36.251" endtime="20201116 13:09:36.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.254" level="INFO">VALUE: [0.031143792, 0.041145194, 0.05114525, 0.061146167, 0.071147097, 0.081148028, 0.091148931, 0.101149861, 0.111150778, 0.121151722, 0.131152625, 0.141153542, 0.151154486, 0.161155403, 0.171156361, 0.18115725, 0.191158153, 0.201159083, 0.21116, 0.221160944, 0.231161847, 0.241162764, 0.251163708, 0.261164611, 0.271165542, 0.281166458, 0.291167389, 0.301168306, 0.311169222, 0.321170153, 0.331171069, 0.341172, 0.351172972, 0.361173847, 0.371174778, 0.381175681, 0.391176625, 0.401177528, 0.411178458, 0.421179389, 0.431180319, 0.441181236, 0.451182153, 0.461183083, 0.471183986, 0.481184917, 0.491185847, 0.501186764, 0.511187681, 0.521188611, 0.531189528, 0.541190472, 0.551191389, 0.561192389, 0.571193222, 0.581194153, 0.591195069, 0.601196, 0.611196986, 0.621197847, 0.631198764, 0.641199694, 0.651200611, 0.661201542, 0.671202458, 0.681203389, 0.691204347, 0.701205222, 0.711206153, 0.721207083, 0.731208, 0.741208931, 0.751209847, 0.761210764, 0.771211694, 0.781212611, 0.791213542, 0.801214458, 0.811215389, 0.821216319, 0.83121725, 0.841218167, 0.851219139, 0.861220056, 0.871220958, 0.881221847, 0.891222792, 0.901223694, 0.911224653, 0.921225597, 0.931226472, 0.941227403, 0.951228375, 0.961229236, 0.971230167, 0.981231083, 0.991232014, 1.001232931, 1.011233861, 1.021234778] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:36.253" endtime="20201116 13:09:36.254"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.248" endtime="20201116 13:09:36.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.257" endtime="20201116 13:09:36.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:36.260" endtime="20201116 13:09:36.280"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.259" endtime="20201116 13:09:36.280"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.255" endtime="20201116 13:09:36.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.745" endtime="20201116 13:09:36.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.742" endtime="20201116 13:09:36.281"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.742" endtime="20201116 13:09:36.281"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:36.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.292" endtime="20201116 13:09:38.386"></status>
</kw>
<msg timestamp="20201116 13:09:38.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10521024, 'wakeups': [10531056, 10541057, 10551037, 10561057, 10571037...</msg>
<status status="PASS" starttime="20201116 13:09:36.290" endtime="20201116 13:09:38.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.393" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10521024, 'wakeups': [10531056, 10541057, 10551037, 10561057, 10571037...</msg>
<status status="PASS" starttime="20201116 13:09:38.389" endtime="20201116 13:09:38.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:38.395" endtime="20201116 13:09:38.398"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.288" endtime="20201116 13:09:38.399"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.286" endtime="20201116 13:09:38.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:38.406" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 10521024, 'wakeups': [10531056, 10541057, 10551037, 10561057, 10571037, 10581057, 10591037, 10601057, 10611037, 10621057, 10631037, 10641057, 10651037, 10661057...</msg>
<status status="PASS" starttime="20201116 13:09:38.402" endtime="20201116 13:09:38.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.414" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:38.412" endtime="20201116 13:09:38.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.418" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:38.416" endtime="20201116 13:09:38.419"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.407" endtime="20201116 13:09:38.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.428" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:09:38.426" endtime="20201116 13:09:38.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.433" level="INFO">VALUE: 10521024</msg>
<status status="PASS" starttime="20201116 13:09:38.431" endtime="20201116 13:09:38.434"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.421" endtime="20201116 13:09:38.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.444" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:38.442" endtime="20201116 13:09:38.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.449" level="INFO">VALUE: [10531056, 10541057, 10551037, 10561057, 10571037, 10581057, 10591037, 10601057, 10611037, 10621057, 10631037, 10641057, 10651037, 10661057, 10671037, 10681057, 10691037, 10701057, 10711037, 10721057, 10731037, 10741057, 10751037, 10761057, 10771037, 10781057, 10791037, 10801057, 10811037, 10821057, 10831037, 10841057, 10851037, 10861057, 10871037, 10881057, 10891037, 10901057, 10911037, 10921057, 10931037, 10941057, 10951037, 10961057, 10971037, 10981057, 10991037, 11001057, 11011037, 11021057, 11031037, 11041057, 11051037, 11061057, 11071037, 11081057, 11091037, 11101057, 11111037, 11121057, 11131037, 11141057, 11151037, 11161057, 11171037, 11181057, 11191037, 11201057, 11211037, 11221057, 11231037, 11241057, 11251037, 11261057, 11271037, 11281057, 11291037, 11301057, 11311037, 11321057, 11331037, 11341057, 11351037, 11361057, 11371037, 11381057, 11391037, 11401057, 11411037, 11421057, 11431037, 11441057, 11451037, 11461057, 11471037, 11481057, 11491037, 11501057, 11511037, 11521057]</msg>
<status status="PASS" starttime="20201116 13:09:38.446" endtime="20201116 13:09:38.450"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.436" endtime="20201116 13:09:38.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:38.465" endtime="20201116 13:09:38.757"></status>
</kw>
<msg timestamp="20201116 13:09:38.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031762486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:38.461" endtime="20201116 13:09:38.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031762486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:38.760" endtime="20201116 13:09:38.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:38.768" endtime="20201116 13:09:38.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.456" endtime="20201116 13:09:38.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.452" endtime="20201116 13:09:38.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:38.794" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:38.771" endtime="20201116 13:09:38.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.799" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:09:38.798" endtime="20201116 13:09:38.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.801" level="INFO">VALUE: 0.021729833</msg>
<status status="PASS" starttime="20201116 13:09:38.800" endtime="20201116 13:09:38.801"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.795" endtime="20201116 13:09:38.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.806" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:38.805" endtime="20201116 13:09:38.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.808" level="INFO">VALUE: [0.031762486, 0.041764028, 0.051745667, 0.061765819, 0.071747514, 0.081767681, 0.091749347, 0.1017695, 0.111751194, 0.121771347, 0.131753028, 0.141773194, 0.151754875, 0.161775042, 0.171756736, 0.181776889, 0.191758583, 0.201778736, 0.211760417, 0.221780583, 0.231762264, 0.241782417, 0.251764097, 0.261784264, 0.271766, 0.281786125, 0.291767792, 0.301787958, 0.311769639, 0.321789819, 0.331771486, 0.341791653, 0.351773333, 0.3617935, 0.371775194, 0.381795347, 0.391777042, 0.401797194, 0.411778875, 0.421799042, 0.431780722, 0.441800875, 0.451782583, 0.461802736, 0.471784431, 0.481804569, 0.491786292, 0.501806431, 0.511788111, 0.521808264, 0.531789972, 0.541810111, 0.551791806, 0.561811972, 0.571793653, 0.581813861, 0.5917955, 0.601815681, 0.611797361, 0.621817514, 0.631799208, 0.641819375, 0.651801042, 0.661821236, 0.671802889, 0.681823056, 0.691804764, 0.701824903, 0.711806583, 0.72182675, 0.731808444, 0.741828611, 0.751810292, 0.761830458, 0.771812125, 0.781832333, 0.791813986, 0.801834153, 0.811815819, 0.821835986, 0.831817681, 0.841837833, 0.851819528, 0.861839694, 0.871821361, 0.881841528, 0.891823236, 0.901843444, 0.911825056, 0.921845236, 0.931826903, 0.941847069, 0.95182875, 0.961848917, 0.971830597, 0.981850764, 0.991832444, 1.001852611, 1.011834292, 1.021854472] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:38.807" endtime="20201116 13:09:38.812"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.802" endtime="20201116 13:09:38.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:38.815" endtime="20201116 13:09:38.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:38.819" endtime="20201116 13:09:38.838"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.817" endtime="20201116 13:09:38.839"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.813" endtime="20201116 13:09:38.839"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.285" endtime="20201116 13:09:38.839"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.282" endtime="20201116 13:09:38.839"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.282" endtime="20201116 13:09:38.840"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:38.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:38.850" endtime="20201116 13:09:40.944"></status>
</kw>
<msg timestamp="20201116 13:09:40.945" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13078586, 'wakeups': [13088626, 13098627, 13108621, 13118621, 13128621...</msg>
<status status="PASS" starttime="20201116 13:09:38.849" endtime="20201116 13:09:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:40.951" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13078586, 'wakeups': [13088626, 13098627, 13108621, 13118621, 13128621...</msg>
<status status="PASS" starttime="20201116 13:09:40.947" endtime="20201116 13:09:40.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:40.953" endtime="20201116 13:09:40.956"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.846" endtime="20201116 13:09:40.957"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.844" endtime="20201116 13:09:40.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:40.964" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 13078586, 'wakeups': [13088626, 13098627, 13108621, 13118621, 13128621, 13138621, 13148621, 13158621, 13168621, 13178621, 13188621, 13198621, 13208621, 13218621...</msg>
<status status="PASS" starttime="20201116 13:09:40.960" endtime="20201116 13:09:40.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:40.972" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:40.970" endtime="20201116 13:09:40.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:40.976" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:40.974" endtime="20201116 13:09:40.977"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:40.966" endtime="20201116 13:09:40.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:40.989" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:09:40.984" endtime="20201116 13:09:40.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:40.993" level="INFO">VALUE: 13078586</msg>
<status status="PASS" starttime="20201116 13:09:40.991" endtime="20201116 13:09:40.994"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:40.979" endtime="20201116 13:09:40.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.003" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:41.001" endtime="20201116 13:09:41.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.007" level="INFO">VALUE: [13088626, 13098627, 13108621, 13118621, 13128621, 13138621, 13148621, 13158621, 13168621, 13178621, 13188621, 13198621, 13208621, 13218621, 13228621, 13238621, 13248621, 13258621, 13268621, 13278621, 13288621, 13298621, 13308621, 13318621, 13328621, 13338621, 13348621, 13358621, 13368621, 13378621, 13388621, 13398621, 13408621, 13418621, 13428621, 13438621, 13448621, 13458621, 13468621, 13478621, 13488621, 13498621, 13508621, 13518621, 13528621, 13538621, 13548621, 13558621, 13568621, 13578621, 13588621, 13598621, 13608621, 13618621, 13628621, 13638621, 13648621, 13658621, 13668621, 13678621, 13688621, 13698621, 13708621, 13718621, 13728621, 13738621, 13748621, 13758621, 13768621, 13778621, 13788621, 13798621, 13808621, 13818621, 13828621, 13838621, 13848621, 13858621, 13868621, 13878621, 13888621, 13898621, 13908621, 13918621, 13928621, 13938621, 13948621, 13958621, 13968621, 13978621, 13988621, 13998621, 14008621, 14018621, 14028621, 14038621, 14048621, 14058621, 14068621, 14078621]</msg>
<status status="PASS" starttime="20201116 13:09:41.005" endtime="20201116 13:09:41.009"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:40.996" endtime="20201116 13:09:41.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.018" endtime="20201116 13:09:41.309"></status>
</kw>
<msg timestamp="20201116 13:09:41.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030964486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:41.016" endtime="20201116 13:09:41.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030964486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:41.313" endtime="20201116 13:09:41.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.320" endtime="20201116 13:09:41.322"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.014" endtime="20201116 13:09:41.323"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.011" endtime="20201116 13:09:41.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:41.347" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:41.324" endtime="20201116 13:09:41.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.351" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:09:41.350" endtime="20201116 13:09:41.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.353" level="INFO">VALUE: 0.020922847</msg>
<status status="PASS" starttime="20201116 13:09:41.352" endtime="20201116 13:09:41.353"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.348" endtime="20201116 13:09:41.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.358" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:41.357" endtime="20201116 13:09:41.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.361" level="INFO">VALUE: [0.030964486, 0.040965833, 0.050961042, 0.060961986, 0.070962889, 0.080963806, 0.090964736, 0.100965653, 0.110966625, 0.120967486, 0.130968431, 0.140969333, 0.150970264, 0.160971181, 0.170972111, 0.180973028, 0.190973958, 0.200974861, 0.210975792, 0.220976708, 0.230977708, 0.240978542, 0.250979486, 0.260980403, 0.270981319, 0.280982236, 0.290983167, 0.300984083, 0.310985028, 0.320985931, 0.330986861, 0.340987778, 0.350988708, 0.360989611, 0.370990556, 0.380991472, 0.390992403, 0.400993319, 0.410994236, 0.420995153, 0.430996083, 0.440997, 0.450997944, 0.460998847, 0.470999778, 0.48100075, 0.491001625, 0.501002542, 0.511003472, 0.521004389, 0.531005347, 0.541006222, 0.551007167, 0.561008069, 0.571009028, 0.581009917, 0.591010861, 0.601011764, 0.611012722, 0.621013625, 0.631014556, 0.6410155, 0.651016444, 0.661017306, 0.67101825, 0.681019167, 0.691020083, 0.701021, 0.711021931, 0.721022861, 0.731023778, 0.741024708, 0.751025625, 0.761026542, 0.771027472, 0.781028389, 0.791029347, 0.801030264, 0.811031181, 0.821032083, 0.831033014, 0.841033931, 0.851034861, 0.861035778, 0.871036722, 0.881037625, 0.891038569, 0.901039472, 0.911040403, 0.921041306, 0.931042333, 0.941043153, 0.951044097, 0.961045014, 0.971045944, 0.981046847, 0.991047861, 1.001048708, 1.011049639, 1.021050542] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:41.360" endtime="20201116 13:09:41.362"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.355" endtime="20201116 13:09:41.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.364" endtime="20201116 13:09:41.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:41.368" endtime="20201116 13:09:41.387"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.366" endtime="20201116 13:09:41.388"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.363" endtime="20201116 13:09:41.388"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.843" endtime="20201116 13:09:41.388"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.841" endtime="20201116 13:09:41.389"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.840" endtime="20201116 13:09:41.389"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:41.391" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.400" endtime="20201116 13:09:43.493"></status>
</kw>
<msg timestamp="20201116 13:09:43.494" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15628165, 'wakeups': [15638216, 15648216, 15658216, 15668216, 15678216...</msg>
<status status="PASS" starttime="20201116 13:09:41.398" endtime="20201116 13:09:43.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.500" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15628165, 'wakeups': [15638216, 15648216, 15658216, 15668216, 15678216...</msg>
<status status="PASS" starttime="20201116 13:09:43.497" endtime="20201116 13:09:43.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:43.502" endtime="20201116 13:09:43.506"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.395" endtime="20201116 13:09:43.507"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.393" endtime="20201116 13:09:43.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:43.513" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 15628165, 'wakeups': [15638216, 15648216, 15658216, 15668216, 15678216, 15688216, 15698216, 15708216, 15718216, 15728216, 15738216, 15748216, 15758216, 15768216...</msg>
<status status="PASS" starttime="20201116 13:09:43.509" endtime="20201116 13:09:43.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.521" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:43.519" endtime="20201116 13:09:43.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.526" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:43.524" endtime="20201116 13:09:43.526"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.515" endtime="20201116 13:09:43.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.536" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:09:43.534" endtime="20201116 13:09:43.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.540" level="INFO">VALUE: 15628165</msg>
<status status="PASS" starttime="20201116 13:09:43.538" endtime="20201116 13:09:43.541"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.529" endtime="20201116 13:09:43.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.550" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:43.548" endtime="20201116 13:09:43.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.555" level="INFO">VALUE: [15638216, 15648216, 15658216, 15668216, 15678216, 15688216, 15698216, 15708216, 15718216, 15728216, 15738216, 15748216, 15758216, 15768216, 15778216, 15788216, 15798216, 15808216, 15818216, 15828216, 15838216, 15848216, 15858216, 15868216, 15878216, 15888216, 15898216, 15908216, 15918216, 15928216, 15938216, 15948216, 15958216, 15968216, 15978216, 15988216, 15998216, 16008216, 16018216, 16028216, 16038216, 16048216, 16058216, 16068216, 16078216, 16088216, 16098216, 16108216, 16118216, 16128216, 16138216, 16148216, 16158216, 16168216, 16178216, 16188216, 16198216, 16208216, 16218216, 16228216, 16238216, 16248216, 16258216, 16268216, 16278216, 16288216, 16298216, 16308216, 16318216, 16328216, 16338216, 16348216, 16358216, 16368216, 16378216, 16388216, 16398216, 16408216, 16418216, 16428216, 16438216, 16448216, 16458216, 16468216, 16478216, 16488216, 16498216, 16508216, 16518216, 16528216, 16538216, 16548216, 16558216, 16568216, 16578216, 16588216, 16598216, 16608216, 16618216, 16628216]</msg>
<status status="PASS" starttime="20201116 13:09:43.552" endtime="20201116 13:09:43.556"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.543" endtime="20201116 13:09:43.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:43.570" endtime="20201116 13:09:43.862"></status>
</kw>
<msg timestamp="20201116 13:09:43.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02147325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031525222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:09:43.567" endtime="20201116 13:09:43.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02147325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031525222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:09:43.866" endtime="20201116 13:09:43.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:43.879" endtime="20201116 13:09:43.880"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.562" endtime="20201116 13:09:43.881"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.558" endtime="20201116 13:09:43.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:43.904" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:43.882" endtime="20201116 13:09:43.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.909" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:09:43.908" endtime="20201116 13:09:43.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.910" level="INFO">VALUE: 0.02147325</msg>
<status status="PASS" starttime="20201116 13:09:43.910" endtime="20201116 13:09:43.911"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.905" endtime="20201116 13:09:43.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.916" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:43.915" endtime="20201116 13:09:43.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:43.918" level="INFO">VALUE: [0.031525222, 0.041526139, 0.051527042, 0.061527972, 0.071528889, 0.081529833, 0.091530736, 0.101531653, 0.111532597, 0.1215335, 0.131534444, 0.141535361, 0.151536264, 0.16153725, 0.171538111, 0.181539056, 0.191539972, 0.201540917, 0.211541833, 0.221542764, 0.231543667, 0.241544569, 0.251545514, 0.261546417, 0.271547361, 0.281548278, 0.291549264, 0.301550111, 0.311551042, 0.321551958, 0.331552944, 0.341553806, 0.351554764, 0.361555653, 0.371556611, 0.3815575, 0.391558472, 0.401559347, 0.411560264, 0.421561208, 0.431562125, 0.441563042, 0.451563972, 0.461564931, 0.471565847, 0.481566792, 0.491567653, 0.501568583, 0.5115695, 0.521570444, 0.531571347, 0.541572278, 0.551573194, 0.561574139, 0.571575056, 0.581575972, 0.591576889, 0.601577819, 0.611578736, 0.621579667, 0.631580653, 0.641581514, 0.651582486, 0.661583361, 0.671584292, 0.681585208, 0.691586125, 0.701587069, 0.711588, 0.721588903, 0.731589875, 0.74159075, 0.751591694, 0.761592597, 0.771593542, 0.781594458, 0.791595375, 0.801596292, 0.811597222, 0.821598139, 0.831599069, 0.8416, 0.851600917, 0.861601833, 0.871602764, 0.881603681, 0.891604639, 0.901605528, 0.911606458, 0.921607403, 0.931608319, 0.941609236, 0.951610167, 0.961611083, 0.971612, 0.981613, 0.991613847, 1.001614778, 1.011615694, 1.021616694] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:43.917" endtime="20201116 13:09:43.918"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.912" endtime="20201116 13:09:43.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:43.921" endtime="20201116 13:09:43.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:43.924" endtime="20201116 13:09:43.943"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.923" endtime="20201116 13:09:43.944"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.919" endtime="20201116 13:09:43.944"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.392" endtime="20201116 13:09:43.945"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.390" endtime="20201116 13:09:43.945"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.389" endtime="20201116 13:09:43.945"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:43.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:43.957" endtime="20201116 13:09:46.050"></status>
</kw>
<msg timestamp="20201116 13:09:46.051" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18185044, 'wakeups': [18195104, 18205106, 18215106, 18225106, 18235106...</msg>
<status status="PASS" starttime="20201116 13:09:43.955" endtime="20201116 13:09:46.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.057" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18185044, 'wakeups': [18195104, 18205106, 18215106, 18225106, 18235106...</msg>
<status status="PASS" starttime="20201116 13:09:46.053" endtime="20201116 13:09:46.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.059" endtime="20201116 13:09:46.062"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.952" endtime="20201116 13:09:46.063"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.950" endtime="20201116 13:09:46.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:46.071" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 18185044, 'wakeups': [18195104, 18205106, 18215106, 18225106, 18235106, 18245106, 18255106, 18265106, 18275106, 18285106, 18295106, 18305106, 18315106, 18325106...</msg>
<status status="PASS" starttime="20201116 13:09:46.067" endtime="20201116 13:09:46.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.079" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:46.077" endtime="20201116 13:09:46.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.083" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:46.081" endtime="20201116 13:09:46.084"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.072" endtime="20201116 13:09:46.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.093" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:09:46.091" endtime="20201116 13:09:46.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.097" level="INFO">VALUE: 18185044</msg>
<status status="PASS" starttime="20201116 13:09:46.095" endtime="20201116 13:09:46.098"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.086" endtime="20201116 13:09:46.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.107" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:46.105" endtime="20201116 13:09:46.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.112" level="INFO">VALUE: [18195104, 18205106, 18215106, 18225106, 18235106, 18245106, 18255106, 18265106, 18275106, 18285106, 18295106, 18305106, 18315106, 18325106, 18335106, 18345106, 18355106, 18365106, 18375106, 18385106, 18395106, 18405106, 18415106, 18425106, 18435106, 18445106, 18455106, 18465106, 18475106, 18485106, 18495106, 18505106, 18515106, 18525106, 18535106, 18545106, 18555106, 18565106, 18575106, 18585106, 18595106, 18605106, 18615106, 18625106, 18635106, 18645106, 18655106, 18665106, 18675106, 18685106, 18695106, 18705106, 18715106, 18725106, 18735106, 18745106, 18755106, 18765106, 18775106, 18785106, 18795106, 18805106, 18815106, 18825106, 18835106, 18845106, 18855106, 18865106, 18875106, 18885106, 18895106, 18905106, 18915106, 18925106, 18935106, 18945106, 18955106, 18965106, 18975106, 18985106, 18995106, 19005106, 19015106, 19025106, 19035106, 19045106, 19055106, 19065106, 19075106, 19085106, 19095106, 19105106, 19115106, 19125106, 19135106, 19145106, 19155106, 19165106, 19175106, 19185106]</msg>
<status status="PASS" starttime="20201116 13:09:46.110" endtime="20201116 13:09:46.113"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.100" endtime="20201116 13:09:46.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.121" endtime="20201116 13:09:46.411"></status>
</kw>
<msg timestamp="20201116 13:09:46.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031906292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:46.119" endtime="20201116 13:09:46.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031906292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:46.415" endtime="20201116 13:09:46.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.423" endtime="20201116 13:09:46.424"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.117" endtime="20201116 13:09:46.425"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.115" endtime="20201116 13:09:46.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:46.450" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:46.426" endtime="20201116 13:09:46.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.454" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:09:46.453" endtime="20201116 13:09:46.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.456" level="INFO">VALUE: 0.021845167</msg>
<status status="PASS" starttime="20201116 13:09:46.455" endtime="20201116 13:09:46.457"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.450" endtime="20201116 13:09:46.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.462" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:46.461" endtime="20201116 13:09:46.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.464" level="INFO">VALUE: [0.031906292, 0.041909375, 0.051910306, 0.061911222, 0.071912139, 0.081913069, 0.091913972, 0.101914903, 0.111915819, 0.12191675, 0.131917667, 0.141918625, 0.151919514, 0.161920431, 0.171921347, 0.181922306, 0.191923194, 0.201924153, 0.211925042, 0.221925986, 0.231926889, 0.241927806, 0.251928806, 0.261929653, 0.271930583, 0.281931514, 0.291932417, 0.301933361, 0.311934264, 0.321935194, 0.331936111, 0.341937028, 0.351937958, 0.361938875, 0.371939806, 0.381940792, 0.391941667, 0.401942569, 0.4119435, 0.421944417, 0.431945333, 0.441946306, 0.451947181, 0.461948111, 0.471949028, 0.481949958, 0.491950889, 0.501951819, 0.511952722, 0.521953681, 0.531954569, 0.541955514, 0.551956417, 0.561957417, 0.571958264, 0.581959222, 0.591960167, 0.601961042, 0.611961958, 0.621962889, 0.631963806, 0.641964736, 0.651965667, 0.661966583, 0.671967569, 0.681968431, 0.691969347, 0.701970278, 0.711971194, 0.721972125, 0.731973056, 0.741973986, 0.751974889, 0.761975833, 0.77197675, 0.781977667, 0.791978583, 0.801979556, 0.811980431, 0.821981375, 0.831982292, 0.841983208, 0.851984139, 0.861985056, 0.871985972, 0.881986903, 0.891987875, 0.90198875, 0.911989681, 0.921990625, 0.931991514, 0.941992444, 0.951993361, 0.961994333, 0.971995222, 0.981996153, 0.991997056, 1.001997986, 1.011998903, 1.021999889] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:46.463" endtime="20201116 13:09:46.464"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.458" endtime="20201116 13:09:46.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.467" endtime="20201116 13:09:46.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:46.470" endtime="20201116 13:09:46.489"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.469" endtime="20201116 13:09:46.490"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.465" endtime="20201116 13:09:46.490"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.949" endtime="20201116 13:09:46.491"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.946" endtime="20201116 13:09:46.491"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:43.946" endtime="20201116 13:09:46.491"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:46.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.502" endtime="20201116 13:09:48.595"></status>
</kw>
<msg timestamp="20201116 13:09:48.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20730062, 'wakeups': [20740134, 20750135, 20760128, 20770128, 20780128...</msg>
<status status="PASS" starttime="20201116 13:09:46.500" endtime="20201116 13:09:48.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.602" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20730062, 'wakeups': [20740134, 20750135, 20760128, 20770128, 20780128...</msg>
<status status="PASS" starttime="20201116 13:09:48.599" endtime="20201116 13:09:48.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:48.604" endtime="20201116 13:09:48.608"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.498" endtime="20201116 13:09:48.609"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.496" endtime="20201116 13:09:48.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:48.615" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 20730062, 'wakeups': [20740134, 20750135, 20760128, 20770128, 20780128, 20790128, 20800128, 20810128, 20820128, 20830128, 20840128, 20850128, 20860128, 20870128...</msg>
<status status="PASS" starttime="20201116 13:09:48.611" endtime="20201116 13:09:48.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.626" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:48.621" endtime="20201116 13:09:48.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.630" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:48.628" endtime="20201116 13:09:48.631"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:48.617" endtime="20201116 13:09:48.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.641" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:09:48.638" endtime="20201116 13:09:48.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.645" level="INFO">VALUE: 20730062</msg>
<status status="PASS" starttime="20201116 13:09:48.643" endtime="20201116 13:09:48.646"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:48.633" endtime="20201116 13:09:48.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.655" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:48.653" endtime="20201116 13:09:48.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.660" level="INFO">VALUE: [20740134, 20750135, 20760128, 20770128, 20780128, 20790128, 20800128, 20810128, 20820128, 20830128, 20840128, 20850128, 20860128, 20870128, 20880128, 20890128, 20900128, 20910128, 20920128, 20930128, 20940128, 20950128, 20960128, 20970128, 20980128, 20990128, 21000128, 21010128, 21020128, 21030128, 21040128, 21050128, 21060128, 21070128, 21080128, 21090128, 21100128, 21110128, 21120128, 21130128, 21140128, 21150128, 21160128, 21170128, 21180128, 21190128, 21200128, 21210128, 21220128, 21230128, 21240128, 21250128, 21260128, 21270128, 21280128, 21290128, 21300128, 21310128, 21320128, 21330128, 21340128, 21350128, 21360128, 21370128, 21380128, 21390128, 21400128, 21410128, 21420128, 21430128, 21440128, 21450128, 21460128, 21470128, 21480128, 21490128, 21500128, 21510128, 21520128, 21530128, 21540128, 21550128, 21560128, 21570128, 21580128, 21590128, 21600128, 21610128, 21620128, 21630128, 21640128, 21650128, 21660128, 21670128, 21680128, 21690128, 21700128, 21710128, 21720128, 21730128]</msg>
<status status="PASS" starttime="20201116 13:09:48.657" endtime="20201116 13:09:48.661"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:48.648" endtime="20201116 13:09:48.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:48.672" endtime="20201116 13:09:48.962"></status>
</kw>
<msg timestamp="20201116 13:09:48.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020915653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030989153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:48.670" endtime="20201116 13:09:48.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:48.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020915653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030989153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:48.966" endtime="20201116 13:09:48.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:48.973" endtime="20201116 13:09:48.975"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:48.667" endtime="20201116 13:09:48.975"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:48.663" endtime="20201116 13:09:48.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:48.999" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:48.977" endtime="20201116 13:09:48.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:49.004" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:09:49.003" endtime="20201116 13:09:49.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:49.006" level="INFO">VALUE: 0.020915653</msg>
<status status="PASS" starttime="20201116 13:09:49.005" endtime="20201116 13:09:49.007"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.000" endtime="20201116 13:09:49.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:49.011" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:49.010" endtime="20201116 13:09:49.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:49.013" level="INFO">VALUE: [0.030989153, 0.040990528, 0.050984569, 0.060985486, 0.070986403, 0.080987319, 0.09098825, 0.100989167, 0.110990083, 0.120991028, 0.130991944, 0.140992875, 0.150993861, 0.160994708, 0.170995639, 0.180996542, 0.190997458, 0.200998403, 0.210999319, 0.221000236, 0.231001167, 0.241002083, 0.251003, 0.261003958, 0.271004847, 0.281005764, 0.291006694, 0.301007611, 0.311008542, 0.321009458, 0.331010375, 0.341011319, 0.351012236, 0.361013153, 0.371014139, 0.381015, 0.391015917, 0.401016847, 0.411017764, 0.421018708, 0.431019625, 0.441020542, 0.451021472, 0.461022403, 0.471023319, 0.481024222, 0.491025181, 0.501026083, 0.511027, 0.521027917, 0.531028861, 0.541029819, 0.551030694, 0.561031653, 0.571032556, 0.581033472, 0.591034403, 0.601035319, 0.61103625, 0.621037153, 0.631038083, 0.641039, 0.65104, 0.661040847, 0.671041792, 0.681042694, 0.691043625, 0.701044542, 0.711045472, 0.721046389, 0.731047319, 0.741048236, 0.751049181, 0.761050097, 0.771051028, 0.781051931, 0.791052903, 0.801053792, 0.811054722, 0.821055625, 0.831056556, 0.841057486, 0.851058403, 0.861059319, 0.871060264, 0.881061167, 0.891062097, 0.901063014, 0.911063958, 0.921064875, 0.931065819, 0.941066708, 0.951067639, 0.961068556, 0.971069472, 0.981070403, 0.991071333, 1.00107225, 1.011073194, 1.021074097] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:49.012" endtime="20201116 13:09:49.020"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.008" endtime="20201116 13:09:49.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:49.023" endtime="20201116 13:09:49.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:49.026" endtime="20201116 13:09:49.046"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.025" endtime="20201116 13:09:49.046"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.021" endtime="20201116 13:09:49.047"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.495" endtime="20201116 13:09:49.047"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.492" endtime="20201116 13:09:49.047"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.492" endtime="20201116 13:09:49.047"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:49.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:49.058" endtime="20201116 13:09:51.151"></status>
</kw>
<msg timestamp="20201116 13:09:51.152" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23286372, 'wakeups': [23296455, 23306432, 23316447, 23326455, 233364...</msg>
<status status="PASS" starttime="20201116 13:09:49.056" endtime="20201116 13:09:51.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23286372, 'wakeups': [23296455, 23306432, 23316447, 23326455, 233364...</msg>
<status status="PASS" starttime="20201116 13:09:51.154" endtime="20201116 13:09:51.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:51.160" endtime="20201116 13:09:51.163"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.054" endtime="20201116 13:09:51.164"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.052" endtime="20201116 13:09:51.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:51.171" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 23286372, 'wakeups': [23296455, 23306432, 23316447, 23326455, 23336454, 23346454, 23356454, 23366454, 23376454, 23386454, 23396454, 23406454, 23416454, 23426454...</msg>
<status status="PASS" starttime="20201116 13:09:51.167" endtime="20201116 13:09:51.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.179" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:51.177" endtime="20201116 13:09:51.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.183" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:51.181" endtime="20201116 13:09:51.184"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.172" endtime="20201116 13:09:51.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.193" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:09:51.191" endtime="20201116 13:09:51.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.198" level="INFO">VALUE: 23286372</msg>
<status status="PASS" starttime="20201116 13:09:51.196" endtime="20201116 13:09:51.198"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.186" endtime="20201116 13:09:51.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.208" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:51.206" endtime="20201116 13:09:51.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.212" level="INFO">VALUE: [23296455, 23306432, 23316447, 23326455, 23336454, 23346454, 23356454, 23366454, 23376454, 23386454, 23396454, 23406454, 23416454, 23426454, 23436454, 23446454, 23456454, 23466454, 23476454, 23486454, 23496454, 23506454, 23516454, 23526454, 23536454, 23546454, 23556454, 23566454, 23576454, 23586454, 23596454, 23606454, 23616454, 23626454, 23636454, 23646454, 23656454, 23666454, 23676454, 23686454, 23696454, 23706454, 23716454, 23726454, 23736454, 23746454, 23756454, 23766454, 23776454, 23786454, 23796454, 23806454, 23816454, 23826454, 23836454, 23846454, 23856454, 23866454, 23876454, 23886454, 23896454, 23906454, 23916454, 23926454, 23936454, 23946454, 23956454, 23966454, 23976454, 23986454, 23996454, 24006454, 24016454, 24026454, 24036454, 24046454, 24056454, 24066454, 24076454, 24086454, 24096454, 24106454, 24116454, 24126454, 24136454, 24146454, 24156454, 24166454, 24176454, 24186454, 24196454, 24206454, 24216454, 24226454, 24236454, 24246454, 24256454, 24266454, 24276454, 24286454]</msg>
<status status="PASS" starttime="20201116 13:09:51.210" endtime="20201116 13:09:51.214"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.201" endtime="20201116 13:09:51.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:51.230" endtime="20201116 13:09:51.522"></status>
</kw>
<msg timestamp="20201116 13:09:51.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020963528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031047472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:51.227" endtime="20201116 13:09:51.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020963528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031047472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:51.526" endtime="20201116 13:09:51.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:51.533" endtime="20201116 13:09:51.535"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.221" endtime="20201116 13:09:51.535"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.216" endtime="20201116 13:09:51.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:51.559" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:51.536" endtime="20201116 13:09:51.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.563" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:09:51.562" endtime="20201116 13:09:51.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.566" level="INFO">VALUE: 0.020963528</msg>
<status status="PASS" starttime="20201116 13:09:51.565" endtime="20201116 13:09:51.566"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.560" endtime="20201116 13:09:51.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.571" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:51.570" endtime="20201116 13:09:51.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:51.573" level="INFO">VALUE: [0.031047472, 0.041025986, 0.051041528, 0.061051028, 0.071050972, 0.081051889, 0.091052819, 0.10105375, 0.111054667, 0.121055597, 0.131056514, 0.141057444, 0.151058347, 0.161059333, 0.171060194, 0.181061125, 0.191062042, 0.201063, 0.211063903, 0.221064806, 0.231065736, 0.241066667, 0.251067569, 0.2610685, 0.271069417, 0.281070347, 0.291071264, 0.301072194, 0.311073125, 0.321074042, 0.331074958, 0.341075917, 0.351076806, 0.361077736, 0.371078653, 0.381079597, 0.391080514, 0.401081431, 0.411082403, 0.421083278, 0.431084194, 0.441085125, 0.451086042, 0.461086972, 0.471087889, 0.481088819, 0.491089736, 0.501090722, 0.511091583, 0.521092514, 0.531093431, 0.541094361, 0.551095292, 0.561096236, 0.571097125, 0.581098069, 0.591099, 0.601099917, 0.611100819, 0.621101819, 0.631102681, 0.641103611, 0.651104556, 0.661105444, 0.671106361, 0.681107292, 0.691108222, 0.701109167, 0.711110069, 0.721111, 0.731111917, 0.741112833, 0.751113764, 0.761114694, 0.771115625, 0.781116542, 0.791117472, 0.801118389, 0.811119319, 0.821120236, 0.831121167, 0.841122069, 0.851123, 0.861123931, 0.871124861, 0.881125778, 0.891126694, 0.901127625, 0.911128542, 0.921129472, 0.931130403, 0.941131319, 0.951132236, 0.961133236, 0.971134083, 0.981135014, 0.991135931, 1.001136861, 1.011137792, 1.021138764] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:51.572" endtime="20201116 13:09:51.573"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.567" endtime="20201116 13:09:51.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:51.576" endtime="20201116 13:09:51.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:51.579" endtime="20201116 13:09:51.599"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.578" endtime="20201116 13:09:51.600"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:51.574" endtime="20201116 13:09:51.600"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.051" endtime="20201116 13:09:51.601"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.049" endtime="20201116 13:09:51.601"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:49.048" endtime="20201116 13:09:51.601"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.088" endtime="20201116 13:09:51.601"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:26.013" endtime="20201116 13:09:51.602" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:24.614" endtime="20201116 13:09:51.605"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:09:22.714" endtime="20201116 13:09:51.617"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
