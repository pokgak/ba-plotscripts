<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:09:52.279" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:52.841" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:52.849" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:53.949" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:52.839" endtime="20201116 13:09:53.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:53.952" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:53.951" endtime="20201116 13:09:53.953"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:52.838" endtime="20201116 13:09:53.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:53.956" endtime="20201116 13:09:54.140"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:53.954" endtime="20201116 13:09:54.141"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.153" endtime="20201116 13:09:54.169"></status>
</kw>
<msg timestamp="20201116 13:09:54.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201116 13:09:54.152" endtime="20201116 13:09:54.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201116 13:09:54.170" endtime="20201116 13:09:54.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.175" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:54.173" endtime="20201116 13:09:54.175"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.149" endtime="20201116 13:09:54.176"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.147" endtime="20201116 13:09:54.177"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.146" endtime="20201116 13:09:54.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:54.181" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:54.180" endtime="20201116 13:09:54.181"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.178" endtime="20201116 13:09:54.181"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.145" endtime="20201116 13:09:54.182"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.144" endtime="20201116 13:09:54.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.183" endtime="20201116 13:09:54.184"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.143" endtime="20201116 13:09:54.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.185" endtime="20201116 13:09:54.187"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.141" endtime="20201116 13:09:54.187"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:52.836" endtime="20201116 13:09:54.188"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:54.194" endtime="20201116 13:09:54.214"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.192" endtime="20201116 13:09:54.214"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.229" endtime="20201116 13:09:54.243"></status>
</kw>
<msg timestamp="20201116 13:09:54.243" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.226" endtime="20201116 13:09:54.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.244" endtime="20201116 13:09:54.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.249" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:54.247" endtime="20201116 13:09:54.249"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.224" endtime="20201116 13:09:54.250"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:54.221" endtime="20201116 13:09:54.250"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.219" endtime="20201116 13:09:54.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:54.254" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:54.254" endtime="20201116 13:09:54.255"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.252" endtime="20201116 13:09:54.255"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.219" endtime="20201116 13:09:54.255"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.218" endtime="20201116 13:09:54.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.256" endtime="20201116 13:09:54.258"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.217" endtime="20201116 13:09:54.258"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.215" endtime="20201116 13:09:54.259"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.191" endtime="20201116 13:09:54.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.266" endtime="20201116 13:09:54.277"></status>
</kw>
<msg timestamp="20201116 13:09:54.277" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.265" endtime="20201116 13:09:54.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.280" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:54.278" endtime="20201116 13:09:54.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:54.281" endtime="20201116 13:09:54.282"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.262" endtime="20201116 13:09:54.283"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.260" endtime="20201116 13:09:54.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.288" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:09:54.287" endtime="20201116 13:09:54.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.290" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201116 13:09:54.289" endtime="20201116 13:09:54.290"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.284" endtime="20201116 13:09:54.291"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:54.188" endtime="20201116 13:09:54.291" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:52.390" endtime="20201116 13:09:54.294"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:54.346" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:54.355" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:55.567" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:54.345" endtime="20201116 13:09:55.568"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:55.570" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:55.569" endtime="20201116 13:09:55.570"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.344" endtime="20201116 13:09:55.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:55.573" endtime="20201116 13:09:55.804"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.572" endtime="20201116 13:09:55.804"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:55.817" endtime="20201116 13:09:55.831"></status>
</kw>
<msg timestamp="20201116 13:09:55.831" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201116 13:09:55.815" endtime="20201116 13:09:55.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:55.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201116 13:09:55.832" endtime="20201116 13:09:55.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:55.837" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:55.835" endtime="20201116 13:09:55.838"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:55.813" endtime="20201116 13:09:55.838"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:55.810" endtime="20201116 13:09:55.839"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.809" endtime="20201116 13:09:55.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:55.843" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:55.842" endtime="20201116 13:09:55.843"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.840" endtime="20201116 13:09:55.844"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.808" endtime="20201116 13:09:55.844"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.808" endtime="20201116 13:09:55.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:55.845" endtime="20201116 13:09:55.846"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.807" endtime="20201116 13:09:55.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:55.848" endtime="20201116 13:09:55.849"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.805" endtime="20201116 13:09:55.850"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:54.342" endtime="20201116 13:09:55.850"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:55.858" endtime="20201116 13:09:55.878"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.856" endtime="20201116 13:09:55.878"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:55.892" endtime="20201116 13:09:55.907"></status>
</kw>
<msg timestamp="20201116 13:09:55.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:55.890" endtime="20201116 13:09:55.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:55.910" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:55.909" endtime="20201116 13:09:55.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:55.913" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:55.911" endtime="20201116 13:09:55.913"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:55.888" endtime="20201116 13:09:55.914"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:55.885" endtime="20201116 13:09:55.915"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.884" endtime="20201116 13:09:55.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:55.919" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:55.918" endtime="20201116 13:09:55.920"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.916" endtime="20201116 13:09:55.920"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.883" endtime="20201116 13:09:55.920"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.882" endtime="20201116 13:09:55.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:55.921" endtime="20201116 13:09:55.922"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.881" endtime="20201116 13:09:55.923"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.879" endtime="20201116 13:09:55.923"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.854" endtime="20201116 13:09:55.924"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:55.928" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:55.938" endtime="20201116 13:09:58.035"></status>
</kw>
<msg timestamp="20201116 13:09:58.036" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 418085, 'wakeups': [428098, 438098, 448098, 458098, 468098, 478098, 48...</msg>
<status status="PASS" starttime="20201116 13:09:55.935" endtime="20201116 13:09:58.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.039" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 418085, 'wakeups': [428098, 438098, 448098, 458098, 468098, 478098, 48...</msg>
<status status="PASS" starttime="20201116 13:09:58.037" endtime="20201116 13:09:58.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.040" endtime="20201116 13:09:58.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.933" endtime="20201116 13:09:58.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.931" endtime="20201116 13:09:58.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:58.046" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [428098, 438098, 448098, 458098, 468098, 478098, 488098, 498098, 508098, 518098, 528098, 538098, 548098, 558098, 568098, 578098, 588098, 598098, 608098, 618098, 62...</msg>
<status status="PASS" starttime="20201116 13:09:58.043" endtime="20201116 13:09:58.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.050" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:58.049" endtime="20201116 13:09:58.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.052" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:58.051" endtime="20201116 13:09:58.052"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.046" endtime="20201116 13:09:58.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.057" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:58.056" endtime="20201116 13:09:58.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.059" level="INFO">VALUE: 418085</msg>
<status status="PASS" starttime="20201116 13:09:58.058" endtime="20201116 13:09:58.060"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.053" endtime="20201116 13:09:58.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.065" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:58.064" endtime="20201116 13:09:58.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.067" level="INFO">VALUE: [428098, 438098, 448098, 458098, 468098, 478098, 488098, 498098, 508098, 518098, 528098, 538098, 548098, 558098, 568098, 578098, 588098, 598098, 608098, 618098, 628098, 638098, 648098, 658098, 668098, 678098, 688098, 698098, 708098, 718098, 728098, 738098, 748098, 758098, 768098, 778098, 788098, 798098, 808098, 818098, 828098, 838098, 848098, 858098, 868098, 878098, 888098, 898098, 908098, 918098, 928098, 938098, 948098, 958098, 968098, 978098, 988098, 998098, 1008098, 1018098, 1028098, 1038098, 1048098, 1058098, 1068098, 1078098, 1088098, 1098098, 1108098, 1118098, 1128098, 1138098, 1148098, 1158098, 1168098, 1178098, 1188098, 1198098, 1208098, 1218098, 1228098, 1238098, 1248098, 1258098, 1268098, 1278098, 1288098, 1298098, 1308098, 1318098, 1328098, 1338098, 1348098, 1358098, 1368098, 1378098, 1388098, 1398098, 1408098, 1418098]</msg>
<status status="PASS" starttime="20201116 13:09:58.066" endtime="20201116 13:09:58.068"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.061" endtime="20201116 13:09:58.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.075" endtime="20201116 13:09:58.371"></status>
</kw>
<msg timestamp="20201116 13:09:58.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070178972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080193417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:58.073" endtime="20201116 13:09:58.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070178972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080193417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:58.375" endtime="20201116 13:09:58.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.383" endtime="20201116 13:09:58.385"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.071" endtime="20201116 13:09:58.385"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.069" endtime="20201116 13:09:58.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:58.410" level="INFO">${RESULT} = {'diff': [0, 0.010014444999999997, 0.010001207999999998, 0.010001097, 0.010001278000000002, 0.010001027999999995, 0.01000122199999999, 0.010001083000000022, 0.010001223000000004, 0.010001068999999974,...</msg>
<status status="PASS" starttime="20201116 13:09:58.387" endtime="20201116 13:09:58.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.415" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:58.414" endtime="20201116 13:09:58.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.417" level="INFO">VALUE: 0.070178972</msg>
<status status="PASS" starttime="20201116 13:09:58.416" endtime="20201116 13:09:58.418"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.411" endtime="20201116 13:09:58.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.423" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:58.422" endtime="20201116 13:09:58.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:58.425" level="INFO">VALUE: [0.080193417, 0.090194625, 0.100195722, 0.110197, 0.120198028, 0.13019925, 0.140200333, 0.150201556, 0.160202625, 0.170203847, 0.180204931, 0.190206153, 0.200207236, 0.210208458, 0.220209542, 0.230210778, 0.240211861, 0.250213083, 0.260214194, 0.270215389, 0.280216486, 0.290217694, 0.300218792, 0.310219986, 0.320221083, 0.330222292, 0.340223389, 0.350224611, 0.360225694, 0.370226931, 0.380228, 0.390229222, 0.400230347, 0.410231542, 0.420232653, 0.430233847, 0.440234931, 0.450236139, 0.460237236, 0.470238444, 0.480239542, 0.490240819, 0.500241889, 0.510243056, 0.520244167, 0.530245361, 0.540246458, 0.550247667, 0.560248778, 0.570249986, 0.580251069, 0.590252292, 0.600253375, 0.610254597, 0.620255681, 0.630256903, 0.640257986, 0.650259222, 0.660260292, 0.670261514, 0.680262611, 0.690263875, 0.700264944, 0.710266153, 0.720267236, 0.730268444, 0.740269542, 0.750270736, 0.760271833, 0.770273097, 0.780274139, 0.790275361, 0.800276444, 0.810277681, 0.820278778, 0.830279986, 0.840281083, 0.850282292, 0.860283375, 0.870284597, 0.880285667, 0.890286889, 0.900288, 0.910289194, 0.920290292, 0.9302915, 0.940292597, 0.950293806, 0.960294903, 0.970296111, 0.980297208, 0.990298431, 1.000299514, 1.010300736, 1.020301847, 1.030303111, 1.040304181, 1.050305347, 1.060306431, 1.070307667] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:58.424" endtime="20201116 13:09:58.426"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.419" endtime="20201116 13:09:58.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.429" endtime="20201116 13:09:58.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:58.433" endtime="20201116 13:09:58.452"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.431" endtime="20201116 13:09:58.452"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.427" endtime="20201116 13:09:58.453"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.929" endtime="20201116 13:09:58.453"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.927" endtime="20201116 13:09:58.454"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.926" endtime="20201116 13:09:58.454"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:58.457" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:58.465" endtime="20201116 13:10:00.581"></status>
</kw>
<msg timestamp="20201116 13:10:00.582" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2945146, 'wakeups': [2955171, 2965170, 2975170, 2985170, 2995170, 3005...</msg>
<status status="PASS" starttime="20201116 13:09:58.463" endtime="20201116 13:10:00.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.585" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2945146, 'wakeups': [2955171, 2965170, 2975170, 2985170, 2995170, 3005...</msg>
<status status="PASS" starttime="20201116 13:10:00.583" endtime="20201116 13:10:00.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:00.586" endtime="20201116 13:10:00.588"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.461" endtime="20201116 13:10:00.588"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.459" endtime="20201116 13:10:00.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:00.591" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [2955171, 2965170, 2975170, 2985170, 2995170, 3005170, 3015170, 3025170, 3035170, 3045170, 3055170, 3065170, 3075170, 3085170, 3095170, 3105170, 3115170, 3125170, ...</msg>
<status status="PASS" starttime="20201116 13:10:00.589" endtime="20201116 13:10:00.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.596" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:00.595" endtime="20201116 13:10:00.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.599" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:00.597" endtime="20201116 13:10:00.599"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.592" endtime="20201116 13:10:00.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.604" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:10:00.603" endtime="20201116 13:10:00.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.606" level="INFO">VALUE: 2945146</msg>
<status status="PASS" starttime="20201116 13:10:00.605" endtime="20201116 13:10:00.607"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.601" endtime="20201116 13:10:00.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.612" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:00.610" endtime="20201116 13:10:00.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.614" level="INFO">VALUE: [2955171, 2965170, 2975170, 2985170, 2995170, 3005170, 3015170, 3025170, 3035170, 3045170, 3055170, 3065170, 3075170, 3085170, 3095170, 3105170, 3115170, 3125170, 3135170, 3145170, 3155170, 3165170, 3175170, 3185170, 3195170, 3205170, 3215170, 3225170, 3235170, 3245170, 3255170, 3265170, 3275170, 3285170, 3295170, 3305170, 3315170, 3325170, 3335170, 3345170, 3355170, 3365170, 3375170, 3385170, 3395170, 3405170, 3415170, 3425170, 3435170, 3445170, 3455170, 3465170, 3475170, 3485170, 3495170, 3505170, 3515170, 3525170, 3535170, 3545170, 3555170, 3565170, 3575170, 3585170, 3595170, 3605170, 3615170, 3625170, 3635170, 3645170, 3655170, 3665170, 3675170, 3685170, 3695170, 3705170, 3715170, 3725170, 3735170, 3745170, 3755170, 3765170, 3775170, 3785170, 3795170, 3805170, 3815170, 3825170, 3835170, 3845170, 3855170, 3865170, 3875170, 3885170, 3895170, 3905170, 3915170, 3925170, 3935170, 3945170]</msg>
<status status="PASS" starttime="20201116 13:10:00.613" endtime="20201116 13:10:00.614"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.608" endtime="20201116 13:10:00.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:00.622" endtime="20201116 13:10:00.913"></status>
</kw>
<msg timestamp="20201116 13:10:00.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023074403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033101194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:00.620" endtime="20201116 13:10:00.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023074403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033101194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:00.917" endtime="20201116 13:10:00.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:00.925" endtime="20201116 13:10:00.927"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.618" endtime="20201116 13:10:00.927"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.616" endtime="20201116 13:10:00.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:00.953" level="INFO">${RESULT} = {'diff': [0, 0.010026791, 0.010000223000000003, 0.010001082999999994, 0.010001222000000004, 0.010001083999999993, 0.010001208000000011, 0.010001097, 0.010001207999999998, 0.010001098, 0.01000120799999...</msg>
<status status="PASS" starttime="20201116 13:10:00.929" endtime="20201116 13:10:00.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.958" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:10:00.956" endtime="20201116 13:10:00.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.960" level="INFO">VALUE: 0.023074403</msg>
<status status="PASS" starttime="20201116 13:10:00.959" endtime="20201116 13:10:00.961"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.954" endtime="20201116 13:10:00.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.966" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:00.965" endtime="20201116 13:10:00.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:00.968" level="INFO">VALUE: [0.033101194, 0.043101417, 0.0531025, 0.063103722, 0.073104806, 0.083106014, 0.093107111, 0.103108319, 0.113109417, 0.123110625, 0.133111722, 0.143112931, 0.153114014, 0.163115222, 0.173116333, 0.183117556, 0.193118625, 0.203119833, 0.213120944, 0.223122139, 0.233123236, 0.243124472, 0.253125556, 0.26312675, 0.273127833, 0.283129056, 0.293130139, 0.303131361, 0.313132444, 0.323133681, 0.333134806, 0.343135986, 0.353137056, 0.363138278, 0.373139361, 0.383140583, 0.393141667, 0.403142889, 0.413143986, 0.423145208, 0.433146278, 0.443147514, 0.453148597, 0.463149806, 0.473150889, 0.483152194, 0.493153194, 0.503154431, 0.5131555, 0.523156708, 0.533157806, 0.543159042, 0.553160125, 0.563161319, 0.573162431, 0.583163625, 0.59316475, 0.603165972, 0.613167042, 0.62316825, 0.633169333, 0.643170556, 0.653171653, 0.663172847, 0.673173931, 0.683175153, 0.69317625, 0.703177486, 0.713178542, 0.723179778, 0.733180903, 0.743182083, 0.753183153, 0.763184375, 0.773185472, 0.783186681, 0.793187778, 0.803189, 0.813190083, 0.823191292, 0.833192375, 0.843193597, 0.853194681, 0.863195903, 0.873196986, 0.883198222, 0.893199292, 0.903200514, 0.913201611, 0.923202833, 0.933203917, 0.943205125, 0.953206236, 0.963207431, 0.973208514, 0.983209764, 0.993210861, 1.003212028, 1.013213125, 1.023214417] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:00.967" endtime="20201116 13:10:00.969"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.962" endtime="20201116 13:10:00.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:00.971" endtime="20201116 13:10:00.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:00.975" endtime="20201116 13:10:00.995"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.973" endtime="20201116 13:10:00.995"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.970" endtime="20201116 13:10:00.996"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.457" endtime="20201116 13:10:00.996"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.455" endtime="20201116 13:10:00.996"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:58.454" endtime="20201116 13:10:00.996"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:00.999" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:01.008" endtime="20201116 13:10:03.130"></status>
</kw>
<msg timestamp="20201116 13:10:03.131" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5488328, 'wakeups': [5498367, 5508367, 5518367, 5528367, 5538367, 5548...</msg>
<status status="PASS" starttime="20201116 13:10:01.007" endtime="20201116 13:10:03.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.135" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5488328, 'wakeups': [5498367, 5508367, 5518367, 5528367, 5538367, 5548...</msg>
<status status="PASS" starttime="20201116 13:10:03.133" endtime="20201116 13:10:03.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.136" endtime="20201116 13:10:03.138"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.003" endtime="20201116 13:10:03.138"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.001" endtime="20201116 13:10:03.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:03.141" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [5498367, 5508367, 5518367, 5528367, 5538367, 5548367, 5558367, 5568367, 5578367, 5588367, 5598367, 5608367, 5618367, 5628367, 5638367, 5648367, 5658367, 5668367, ...</msg>
<status status="PASS" starttime="20201116 13:10:03.139" endtime="20201116 13:10:03.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.146" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:03.145" endtime="20201116 13:10:03.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.148" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:03.147" endtime="20201116 13:10:03.148"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.142" endtime="20201116 13:10:03.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.153" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:10:03.152" endtime="20201116 13:10:03.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.155" level="INFO">VALUE: 5488328</msg>
<status status="PASS" starttime="20201116 13:10:03.154" endtime="20201116 13:10:03.156"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.150" endtime="20201116 13:10:03.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.160" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:03.159" endtime="20201116 13:10:03.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.163" level="INFO">VALUE: [5498367, 5508367, 5518367, 5528367, 5538367, 5548367, 5558367, 5568367, 5578367, 5588367, 5598367, 5608367, 5618367, 5628367, 5638367, 5648367, 5658367, 5668367, 5678367, 5688367, 5698367, 5708367, 5718367, 5728367, 5738367, 5748367, 5758367, 5768367, 5778367, 5788367, 5798367, 5808367, 5818367, 5828367, 5838367, 5848367, 5858367, 5868367, 5878367, 5888367, 5898367, 5908367, 5918367, 5928367, 5938367, 5948367, 5958367, 5968367, 5978367, 5988367, 5998367, 6008367, 6018367, 6028367, 6038367, 6048367, 6058367, 6068367, 6078367, 6088367, 6098367, 6108367, 6118367, 6128367, 6138367, 6148367, 6158367, 6168367, 6178367, 6188367, 6198367, 6208367, 6218367, 6228367, 6238367, 6248367, 6258367, 6268367, 6278367, 6288367, 6298367, 6308367, 6318367, 6328367, 6338367, 6348367, 6358367, 6368367, 6378367, 6388367, 6398367, 6408367, 6418367, 6428367, 6438367, 6448367, 6458367, 6468367, 6478367, 6488367]</msg>
<status status="PASS" starttime="20201116 13:10:03.162" endtime="20201116 13:10:03.163"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.157" endtime="20201116 13:10:03.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.171" endtime="20201116 13:10:03.463"></status>
</kw>
<msg timestamp="20201116 13:10:03.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023710514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033751736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:03.170" endtime="20201116 13:10:03.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023710514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033751736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:03.467" endtime="20201116 13:10:03.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.475" endtime="20201116 13:10:03.477"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.167" endtime="20201116 13:10:03.478"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.164" endtime="20201116 13:10:03.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:03.502" level="INFO">${RESULT} = {'diff': [0, 0.010041221999999999, 0.01000107, 0.010001069000000001, 0.010001221999999997, 0.010001084000000007, 0.010001207999999998, 0.010001097, 0.010001235999999997, 0.010001056000000008, 0.010001...</msg>
<status status="PASS" starttime="20201116 13:10:03.479" endtime="20201116 13:10:03.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.507" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:10:03.506" endtime="20201116 13:10:03.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.509" level="INFO">VALUE: 0.023710514</msg>
<status status="PASS" starttime="20201116 13:10:03.508" endtime="20201116 13:10:03.510"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.503" endtime="20201116 13:10:03.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.515" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:03.514" endtime="20201116 13:10:03.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:03.517" level="INFO">VALUE: [0.033751736, 0.043752806, 0.053753875, 0.063755097, 0.073756181, 0.083757389, 0.093758486, 0.103759722, 0.113760778, 0.123762069, 0.133763097, 0.143764292, 0.153765389, 0.163766597, 0.173767681, 0.183768958, 0.193770028, 0.203771194, 0.213772278, 0.223773514, 0.233774597, 0.243775792, 0.253776944, 0.263778097, 0.273779208, 0.283780403, 0.293781528, 0.303782708, 0.313783792, 0.323785083, 0.333786111, 0.343787306, 0.353788403, 0.363789611, 0.373790708, 0.383791944, 0.393793, 0.403794236, 0.413795306, 0.423796514, 0.433797625, 0.443798833, 0.453799931, 0.463801125, 0.473802208, 0.483803431, 0.493804528, 0.503805736, 0.513806819, 0.523808069, 0.533809125, 0.543810333, 0.553811431, 0.563812653, 0.573813722, 0.583815014, 0.593816042, 0.603817236, 0.613818333, 0.623819556, 0.633820639, 0.643821847, 0.653822944, 0.663824167, 0.673825236, 0.683826458, 0.693827542, 0.70382875, 0.713829847, 0.723831069, 0.733832153, 0.743833375, 0.753834444, 0.763835667, 0.77383675, 0.783837958, 0.793839056, 0.803840264, 0.813841375, 0.823842569, 0.833843653, 0.843844889, 0.853845958, 0.863847181, 0.873848264, 0.883849486, 0.893850569, 0.903851778, 0.913852861, 0.923854083, 0.933855167, 0.943856389, 0.953857472, 0.963858694, 0.973859778, 0.983860986, 0.993862097, 1.003863292, 1.013864375, 1.023865597] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:03.516" endtime="20201116 13:10:03.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.511" endtime="20201116 13:10:03.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.520" endtime="20201116 13:10:03.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:03.524" endtime="20201116 13:10:03.543"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.522" endtime="20201116 13:10:03.544"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.519" endtime="20201116 13:10:03.545"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:01.000" endtime="20201116 13:10:03.545"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.998" endtime="20201116 13:10:03.545"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:00.997" endtime="20201116 13:10:03.545"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:03.548" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:03.558" endtime="20201116 13:10:05.679"></status>
</kw>
<msg timestamp="20201116 13:10:05.680" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 8037385, 'wakeups': [8047442, 8057440, 8067440, 8077440, 8087440, 8097...</msg>
<status status="PASS" starttime="20201116 13:10:03.556" endtime="20201116 13:10:05.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.686" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 8037385, 'wakeups': [8047442, 8057440, 8067440, 8077440, 8087440, 8097...</msg>
<status status="PASS" starttime="20201116 13:10:05.682" endtime="20201116 13:10:05.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:05.688" endtime="20201116 13:10:05.690"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.553" endtime="20201116 13:10:05.690"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.550" endtime="20201116 13:10:05.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:05.700" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [8047442, 8057440, 8067440, 8077440, 8087440, 8097440, 8107440, 8117440, 8127440, 8137440, 8147440, 8157440, 8167440, 8177440, 8187440, 8197440, 8207440, 8217440, ...</msg>
<status status="PASS" starttime="20201116 13:10:05.691" endtime="20201116 13:10:05.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.705" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:05.704" endtime="20201116 13:10:05.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.707" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:05.706" endtime="20201116 13:10:05.707"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:05.701" endtime="20201116 13:10:05.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.712" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:10:05.711" endtime="20201116 13:10:05.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.714" level="INFO">VALUE: 8037385</msg>
<status status="PASS" starttime="20201116 13:10:05.713" endtime="20201116 13:10:05.715"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:05.708" endtime="20201116 13:10:05.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.719" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:05.718" endtime="20201116 13:10:05.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:05.722" level="INFO">VALUE: [8047442, 8057440, 8067440, 8077440, 8087440, 8097440, 8107440, 8117440, 8127440, 8137440, 8147440, 8157440, 8167440, 8177440, 8187440, 8197440, 8207440, 8217440, 8227440, 8237440, 8247440, 8257440, 8267440, 8277440, 8287440, 8297440, 8307440, 8317440, 8327440, 8337440, 8347440, 8357440, 8367440, 8377440, 8387440, 8397440, 8407440, 8417440, 8427440, 8437440, 8447440, 8457440, 8467440, 8477440, 8487440, 8497440, 8507440, 8517440, 8527440, 8537440, 8547440, 8557440, 8567440, 8577440, 8587440, 8597440, 8607440, 8617440, 8627440, 8637440, 8647440, 8657440, 8667440, 8677440, 8687440, 8697440, 8707440, 8717440, 8727440, 8737440, 8747440, 8757440, 8767440, 8777440, 8787440, 8797440, 8807440, 8817440, 8827440, 8837440, 8847440, 8857440, 8867440, 8877440, 8887440, 8897440, 8907440, 8917440, 8927440, 8937440, 8947440, 8957440, 8967440, 8977440, 8987440, 8997440, 9007440, 9017440, 9027440, 9037440]</msg>
<status status="PASS" starttime="20201116 13:10:05.721" endtime="20201116 13:10:05.722"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:05.716" endtime="20201116 13:10:05.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:05.729" endtime="20201116 13:10:06.020"></status>
</kw>
<msg timestamp="20201116 13:10:06.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023844681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033903194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:05.728" endtime="20201116 13:10:06.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023844681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033903194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:06.023" endtime="20201116 13:10:06.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.031" endtime="20201116 13:10:06.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:05.725" endtime="20201116 13:10:06.033"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:05.723" endtime="20201116 13:10:06.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:06.060" level="INFO">${RESULT} = {'diff': [0, 0.010058512999999998, 0.009999612000000005, 0.010001083000000001, 0.01000123599999999, 0.010001111000000007, 0.010001207999999998, 0.010001098, 0.010001222000000004, 0.010001110999999993,...</msg>
<status status="PASS" starttime="20201116 13:10:06.035" endtime="20201116 13:10:06.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.065" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:10:06.064" endtime="20201116 13:10:06.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.067" level="INFO">VALUE: 0.023844681</msg>
<status status="PASS" starttime="20201116 13:10:06.066" endtime="20201116 13:10:06.068"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.061" endtime="20201116 13:10:06.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.074" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:06.073" endtime="20201116 13:10:06.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:06.076" level="INFO">VALUE: [0.033903194, 0.043902806, 0.053903889, 0.063905125, 0.073906236, 0.083907444, 0.093908542, 0.103909764, 0.113910875, 0.123912083, 0.133913181, 0.143914403, 0.153915514, 0.163916736, 0.173917819, 0.183919042, 0.193920167, 0.203921375, 0.213922472, 0.223923708, 0.233924792, 0.243926069, 0.253927125, 0.263928347, 0.273929458, 0.283930667, 0.293931778, 0.303932986, 0.313934139, 0.323935319, 0.333936417, 0.343937639, 0.353938736, 0.363939958, 0.373941139, 0.383942306, 0.393943389, 0.403944611, 0.413945708, 0.423946931, 0.433948028, 0.443949278, 0.453950375, 0.463951583, 0.473952681, 0.483953903, 0.493955, 0.503956236, 0.513957333, 0.523958556, 0.533959653, 0.543960875, 0.553961972, 0.563963222, 0.573964306, 0.583965528, 0.593966639, 0.603967861, 0.613968958, 0.623970167, 0.633971319, 0.643972514, 0.653973597, 0.663974819, 0.673975917, 0.683977139, 0.69397825, 0.703979472, 0.713980569, 0.723981833, 0.733982889, 0.743984125, 0.753985222, 0.763986514, 0.773987556, 0.783988833, 0.793989861, 0.803991083, 0.813992181, 0.823993444, 0.833994528, 0.843995736, 0.853996833, 0.863998069, 0.873999153, 0.884000389, 0.8940015, 0.904002722, 0.914003806, 0.924005083, 0.934006125, 0.944007361, 0.954008472, 0.964009694, 0.974010792, 0.984012, 0.994013097, 1.004014319, 1.014015431, 1.024016653] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:06.075" endtime="20201116 13:10:06.076"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.069" endtime="20201116 13:10:06.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.079" endtime="20201116 13:10:06.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:06.083" endtime="20201116 13:10:06.102"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.081" endtime="20201116 13:10:06.103"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.078" endtime="20201116 13:10:06.103"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.549" endtime="20201116 13:10:06.104"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.547" endtime="20201116 13:10:06.104"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:03.546" endtime="20201116 13:10:06.104"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:06.107" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:06.115" endtime="20201116 13:10:08.245"></status>
</kw>
<msg timestamp="20201116 13:10:08.245" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10595187, 'wakeups': [10605261, 10615260, 10625260, 10635260, 10645260...</msg>
<status status="PASS" starttime="20201116 13:10:06.114" endtime="20201116 13:10:08.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10595187, 'wakeups': [10605261, 10615260, 10625260, 10635260, 10645260...</msg>
<status status="PASS" starttime="20201116 13:10:08.247" endtime="20201116 13:10:08.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.249" endtime="20201116 13:10:08.252"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.111" endtime="20201116 13:10:08.253"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.109" endtime="20201116 13:10:08.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:08.256" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [10605261, 10615260, 10625260, 10635260, 10645260, 10655260, 10665260, 10675260, 10685260, 10695260, 10705260, 10715260, 10725260, 10735260, 10745260, 10755260, 10...</msg>
<status status="PASS" starttime="20201116 13:10:08.254" endtime="20201116 13:10:08.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.260" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:08.259" endtime="20201116 13:10:08.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.262" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:08.261" endtime="20201116 13:10:08.263"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.257" endtime="20201116 13:10:08.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.268" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:10:08.267" endtime="20201116 13:10:08.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.270" level="INFO">VALUE: 10595187</msg>
<status status="PASS" starttime="20201116 13:10:08.269" endtime="20201116 13:10:08.271"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.264" endtime="20201116 13:10:08.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.275" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:08.274" endtime="20201116 13:10:08.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.278" level="INFO">VALUE: [10605261, 10615260, 10625260, 10635260, 10645260, 10655260, 10665260, 10675260, 10685260, 10695260, 10705260, 10715260, 10725260, 10735260, 10745260, 10755260, 10765260, 10775260, 10785260, 10795260, 10805260, 10815260, 10825260, 10835260, 10845260, 10855260, 10865260, 10875260, 10885260, 10895260, 10905260, 10915260, 10925260, 10935260, 10945260, 10955260, 10965260, 10975260, 10985260, 10995260, 11005260, 11015260, 11025260, 11035260, 11045260, 11055260, 11065260, 11075260, 11085260, 11095260, 11105260, 11115260, 11125260, 11135260, 11145260, 11155260, 11165260, 11175260, 11185260, 11195260, 11205260, 11215260, 11225260, 11235260, 11245260, 11255260, 11265260, 11275260, 11285260, 11295260, 11305260, 11315260, 11325260, 11335260, 11345260, 11355260, 11365260, 11375260, 11385260, 11395260, 11405260, 11415260, 11425260, 11435260, 11445260, 11455260, 11465260, 11475260, 11485260, 11495260, 11505260, 11515260, 11525260, 11535260, 11545260, 11555260, 11565260, 11575260, 11585260, 11595260]</msg>
<status status="PASS" starttime="20201116 13:10:08.277" endtime="20201116 13:10:08.278"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.272" endtime="20201116 13:10:08.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.286" endtime="20201116 13:10:08.577"></status>
</kw>
<msg timestamp="20201116 13:10:08.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033036486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:08.284" endtime="20201116 13:10:08.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033036486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:08.580" endtime="20201116 13:10:08.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.588" endtime="20201116 13:10:08.590"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.281" endtime="20201116 13:10:08.590"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.279" endtime="20201116 13:10:08.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:08.616" level="INFO">${RESULT} = {'diff': [0, 0.010075860999999998, 0.009999889000000005, 0.010001097, 0.010001235999999997, 0.010001084000000007, 0.01000122199999999, 0.010001097, 0.010001222000000004, 0.010001110999999993, 0.010001...</msg>
<status status="PASS" starttime="20201116 13:10:08.592" endtime="20201116 13:10:08.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.621" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:10:08.619" endtime="20201116 13:10:08.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.623" level="INFO">VALUE: 0.022960625</msg>
<status status="PASS" starttime="20201116 13:10:08.622" endtime="20201116 13:10:08.623"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.617" endtime="20201116 13:10:08.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.628" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:08.627" endtime="20201116 13:10:08.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:08.631" level="INFO">VALUE: [0.033036486, 0.043036375, 0.053037472, 0.063038708, 0.073039792, 0.083041014, 0.093042111, 0.103043333, 0.113044444, 0.123045653, 0.13304675, 0.143048, 0.153049056, 0.163050292, 0.173051403, 0.183052639, 0.193053708, 0.203054972, 0.213056028, 0.22305725, 0.233058361, 0.243059569, 0.253060667, 0.263061903, 0.273063042, 0.283064208, 0.293065306, 0.303066528, 0.313067625, 0.323068847, 0.333069944, 0.343071208, 0.353072292, 0.3630735, 0.373074597, 0.383075833, 0.393076944, 0.403078153, 0.413079236, 0.4230805, 0.433081556, 0.443082792, 0.453083889, 0.463085097, 0.473086222, 0.483087444, 0.493088542, 0.50308975, 0.513090847, 0.523092083, 0.533093167, 0.543094403, 0.553095542, 0.563096722, 0.573097806, 0.583099042, 0.593100153, 0.603101347, 0.613102444, 0.623103667, 0.633104792, 0.643106028, 0.653107111, 0.663108333, 0.673109417, 0.683110639, 0.69311175, 0.703113, 0.713114056, 0.723115319, 0.733116375, 0.743117611, 0.753118694, 0.763119931, 0.773121028, 0.783122264, 0.793123347, 0.803124583, 0.813125667, 0.823126889, 0.833128014, 0.843129208, 0.853130306, 0.863131542, 0.873132639, 0.883133847, 0.893135028, 0.903136181, 0.913137278, 0.923138514, 0.933139597, 0.943140819, 0.953141917, 0.963143139, 0.973144264, 0.983145458, 0.993146556, 1.003147792, 1.013148889, 1.023150111] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:08.630" endtime="20201116 13:10:08.631"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.624" endtime="20201116 13:10:08.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.634" endtime="20201116 13:10:08.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:08.638" endtime="20201116 13:10:08.657"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.636" endtime="20201116 13:10:08.658"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.633" endtime="20201116 13:10:08.658"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.108" endtime="20201116 13:10:08.659"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.105" endtime="20201116 13:10:08.659"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:06.104" endtime="20201116 13:10:08.659"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:08.662" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:08.671" endtime="20201116 13:10:10.799"></status>
</kw>
<msg timestamp="20201116 13:10:10.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13150363, 'wakeups': [13160459, 13170458, 13180458, 13190458, 13200458...</msg>
<status status="PASS" starttime="20201116 13:10:08.669" endtime="20201116 13:10:10.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13150363, 'wakeups': [13160459, 13170458, 13180458, 13190458, 13200458...</msg>
<status status="PASS" starttime="20201116 13:10:10.801" endtime="20201116 13:10:10.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:10.804" endtime="20201116 13:10:10.806"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.666" endtime="20201116 13:10:10.806"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.664" endtime="20201116 13:10:10.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:10.809" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [13160459, 13170458, 13180458, 13190458, 13200458, 13210458, 13220458, 13230458, 13240458, 13250458, 13260458, 13270458, 13280458, 13290458, 13300458, 13310458, 13...</msg>
<status status="PASS" starttime="20201116 13:10:10.807" endtime="20201116 13:10:10.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.814" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:10.813" endtime="20201116 13:10:10.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.816" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:10.815" endtime="20201116 13:10:10.816"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:10.810" endtime="20201116 13:10:10.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.822" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:10:10.820" endtime="20201116 13:10:10.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.824" level="INFO">VALUE: 13150363</msg>
<status status="PASS" starttime="20201116 13:10:10.823" endtime="20201116 13:10:10.825"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:10.817" endtime="20201116 13:10:10.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.830" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:10.829" endtime="20201116 13:10:10.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:10.832" level="INFO">VALUE: [13160459, 13170458, 13180458, 13190458, 13200458, 13210458, 13220458, 13230458, 13240458, 13250458, 13260458, 13270458, 13280458, 13290458, 13300458, 13310458, 13320458, 13330458, 13340458, 13350458, 13360458, 13370458, 13380458, 13390458, 13400458, 13410458, 13420458, 13430458, 13440458, 13450458, 13460458, 13470458, 13480458, 13490458, 13500458, 13510458, 13520458, 13530458, 13540458, 13550458, 13560458, 13570458, 13580458, 13590458, 13600458, 13610458, 13620458, 13630458, 13640458, 13650458, 13660458, 13670458, 13680458, 13690458, 13700458, 13710458, 13720458, 13730458, 13740458, 13750458, 13760458, 13770458, 13780458, 13790458, 13800458, 13810458, 13820458, 13830458, 13840458, 13850458, 13860458, 13870458, 13880458, 13890458, 13900458, 13910458, 13920458, 13930458, 13940458, 13950458, 13960458, 13970458, 13980458, 13990458, 14000458, 14010458, 14020458, 14030458, 14040458, 14050458, 14060458, 14070458, 14080458, 14090458, 14100458, 14110458, 14120458, 14130458, 14140458, 14150458]</msg>
<status status="PASS" starttime="20201116 13:10:10.831" endtime="20201116 13:10:10.836"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:10.826" endtime="20201116 13:10:10.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:10.844" endtime="20201116 13:10:11.134"></status>
</kw>
<msg timestamp="20201116 13:10:11.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033057542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:10.842" endtime="20201116 13:10:11.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033057542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:11.138" endtime="20201116 13:10:11.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.146" endtime="20201116 13:10:11.148"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:10.840" endtime="20201116 13:10:11.148"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:10.838" endtime="20201116 13:10:11.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:11.174" level="INFO">${RESULT} = {'diff': [0, 0.010097917000000001, 0.010000097, 0.010001069000000001, 0.010001222999999997, 0.010001097, 0.010001222000000004, 0.010001110999999993, 0.010001207999999998, 0.010001125, 0.01000120900000...</msg>
<status status="PASS" starttime="20201116 13:10:11.150" endtime="20201116 13:10:11.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.178" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:10:11.177" endtime="20201116 13:10:11.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.180" level="INFO">VALUE: 0.022959625</msg>
<status status="PASS" starttime="20201116 13:10:11.179" endtime="20201116 13:10:11.181"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.175" endtime="20201116 13:10:11.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.186" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:11.185" endtime="20201116 13:10:11.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:11.189" level="INFO">VALUE: [0.033057542, 0.043057639, 0.053058708, 0.063059931, 0.073061028, 0.08306225, 0.093063361, 0.103064569, 0.113065694, 0.123066903, 0.133067986, 0.143069194, 0.153070306, 0.163071514, 0.173072667, 0.183073833, 0.193074931, 0.203076194, 0.213077278, 0.223078472, 0.233079569, 0.243080792, 0.253081889, 0.263083111, 0.273084208, 0.283085431, 0.293086528, 0.303087764, 0.313088847, 0.323090083, 0.333091167, 0.343092389, 0.353093528, 0.363094722, 0.373095792, 0.383097042, 0.393098125, 0.403099347, 0.413100431, 0.423101653, 0.43310275, 0.443103972, 0.453105083, 0.463106292, 0.473107389, 0.483108611, 0.493109722, 0.503110931, 0.513112028, 0.52311325, 0.533114389, 0.543115569, 0.553116681, 0.563117917, 0.573119, 0.583120208, 0.593121347, 0.603122528, 0.613123653, 0.623124861, 0.633125944, 0.643127167, 0.653128278, 0.663129486, 0.673130583, 0.683131819, 0.693132903, 0.703134139, 0.713135222, 0.723136444, 0.733137542, 0.743138778, 0.753139861, 0.763141097, 0.773142194, 0.783143403, 0.7931445, 0.803145736, 0.813146819, 0.823148042, 0.833149139, 0.843150361, 0.853151444, 0.863152681, 0.873153778, 0.883155028, 0.893156097, 0.903157319, 0.913158403, 0.923159667, 0.93316075, 0.943161944, 0.953163056, 0.963164264, 0.973165361, 0.983166597, 0.993167681, 1.003168903, 1.01317, 1.023171222] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:11.188" endtime="20201116 13:10:11.190"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.182" endtime="20201116 13:10:11.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.192" endtime="20201116 13:10:11.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:11.196" endtime="20201116 13:10:11.215"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.194" endtime="20201116 13:10:11.216"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.191" endtime="20201116 13:10:11.217"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.663" endtime="20201116 13:10:11.217"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.660" endtime="20201116 13:10:11.217"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:08.660" endtime="20201116 13:10:11.217"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:11.221" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:11.230" endtime="20201116 13:10:13.356"></status>
</kw>
<msg timestamp="20201116 13:10:13.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15709794, 'wakeups': [15719912, 15729910, 15739910, 15749910, 15759910...</msg>
<status status="PASS" starttime="20201116 13:10:11.228" endtime="20201116 13:10:13.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.360" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15709794, 'wakeups': [15719912, 15729910, 15739910, 15749910, 15759910...</msg>
<status status="PASS" starttime="20201116 13:10:13.358" endtime="20201116 13:10:13.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:13.361" endtime="20201116 13:10:13.362"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.225" endtime="20201116 13:10:13.363"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.223" endtime="20201116 13:10:13.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:13.366" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [15719912, 15729910, 15739910, 15749910, 15759910, 15769910, 15779910, 15789910, 15799910, 15809910, 15819910, 15829910, 15839910, 15849910, 15859910, 15869910, 15...</msg>
<status status="PASS" starttime="20201116 13:10:13.364" endtime="20201116 13:10:13.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.371" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:13.369" endtime="20201116 13:10:13.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.373" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:13.372" endtime="20201116 13:10:13.373"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.367" endtime="20201116 13:10:13.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.378" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:10:13.377" endtime="20201116 13:10:13.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.380" level="INFO">VALUE: 15709794</msg>
<status status="PASS" starttime="20201116 13:10:13.379" endtime="20201116 13:10:13.380"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.374" endtime="20201116 13:10:13.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.386" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:13.385" endtime="20201116 13:10:13.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.388" level="INFO">VALUE: [15719912, 15729910, 15739910, 15749910, 15759910, 15769910, 15779910, 15789910, 15799910, 15809910, 15819910, 15829910, 15839910, 15849910, 15859910, 15869910, 15879910, 15889910, 15899910, 15909910, 15919910, 15929910, 15939910, 15949910, 15959910, 15969910, 15979910, 15989910, 15999910, 16009910, 16019910, 16029910, 16039910, 16049910, 16059910, 16069910, 16079910, 16089910, 16099910, 16109910, 16119910, 16129910, 16139910, 16149910, 16159910, 16169910, 16179910, 16189910, 16199910, 16209910, 16219910, 16229910, 16239910, 16249910, 16259910, 16269910, 16279910, 16289910, 16299910, 16309910, 16319910, 16329910, 16339910, 16349910, 16359910, 16369910, 16379910, 16389910, 16399910, 16409910, 16419910, 16429910, 16439910, 16449910, 16459910, 16469910, 16479910, 16489910, 16499910, 16509910, 16519910, 16529910, 16539910, 16549910, 16559910, 16569910, 16579910, 16589910, 16599910, 16609910, 16619910, 16629910, 16639910, 16649910, 16659910, 16669910, 16679910, 16689910, 16699910, 16709910]</msg>
<status status="PASS" starttime="20201116 13:10:13.387" endtime="20201116 13:10:13.388"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.382" endtime="20201116 13:10:13.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:13.397" endtime="20201116 13:10:13.689"></status>
</kw>
<msg timestamp="20201116 13:10:13.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024528625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034648, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:10:13.394" endtime="20201116 13:10:13.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024528625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034648, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201116 13:10:13.693" endtime="20201116 13:10:13.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:13.701" endtime="20201116 13:10:13.703"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.391" endtime="20201116 13:10:13.703"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.390" endtime="20201116 13:10:13.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:13.728" level="INFO">${RESULT} = {'diff': [0, 0.010119375, 0.009999778, 0.010001055000000002, 0.010001236000000004, 0.010001111999999993, 0.010001194000000005, 0.010001082999999994, 0.010001223000000004, 0.010001097, 0.01000122200000...</msg>
<status status="PASS" starttime="20201116 13:10:13.705" endtime="20201116 13:10:13.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.733" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:10:13.732" endtime="20201116 13:10:13.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.735" level="INFO">VALUE: 0.024528625</msg>
<status status="PASS" starttime="20201116 13:10:13.734" endtime="20201116 13:10:13.735"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.729" endtime="20201116 13:10:13.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.741" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:13.739" endtime="20201116 13:10:13.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:13.743" level="INFO">VALUE: [0.034648, 0.044647778, 0.054648833, 0.064650069, 0.074651181, 0.084652375, 0.094653458, 0.104654681, 0.114655778, 0.124657, 0.134658097, 0.144659306, 0.154660417, 0.164661625, 0.174662722, 0.184663958, 0.194665056, 0.204666264, 0.214667361, 0.224668569, 0.234669667, 0.244670903, 0.254671986, 0.264673208, 0.274674306, 0.284675528, 0.294676625, 0.304677833, 0.314678931, 0.324680153, 0.33468125, 0.344682486, 0.354683569, 0.364684792, 0.374685889, 0.384687111, 0.394688194, 0.404689417, 0.414690528, 0.42469175, 0.434692833, 0.444694097, 0.454695167, 0.464696389, 0.474697472, 0.484698694, 0.494699778, 0.504701042, 0.514702097, 0.524703333, 0.534704472, 0.544705653, 0.554706736, 0.564707972, 0.574709056, 0.584710278, 0.594711375, 0.604712597, 0.614713681, 0.624714903, 0.634716, 0.64471725, 0.654718333, 0.664719556, 0.674720653, 0.684721875, 0.694722944, 0.704724181, 0.714725264, 0.7247265, 0.734727597, 0.744728819, 0.754729917, 0.764731125, 0.774732236, 0.784733444, 0.794734528, 0.804735764, 0.814736861, 0.824738083, 0.834739181, 0.844740389, 0.854741486, 0.864742722, 0.874743806, 0.884745028, 0.894746125, 0.904747347, 0.914748458, 0.924749653, 0.934750764, 0.944751972, 0.954753083, 0.964754306, 0.974755389, 0.984756653, 0.994757708, 1.004758931, 1.014760028, 1.024761292] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:13.742" endtime="20201116 13:10:13.743"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.736" endtime="20201116 13:10:13.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:13.746" endtime="20201116 13:10:13.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:13.750" endtime="20201116 13:10:13.769"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.748" endtime="20201116 13:10:13.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.744" endtime="20201116 13:10:13.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.221" endtime="20201116 13:10:13.770"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.219" endtime="20201116 13:10:13.771"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:11.218" endtime="20201116 13:10:13.771"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:13.774" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:13.783" endtime="20201116 13:10:15.910"></status>
</kw>
<msg timestamp="20201116 13:10:15.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18262726, 'wakeups': [18272865, 18282866, 18292866, 18302866, 18312866...</msg>
<status status="PASS" starttime="20201116 13:10:13.781" endtime="20201116 13:10:15.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.914" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18262726, 'wakeups': [18272865, 18282866, 18292866, 18302866, 18312866...</msg>
<status status="PASS" starttime="20201116 13:10:15.912" endtime="20201116 13:10:15.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:15.915" endtime="20201116 13:10:15.917"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.778" endtime="20201116 13:10:15.917"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.776" endtime="20201116 13:10:15.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:15.925" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [18272865, 18282866, 18292866, 18302866, 18312866, 18322866, 18332866, 18342866, 18352866, 18362866, 18372866, 18382866, 18392866, 18402866, 18412866, 18422866, 18...</msg>
<status status="PASS" starttime="20201116 13:10:15.923" endtime="20201116 13:10:15.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.930" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:15.929" endtime="20201116 13:10:15.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.932" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:15.931" endtime="20201116 13:10:15.932"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:15.926" endtime="20201116 13:10:15.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.937" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:10:15.936" endtime="20201116 13:10:15.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.939" level="INFO">VALUE: 18262726</msg>
<status status="PASS" starttime="20201116 13:10:15.938" endtime="20201116 13:10:15.939"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:15.933" endtime="20201116 13:10:15.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.944" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:15.943" endtime="20201116 13:10:15.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:15.947" level="INFO">VALUE: [18272865, 18282866, 18292866, 18302866, 18312866, 18322866, 18332866, 18342866, 18352866, 18362866, 18372866, 18382866, 18392866, 18402866, 18412866, 18422866, 18432866, 18442866, 18452866, 18462866, 18472866, 18482866, 18492866, 18502866, 18512866, 18522866, 18532866, 18542866, 18552866, 18562866, 18572866, 18582866, 18592866, 18602866, 18612866, 18622866, 18632866, 18642866, 18652866, 18662866, 18672866, 18682866, 18692866, 18702866, 18712866, 18722866, 18732866, 18742866, 18752866, 18762866, 18772866, 18782866, 18792866, 18802866, 18812866, 18822866, 18832866, 18842866, 18852866, 18862866, 18872866, 18882866, 18892866, 18902866, 18912866, 18922866, 18932866, 18942866, 18952866, 18962866, 18972866, 18982866, 18992866, 19002866, 19012866, 19022866, 19032866, 19042866, 19052866, 19062866, 19072866, 19082866, 19092866, 19102866, 19112866, 19122866, 19132866, 19142866, 19152866, 19162866, 19172866, 19182866, 19192866, 19202866, 19212866, 19222866, 19232866, 19242866, 19252866, 19262866]</msg>
<status status="PASS" starttime="20201116 13:10:15.945" endtime="20201116 13:10:15.947"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:15.941" endtime="20201116 13:10:15.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:15.954" endtime="20201116 13:10:16.245"></status>
</kw>
<msg timestamp="20201116 13:10:16.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034010556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:15.953" endtime="20201116 13:10:16.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034010556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:16.249" endtime="20201116 13:10:16.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.257" endtime="20201116 13:10:16.258"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:15.950" endtime="20201116 13:10:16.259"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:15.948" endtime="20201116 13:10:16.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:16.285" level="INFO">${RESULT} = {'diff': [0, 0.010141180999999996, 0.010001916, 0.010001014000000003, 0.010001235999999997, 0.010001084000000007, 0.01000122199999999, 0.010001097, 0.010001222000000004, 0.010001084000000007, 0.010001...</msg>
<status status="PASS" starttime="20201116 13:10:16.260" endtime="20201116 13:10:16.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.290" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:10:16.289" endtime="20201116 13:10:16.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.292" level="INFO">VALUE: 0.023869375</msg>
<status status="PASS" starttime="20201116 13:10:16.291" endtime="20201116 13:10:16.292"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.286" endtime="20201116 13:10:16.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.298" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:16.297" endtime="20201116 13:10:16.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:16.300" level="INFO">VALUE: [0.034010556, 0.044012472, 0.054013486, 0.064014722, 0.074015806, 0.084017028, 0.094018125, 0.104019347, 0.114020431, 0.124021708, 0.13402275, 0.144023972, 0.154025042, 0.164026264, 0.174027361, 0.184028583, 0.194029681, 0.204030889, 0.214031986, 0.224033292, 0.234034306, 0.244035528, 0.254036611, 0.264037833, 0.274038944, 0.284040167, 0.294041306, 0.304042472, 0.314043556, 0.324044792, 0.334045875, 0.344047097, 0.354048222, 0.364049417, 0.374050542, 0.384051736, 0.394052833, 0.404054056, 0.414055139, 0.424056361, 0.434057444, 0.444058667, 0.454059778, 0.464061, 0.474062083, 0.484063292, 0.494064444, 0.504065625, 0.514066708, 0.524067944, 0.534069014, 0.544070236, 0.554071347, 0.564072556, 0.574073722, 0.584074875, 0.594075958, 0.604077181, 0.614078278, 0.624079542, 0.634080597, 0.644081819, 0.654082917, 0.664084125, 0.674085278, 0.684086444, 0.694087542, 0.704088819, 0.714089847, 0.724091069, 0.734092167, 0.744093389, 0.754094528, 0.764095708, 0.774096875, 0.784098056, 0.794099125, 0.804100347, 0.814101444, 0.824102653, 0.834103736, 0.844104972, 0.854106056, 0.864107278, 0.874108375, 0.884109597, 0.894110722, 0.904111903, 0.914113, 0.924114236, 0.934115319, 0.944116542, 0.954117681, 0.964118861, 0.974119958, 0.984121167, 0.994122278, 1.004123514, 1.014124569, 1.024125792] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:16.299" endtime="20201116 13:10:16.300"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.294" endtime="20201116 13:10:16.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.303" endtime="20201116 13:10:16.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:16.307" endtime="20201116 13:10:16.326"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.305" endtime="20201116 13:10:16.327"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.302" endtime="20201116 13:10:16.327"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.774" endtime="20201116 13:10:16.328"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.772" endtime="20201116 13:10:16.328"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:13.771" endtime="20201116 13:10:16.328"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:16.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:16.339" endtime="20201116 13:10:18.465"></status>
</kw>
<msg timestamp="20201116 13:10:18.466" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20819158, 'wakeups': [20829327, 20839324, 20849323, 20859323, 20869323...</msg>
<status status="PASS" starttime="20201116 13:10:16.338" endtime="20201116 13:10:18.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.469" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20819158, 'wakeups': [20829327, 20839324, 20849323, 20859323, 20869323...</msg>
<status status="PASS" starttime="20201116 13:10:18.467" endtime="20201116 13:10:18.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:18.470" endtime="20201116 13:10:18.472"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.335" endtime="20201116 13:10:18.472"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.333" endtime="20201116 13:10:18.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:18.476" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [20829327, 20839324, 20849323, 20859323, 20869323, 20879323, 20889323, 20899323, 20909323, 20919323, 20929323, 20939323, 20949323, 20959323, 20969323, 20979323, 20...</msg>
<status status="PASS" starttime="20201116 13:10:18.474" endtime="20201116 13:10:18.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.481" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:18.479" endtime="20201116 13:10:18.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.483" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:18.482" endtime="20201116 13:10:18.484"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.477" endtime="20201116 13:10:18.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.489" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:10:18.487" endtime="20201116 13:10:18.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.491" level="INFO">VALUE: 20819158</msg>
<status status="PASS" starttime="20201116 13:10:18.490" endtime="20201116 13:10:18.491"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.485" endtime="20201116 13:10:18.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.496" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:18.495" endtime="20201116 13:10:18.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.499" level="INFO">VALUE: [20829327, 20839324, 20849323, 20859323, 20869323, 20879323, 20889323, 20899323, 20909323, 20919323, 20929323, 20939323, 20949323, 20959323, 20969323, 20979323, 20989323, 20999323, 21009323, 21019323, 21029323, 21039323, 21049323, 21059323, 21069323, 21079323, 21089323, 21099323, 21109323, 21119323, 21129323, 21139323, 21149323, 21159323, 21169323, 21179323, 21189323, 21199323, 21209323, 21219323, 21229323, 21239323, 21249323, 21259323, 21269323, 21279323, 21289323, 21299323, 21309323, 21319323, 21329323, 21339323, 21349323, 21359323, 21369323, 21379323, 21389323, 21399323, 21409323, 21419323, 21429323, 21439323, 21449323, 21459323, 21469323, 21479323, 21489323, 21499323, 21509323, 21519323, 21529323, 21539323, 21549323, 21559323, 21569323, 21579323, 21589323, 21599323, 21609323, 21619323, 21629323, 21639323, 21649323, 21659323, 21669323, 21679323, 21689323, 21699323, 21709323, 21719323, 21729323, 21739323, 21749323, 21759323, 21769323, 21779323, 21789323, 21799323, 21809323, 21819323]</msg>
<status status="PASS" starttime="20201116 13:10:18.497" endtime="20201116 13:10:18.499"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.493" endtime="20201116 13:10:18.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:18.506" endtime="20201116 13:10:18.797"></status>
</kw>
<msg timestamp="20201116 13:10:18.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02298775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033158681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:10:18.505" endtime="20201116 13:10:18.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02298775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033158681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201116 13:10:18.801" endtime="20201116 13:10:18.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:18.809" endtime="20201116 13:10:18.810"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.502" endtime="20201116 13:10:18.811"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.500" endtime="20201116 13:10:18.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:18.836" level="INFO">${RESULT} = {'diff': [0, 0.010170931000000001, 0.009997818999999998, 0.010000097, 0.010001195000000004, 0.010001110999999993, 0.010001250000000003, 0.010001041000000002, 0.010001223000000004, 0.010001082999999994...</msg>
<status status="PASS" starttime="20201116 13:10:18.812" endtime="20201116 13:10:18.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.841" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:10:18.840" endtime="20201116 13:10:18.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.843" level="INFO">VALUE: 0.02298775</msg>
<status status="PASS" starttime="20201116 13:10:18.842" endtime="20201116 13:10:18.844"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.837" endtime="20201116 13:10:18.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.849" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:18.848" endtime="20201116 13:10:18.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:18.851" level="INFO">VALUE: [0.033158681, 0.0431565, 0.053156597, 0.063157792, 0.073158903, 0.083160153, 0.093161194, 0.103162417, 0.1131635, 0.123164722, 0.133165806, 0.143167028, 0.153168125, 0.163169389, 0.173170444, 0.183171667, 0.193172736, 0.203173972, 0.213175097, 0.223176292, 0.233177361, 0.243178583, 0.253179694, 0.263180917, 0.273181986, 0.283183208, 0.293184319, 0.303185542, 0.313186611, 0.323187847, 0.333188958, 0.343190167, 0.35319125, 0.3631925, 0.373193556, 0.383194806, 0.393195861, 0.403197097, 0.413198222, 0.423199389, 0.433200486, 0.443201708, 0.453202819, 0.463204028, 0.473205111, 0.483206333, 0.493207431, 0.503208639, 0.51320975, 0.523210958, 0.533212056, 0.543213264, 0.553214375, 0.563215597, 0.573216681, 0.583217917, 0.593219014, 0.603220222, 0.613221306, 0.623222583, 0.633223611, 0.643224833, 0.653225986, 0.663227139, 0.673228278, 0.683229458, 0.693230556, 0.703231778, 0.713232875, 0.723234111, 0.733235167, 0.743236403, 0.753237486, 0.763238722, 0.773239833, 0.783241014, 0.793242111, 0.803243333, 0.813244417, 0.823245639, 0.833246736, 0.843247958, 0.853249042, 0.863250264, 0.873251361, 0.883252653, 0.893253667, 0.903254903, 0.913256042, 0.923257208, 0.933258306, 0.943259514, 0.953260625, 0.963261833, 0.973262917, 0.983264153, 0.99326525, 1.003266458, 1.013267583, 1.023268778] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:18.850" endtime="20201116 13:10:18.852"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.845" endtime="20201116 13:10:18.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:18.855" endtime="20201116 13:10:18.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:18.859" endtime="20201116 13:10:18.878"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.857" endtime="20201116 13:10:18.879"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.853" endtime="20201116 13:10:18.879"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.332" endtime="20201116 13:10:18.879"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.329" endtime="20201116 13:10:18.880"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:16.329" endtime="20201116 13:10:18.880"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:10:18.883" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:18.891" endtime="20201116 13:10:21.019"></status>
</kw>
<msg timestamp="20201116 13:10:21.019" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23370695, 'wakeups': [23380891, 23390886, 23400886, 23410886, 234208...</msg>
<status status="PASS" starttime="20201116 13:10:18.889" endtime="20201116 13:10:21.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.022" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23370695, 'wakeups': [23380891, 23390886, 23400886, 23410886, 234208...</msg>
<status status="PASS" starttime="20201116 13:10:21.020" endtime="20201116 13:10:21.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:21.023" endtime="20201116 13:10:21.025"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.887" endtime="20201116 13:10:21.026"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.885" endtime="20201116 13:10:21.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:21.029" level="INFO">${RESULT} = {'timer-interval': 10000, 'wakeups': [23380891, 23390886, 23400886, 23410886, 23420886, 23430886, 23440886, 23450886, 23460886, 23470886, 23480886, 23490886, 23500886, 23510886, 23520886, 23530886, 23...</msg>
<status status="PASS" starttime="20201116 13:10:21.027" endtime="20201116 13:10:21.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.033" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:10:21.032" endtime="20201116 13:10:21.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.035" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:10:21.034" endtime="20201116 13:10:21.036"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.030" endtime="20201116 13:10:21.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.041" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:10:21.039" endtime="20201116 13:10:21.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.043" level="INFO">VALUE: 23370695</msg>
<status status="PASS" starttime="20201116 13:10:21.042" endtime="20201116 13:10:21.043"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.037" endtime="20201116 13:10:21.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.048" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:21.047" endtime="20201116 13:10:21.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.050" level="INFO">VALUE: [23380891, 23390886, 23400886, 23410886, 23420886, 23430886, 23440886, 23450886, 23460886, 23470886, 23480886, 23490886, 23500886, 23510886, 23520886, 23530886, 23540886, 23550886, 23560886, 23570886, 23580886, 23590886, 23600886, 23610886, 23620886, 23630886, 23640886, 23650886, 23660886, 23670886, 23680886, 23690886, 23700886, 23710886, 23720886, 23730886, 23740886, 23750886, 23760886, 23770886, 23780886, 23790886, 23800886, 23810886, 23820886, 23830886, 23840886, 23850886, 23860886, 23870886, 23880886, 23890886, 23900886, 23910886, 23920886, 23930886, 23940886, 23950886, 23960886, 23970886, 23980886, 23990886, 24000886, 24010886, 24020886, 24030886, 24040886, 24050886, 24060886, 24070886, 24080886, 24090886, 24100886, 24110886, 24120886, 24130886, 24140886, 24150886, 24160886, 24170886, 24180886, 24190886, 24200886, 24210886, 24220886, 24230886, 24240886, 24250886, 24260886, 24270886, 24280886, 24290886, 24300886, 24310886, 24320886, 24330886, 24340886, 24350886, 24360886, 24370886]</msg>
<status status="PASS" starttime="20201116 13:10:21.049" endtime="20201116 13:10:21.055"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.044" endtime="20201116 13:10:21.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:21.064" endtime="20201116 13:10:21.354"></status>
</kw>
<msg timestamp="20201116 13:10:21.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022946958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033145222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:21.062" endtime="20201116 13:10:21.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022946958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033145222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:10:21.358" endtime="20201116 13:10:21.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:21.366" endtime="20201116 13:10:21.368"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.060" endtime="20201116 13:10:21.368"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.057" endtime="20201116 13:10:21.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:10:21.394" level="INFO">${RESULT} = {'diff': [0, 0.010198264000000002, 0.009995903, 0.010001083000000001, 0.010001194999999997, 0.010001110999999993, 0.010001194000000005, 0.010001098, 0.010001262999999996, 0.010001042000000002, 0.01000...</msg>
<status status="PASS" starttime="20201116 13:10:21.370" endtime="20201116 13:10:21.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.398" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:10:21.397" endtime="20201116 13:10:21.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.400" level="INFO">VALUE: 0.022946958</msg>
<status status="PASS" starttime="20201116 13:10:21.399" endtime="20201116 13:10:21.401"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.395" endtime="20201116 13:10:21.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.406" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:10:21.405" endtime="20201116 13:10:21.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:10:21.408" level="INFO">VALUE: [0.033145222, 0.043141125, 0.053142208, 0.063143403, 0.073144514, 0.083145708, 0.093146806, 0.103148069, 0.113149111, 0.123150333, 0.133151417, 0.143152653, 0.153153722, 0.163154944, 0.173156028, 0.18315725, 0.193158333, 0.203159625, 0.213160653, 0.223161903, 0.233162958, 0.243164181, 0.253165278, 0.2631665, 0.273167569, 0.283168806, 0.293169889, 0.303171097, 0.313172194, 0.323173417, 0.3331745, 0.343175722, 0.353176819, 0.363178056, 0.373179139, 0.383180347, 0.393181431, 0.403182653, 0.41318375, 0.423184958, 0.433186056, 0.443187306, 0.453188389, 0.463189583, 0.473190667, 0.483191917, 0.493193, 0.503194222, 0.513195292, 0.523196514, 0.533197597, 0.543198819, 0.553199917, 0.563201125, 0.573202236, 0.583203444, 0.593204542, 0.603205764, 0.613206861, 0.623208056, 0.633209153, 0.643210375, 0.653211472, 0.663212681, 0.673213806, 0.683214986, 0.693216083, 0.703217306, 0.713218389, 0.723219611, 0.733220722, 0.743221931, 0.753223014, 0.763224236, 0.773225319, 0.783226542, 0.793227639, 0.803228889, 0.813229972, 0.823231181, 0.83323225, 0.843233486, 0.853234569, 0.863235792, 0.873236875, 0.883238083, 0.893239181, 0.903240417, 0.9132415, 0.923242708, 0.933243806, 0.943245014, 0.953246111, 0.963247375, 0.973248417, 0.983249639, 0.993250736, 1.003251958, 1.013253042, 1.023254292] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:10:21.407" endtime="20201116 13:10:21.409"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.402" endtime="20201116 13:10:21.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:10:21.411" endtime="20201116 13:10:21.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:10:21.415" endtime="20201116 13:10:21.435"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.413" endtime="20201116 13:10:21.435"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:21.410" endtime="20201116 13:10:21.436"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.883" endtime="20201116 13:10:21.436"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.881" endtime="20201116 13:10:21.436"></status>
</kw>
<status status="PASS" starttime="20201116 13:10:18.880" endtime="20201116 13:10:21.436"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:55.925" endtime="20201116 13:10:21.436"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:55.851" endtime="20201116 13:10:21.438" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:54.299" endtime="20201116 13:10:21.443"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:09:52.282" endtime="20201116 13:10:21.453"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
