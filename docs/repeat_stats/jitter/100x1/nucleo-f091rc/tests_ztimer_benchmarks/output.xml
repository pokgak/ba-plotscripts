<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201116 13:09:18.055" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:18.617" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:18.626" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:19.739" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:18.616" endtime="20201116 13:09:19.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:19.742" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:19.740" endtime="20201116 13:09:19.742"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:18.615" endtime="20201116 13:09:19.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:19.745" endtime="20201116 13:09:19.929"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.743" endtime="20201116 13:09:19.929"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:19.942" endtime="20201116 13:09:19.957"></status>
</kw>
<msg timestamp="20201116 13:09:19.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201116 13:09:19.941" endtime="20201116 13:09:19.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:19.960" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201116 13:09:19.958" endtime="20201116 13:09:19.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:19.963" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:19.961" endtime="20201116 13:09:19.963"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:19.938" endtime="20201116 13:09:19.964"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:19.936" endtime="20201116 13:09:19.965"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.935" endtime="20201116 13:09:19.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:19.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:19.968" endtime="20201116 13:09:19.969"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.966" endtime="20201116 13:09:19.969"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.934" endtime="20201116 13:09:19.970"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.933" endtime="20201116 13:09:19.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:19.970" endtime="20201116 13:09:19.972"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.932" endtime="20201116 13:09:19.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:19.973" endtime="20201116 13:09:19.975"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.930" endtime="20201116 13:09:19.975"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:18.613" endtime="20201116 13:09:19.976"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:19.982" endtime="20201116 13:09:20.001"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.980" endtime="20201116 13:09:20.002"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:20.016" endtime="20201116 13:09:20.030"></status>
</kw>
<msg timestamp="20201116 13:09:20.030" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:20.014" endtime="20201116 13:09:20.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:20.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:20.031" endtime="20201116 13:09:20.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:20.036" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:20.034" endtime="20201116 13:09:20.036"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:20.011" endtime="20201116 13:09:20.037"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:20.009" endtime="20201116 13:09:20.037"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.007" endtime="20201116 13:09:20.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:20.041" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:20.041" endtime="20201116 13:09:20.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.039" endtime="20201116 13:09:20.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.006" endtime="20201116 13:09:20.042"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.006" endtime="20201116 13:09:20.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:20.043" endtime="20201116 13:09:20.045"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.004" endtime="20201116 13:09:20.045"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.003" endtime="20201116 13:09:20.046"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:19.979" endtime="20201116 13:09:20.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:20.053" endtime="20201116 13:09:20.062"></status>
</kw>
<msg timestamp="20201116 13:09:20.063" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:20.051" endtime="20201116 13:09:20.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:20.065" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:20.064" endtime="20201116 13:09:20.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:20.066" endtime="20201116 13:09:20.068"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.049" endtime="20201116 13:09:20.068"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.047" endtime="20201116 13:09:20.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:20.073" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201116 13:09:20.072" endtime="20201116 13:09:20.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:20.075" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201116 13:09:20.074" endtime="20201116 13:09:20.075"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.070" endtime="20201116 13:09:20.076"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:19.976" endtime="20201116 13:09:20.077" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:18.166" endtime="20201116 13:09:20.080"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201116 13:09:20.135" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201116 13:09:20.143" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201116 13:09:21.251" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201116 13:09:20.133" endtime="20201116 13:09:21.252"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201116 13:09:21.255" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201116 13:09:21.253" endtime="20201116 13:09:21.255"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.132" endtime="20201116 13:09:21.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:21.258" endtime="20201116 13:09:21.479"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.256" endtime="20201116 13:09:21.480"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:21.492" endtime="20201116 13:09:21.506"></status>
</kw>
<msg timestamp="20201116 13:09:21.506" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:21.491" endtime="20201116 13:09:21.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:21.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:21.507" endtime="20201116 13:09:21.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:21.512" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:21.510" endtime="20201116 13:09:21.512"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:21.488" endtime="20201116 13:09:21.513"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:21.486" endtime="20201116 13:09:21.513"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.485" endtime="20201116 13:09:21.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:21.518" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:21.517" endtime="20201116 13:09:21.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.515" endtime="20201116 13:09:21.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.484" endtime="20201116 13:09:21.518"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.483" endtime="20201116 13:09:21.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:21.519" endtime="20201116 13:09:21.521"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.482" endtime="20201116 13:09:21.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:21.522" endtime="20201116 13:09:21.523"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.480" endtime="20201116 13:09:21.524"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:20.131" endtime="20201116 13:09:21.524"></status>
</kw>
<test id="s1-s2-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:21.532" endtime="20201116 13:09:21.551"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.529" endtime="20201116 13:09:21.552"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:21.565" endtime="20201116 13:09:21.579"></status>
</kw>
<msg timestamp="20201116 13:09:21.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:21.563" endtime="20201116 13:09:21.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:21.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201116 13:09:21.580" endtime="20201116 13:09:21.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201116 13:09:21.585" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201116 13:09:21.583" endtime="20201116 13:09:21.585"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:21.560" endtime="20201116 13:09:21.586"></status>
</kw>
<status status="FAIL" starttime="20201116 13:09:21.558" endtime="20201116 13:09:21.587"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.557" endtime="20201116 13:09:21.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201116 13:09:21.590" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201116 13:09:21.590" endtime="20201116 13:09:21.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.588" endtime="20201116 13:09:21.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.556" endtime="20201116 13:09:21.591"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.556" endtime="20201116 13:09:21.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:21.592" endtime="20201116 13:09:21.594"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.554" endtime="20201116 13:09:21.594"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.553" endtime="20201116 13:09:21.595"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.528" endtime="20201116 13:09:21.595"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:21.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:21.608" endtime="20201116 13:09:23.699"></status>
</kw>
<msg timestamp="20201116 13:09:23.699" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 405103, 'wakeups': [415120, 425121, 435121, 445121, 455121, 465121, 47...</msg>
<status status="PASS" starttime="20201116 13:09:21.605" endtime="20201116 13:09:23.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.702" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 405103, 'wakeups': [415120, 425121, 435121, 445121, 455121, 465121, 47...</msg>
<status status="PASS" starttime="20201116 13:09:23.700" endtime="20201116 13:09:23.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:23.703" endtime="20201116 13:09:23.705"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.602" endtime="20201116 13:09:23.705"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.601" endtime="20201116 13:09:23.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:23.709" level="INFO">${RESULT} = {'wakeups': [415120, 425121, 435121, 445121, 455121, 465121, 475121, 485121, 495121, 505121, 515121, 525121, 535121, 545121, 555121, 565121, 575121, 585121, 595121, 605121, 615121, 625121, 635121, 645...</msg>
<status status="PASS" starttime="20201116 13:09:23.707" endtime="20201116 13:09:23.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.713" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:23.712" endtime="20201116 13:09:23.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.715" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:23.714" endtime="20201116 13:09:23.715"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.709" endtime="20201116 13:09:23.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.719" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:23.718" endtime="20201116 13:09:23.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.721" level="INFO">VALUE: 405103</msg>
<status status="PASS" starttime="20201116 13:09:23.721" endtime="20201116 13:09:23.722"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.716" endtime="20201116 13:09:23.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.727" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:23.726" endtime="20201116 13:09:23.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:23.729" level="INFO">VALUE: [415120, 425121, 435121, 445121, 455121, 465121, 475121, 485121, 495121, 505121, 515121, 525121, 535121, 545121, 555121, 565121, 575121, 585121, 595121, 605121, 615121, 625121, 635121, 645121, 655121, 665121, 675121, 685121, 695121, 705121, 715121, 725121, 735121, 745121, 755121, 765121, 775121, 785121, 795121, 805121, 815121, 825121, 835121, 845121, 855121, 865121, 875121, 885121, 895121, 905121, 915121, 925121, 935121, 945121, 955121, 965121, 975121, 985121, 995121, 1005121, 1015121, 1025121, 1035121, 1045121, 1055121, 1065121, 1075121, 1085121, 1095121, 1105121, 1115121, 1125121, 1135121, 1145121, 1155121, 1165121, 1175121, 1185121, 1195121, 1205121, 1215121, 1225121, 1235121, 1245121, 1255121, 1265121, 1275121, 1285121, 1295121, 1305121, 1315121, 1325121, 1335121, 1345121, 1355121, 1365121, 1375121, 1385121, 1395121, 1405121]</msg>
<status status="PASS" starttime="20201116 13:09:23.728" endtime="20201116 13:09:23.729"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.723" endtime="20201116 13:09:23.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:23.736" endtime="20201116 13:09:24.033"></status>
</kw>
<msg timestamp="20201116 13:09:24.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066376167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076395111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:23.735" endtime="20201116 13:09:24.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066376167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076395111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:24.036" endtime="20201116 13:09:24.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.044" endtime="20201116 13:09:24.046"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.732" endtime="20201116 13:09:24.046"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:23.730" endtime="20201116 13:09:24.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:24.071" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:24.047" endtime="20201116 13:09:24.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.075" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201116 13:09:24.074" endtime="20201116 13:09:24.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.077" level="INFO">VALUE: 0.066376167</msg>
<status status="PASS" starttime="20201116 13:09:24.076" endtime="20201116 13:09:24.078"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.072" endtime="20201116 13:09:24.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.083" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:24.082" endtime="20201116 13:09:24.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:24.085" level="INFO">VALUE: [0.076395111, 0.086397319, 0.096398417, 0.106399639, 0.11640075, 0.126401944, 0.136403042, 0.146404264, 0.156405361, 0.166406583, 0.176407694, 0.186408917, 0.19641, 0.206411208, 0.216412319, 0.226413528, 0.236414625, 0.246415833, 0.256416944, 0.266418153, 0.27641925, 0.286420472, 0.296421556, 0.306422792, 0.316423875, 0.326425111, 0.336426194, 0.346427417, 0.356428528, 0.366429736, 0.376430819, 0.386432042, 0.396433139, 0.406434375, 0.4164355, 0.426436681, 0.436437792, 0.446438986, 0.456440125, 0.466441306, 0.476442431, 0.486443639, 0.496444722, 0.506445944, 0.516447042, 0.52644825, 0.536449347, 0.546450569, 0.556451681, 0.566452889, 0.576454014, 0.586455194, 0.596456292, 0.606457528, 0.616458611, 0.626459833, 0.636461, 0.646462153, 0.656463264, 0.666464458, 0.676465556, 0.686466792, 0.696467889, 0.706469097, 0.716470194, 0.726471417, 0.7364725, 0.746473736, 0.756474819, 0.766476042, 0.776477139, 0.786478375, 0.796479444, 0.806480667, 0.816481778, 0.826482986, 0.836484111, 0.846485333, 0.856486417, 0.866487639, 0.876488708, 0.886489944, 0.896491028, 0.90649225, 0.916493347, 0.926494569, 0.936495722, 0.946496889, 0.956497972, 0.966499194, 0.976500292, 0.986501583, 0.996502611, 1.006503833, 1.016504944, 1.026506153, 1.036507236, 1.046508458, 1.056509556, 1.066510806] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:24.084" endtime="20201116 13:09:24.085"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.079" endtime="20201116 13:09:24.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.088" endtime="20201116 13:09:24.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:24.092" endtime="20201116 13:09:24.111"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.090" endtime="20201116 13:09:24.112"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.086" endtime="20201116 13:09:24.112"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.599" endtime="20201116 13:09:24.113"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.597" endtime="20201116 13:09:24.113"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.596" endtime="20201116 13:09:24.113"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:24.116" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:24.124" endtime="20201116 13:09:26.234"></status>
</kw>
<msg timestamp="20201116 13:09:26.236" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2920777, 'wakeups': [2930805, 2940804, 2950804, 2960804, 2970804, 2980...</msg>
<status status="PASS" starttime="20201116 13:09:24.122" endtime="20201116 13:09:26.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 2920777, 'wakeups': [2930805, 2940804, 2950804, 2960804, 2970804, 2980...</msg>
<status status="PASS" starttime="20201116 13:09:26.238" endtime="20201116 13:09:26.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.244" endtime="20201116 13:09:26.246"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.120" endtime="20201116 13:09:26.246"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.118" endtime="20201116 13:09:26.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:26.249" level="INFO">${RESULT} = {'wakeups': [2930805, 2940804, 2950804, 2960804, 2970804, 2980804, 2990804, 3000804, 3010804, 3020804, 3030804, 3040804, 3050804, 3060804, 3070804, 3080804, 3090804, 3100804, 3110804, 3120804, 3130804...</msg>
<status status="PASS" starttime="20201116 13:09:26.248" endtime="20201116 13:09:26.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.253" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:26.252" endtime="20201116 13:09:26.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.257" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:26.255" endtime="20201116 13:09:26.257"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.250" endtime="20201116 13:09:26.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.262" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201116 13:09:26.261" endtime="20201116 13:09:26.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.264" level="INFO">VALUE: 2920777</msg>
<status status="PASS" starttime="20201116 13:09:26.263" endtime="20201116 13:09:26.264"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.258" endtime="20201116 13:09:26.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.268" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:26.267" endtime="20201116 13:09:26.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.271" level="INFO">VALUE: [2930805, 2940804, 2950804, 2960804, 2970804, 2980804, 2990804, 3000804, 3010804, 3020804, 3030804, 3040804, 3050804, 3060804, 3070804, 3080804, 3090804, 3100804, 3110804, 3120804, 3130804, 3140804, 3150804, 3160804, 3170804, 3180804, 3190804, 3200804, 3210804, 3220804, 3230804, 3240804, 3250804, 3260804, 3270804, 3280804, 3290804, 3300804, 3310804, 3320804, 3330804, 3340804, 3350804, 3360804, 3370804, 3380804, 3390804, 3400804, 3410804, 3420804, 3430804, 3440804, 3450804, 3460804, 3470804, 3480804, 3490804, 3500804, 3510804, 3520804, 3530804, 3540804, 3550804, 3560804, 3570804, 3580804, 3590804, 3600804, 3610804, 3620804, 3630804, 3640804, 3650804, 3660804, 3670804, 3680804, 3690804, 3700804, 3710804, 3720804, 3730804, 3740804, 3750804, 3760804, 3770804, 3780804, 3790804, 3800804, 3810804, 3820804, 3830804, 3840804, 3850804, 3860804, 3870804, 3880804, 3890804, 3900804, 3910804, 3920804]</msg>
<status status="PASS" starttime="20201116 13:09:26.270" endtime="20201116 13:09:26.271"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.265" endtime="20201116 13:09:26.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.278" endtime="20201116 13:09:26.569"></status>
</kw>
<msg timestamp="20201116 13:09:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032106264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:26.277" endtime="20201116 13:09:26.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032106264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:26.573" endtime="20201116 13:09:26.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.581" endtime="20201116 13:09:26.582"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.274" endtime="20201116 13:09:26.583"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.272" endtime="20201116 13:09:26.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:26.608" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:26.584" endtime="20201116 13:09:26.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.614" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201116 13:09:26.613" endtime="20201116 13:09:26.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.616" level="INFO">VALUE: 0.022075806</msg>
<status status="PASS" starttime="20201116 13:09:26.615" endtime="20201116 13:09:26.616"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.609" endtime="20201116 13:09:26.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.621" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:26.620" endtime="20201116 13:09:26.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:26.624" level="INFO">VALUE: [0.032106264, 0.042106472, 0.052107569, 0.062108861, 0.072109917, 0.082111111, 0.092112208, 0.102113444, 0.1121145, 0.122115736, 0.132116819, 0.142118056, 0.152119125, 0.162120347, 0.172121431, 0.182122653, 0.192123764, 0.202124972, 0.212126056, 0.222127292, 0.232128389, 0.242129597, 0.252130694, 0.262131903, 0.272133, 0.282134222, 0.292135333, 0.302136556, 0.312137639, 0.322138847, 0.332139944, 0.342141236, 0.35214225, 0.362143486, 0.372144597, 0.382145806, 0.392146931, 0.402148111, 0.412149194, 0.422150417, 0.432151542, 0.44215275, 0.452153833, 0.462155056, 0.472156153, 0.482157375, 0.492158458, 0.502159667, 0.512160778, 0.522161986, 0.532163097, 0.542164306, 0.552165389, 0.562166611, 0.572167708, 0.582168944, 0.592170042, 0.60217125, 0.612172333, 0.622173556, 0.632174667, 0.642175875, 0.652176986, 0.662178208, 0.672179278, 0.682180514, 0.692181597, 0.702182819, 0.712183903, 0.722185125, 0.732186306, 0.742187444, 0.752188528, 0.76218975, 0.772190861, 0.782192083, 0.792193167, 0.802194389, 0.812195472, 0.822196764, 0.832197792, 0.842199028, 0.852200125, 0.862201319, 0.872202472, 0.882203639, 0.892204736, 0.902205958, 0.912207042, 0.922208264, 0.932209375, 0.942210569, 0.952211667, 0.962212917, 0.972213986, 0.98221525, 0.992216292, 1.002217528, 1.012218625, 1.022219833] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:26.623" endtime="20201116 13:09:26.624"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.617" endtime="20201116 13:09:26.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.627" endtime="20201116 13:09:26.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:26.631" endtime="20201116 13:09:26.650"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.629" endtime="20201116 13:09:26.651"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.625" endtime="20201116 13:09:26.651"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.116" endtime="20201116 13:09:26.652"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.114" endtime="20201116 13:09:26.652"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:24.113" endtime="20201116 13:09:26.652"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:26.655" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:26.663" endtime="20201116 13:09:28.768"></status>
</kw>
<msg timestamp="20201116 13:09:28.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5460335, 'wakeups': [5470378, 5480376, 5490376, 5500376, 5510376, 5520...</msg>
<status status="PASS" starttime="20201116 13:09:26.662" endtime="20201116 13:09:28.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 5460335, 'wakeups': [5470378, 5480376, 5490376, 5500376, 5510376, 5520...</msg>
<status status="PASS" starttime="20201116 13:09:28.770" endtime="20201116 13:09:28.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.772" endtime="20201116 13:09:28.774"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.659" endtime="20201116 13:09:28.775"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.657" endtime="20201116 13:09:28.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:28.778" level="INFO">${RESULT} = {'wakeups': [5470378, 5480376, 5490376, 5500376, 5510376, 5520376, 5530376, 5540376, 5550376, 5560376, 5570376, 5580376, 5590376, 5600376, 5610376, 5620376, 5630376, 5640376, 5650376, 5660376, 5670376...</msg>
<status status="PASS" starttime="20201116 13:09:28.776" endtime="20201116 13:09:28.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.782" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:28.781" endtime="20201116 13:09:28.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.784" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:28.783" endtime="20201116 13:09:28.784"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.778" endtime="20201116 13:09:28.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.788" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201116 13:09:28.788" endtime="20201116 13:09:28.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.791" level="INFO">VALUE: 5460335</msg>
<status status="PASS" starttime="20201116 13:09:28.790" endtime="20201116 13:09:28.791"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.785" endtime="20201116 13:09:28.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.795" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:28.794" endtime="20201116 13:09:28.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:28.798" level="INFO">VALUE: [5470378, 5480376, 5490376, 5500376, 5510376, 5520376, 5530376, 5540376, 5550376, 5560376, 5570376, 5580376, 5590376, 5600376, 5610376, 5620376, 5630376, 5640376, 5650376, 5660376, 5670376, 5680376, 5690376, 5700376, 5710376, 5720376, 5730376, 5740376, 5750376, 5760376, 5770376, 5780376, 5790376, 5800376, 5810376, 5820376, 5830376, 5840376, 5850376, 5860376, 5870376, 5880376, 5890376, 5900376, 5910376, 5920376, 5930376, 5940376, 5950376, 5960376, 5970376, 5980376, 5990376, 6000376, 6010376, 6020376, 6030376, 6040376, 6050376, 6060376, 6070376, 6080376, 6090376, 6100376, 6110376, 6120376, 6130376, 6140376, 6150376, 6160376, 6170376, 6180376, 6190376, 6200376, 6210376, 6220376, 6230376, 6240376, 6250376, 6260376, 6270376, 6280376, 6290376, 6300376, 6310376, 6320376, 6330376, 6340376, 6350376, 6360376, 6370376, 6380376, 6390376, 6400376, 6410376, 6420376, 6430376, 6440376, 6450376, 6460376]</msg>
<status status="PASS" starttime="20201116 13:09:28.797" endtime="20201116 13:09:28.798"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.792" endtime="20201116 13:09:28.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:28.806" endtime="20201116 13:09:29.098"></status>
</kw>
<msg timestamp="20201116 13:09:29.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032736361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:28.804" endtime="20201116 13:09:29.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:29.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032736361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:29.102" endtime="20201116 13:09:29.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:29.110" endtime="20201116 13:09:29.115"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.802" endtime="20201116 13:09:29.116"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:28.799" endtime="20201116 13:09:29.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:29.140" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:29.117" endtime="20201116 13:09:29.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:29.144" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201116 13:09:29.143" endtime="20201116 13:09:29.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:29.146" level="INFO">VALUE: 0.022691875</msg>
<status status="PASS" starttime="20201116 13:09:29.145" endtime="20201116 13:09:29.147"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.141" endtime="20201116 13:09:29.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:29.152" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:29.151" endtime="20201116 13:09:29.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:29.154" level="INFO">VALUE: [0.032736361, 0.042735792, 0.052736889, 0.062738111, 0.072739194, 0.082740403, 0.0927415, 0.102742722, 0.112743806, 0.122745028, 0.132746194, 0.142747333, 0.152748431, 0.162749639, 0.172750736, 0.182751958, 0.192753042, 0.202754319, 0.212755361, 0.222756583, 0.232757681, 0.242758903, 0.252759972, 0.262761194, 0.272762306, 0.282763528, 0.292764597, 0.302765819, 0.312766986, 0.322768125, 0.332769222, 0.342770444, 0.352771528, 0.362772764, 0.372773861, 0.382775069, 0.392776167, 0.402777375, 0.412778542, 0.422779681, 0.432780778, 0.442782, 0.452783167, 0.462784375, 0.472785403, 0.482786639, 0.492787736, 0.502788944, 0.512790028, 0.52279125, 0.532792347, 0.542793556, 0.552794681, 0.562795861, 0.572796958, 0.582798181, 0.592799264, 0.602800514, 0.612801583, 0.622802806, 0.632803889, 0.642805111, 0.65280625, 0.662807417, 0.672808597, 0.682809792, 0.692810833, 0.702812042, 0.712813139, 0.722814375, 0.7328155, 0.742816667, 0.752817764, 0.762819, 0.772820069, 0.782821292, 0.792822389, 0.802823597, 0.812824722, 0.822825931, 0.832827, 0.842828236, 0.852829319, 0.862830556, 0.872831625, 0.882832875, 0.892833972, 0.902835153, 0.91283625, 0.922837486, 0.932838611, 0.942839778, 0.952840889, 0.962842097, 0.972843194, 0.982844403, 0.992845569, 1.002846722, 1.012847806, 1.022849028] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:29.153" endtime="20201116 13:09:29.154"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.148" endtime="20201116 13:09:29.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:29.157" endtime="20201116 13:09:29.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:29.160" endtime="20201116 13:09:29.180"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.159" endtime="20201116 13:09:29.181"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.155" endtime="20201116 13:09:29.181"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.655" endtime="20201116 13:09:29.182"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.653" endtime="20201116 13:09:29.182"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:26.652" endtime="20201116 13:09:29.182"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:29.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:29.193" endtime="20201116 13:09:31.304"></status>
</kw>
<msg timestamp="20201116 13:09:31.305" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 7989641, 'wakeups': [7999699, 8009698, 8019698, 8029697, 8039698, 8049...</msg>
<status status="PASS" starttime="20201116 13:09:29.191" endtime="20201116 13:09:31.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 7989641, 'wakeups': [7999699, 8009698, 8019698, 8029697, 8039698, 8049...</msg>
<status status="PASS" starttime="20201116 13:09:31.307" endtime="20201116 13:09:31.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.313" endtime="20201116 13:09:31.316"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.189" endtime="20201116 13:09:31.317"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.187" endtime="20201116 13:09:31.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:31.321" level="INFO">${RESULT} = {'wakeups': [7999699, 8009698, 8019698, 8029697, 8039698, 8049697, 8059698, 8069697, 8079698, 8089697, 8099698, 8109697, 8119698, 8129697, 8139698, 8149697, 8159698, 8169697, 8179698, 8189697, 8199698...</msg>
<status status="PASS" starttime="20201116 13:09:31.319" endtime="20201116 13:09:31.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.325" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:31.324" endtime="20201116 13:09:31.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.327" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:31.326" endtime="20201116 13:09:31.327"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.322" endtime="20201116 13:09:31.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.332" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201116 13:09:31.331" endtime="20201116 13:09:31.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.334" level="INFO">VALUE: 7989641</msg>
<status status="PASS" starttime="20201116 13:09:31.333" endtime="20201116 13:09:31.334"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.329" endtime="20201116 13:09:31.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.339" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:31.338" endtime="20201116 13:09:31.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.341" level="INFO">VALUE: [7999699, 8009698, 8019698, 8029697, 8039698, 8049697, 8059698, 8069697, 8079698, 8089697, 8099698, 8109697, 8119698, 8129697, 8139698, 8149697, 8159698, 8169697, 8179698, 8189697, 8199698, 8209697, 8219698, 8229697, 8239698, 8249697, 8259698, 8269697, 8279698, 8289697, 8299698, 8309697, 8319698, 8329697, 8339698, 8349697, 8359698, 8369697, 8379698, 8389697, 8399698, 8409697, 8419698, 8429697, 8439698, 8449697, 8459698, 8469697, 8479698, 8489697, 8499698, 8509697, 8519698, 8529697, 8539698, 8549697, 8559698, 8569697, 8579698, 8589697, 8599698, 8609697, 8619698, 8629697, 8639698, 8649697, 8659698, 8669697, 8679698, 8689697, 8699698, 8709697, 8719698, 8729697, 8739698, 8749697, 8759698, 8769697, 8779698, 8789697, 8799698, 8809697, 8819698, 8829697, 8839698, 8849697, 8859698, 8869697, 8879698, 8889697, 8899698, 8909697, 8919698, 8929697, 8939698, 8949697, 8959698, 8969697, 8979698, 8989697]</msg>
<status status="PASS" starttime="20201116 13:09:31.340" endtime="20201116 13:09:31.341"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.335" endtime="20201116 13:09:31.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.348" endtime="20201116 13:09:31.638"></status>
</kw>
<msg timestamp="20201116 13:09:31.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032116861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:31.347" endtime="20201116 13:09:31.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032116861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:31.642" endtime="20201116 13:09:31.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.650" endtime="20201116 13:09:31.652"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.344" endtime="20201116 13:09:31.652"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.342" endtime="20201116 13:09:31.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:31.677" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:31.653" endtime="20201116 13:09:31.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.682" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201116 13:09:31.681" endtime="20201116 13:09:31.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.684" level="INFO">VALUE: 0.022057167</msg>
<status status="PASS" starttime="20201116 13:09:31.683" endtime="20201116 13:09:31.684"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.678" endtime="20201116 13:09:31.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.689" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:31.688" endtime="20201116 13:09:31.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:31.691" level="INFO">VALUE: [0.032116861, 0.042117264, 0.052117597, 0.062118569, 0.072119917, 0.082120875, 0.092122208, 0.102123181, 0.112124528, 0.122125486, 0.132126875, 0.142127806, 0.152129125, 0.162130125, 0.172131444, 0.182132403, 0.19213375, 0.202134722, 0.212136069, 0.222137042, 0.232138431, 0.242139333, 0.252140667, 0.262141639, 0.272143028, 0.282143958, 0.292145319, 0.302146292, 0.312147597, 0.322148569, 0.332149917, 0.342150875, 0.352152222, 0.362153181, 0.372154542, 0.382155514, 0.392156847, 0.402157806, 0.412159139, 0.422160167, 0.432161458, 0.442162417, 0.452163764, 0.462164778, 0.472166069, 0.482167056, 0.492168375, 0.502169361, 0.512170694, 0.522171667, 0.532173, 0.542173972, 0.552175306, 0.562176278, 0.572177611, 0.582178583, 0.592179944, 0.602180889, 0.612182236, 0.622183194, 0.632184542, 0.642185514, 0.652186889, 0.662187833, 0.672189167, 0.682190125, 0.692191472, 0.702192431, 0.712193792, 0.72219475, 0.732196083, 0.742197056, 0.752198389, 0.762199375, 0.772200708, 0.782201681, 0.792203014, 0.802203986, 0.812205333, 0.822206292, 0.832207639, 0.842208597, 0.852209944, 0.862210903, 0.87221225, 0.882213236, 0.892214556, 0.902215528, 0.912216875, 0.922217847, 0.932219194, 0.942220139, 0.9522215, 0.962222458, 0.972223792, 0.982224764, 0.992226111, 1.002227069, 1.012228417, 1.022229403] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:31.690" endtime="20201116 13:09:31.692"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.685" endtime="20201116 13:09:31.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.695" endtime="20201116 13:09:31.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:31.698" endtime="20201116 13:09:31.717"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.696" endtime="20201116 13:09:31.718"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.693" endtime="20201116 13:09:31.718"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.185" endtime="20201116 13:09:31.719"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.183" endtime="20201116 13:09:31.719"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:29.182" endtime="20201116 13:09:31.719"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:31.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:31.730" endtime="20201116 13:09:33.853"></status>
</kw>
<msg timestamp="20201116 13:09:33.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10527571, 'wakeups': [10537644, 10547644, 10557644, 10567644, 10577644...</msg>
<status status="PASS" starttime="20201116 13:09:31.728" endtime="20201116 13:09:33.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.860" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 10527571, 'wakeups': [10537644, 10547644, 10557644, 10567644, 10577644...</msg>
<status status="PASS" starttime="20201116 13:09:33.856" endtime="20201116 13:09:33.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.862" endtime="20201116 13:09:33.866"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.726" endtime="20201116 13:09:33.867"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.724" endtime="20201116 13:09:33.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:33.873" level="INFO">${RESULT} = {'wakeups': [10537644, 10547644, 10557644, 10567644, 10577644, 10587644, 10597644, 10607644, 10617644, 10627644, 10637644, 10647644, 10657644, 10667644, 10677644, 10687644, 10697644, 10707644, 1071764...</msg>
<status status="PASS" starttime="20201116 13:09:33.869" endtime="20201116 13:09:33.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.877" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:33.876" endtime="20201116 13:09:33.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.879" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:33.878" endtime="20201116 13:09:33.879"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.874" endtime="20201116 13:09:33.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.884" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201116 13:09:33.883" endtime="20201116 13:09:33.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.886" level="INFO">VALUE: 10527571</msg>
<status status="PASS" starttime="20201116 13:09:33.885" endtime="20201116 13:09:33.887"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.880" endtime="20201116 13:09:33.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.891" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:33.890" endtime="20201116 13:09:33.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:33.893" level="INFO">VALUE: [10537644, 10547644, 10557644, 10567644, 10577644, 10587644, 10597644, 10607644, 10617644, 10627644, 10637644, 10647644, 10657644, 10667644, 10677644, 10687644, 10697644, 10707644, 10717644, 10727644, 10737644, 10747644, 10757644, 10767644, 10777644, 10787644, 10797644, 10807644, 10817644, 10827644, 10837644, 10847644, 10857644, 10867644, 10877644, 10887644, 10897644, 10907644, 10917644, 10927644, 10937644, 10947644, 10957644, 10967644, 10977644, 10987644, 10997644, 11007644, 11017644, 11027644, 11037644, 11047644, 11057644, 11067644, 11077644, 11087644, 11097644, 11107644, 11117644, 11127644, 11137644, 11147644, 11157644, 11167644, 11177644, 11187644, 11197644, 11207644, 11217644, 11227644, 11237644, 11247644, 11257644, 11267644, 11277644, 11287644, 11297644, 11307644, 11317644, 11327644, 11337644, 11347644, 11357644, 11367644, 11377644, 11387644, 11397644, 11407644, 11417644, 11427644, 11437644, 11447644, 11457644, 11467644, 11477644, 11487644, 11497644, 11507644, 11517644, 11527644]</msg>
<status status="PASS" starttime="20201116 13:09:33.892" endtime="20201116 13:09:33.894"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.888" endtime="20201116 13:09:33.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:33.901" endtime="20201116 13:09:34.191"></status>
</kw>
<msg timestamp="20201116 13:09:34.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033102542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:33.899" endtime="20201116 13:09:34.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:34.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033102542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:34.195" endtime="20201116 13:09:34.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:34.202" endtime="20201116 13:09:34.204"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.897" endtime="20201116 13:09:34.204"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:33.895" endtime="20201116 13:09:34.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:34.231" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:34.206" endtime="20201116 13:09:34.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:34.236" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201116 13:09:34.235" endtime="20201116 13:09:34.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:34.238" level="INFO">VALUE: 0.023026958</msg>
<status status="PASS" starttime="20201116 13:09:34.237" endtime="20201116 13:09:34.238"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.232" endtime="20201116 13:09:34.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:34.244" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:34.243" endtime="20201116 13:09:34.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:34.246" level="INFO">VALUE: [0.033102542, 0.043103389, 0.053104486, 0.063105694, 0.073106792, 0.083108014, 0.093109083, 0.103110306, 0.113111389, 0.123112611, 0.133113694, 0.143114917, 0.153116042, 0.163117222, 0.173118375, 0.183119556, 0.193120639, 0.203121833, 0.213122931, 0.223124139, 0.233125222, 0.243126444, 0.253127597, 0.263128806, 0.273129889, 0.283131069, 0.293132139, 0.303133361, 0.313134444, 0.323135681, 0.333136764, 0.343137972, 0.353139083, 0.363140278, 0.373141375, 0.383142583, 0.393143694, 0.403144903, 0.413145986, 0.423147236, 0.433148292, 0.4431495, 0.453150625, 0.463151819, 0.473152903, 0.483154125, 0.493155222, 0.503156431, 0.513157528, 0.523158736, 0.533159847, 0.543161042, 0.553162125, 0.563163347, 0.573164431, 0.583165653, 0.59316675, 0.603167958, 0.613169056, 0.623170264, 0.633171389, 0.643172583, 0.653173681, 0.663174875, 0.673175972, 0.683177194, 0.693178278, 0.703179514, 0.713180625, 0.723181806, 0.733182889, 0.743184125, 0.753185236, 0.763186458, 0.7731875, 0.783188764, 0.793189819, 0.803191028, 0.813192125, 0.823193347, 0.833194431, 0.843195639, 0.853196736, 0.863197958, 0.873199069, 0.883200264, 0.893201361, 0.903202597, 0.913203667, 0.923204875, 0.933205986, 0.943207194, 0.953208264, 0.9632095, 0.973210569, 0.983211792, 0.993212889, 1.003214167, 1.013215194, 1.023216403] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:34.245" endtime="20201116 13:09:34.251"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.240" endtime="20201116 13:09:34.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:34.254" endtime="20201116 13:09:34.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:34.257" endtime="20201116 13:09:34.277"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.256" endtime="20201116 13:09:34.277"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.252" endtime="20201116 13:09:34.278"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.722" endtime="20201116 13:09:34.278"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.720" endtime="20201116 13:09:34.278"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:31.719" endtime="20201116 13:09:34.279"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:34.281" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:34.289" endtime="20201116 13:09:36.413"></status>
</kw>
<msg timestamp="20201116 13:09:36.414" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13086378, 'wakeups': [13096470, 13106470, 13116469, 13126469, 13136469...</msg>
<status status="PASS" starttime="20201116 13:09:34.288" endtime="20201116 13:09:36.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.420" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 13086378, 'wakeups': [13096470, 13106470, 13116469, 13126469, 13136469...</msg>
<status status="PASS" starttime="20201116 13:09:36.416" endtime="20201116 13:09:36.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.422" endtime="20201116 13:09:36.425"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.285" endtime="20201116 13:09:36.427"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.283" endtime="20201116 13:09:36.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:36.431" level="INFO">${RESULT} = {'wakeups': [13096470, 13106470, 13116469, 13126469, 13136469, 13146469, 13156469, 13166469, 13176469, 13186469, 13196469, 13206469, 13216469, 13226469, 13236469, 13246469, 13256469, 13266469, 1327646...</msg>
<status status="PASS" starttime="20201116 13:09:36.429" endtime="20201116 13:09:36.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.435" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:36.434" endtime="20201116 13:09:36.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.437" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:36.436" endtime="20201116 13:09:36.438"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.432" endtime="20201116 13:09:36.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.443" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201116 13:09:36.441" endtime="20201116 13:09:36.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.445" level="INFO">VALUE: 13086378</msg>
<status status="PASS" starttime="20201116 13:09:36.444" endtime="20201116 13:09:36.446"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.439" endtime="20201116 13:09:36.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.450" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:36.449" endtime="20201116 13:09:36.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.452" level="INFO">VALUE: [13096470, 13106470, 13116469, 13126469, 13136469, 13146469, 13156469, 13166469, 13176469, 13186469, 13196469, 13206469, 13216469, 13226469, 13236469, 13246469, 13256469, 13266469, 13276469, 13286469, 13296469, 13306469, 13316469, 13326469, 13336469, 13346469, 13356469, 13366469, 13376469, 13386469, 13396469, 13406469, 13416469, 13426469, 13436469, 13446469, 13456469, 13466469, 13476469, 13486469, 13496469, 13506469, 13516469, 13526469, 13536469, 13546469, 13556469, 13566469, 13576469, 13586469, 13596469, 13606469, 13616469, 13626469, 13636469, 13646469, 13656469, 13666469, 13676469, 13686469, 13696469, 13706469, 13716469, 13726469, 13736469, 13746469, 13756469, 13766469, 13776469, 13786469, 13796469, 13806469, 13816469, 13826469, 13836469, 13846469, 13856469, 13866469, 13876469, 13886469, 13896469, 13906469, 13916469, 13926469, 13936469, 13946469, 13956469, 13966469, 13976469, 13986469, 13996469, 14006469, 14016469, 14026469, 14036469, 14046469, 14056469, 14066469, 14076469, 14086469]</msg>
<status status="PASS" starttime="20201116 13:09:36.451" endtime="20201116 13:09:36.453"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.447" endtime="20201116 13:09:36.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.460" endtime="20201116 13:09:36.753"></status>
</kw>
<msg timestamp="20201116 13:09:36.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032476764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:36.459" endtime="20201116 13:09:36.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032476764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:36.757" endtime="20201116 13:09:36.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.764" endtime="20201116 13:09:36.766"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.456" endtime="20201116 13:09:36.767"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.454" endtime="20201116 13:09:36.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:36.792" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:36.768" endtime="20201116 13:09:36.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.797" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201116 13:09:36.796" endtime="20201116 13:09:36.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.799" level="INFO">VALUE: 0.022382931</msg>
<status status="PASS" starttime="20201116 13:09:36.798" endtime="20201116 13:09:36.799"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.793" endtime="20201116 13:09:36.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.805" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:36.804" endtime="20201116 13:09:36.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:36.808" level="INFO">VALUE: [0.032476764, 0.042478319, 0.052477861, 0.062479625, 0.072480125, 0.082481972, 0.092482444, 0.102484264, 0.112484736, 0.122486542, 0.132487042, 0.142488833, 0.152489347, 0.162491139, 0.172491653, 0.182493458, 0.192493944, 0.20249575, 0.21249625, 0.222498042, 0.232498556, 0.242500347, 0.252500861, 0.262502653, 0.272503194, 0.282504958, 0.292505458, 0.302507264, 0.312507764, 0.322509583, 0.332510069, 0.342511875, 0.352512389, 0.362514181, 0.372514694, 0.3825165, 0.392516986, 0.402518792, 0.412519292, 0.422521097, 0.432521597, 0.442523403, 0.452523903, 0.462525736, 0.472526222, 0.482528, 0.492528556, 0.502530306, 0.512530819, 0.522532611, 0.532533139, 0.542535, 0.552535431, 0.562537222, 0.57253775, 0.582539542, 0.592540042, 0.602541833, 0.612542333, 0.622544139, 0.632544639, 0.642546444, 0.652546944, 0.66254875, 0.672549264, 0.682551056, 0.692551556, 0.702553375, 0.712553861, 0.722555681, 0.732556181, 0.742557972, 0.752558472, 0.762560292, 0.772560792, 0.782562583, 0.792563083, 0.802564889, 0.812565389, 0.822567208, 0.832567694, 0.8425695, 0.85257, 0.862571792, 0.872572292, 0.882574097, 0.892574597, 0.902576403, 0.912576903, 0.92257875, 0.932579208, 0.942581028, 0.952581528, 0.962583319, 0.972583833, 0.982585625, 0.992586125, 1.002587917, 1.012588444, 1.022590222] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:36.806" endtime="20201116 13:09:36.808"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.801" endtime="20201116 13:09:36.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.811" endtime="20201116 13:09:36.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:36.814" endtime="20201116 13:09:36.834"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.813" endtime="20201116 13:09:36.834"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.809" endtime="20201116 13:09:36.835"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.282" endtime="20201116 13:09:36.835"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.280" endtime="20201116 13:09:36.835"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:34.279" endtime="20201116 13:09:36.836"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:36.838" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:36.847" endtime="20201116 13:09:38.981"></status>
</kw>
<msg timestamp="20201116 13:09:38.982" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15644180, 'wakeups': [15654292, 15664290, 15674291, 15684290, 15694290...</msg>
<status status="PASS" starttime="20201116 13:09:36.846" endtime="20201116 13:09:38.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 15644180, 'wakeups': [15654292, 15664290, 15674291, 15684290, 15694290...</msg>
<status status="PASS" starttime="20201116 13:09:38.983" endtime="20201116 13:09:38.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:38.986" endtime="20201116 13:09:38.988"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.842" endtime="20201116 13:09:38.988"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.840" endtime="20201116 13:09:38.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:38.992" level="INFO">${RESULT} = {'wakeups': [15654292, 15664290, 15674291, 15684290, 15694290, 15704290, 15714290, 15724290, 15734290, 15744290, 15754290, 15764290, 15774290, 15784290, 15794290, 15804290, 15814290, 15824290, 1583429...</msg>
<status status="PASS" starttime="20201116 13:09:38.990" endtime="20201116 13:09:38.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.996" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:38.995" endtime="20201116 13:09:38.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:38.998" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:38.997" endtime="20201116 13:09:38.998"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:38.992" endtime="20201116 13:09:38.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.003" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201116 13:09:39.002" endtime="20201116 13:09:39.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.005" level="INFO">VALUE: 15644180</msg>
<status status="PASS" starttime="20201116 13:09:39.004" endtime="20201116 13:09:39.006"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.000" endtime="20201116 13:09:39.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.010" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:39.009" endtime="20201116 13:09:39.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.013" level="INFO">VALUE: [15654292, 15664290, 15674291, 15684290, 15694290, 15704290, 15714290, 15724290, 15734290, 15744290, 15754290, 15764290, 15774290, 15784290, 15794290, 15804290, 15814290, 15824290, 15834290, 15844290, 15854290, 15864290, 15874290, 15884290, 15894290, 15904290, 15914290, 15924290, 15934290, 15944290, 15954290, 15964290, 15974290, 15984290, 15994290, 16004290, 16014290, 16024290, 16034290, 16044290, 16054290, 16064290, 16074290, 16084290, 16094290, 16104290, 16114290, 16124290, 16134290, 16144290, 16154290, 16164290, 16174290, 16184290, 16194290, 16204290, 16214290, 16224290, 16234290, 16244290, 16254290, 16264290, 16274290, 16284290, 16294290, 16304290, 16314290, 16324290, 16334290, 16344290, 16354290, 16364290, 16374290, 16384290, 16394290, 16404290, 16414290, 16424290, 16434290, 16444290, 16454290, 16464290, 16474290, 16484290, 16494290, 16504290, 16514290, 16524290, 16534290, 16544290, 16554290, 16564290, 16574290, 16584290, 16594290, 16604290, 16614290, 16624290, 16634290, 16644290]</msg>
<status status="PASS" starttime="20201116 13:09:39.012" endtime="20201116 13:09:39.013"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.007" endtime="20201116 13:09:39.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:39.021" endtime="20201116 13:09:39.314"></status>
</kw>
<msg timestamp="20201116 13:09:39.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033441056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:39.019" endtime="20201116 13:09:39.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033441056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:39.318" endtime="20201116 13:09:39.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:39.331" endtime="20201116 13:09:39.332"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.016" endtime="20201116 13:09:39.333"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.014" endtime="20201116 13:09:39.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:39.358" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:39.334" endtime="20201116 13:09:39.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.362" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201116 13:09:39.361" endtime="20201116 13:09:39.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.364" level="INFO">VALUE: 0.023327431</msg>
<status status="PASS" starttime="20201116 13:09:39.363" endtime="20201116 13:09:39.365"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.359" endtime="20201116 13:09:39.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.370" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:39.369" endtime="20201116 13:09:39.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:39.372" level="INFO">VALUE: [0.033441056, 0.043440764, 0.053442639, 0.063442847, 0.073443972, 0.083445125, 0.093446222, 0.103447431, 0.113448556, 0.123449736, 0.133450833, 0.143452028, 0.153453125, 0.163454347, 0.173455472, 0.183456681, 0.19345775, 0.203458944, 0.213460028, 0.223461264, 0.233462333, 0.243463611, 0.253464625, 0.263465847, 0.273466972, 0.283468194, 0.293469236, 0.303470458, 0.313471542, 0.323472764, 0.333473889, 0.343475056, 0.353476167, 0.363477361, 0.373478444, 0.383479667, 0.39348075, 0.403481986, 0.413483083, 0.423484278, 0.433485361, 0.443486583, 0.453487667, 0.463488889, 0.473489972, 0.483491222, 0.493492264, 0.503493486, 0.513494583, 0.523495806, 0.533496889, 0.543498097, 0.553499264, 0.563500403, 0.5735015, 0.583502694, 0.593503806, 0.603505, 0.613506083, 0.623507306, 0.633508389, 0.643509611, 0.653510694, 0.663511917, 0.673513, 0.683514208, 0.693515319, 0.703516514, 0.713517625, 0.723518819, 0.733519917, 0.743521125, 0.753522208, 0.763523444, 0.773524514, 0.783525736, 0.793526847, 0.803528028, 0.813529125, 0.823530333, 0.833531431, 0.843532639, 0.853533778, 0.863534944, 0.873536083, 0.883537278, 0.893538347, 0.903539556, 0.913540639, 0.923541875, 0.933542944, 0.943544153, 0.95354525, 0.963546472, 0.973547542, 0.983548792, 0.993549847, 1.003551083, 1.013552167, 1.023553375] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:39.371" endtime="20201116 13:09:39.373"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.366" endtime="20201116 13:09:39.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:39.376" endtime="20201116 13:09:39.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:39.379" endtime="20201116 13:09:39.399"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.377" endtime="20201116 13:09:39.399"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.374" endtime="20201116 13:09:39.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.839" endtime="20201116 13:09:39.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.837" endtime="20201116 13:09:39.400"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:36.836" endtime="20201116 13:09:39.401"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:39.403" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:39.413" endtime="20201116 13:09:41.541"></status>
</kw>
<msg timestamp="20201116 13:09:41.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18209487, 'wakeups': [18219619, 18229617, 18239617, 18249617, 18259617...</msg>
<status status="PASS" starttime="20201116 13:09:39.411" endtime="20201116 13:09:41.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 18209487, 'wakeups': [18219619, 18229617, 18239617, 18249617, 18259617...</msg>
<status status="PASS" starttime="20201116 13:09:41.543" endtime="20201116 13:09:41.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.546" endtime="20201116 13:09:41.547"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.408" endtime="20201116 13:09:41.548"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.406" endtime="20201116 13:09:41.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:41.552" level="INFO">${RESULT} = {'wakeups': [18219619, 18229617, 18239617, 18249617, 18259617, 18269617, 18279617, 18289617, 18299617, 18309617, 18319617, 18329617, 18339617, 18349617, 18359617, 18369617, 18379617, 18389617, 1839961...</msg>
<status status="PASS" starttime="20201116 13:09:41.550" endtime="20201116 13:09:41.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.556" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:41.555" endtime="20201116 13:09:41.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.558" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:41.557" endtime="20201116 13:09:41.558"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.553" endtime="20201116 13:09:41.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.563" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201116 13:09:41.562" endtime="20201116 13:09:41.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.565" level="INFO">VALUE: 18209487</msg>
<status status="PASS" starttime="20201116 13:09:41.564" endtime="20201116 13:09:41.566"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.560" endtime="20201116 13:09:41.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.570" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:41.569" endtime="20201116 13:09:41.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.573" level="INFO">VALUE: [18219619, 18229617, 18239617, 18249617, 18259617, 18269617, 18279617, 18289617, 18299617, 18309617, 18319617, 18329617, 18339617, 18349617, 18359617, 18369617, 18379617, 18389617, 18399617, 18409617, 18419617, 18429617, 18439617, 18449617, 18459617, 18469617, 18479617, 18489617, 18499617, 18509617, 18519617, 18529617, 18539617, 18549617, 18559617, 18569617, 18579617, 18589617, 18599617, 18609617, 18619617, 18629617, 18639617, 18649617, 18659617, 18669617, 18679617, 18689617, 18699617, 18709617, 18719617, 18729617, 18739617, 18749617, 18759617, 18769617, 18779617, 18789617, 18799617, 18809617, 18819617, 18829617, 18839617, 18849617, 18859617, 18869617, 18879617, 18889617, 18899617, 18909617, 18919617, 18929617, 18939617, 18949617, 18959617, 18969617, 18979617, 18989617, 18999617, 19009617, 19019617, 19029617, 19039617, 19049617, 19059617, 19069617, 19079617, 19089617, 19099617, 19109617, 19119617, 19129617, 19139617, 19149617, 19159617, 19169617, 19179617, 19189617, 19199617, 19209617]</msg>
<status status="PASS" starttime="20201116 13:09:41.572" endtime="20201116 13:09:41.573"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.567" endtime="20201116 13:09:41.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.580" endtime="20201116 13:09:41.870"></status>
</kw>
<msg timestamp="20201116 13:09:41.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033855236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:41.579" endtime="20201116 13:09:41.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033855236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:41.874" endtime="20201116 13:09:41.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.882" endtime="20201116 13:09:41.884"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.576" endtime="20201116 13:09:41.884"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.574" endtime="20201116 13:09:41.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:41.911" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:41.886" endtime="20201116 13:09:41.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.915" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201116 13:09:41.914" endtime="20201116 13:09:41.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.917" level="INFO">VALUE: 0.023721806</msg>
<status status="PASS" starttime="20201116 13:09:41.916" endtime="20201116 13:09:41.918"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.912" endtime="20201116 13:09:41.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.924" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:41.922" endtime="20201116 13:09:41.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:41.926" level="INFO">VALUE: [0.033855236, 0.043854764, 0.053855847, 0.063857097, 0.073858181, 0.083859431, 0.093860472, 0.103861708, 0.113862792, 0.123864056, 0.133865111, 0.143866333, 0.153867431, 0.163868667, 0.17386975, 0.183870972, 0.193872083, 0.203873292, 0.213874389, 0.223875611, 0.233876722, 0.243877931, 0.253879028, 0.263880264, 0.273881403, 0.283882583, 0.293883681, 0.303884903, 0.313886, 0.323887236, 0.333888319, 0.343889542, 0.353890639, 0.363891917, 0.373892972, 0.383894222, 0.393895278, 0.4038965, 0.413897597, 0.423898819, 0.433899917, 0.443901194, 0.453902236, 0.4639035, 0.473904569, 0.483905792, 0.493906889, 0.503908111, 0.513909208, 0.523910444, 0.533911597, 0.54391275, 0.553913861, 0.563915069, 0.573916222, 0.583917431, 0.593918514, 0.603919778, 0.613920806, 0.623922028, 0.633923139, 0.643924347, 0.653925444, 0.663926708, 0.673927778, 0.683929, 0.693930097, 0.703931319, 0.713932458, 0.723933639, 0.73393475, 0.743935958, 0.753937056, 0.763938292, 0.773939375, 0.783940597, 0.793941694, 0.803942931, 0.813944028, 0.82394525, 0.833946403, 0.843947569, 0.853948681, 0.863949889, 0.873950986, 0.883952208, 0.893953306, 0.903954556, 0.913955653, 0.923956847, 0.933957958, 0.943959167, 0.953960264, 0.963961486, 0.973962597, 0.983963806, 0.993964917, 1.003966139, 1.013967236, 1.023968472] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:41.925" endtime="20201116 13:09:41.926"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.919" endtime="20201116 13:09:41.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.929" endtime="20201116 13:09:41.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:41.932" endtime="20201116 13:09:41.952"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.931" endtime="20201116 13:09:41.952"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.927" endtime="20201116 13:09:41.953"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.404" endtime="20201116 13:09:41.953"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.402" endtime="20201116 13:09:41.953"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:39.401" endtime="20201116 13:09:41.954"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:41.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:41.965" endtime="20201116 13:09:44.094"></status>
</kw>
<msg timestamp="20201116 13:09:44.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20761665, 'wakeups': [20771816, 20781819, 20791819, 20801819, 20811819...</msg>
<status status="PASS" starttime="20201116 13:09:41.963" endtime="20201116 13:09:44.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.098" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 20761665, 'wakeups': [20771816, 20781819, 20791819, 20801819, 20811819...</msg>
<status status="PASS" starttime="20201116 13:09:44.096" endtime="20201116 13:09:44.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:44.099" endtime="20201116 13:09:44.101"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.961" endtime="20201116 13:09:44.101"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.959" endtime="20201116 13:09:44.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:44.105" level="INFO">${RESULT} = {'wakeups': [20771816, 20781819, 20791819, 20801819, 20811819, 20821819, 20831819, 20841819, 20851819, 20861819, 20871819, 20881819, 20891819, 20901819, 20911819, 20921819, 20931819, 20941819, 2095181...</msg>
<status status="PASS" starttime="20201116 13:09:44.102" endtime="20201116 13:09:44.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.110" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:44.108" endtime="20201116 13:09:44.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.112" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:44.111" endtime="20201116 13:09:44.113"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.105" endtime="20201116 13:09:44.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.118" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201116 13:09:44.116" endtime="20201116 13:09:44.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.120" level="INFO">VALUE: 20761665</msg>
<status status="PASS" starttime="20201116 13:09:44.119" endtime="20201116 13:09:44.120"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.114" endtime="20201116 13:09:44.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.125" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:44.124" endtime="20201116 13:09:44.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.127" level="INFO">VALUE: [20771816, 20781819, 20791819, 20801819, 20811819, 20821819, 20831819, 20841819, 20851819, 20861819, 20871819, 20881819, 20891819, 20901819, 20911819, 20921819, 20931819, 20941819, 20951819, 20961819, 20971819, 20981819, 20991819, 21001819, 21011819, 21021819, 21031819, 21041819, 21051819, 21061819, 21071819, 21081819, 21091819, 21101819, 21111819, 21121819, 21131819, 21141819, 21151819, 21161819, 21171819, 21181819, 21191819, 21201819, 21211819, 21221819, 21231819, 21241819, 21251819, 21261819, 21271819, 21281819, 21291819, 21301819, 21311819, 21321819, 21331819, 21341819, 21351819, 21361819, 21371819, 21381819, 21391819, 21401819, 21411819, 21421819, 21431819, 21441819, 21451819, 21461819, 21471819, 21481819, 21491819, 21501819, 21511819, 21521819, 21531819, 21541819, 21551819, 21561819, 21571819, 21581819, 21591819, 21601819, 21611819, 21621819, 21631819, 21641819, 21651819, 21661819, 21671819, 21681819, 21691819, 21701819, 21711819, 21721819, 21731819, 21741819, 21751819, 21761819]</msg>
<status status="PASS" starttime="20201116 13:09:44.126" endtime="20201116 13:09:44.128"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.121" endtime="20201116 13:09:44.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:44.135" endtime="20201116 13:09:44.425"></status>
</kw>
<msg timestamp="20201116 13:09:44.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032980889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:44.133" endtime="20201116 13:09:44.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032980889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:44.429" endtime="20201116 13:09:44.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:44.437" endtime="20201116 13:09:44.438"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.130" endtime="20201116 13:09:44.439"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.129" endtime="20201116 13:09:44.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:44.464" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:44.440" endtime="20201116 13:09:44.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.469" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201116 13:09:44.468" endtime="20201116 13:09:44.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.471" level="INFO">VALUE: 0.022827819</msg>
<status status="PASS" starttime="20201116 13:09:44.470" endtime="20201116 13:09:44.472"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.465" endtime="20201116 13:09:44.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.477" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:44.476" endtime="20201116 13:09:44.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:44.479" level="INFO">VALUE: [0.032980889, 0.042985722, 0.052986806, 0.062988042, 0.072989139, 0.082990347, 0.092991458, 0.102992681, 0.112993764, 0.122994986, 0.132996083, 0.142997292, 0.152998389, 0.162999611, 0.173000708, 0.183001944, 0.193003028, 0.203004319, 0.213005361, 0.223006583, 0.233007667, 0.243008944, 0.25301, 0.263011222, 0.273012319, 0.283013528, 0.293014625, 0.303015847, 0.313016944, 0.323018167, 0.33301925, 0.343020556, 0.353021569, 0.363022806, 0.373023889, 0.383025139, 0.393026222, 0.403027431, 0.413028556, 0.423029764, 0.433030861, 0.443032069, 0.453033167, 0.463034389, 0.473035486, 0.483036722, 0.493037806, 0.503039028, 0.513040139, 0.523041375, 0.533042444, 0.543043681, 0.553044764, 0.563045986, 0.573047097, 0.583048306, 0.593049417, 0.603050625, 0.613051708, 0.623052972, 0.633054042, 0.643055264, 0.653056347, 0.663057583, 0.673058667, 0.683059917, 0.693060986, 0.703062222, 0.713063333, 0.723064528, 0.733065625, 0.743066847, 0.753067986, 0.763069208, 0.773070264, 0.783071528, 0.793072597, 0.803073819, 0.813074917, 0.823076125, 0.833077222, 0.843078444, 0.853079556, 0.863080764, 0.873081861, 0.883083083, 0.893084181, 0.903085417, 0.9130865, 0.923087736, 0.933088819, 0.943090042, 0.953091167, 0.963092361, 0.973093528, 0.983094681, 0.993095778, 1.003097014, 1.013098111, 1.023099333] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:44.478" endtime="20201116 13:09:44.484"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.473" endtime="20201116 13:09:44.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:44.487" endtime="20201116 13:09:44.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:44.491" endtime="20201116 13:09:44.510"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.489" endtime="20201116 13:09:44.511"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.485" endtime="20201116 13:09:44.511"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.957" endtime="20201116 13:09:44.511"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.955" endtime="20201116 13:09:44.512"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:41.954" endtime="20201116 13:09:44.512"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat} Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201116 13:09:44.515" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:44.523" endtime="20201116 13:09:46.651"></status>
</kw>
<msg timestamp="20201116 13:09:46.652" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23320082, 'wakeups': [23330258, 23340260, 23350260, 23360259, 233702...</msg>
<status status="PASS" starttime="20201116 13:09:44.521" endtime="20201116 13:09:46.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.655" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 23320082, 'wakeups': [23330258, 23340260, 23350260, 23360259, 233702...</msg>
<status status="PASS" starttime="20201116 13:09:46.653" endtime="20201116 13:09:46.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.656" endtime="20201116 13:09:46.658"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.519" endtime="20201116 13:09:46.658"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.517" endtime="20201116 13:09:46.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:46.661" level="INFO">${RESULT} = {'wakeups': [23330258, 23340260, 23350260, 23360259, 23370260, 23380259, 23390260, 23400259, 23410260, 23420259, 23430260, 23440259, 23450260, 23460259, 23470260, 23480259, 23490260, 23500259, 2351026...</msg>
<status status="PASS" starttime="20201116 13:09:46.659" endtime="20201116 13:09:46.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.666" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201116 13:09:46.665" endtime="20201116 13:09:46.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.668" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201116 13:09:46.667" endtime="20201116 13:09:46.668"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.662" endtime="20201116 13:09:46.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.673" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201116 13:09:46.672" endtime="20201116 13:09:46.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.675" level="INFO">VALUE: 23320082</msg>
<status status="PASS" starttime="20201116 13:09:46.674" endtime="20201116 13:09:46.675"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.669" endtime="20201116 13:09:46.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.680" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:46.679" endtime="20201116 13:09:46.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.682" level="INFO">VALUE: [23330258, 23340260, 23350260, 23360259, 23370260, 23380259, 23390260, 23400259, 23410260, 23420259, 23430260, 23440259, 23450260, 23460259, 23470260, 23480259, 23490260, 23500259, 23510260, 23520259, 23530260, 23540259, 23550260, 23560259, 23570260, 23580259, 23590260, 23600259, 23610260, 23620259, 23630260, 23640259, 23650260, 23660259, 23670260, 23680259, 23690260, 23700259, 23710260, 23720259, 23730260, 23740259, 23750260, 23760259, 23770260, 23780259, 23790260, 23800259, 23810260, 23820259, 23830260, 23840259, 23850260, 23860259, 23870260, 23880259, 23890260, 23900259, 23910260, 23920259, 23930260, 23940259, 23950260, 23960259, 23970260, 23980259, 23990260, 24000259, 24010260, 24020259, 24030260, 24040259, 24050260, 24060259, 24070260, 24080259, 24090260, 24100259, 24110260, 24120259, 24130260, 24140259, 24150260, 24160259, 24170260, 24180259, 24190260, 24200259, 24210260, 24220259, 24230260, 24240259, 24250260, 24260259, 24270260, 24280259, 24290260, 24300259, 24310260, 24320259]</msg>
<status status="PASS" starttime="20201116 13:09:46.681" endtime="20201116 13:09:46.683"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.677" endtime="20201116 13:09:46.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.692" endtime="20201116 13:09:46.983"></status>
</kw>
<msg timestamp="20201116 13:09:46.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033286014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:46.690" endtime="20201116 13:09:46.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201116 13:09:46.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033286014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201116 13:09:46.987" endtime="20201116 13:09:46.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:46.995" endtime="20201116 13:09:46.997"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.687" endtime="20201116 13:09:46.998"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:46.685" endtime="20201116 13:09:46.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201116 13:09:47.023" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201116 13:09:46.999" endtime="20201116 13:09:47.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:47.028" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201116 13:09:47.027" endtime="20201116 13:09:47.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:47.030" level="INFO">VALUE: 0.023107958</msg>
<status status="PASS" starttime="20201116 13:09:47.029" endtime="20201116 13:09:47.030"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:47.024" endtime="20201116 13:09:47.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201116 13:09:47.036" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201116 13:09:47.034" endtime="20201116 13:09:47.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201116 13:09:47.038" level="INFO">VALUE: [0.033286014, 0.043289194, 0.053290361, 0.0632905, 0.073292597, 0.083292819, 0.093294931, 0.103295125, 0.113297222, 0.123297444, 0.133299542, 0.143299778, 0.153301861, 0.163302069, 0.173304167, 0.183304389, 0.193306486, 0.203306708, 0.213308819, 0.223309014, 0.233311125, 0.243311333, 0.253313431, 0.263313653, 0.27331575, 0.283315972, 0.293318069, 0.303318292, 0.313320431, 0.323320625, 0.333322694, 0.343322917, 0.353325056, 0.363325278, 0.373327333, 0.383327556, 0.393329653, 0.403329875, 0.413331958, 0.423332208, 0.433334278, 0.443334514, 0.453336597, 0.463336819, 0.473338917, 0.483339153, 0.493341236, 0.503341458, 0.513343542, 0.523343764, 0.533345875, 0.543346097, 0.553348181, 0.563348444, 0.573350514, 0.583350736, 0.593352819, 0.603353042, 0.613355125, 0.623355431, 0.633357444, 0.643357667, 0.653359764, 0.66336, 0.673362097, 0.683362306, 0.693364403, 0.703364611, 0.713366792, 0.723366931, 0.733369042, 0.74336925, 0.753371347, 0.763371583, 0.773373667, 0.783373958, 0.793375986, 0.803376194, 0.813378306, 0.823378528, 0.833380611, 0.843380889, 0.853382931, 0.863383167, 0.873385264, 0.883385472, 0.893387556, 0.903387792, 0.913389889, 0.923390097, 0.933392222, 0.943392431, 0.953394514, 0.963394792, 0.973396833, 0.983397069, 0.993399153, 1.003399361, 1.013401458, 1.023401681] # exclude start event</msg>
<status status="PASS" starttime="20201116 13:09:47.037" endtime="20201116 13:09:47.038"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:47.031" endtime="20201116 13:09:47.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201116 13:09:47.041" endtime="20201116 13:09:47.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201116 13:09:47.045" endtime="20201116 13:09:47.065"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:47.043" endtime="20201116 13:09:47.065"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:47.039" endtime="20201116 13:09:47.066"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.515" endtime="20201116 13:09:47.066"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.513" endtime="20201116 13:09:47.066"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:44.512" endtime="20201116 13:09:47.067"></status>
</kw>
<status status="PASS" starttime="20201116 13:09:21.595" endtime="20201116 13:09:47.067"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201116 13:09:21.525" endtime="20201116 13:09:47.068" critical="yes"></status>
</test>
<status status="PASS" starttime="20201116 13:09:20.088" endtime="20201116 13:09:47.072"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201116 13:09:18.058" endtime="20201116 13:09:47.083"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
