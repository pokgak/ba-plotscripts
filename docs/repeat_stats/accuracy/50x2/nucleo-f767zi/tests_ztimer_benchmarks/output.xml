<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:40:42.357" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:42.924" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:42.932" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:44.090" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:42.923" endtime="20201117 14:40:44.091"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.093" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:44.092" endtime="20201117 14:40:44.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:42.921" endtime="20201117 14:40:44.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:44.097" endtime="20201117 14:40:44.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.095" endtime="20201117 14:40:44.306"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.333" endtime="20201117 14:40:44.352"></status>
</kw>
<msg timestamp="20201117 14:40:44.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.330" endtime="20201117 14:40:44.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.355" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.353" endtime="20201117 14:40:44.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:44.356" endtime="20201117 14:40:44.358"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.324" endtime="20201117 14:40:44.359"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.320" endtime="20201117 14:40:44.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.317" endtime="20201117 14:40:44.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:44.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:44.363" endtime="20201117 14:40:44.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.361" endtime="20201117 14:40:44.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.315" endtime="20201117 14:40:44.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.314" endtime="20201117 14:40:44.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.366" endtime="20201117 14:40:44.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.311" endtime="20201117 14:40:44.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.369" endtime="20201117 14:40:44.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.308" endtime="20201117 14:40:44.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:42.919" endtime="20201117 14:40:44.371"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:44.378" endtime="20201117 14:40:44.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.376" endtime="20201117 14:40:44.398"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.413" endtime="20201117 14:40:44.427"></status>
</kw>
<msg timestamp="20201117 14:40:44.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.411" endtime="20201117 14:40:44.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.429" endtime="20201117 14:40:44.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.434" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:44.432" endtime="20201117 14:40:44.434"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.408" endtime="20201117 14:40:44.435"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.405" endtime="20201117 14:40:44.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.403" endtime="20201117 14:40:44.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:44.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:44.439" endtime="20201117 14:40:44.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.436" endtime="20201117 14:40:44.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.403" endtime="20201117 14:40:44.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.402" endtime="20201117 14:40:44.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.441" endtime="20201117 14:40:44.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.400" endtime="20201117 14:40:44.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.399" endtime="20201117 14:40:44.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.375" endtime="20201117 14:40:44.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.451" endtime="20201117 14:40:44.461"></status>
</kw>
<msg timestamp="20201117 14:40:44.461" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.450" endtime="20201117 14:40:44.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.464" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.462" endtime="20201117 14:40:44.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.465" endtime="20201117 14:40:44.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.447" endtime="20201117 14:40:44.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.445" endtime="20201117 14:40:44.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.472" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:40:44.471" endtime="20201117 14:40:44.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.474" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:40:44.473" endtime="20201117 14:40:44.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.469" endtime="20201117 14:40:44.475"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:44.372" endtime="20201117 14:40:44.476" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:42.468" endtime="20201117 14:40:44.479"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.533" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:44.540" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:45.653" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:44.531" endtime="20201117 14:40:45.654"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.656" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:45.655" endtime="20201117 14:40:45.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.530" endtime="20201117 14:40:45.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.659" endtime="20201117 14:40:45.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.658" endtime="20201117 14:40:45.941"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.953" endtime="20201117 14:40:45.967"></status>
</kw>
<msg timestamp="20201117 14:40:45.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.952" endtime="20201117 14:40:45.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.968" endtime="20201117 14:40:45.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.973" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:45.971" endtime="20201117 14:40:45.973"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.949" endtime="20201117 14:40:45.974"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.947" endtime="20201117 14:40:45.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.946" endtime="20201117 14:40:45.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:45.979" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:45.978" endtime="20201117 14:40:45.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.976" endtime="20201117 14:40:45.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.945" endtime="20201117 14:40:45.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.944" endtime="20201117 14:40:45.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.980" endtime="20201117 14:40:45.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.943" endtime="20201117 14:40:45.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.983" endtime="20201117 14:40:45.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.942" endtime="20201117 14:40:45.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.529" endtime="20201117 14:40:45.986"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.992" endtime="20201117 14:40:46.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.991" endtime="20201117 14:40:46.013"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.027" endtime="20201117 14:40:46.040"></status>
</kw>
<msg timestamp="20201117 14:40:46.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.025" endtime="20201117 14:40:46.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.042" endtime="20201117 14:40:46.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.047" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:46.045" endtime="20201117 14:40:46.047"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:46.022" endtime="20201117 14:40:46.048"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:46.020" endtime="20201117 14:40:46.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.019" endtime="20201117 14:40:46.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:46.053" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:46.052" endtime="20201117 14:40:46.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.050" endtime="20201117 14:40:46.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.018" endtime="20201117 14:40:46.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.017" endtime="20201117 14:40:46.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.054" endtime="20201117 14:40:46.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.016" endtime="20201117 14:40:46.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.014" endtime="20201117 14:40:46.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.989" endtime="20201117 14:40:46.057"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.061" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.071" endtime="20201117 14:40:46.085"></status>
</kw>
<msg timestamp="20201117 14:40:46.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.068" endtime="20201117 14:40:46.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.087" endtime="20201117 14:40:46.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.089" endtime="20201117 14:40:46.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.065" endtime="20201117 14:40:46.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.063" endtime="20201117 14:40:46.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.099" endtime="20201117 14:40:46.389"></status>
</kw>
<msg timestamp="20201117 14:40:46.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070285722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070300889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.097" endtime="20201117 14:40:46.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070285722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070300889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.393" endtime="20201117 14:40:46.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.401" endtime="20201117 14:40:46.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.094" endtime="20201117 14:40:46.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.092" endtime="20201117 14:40:46.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:46.408" level="INFO">${RESULT} = [{'time': 0.070300889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5167000000010367e-05, 'source_diff': 1.5167000000010367e-05}, {'time': 0.070320722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:46.405" endtime="20201117 14:40:46.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:46.423" level="INFO">${ACCURACY} = {'source_diff': [1.5167000000010367e-05, 1.4165999999996015e-05, 1.406899999999156e-05, 1.4055999999998403e-05, 1.412499999998984e-05, 1.418099999998812e-05, 1.3778000000005952e-05, 1.3861000000003898...</msg>
<status status="PASS" starttime="20201117 14:40:46.410" endtime="20201117 14:40:46.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.427" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:46.426" endtime="20201117 14:40:46.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.430" level="INFO">VALUE: [1.5167000000010367e-05, 1.4165999999996015e-05, 1.406899999999156e-05, 1.4055999999998403e-05, 1.412499999998984e-05, 1.418099999998812e-05, 1.3778000000005952e-05, 1.3861000000003898e-05, 1.4208000000001664e-05, 1.365299999998848e-05, 1.3944000000001844e-05, 1.3903000000009547e-05, 1.3736000000000304e-05, 1.4166999999995489e-05, 1.4042000000005772e-05, 1.3749999999992935e-05, 1.3806000000005092e-05, 1.4278000000006452e-05, 1.4125000000003718e-05, 1.3749999999992935e-05, 1.4013999999992754e-05, 1.3944000000001844e-05, 1.4291999999999083e-05, 1.3874999999996529e-05, 1.3958999999993948e-05, 1.4125000000003718e-05, 1.4291999999999083e-05, 1.4041999999991894e-05, 1.3985999999993615e-05, 1.3721999999993795e-05, 1.3889000000003038e-05, 1.4222000000008173e-05, 1.3750000000006812e-05, 1.4236000000000804e-05, 1.380499999999174e-05, 1.3861999999989494e-05, 1.3763999999999443e-05, 1.4110999999997209e-05, 1.3791999999998583e-05, 1.418099999998812e-05, 1.3874999999996529e-05, 1.4055999999998403e-05, 1.4110999999997209e-05, 1.39169999999883e-05, 1.3721999999993795e-05, 1.3819999999997723e-05, 1.3930999999994809e-05, 1.4056000000012281e-05, 1.4027999999999263e-05, 1.405499999999893e-05]</msg>
<status status="PASS" starttime="20201117 14:40:46.429" endtime="20201117 14:40:46.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.424" endtime="20201117 14:40:46.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.433" endtime="20201117 14:40:46.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.437" endtime="20201117 14:40:46.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.435" endtime="20201117 14:40:46.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.432" endtime="20201117 14:40:46.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.062" endtime="20201117 14:40:46.457"></status>
</kw>
<msg timestamp="20201117 14:40:46.458" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.466" endtime="20201117 14:40:46.482"></status>
</kw>
<msg timestamp="20201117 14:40:46.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.465" endtime="20201117 14:40:46.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.484" endtime="20201117 14:40:46.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.487" endtime="20201117 14:40:46.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.462" endtime="20201117 14:40:46.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.460" endtime="20201117 14:40:46.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.496" endtime="20201117 14:40:46.781"></status>
</kw>
<msg timestamp="20201117 14:40:46.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.494" endtime="20201117 14:40:46.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.785" endtime="20201117 14:40:46.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.794" endtime="20201117 14:40:46.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.492" endtime="20201117 14:40:46.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.490" endtime="20201117 14:40:46.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:46.801" level="INFO">${RESULT} = [{'time': 0.022589708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4652000000000415e-05, 'source_diff': 1.4652000000000415e-05}, {'time': 0.022609514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:46.797" endtime="20201117 14:40:46.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:46.814" level="INFO">${ACCURACY} = {'source_diff': [1.4652000000000415e-05, 1.4222000000001234e-05, 1.381899999999825e-05, 1.4278000000002983e-05, 1.3819000000001719e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.40420000000023...</msg>
<status status="PASS" starttime="20201117 14:40:46.802" endtime="20201117 14:40:46.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.819" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:46.818" endtime="20201117 14:40:46.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.821" level="INFO">VALUE: [1.4652000000000415e-05, 1.4222000000001234e-05, 1.381899999999825e-05, 1.4278000000002983e-05, 1.3819000000001719e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.4042000000002303e-05, 1.4263999999999943e-05, 1.4083000000001539e-05, 1.3736000000000304e-05, 1.4193999999998624e-05, 1.3957999999997944e-05, 1.3861000000000429e-05, 1.3848000000000332e-05, 1.3874999999999998e-05, 1.4193999999998624e-05, 1.3847000000000859e-05, 1.4097000000001109e-05, 1.4180999999998528e-05, 1.3958000000001414e-05, 1.3847000000000859e-05, 1.4194000000002094e-05, 1.3805999999998153e-05, 1.4277999999999513e-05, 1.3680999999998028e-05, 1.3778000000002483e-05, 1.4347000000001359e-05, 1.4250000000000373e-05, 1.3709000000000637e-05, 1.4250000000000373e-05, 1.4125000000000248e-05, 1.3749999999999873e-05, 1.4000000000000123e-05, 1.4250000000000373e-05, 1.3624999999999748e-05, 1.4208999999997668e-05, 1.3874999999999998e-05, 1.3750000000003343e-05, 1.3763999999999443e-05, 1.3944999999997848e-05, 1.4069999999997973e-05, 1.4249999999996904e-05, 1.3902999999999138e-05, 1.3903000000002608e-05, 1.3834000000000762e-05, 1.4208999999997668e-05, 1.3722000000000734e-05, 1.4250000000000373e-05, 1.3723000000000207e-05]</msg>
<status status="PASS" starttime="20201117 14:40:46.820" endtime="20201117 14:40:46.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.815" endtime="20201117 14:40:46.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.824" endtime="20201117 14:40:46.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.828" endtime="20201117 14:40:46.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.826" endtime="20201117 14:40:46.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.823" endtime="20201117 14:40:46.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.458" endtime="20201117 14:40:46.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.060" endtime="20201117 14:40:46.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.059" endtime="20201117 14:40:46.849"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.851" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.859" endtime="20201117 14:40:46.874"></status>
</kw>
<msg timestamp="20201117 14:40:46.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.858" endtime="20201117 14:40:46.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.879" endtime="20201117 14:40:46.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.882" endtime="20201117 14:40:46.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.855" endtime="20201117 14:40:46.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.853" endtime="20201117 14:40:46.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.892" endtime="20201117 14:40:47.178"></status>
</kw>
<msg timestamp="20201117 14:40:47.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:46.891" endtime="20201117 14:40:47.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:47.183" endtime="20201117 14:40:47.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.191" endtime="20201117 14:40:47.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.888" endtime="20201117 14:40:47.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.886" endtime="20201117 14:40:47.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.197" level="INFO">${RESULT} = [{'time': 0.0247545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4443999999998874e-05, 'source_diff': 1.4443999999998874e-05}, {'time': 0.024774375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:47.194" endtime="20201117 14:40:47.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.212" level="INFO">${ACCURACY} = {'source_diff': [1.4443999999998874e-05, 1.4125000000000248e-05, 1.4041000000002829e-05, 1.401300000000022e-05, 1.3930000000002274e-05, 1.380499999999868e-05, 1.4097000000001109e-05, 1.384699999999739...</msg>
<status status="PASS" starttime="20201117 14:40:47.199" endtime="20201117 14:40:47.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.217" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.216" endtime="20201117 14:40:47.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.219" level="INFO">VALUE: [1.4443999999998874e-05, 1.4125000000000248e-05, 1.4041000000002829e-05, 1.401300000000022e-05, 1.3930000000002274e-05, 1.380499999999868e-05, 1.4097000000001109e-05, 1.384699999999739e-05, 1.4236000000000804e-05, 1.3570000000000942e-05, 1.4165999999999485e-05, 1.4069000000001969e-05, 1.380499999999868e-05, 1.4000000000000123e-05, 1.4165999999999485e-05, 1.3791000000002579e-05, 1.4179999999999054e-05, 1.3874999999999998e-05, 1.4193999999998624e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3902999999999138e-05, 1.3985999999997084e-05, 1.3874999999999998e-05, 1.3792000000002053e-05, 1.3749999999999873e-05, 1.3986000000000554e-05, 1.3736000000000304e-05, 1.4055000000002399e-05, 1.3971999999997514e-05, 1.4111000000000679e-05, 1.3736000000000304e-05, 1.3944000000001844e-05, 1.4320000000001692e-05, 1.4291999999999083e-05, 1.4167000000002428e-05, 1.3958000000001414e-05, 1.3679999999998554e-05, 1.3777999999999013e-05, 1.4056000000001873e-05, 1.3957999999997944e-05, 1.3931000000001748e-05, 1.4013999999999693e-05, 1.3778000000002483e-05, 1.4070000000001442e-05, 1.4111000000000679e-05, 1.4125000000000248e-05, 1.4250000000000373e-05, 1.3707999999997694e-05, 1.4041999999998833e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.218" endtime="20201117 14:40:47.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.213" endtime="20201117 14:40:47.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.222" endtime="20201117 14:40:47.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.226" endtime="20201117 14:40:47.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.224" endtime="20201117 14:40:47.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.221" endtime="20201117 14:40:47.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.852" endtime="20201117 14:40:47.246"></status>
</kw>
<msg timestamp="20201117 14:40:47.247" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.255" endtime="20201117 14:40:47.269"></status>
</kw>
<msg timestamp="20201117 14:40:47.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.253" endtime="20201117 14:40:47.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.271" endtime="20201117 14:40:47.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.273" endtime="20201117 14:40:47.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.251" endtime="20201117 14:40:47.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.249" endtime="20201117 14:40:47.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.286" endtime="20201117 14:40:47.587"></status>
</kw>
<msg timestamp="20201117 14:40:47.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021355597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.283" endtime="20201117 14:40:47.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021355597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.591" endtime="20201117 14:40:47.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.599" endtime="20201117 14:40:47.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.280" endtime="20201117 14:40:47.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.278" endtime="20201117 14:40:47.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.606" level="INFO">${RESULT} = [{'time': 0.021355597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.021375431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:47.603" endtime="20201117 14:40:47.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.620" level="INFO">${ACCURACY} = {'source_diff': [1.4778000000000013e-05, 1.4334000000001262e-05, 1.4069999999997973e-05, 1.3709000000000637e-05, 1.4111999999996683e-05, 1.3874999999999998e-05, 1.3791000000002579e-05, 1.4013999999999...</msg>
<status status="PASS" starttime="20201117 14:40:47.607" endtime="20201117 14:40:47.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.624" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.623" endtime="20201117 14:40:47.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.627" level="INFO">VALUE: [1.4778000000000013e-05, 1.4334000000001262e-05, 1.4069999999997973e-05, 1.3709000000000637e-05, 1.4111999999996683e-05, 1.3874999999999998e-05, 1.3791000000002579e-05, 1.4013999999999693e-05, 1.3708000000001164e-05, 1.4151999999999915e-05, 1.3972000000000984e-05, 1.4138000000000345e-05, 1.3680000000002024e-05, 1.3915999999999235e-05, 1.4194000000002094e-05, 1.3888999999999568e-05, 1.4208000000001664e-05, 1.3833000000001289e-05, 1.3722000000000734e-05, 1.3930000000002274e-05, 1.4179999999999054e-05, 1.3778000000002483e-05, 1.3888999999999568e-05, 1.3791000000002579e-05, 1.3917000000002178e-05, 1.3958000000001414e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4041999999998833e-05, 1.4083000000001539e-05, 1.409699999999764e-05, 1.3722000000000734e-05, 1.3929999999998804e-05, 1.4263999999999943e-05, 1.4152999999999388e-05, 1.4235999999997334e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.4000000000000123e-05, 1.4221999999997764e-05, 1.3874999999999998e-05, 1.3929999999998804e-05, 1.3805000000002149e-05, 1.4125000000000248e-05, 1.4013999999999693e-05, 1.3805999999998153e-05, 1.4180999999998528e-05, 1.3861000000000429e-05, 1.3943999999998374e-05, 1.4292000000002553e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.625" endtime="20201117 14:40:47.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.621" endtime="20201117 14:40:47.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.630" endtime="20201117 14:40:47.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.633" endtime="20201117 14:40:47.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.632" endtime="20201117 14:40:47.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.628" endtime="20201117 14:40:47.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.247" endtime="20201117 14:40:47.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.850" endtime="20201117 14:40:47.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.849" endtime="20201117 14:40:47.654"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.657" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.665" endtime="20201117 14:40:47.679"></status>
</kw>
<msg timestamp="20201117 14:40:47.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.663" endtime="20201117 14:40:47.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.681" endtime="20201117 14:40:47.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.683" endtime="20201117 14:40:47.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.661" endtime="20201117 14:40:47.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.659" endtime="20201117 14:40:47.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.693" endtime="20201117 14:40:47.979"></status>
</kw>
<msg timestamp="20201117 14:40:47.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023885417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.692" endtime="20201117 14:40:47.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023885417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.983" endtime="20201117 14:40:47.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.992" endtime="20201117 14:40:47.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.689" endtime="20201117 14:40:47.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.687" endtime="20201117 14:40:47.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.998" level="INFO">${RESULT} = [{'time': 0.023885417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.02390525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:40:47.995" endtime="20201117 14:40:47.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.012" level="INFO">${ACCURACY} = {'source_diff': [1.4652999999999888e-05, 1.4443999999998874e-05, 1.4042000000002303e-05, 1.3902999999999138e-05, 1.4027999999999263e-05, 1.3736000000000304e-05, 1.3916999999998708e-05, 1.4195000000001...</msg>
<status status="PASS" starttime="20201117 14:40:47.999" endtime="20201117 14:40:48.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.017" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.016" endtime="20201117 14:40:48.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.019" level="INFO">VALUE: [1.4652999999999888e-05, 1.4443999999998874e-05, 1.4042000000002303e-05, 1.3902999999999138e-05, 1.4027999999999263e-05, 1.3736000000000304e-05, 1.3916999999998708e-05, 1.4195000000001567e-05, 1.4319999999998223e-05, 1.3888999999999568e-05, 1.4236000000000804e-05, 1.3833000000001289e-05, 1.3916999999998708e-05, 1.3764000000002913e-05, 1.409699999999764e-05, 1.4070000000001442e-05, 1.4097000000001109e-05, 1.3903000000002608e-05, 1.3971999999997514e-05, 1.3792000000002053e-05, 1.4208999999997668e-05, 1.3915999999999235e-05, 1.4194000000002094e-05, 1.4056000000001873e-05, 1.4111000000000679e-05, 1.4263999999999943e-05, 1.3791999999998583e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.3848000000000332e-05, 1.4222000000001234e-05, 1.3805999999998153e-05, 1.3973000000000457e-05, 1.4125000000000248e-05, 1.3917000000002178e-05, 1.3791999999998583e-05, 1.3736000000000304e-05, 1.4138999999999818e-05, 1.3915999999999235e-05, 1.4263999999999943e-05, 1.4207999999998194e-05, 1.4153000000002858e-05, 1.4055999999998403e-05, 1.3806000000001623e-05, 1.4084000000001012e-05, 1.380499999999868e-05, 1.3888999999999568e-05, 1.426300000000047e-05, 1.4041999999998833e-05, 1.3930000000002274e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.018" endtime="20201117 14:40:48.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.013" endtime="20201117 14:40:48.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.022" endtime="20201117 14:40:48.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.026" endtime="20201117 14:40:48.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.024" endtime="20201117 14:40:48.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.021" endtime="20201117 14:40:48.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.657" endtime="20201117 14:40:48.046"></status>
</kw>
<msg timestamp="20201117 14:40:48.046" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.055" endtime="20201117 14:40:48.069"></status>
</kw>
<msg timestamp="20201117 14:40:48.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.054" endtime="20201117 14:40:48.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.071" endtime="20201117 14:40:48.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.073" endtime="20201117 14:40:48.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.051" endtime="20201117 14:40:48.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.049" endtime="20201117 14:40:48.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.083" endtime="20201117 14:40:48.369"></status>
</kw>
<msg timestamp="20201117 14:40:48.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.082" endtime="20201117 14:40:48.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.373" endtime="20201117 14:40:48.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.381" endtime="20201117 14:40:48.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.079" endtime="20201117 14:40:48.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.077" endtime="20201117 14:40:48.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:48.388" level="INFO">${RESULT} = [{'time': 0.021761167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.02178, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:48.384" endtime="20201117 14:40:48.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.401" level="INFO">${ACCURACY} = {'source_diff': [1.4389000000000068e-05, 1.3444000000001344e-05, 1.409699999999764e-05, 1.3986000000000554e-05, 1.4236000000000804e-05, 1.3916999999998708e-05, 1.4181000000001998e-05, 1.42500000000003...</msg>
<status status="PASS" starttime="20201117 14:40:48.389" endtime="20201117 14:40:48.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.406" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.405" endtime="20201117 14:40:48.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.408" level="INFO">VALUE: [1.4389000000000068e-05, 1.3444000000001344e-05, 1.409699999999764e-05, 1.3986000000000554e-05, 1.4236000000000804e-05, 1.3916999999998708e-05, 1.4181000000001998e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.3972000000000984e-05, 1.3889000000003038e-05, 1.4207999999998194e-05, 1.4000000000000123e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.3971999999997514e-05, 1.4055999999998403e-05, 1.3820000000001192e-05, 1.3749999999999873e-05, 1.4098000000000582e-05, 1.4152999999999388e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3709000000000637e-05, 1.4028000000002733e-05, 1.4138999999999818e-05, 1.4013999999999693e-05, 1.3861000000000429e-05, 1.4236000000000804e-05, 1.3833999999997293e-05, 1.4055999999998403e-05, 1.3833999999997293e-05, 1.3736999999999777e-05, 1.4152000000003384e-05, 1.4151999999999915e-05, 1.4097000000001109e-05, 1.3736999999999777e-05, 1.3945000000001317e-05, 1.4179999999999054e-05, 1.3749999999999873e-05, 1.426300000000047e-05, 1.4084000000001012e-05, 1.4000000000000123e-05, 1.4250000000000373e-05, 1.4235999999997334e-05, 1.3944000000001844e-05, 1.3929999999998804e-05, 1.4222000000001234e-05, 1.4165999999999485e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.407" endtime="20201117 14:40:48.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.402" endtime="20201117 14:40:48.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.412" endtime="20201117 14:40:48.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.415" endtime="20201117 14:40:48.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.413" endtime="20201117 14:40:48.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.410" endtime="20201117 14:40:48.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.047" endtime="20201117 14:40:48.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.655" endtime="20201117 14:40:48.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.655" endtime="20201117 14:40:48.436"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.439" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.447" endtime="20201117 14:40:48.462"></status>
</kw>
<msg timestamp="20201117 14:40:48.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.446" endtime="20201117 14:40:48.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.463" endtime="20201117 14:40:48.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.466" endtime="20201117 14:40:48.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.443" endtime="20201117 14:40:48.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.441" endtime="20201117 14:40:48.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.475" endtime="20201117 14:40:48.760"></status>
</kw>
<msg timestamp="20201117 14:40:48.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024692069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.473" endtime="20201117 14:40:48.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024692069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.764" endtime="20201117 14:40:48.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.773" endtime="20201117 14:40:48.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.471" endtime="20201117 14:40:48.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.469" endtime="20201117 14:40:48.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:48.779" level="INFO">${RESULT} = [{'time': 0.024706778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4708999999998168e-05, 'source_diff': 1.4708999999998168e-05}, {'time': 0.024726569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:48.776" endtime="20201117 14:40:48.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.794" level="INFO">${ACCURACY} = {'source_diff': [1.4708999999998168e-05, 1.401300000000022e-05, 1.405499999999893e-05, 1.4165999999999485e-05, 1.3860999999996959e-05, 1.426300000000047e-05, 1.3861000000000429e-05, 1.3972000000000984...</msg>
<status status="PASS" starttime="20201117 14:40:48.780" endtime="20201117 14:40:48.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.799" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.797" endtime="20201117 14:40:48.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.801" level="INFO">VALUE: [1.4708999999998168e-05, 1.401300000000022e-05, 1.405499999999893e-05, 1.4165999999999485e-05, 1.3860999999996959e-05, 1.426300000000047e-05, 1.3861000000000429e-05, 1.3972000000000984e-05, 1.3902000000003134e-05, 1.3958000000001414e-05, 1.4097000000001109e-05, 1.4236000000000804e-05, 1.4151999999999915e-05, 1.40689999999985e-05, 1.404099999999936e-05, 1.3943999999998374e-05, 1.4222000000001234e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.4124999999996779e-05, 1.3708000000001164e-05, 1.3735999999996834e-05, 1.3915999999999235e-05, 1.3833000000001289e-05, 1.4000000000000123e-05, 1.3903000000002608e-05, 1.3721999999997264e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.4194000000002094e-05, 1.3985999999997084e-05, 1.4013999999999693e-05, 1.3874999999999998e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.381899999999825e-05, 1.4055000000002399e-05, 1.40689999999985e-05, 1.3986000000000554e-05, 1.3861000000000429e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.4000000000000123e-05, 1.3985999999997084e-05, 1.3916999999998708e-05, 1.4292000000002553e-05, 1.4027999999999263e-05, 1.3680999999998028e-05, 1.3957999999997944e-05, 1.3819000000001719e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.800" endtime="20201117 14:40:48.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.795" endtime="20201117 14:40:48.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.805" endtime="20201117 14:40:48.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.808" endtime="20201117 14:40:48.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.806" endtime="20201117 14:40:48.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.803" endtime="20201117 14:40:48.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.440" endtime="20201117 14:40:48.829"></status>
</kw>
<msg timestamp="20201117 14:40:48.829" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.837" endtime="20201117 14:40:48.852"></status>
</kw>
<msg timestamp="20201117 14:40:48.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.836" endtime="20201117 14:40:48.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.854" endtime="20201117 14:40:48.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.856" endtime="20201117 14:40:48.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.833" endtime="20201117 14:40:48.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.831" endtime="20201117 14:40:48.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.866" endtime="20201117 14:40:49.152"></status>
</kw>
<msg timestamp="20201117 14:40:49.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021586722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.865" endtime="20201117 14:40:49.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021586722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.156" endtime="20201117 14:40:49.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.164" endtime="20201117 14:40:49.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.862" endtime="20201117 14:40:49.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.860" endtime="20201117 14:40:49.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.171" level="INFO">${RESULT} = [{'time': 0.021601264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.021621097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:49.167" endtime="20201117 14:40:49.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.184" level="INFO">${ACCURACY} = {'source_diff': [1.4541999999999333e-05, 1.4375000000000498e-05, 1.4013999999999693e-05, 1.3736000000000304e-05, 1.4097000000001109e-05, 1.4014000000003163e-05, 1.4277999999999513e-05, 1.3958000000001...</msg>
<status status="PASS" starttime="20201117 14:40:49.172" endtime="20201117 14:40:49.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.189" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.188" endtime="20201117 14:40:49.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.191" level="INFO">VALUE: [1.4541999999999333e-05, 1.4375000000000498e-05, 1.4013999999999693e-05, 1.3736000000000304e-05, 1.4097000000001109e-05, 1.4014000000003163e-05, 1.4277999999999513e-05, 1.3958000000001414e-05, 1.3736000000000304e-05, 1.3930999999998278e-05, 1.4014000000003163e-05, 1.3888999999999568e-05, 1.408299999999807e-05, 1.3708000000001164e-05, 1.4110999999997209e-05, 1.4263999999999943e-05, 1.4195000000001567e-05, 1.4194999999998098e-05, 1.4152999999999388e-05, 1.4111000000000679e-05, 1.4028000000002733e-05, 1.3749999999999873e-05, 1.4263999999999943e-05, 1.4069999999997973e-05, 1.3777999999999013e-05, 1.3874999999999998e-05, 1.3834000000000762e-05, 1.4124999999996779e-05, 1.4277999999999513e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3986000000000554e-05, 1.4111000000000679e-05, 1.4222000000001234e-05, 1.4180999999998528e-05, 1.3959000000000887e-05, 1.3763999999999443e-05, 1.4195000000001567e-05, 1.3833999999997293e-05, 1.3722000000000734e-05, 1.3791999999998583e-05, 1.3917000000002178e-05, 1.3860999999996959e-05, 1.4125000000000248e-05, 1.3985999999997084e-05, 1.3736999999999777e-05, 1.4055999999998403e-05, 1.3888999999999568e-05, 1.4223000000000707e-05, 1.377699999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.190" endtime="20201117 14:40:49.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.185" endtime="20201117 14:40:49.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.195" endtime="20201117 14:40:49.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.198" endtime="20201117 14:40:49.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.197" endtime="20201117 14:40:49.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.193" endtime="20201117 14:40:49.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.830" endtime="20201117 14:40:49.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.438" endtime="20201117 14:40:49.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.437" endtime="20201117 14:40:49.220"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.222" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.230" endtime="20201117 14:40:49.245"></status>
</kw>
<msg timestamp="20201117 14:40:49.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.229" endtime="20201117 14:40:49.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.247" endtime="20201117 14:40:49.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.249" endtime="20201117 14:40:49.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.226" endtime="20201117 14:40:49.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.224" endtime="20201117 14:40:49.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.258" endtime="20201117 14:40:49.544"></status>
</kw>
<msg timestamp="20201117 14:40:49.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024386333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.257" endtime="20201117 14:40:49.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024386333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.549" endtime="20201117 14:40:49.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.557" endtime="20201117 14:40:49.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.254" endtime="20201117 14:40:49.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.252" endtime="20201117 14:40:49.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.563" level="INFO">${RESULT} = [{'time': 0.024401167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4834000000001762e-05, 'source_diff': 1.4834000000001762e-05}, {'time': 0.02442, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:49.560" endtime="20201117 14:40:49.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.577" level="INFO">${ACCURACY} = {'source_diff': [1.4834000000001762e-05, 1.3583000000001039e-05, 1.3541999999998333e-05, 1.4125000000000248e-05, 1.384699999999739e-05, 1.3944000000001844e-05, 1.4041999999998833e-05, 1.38339999999972...</msg>
<status status="PASS" starttime="20201117 14:40:49.564" endtime="20201117 14:40:49.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.582" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.581" endtime="20201117 14:40:49.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.585" level="INFO">VALUE: [1.4834000000001762e-05, 1.3583000000001039e-05, 1.3541999999998333e-05, 1.4125000000000248e-05, 1.384699999999739e-05, 1.3944000000001844e-05, 1.4041999999998833e-05, 1.3833999999997293e-05, 1.3736000000000304e-05, 1.3819999999997723e-05, 1.4208000000001664e-05, 1.4165999999999485e-05, 1.4027999999999263e-05, 1.4221999999997764e-05, 1.3901999999999665e-05, 1.4111000000000679e-05, 1.3778000000002483e-05, 1.3860999999996959e-05, 1.4277999999999513e-05, 1.3888999999999568e-05, 1.3902999999999138e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4209000000001137e-05, 1.4084000000001012e-05, 1.4042000000002303e-05, 1.4138999999999818e-05, 1.4250000000000373e-05, 1.3638999999999318e-05, 1.4237000000000277e-05, 1.3763999999999443e-05, 1.3806000000001623e-05, 1.3709000000000637e-05, 1.3860999999996959e-05, 1.3708999999997168e-05, 1.4195000000001567e-05, 1.4208999999997668e-05, 1.4056000000001873e-05, 1.4222000000001234e-05, 1.427700000000004e-05, 1.4165999999999485e-05, 1.4013999999999693e-05, 1.3749999999999873e-05, 1.408299999999807e-05, 1.4250000000000373e-05, 1.405499999999893e-05, 1.4125000000000248e-05, 1.3915999999999235e-05, 1.4000000000000123e-05, 1.4110999999997209e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.583" endtime="20201117 14:40:49.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.578" endtime="20201117 14:40:49.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.588" endtime="20201117 14:40:49.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.591" endtime="20201117 14:40:49.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.590" endtime="20201117 14:40:49.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.586" endtime="20201117 14:40:49.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.222" endtime="20201117 14:40:49.612"></status>
</kw>
<msg timestamp="20201117 14:40:49.612" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.621" endtime="20201117 14:40:49.635"></status>
</kw>
<msg timestamp="20201117 14:40:49.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.619" endtime="20201117 14:40:49.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.637" endtime="20201117 14:40:49.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.639" endtime="20201117 14:40:49.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.616" endtime="20201117 14:40:49.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.614" endtime="20201117 14:40:49.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.649" endtime="20201117 14:40:49.935"></status>
</kw>
<msg timestamp="20201117 14:40:49.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.648" endtime="20201117 14:40:49.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.940" endtime="20201117 14:40:49.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.948" endtime="20201117 14:40:49.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.645" endtime="20201117 14:40:49.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.643" endtime="20201117 14:40:49.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.954" level="INFO">${RESULT} = [{'time': 0.021514903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5083999999998543e-05, 'source_diff': 1.5083999999998543e-05}, {'time': 0.021533736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:49.951" endtime="20201117 14:40:49.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.968" level="INFO">${ACCURACY} = {'source_diff': [1.5083999999998543e-05, 1.3514000000002663e-05, 1.40689999999985e-05, 1.4097000000001109e-05, 1.4027999999999263e-05, 1.4208000000001664e-05, 1.3860999999996959e-05, 1.411100000000067...</msg>
<status status="PASS" starttime="20201117 14:40:49.955" endtime="20201117 14:40:49.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.973" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.972" endtime="20201117 14:40:49.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.975" level="INFO">VALUE: [1.5083999999998543e-05, 1.3514000000002663e-05, 1.40689999999985e-05, 1.4097000000001109e-05, 1.4027999999999263e-05, 1.4208000000001664e-05, 1.3860999999996959e-05, 1.4111000000000679e-05, 1.3986000000000554e-05, 1.3958000000001414e-05, 1.3736000000000304e-05, 1.4250000000000373e-05, 1.3973000000000457e-05, 1.4221999999997764e-05, 1.3972000000000984e-05, 1.4250000000000373e-05, 1.3959000000000887e-05, 1.4180999999998528e-05, 1.4056000000001873e-05, 1.4041000000002829e-05, 1.3820000000001192e-05, 1.3749999999999873e-05, 1.4277999999999513e-05, 1.3834000000000762e-05, 1.3916999999998708e-05, 1.3834000000000762e-05, 1.4208999999997668e-05, 1.4098000000000582e-05, 1.4194000000002094e-05, 1.4277999999999513e-05, 1.4069999999997973e-05, 1.3777999999999013e-05, 1.4125000000000248e-05, 1.4195000000001567e-05, 1.3889000000003038e-05, 1.3834000000000762e-05, 1.4110999999997209e-05, 1.4055999999998403e-05, 1.4098000000000582e-05, 1.3666999999998458e-05, 1.3778000000002483e-05, 1.3888999999999568e-05, 1.429099999999961e-05, 1.4429999999999304e-05, 1.3736000000000304e-05, 1.3777999999999013e-05, 1.3805000000002149e-05, 1.3930999999998278e-05, 1.4165999999999485e-05, 1.3944999999997848e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.974" endtime="20201117 14:40:49.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.969" endtime="20201117 14:40:49.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.979" endtime="20201117 14:40:49.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.982" endtime="20201117 14:40:50.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.981" endtime="20201117 14:40:50.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.977" endtime="20201117 14:40:50.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.613" endtime="20201117 14:40:50.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.221" endtime="20201117 14:40:50.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.220" endtime="20201117 14:40:50.003"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.005" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.014" endtime="20201117 14:40:50.029"></status>
</kw>
<msg timestamp="20201117 14:40:50.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.012" endtime="20201117 14:40:50.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.031" endtime="20201117 14:40:50.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.033" endtime="20201117 14:40:50.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.010" endtime="20201117 14:40:50.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.007" endtime="20201117 14:40:50.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.042" endtime="20201117 14:40:50.327"></status>
</kw>
<msg timestamp="20201117 14:40:50.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024678389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.041" endtime="20201117 14:40:50.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024678389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.332" endtime="20201117 14:40:50.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.340" endtime="20201117 14:40:50.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.038" endtime="20201117 14:40:50.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.036" endtime="20201117 14:40:50.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.347" level="INFO">${RESULT} = [{'time': 0.024693569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5180000000000055e-05, 'source_diff': 1.5180000000000055e-05}, {'time': 0.024713403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.344" endtime="20201117 14:40:50.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.362" level="INFO">${ACCURACY} = {'source_diff': [1.5180000000000055e-05, 1.4041999999998833e-05, 1.3957999999997944e-05, 1.4167000000002428e-05, 1.4263999999999943e-05, 1.4014000000003163e-05, 1.4069999999997973e-05, 1.3792000000002...</msg>
<status status="PASS" starttime="20201117 14:40:50.348" endtime="20201117 14:40:50.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.366" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.365" endtime="20201117 14:40:50.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.369" level="INFO">VALUE: [1.5180000000000055e-05, 1.4041999999998833e-05, 1.3957999999997944e-05, 1.4167000000002428e-05, 1.4263999999999943e-05, 1.4014000000003163e-05, 1.4069999999997973e-05, 1.3792000000002053e-05, 1.3749999999999873e-05, 1.4209000000001137e-05, 1.4112000000000152e-05, 1.3959000000000887e-05, 1.4069999999997973e-05, 1.4084000000001012e-05, 1.4263999999999943e-05, 1.4195000000001567e-05, 1.4112000000000152e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.3848000000000332e-05, 1.4208000000001664e-05, 1.4098000000000582e-05, 1.4181000000001998e-05, 1.4125000000000248e-05, 1.3888999999999568e-05, 1.4110999999997209e-05, 1.3763999999999443e-05, 1.4194999999998098e-05, 1.3708000000001164e-05, 1.379099999999911e-05, 1.4138999999999818e-05, 1.408299999999807e-05, 1.380499999999868e-05, 1.427700000000004e-05, 1.4097000000001109e-05, 1.404099999999936e-05, 1.427700000000004e-05, 1.3694000000001594e-05, 1.3874999999999998e-05, 1.4194000000002094e-05, 1.383299999999782e-05, 1.3833000000001289e-05, 1.3901999999999665e-05, 1.4277999999999513e-05, 1.3915999999999235e-05, 1.3874999999999998e-05, 1.3749999999999873e-05, 1.4013999999999693e-05, 1.402699999999979e-05, 1.404099999999936e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.367" endtime="20201117 14:40:50.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.363" endtime="20201117 14:40:50.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.372" endtime="20201117 14:40:50.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.375" endtime="20201117 14:40:50.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.374" endtime="20201117 14:40:50.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.370" endtime="20201117 14:40:50.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.006" endtime="20201117 14:40:50.396"></status>
</kw>
<msg timestamp="20201117 14:40:50.396" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.404" endtime="20201117 14:40:50.419"></status>
</kw>
<msg timestamp="20201117 14:40:50.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.403" endtime="20201117 14:40:50.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.421" endtime="20201117 14:40:50.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.423" endtime="20201117 14:40:50.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.400" endtime="20201117 14:40:50.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.398" endtime="20201117 14:40:50.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.433" endtime="20201117 14:40:50.719"></status>
</kw>
<msg timestamp="20201117 14:40:50.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.432" endtime="20201117 14:40:50.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.723" endtime="20201117 14:40:50.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.732" endtime="20201117 14:40:50.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.429" endtime="20201117 14:40:50.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.427" endtime="20201117 14:40:50.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.738" level="INFO">${RESULT} = [{'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.021803569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.735" endtime="20201117 14:40:50.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.752" level="INFO">${ACCURACY} = {'source_diff': [1.4639000000000318e-05, 1.4165999999999485e-05, 1.3861000000000429e-05, 1.3847999999996863e-05, 1.3929999999998804e-05, 1.4124999999996779e-05, 1.3666999999998458e-05, 1.4013000000000...</msg>
<status status="PASS" starttime="20201117 14:40:50.739" endtime="20201117 14:40:50.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.756" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.755" endtime="20201117 14:40:50.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.759" level="INFO">VALUE: [1.4639000000000318e-05, 1.4165999999999485e-05, 1.3861000000000429e-05, 1.3847999999996863e-05, 1.3929999999998804e-05, 1.4124999999996779e-05, 1.3666999999998458e-05, 1.401300000000022e-05, 1.4138999999999818e-05, 1.3763999999999443e-05, 1.4013999999999693e-05, 1.3959000000000887e-05, 1.4194000000002094e-05, 1.3708000000001164e-05, 1.3723000000000207e-05, 1.3820000000001192e-05, 1.409699999999764e-05, 1.401300000000022e-05, 1.4277999999999513e-05, 1.4250000000000373e-05, 1.4055000000002399e-05, 1.3736000000000304e-05, 1.4193999999998624e-05, 1.3901999999999665e-05, 1.4055000000002399e-05, 1.4153000000002858e-05, 1.3958000000001414e-05, 1.3902999999999138e-05, 1.4165999999999485e-05, 1.404099999999936e-05, 1.4027999999999263e-05, 1.40689999999985e-05, 1.4111000000000679e-05, 1.4221999999997764e-05, 1.4138999999999818e-05, 1.3860999999996959e-05, 1.3861000000000429e-05, 1.4027999999999263e-05, 1.409699999999764e-05, 1.3736000000000304e-05, 1.4013999999999693e-05, 1.4083000000001539e-05, 1.3986000000000554e-05, 1.4111000000000679e-05, 1.3722000000000734e-05, 1.3777999999999013e-05, 1.408299999999807e-05, 1.3888999999999568e-05, 1.4277999999999513e-05, 1.4193999999998624e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.757" endtime="20201117 14:40:50.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.753" endtime="20201117 14:40:50.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.762" endtime="20201117 14:40:50.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.765" endtime="20201117 14:40:50.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.764" endtime="20201117 14:40:50.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.760" endtime="20201117 14:40:50.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.397" endtime="20201117 14:40:50.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.004" endtime="20201117 14:40:50.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.004" endtime="20201117 14:40:50.786"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.789" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.797" endtime="20201117 14:40:50.811"></status>
</kw>
<msg timestamp="20201117 14:40:50.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.795" endtime="20201117 14:40:50.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.813" endtime="20201117 14:40:50.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.816" endtime="20201117 14:40:50.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.793" endtime="20201117 14:40:50.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.791" endtime="20201117 14:40:50.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.825" endtime="20201117 14:40:51.111"></status>
</kw>
<msg timestamp="20201117 14:40:51.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023876597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.823" endtime="20201117 14:40:51.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023876597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.115" endtime="20201117 14:40:51.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.123" endtime="20201117 14:40:51.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.821" endtime="20201117 14:40:51.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.819" endtime="20201117 14:40:51.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.130" level="INFO">${RESULT} = [{'time': 0.023891542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4945000000002318e-05, 'source_diff': 1.4945000000002318e-05}, {'time': 0.023910361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:51.126" endtime="20201117 14:40:51.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.144" level="INFO">${ACCURACY} = {'source_diff': [1.4945000000002318e-05, 1.3569000000001469e-05, 1.4013999999999693e-05, 1.4208000000001664e-05, 1.4013999999999693e-05, 1.3764000000002913e-05, 1.40689999999985e-05, 1.422200000000123...</msg>
<status status="PASS" starttime="20201117 14:40:51.131" endtime="20201117 14:40:51.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.148" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.147" endtime="20201117 14:40:51.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.151" level="INFO">VALUE: [1.4945000000002318e-05, 1.3569000000001469e-05, 1.4013999999999693e-05, 1.4208000000001664e-05, 1.4013999999999693e-05, 1.3764000000002913e-05, 1.40689999999985e-05, 1.4222000000001234e-05, 1.4263999999999943e-05, 1.4083000000001539e-05, 1.3958000000001414e-05, 1.3749999999999873e-05, 1.4056000000001873e-05, 1.4208000000001664e-05, 1.3888999999999568e-05, 1.3791999999998583e-05, 1.4014000000003163e-05, 1.3736000000000304e-05, 1.3861000000000429e-05, 1.3930999999998278e-05, 1.4111000000000679e-05, 1.4000000000000123e-05, 1.4084000000001012e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.4235999999997334e-05, 1.3945000000001317e-05, 1.4250000000000373e-05, 1.4166999999998958e-05, 1.4056000000001873e-05, 1.4235999999997334e-05, 1.3945000000001317e-05, 1.4013999999999693e-05, 1.4125000000000248e-05, 1.3736000000000304e-05, 1.3861000000000429e-05, 1.4055999999998403e-05, 1.3736000000000304e-05, 1.3944999999997848e-05, 1.3888999999999568e-05, 1.3736999999999777e-05, 1.4041999999998833e-05, 1.3764000000002913e-05, 1.4223000000000707e-05, 1.3903000000002608e-05, 1.3820000000001192e-05, 1.4181000000001998e-05, 1.3777999999999013e-05, 1.383299999999782e-05, 1.4069999999997973e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.149" endtime="20201117 14:40:51.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.144" endtime="20201117 14:40:51.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.154" endtime="20201117 14:40:51.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.157" endtime="20201117 14:40:51.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.156" endtime="20201117 14:40:51.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.152" endtime="20201117 14:40:51.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.789" endtime="20201117 14:40:51.178"></status>
</kw>
<msg timestamp="20201117 14:40:51.178" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.186" endtime="20201117 14:40:51.200"></status>
</kw>
<msg timestamp="20201117 14:40:51.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.185" endtime="20201117 14:40:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.201" endtime="20201117 14:40:51.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.204" endtime="20201117 14:40:51.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.182" endtime="20201117 14:40:51.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.180" endtime="20201117 14:40:51.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.214" endtime="20201117 14:40:51.500"></status>
</kw>
<msg timestamp="20201117 14:40:51.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.213" endtime="20201117 14:40:51.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.504" endtime="20201117 14:40:51.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.512" endtime="20201117 14:40:51.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.210" endtime="20201117 14:40:51.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.208" endtime="20201117 14:40:51.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.519" level="INFO">${RESULT} = [{'time': 0.021412097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.505499999999993e-05, 'source_diff': 1.505499999999993e-05}, {'time': 0.021431944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:51.516" endtime="20201117 14:40:51.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.533" level="INFO">${ACCURACY} = {'source_diff': [1.505499999999993e-05, 1.4151999999999915e-05, 1.405499999999893e-05, 1.3958000000001414e-05, 1.4111000000000679e-05, 1.3708000000001164e-05, 1.3901999999999665e-05, 1.388899999999956...</msg>
<status status="PASS" starttime="20201117 14:40:51.520" endtime="20201117 14:40:51.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.537" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.536" endtime="20201117 14:40:51.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.540" level="INFO">VALUE: [1.505499999999993e-05, 1.4151999999999915e-05, 1.405499999999893e-05, 1.3958000000001414e-05, 1.4111000000000679e-05, 1.3708000000001164e-05, 1.3901999999999665e-05, 1.3888999999999568e-05, 1.4179999999999054e-05, 1.4111000000000679e-05, 1.384699999999739e-05, 1.4195000000001567e-05, 1.429099999999961e-05, 1.3763999999999443e-05, 1.4221999999997764e-05, 1.3679999999998554e-05, 1.3708000000001164e-05, 1.3888999999999568e-05, 1.4013999999999693e-05, 1.3707999999997694e-05, 1.3763999999999443e-05, 1.40689999999985e-05, 1.4222000000001234e-05, 1.4125000000000248e-05, 1.4236000000000804e-05, 1.3944000000001844e-05, 1.4250000000000373e-05, 1.3902999999999138e-05, 1.3929999999998804e-05, 1.3889000000003038e-05, 1.3763999999999443e-05, 1.4027999999999263e-05, 1.4138999999999818e-05, 1.3930000000002274e-05, 1.3749999999999873e-05, 1.4069000000001969e-05, 1.384699999999739e-05, 1.3944000000001844e-05, 1.3791999999998583e-05, 1.4027999999999263e-05, 1.3931000000001748e-05, 1.3791999999998583e-05, 1.3708000000001164e-05, 1.4069999999997973e-05, 1.4070000000001442e-05, 1.3722000000000734e-05, 1.3833000000001289e-05, 1.4152999999999388e-05, 1.4027999999999263e-05, 1.3777999999999013e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.538" endtime="20201117 14:40:51.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.534" endtime="20201117 14:40:51.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.543" endtime="20201117 14:40:51.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.546" endtime="20201117 14:40:51.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.545" endtime="20201117 14:40:51.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.541" endtime="20201117 14:40:51.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.179" endtime="20201117 14:40:51.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.788" endtime="20201117 14:40:51.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.787" endtime="20201117 14:40:51.567"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.570" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.578" endtime="20201117 14:40:51.594"></status>
</kw>
<msg timestamp="20201117 14:40:51.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.577" endtime="20201117 14:40:51.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.595" endtime="20201117 14:40:51.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.598" endtime="20201117 14:40:51.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.574" endtime="20201117 14:40:51.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.571" endtime="20201117 14:40:51.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.607" endtime="20201117 14:40:51.893"></status>
</kw>
<msg timestamp="20201117 14:40:51.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025417167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.605" endtime="20201117 14:40:51.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025417167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.897" endtime="20201117 14:40:51.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.905" endtime="20201117 14:40:51.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.603" endtime="20201117 14:40:51.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.601" endtime="20201117 14:40:51.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.912" level="INFO">${RESULT} = [{'time': 0.025431833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4665999999999985e-05, 'source_diff': 1.4665999999999985e-05}, {'time': 0.025451667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:51.908" endtime="20201117 14:40:51.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.926" level="INFO">${ACCURACY} = {'source_diff': [1.4665999999999985e-05, 1.4431000000002248e-05, 1.3916999999998708e-05, 1.4041999999998833e-05, 1.4208999999997668e-05, 1.4098000000000582e-05, 1.4125000000000248e-05, 1.3987000000000...</msg>
<status status="PASS" starttime="20201117 14:40:51.913" endtime="20201117 14:40:51.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.931" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.930" endtime="20201117 14:40:51.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.933" level="INFO">VALUE: [1.4665999999999985e-05, 1.4431000000002248e-05, 1.3916999999998708e-05, 1.4041999999998833e-05, 1.4208999999997668e-05, 1.4098000000000582e-05, 1.4125000000000248e-05, 1.3987000000000027e-05, 1.3709000000000637e-05, 1.4166999999998958e-05, 1.3749999999999873e-05, 1.3916999999998708e-05, 1.3944000000001844e-05, 1.3959000000000887e-05, 1.3917000000002178e-05, 1.4027999999999263e-05, 1.3972000000000984e-05, 1.3819000000001719e-05, 1.3874999999999998e-05, 1.3929999999998804e-05, 1.3749999999999873e-05, 1.402699999999979e-05, 1.4222000000001234e-05, 1.3721999999997264e-05, 1.4236000000000804e-05, 1.3777000000003009e-05, 1.3972000000000984e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.3764000000002913e-05, 1.409699999999764e-05, 1.3874999999999998e-05, 1.3763999999999443e-05, 1.3708000000001164e-05, 1.379099999999911e-05, 1.427700000000004e-05, 1.4125000000000248e-05, 1.3915999999999235e-05, 1.4152999999999388e-05, 1.3986000000000554e-05, 1.3805000000002149e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.4165999999999485e-05, 1.4180000000002524e-05, 1.3929999999998804e-05, 1.3958000000001414e-05, 1.4263999999999943e-05, 1.4000000000000123e-05, 1.383299999999782e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.932" endtime="20201117 14:40:51.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.927" endtime="20201117 14:40:51.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.937" endtime="20201117 14:40:51.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.940" endtime="20201117 14:40:51.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.938" endtime="20201117 14:40:51.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.935" endtime="20201117 14:40:51.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.570" endtime="20201117 14:40:51.965"></status>
</kw>
<msg timestamp="20201117 14:40:51.965" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.973" endtime="20201117 14:40:51.988"></status>
</kw>
<msg timestamp="20201117 14:40:51.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.972" endtime="20201117 14:40:51.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.989" endtime="20201117 14:40:51.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.992" endtime="20201117 14:40:51.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.969" endtime="20201117 14:40:51.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.967" endtime="20201117 14:40:51.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.002" endtime="20201117 14:40:52.287"></status>
</kw>
<msg timestamp="20201117 14:40:52.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.000" endtime="20201117 14:40:52.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.292" endtime="20201117 14:40:52.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.300" endtime="20201117 14:40:52.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.997" endtime="20201117 14:40:52.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.996" endtime="20201117 14:40:52.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.307" level="INFO">${RESULT} = [{'time': 0.021637236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.021656083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:52.303" endtime="20201117 14:40:52.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.320" level="INFO">${ACCURACY} = {'source_diff': [1.5028000000000263e-05, 1.3583000000001039e-05, 1.4027999999999263e-05, 1.381899999999825e-05, 1.3805000000002149e-05, 1.404099999999936e-05, 1.3915999999999235e-05, 1.401399999999969...</msg>
<status status="PASS" starttime="20201117 14:40:52.308" endtime="20201117 14:40:52.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.325" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.324" endtime="20201117 14:40:52.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.327" level="INFO">VALUE: [1.5028000000000263e-05, 1.3583000000001039e-05, 1.4027999999999263e-05, 1.381899999999825e-05, 1.3805000000002149e-05, 1.404099999999936e-05, 1.3915999999999235e-05, 1.4013999999999693e-05, 1.3944000000001844e-05, 1.3791999999998583e-05, 1.4151999999999915e-05, 1.3985999999997084e-05, 1.4208000000001664e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.4221999999997764e-05, 1.429099999999961e-05, 1.4124999999996779e-05, 1.4083000000001539e-05, 1.4083000000001539e-05, 1.405499999999893e-05, 1.4055000000002399e-05, 1.4125000000000248e-05, 1.3749999999999873e-05, 1.4277999999999513e-05, 1.3805000000002149e-05, 1.3693999999998124e-05, 1.3888999999999568e-05, 1.3833000000001289e-05, 1.4041999999998833e-05, 1.4111000000000679e-05, 1.4207999999998194e-05, 1.3778000000002483e-05, 1.4055999999998403e-05, 1.4000000000000123e-05, 1.3943999999998374e-05, 1.4013999999999693e-05, 1.4013999999999693e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.4069000000001969e-05, 1.409699999999764e-05, 1.4027999999999263e-05, 1.4166999999998958e-05, 1.3749999999999873e-05, 1.3889000000003038e-05, 1.3819999999997723e-05, 1.3972000000000984e-05, 1.409699999999764e-05, 1.3888999999999568e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.326" endtime="20201117 14:40:52.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.321" endtime="20201117 14:40:52.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.331" endtime="20201117 14:40:52.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.334" endtime="20201117 14:40:52.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.333" endtime="20201117 14:40:52.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.329" endtime="20201117 14:40:52.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.966" endtime="20201117 14:40:52.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.568" endtime="20201117 14:40:52.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.567" endtime="20201117 14:40:52.355"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.358" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.366" endtime="20201117 14:40:52.380"></status>
</kw>
<msg timestamp="20201117 14:40:52.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.364" endtime="20201117 14:40:52.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.382" endtime="20201117 14:40:52.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.384" endtime="20201117 14:40:52.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.362" endtime="20201117 14:40:52.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.360" endtime="20201117 14:40:52.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.393" endtime="20201117 14:40:52.679"></status>
</kw>
<msg timestamp="20201117 14:40:52.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023788667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:52.392" endtime="20201117 14:40:52.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023788667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:52.683" endtime="20201117 14:40:52.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.692" endtime="20201117 14:40:52.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.389" endtime="20201117 14:40:52.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.388" endtime="20201117 14:40:52.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.698" level="INFO">${RESULT} = [{'time': 0.023803, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4333000000001789e-05, 'source_diff': 1.4333000000001789e-05}, {'time': 0.023822819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:40:52.695" endtime="20201117 14:40:52.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.712" level="INFO">${ACCURACY} = {'source_diff': [1.4333000000001789e-05, 1.4374999999997029e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.401300000000022e-05, 1.3861000000000429e-05, 1.4165999999999485e-05, 1.39020000000031...</msg>
<status status="PASS" starttime="20201117 14:40:52.699" endtime="20201117 14:40:52.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.716" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.715" endtime="20201117 14:40:52.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.719" level="INFO">VALUE: [1.4333000000001789e-05, 1.4374999999997029e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.401300000000022e-05, 1.3861000000000429e-05, 1.4165999999999485e-05, 1.3902000000003134e-05, 1.40689999999985e-05, 1.4222000000001234e-05, 1.408299999999807e-05, 1.3819000000001719e-05, 1.3888999999999568e-05, 1.3986000000000554e-05, 1.40689999999985e-05, 1.402699999999979e-05, 1.3749999999999873e-05, 1.4013999999999693e-05, 1.3707999999997694e-05, 1.3957999999997944e-05, 1.3917000000002178e-05, 1.3777999999999013e-05, 1.4208000000001664e-05, 1.408299999999807e-05, 1.3763999999999443e-05, 1.4167000000002428e-05, 1.4263999999999943e-05, 1.3902999999999138e-05, 1.3902999999999138e-05, 1.3985999999997084e-05, 1.3916999999998708e-05, 1.4125000000000248e-05, 1.3861000000000429e-05, 1.4097000000001109e-05, 1.4277999999999513e-05, 1.3902999999999138e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3986000000000554e-05, 1.4098000000000582e-05, 1.4166999999998958e-05, 1.4222000000001234e-05, 1.3874999999999998e-05, 1.3931000000001748e-05, 1.4125000000000248e-05, 1.4097000000001109e-05, 1.4236000000000804e-05, 1.3708000000001164e-05, 1.3874999999999998e-05, 1.4221999999997764e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.717" endtime="20201117 14:40:52.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.713" endtime="20201117 14:40:52.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.723" endtime="20201117 14:40:52.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.726" endtime="20201117 14:40:52.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.724" endtime="20201117 14:40:52.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.721" endtime="20201117 14:40:52.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.358" endtime="20201117 14:40:52.747"></status>
</kw>
<msg timestamp="20201117 14:40:52.747" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.755" endtime="20201117 14:40:52.769"></status>
</kw>
<msg timestamp="20201117 14:40:52.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.754" endtime="20201117 14:40:52.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.771" endtime="20201117 14:40:52.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.773" endtime="20201117 14:40:52.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.751" endtime="20201117 14:40:52.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.749" endtime="20201117 14:40:52.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.783" endtime="20201117 14:40:53.070"></status>
</kw>
<msg timestamp="20201117 14:40:53.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.782" endtime="20201117 14:40:53.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021424167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.074" endtime="20201117 14:40:53.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.082" endtime="20201117 14:40:53.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.779" endtime="20201117 14:40:53.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.777" endtime="20201117 14:40:53.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.089" level="INFO">${RESULT} = [{'time': 0.021424167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5223000000001707e-05, 'source_diff': 1.5223000000001707e-05}, {'time': 0.021444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:40:53.085" endtime="20201117 14:40:53.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.102" level="INFO">${ACCURACY} = {'source_diff': [1.5223000000001707e-05, 1.4375000000000498e-05, 1.4013999999999693e-05, 1.3820000000001192e-05, 1.4055999999998403e-05, 1.3749999999999873e-05, 1.3985999999997084e-05, 1.3986000000000...</msg>
<status status="PASS" starttime="20201117 14:40:53.090" endtime="20201117 14:40:53.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.107" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.106" endtime="20201117 14:40:53.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.110" level="INFO">VALUE: [1.5223000000001707e-05, 1.4375000000000498e-05, 1.4013999999999693e-05, 1.3820000000001192e-05, 1.4055999999998403e-05, 1.3749999999999873e-05, 1.3985999999997084e-05, 1.3986000000000554e-05, 1.4195000000001567e-05, 1.4041999999998833e-05, 1.383299999999782e-05, 1.4152999999999388e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4138999999999818e-05, 1.3944999999997848e-05, 1.4263999999999943e-05, 1.4000000000000123e-05, 1.3834000000000762e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3999999999996654e-05, 1.3777999999999013e-05, 1.4083000000001539e-05, 1.4125000000000248e-05, 1.4084000000001012e-05, 1.4069999999997973e-05, 1.3848000000000332e-05, 1.4000000000000123e-05, 1.4195000000001567e-05, 1.4263999999999943e-05, 1.3861999999999902e-05, 1.3987000000000027e-05, 1.3806000000001623e-05, 1.3861999999999902e-05, 1.4000000000000123e-05, 1.4249999999996904e-05, 1.4041999999998833e-05, 1.3694999999997598e-05, 1.4112000000000152e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.3819000000001719e-05, 1.3861000000000429e-05, 1.3944000000001844e-05, 1.430499999999918e-05, 1.4263999999999943e-05, 1.377699999999954e-05, 1.4222000000001234e-05, 1.381899999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.108" endtime="20201117 14:40:53.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.104" endtime="20201117 14:40:53.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.113" endtime="20201117 14:40:53.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.116" endtime="20201117 14:40:53.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.115" endtime="20201117 14:40:53.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.111" endtime="20201117 14:40:53.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.747" endtime="20201117 14:40:53.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.356" endtime="20201117 14:40:53.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.356" endtime="20201117 14:40:53.137"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.140" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.148" endtime="20201117 14:40:53.163"></status>
</kw>
<msg timestamp="20201117 14:40:53.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.146" endtime="20201117 14:40:53.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.164" endtime="20201117 14:40:53.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.167" endtime="20201117 14:40:53.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.144" endtime="20201117 14:40:53.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.142" endtime="20201117 14:40:53.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.176" endtime="20201117 14:40:53.461"></status>
</kw>
<msg timestamp="20201117 14:40:53.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.174" endtime="20201117 14:40:53.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.465" endtime="20201117 14:40:53.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.474" endtime="20201117 14:40:53.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.172" endtime="20201117 14:40:53.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.170" endtime="20201117 14:40:53.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.481" level="INFO">${RESULT} = [{'time': 0.024821889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.483299999999882e-05, 'source_diff': 1.483299999999882e-05}, {'time': 0.024841778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:53.477" endtime="20201117 14:40:53.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.496" level="INFO">${ACCURACY} = {'source_diff': [1.483299999999882e-05, 1.4110999999997209e-05, 1.3888999999999568e-05, 1.3722000000000734e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3722000000000734e-05, 1.39860000000005...</msg>
<status status="PASS" starttime="20201117 14:40:53.482" endtime="20201117 14:40:53.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.500" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.499" endtime="20201117 14:40:53.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.503" level="INFO">VALUE: [1.483299999999882e-05, 1.4110999999997209e-05, 1.3888999999999568e-05, 1.3722000000000734e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3722000000000734e-05, 1.3986000000000554e-05, 1.4166999999998958e-05, 1.4249999999996904e-05, 1.4013999999999693e-05, 1.4056000000001873e-05, 1.4194000000002094e-05, 1.3916999999998708e-05, 1.3819000000001719e-05, 1.4221999999997764e-05, 1.3930999999998278e-05, 1.4098000000000582e-05, 1.3791999999998583e-05, 1.3667000000001928e-05, 1.3693999999998124e-05, 1.3695000000001067e-05, 1.3791999999998583e-05, 1.4055999999998403e-05, 1.4000000000000123e-05, 1.3792000000002053e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.3749999999999873e-05, 1.4000000000000123e-05, 1.4138999999999818e-05, 1.4083000000001539e-05, 1.3874999999999998e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.4222000000001234e-05, 1.4097000000001109e-05, 1.4250000000000373e-05, 1.4181000000001998e-05, 1.3749999999999873e-05, 1.4138999999999818e-05, 1.4263999999999943e-05, 1.3763999999999443e-05, 1.4000000000000123e-05, 1.4277999999999513e-05, 1.4221999999997764e-05, 1.3598000000000082e-05, 1.3806000000001623e-05, 1.4027999999999263e-05, 1.4070000000001442e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.501" endtime="20201117 14:40:53.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.496" endtime="20201117 14:40:53.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.506" endtime="20201117 14:40:53.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.509" endtime="20201117 14:40:53.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.508" endtime="20201117 14:40:53.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.504" endtime="20201117 14:40:53.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.140" endtime="20201117 14:40:53.530"></status>
</kw>
<msg timestamp="20201117 14:40:53.530" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.538" endtime="20201117 14:40:53.553"></status>
</kw>
<msg timestamp="20201117 14:40:53.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.537" endtime="20201117 14:40:53.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.555" endtime="20201117 14:40:53.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.557" endtime="20201117 14:40:53.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.534" endtime="20201117 14:40:53.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.532" endtime="20201117 14:40:53.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.567" endtime="20201117 14:40:53.852"></status>
</kw>
<msg timestamp="20201117 14:40:53.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.566" endtime="20201117 14:40:53.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.856" endtime="20201117 14:40:53.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.865" endtime="20201117 14:40:53.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.563" endtime="20201117 14:40:53.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.561" endtime="20201117 14:40:53.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.872" level="INFO">${RESULT} = [{'time': 0.021654153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.021673972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:53.868" endtime="20201117 14:40:53.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.885" level="INFO">${ACCURACY} = {'source_diff': [1.4666999999999458e-05, 1.4250000000000373e-05, 1.3764000000002913e-05, 1.384699999999739e-05, 1.3986000000000554e-05, 1.4111000000000679e-05, 1.3749999999999873e-05, 1.37779999999990...</msg>
<status status="PASS" starttime="20201117 14:40:53.873" endtime="20201117 14:40:53.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.890" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.889" endtime="20201117 14:40:53.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.892" level="INFO">VALUE: [1.4666999999999458e-05, 1.4250000000000373e-05, 1.3764000000002913e-05, 1.384699999999739e-05, 1.3986000000000554e-05, 1.4111000000000679e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.4166999999998958e-05, 1.4278000000002983e-05, 1.4179999999999054e-05, 1.3777999999999013e-05, 1.4111000000000679e-05, 1.3833000000001289e-05, 1.4041999999998833e-05, 1.4167000000002428e-05, 1.4180999999998528e-05, 1.4291999999999083e-05, 1.4055999999998403e-05, 1.4013999999999693e-05, 1.4138999999999818e-05, 1.3736000000000304e-05, 1.4306000000002123e-05, 1.3763999999999443e-05, 1.4291999999999083e-05, 1.3749999999999873e-05, 1.4236000000000804e-05, 1.3888999999999568e-05, 1.4125000000000248e-05, 1.4222000000001234e-05, 1.3749999999999873e-05, 1.4221999999997764e-05, 1.4028000000002733e-05, 1.3847000000000859e-05, 1.4250000000000373e-05, 1.4221999999997764e-05, 1.3763999999999443e-05, 1.430499999999918e-05, 1.3931000000001748e-05, 1.3763999999999443e-05, 1.4138999999999818e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.4097000000001109e-05, 1.4097000000001109e-05, 1.4000000000000123e-05, 1.4097999999997113e-05, 1.3834000000000762e-05, 1.4055999999998403e-05, 1.4166999999998958e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.891" endtime="20201117 14:40:53.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.886" endtime="20201117 14:40:53.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.896" endtime="20201117 14:40:53.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.899" endtime="20201117 14:40:53.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.897" endtime="20201117 14:40:53.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.894" endtime="20201117 14:40:53.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.531" endtime="20201117 14:40:53.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.139" endtime="20201117 14:40:53.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.138" endtime="20201117 14:40:53.920"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.923" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.931" endtime="20201117 14:40:53.945"></status>
</kw>
<msg timestamp="20201117 14:40:53.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.929" endtime="20201117 14:40:53.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.947" endtime="20201117 14:40:53.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.950" endtime="20201117 14:40:53.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.927" endtime="20201117 14:40:53.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.924" endtime="20201117 14:40:53.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.959" endtime="20201117 14:40:54.245"></status>
</kw>
<msg timestamp="20201117 14:40:54.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.957" endtime="20201117 14:40:54.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.249" endtime="20201117 14:40:54.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.257" endtime="20201117 14:40:54.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.955" endtime="20201117 14:40:54.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.953" endtime="20201117 14:40:54.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.264" level="INFO">${RESULT} = [{'time': 0.023845819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5750000000001874e-05, 'source_diff': 1.5750000000001874e-05}, {'time': 0.023865667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:54.261" endtime="20201117 14:40:54.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.278" level="INFO">${ACCURACY} = {'source_diff': [1.5750000000001874e-05, 1.4555999999998903e-05, 1.5208999999998668e-05, 1.5098000000001582e-05, 1.5209000000002137e-05, 1.4973000000001457e-05, 1.5249999999997904e-05, 1.4777000000000...</msg>
<status status="PASS" starttime="20201117 14:40:54.265" endtime="20201117 14:40:54.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.282" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.281" endtime="20201117 14:40:54.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.285" level="INFO">VALUE: [1.5750000000001874e-05, 1.4555999999998903e-05, 1.5208999999998668e-05, 1.5098000000001582e-05, 1.5209000000002137e-05, 1.4973000000001457e-05, 1.5249999999997904e-05, 1.477700000000054e-05, 1.4861000000001429e-05, 1.4695000000002068e-05, 1.4916999999999708e-05, 1.5055999999999403e-05, 1.4834000000001762e-05, 1.5098000000001582e-05, 1.5152000000000915e-05, 1.5235999999998334e-05, 1.4931000000002748e-05, 1.4930999999999278e-05, 1.5180999999999528e-05, 1.4847999999997863e-05, 1.5166000000000485e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.4971999999998514e-05, 1.4861000000001429e-05, 1.5250000000001374e-05, 1.4722000000001734e-05, 1.502700000000079e-05, 1.483299999999882e-05, 1.4750000000000874e-05, 1.502700000000079e-05, 1.509699999999864e-05, 1.50689999999995e-05, 1.5264000000000943e-05, 1.480499999999968e-05, 1.5264000000000943e-05, 1.484699999999839e-05, 1.505499999999993e-05, 1.4889000000000568e-05, 1.5249999999997904e-05, 1.50689999999995e-05, 1.4639000000000318e-05, 1.479100000000011e-05, 1.483299999999882e-05, 1.481899999999925e-05, 1.4736000000001304e-05, 1.4916000000000235e-05, 1.5014000000000693e-05, 1.5124999999997779e-05, 1.5111000000001679e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.283" endtime="20201117 14:40:54.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.279" endtime="20201117 14:40:54.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.288" endtime="20201117 14:40:54.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.291" endtime="20201117 14:40:54.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.290" endtime="20201117 14:40:54.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.286" endtime="20201117 14:40:54.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.923" endtime="20201117 14:40:54.312"></status>
</kw>
<msg timestamp="20201117 14:40:54.312" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.321" endtime="20201117 14:40:54.336"></status>
</kw>
<msg timestamp="20201117 14:40:54.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.319" endtime="20201117 14:40:54.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.337" endtime="20201117 14:40:54.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.340" endtime="20201117 14:40:54.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.316" endtime="20201117 14:40:54.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.314" endtime="20201117 14:40:54.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.350" endtime="20201117 14:40:54.636"></status>
</kw>
<msg timestamp="20201117 14:40:54.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021450014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.349" endtime="20201117 14:40:54.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021450014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.640" endtime="20201117 14:40:54.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.649" endtime="20201117 14:40:54.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.346" endtime="20201117 14:40:54.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.344" endtime="20201117 14:40:54.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.655" level="INFO">${RESULT} = [{'time': 0.021450014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.588900000000157e-05, 'source_diff': 1.588900000000157e-05}, {'time': 0.021470889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:54.652" endtime="20201117 14:40:54.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.669" level="INFO">${ACCURACY} = {'source_diff': [1.588900000000157e-05, 1.5153000000000388e-05, 1.5222000000002234e-05, 1.531899999999975e-05, 1.483299999999882e-05, 1.4943999999999374e-05, 1.480499999999968e-05, 1.4903000000000138e...</msg>
<status status="PASS" starttime="20201117 14:40:54.656" endtime="20201117 14:40:54.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.673" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.672" endtime="20201117 14:40:54.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.676" level="INFO">VALUE: [1.588900000000157e-05, 1.5153000000000388e-05, 1.5222000000002234e-05, 1.531899999999975e-05, 1.483299999999882e-05, 1.4943999999999374e-05, 1.480499999999968e-05, 1.4903000000000138e-05, 1.5263999999997474e-05, 1.5278000000000513e-05, 1.4693999999999124e-05, 1.5014000000000693e-05, 1.4916000000000235e-05, 1.4929999999999805e-05, 1.50689999999995e-05, 1.4916999999999708e-05, 1.4930999999999278e-05, 1.5083000000002539e-05, 1.4972000000001984e-05, 1.4902999999996669e-05, 1.508299999999907e-05, 1.4985999999998084e-05, 1.5235999999998334e-05, 1.5180999999999528e-05, 1.4778000000000013e-05, 1.4861000000001429e-05, 1.4986000000001554e-05, 1.509699999999864e-05, 1.5249999999997904e-05, 1.4764000000000443e-05, 1.4986000000001554e-05, 1.5235999999998334e-05, 1.4903000000000138e-05, 1.5056000000002873e-05, 1.5014000000000693e-05, 1.4875000000000999e-05, 1.5097999999998113e-05, 1.5069999999998973e-05, 1.5208000000002664e-05, 1.5014000000000693e-05, 1.509699999999864e-05, 1.4874999999997529e-05, 1.4847000000001859e-05, 1.4944999999998848e-05, 1.5028000000000263e-05, 1.4833999999998293e-05, 1.5264000000000943e-05, 1.4889000000000568e-05, 1.5249999999997904e-05, 1.5124999999997779e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.675" endtime="20201117 14:40:54.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.670" endtime="20201117 14:40:54.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.679" endtime="20201117 14:40:54.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.683" endtime="20201117 14:40:54.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.681" endtime="20201117 14:40:54.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.677" endtime="20201117 14:40:54.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.313" endtime="20201117 14:40:54.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.921" endtime="20201117 14:40:54.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.921" endtime="20201117 14:40:54.704"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.706" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.715" endtime="20201117 14:40:54.730"></status>
</kw>
<msg timestamp="20201117 14:40:54.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.713" endtime="20201117 14:40:54.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.732" endtime="20201117 14:40:54.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.735" endtime="20201117 14:40:54.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.711" endtime="20201117 14:40:54.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.708" endtime="20201117 14:40:54.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.745" endtime="20201117 14:40:55.031"></status>
</kw>
<msg timestamp="20201117 14:40:55.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025189583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.743" endtime="20201117 14:40:55.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025189583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.036" endtime="20201117 14:40:55.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.044" endtime="20201117 14:40:55.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.740" endtime="20201117 14:40:55.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.738" endtime="20201117 14:40:55.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.051" level="INFO">${RESULT} = [{'time': 0.025206472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.025228306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:55.047" endtime="20201117 14:40:55.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.065" level="INFO">${ACCURACY} = {'source_diff': [1.68889999999991e-05, 1.6041999999997364e-05, 1.57629999999985e-05, 1.605499999999746e-05, 1.6249999999998904e-05, 1.6221999999999764e-05, 1.584699999999939e-05, 1.57629999999985e-05,...</msg>
<status status="PASS" starttime="20201117 14:40:55.052" endtime="20201117 14:40:55.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.070" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.069" endtime="20201117 14:40:55.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.072" level="INFO">VALUE: [1.68889999999991e-05, 1.6041999999997364e-05, 1.57629999999985e-05, 1.605499999999746e-05, 1.6249999999998904e-05, 1.6221999999999764e-05, 1.584699999999939e-05, 1.57629999999985e-05, 1.584699999999939e-05, 1.6291999999997614e-05, 1.5957999999999944e-05, 1.6180000000001055e-05, 1.613899999999835e-05, 1.5957999999999944e-05, 1.6014000000001694e-05, 1.6180000000001055e-05, 1.577700000000154e-05, 1.60690000000005e-05, 1.5999999999998654e-05, 1.602699999999832e-05, 1.6250000000002374e-05, 1.6027999999997794e-05, 1.605500000000093e-05, 1.6249999999998904e-05, 1.5721999999999264e-05, 1.6179999999997585e-05, 1.6277999999998044e-05, 1.583299999999982e-05, 1.6263999999998474e-05, 1.5749999999998404e-05, 1.586099999999896e-05, 1.5931000000000278e-05, 1.5944000000000375e-05, 1.5999999999998654e-05, 1.5694000000000125e-05, 1.5971999999999514e-05, 1.60690000000005e-05, 1.6250000000002374e-05, 1.5750000000001874e-05, 1.5736000000002304e-05, 1.6000000000002124e-05, 1.6235999999999334e-05, 1.5708000000003164e-05, 1.605500000000093e-05, 1.581899999999678e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.583299999999982e-05, 1.6195000000000098e-05, 1.616699999999749e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.071" endtime="20201117 14:40:55.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.066" endtime="20201117 14:40:55.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.076" endtime="20201117 14:40:55.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.079" endtime="20201117 14:40:55.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.077" endtime="20201117 14:40:55.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.074" endtime="20201117 14:40:55.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.707" endtime="20201117 14:40:55.100"></status>
</kw>
<msg timestamp="20201117 14:40:55.100" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.109" endtime="20201117 14:40:55.124"></status>
</kw>
<msg timestamp="20201117 14:40:55.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.107" endtime="20201117 14:40:55.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.125" endtime="20201117 14:40:55.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.128" endtime="20201117 14:40:55.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.105" endtime="20201117 14:40:55.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.102" endtime="20201117 14:40:55.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.139" endtime="20201117 14:40:55.424"></status>
</kw>
<msg timestamp="20201117 14:40:55.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.137" endtime="20201117 14:40:55.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.429" endtime="20201117 14:40:55.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.437" endtime="20201117 14:40:55.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.134" endtime="20201117 14:40:55.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.132" endtime="20201117 14:40:55.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.444" level="INFO">${RESULT} = [{'time': 0.021946528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7084000000000543e-05, 'source_diff': 1.7084000000000543e-05}, {'time': 0.021967347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.440" endtime="20201117 14:40:55.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.457" level="INFO">${ACCURACY} = {'source_diff': [1.7084000000000543e-05, 1.558300000000304e-05, 1.6249999999998904e-05, 1.587499999999853e-05, 1.6041999999997364e-05, 1.58889999999981e-05, 1.6235999999999334e-05, 1.580499999999721e-...</msg>
<status status="PASS" starttime="20201117 14:40:55.445" endtime="20201117 14:40:55.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.462" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.461" endtime="20201117 14:40:55.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.464" level="INFO">VALUE: [1.7084000000000543e-05, 1.558300000000304e-05, 1.6249999999998904e-05, 1.587499999999853e-05, 1.6041999999997364e-05, 1.58889999999981e-05, 1.6235999999999334e-05, 1.580499999999721e-05, 1.5999999999998654e-05, 1.581900000000025e-05, 1.581900000000025e-05, 1.6041999999997364e-05, 1.5973000000002457e-05, 1.6235999999999334e-05, 1.5750000000001874e-05, 1.5999999999998654e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.587499999999853e-05, 1.613900000000182e-05, 1.5887999999998625e-05, 1.5694000000000125e-05, 1.590300000000114e-05, 1.6181000000000528e-05, 1.586100000000243e-05, 1.5792000000000583e-05, 1.6222999999999238e-05, 1.611099999999921e-05, 1.5931000000000278e-05, 1.6195000000000098e-05, 1.5999999999998654e-05, 1.611099999999921e-05, 1.6180000000001055e-05, 1.6027999999997794e-05, 1.5777999999997544e-05, 1.5708999999999168e-05, 1.5736999999998308e-05, 1.58889999999981e-05, 1.611099999999921e-05, 1.6249999999998904e-05, 1.5944999999999848e-05, 1.5721999999999264e-05, 1.5958999999999418e-05, 1.591700000000071e-05, 1.6000000000002124e-05, 1.5833999999999293e-05, 1.6208000000000194e-05, 1.5973000000002457e-05, 1.6098000000002582e-05, 1.5764000000001444e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.463" endtime="20201117 14:40:55.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.458" endtime="20201117 14:40:55.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.468" endtime="20201117 14:40:55.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.471" endtime="20201117 14:40:55.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.470" endtime="20201117 14:40:55.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.466" endtime="20201117 14:40:55.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.101" endtime="20201117 14:40:55.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.705" endtime="20201117 14:40:55.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.704" endtime="20201117 14:40:55.492"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.495" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.503" endtime="20201117 14:40:55.517"></status>
</kw>
<msg timestamp="20201117 14:40:55.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.501" endtime="20201117 14:40:55.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.519" endtime="20201117 14:40:55.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.522" endtime="20201117 14:40:55.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.499" endtime="20201117 14:40:55.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.497" endtime="20201117 14:40:55.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.531" endtime="20201117 14:40:55.818"></status>
</kw>
<msg timestamp="20201117 14:40:55.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024157542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.529" endtime="20201117 14:40:55.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024157542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.822" endtime="20201117 14:40:55.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.830" endtime="20201117 14:40:55.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.526" endtime="20201117 14:40:55.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.525" endtime="20201117 14:40:55.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.837" level="INFO">${RESULT} = [{'time': 0.024157542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8084000000001543e-05, 'source_diff': 1.8084000000001543e-05}, {'time': 0.024180375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.833" endtime="20201117 14:40:55.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.850" level="INFO">${ACCURACY} = {'source_diff': [1.8084000000001543e-05, 1.736100000000046e-05, 1.6750000000002874e-05, 1.6833999999996824e-05, 1.6749999999999404e-05, 1.6750000000002874e-05, 1.70829999999976e-05, 1.7277999999999044...</msg>
<status status="PASS" starttime="20201117 14:40:55.838" endtime="20201117 14:40:55.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.855" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.854" endtime="20201117 14:40:55.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.857" level="INFO">VALUE: [1.8084000000001543e-05, 1.736100000000046e-05, 1.6750000000002874e-05, 1.6833999999996824e-05, 1.6749999999999404e-05, 1.6750000000002874e-05, 1.70829999999976e-05, 1.7277999999999044e-05, 1.6778000000002014e-05, 1.6820000000000723e-05, 1.687499999999953e-05, 1.6722000000000264e-05, 1.691699999999824e-05, 1.7013999999999224e-05, 1.7209000000000668e-05, 1.7000000000003124e-05, 1.6959000000000418e-05, 1.716700000000196e-05, 1.7041999999998364e-05, 1.6806000000001153e-05, 1.686099999999996e-05, 1.7069999999997504e-05, 1.687499999999953e-05, 1.7056000000001403e-05, 1.690300000000214e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.712499999999978e-05, 1.6820000000000723e-05, 1.6750000000002874e-05, 1.687499999999953e-05, 1.7223000000000238e-05, 1.7278000000002514e-05, 1.666699999999799e-05, 1.693100000000128e-05, 1.6847999999999863e-05, 1.680499999999821e-05, 1.7209000000000668e-05, 1.6902000000002665e-05, 1.70829999999976e-05, 1.6999999999999654e-05, 1.701299999999975e-05, 1.7263e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.6999999999999654e-05, 1.705499999999846e-05, 1.712499999999978e-05, 1.684700000000039e-05, 1.708300000000107e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.856" endtime="20201117 14:40:55.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.851" endtime="20201117 14:40:55.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.861" endtime="20201117 14:40:55.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.864" endtime="20201117 14:40:55.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.863" endtime="20201117 14:40:55.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.859" endtime="20201117 14:40:55.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.495" endtime="20201117 14:40:55.888"></status>
</kw>
<msg timestamp="20201117 14:40:55.888" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.905" endtime="20201117 14:40:55.922"></status>
</kw>
<msg timestamp="20201117 14:40:55.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.902" endtime="20201117 14:40:55.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.925" endtime="20201117 14:40:55.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.930" endtime="20201117 14:40:55.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.897" endtime="20201117 14:40:55.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.892" endtime="20201117 14:40:55.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.951" endtime="20201117 14:40:56.240"></status>
</kw>
<msg timestamp="20201117 14:40:56.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034536236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034553986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.948" endtime="20201117 14:40:56.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034536236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034553986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.244" endtime="20201117 14:40:56.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.252" endtime="20201117 14:40:56.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.943" endtime="20201117 14:40:56.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.939" endtime="20201117 14:40:56.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.259" level="INFO">${RESULT} = [{'time': 0.034553986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7750000000003874e-05, 'source_diff': 1.7750000000003874e-05}, {'time': 0.034576833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.256" endtime="20201117 14:40:56.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.272" level="INFO">${ACCURACY} = {'source_diff': [1.7750000000003874e-05, 1.713899999999935e-05, 1.679100000000211e-05, 1.6957999999997475e-05, 1.7165999999999015e-05, 1.6999999999996185e-05, 1.6915999999998765e-05, 1.673600000000330...</msg>
<status status="PASS" starttime="20201117 14:40:56.260" endtime="20201117 14:40:56.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.277" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.276" endtime="20201117 14:40:56.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.280" level="INFO">VALUE: [1.7750000000003874e-05, 1.713899999999935e-05, 1.679100000000211e-05, 1.6957999999997475e-05, 1.7165999999999015e-05, 1.6999999999996185e-05, 1.6915999999998765e-05, 1.6736000000003304e-05, 1.6958000000004414e-05, 1.68889999999991e-05, 1.6945000000004318e-05, 1.68889999999991e-05, 1.679100000000211e-05, 1.7014000000002694e-05, 1.7236000000003804e-05, 1.7193999999998155e-05, 1.6986000000003554e-05, 1.6819999999993784e-05, 1.6957999999997475e-05, 1.6694000000004594e-05, 1.6792000000001583e-05, 1.7153000000005858e-05, 1.7235999999996865e-05, 1.715299999999892e-05, 1.6764000000002444e-05, 1.70690000000015e-05, 1.6986000000003554e-05, 1.7278000000002514e-05, 1.683299999999388e-05, 1.7249999999996435e-05, 1.70690000000015e-05, 1.694499999999738e-05, 1.6764000000002444e-05, 1.708300000000107e-05, 1.6735999999996365e-05, 1.693099999999781e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.6750000000002874e-05, 1.6820000000000723e-05, 1.695899999999695e-05, 1.669499999999713e-05, 1.719499999999763e-05, 1.7042000000001833e-05, 1.716699999999849e-05, 1.683300000000082e-05, 1.6777999999995075e-05, 1.716699999999849e-05, 1.713899999999935e-05, 1.687499999999953e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.278" endtime="20201117 14:40:56.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.274" endtime="20201117 14:40:56.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.283" endtime="20201117 14:40:56.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.286" endtime="20201117 14:40:56.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.285" endtime="20201117 14:40:56.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.281" endtime="20201117 14:40:56.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.890" endtime="20201117 14:40:56.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.493" endtime="20201117 14:40:56.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.493" endtime="20201117 14:40:56.307"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.310" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.318" endtime="20201117 14:40:56.333"></status>
</kw>
<msg timestamp="20201117 14:40:56.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.316" endtime="20201117 14:40:56.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.334" endtime="20201117 14:40:56.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.337" endtime="20201117 14:40:56.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.314" endtime="20201117 14:40:56.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.312" endtime="20201117 14:40:56.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.346" endtime="20201117 14:40:56.630"></status>
</kw>
<msg timestamp="20201117 14:40:56.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024692889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024711847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.344" endtime="20201117 14:40:56.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024692889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024711847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.634" endtime="20201117 14:40:56.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.643" endtime="20201117 14:40:56.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.342" endtime="20201117 14:40:56.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.340" endtime="20201117 14:40:56.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.650" level="INFO">${RESULT} = [{'time': 0.024711847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8957999999999475e-05, 'source_diff': 1.8957999999999475e-05}, {'time': 0.024734681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.646" endtime="20201117 14:40:56.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.664" level="INFO">${ACCURACY} = {'source_diff': [1.8957999999999475e-05, 1.7584000000001043e-05, 1.7709000000001168e-05, 1.791699999999924e-05, 1.8209000000001668e-05, 1.812500000000078e-05, 1.781899999999878e-05, 1.815299999999992e...</msg>
<status status="PASS" starttime="20201117 14:40:56.651" endtime="20201117 14:40:56.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.669" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.668" endtime="20201117 14:40:56.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.671" level="INFO">VALUE: [1.8957999999999475e-05, 1.7584000000001043e-05, 1.7709000000001168e-05, 1.791699999999924e-05, 1.8209000000001668e-05, 1.812500000000078e-05, 1.781899999999878e-05, 1.815299999999992e-05, 1.8207999999998725e-05, 1.7709000000001168e-05, 1.7722000000001265e-05, 1.7929999999999335e-05, 1.7972000000001515e-05, 1.8250000000000904e-05, 1.8319999999998754e-05, 1.777700000000007e-05, 1.7957999999998475e-05, 1.8014000000000224e-05, 1.7972000000001515e-05, 1.8278000000000044e-05, 1.8222000000001765e-05, 1.802700000000032e-05, 1.777700000000007e-05, 1.8179999999999585e-05, 1.7763999999999974e-05, 1.8193999999999155e-05, 1.780499999999921e-05, 1.7777999999999544e-05, 1.784700000000139e-05, 1.8014000000000224e-05, 1.791699999999924e-05, 1.8027999999999794e-05, 1.7735999999997365e-05, 1.8000000000000654e-05, 1.783299999999835e-05, 1.790300000000314e-05, 1.8055999999998934e-05, 1.7971999999998045e-05, 1.80690000000025e-05, 1.790299999999967e-05, 1.786099999999749e-05, 1.7958000000001945e-05, 1.784699999999792e-05, 1.8179999999999585e-05, 1.8193999999999155e-05, 1.8249999999997435e-05, 1.8152000000000446e-05, 1.7777999999999544e-05, 1.8193999999999155e-05, 1.7722000000001265e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.670" endtime="20201117 14:40:56.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.665" endtime="20201117 14:40:56.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.675" endtime="20201117 14:40:56.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.678" endtime="20201117 14:40:56.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.676" endtime="20201117 14:40:56.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.673" endtime="20201117 14:40:56.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.310" endtime="20201117 14:40:56.699"></status>
</kw>
<msg timestamp="20201117 14:40:56.699" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.707" endtime="20201117 14:40:56.721"></status>
</kw>
<msg timestamp="20201117 14:40:56.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.705" endtime="20201117 14:40:56.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.722" endtime="20201117 14:40:56.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.725" endtime="20201117 14:40:56.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.703" endtime="20201117 14:40:56.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.701" endtime="20201117 14:40:56.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.734" endtime="20201117 14:40:57.020"></status>
</kw>
<msg timestamp="20201117 14:40:57.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021318, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:56.733" endtime="20201117 14:40:57.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021318, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:57.025" endtime="20201117 14:40:57.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.039" endtime="20201117 14:40:57.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.730" endtime="20201117 14:40:57.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.729" endtime="20201117 14:40:57.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.046" level="INFO">${RESULT} = [{'time': 0.021318, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.841699999999974e-05, 'source_diff': 1.841699999999974e-05}, {'time': 0.021340806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:40:57.042" endtime="20201117 14:40:57.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.059" level="INFO">${ACCURACY} = {'source_diff': [1.841699999999974e-05, 1.7527999999999294e-05, 1.7985999999997615e-05, 1.7848000000000863e-05, 1.7722000000001265e-05, 1.7943999999998905e-05, 1.7972000000001515e-05, 1.81660000000000...</msg>
<status status="PASS" starttime="20201117 14:40:57.047" endtime="20201117 14:40:57.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.064" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.063" endtime="20201117 14:40:57.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.066" level="INFO">VALUE: [1.841699999999974e-05, 1.7527999999999294e-05, 1.7985999999997615e-05, 1.7848000000000863e-05, 1.7722000000001265e-05, 1.7943999999998905e-05, 1.7972000000001515e-05, 1.8166000000000015e-05, 1.7999999999997185e-05, 1.8193999999999155e-05, 1.812500000000078e-05, 1.8138000000000876e-05, 1.8193999999999155e-05, 1.779099999999964e-05, 1.8250000000000904e-05, 1.7665999999999515e-05, 1.8014000000000224e-05, 1.8041999999999364e-05, 1.8000000000000654e-05, 1.7930000000002805e-05, 1.8221999999998295e-05, 1.7749999999996935e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.805499999999946e-05, 1.787499999999706e-05, 1.7791999999999114e-05, 1.813900000000035e-05, 1.7778000000003014e-05, 1.7985999999997615e-05, 1.7707999999998225e-05, 1.781900000000225e-05, 1.7971999999998045e-05, 1.7749999999996935e-05, 1.8222000000001765e-05, 1.8207999999998725e-05, 1.7930000000002805e-05, 1.8027999999999794e-05, 1.783299999999835e-05, 1.7972000000001515e-05, 1.7721999999997795e-05, 1.8207999999998725e-05, 1.80829999999986e-05, 1.78890000000001e-05, 1.7736000000000834e-05, 1.791699999999924e-05, 1.7763999999999974e-05, 1.790299999999967e-05, 1.8027999999999794e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.065" endtime="20201117 14:40:57.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.060" endtime="20201117 14:40:57.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.069" endtime="20201117 14:40:57.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.073" endtime="20201117 14:40:57.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.071" endtime="20201117 14:40:57.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.067" endtime="20201117 14:40:57.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.699" endtime="20201117 14:40:57.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.308" endtime="20201117 14:40:57.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.308" endtime="20201117 14:40:57.094"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.096" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.104" endtime="20201117 14:40:57.119"></status>
</kw>
<msg timestamp="20201117 14:40:57.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.103" endtime="20201117 14:40:57.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.120" endtime="20201117 14:40:57.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.123" endtime="20201117 14:40:57.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.100" endtime="20201117 14:40:57.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.098" endtime="20201117 14:40:57.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.132" endtime="20201117 14:40:57.416"></status>
</kw>
<msg timestamp="20201117 14:40:57.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023738042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023757861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.131" endtime="20201117 14:40:57.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023738042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023757861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.421" endtime="20201117 14:40:57.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.429" endtime="20201117 14:40:57.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.128" endtime="20201117 14:40:57.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.126" endtime="20201117 14:40:57.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.435" level="INFO">${RESULT} = [{'time': 0.023757861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.981900000000078e-05, 'source_diff': 1.981900000000078e-05}, {'time': 0.023782681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:57.432" endtime="20201117 14:40:57.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.449" level="INFO">${ACCURACY} = {'source_diff': [1.981900000000078e-05, 1.943100000000031e-05, 1.901299999999828e-05, 1.909699999999917e-05, 1.9069999999999504e-05, 1.9111999999998214e-05, 1.895899999999895e-05, 1.8973000000001988e-...</msg>
<status status="PASS" starttime="20201117 14:40:57.436" endtime="20201117 14:40:57.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.454" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.453" endtime="20201117 14:40:57.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.456" level="INFO">VALUE: [1.981900000000078e-05, 1.943100000000031e-05, 1.901299999999828e-05, 1.909699999999917e-05, 1.9069999999999504e-05, 1.9111999999998214e-05, 1.895899999999895e-05, 1.8973000000001988e-05, 1.9055999999999934e-05, 1.904100000000089e-05, 1.8930000000000335e-05, 1.887500000000153e-05, 1.929100000000114e-05, 1.9221999999999295e-05, 1.8930000000000335e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.9013999999997755e-05, 1.929099999999767e-05, 1.904100000000089e-05, 1.8764000000000974e-05, 1.9014000000001224e-05, 1.9152000000001446e-05, 1.8916000000000766e-05, 1.909699999999917e-05, 1.9221999999999295e-05, 1.890300000000067e-05, 1.915299999999745e-05, 1.905500000000046e-05, 1.9222000000002765e-05, 1.911100000000221e-05, 1.891700000000024e-05, 1.887500000000153e-05, 1.890300000000067e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8792000000000114e-05, 1.8693999999999655e-05, 1.8985999999998615e-05, 1.8972000000002515e-05, 1.9055999999999934e-05, 1.918100000000006e-05, 1.9235999999998865e-05, 1.911099999999874e-05, 1.8764000000000974e-05, 1.886099999999849e-05, 1.9263999999998005e-05, 1.9027999999997325e-05, 1.8763999999997505e-05, 1.913900000000135e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.455" endtime="20201117 14:40:57.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.450" endtime="20201117 14:40:57.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.459" endtime="20201117 14:40:57.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.462" endtime="20201117 14:40:57.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.461" endtime="20201117 14:40:57.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.457" endtime="20201117 14:40:57.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.097" endtime="20201117 14:40:57.483"></status>
</kw>
<msg timestamp="20201117 14:40:57.483" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.492" endtime="20201117 14:40:57.507"></status>
</kw>
<msg timestamp="20201117 14:40:57.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.490" endtime="20201117 14:40:57.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.508" endtime="20201117 14:40:57.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.511" endtime="20201117 14:40:57.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.487" endtime="20201117 14:40:57.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.485" endtime="20201117 14:40:57.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.521" endtime="20201117 14:40:57.806"></status>
</kw>
<msg timestamp="20201117 14:40:57.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.520" endtime="20201117 14:40:57.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.810" endtime="20201117 14:40:57.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.819" endtime="20201117 14:40:57.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.517" endtime="20201117 14:40:57.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.515" endtime="20201117 14:40:57.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.825" level="INFO">${RESULT} = [{'time': 0.021641153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.021664944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:57.822" endtime="20201117 14:40:57.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.839" level="INFO">${ACCURACY} = {'source_diff': [1.9735999999999365e-05, 1.854099999999692e-05, 1.8930000000000335e-05, 1.9000000000001654e-05, 1.912500000000178e-05, 1.8736000000001835e-05, 1.887499999999806e-05, 1.9207999999999725...</msg>
<status status="PASS" starttime="20201117 14:40:57.826" endtime="20201117 14:40:57.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.843" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.842" endtime="20201117 14:40:57.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.846" level="INFO">VALUE: [1.9735999999999365e-05, 1.854099999999692e-05, 1.8930000000000335e-05, 1.9000000000001654e-05, 1.912500000000178e-05, 1.8736000000001835e-05, 1.887499999999806e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.8971999999999045e-05, 1.8763999999997505e-05, 1.884699999999892e-05, 1.884699999999892e-05, 1.890300000000067e-05, 1.877700000000107e-05, 1.912500000000178e-05, 1.8764000000000974e-05, 1.912499999999831e-05, 1.9166000000001016e-05, 1.9055999999999934e-05, 1.9194000000000155e-05, 1.9236000000002335e-05, 1.90829999999996e-05, 1.9278000000001044e-05, 1.8722000000002265e-05, 1.912500000000178e-05, 1.9235999999998865e-05, 1.8971999999999045e-05, 1.8735999999998365e-05, 1.888899999999763e-05, 1.8930000000000335e-05, 1.8999999999998185e-05, 1.9263999999998005e-05, 1.8806000000003154e-05, 1.88890000000011e-05, 1.884699999999892e-05, 1.9000000000001654e-05, 1.9292000000000614e-05, 1.8957999999999475e-05, 1.931900000000028e-05, 1.915299999999745e-05, 1.9069999999999504e-05, 1.8735999999998365e-05, 1.9014000000001224e-05, 1.9055999999999934e-05, 1.9014000000001224e-05, 1.913900000000135e-05, 1.9250000000001904e-05, 1.8971999999999045e-05, 1.890300000000067e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.844" endtime="20201117 14:40:57.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.840" endtime="20201117 14:40:57.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.849" endtime="20201117 14:40:57.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.852" endtime="20201117 14:40:57.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.851" endtime="20201117 14:40:57.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.847" endtime="20201117 14:40:57.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.484" endtime="20201117 14:40:57.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.095" endtime="20201117 14:40:57.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.094" endtime="20201117 14:40:57.873"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.876" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.884" endtime="20201117 14:40:57.900"></status>
</kw>
<msg timestamp="20201117 14:40:57.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.883" endtime="20201117 14:40:57.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.901" endtime="20201117 14:40:57.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.904" endtime="20201117 14:40:57.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.880" endtime="20201117 14:40:57.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.877" endtime="20201117 14:40:57.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.913" endtime="20201117 14:40:58.199"></status>
</kw>
<msg timestamp="20201117 14:40:58.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025190125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.911" endtime="20201117 14:40:58.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025190125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.203" endtime="20201117 14:40:58.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.211" endtime="20201117 14:40:58.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.909" endtime="20201117 14:40:58.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.907" endtime="20201117 14:40:58.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.218" level="INFO">${RESULT} = [{'time': 0.025210847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0722000000000795e-05, 'source_diff': 2.0722000000000795e-05}, {'time': 0.025236694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.215" endtime="20201117 14:40:58.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.233" level="INFO">${ACCURACY} = {'source_diff': [2.0722000000000795e-05, 2.0401999999999226e-05, 1.97630000000025e-05, 1.981900000000078e-05, 1.9972000000000045e-05, 2.026299999999953e-05, 2.002699999999885e-05, 1.9888000000002626e-...</msg>
<status status="PASS" starttime="20201117 14:40:58.219" endtime="20201117 14:40:58.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.237" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.236" endtime="20201117 14:40:58.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.240" level="INFO">VALUE: [2.0722000000000795e-05, 2.0401999999999226e-05, 1.97630000000025e-05, 1.981900000000078e-05, 1.9972000000000045e-05, 2.026299999999953e-05, 2.002699999999885e-05, 1.9888000000002626e-05, 1.9930000000001336e-05, 1.981900000000078e-05, 2.0249999999999435e-05, 1.983300000000035e-05, 1.986099999999949e-05, 1.9722000000003265e-05, 2.0013999999998755e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0180000000001586e-05, 2.016700000000149e-05, 1.9999999999999185e-05, 2.0249999999999435e-05, 1.9694000000000655e-05, 1.979100000000164e-05, 2.006900000000103e-05, 2.016699999999802e-05, 2.0179999999998116e-05, 2.0056000000000934e-05, 1.986099999999949e-05, 2.0028000000001794e-05, 1.9929999999997866e-05, 1.9749999999998935e-05, 2.0194000000001155e-05, 1.9708000000000225e-05, 1.9806000000000684e-05, 2.013900000000235e-05, 1.991699999999777e-05, 1.9749999999998935e-05, 2.0208000000000725e-05, 1.98890000000021e-05, 1.966700000000099e-05, 1.9999999999999185e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 2.0028000000001794e-05, 2.0222000000000295e-05, 2.0151999999998976e-05, 1.9735999999999365e-05, 2.0166000000002016e-05, 1.9735999999999365e-05, 1.987499999999906e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.238" endtime="20201117 14:40:58.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.234" endtime="20201117 14:40:58.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.243" endtime="20201117 14:40:58.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.246" endtime="20201117 14:40:58.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.245" endtime="20201117 14:40:58.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.241" endtime="20201117 14:40:58.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.876" endtime="20201117 14:40:58.267"></status>
</kw>
<msg timestamp="20201117 14:40:58.267" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.276" endtime="20201117 14:40:58.291"></status>
</kw>
<msg timestamp="20201117 14:40:58.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.274" endtime="20201117 14:40:58.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.292" endtime="20201117 14:40:58.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.295" endtime="20201117 14:40:58.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.272" endtime="20201117 14:40:58.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.270" endtime="20201117 14:40:58.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.305" endtime="20201117 14:40:58.591"></status>
</kw>
<msg timestamp="20201117 14:40:58.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.303" endtime="20201117 14:40:58.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.595" endtime="20201117 14:40:58.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.603" endtime="20201117 14:40:58.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.301" endtime="20201117 14:40:58.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.299" endtime="20201117 14:40:58.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.610" level="INFO">${RESULT} = [{'time': 0.021455278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1306000000002184e-05, 'source_diff': 2.1306000000002184e-05}, {'time': 0.021481125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.607" endtime="20201117 14:40:58.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.624" level="INFO">${ACCURACY} = {'source_diff': [2.1306000000002184e-05, 2.0194000000001155e-05, 1.990300000000167e-05, 2.0056000000000934e-05, 1.981900000000078e-05, 2.0194000000001155e-05, 1.9694000000000655e-05, 2.002800000000179...</msg>
<status status="PASS" starttime="20201117 14:40:58.611" endtime="20201117 14:40:58.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.628" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.627" endtime="20201117 14:40:58.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.630" level="INFO">VALUE: [2.1306000000002184e-05, 2.0194000000001155e-05, 1.990300000000167e-05, 2.0056000000000934e-05, 1.981900000000078e-05, 2.0194000000001155e-05, 1.9694000000000655e-05, 2.0028000000001794e-05, 1.983299999999688e-05, 2.011099999999974e-05, 1.9763999999998505e-05, 2.015300000000192e-05, 1.983300000000035e-05, 2.011099999999974e-05, 1.993100000000081e-05, 1.9985999999999615e-05, 1.9999999999999185e-05, 1.9972000000000045e-05, 1.9930000000001336e-05, 1.9749999999998935e-05, 2.0041999999997895e-05, 2.0028000000001794e-05, 1.991700000000124e-05, 1.9833999999999824e-05, 2.015299999999845e-05, 2.016699999999802e-05, 1.991700000000124e-05, 2.0056000000000934e-05, 2.012500000000278e-05, 2.0235999999999865e-05, 1.988899999999863e-05, 1.9847999999999394e-05, 1.994500000000038e-05, 2.0137999999999406e-05, 2.0083999999996605e-05, 1.9735999999999365e-05, 1.97089999999997e-05, 2.0084000000000074e-05, 2.0097999999999644e-05, 2.019500000000063e-05, 2.016699999999802e-05, 1.9958000000000475e-05, 2.011099999999974e-05, 2.023699999999934e-05, 1.98890000000021e-05, 2.0235999999999865e-05, 2.002699999999885e-05, 1.976299999999903e-05, 2.0027999999998325e-05, 2.008299999999713e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.629" endtime="20201117 14:40:58.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.624" endtime="20201117 14:40:58.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.634" endtime="20201117 14:40:58.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.637" endtime="20201117 14:40:58.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.636" endtime="20201117 14:40:58.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.632" endtime="20201117 14:40:58.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.268" endtime="20201117 14:40:58.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.874" endtime="20201117 14:40:58.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.874" endtime="20201117 14:40:58.658"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.661" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.669" endtime="20201117 14:40:58.684"></status>
</kw>
<msg timestamp="20201117 14:40:58.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.667" endtime="20201117 14:40:58.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.685" endtime="20201117 14:40:58.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.688" endtime="20201117 14:40:58.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.665" endtime="20201117 14:40:58.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.663" endtime="20201117 14:40:58.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.697" endtime="20201117 14:40:58.983"></status>
</kw>
<msg timestamp="20201117 14:40:58.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02392725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023948958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:58.695" endtime="20201117 14:40:58.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02392725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023948958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:58.987" endtime="20201117 14:40:58.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.995" endtime="20201117 14:40:58.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.693" endtime="20201117 14:40:58.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.691" endtime="20201117 14:40:58.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.002" level="INFO">${RESULT} = [{'time': 0.023948958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1707999999998756e-05, 'source_diff': 2.1707999999998756e-05}, {'time': 0.023974792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.998" endtime="20201117 14:40:59.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.015" level="INFO">${ACCURACY} = {'source_diff': [2.1707999999998756e-05, 2.0486000000000115e-05, 2.1070000000001504e-05, 2.0986000000000615e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.093099999999834e-05, 2.09870000000000...</msg>
<status status="PASS" starttime="20201117 14:40:59.003" endtime="20201117 14:40:59.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.020" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.019" endtime="20201117 14:40:59.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.023" level="INFO">VALUE: [2.1707999999998756e-05, 2.0486000000000115e-05, 2.1070000000001504e-05, 2.0986000000000615e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.093099999999834e-05, 2.098700000000009e-05, 2.073699999999984e-05, 2.12090000000012e-05, 2.0915999999999296e-05, 2.086100000000049e-05, 2.0763999999999505e-05, 2.0694000000001656e-05, 2.0986000000000615e-05, 2.1236000000000865e-05, 2.1013999999999755e-05, 2.1208000000001725e-05, 2.10969999999977e-05, 2.1291999999999145e-05, 2.088899999999963e-05, 2.081900000000178e-05, 2.1193999999998686e-05, 2.080500000000221e-05, 2.0915999999999296e-05, 2.0749999999999935e-05, 2.1013999999999755e-05, 2.111100000000074e-05, 2.0749999999999935e-05, 2.0708000000001225e-05, 2.1236000000000865e-05, 2.087500000000006e-05, 2.116700000000249e-05, 2.086100000000049e-05, 2.1194000000002156e-05, 2.105499999999899e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.116699999999902e-05, 2.088899999999963e-05, 2.0972000000001045e-05, 2.063899999999938e-05, 2.1208000000001725e-05, 2.09029999999992e-05, 2.1277999999999575e-05, 2.1151999999999976e-05, 2.07769999999996e-05, 2.083299999999788e-05, 2.116699999999902e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.021" endtime="20201117 14:40:59.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.016" endtime="20201117 14:40:59.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.026" endtime="20201117 14:40:59.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.029" endtime="20201117 14:40:59.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.028" endtime="20201117 14:40:59.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.024" endtime="20201117 14:40:59.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.661" endtime="20201117 14:40:59.050"></status>
</kw>
<msg timestamp="20201117 14:40:59.050" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.059" endtime="20201117 14:40:59.074"></status>
</kw>
<msg timestamp="20201117 14:40:59.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.057" endtime="20201117 14:40:59.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.076" endtime="20201117 14:40:59.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.078" endtime="20201117 14:40:59.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.054" endtime="20201117 14:40:59.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.052" endtime="20201117 14:40:59.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.088" endtime="20201117 14:40:59.375"></status>
</kw>
<msg timestamp="20201117 14:40:59.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022352528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.087" endtime="20201117 14:40:59.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022352528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.379" endtime="20201117 14:40:59.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.387" endtime="20201117 14:40:59.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.084" endtime="20201117 14:40:59.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.082" endtime="20201117 14:40:59.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.394" level="INFO">${RESULT} = [{'time': 0.022352528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.022378361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:59.390" endtime="20201117 14:40:59.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.407" level="INFO">${ACCURACY} = {'source_diff': [2.162500000000081e-05, 2.05830000000011e-05, 2.115299999999945e-05, 2.0763999999999505e-05, 2.0834000000000824e-05, 2.1027999999999325e-05, 2.1000000000000185e-05, 2.1264000000000005e...</msg>
<status status="PASS" starttime="20201117 14:40:59.395" endtime="20201117 14:40:59.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.412" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.411" endtime="20201117 14:40:59.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.414" level="INFO">VALUE: [2.162500000000081e-05, 2.05830000000011e-05, 2.115299999999945e-05, 2.0763999999999505e-05, 2.0834000000000824e-05, 2.1027999999999325e-05, 2.1000000000000185e-05, 2.1264000000000005e-05, 2.10830000000016e-05, 2.118099999999859e-05, 2.1208000000001725e-05, 2.088899999999963e-05, 2.087500000000006e-05, 2.0805999999998215e-05, 2.1264000000000005e-05, 2.09029999999992e-05, 2.069500000000113e-05, 2.0972000000001045e-05, 2.122300000000077e-05, 2.0736000000000365e-05, 2.1277999999999575e-05, 2.086100000000049e-05, 2.112500000000031e-05, 2.0834000000000824e-05, 2.115299999999945e-05, 2.116699999999902e-05, 2.09029999999992e-05, 2.122300000000077e-05, 2.0736000000000365e-05, 2.087500000000006e-05, 2.070899999999723e-05, 2.072300000000027e-05, 2.112499999999684e-05, 2.1000000000000185e-05, 2.1041999999998895e-05, 2.0972000000001045e-05, 2.105499999999899e-05, 2.0929999999998866e-05, 2.104099999999942e-05, 2.0972000000001045e-05, 2.086099999999702e-05, 2.1193999999998686e-05, 2.106899999999856e-05, 2.083300000000135e-05, 2.1264000000000005e-05, 2.1207999999998256e-05, 2.0930000000002336e-05, 2.1013999999999755e-05, 2.079100000000264e-05, 2.116700000000249e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.413" endtime="20201117 14:40:59.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.408" endtime="20201117 14:40:59.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.417" endtime="20201117 14:40:59.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.421" endtime="20201117 14:40:59.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.419" endtime="20201117 14:40:59.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.416" endtime="20201117 14:40:59.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.051" endtime="20201117 14:40:59.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.659" endtime="20201117 14:40:59.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.659" endtime="20201117 14:40:59.442"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.444" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.453" endtime="20201117 14:40:59.468"></status>
</kw>
<msg timestamp="20201117 14:40:59.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.451" endtime="20201117 14:40:59.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.470" endtime="20201117 14:40:59.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.473" endtime="20201117 14:40:59.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.448" endtime="20201117 14:40:59.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.446" endtime="20201117 14:40:59.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.481" endtime="20201117 14:40:59.768"></status>
</kw>
<msg timestamp="20201117 14:40:59.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.480" endtime="20201117 14:40:59.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.772" endtime="20201117 14:40:59.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.781" endtime="20201117 14:40:59.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.477" endtime="20201117 14:40:59.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.476" endtime="20201117 14:40:59.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.788" level="INFO">${RESULT} = [{'time': 0.024967111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2958000000000006e-05, 'source_diff': 2.2958000000000006e-05}, {'time': 0.024994944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:59.784" endtime="20201117 14:40:59.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.802" level="INFO">${ACCURACY} = {'source_diff': [2.2958000000000006e-05, 2.2166000000000546e-05, 2.212500000000131e-05, 2.1971999999998576e-05, 2.180499999999974e-05, 2.2137999999997937e-05, 2.183300000000235e-05, 2.204100000000042e...</msg>
<status status="PASS" starttime="20201117 14:40:59.789" endtime="20201117 14:40:59.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.807" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.806" endtime="20201117 14:40:59.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.810" level="INFO">VALUE: [2.2958000000000006e-05, 2.2166000000000546e-05, 2.212500000000131e-05, 2.1971999999998576e-05, 2.180499999999974e-05, 2.2137999999997937e-05, 2.183300000000235e-05, 2.204100000000042e-05, 2.1749999999997466e-05, 2.179100000000017e-05, 2.180499999999974e-05, 2.212500000000131e-05, 2.186099999999802e-05, 2.184699999999845e-05, 2.179100000000017e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.2193999999999686e-05, 2.211100000000174e-05, 2.2014000000000755e-05, 2.230500000000024e-05, 2.1707999999998756e-05, 2.2249999999997966e-05, 2.1805999999999215e-05, 2.2193999999999686e-05, 2.1707999999998756e-05, 2.187500000000106e-05, 2.20969999999987e-05, 2.1736000000001365e-05, 2.1985999999998146e-05, 2.2235999999998396e-05, 2.1778000000000075e-05, 2.1735999999997896e-05, 2.2235999999998396e-05, 2.1805999999999215e-05, 2.2222000000002295e-05, 2.2264000000001005e-05, 2.1791999999999645e-05, 2.2249999999997966e-05, 2.197300000000152e-05, 2.1972000000002045e-05, 2.1820000000002254e-05, 2.2249999999997966e-05, 2.2236000000001865e-05, 2.212500000000131e-05, 2.22090000000022e-05, 2.230500000000024e-05, 2.1721999999998326e-05, 2.1805999999999215e-05, 2.211100000000174e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.808" endtime="20201117 14:40:59.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.803" endtime="20201117 14:40:59.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.813" endtime="20201117 14:40:59.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.816" endtime="20201117 14:40:59.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.814" endtime="20201117 14:40:59.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.811" endtime="20201117 14:40:59.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.445" endtime="20201117 14:40:59.837"></status>
</kw>
<msg timestamp="20201117 14:40:59.837" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.845" endtime="20201117 14:40:59.860"></status>
</kw>
<msg timestamp="20201117 14:40:59.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.843" endtime="20201117 14:40:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.861" endtime="20201117 14:40:59.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.864" endtime="20201117 14:40:59.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.841" endtime="20201117 14:40:59.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.839" endtime="20201117 14:40:59.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.873" endtime="20201117 14:41:00.160"></status>
</kw>
<msg timestamp="20201117 14:41:00.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021535236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.872" endtime="20201117 14:41:00.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021535236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.164" endtime="20201117 14:41:00.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.172" endtime="20201117 14:41:00.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.869" endtime="20201117 14:41:00.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.868" endtime="20201117 14:41:00.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.179" level="INFO">${RESULT} = [{'time': 0.021535236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.256900000000006e-05, 'source_diff': 2.256900000000006e-05}, {'time': 0.021563056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:00.176" endtime="20201117 14:41:00.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.192" level="INFO">${ACCURACY} = {'source_diff': [2.256900000000006e-05, 2.2305999999999715e-05, 2.1929999999999866e-05, 2.2207999999999256e-05, 2.2290999999997202e-05, 2.204100000000042e-05, 2.1750000000000935e-05, 2.179100000000017...</msg>
<status status="PASS" starttime="20201117 14:41:00.180" endtime="20201117 14:41:00.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.197" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.196" endtime="20201117 14:41:00.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.199" level="INFO">VALUE: [2.256900000000006e-05, 2.2305999999999715e-05, 2.1929999999999866e-05, 2.2207999999999256e-05, 2.2290999999997202e-05, 2.204100000000042e-05, 2.1750000000000935e-05, 2.179100000000017e-05, 2.1971999999998576e-05, 2.229100000000067e-05, 2.2166000000000546e-05, 2.2207999999999256e-05, 2.183299999999888e-05, 2.215300000000045e-05, 2.2222000000002295e-05, 2.211099999999827e-05, 2.1778000000000075e-05, 2.186100000000149e-05, 2.209700000000217e-05, 2.1957999999999006e-05, 2.1999999999997716e-05, 2.1916000000000296e-05, 2.2014000000000755e-05, 2.180499999999974e-05, 2.1985999999998146e-05, 2.186099999999802e-05, 2.1778000000000075e-05, 2.1819999999998785e-05, 2.183299999999888e-05, 2.2221999999998826e-05, 2.2070000000002504e-05, 2.2014000000000755e-05, 2.215300000000045e-05, 2.184699999999845e-05, 2.218100000000306e-05, 2.188900000000063e-05, 2.2235999999998396e-05, 2.188899999999716e-05, 2.186100000000149e-05, 2.2028000000000325e-05, 2.20969999999987e-05, 2.19030000000002e-05, 2.194499999999891e-05, 2.206899999999956e-05, 2.220899999999873e-05, 2.2028000000000325e-05, 2.1764000000000505e-05, 2.1986000000001615e-05, 2.213900000000088e-05, 2.2235999999998396e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.198" endtime="20201117 14:41:00.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.193" endtime="20201117 14:41:00.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.203" endtime="20201117 14:41:00.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.206" endtime="20201117 14:41:00.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.204" endtime="20201117 14:41:00.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.201" endtime="20201117 14:41:00.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.837" endtime="20201117 14:41:00.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.443" endtime="20201117 14:41:00.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.442" endtime="20201117 14:41:00.227"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.229" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.237" endtime="20201117 14:41:00.252"></status>
</kw>
<msg timestamp="20201117 14:41:00.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.236" endtime="20201117 14:41:00.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.254" endtime="20201117 14:41:00.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.256" endtime="20201117 14:41:00.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.233" endtime="20201117 14:41:00.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.231" endtime="20201117 14:41:00.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.266" endtime="20201117 14:41:00.552"></status>
</kw>
<msg timestamp="20201117 14:41:00.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024053472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.264" endtime="20201117 14:41:00.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024053472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.556" endtime="20201117 14:41:00.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.564" endtime="20201117 14:41:00.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.262" endtime="20201117 14:41:00.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.260" endtime="20201117 14:41:00.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.571" level="INFO">${RESULT} = [{'time': 0.024077125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.365300000000195e-05, 'source_diff': 2.365300000000195e-05}, {'time': 0.024104944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:00.568" endtime="20201117 14:41:00.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.585" level="INFO">${ACCURACY} = {'source_diff': [2.365300000000195e-05, 2.2499999999998216e-05, 2.3208000000000256e-05, 2.3235999999999396e-05, 2.287499999999859e-05, 2.281900000000031e-05, 2.286099999999902e-05, 2.3027999999997856e...</msg>
<status status="PASS" starttime="20201117 14:41:00.572" endtime="20201117 14:41:00.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.589" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.588" endtime="20201117 14:41:00.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.592" level="INFO">VALUE: [2.365300000000195e-05, 2.2499999999998216e-05, 2.3208000000000256e-05, 2.3235999999999396e-05, 2.287499999999859e-05, 2.281900000000031e-05, 2.286099999999902e-05, 2.3027999999997856e-05, 2.3000000000002185e-05, 2.2764000000001505e-05, 2.281900000000031e-05, 2.283299999999988e-05, 2.306900000000056e-05, 2.291700000000077e-05, 2.3194000000000686e-05, 2.286099999999902e-05, 2.306900000000056e-05, 2.315299999999798e-05, 2.3042000000000895e-05, 2.3249999999998966e-05, 2.283299999999988e-05, 2.2778000000001075e-05, 2.287499999999859e-05, 2.313899999999841e-05, 2.2764000000001505e-05, 2.3292000000001145e-05, 2.315300000000145e-05, 2.3028000000001325e-05, 2.318100000000059e-05, 2.3221999999999826e-05, 2.293100000000034e-05, 2.30969999999997e-05, 2.286100000000249e-05, 2.2777999999997606e-05, 2.3264000000002005e-05, 2.2833999999999355e-05, 2.319500000000016e-05, 2.315299999999798e-05, 2.2887999999998687e-05, 2.3055999999996996e-05, 2.2721999999999326e-05, 2.270899999999923e-05, 2.316700000000102e-05, 2.3235999999999396e-05, 2.2930000000000866e-05, 2.2833999999999355e-05, 2.288900000000163e-05, 2.2847999999998925e-05, 2.3221999999999826e-05, 2.268100000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.590" endtime="20201117 14:41:00.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.586" endtime="20201117 14:41:00.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.595" endtime="20201117 14:41:00.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.598" endtime="20201117 14:41:00.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.597" endtime="20201117 14:41:00.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.593" endtime="20201117 14:41:00.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.230" endtime="20201117 14:41:00.619"></status>
</kw>
<msg timestamp="20201117 14:41:00.619" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.627" endtime="20201117 14:41:00.642"></status>
</kw>
<msg timestamp="20201117 14:41:00.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.626" endtime="20201117 14:41:00.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.644" endtime="20201117 14:41:00.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.647" endtime="20201117 14:41:00.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.623" endtime="20201117 14:41:00.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.621" endtime="20201117 14:41:00.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.657" endtime="20201117 14:41:00.942"></status>
</kw>
<msg timestamp="20201117 14:41:00.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021466264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.655" endtime="20201117 14:41:00.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021466264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.946" endtime="20201117 14:41:00.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.955" endtime="20201117 14:41:00.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.653" endtime="20201117 14:41:00.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.651" endtime="20201117 14:41:00.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.961" level="INFO">${RESULT} = [{'time': 0.021490347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.021519194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:00.958" endtime="20201117 14:41:00.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.975" level="INFO">${ACCURACY} = {'source_diff': [2.408300000000113e-05, 2.337499999999909e-05, 2.288900000000163e-05, 2.2790999999997702e-05, 2.313899999999841e-05, 2.2651999999998007e-05, 2.2915999999997827e-05, 2.280500000000074e-...</msg>
<status status="PASS" starttime="20201117 14:41:00.962" endtime="20201117 14:41:00.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.979" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.978" endtime="20201117 14:41:00.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.982" level="INFO">VALUE: [2.408300000000113e-05, 2.337499999999909e-05, 2.288900000000163e-05, 2.2790999999997702e-05, 2.313899999999841e-05, 2.2651999999998007e-05, 2.2915999999997827e-05, 2.280500000000074e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.284699999999945e-05, 2.30969999999997e-05, 2.2735999999998896e-05, 2.3250000000002435e-05, 2.2986000000002615e-05, 2.2707999999999756e-05, 2.2750000000001935e-05, 2.2778000000001075e-05, 2.30969999999997e-05, 2.3263999999998536e-05, 2.3249999999998966e-05, 2.308300000000013e-05, 2.2792000000000645e-05, 2.288899999999816e-05, 2.3042000000000895e-05, 2.2778000000001075e-05, 2.280500000000074e-05, 2.313899999999841e-05, 2.2819999999999785e-05, 2.318100000000059e-05, 2.306900000000056e-05, 2.2778000000001075e-05, 2.286099999999902e-05, 2.315300000000145e-05, 2.3235999999999396e-05, 2.283299999999988e-05, 2.312500000000231e-05, 2.2707999999999756e-05, 2.319500000000016e-05, 2.315300000000145e-05, 2.312499999999884e-05, 2.2999999999998716e-05, 2.2749999999998466e-05, 2.293100000000034e-05, 2.313899999999841e-05, 2.311099999999927e-05, 2.315300000000145e-05, 2.311099999999927e-05, 2.270899999999923e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.980" endtime="20201117 14:41:00.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.976" endtime="20201117 14:41:00.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.985" endtime="20201117 14:41:00.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.988" endtime="20201117 14:41:01.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.987" endtime="20201117 14:41:01.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.983" endtime="20201117 14:41:01.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.620" endtime="20201117 14:41:01.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.228" endtime="20201117 14:41:01.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.227" endtime="20201117 14:41:01.009"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.012" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.020" endtime="20201117 14:41:01.036"></status>
</kw>
<msg timestamp="20201117 14:41:01.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.019" endtime="20201117 14:41:01.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.038" endtime="20201117 14:41:01.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.040" endtime="20201117 14:41:01.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.016" endtime="20201117 14:41:01.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.014" endtime="20201117 14:41:01.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.049" endtime="20201117 14:41:01.336"></status>
</kw>
<msg timestamp="20201117 14:41:01.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025255819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.048" endtime="20201117 14:41:01.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025255819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.340" endtime="20201117 14:41:01.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.348" endtime="20201117 14:41:01.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.045" endtime="20201117 14:41:01.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.043" endtime="20201117 14:41:01.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.355" level="INFO">${RESULT} = [{'time': 0.025280514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.469500000000166e-05, 'source_diff': 2.469500000000166e-05}, {'time': 0.025310347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:01.352" endtime="20201117 14:41:01.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.370" level="INFO">${ACCURACY} = {'source_diff': [2.469500000000166e-05, 2.434700000000095e-05, 2.411100000000027e-05, 2.4026999999999382e-05, 2.3902000000002727e-05, 2.4082999999997662e-05, 2.3651999999999007e-05, 2.3749999999999466...</msg>
<status status="PASS" starttime="20201117 14:41:01.356" endtime="20201117 14:41:01.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.374" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.373" endtime="20201117 14:41:01.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.377" level="INFO">VALUE: [2.469500000000166e-05, 2.434700000000095e-05, 2.411100000000027e-05, 2.4026999999999382e-05, 2.3902000000002727e-05, 2.4082999999997662e-05, 2.3651999999999007e-05, 2.3749999999999466e-05, 2.388899999999916e-05, 2.40970000000007e-05, 2.408300000000113e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.395900000000048e-05, 2.418099999999812e-05, 2.411100000000027e-05, 2.3999999999999716e-05, 2.4068999999998092e-05, 2.386100000000002e-05, 2.3944000000001436e-05, 2.388899999999916e-05, 2.391700000000177e-05, 2.418100000000159e-05, 2.393099999999787e-05, 2.3708000000000756e-05, 2.384700000000045e-05, 2.3722000000000326e-05, 2.3708000000000756e-05, 2.383300000000088e-05, 2.3805999999997746e-05, 2.388899999999916e-05, 2.4263999999999536e-05, 2.40970000000007e-05, 2.415299999999898e-05, 2.4236000000000396e-05, 2.3791999999998176e-05, 2.412499999999984e-05, 2.39169999999983e-05, 2.4249999999999966e-05, 2.3584000000000105e-05, 2.39169999999983e-05, 2.394500000000091e-05, 2.379100000000217e-05, 2.384700000000045e-05, 2.418099999999812e-05, 2.3792000000001645e-05, 2.386100000000002e-05, 2.4263999999999536e-05, 2.423699999999987e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.375" endtime="20201117 14:41:01.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.371" endtime="20201117 14:41:01.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.380" endtime="20201117 14:41:01.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.383" endtime="20201117 14:41:01.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.382" endtime="20201117 14:41:01.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.378" endtime="20201117 14:41:01.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.012" endtime="20201117 14:41:01.405"></status>
</kw>
<msg timestamp="20201117 14:41:01.405" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.413" endtime="20201117 14:41:01.428"></status>
</kw>
<msg timestamp="20201117 14:41:01.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.412" endtime="20201117 14:41:01.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.430" endtime="20201117 14:41:01.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.432" endtime="20201117 14:41:01.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.409" endtime="20201117 14:41:01.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.407" endtime="20201117 14:41:01.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.442" endtime="20201117 14:41:01.747"></status>
</kw>
<msg timestamp="20201117 14:41:01.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.441" endtime="20201117 14:41:01.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.751" endtime="20201117 14:41:01.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.759" endtime="20201117 14:41:01.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.438" endtime="20201117 14:41:01.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.436" endtime="20201117 14:41:01.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.766" level="INFO">${RESULT} = [{'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4346999999997482e-05, 'source_diff': 2.4346999999997482e-05}, {'time': 0.022418986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.762" endtime="20201117 14:41:01.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.779" level="INFO">${ACCURACY} = {'source_diff': [2.4346999999997482e-05, 2.4249999999999966e-05, 2.412499999999984e-05, 2.416700000000202e-05, 2.3832999999997412e-05, 2.3999999999999716e-05, 2.3749999999999466e-05, 2.422200000000082...</msg>
<status status="PASS" starttime="20201117 14:41:01.767" endtime="20201117 14:41:01.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.784" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.783" endtime="20201117 14:41:01.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.786" level="INFO">VALUE: [2.4346999999997482e-05, 2.4249999999999966e-05, 2.412499999999984e-05, 2.416700000000202e-05, 2.3832999999997412e-05, 2.3999999999999716e-05, 2.3749999999999466e-05, 2.4222000000000826e-05, 2.416699999999855e-05, 2.406900000000156e-05, 2.411100000000027e-05, 2.4249999999999966e-05, 2.3722000000000326e-05, 2.3763999999999036e-05, 2.413899999999941e-05, 2.4056000000001465e-05, 2.3832999999997412e-05, 2.3763999999999036e-05, 2.415299999999898e-05, 2.4027999999998856e-05, 2.4027999999998856e-05, 2.3999999999999716e-05, 2.390299999999873e-05, 2.4013999999999286e-05, 2.3972000000000576e-05, 2.4027999999998856e-05, 2.3887999999999687e-05, 2.391700000000177e-05, 2.3776999999999132e-05, 2.411100000000027e-05, 2.419500000000116e-05, 2.394499999999744e-05, 2.419500000000116e-05, 2.4012999999999812e-05, 2.3887999999999687e-05, 2.37229999999998e-05, 2.388900000000263e-05, 2.4277999999999106e-05, 2.404100000000242e-05, 2.431900000000181e-05, 2.3776999999999132e-05, 2.412499999999984e-05, 2.4137999999999937e-05, 2.383300000000088e-05, 2.3749999999999466e-05, 2.3790999999998702e-05, 2.4236000000000396e-05, 2.4277999999999106e-05, 2.3818999999997842e-05, 2.3958000000001006e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.785" endtime="20201117 14:41:01.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.780" endtime="20201117 14:41:01.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.790" endtime="20201117 14:41:01.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.793" endtime="20201117 14:41:01.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.792" endtime="20201117 14:41:01.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.788" endtime="20201117 14:41:01.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.405" endtime="20201117 14:41:01.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.010" endtime="20201117 14:41:01.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.010" endtime="20201117 14:41:01.814"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.817" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.825" endtime="20201117 14:41:01.840"></status>
</kw>
<msg timestamp="20201117 14:41:01.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.823" endtime="20201117 14:41:01.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.841" endtime="20201117 14:41:01.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.844" endtime="20201117 14:41:01.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.821" endtime="20201117 14:41:01.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.819" endtime="20201117 14:41:01.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.853" endtime="20201117 14:41:02.138"></status>
</kw>
<msg timestamp="20201117 14:41:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024253181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.851" endtime="20201117 14:41:02.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024253181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.142" endtime="20201117 14:41:02.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.151" endtime="20201117 14:41:02.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.849" endtime="20201117 14:41:02.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.847" endtime="20201117 14:41:02.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.157" level="INFO">${RESULT} = [{'time': 0.024253181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5861999999998025e-05, 'source_diff': 2.5861999999998025e-05}, {'time': 0.024284014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.154" endtime="20201117 14:41:02.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.171" level="INFO">${ACCURACY} = {'source_diff': [2.5861999999998025e-05, 2.5082999999998662e-05, 2.5000000000000716e-05, 2.5332999999998912e-05, 2.4846999999997982e-05, 2.4764000000000036e-05, 2.512500000000084e-05, 2.52219999999983...</msg>
<status status="PASS" starttime="20201117 14:41:02.158" endtime="20201117 14:41:02.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.176" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.175" endtime="20201117 14:41:02.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.178" level="INFO">VALUE: [2.5861999999998025e-05, 2.5082999999998662e-05, 2.5000000000000716e-05, 2.5332999999998912e-05, 2.4846999999997982e-05, 2.4764000000000036e-05, 2.512500000000084e-05, 2.5221999999998357e-05, 2.4736000000000896e-05, 2.4736000000000896e-05, 2.513899999999694e-05, 2.4790999999999702e-05, 2.5278000000000106e-05, 2.488900000000016e-05, 2.5084000000001605e-05, 2.49169999999993e-05, 2.516699999999955e-05, 2.4750000000000466e-05, 2.4847999999997455e-05, 2.483300000000188e-05, 2.519499999999869e-05, 2.4916000000003297e-05, 2.515299999999998e-05, 2.470899999999776e-05, 2.5084000000001605e-05, 2.5152000000000507e-05, 2.5207999999998787e-05, 2.508300000000213e-05, 2.4736000000000896e-05, 2.4777000000000132e-05, 2.5152000000000507e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5207999999998787e-05, 2.4750000000000466e-05, 2.5250000000000966e-05, 2.461100000000077e-05, 2.5236000000001396e-05, 2.49169999999993e-05, 2.5000000000000716e-05, 2.488900000000016e-05, 2.5179999999999647e-05, 2.4818999999998842e-05, 2.5264000000000536e-05, 2.49169999999993e-05, 2.5110999999997802e-05, 2.50970000000017e-05, 2.5068999999999092e-05, 2.4722000000001326e-05, 2.4791999999999176e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.177" endtime="20201117 14:41:02.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.172" endtime="20201117 14:41:02.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.187" endtime="20201117 14:41:02.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.191" endtime="20201117 14:41:02.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.189" endtime="20201117 14:41:02.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.186" endtime="20201117 14:41:02.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.817" endtime="20201117 14:41:02.212"></status>
</kw>
<msg timestamp="20201117 14:41:02.212" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.220" endtime="20201117 14:41:02.236"></status>
</kw>
<msg timestamp="20201117 14:41:02.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.219" endtime="20201117 14:41:02.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.237" endtime="20201117 14:41:02.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.240" endtime="20201117 14:41:02.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.216" endtime="20201117 14:41:02.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.214" endtime="20201117 14:41:02.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.250" endtime="20201117 14:41:02.536"></status>
</kw>
<msg timestamp="20201117 14:41:02.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02164175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:02.248" endtime="20201117 14:41:02.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02164175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:02.540" endtime="20201117 14:41:02.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.548" endtime="20201117 14:41:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.246" endtime="20201117 14:41:02.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.244" endtime="20201117 14:41:02.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.555" level="INFO">${RESULT} = [{'time': 0.021667319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5568999999999592e-05, 'source_diff': 2.5568999999999592e-05}, {'time': 0.021698153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.551" endtime="20201117 14:41:02.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.568" level="INFO">${ACCURACY} = {'source_diff': [2.5568999999999592e-05, 2.513900000000041e-05, 2.511100000000127e-05, 2.5278000000000106e-05, 2.5000000000000716e-05, 2.4819999999998316e-05, 2.520900000000173e-05, 2.4805999999998746...</msg>
<status status="PASS" starttime="20201117 14:41:02.556" endtime="20201117 14:41:02.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.573" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.572" endtime="20201117 14:41:02.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.575" level="INFO">VALUE: [2.5568999999999592e-05, 2.513900000000041e-05, 2.511100000000127e-05, 2.5278000000000106e-05, 2.5000000000000716e-05, 2.4819999999998316e-05, 2.520900000000173e-05, 2.4805999999998746e-05, 2.472299999999733e-05, 2.493100000000234e-05, 2.488900000000016e-05, 2.5055999999998996e-05, 2.49169999999993e-05, 2.486100000000102e-05, 2.513900000000041e-05, 2.4750000000000466e-05, 2.490299999999973e-05, 2.4986000000001146e-05, 2.5236000000001396e-05, 2.487500000000059e-05, 2.50970000000017e-05, 2.4986000000001146e-05, 2.4721999999997857e-05, 2.481900000000231e-05, 2.4804999999999272e-05, 2.512499999999737e-05, 2.4790999999999702e-05, 2.5179999999999647e-05, 2.490299999999973e-05, 2.5278000000000106e-05, 2.4554999999999022e-05, 2.516699999999955e-05, 2.490299999999973e-05, 2.5054999999999522e-05, 2.5222000000001826e-05, 2.4804999999999272e-05, 2.483300000000188e-05, 2.5054999999999522e-05, 2.5193999999999217e-05, 2.5278000000000106e-05, 2.5221999999998357e-05, 2.5068999999999092e-05, 2.4958000000002006e-05, 2.5014000000000286e-05, 2.5250000000000966e-05, 2.4972000000001576e-05, 2.5068999999999092e-05, 2.518100000000259e-05, 2.4777999999999606e-05, 2.5318999999999342e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.574" endtime="20201117 14:41:02.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.569" endtime="20201117 14:41:02.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.579" endtime="20201117 14:41:02.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.582" endtime="20201117 14:41:02.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.581" endtime="20201117 14:41:02.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.577" endtime="20201117 14:41:02.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.213" endtime="20201117 14:41:02.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.815" endtime="20201117 14:41:02.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.815" endtime="20201117 14:41:02.604"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.606" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.614" endtime="20201117 14:41:02.630"></status>
</kw>
<msg timestamp="20201117 14:41:02.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.613" endtime="20201117 14:41:02.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.631" endtime="20201117 14:41:02.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.634" endtime="20201117 14:41:02.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.610" endtime="20201117 14:41:02.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.608" endtime="20201117 14:41:02.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.643" endtime="20201117 14:41:02.929"></status>
</kw>
<msg timestamp="20201117 14:41:02.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025061944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025088958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.641" endtime="20201117 14:41:02.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025061944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025088958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.933" endtime="20201117 14:41:02.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.941" endtime="20201117 14:41:02.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.639" endtime="20201117 14:41:02.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.637" endtime="20201117 14:41:02.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.948" level="INFO">${RESULT} = [{'time': 0.025088958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7014000000002286e-05, 'source_diff': 2.7014000000002286e-05}, {'time': 0.025119847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.945" endtime="20201117 14:41:02.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.963" level="INFO">${ACCURACY} = {'source_diff': [2.7014000000002286e-05, 2.563900000000091e-05, 2.615300000000098e-05, 2.6207999999999787e-05, 2.594500000000291e-05, 2.6028000000000856e-05, 2.5985999999998677e-05, 2.569499999999919e...</msg>
<status status="PASS" starttime="20201117 14:41:02.949" endtime="20201117 14:41:02.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.967" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.966" endtime="20201117 14:41:02.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.970" level="INFO">VALUE: [2.7014000000002286e-05, 2.563900000000091e-05, 2.615300000000098e-05, 2.6207999999999787e-05, 2.594500000000291e-05, 2.6028000000000856e-05, 2.5985999999998677e-05, 2.569499999999919e-05, 2.619499999999969e-05, 2.5778000000000606e-05, 2.618100000000012e-05, 2.6096999999999232e-05, 2.6124999999998372e-05, 2.619499999999969e-05, 2.6292000000000676e-05, 2.615299999999751e-05, 2.6000000000001716e-05, 2.6041000000000952e-05, 2.5902000000001257e-05, 2.6069000000000092e-05, 2.6027000000001382e-05, 2.6180000000000647e-05, 2.6000000000001716e-05, 2.6082999999999662e-05, 2.5721999999998857e-05, 2.5943999999999967e-05, 2.6221999999999357e-05, 2.5693999999999717e-05, 2.6250000000001966e-05, 2.5722000000002326e-05, 2.6180000000000647e-05, 2.6042000000000426e-05, 2.6082999999999662e-05, 2.6014000000001286e-05, 2.6082999999999662e-05, 2.6249999999998497e-05, 2.5971999999999107e-05, 2.6207999999999787e-05, 2.5763999999997567e-05, 2.5832999999999412e-05, 2.618100000000012e-05, 2.6292000000000676e-05, 2.6222000000002826e-05, 2.6221999999999357e-05, 2.6014000000001286e-05, 2.5832999999999412e-05, 2.6278000000001106e-05, 2.6292000000000676e-05, 2.5957999999999537e-05, 2.6236000000002396e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.968" endtime="20201117 14:41:02.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.964" endtime="20201117 14:41:02.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.973" endtime="20201117 14:41:02.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.977" endtime="20201117 14:41:02.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.975" endtime="20201117 14:41:02.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.972" endtime="20201117 14:41:02.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.607" endtime="20201117 14:41:02.997"></status>
</kw>
<msg timestamp="20201117 14:41:02.998" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.006" endtime="20201117 14:41:03.021"></status>
</kw>
<msg timestamp="20201117 14:41:03.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.004" endtime="20201117 14:41:03.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.023" endtime="20201117 14:41:03.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.025" endtime="20201117 14:41:03.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.002" endtime="20201117 14:41:03.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.000" endtime="20201117 14:41:03.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.035" endtime="20201117 14:41:03.321"></status>
</kw>
<msg timestamp="20201117 14:41:03.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02151875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:03.034" endtime="20201117 14:41:03.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02151875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:03.325" endtime="20201117 14:41:03.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.333" endtime="20201117 14:41:03.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.031" endtime="20201117 14:41:03.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.029" endtime="20201117 14:41:03.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.340" level="INFO">${RESULT} = [{'time': 0.021545236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6485999999999177e-05, 'source_diff': 2.6485999999999177e-05}, {'time': 0.021577014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:03.336" endtime="20201117 14:41:03.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.353" level="INFO">${ACCURACY} = {'source_diff': [2.6485999999999177e-05, 2.6458000000000037e-05, 2.6027999999997387e-05, 2.6250000000001966e-05, 2.593099999999987e-05, 2.5986000000002146e-05, 2.586100000000202e-05, 2.598600000000214...</msg>
<status status="PASS" starttime="20201117 14:41:03.341" endtime="20201117 14:41:03.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.358" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.357" endtime="20201117 14:41:03.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.361" level="INFO">VALUE: [2.6485999999999177e-05, 2.6458000000000037e-05, 2.6027999999997387e-05, 2.6250000000001966e-05, 2.593099999999987e-05, 2.5986000000002146e-05, 2.586100000000202e-05, 2.5986000000002146e-05, 2.6014000000001286e-05, 2.588900000000116e-05, 2.6082999999999662e-05, 2.5735999999998427e-05, 2.6249999999998497e-05, 2.5763999999997567e-05, 2.6083999999999136e-05, 2.5819999999999316e-05, 2.6014000000001286e-05, 2.5750000000001466e-05, 2.597300000000205e-05, 2.6042000000000426e-05, 2.5750000000001466e-05, 2.6083999999999136e-05, 2.5776999999997663e-05, 2.569499999999919e-05, 2.5735999999998427e-05, 2.5930000000000397e-05, 2.597299999999858e-05, 2.615299999999751e-05, 2.587500000000159e-05, 2.5848000000001925e-05, 2.6152000000001507e-05, 2.586100000000202e-05, 2.6041000000000952e-05, 2.5986000000002146e-05, 2.6263999999998067e-05, 2.6000000000001716e-05, 2.5750000000001466e-05, 2.6165999999997608e-05, 2.6236000000002396e-05, 2.566700000000005e-05, 2.6082999999999662e-05, 2.6194000000000217e-05, 2.612500000000184e-05, 2.6096999999999232e-05, 2.59170000000003e-05, 2.6028000000000856e-05, 2.6042000000000426e-05, 2.5957999999999537e-05, 2.6292000000000676e-05, 2.5735999999998427e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.359" endtime="20201117 14:41:03.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.355" endtime="20201117 14:41:03.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.364" endtime="20201117 14:41:03.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.367" endtime="20201117 14:41:03.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.366" endtime="20201117 14:41:03.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.362" endtime="20201117 14:41:03.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.998" endtime="20201117 14:41:03.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.605" endtime="20201117 14:41:03.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.604" endtime="20201117 14:41:03.388"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.391" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.399" endtime="20201117 14:41:03.414"></status>
</kw>
<msg timestamp="20201117 14:41:03.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.397" endtime="20201117 14:41:03.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.416" endtime="20201117 14:41:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.418" endtime="20201117 14:41:03.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.395" endtime="20201117 14:41:03.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.393" endtime="20201117 14:41:03.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.427" endtime="20201117 14:41:03.713"></status>
</kw>
<msg timestamp="20201117 14:41:03.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023918736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.426" endtime="20201117 14:41:03.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023918736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.717" endtime="20201117 14:41:03.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.726" endtime="20201117 14:41:03.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.423" endtime="20201117 14:41:03.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.421" endtime="20201117 14:41:03.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.733" level="INFO">${RESULT} = [{'time': 0.023918736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.741699999999833e-05, 'source_diff': 2.741699999999833e-05}, {'time': 0.023950569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:03.729" endtime="20201117 14:41:03.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.746" level="INFO">${ACCURACY} = {'source_diff': [2.741699999999833e-05, 2.6527000000001882e-05, 2.6665999999998108e-05, 2.7208000000000787e-05, 2.7026999999998913e-05, 2.6805000000001272e-05, 2.7235999999999927e-05, 2.69299999999979...</msg>
<status status="PASS" starttime="20201117 14:41:03.734" endtime="20201117 14:41:03.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.751" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.750" endtime="20201117 14:41:03.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.754" level="INFO">VALUE: [2.741699999999833e-05, 2.6527000000001882e-05, 2.6665999999998108e-05, 2.7208000000000787e-05, 2.7026999999998913e-05, 2.6805000000001272e-05, 2.7235999999999927e-05, 2.6929999999997928e-05, 2.7110999999999802e-05, 2.6694000000000717e-05, 2.7194000000001217e-05, 2.6735999999999427e-05, 2.6874999999999122e-05, 2.6818999999997373e-05, 2.6721999999999857e-05, 2.6778000000001606e-05, 2.6804999999997803e-05, 2.6833000000000412e-05, 2.7249999999999497e-05, 2.6721999999999857e-05, 2.688900000000216e-05, 2.7221999999996888e-05, 2.693100000000087e-05, 2.7027999999998387e-05, 2.6777999999998137e-05, 2.6944000000000967e-05, 2.716700000000155e-05, 2.6874999999999122e-05, 2.690299999999826e-05, 2.6806000000000746e-05, 2.7151999999999038e-05, 2.6820000000000316e-05, 2.694499999999697e-05, 2.7208000000000787e-05, 2.6929999999997928e-05, 2.7042000000001426e-05, 2.7124999999999372e-05, 2.7097000000000232e-05, 2.716700000000155e-05, 2.690300000000173e-05, 2.7250000000002966e-05, 2.6778000000001606e-05, 2.720900000000026e-05, 2.69170000000013e-05, 2.6888999999998692e-05, 2.7110999999999802e-05, 2.715299999999851e-05, 2.67369999999989e-05, 2.6749999999998997e-05, 2.6805999999997276e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.752" endtime="20201117 14:41:03.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.747" endtime="20201117 14:41:03.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.757" endtime="20201117 14:41:03.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.760" endtime="20201117 14:41:03.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.759" endtime="20201117 14:41:03.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.755" endtime="20201117 14:41:03.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.391" endtime="20201117 14:41:03.781"></status>
</kw>
<msg timestamp="20201117 14:41:03.781" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.789" endtime="20201117 14:41:03.804"></status>
</kw>
<msg timestamp="20201117 14:41:03.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.788" endtime="20201117 14:41:03.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.806" endtime="20201117 14:41:03.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.808" endtime="20201117 14:41:03.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.785" endtime="20201117 14:41:03.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.783" endtime="20201117 14:41:03.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.818" endtime="20201117 14:41:04.103"></status>
</kw>
<msg timestamp="20201117 14:41:04.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.817" endtime="20201117 14:41:04.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.107" endtime="20201117 14:41:04.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.116" endtime="20201117 14:41:04.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.814" endtime="20201117 14:41:04.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.813" endtime="20201117 14:41:04.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.123" level="INFO">${RESULT} = [{'time': 0.021901764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8291999999999207e-05, 'source_diff': 2.8291999999999207e-05}, {'time': 0.021934597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.119" endtime="20201117 14:41:04.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.136" level="INFO">${ACCURACY} = {'source_diff': [2.8291999999999207e-05, 2.7415999999998858e-05, 2.6999999999999247e-05, 2.6972000000000107e-05, 2.7013999999998817e-05, 2.7235999999999927e-05, 2.6819000000000842e-05, 2.7042000000001...</msg>
<status status="PASS" starttime="20201117 14:41:04.124" endtime="20201117 14:41:04.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.141" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.140" endtime="20201117 14:41:04.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.144" level="INFO">VALUE: [2.8291999999999207e-05, 2.7415999999998858e-05, 2.6999999999999247e-05, 2.6972000000000107e-05, 2.7013999999998817e-05, 2.7235999999999927e-05, 2.6819000000000842e-05, 2.7042000000001426e-05, 2.712500000000284e-05, 2.6958000000000537e-05, 2.7013999999998817e-05, 2.716700000000155e-05, 2.7222000000000357e-05, 2.6806000000000746e-05, 2.6735999999999427e-05, 2.6985999999999677e-05, 2.6778000000001606e-05, 2.6792000000001176e-05, 2.719500000000069e-05, 2.69309999999974e-05, 2.694500000000044e-05, 2.718100000000112e-05, 2.6764000000002036e-05, 2.7110999999999802e-05, 2.720900000000026e-05, 2.690299999999826e-05, 2.7042000000001426e-05, 2.672299999999933e-05, 2.716700000000155e-05, 2.7263999999999067e-05, 2.715299999999851e-05, 2.6776999999998663e-05, 2.7305999999997776e-05, 2.6833000000000412e-05, 2.6791999999997707e-05, 2.7084000000000136e-05, 2.7084000000000136e-05, 2.7028000000001856e-05, 2.7027999999998387e-05, 2.6958000000000537e-05, 2.6916000000001827e-05, 2.6792000000001176e-05, 2.7068999999997623e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.6749999999998997e-05, 2.6958000000000537e-05, 2.6790999999998233e-05, 2.7264000000002536e-05, 2.7055000000001522e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.143" endtime="20201117 14:41:04.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.137" endtime="20201117 14:41:04.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.148" endtime="20201117 14:41:04.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.151" endtime="20201117 14:41:04.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.150" endtime="20201117 14:41:04.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.146" endtime="20201117 14:41:04.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.782" endtime="20201117 14:41:04.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.390" endtime="20201117 14:41:04.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.389" endtime="20201117 14:41:04.172"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.175" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.183" endtime="20201117 14:41:04.200"></status>
</kw>
<msg timestamp="20201117 14:41:04.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.182" endtime="20201117 14:41:04.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.201" endtime="20201117 14:41:04.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.204" endtime="20201117 14:41:04.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.179" endtime="20201117 14:41:04.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.177" endtime="20201117 14:41:04.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.213" endtime="20201117 14:41:04.499"></status>
</kw>
<msg timestamp="20201117 14:41:04.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.212" endtime="20201117 14:41:04.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.503" endtime="20201117 14:41:04.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.512" endtime="20201117 14:41:04.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.209" endtime="20201117 14:41:04.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.207" endtime="20201117 14:41:04.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.518" level="INFO">${RESULT} = [{'time': 0.024942542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8903000000000262e-05, 'source_diff': 2.8903000000000262e-05}, {'time': 0.024976403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.515" endtime="20201117 14:41:04.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.533" level="INFO">${ACCURACY} = {'source_diff': [2.8903000000000262e-05, 2.8320000000001816e-05, 2.8236000000000927e-05, 2.7986000000000677e-05, 2.8125000000000372e-05, 2.7805999999998277e-05, 2.818099999999865e-05, 2.77359999999969...</msg>
<status status="PASS" starttime="20201117 14:41:04.519" endtime="20201117 14:41:04.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.538" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.537" endtime="20201117 14:41:04.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.540" level="INFO">VALUE: [2.8903000000000262e-05, 2.8320000000001816e-05, 2.8236000000000927e-05, 2.7986000000000677e-05, 2.8125000000000372e-05, 2.7805999999998277e-05, 2.818099999999865e-05, 2.7735999999996958e-05, 2.816699999999908e-05, 2.79170000000023e-05, 2.7791999999998707e-05, 2.819500000000169e-05, 2.8263000000000593e-05, 2.7986000000000677e-05, 2.8000000000000247e-05, 2.7861000000000552e-05, 2.794500000000144e-05, 2.797300000000058e-05, 2.8138000000000468e-05, 2.79170000000023e-05, 2.8250000000000497e-05, 2.8028000000002856e-05, 2.7834000000000886e-05, 2.797300000000058e-05, 2.7820000000001316e-05, 2.7972000000001107e-05, 2.8152999999999512e-05, 2.7722000000000857e-05, 2.7790999999999233e-05, 2.8152000000000038e-05, 2.8097000000001232e-05, 2.7888999999999692e-05, 2.7708000000001287e-05, 2.8125000000000372e-05, 2.7749999999999997e-05, 2.7847000000000982e-05, 2.8000000000000247e-05, 2.8222000000001357e-05, 2.8277000000000163e-05, 2.7749999999999997e-05, 2.8193999999998748e-05, 2.8138999999999942e-05, 2.7986000000000677e-05, 2.7764000000003036e-05, 2.8179999999999178e-05, 2.7986000000000677e-05, 2.818099999999865e-05, 2.8138999999999942e-05, 2.7861000000000552e-05, 2.8138999999999942e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.539" endtime="20201117 14:41:04.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.534" endtime="20201117 14:41:04.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.543" endtime="20201117 14:41:04.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.547" endtime="20201117 14:41:04.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.545" endtime="20201117 14:41:04.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.542" endtime="20201117 14:41:04.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.175" endtime="20201117 14:41:04.567"></status>
</kw>
<msg timestamp="20201117 14:41:04.568" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.576" endtime="20201117 14:41:04.591"></status>
</kw>
<msg timestamp="20201117 14:41:04.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.574" endtime="20201117 14:41:04.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.593" endtime="20201117 14:41:04.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.595" endtime="20201117 14:41:04.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.572" endtime="20201117 14:41:04.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.570" endtime="20201117 14:41:04.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.605" endtime="20201117 14:41:04.891"></status>
</kw>
<msg timestamp="20201117 14:41:04.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.604" endtime="20201117 14:41:04.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.895" endtime="20201117 14:41:04.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.903" endtime="20201117 14:41:04.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.601" endtime="20201117 14:41:04.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.600" endtime="20201117 14:41:04.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.910" level="INFO">${RESULT} = [{'time': 0.021457597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8666000000000108e-05, 'source_diff': 2.8666000000000108e-05}, {'time': 0.021491417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.907" endtime="20201117 14:41:04.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.924" level="INFO">${ACCURACY} = {'source_diff': [2.8666000000000108e-05, 2.8152999999999512e-05, 2.7777999999999137e-05, 2.797299999999711e-05, 2.8138999999999942e-05, 2.7833999999997416e-05, 2.7915999999999358e-05, 2.81949999999982...</msg>
<status status="PASS" starttime="20201117 14:41:04.911" endtime="20201117 14:41:04.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.928" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.927" endtime="20201117 14:41:04.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.931" level="INFO">VALUE: [2.8666000000000108e-05, 2.8152999999999512e-05, 2.7777999999999137e-05, 2.797299999999711e-05, 2.8138999999999942e-05, 2.7833999999997416e-05, 2.7915999999999358e-05, 2.819499999999822e-05, 2.8068999999998623e-05, 2.8152000000000038e-05, 2.7847000000000982e-05, 2.7776999999999663e-05, 2.7833000000001412e-05, 2.8264000000000067e-05, 2.7943999999998498e-05, 2.8138999999999942e-05, 2.8179999999999178e-05, 2.8084000000001136e-05, 2.7861000000000552e-05, 2.7999999999996777e-05, 2.8138999999999942e-05, 2.8193999999998748e-05, 2.7929999999998928e-05, 2.7943999999998498e-05, 2.8250000000000497e-05, 2.79170000000023e-05, 2.79309999999984e-05, 2.7929999999998928e-05, 2.816699999999908e-05, 2.8235999999997458e-05, 2.768099999999815e-05, 2.7861000000000552e-05, 2.7791999999998707e-05, 2.8027999999999387e-05, 2.8264000000000067e-05, 2.7986000000000677e-05, 2.7861000000000552e-05, 2.7792000000002176e-05, 2.8305999999998777e-05, 2.7972000000001107e-05, 2.8097000000001232e-05, 2.7763999999999567e-05, 2.7791999999998707e-05, 2.8112000000000276e-05, 2.7763999999999567e-05, 2.8083000000001662e-05, 2.8277999999999637e-05, 2.7888999999999692e-05, 2.7888999999999692e-05, 2.8111000000000802e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.929" endtime="20201117 14:41:04.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.925" endtime="20201117 14:41:04.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.934" endtime="20201117 14:41:04.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.937" endtime="20201117 14:41:04.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.936" endtime="20201117 14:41:04.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.932" endtime="20201117 14:41:04.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.568" endtime="20201117 14:41:04.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.174" endtime="20201117 14:41:04.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.173" endtime="20201117 14:41:04.958"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.961" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.969" endtime="20201117 14:41:04.984"></status>
</kw>
<msg timestamp="20201117 14:41:04.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.968" endtime="20201117 14:41:04.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.986" endtime="20201117 14:41:04.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.988" endtime="20201117 14:41:04.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.965" endtime="20201117 14:41:04.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.963" endtime="20201117 14:41:04.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.997" endtime="20201117 14:41:05.283"></status>
</kw>
<msg timestamp="20201117 14:41:05.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.996" endtime="20201117 14:41:05.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024676861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.288" endtime="20201117 14:41:05.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.296" endtime="20201117 14:41:05.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.993" endtime="20201117 14:41:05.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.991" endtime="20201117 14:41:05.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.302" level="INFO">${RESULT} = [{'time': 0.024706292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.94309999999999e-05, 'source_diff': 2.94309999999999e-05}, {'time': 0.024741125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:05.299" endtime="20201117 14:41:05.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.316" level="INFO">${ACCURACY} = {'source_diff': [2.94309999999999e-05, 2.9235999999998458e-05, 2.9306000000003246e-05, 2.9013999999997347e-05, 2.894499999999897e-05, 2.8985999999998208e-05, 2.8971999999998638e-05, 2.8985999999998208...</msg>
<status status="PASS" starttime="20201117 14:41:05.303" endtime="20201117 14:41:05.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.321" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.320" endtime="20201117 14:41:05.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.323" level="INFO">VALUE: [2.94309999999999e-05, 2.9235999999998458e-05, 2.9306000000003246e-05, 2.9013999999997347e-05, 2.894499999999897e-05, 2.8985999999998208e-05, 2.8971999999998638e-05, 2.8985999999998208e-05, 2.9167000000000082e-05, 2.8943999999999498e-05, 2.9264000000001067e-05, 2.9152999999997042e-05, 2.8722000000001857e-05, 2.8986000000001677e-05, 2.9083999999998666e-05, 2.8846999999998513e-05, 2.893100000000287e-05, 2.8875000000001122e-05, 2.8972000000002107e-05, 2.8791999999999707e-05, 2.870899999999829e-05, 2.8903000000000262e-05, 2.9250000000001497e-05, 2.920899999999879e-05, 2.870899999999829e-05, 2.869499999999872e-05, 2.9041999999999957e-05, 2.8804999999999803e-05, 2.8819999999998847e-05, 2.895899999999854e-05, 2.9055999999999527e-05, 2.9027000000000913e-05, 2.9125000000001372e-05, 2.8804999999999803e-05, 2.9207999999999318e-05, 2.8985999999998208e-05, 2.8652000000000538e-05, 2.9000000000001247e-05, 2.8999999999997778e-05, 2.9040999999997014e-05, 2.8958000000002537e-05, 2.8875000000001122e-05, 2.9250000000001497e-05, 2.9193999999999748e-05, 2.9097000000002232e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8916000000000358e-05, 2.9167000000000082e-05, 2.9278000000000637e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.322" endtime="20201117 14:41:05.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.317" endtime="20201117 14:41:05.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.326" endtime="20201117 14:41:05.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.330" endtime="20201117 14:41:05.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.328" endtime="20201117 14:41:05.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.325" endtime="20201117 14:41:05.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.961" endtime="20201117 14:41:05.351"></status>
</kw>
<msg timestamp="20201117 14:41:05.351" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.359" endtime="20201117 14:41:05.375"></status>
</kw>
<msg timestamp="20201117 14:41:05.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.358" endtime="20201117 14:41:05.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.377" endtime="20201117 14:41:05.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.379" endtime="20201117 14:41:05.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.355" endtime="20201117 14:41:05.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.353" endtime="20201117 14:41:05.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.389" endtime="20201117 14:41:05.674"></status>
</kw>
<msg timestamp="20201117 14:41:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.388" endtime="20201117 14:41:05.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.679" endtime="20201117 14:41:05.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.687" endtime="20201117 14:41:05.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.385" endtime="20201117 14:41:05.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.383" endtime="20201117 14:41:05.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.694" level="INFO">${RESULT} = [{'time': 0.021813236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0013999999998348e-05, 'source_diff': 3.0013999999998348e-05}, {'time': 0.021848097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.690" endtime="20201117 14:41:05.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.707" level="INFO">${ACCURACY} = {'source_diff': [3.0013999999998348e-05, 2.9096999999998763e-05, 2.8999999999997778e-05, 2.9207999999999318e-05, 2.8999999999997778e-05, 2.9068999999999623e-05, 2.9027000000000913e-05, 2.9221999999998...</msg>
<status status="PASS" starttime="20201117 14:41:05.695" endtime="20201117 14:41:05.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.712" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.711" endtime="20201117 14:41:05.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.714" level="INFO">VALUE: [3.0013999999998348e-05, 2.9096999999998763e-05, 2.8999999999997778e-05, 2.9207999999999318e-05, 2.8999999999997778e-05, 2.9068999999999623e-05, 2.9027000000000913e-05, 2.9221999999998888e-05, 2.8832999999998943e-05, 2.9249999999998028e-05, 2.9167000000000082e-05, 2.8736000000001427e-05, 2.8929999999999928e-05, 2.8778000000000137e-05, 2.8958000000002537e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.8957999999999068e-05, 2.8834000000001886e-05, 2.8957999999999068e-05, 2.8986000000001677e-05, 2.9167000000000082e-05, 2.8972000000002107e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.9041999999999957e-05, 2.8860999999998083e-05, 2.9041999999999957e-05, 2.894500000000244e-05, 2.89309999999994e-05, 2.9124999999997903e-05, 2.9041999999999957e-05, 2.870900000000176e-05, 2.9041999999999957e-05, 2.8999999999997778e-05, 2.9249999999998028e-05, 2.8791999999999707e-05, 2.8986000000001677e-05, 2.895899999999854e-05, 2.8985999999998208e-05, 2.8861000000001552e-05, 2.9125000000001372e-05, 2.9014000000000817e-05, 2.9277000000001163e-05, 2.8971999999998638e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8902000000000788e-05, 2.9096999999998763e-05, 2.9096999999998763e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.713" endtime="20201117 14:41:05.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.708" endtime="20201117 14:41:05.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.718" endtime="20201117 14:41:05.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.721" endtime="20201117 14:41:05.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.720" endtime="20201117 14:41:05.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.716" endtime="20201117 14:41:05.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.352" endtime="20201117 14:41:05.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.960" endtime="20201117 14:41:05.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.959" endtime="20201117 14:41:05.742"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.745" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.753" endtime="20201117 14:41:05.769"></status>
</kw>
<msg timestamp="20201117 14:41:05.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.752" endtime="20201117 14:41:05.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.771" endtime="20201117 14:41:05.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.773" endtime="20201117 14:41:05.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.749" endtime="20201117 14:41:05.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.747" endtime="20201117 14:41:05.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.782" endtime="20201117 14:41:06.068"></status>
</kw>
<msg timestamp="20201117 14:41:06.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02498425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025015542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:05.781" endtime="20201117 14:41:06.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02498425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025015542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:06.072" endtime="20201117 14:41:06.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.081" endtime="20201117 14:41:06.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.778" endtime="20201117 14:41:06.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.777" endtime="20201117 14:41:06.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.087" level="INFO">${RESULT} = [{'time': 0.025015542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.129200000000221e-05, 'source_diff': 3.129200000000221e-05}, {'time': 0.025051431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:06.084" endtime="20201117 14:41:06.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.102" level="INFO">${ACCURACY} = {'source_diff': [3.129200000000221e-05, 3.0111999999998806e-05, 2.9917000000000832e-05, 2.995899999999954e-05, 2.9778000000001137e-05, 3.0139000000001942e-05, 2.9721999999999388e-05, 3.011099999999933...</msg>
<status status="PASS" starttime="20201117 14:41:06.088" endtime="20201117 14:41:06.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.107" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.106" endtime="20201117 14:41:06.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.110" level="INFO">VALUE: [3.129200000000221e-05, 3.0111999999998806e-05, 2.9917000000000832e-05, 2.995899999999954e-05, 2.9778000000001137e-05, 3.0139000000001942e-05, 2.9721999999999388e-05, 3.0110999999999333e-05, 2.9792000000000707e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 3.0152999999998042e-05, 3.0056000000000527e-05, 3.019500000000022e-05, 2.9750000000001997e-05, 3.0221999999999888e-05, 2.9833999999999417e-05, 2.97370000000019e-05, 3.0167000000001082e-05, 2.9971999999999638e-05, 2.9806000000000277e-05, 3.0152999999998042e-05, 3.0041999999997487e-05, 3.0083000000000193e-05, 3.0056000000000527e-05, 3.015199999999857e-05, 2.988799999999875e-05, 2.988799999999875e-05, 3.0055000000001053e-05, 2.9750000000001997e-05, 3.0125000000002372e-05, 2.9875000000002122e-05, 2.9722000000002857e-05, 2.966599999999764e-05, 3.016599999999814e-05, 3.0276999999998694e-05, 2.9707999999999818e-05, 2.9985999999999208e-05, 2.9846999999999513e-05, 3.015199999999857e-05, 3.0249999999999028e-05, 3.0138999999998473e-05, 2.9917000000000832e-05, 2.9721999999999388e-05, 2.9667000000000582e-05, 2.9958000000000068e-05, 3.0000000000002247e-05, 2.9930000000000928e-05, 3.0110999999999333e-05, 3.0027999999997917e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.108" endtime="20201117 14:41:06.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.103" endtime="20201117 14:41:06.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.113" endtime="20201117 14:41:06.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.116" endtime="20201117 14:41:06.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.115" endtime="20201117 14:41:06.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.111" endtime="20201117 14:41:06.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.746" endtime="20201117 14:41:06.137"></status>
</kw>
<msg timestamp="20201117 14:41:06.137" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.145" endtime="20201117 14:41:06.161"></status>
</kw>
<msg timestamp="20201117 14:41:06.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.144" endtime="20201117 14:41:06.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.162" endtime="20201117 14:41:06.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.165" endtime="20201117 14:41:06.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.141" endtime="20201117 14:41:06.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.139" endtime="20201117 14:41:06.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.176" endtime="20201117 14:41:06.461"></status>
</kw>
<msg timestamp="20201117 14:41:06.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021362958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.174" endtime="20201117 14:41:06.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021362958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.465" endtime="20201117 14:41:06.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.473" endtime="20201117 14:41:06.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.172" endtime="20201117 14:41:06.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.170" endtime="20201117 14:41:06.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.480" level="INFO">${RESULT} = [{'time': 0.021393611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.021429444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:06.477" endtime="20201117 14:41:06.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.494" level="INFO">${ACCURACY} = {'source_diff': [3.065299999999854e-05, 3.0068999999997154e-05, 3.0012999999998874e-05, 2.9749999999998528e-05, 3.0208000000000318e-05, 2.9888999999998223e-05, 3.0055000000001053e-05, 3.01390000000019...</msg>
<status status="PASS" starttime="20201117 14:41:06.481" endtime="20201117 14:41:06.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.499" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.498" endtime="20201117 14:41:06.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.501" level="INFO">VALUE: [3.065299999999854e-05, 3.0068999999997154e-05, 3.0012999999998874e-05, 2.9749999999998528e-05, 3.0208000000000318e-05, 2.9888999999998223e-05, 3.0055000000001053e-05, 3.0139000000001942e-05, 2.9764000000001567e-05, 2.9694000000000248e-05, 2.9958000000000068e-05, 2.9917000000000832e-05, 3.0180000000001178e-05, 2.9708000000003287e-05, 3.0110999999999333e-05, 3.0110999999999333e-05, 3.0014000000001817e-05, 3.0180999999997182e-05, 3.0221999999999888e-05, 2.9860999999999083e-05, 2.9680000000000678e-05, 2.9846999999999513e-05, 2.9971999999999638e-05, 2.9903000000001262e-05, 2.9999999999998778e-05, 2.9694000000000248e-05, 3.0124999999998903e-05, 2.9917000000000832e-05, 2.9834000000002886e-05, 3.0249999999999028e-05, 2.9985999999999208e-05, 2.9735999999998958e-05, 3.0263999999998598e-05, 2.9875000000002122e-05, 3.0070000000000097e-05, 3.0292000000001207e-05, 3.020899999999979e-05, 2.9903000000001262e-05, 3.0110999999999333e-05, 3.0306000000000777e-05, 3.019500000000022e-05, 2.994499999999997e-05, 3.0084000000003136e-05, 2.9847000000002982e-05, 2.988799999999875e-05, 2.970899999999929e-05, 3.0263999999998598e-05, 3.0194000000000748e-05, 2.9971999999999638e-05, 3.0137999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.500" endtime="20201117 14:41:06.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.495" endtime="20201117 14:41:06.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.504" endtime="20201117 14:41:06.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.508" endtime="20201117 14:41:06.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.506" endtime="20201117 14:41:06.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.503" endtime="20201117 14:41:06.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.138" endtime="20201117 14:41:06.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.744" endtime="20201117 14:41:06.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.743" endtime="20201117 14:41:06.529"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.531" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.539" endtime="20201117 14:41:06.555"></status>
</kw>
<msg timestamp="20201117 14:41:06.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.538" endtime="20201117 14:41:06.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.556" endtime="20201117 14:41:06.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.559" endtime="20201117 14:41:06.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.535" endtime="20201117 14:41:06.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.533" endtime="20201117 14:41:06.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.568" endtime="20201117 14:41:06.852"></status>
</kw>
<msg timestamp="20201117 14:41:06.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02394725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:06.566" endtime="20201117 14:41:06.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02394725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:06.856" endtime="20201117 14:41:06.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.865" endtime="20201117 14:41:06.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.564" endtime="20201117 14:41:06.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.562" endtime="20201117 14:41:06.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.872" level="INFO">${RESULT} = [{'time': 0.02394725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.140299999999929e-05, 'source_diff': 3.140299999999929e-05}, {'time': 0.023983083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:06.869" endtime="20201117 14:41:06.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.886" level="INFO">${ACCURACY} = {'source_diff': [3.140299999999929e-05, 3.0526999999998944e-05, 3.088899999999922e-05, 3.091600000000236e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.108300000000119e-05, 3.093099999999793e-05...</msg>
<status status="PASS" starttime="20201117 14:41:06.873" endtime="20201117 14:41:06.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.890" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.889" endtime="20201117 14:41:06.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.893" level="INFO">VALUE: [3.140299999999929e-05, 3.0526999999998944e-05, 3.088899999999922e-05, 3.091600000000236e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.108300000000119e-05, 3.093099999999793e-05, 3.12639999999996e-05, 3.09440000000015e-05, 3.094399999999803e-05, 3.116699999999861e-05, 3.090299999999879e-05, 3.080599999999781e-05, 3.123600000000046e-05, 3.12639999999996e-05, 3.118000000000218e-05, 3.118100000000165e-05, 3.11249999999999e-05, 3.09310000000014e-05, 3.113899999999947e-05, 3.111100000000033e-05, 3.086100000000008e-05, 3.113899999999947e-05, 3.104199999999849e-05, 3.113899999999947e-05, 3.080600000000128e-05, 3.091699999999836e-05, 3.105600000000153e-05, 3.125000000000003e-05, 3.097300000000011e-05, 3.097200000000064e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.101399999999935e-05, 3.1098000000000237e-05, 3.101399999999935e-05, 3.116700000000208e-05, 3.088899999999922e-05, 3.1012999999999874e-05, 3.125000000000003e-05, 3.094399999999803e-05, 3.108300000000119e-05, 3.122199999999742e-05, 3.095800000000107e-05, 3.09440000000015e-05, 3.125000000000003e-05, 3.1054999999998584e-05, 3.11249999999999e-05, 3.088899999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.891" endtime="20201117 14:41:06.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.886" endtime="20201117 14:41:06.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.896" endtime="20201117 14:41:06.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.899" endtime="20201117 14:41:06.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.898" endtime="20201117 14:41:06.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.894" endtime="20201117 14:41:06.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.532" endtime="20201117 14:41:06.920"></status>
</kw>
<msg timestamp="20201117 14:41:06.920" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.928" endtime="20201117 14:41:06.944"></status>
</kw>
<msg timestamp="20201117 14:41:06.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.927" endtime="20201117 14:41:06.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.945" endtime="20201117 14:41:06.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.948" endtime="20201117 14:41:06.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.924" endtime="20201117 14:41:06.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.922" endtime="20201117 14:41:06.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.957" endtime="20201117 14:41:07.244"></status>
</kw>
<msg timestamp="20201117 14:41:07.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.956" endtime="20201117 14:41:07.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.248" endtime="20201117 14:41:07.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.262" endtime="20201117 14:41:07.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.953" endtime="20201117 14:41:07.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.952" endtime="20201117 14:41:07.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.269" level="INFO">${RESULT} = [{'time': 0.021453097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1804999999999334e-05, 'source_diff': 3.1804999999999334e-05}, {'time': 0.021489931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:07.265" endtime="20201117 14:41:07.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.282" level="INFO">${ACCURACY} = {'source_diff': [3.1804999999999334e-05, 3.122300000000036e-05, 3.07370000000029e-05, 3.077799999999867e-05, 3.1276999999999694e-05, 3.099999999999978e-05, 3.074999999999953e-05, 3.104100000000248e-05...</msg>
<status status="PASS" starttime="20201117 14:41:07.270" endtime="20201117 14:41:07.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.287" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.286" endtime="20201117 14:41:07.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.289" level="INFO">VALUE: [3.1804999999999334e-05, 3.122300000000036e-05, 3.07370000000029e-05, 3.077799999999867e-05, 3.1276999999999694e-05, 3.099999999999978e-05, 3.074999999999953e-05, 3.104100000000248e-05, 3.117999999999871e-05, 3.090199999999932e-05, 3.081900000000137e-05, 3.0790999999998764e-05, 3.117999999999871e-05, 3.094399999999803e-05, 3.120799999999785e-05, 3.111100000000033e-05, 3.091599999999889e-05, 3.098600000000021e-05, 3.109700000000076e-05, 3.125000000000003e-05, 3.108300000000119e-05, 3.093000000000193e-05, 3.108300000000119e-05, 3.073599999999996e-05, 3.108300000000119e-05, 3.09579999999976e-05, 3.083300000000094e-05, 3.084700000000051e-05, 3.116699999999861e-05, 3.084700000000051e-05, 3.09310000000014e-05, 3.097200000000064e-05, 3.084700000000051e-05, 3.0846999999997043e-05, 3.083300000000094e-05, 3.116700000000208e-05, 3.091699999999836e-05, 3.105600000000153e-05, 3.073599999999996e-05, 3.066699999999811e-05, 3.123600000000046e-05, 3.095900000000054e-05, 3.087499999999965e-05, 3.108400000000067e-05, 3.079200000000171e-05, 3.093099999999793e-05, 3.095800000000107e-05, 3.120900000000079e-05, 3.097200000000064e-05, 3.090199999999932e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.288" endtime="20201117 14:41:07.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.283" endtime="20201117 14:41:07.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.292" endtime="20201117 14:41:07.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.296" endtime="20201117 14:41:07.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.294" endtime="20201117 14:41:07.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.291" endtime="20201117 14:41:07.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.921" endtime="20201117 14:41:07.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.530" endtime="20201117 14:41:07.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.529" endtime="20201117 14:41:07.317"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.319" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.327" endtime="20201117 14:41:07.344"></status>
</kw>
<msg timestamp="20201117 14:41:07.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.326" endtime="20201117 14:41:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.345" endtime="20201117 14:41:07.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.348" endtime="20201117 14:41:07.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.323" endtime="20201117 14:41:07.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.321" endtime="20201117 14:41:07.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.357" endtime="20201117 14:41:07.643"></status>
</kw>
<msg timestamp="20201117 14:41:07.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.356" endtime="20201117 14:41:07.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.647" endtime="20201117 14:41:07.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.655" endtime="20201117 14:41:07.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.353" endtime="20201117 14:41:07.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.351" endtime="20201117 14:41:07.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.662" level="INFO">${RESULT} = [{'time': 0.024877847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.261100000000183e-05, 'source_diff': 3.261100000000183e-05}, {'time': 0.024915681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:07.658" endtime="20201117 14:41:07.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.677" level="INFO">${ACCURACY} = {'source_diff': [3.261100000000183e-05, 3.220899999999832e-05, 3.206900000000262e-05, 3.209800000000124e-05, 3.222299999999789e-05, 3.17640000000001e-05, 3.2068999999999154e-05, 3.201400000000035e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:07.663" endtime="20201117 14:41:07.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.681" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.680" endtime="20201117 14:41:07.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.684" level="INFO">VALUE: [3.261100000000183e-05, 3.220899999999832e-05, 3.206900000000262e-05, 3.209800000000124e-05, 3.222299999999789e-05, 3.17640000000001e-05, 3.2068999999999154e-05, 3.201400000000035e-05, 3.1860999999997613e-05, 3.188800000000075e-05, 3.186100000000108e-05, 3.223600000000146e-05, 3.2054999999999584e-05, 3.223600000000146e-05, 3.2068999999999154e-05, 3.194399999999903e-05, 3.177799999999967e-05, 3.2054999999999584e-05, 3.190299999999979e-05, 3.2068999999999154e-05, 3.220799999999885e-05, 3.183300000000194e-05, 3.21250000000009e-05, 3.212499999999743e-05, 3.225000000000103e-05, 3.202799999999992e-05, 3.179199999999924e-05, 3.211100000000133e-05, 3.219499999999875e-05, 3.170799999999835e-05, 3.190299999999979e-05, 3.219499999999875e-05, 3.201400000000035e-05, 3.22640000000006e-05, 3.219499999999875e-05, 3.177799999999967e-05, 3.177799999999967e-05, 3.177799999999967e-05, 3.197200000000164e-05, 3.172200000000139e-05, 3.177799999999967e-05, 3.205600000000253e-05, 3.2277000000000694e-05, 3.222299999999789e-05, 3.173600000000096e-05, 3.195899999999807e-05, 3.1818999999998904e-05, 3.177799999999967e-05, 3.1846999999998044e-05, 3.197299999999764e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.682" endtime="20201117 14:41:07.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.678" endtime="20201117 14:41:07.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.687" endtime="20201117 14:41:07.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.690" endtime="20201117 14:41:07.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.689" endtime="20201117 14:41:07.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.685" endtime="20201117 14:41:07.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.320" endtime="20201117 14:41:07.711"></status>
</kw>
<msg timestamp="20201117 14:41:07.711" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.720" endtime="20201117 14:41:07.735"></status>
</kw>
<msg timestamp="20201117 14:41:07.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.718" endtime="20201117 14:41:07.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.737" endtime="20201117 14:41:07.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.740" endtime="20201117 14:41:07.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.715" endtime="20201117 14:41:07.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.713" endtime="20201117 14:41:07.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.750" endtime="20201117 14:41:08.035"></status>
</kw>
<msg timestamp="20201117 14:41:08.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02155925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:07.748" endtime="20201117 14:41:08.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02155925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:08.040" endtime="20201117 14:41:08.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.048" endtime="20201117 14:41:08.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.745" endtime="20201117 14:41:08.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.744" endtime="20201117 14:41:08.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.055" level="INFO">${RESULT} = [{'time': 0.021591583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.233300000000244e-05, 'source_diff': 3.233300000000244e-05}, {'time': 0.021629444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.051" endtime="20201117 14:41:08.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.068" level="INFO">${ACCURACY} = {'source_diff': [3.233300000000244e-05, 3.2291000000000264e-05, 3.180599999999881e-05, 3.188899999999675e-05, 3.223700000000093e-05, 3.205599999999906e-05, 3.19579999999986e-05, 3.217999999999971e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:08.056" endtime="20201117 14:41:08.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.073" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.072" endtime="20201117 14:41:08.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.075" level="INFO">VALUE: [3.233300000000244e-05, 3.2291000000000264e-05, 3.180599999999881e-05, 3.188899999999675e-05, 3.223700000000093e-05, 3.205599999999906e-05, 3.19579999999986e-05, 3.217999999999971e-05, 3.200000000000078e-05, 3.198599999999774e-05, 3.1790999999999764e-05, 3.216600000000014e-05, 3.1818999999998904e-05, 3.1790999999999764e-05, 3.220799999999885e-05, 3.1804999999999334e-05, 3.182000000000185e-05, 3.191599999999989e-05, 3.187500000000065e-05, 3.211100000000133e-05, 3.217999999999971e-05, 3.211100000000133e-05, 3.175000000000053e-05, 3.174999999999706e-05, 3.216699999999961e-05, 3.2096999999998294e-05, 3.198600000000121e-05, 3.175000000000053e-05, 3.227800000000017e-05, 3.187500000000065e-05, 3.166699999999911e-05, 3.215300000000004e-05, 3.184700000000151e-05, 3.211100000000133e-05, 3.216699999999961e-05, 3.163899999999997e-05, 3.21250000000009e-05, 3.200000000000078e-05, 3.197200000000164e-05, 3.181999999999838e-05, 3.184800000000099e-05, 3.180599999999881e-05, 3.224999999999756e-05, 3.209800000000124e-05, 3.213900000000047e-05, 3.222299999999789e-05, 3.184800000000099e-05, 3.198600000000121e-05, 3.205599999999906e-05, 3.190299999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.074" endtime="20201117 14:41:08.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.069" endtime="20201117 14:41:08.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.079" endtime="20201117 14:41:08.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.082" endtime="20201117 14:41:08.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.080" endtime="20201117 14:41:08.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.077" endtime="20201117 14:41:08.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.712" endtime="20201117 14:41:08.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.318" endtime="20201117 14:41:08.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.317" endtime="20201117 14:41:08.103"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.105" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.114" endtime="20201117 14:41:08.130"></status>
</kw>
<msg timestamp="20201117 14:41:08.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.113" endtime="20201117 14:41:08.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.132" endtime="20201117 14:41:08.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.134" endtime="20201117 14:41:08.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.110" endtime="20201117 14:41:08.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.107" endtime="20201117 14:41:08.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.143" endtime="20201117 14:41:08.429"></status>
</kw>
<msg timestamp="20201117 14:41:08.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024860764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.142" endtime="20201117 14:41:08.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024860764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.433" endtime="20201117 14:41:08.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.441" endtime="20201117 14:41:08.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.139" endtime="20201117 14:41:08.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.137" endtime="20201117 14:41:08.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.448" level="INFO">${RESULT} = [{'time': 0.024860764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.331999999999988e-05, 'source_diff': 3.331999999999988e-05}, {'time': 0.024899625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.445" endtime="20201117 14:41:08.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.462" level="INFO">${ACCURACY} = {'source_diff': [3.331999999999988e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.315300000000104e-05, 3.2818999999999904e-05, 3.287500000000165e-05, 3.318000000000071e-05, 3.272200000000239e-...</msg>
<status status="PASS" starttime="20201117 14:41:08.449" endtime="20201117 14:41:08.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.466" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.465" endtime="20201117 14:41:08.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.469" level="INFO">VALUE: [3.331999999999988e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.315300000000104e-05, 3.2818999999999904e-05, 3.287500000000165e-05, 3.318000000000071e-05, 3.272200000000239e-05, 3.270799999999935e-05, 3.32779999999977e-05, 3.315300000000104e-05, 3.275000000000153e-05, 3.299999999999831e-05, 3.3110999999998864e-05, 3.295899999999907e-05, 3.304200000000049e-05, 3.29449999999995e-05, 3.291699999999689e-05, 3.281999999999938e-05, 3.2846999999999044e-05, 3.272200000000239e-05, 3.323599999999899e-05, 3.272300000000186e-05, 3.27640000000011e-05, 3.280599999999981e-05, 3.287500000000165e-05, 3.288900000000122e-05, 3.3124999999998433e-05, 3.3110999999998864e-05, 3.279200000000024e-05, 3.270899999999882e-05, 3.327800000000117e-05, 3.3054999999997114e-05, 3.300000000000178e-05, 3.295800000000307e-05, 3.3027000000001444e-05, 3.3055000000000584e-05, 3.3277000000001694e-05, 3.318000000000071e-05, 3.268000000000021e-05, 3.275000000000153e-05, 3.2791000000000764e-05, 3.316700000000061e-05, 3.2832999999999474e-05, 3.2846999999999044e-05, 3.3082999999999724e-05, 3.326399999999813e-05, 3.3096999999999294e-05, 3.272199999999892e-05, 3.322200000000289e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.467" endtime="20201117 14:41:08.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.463" endtime="20201117 14:41:08.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.472" endtime="20201117 14:41:08.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.475" endtime="20201117 14:41:08.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.474" endtime="20201117 14:41:08.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.470" endtime="20201117 14:41:08.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.106" endtime="20201117 14:41:08.496"></status>
</kw>
<msg timestamp="20201117 14:41:08.497" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.505" endtime="20201117 14:41:08.520"></status>
</kw>
<msg timestamp="20201117 14:41:08.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.503" endtime="20201117 14:41:08.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.522" endtime="20201117 14:41:08.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.524" endtime="20201117 14:41:08.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.501" endtime="20201117 14:41:08.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.499" endtime="20201117 14:41:08.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.534" endtime="20201117 14:41:08.820"></status>
</kw>
<msg timestamp="20201117 14:41:08.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.533" endtime="20201117 14:41:08.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.824" endtime="20201117 14:41:08.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.832" endtime="20201117 14:41:08.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.530" endtime="20201117 14:41:08.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.529" endtime="20201117 14:41:08.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.839" level="INFO">${RESULT} = [{'time': 0.021921417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.368099999999721e-05, 'source_diff': 3.368099999999721e-05}, {'time': 0.021960278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.836" endtime="20201117 14:41:08.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.853" level="INFO">${ACCURACY} = {'source_diff': [3.368099999999721e-05, 3.318100000000018e-05, 3.323599999999899e-05, 3.299999999999831e-05, 3.302800000000092e-05, 3.29449999999995e-05, 3.293099999999993e-05, 3.322199999999942e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:08.840" endtime="20201117 14:41:08.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.857" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.856" endtime="20201117 14:41:08.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.860" level="INFO">VALUE: [3.368099999999721e-05, 3.318100000000018e-05, 3.323599999999899e-05, 3.299999999999831e-05, 3.302800000000092e-05, 3.29449999999995e-05, 3.293099999999993e-05, 3.322199999999942e-05, 3.320799999999985e-05, 3.27779999999972e-05, 3.30839999999992e-05, 3.320900000000279e-05, 3.284800000000199e-05, 3.275000000000153e-05, 3.300000000000178e-05, 3.3110999999998864e-05, 3.283399999999895e-05, 3.3124999999998433e-05, 3.311199999999834e-05, 3.324999999999856e-05, 3.291599999999742e-05, 3.301399999999788e-05, 3.284700000000251e-05, 3.305600000000006e-05, 3.2804999999996864e-05, 3.320799999999985e-05, 3.274999999999806e-05, 3.294399999999656e-05, 3.298600000000221e-05, 3.316600000000114e-05, 3.323600000000246e-05, 3.319400000000028e-05, 3.287500000000165e-05, 3.297199999999917e-05, 3.297199999999917e-05, 3.277800000000067e-05, 3.3110999999998864e-05, 3.2791000000000764e-05, 3.299999999999831e-05, 3.295800000000307e-05, 3.291700000000036e-05, 3.298600000000221e-05, 3.323699999999846e-05, 3.295800000000307e-05, 3.300000000000178e-05, 3.323599999999899e-05, 3.27640000000011e-05, 3.330600000000031e-05, 3.269399999999978e-05, 3.299999999999831e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.858" endtime="20201117 14:41:08.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.854" endtime="20201117 14:41:08.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.863" endtime="20201117 14:41:08.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.867" endtime="20201117 14:41:08.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.865" endtime="20201117 14:41:08.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.861" endtime="20201117 14:41:08.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.497" endtime="20201117 14:41:08.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.104" endtime="20201117 14:41:08.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.103" endtime="20201117 14:41:08.888"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.890" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.898" endtime="20201117 14:41:08.914"></status>
</kw>
<msg timestamp="20201117 14:41:08.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.897" endtime="20201117 14:41:08.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.916" endtime="20201117 14:41:08.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.919" endtime="20201117 14:41:08.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.894" endtime="20201117 14:41:08.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.892" endtime="20201117 14:41:08.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.927" endtime="20201117 14:41:09.213"></status>
</kw>
<msg timestamp="20201117 14:41:09.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024971194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.926" endtime="20201117 14:41:09.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024971194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.218" endtime="20201117 14:41:09.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.226" endtime="20201117 14:41:09.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.923" endtime="20201117 14:41:09.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.922" endtime="20201117 14:41:09.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.233" level="INFO">${RESULT} = [{'time': 0.024971194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5026999999999975e-05, 'source_diff': 3.5026999999999975e-05}, {'time': 0.025011042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:09.230" endtime="20201117 14:41:09.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.248" level="INFO">${ACCURACY} = {'source_diff': [3.5026999999999975e-05, 3.443100000000143e-05, 3.376399999999863e-05, 3.393099999999746e-05, 3.37779999999982e-05, 3.401399999999888e-05, 3.42640000000026e-05, 3.4110999999999864e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:09.234" endtime="20201117 14:41:09.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.253" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.251" endtime="20201117 14:41:09.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.255" level="INFO">VALUE: [3.5026999999999975e-05, 3.443100000000143e-05, 3.376399999999863e-05, 3.393099999999746e-05, 3.37779999999982e-05, 3.401399999999888e-05, 3.42640000000026e-05, 3.4110999999999864e-05, 3.401399999999888e-05, 3.424999999999956e-05, 3.3763000000002624e-05, 3.420799999999738e-05, 3.4040999999998545e-05, 3.3624999999998934e-05, 3.401399999999888e-05, 3.425000000000303e-05, 3.398599999999974e-05, 3.423599999999999e-05, 3.3833000000000474e-05, 3.3819000000000904e-05, 3.420799999999738e-05, 3.390300000000179e-05, 3.397200000000017e-05, 3.3805000000001334e-05, 3.424999999999956e-05, 3.404200000000149e-05, 3.4110999999999864e-05, 3.416699999999814e-05, 3.424999999999956e-05, 3.374999999999906e-05, 3.379200000000124e-05, 3.4110999999999864e-05, 3.390300000000179e-05, 3.377800000000167e-05, 3.4041000000002014e-05, 3.386100000000308e-05, 3.3832999999997004e-05, 3.4124999999999434e-05, 3.4083000000000724e-05, 3.424999999999956e-05, 3.395900000000007e-05, 3.380600000000081e-05, 3.390199999999885e-05, 3.391699999999789e-05, 3.399999999999931e-05, 3.419500000000075e-05, 3.382000000000038e-05, 3.4027000000002444e-05, 3.405600000000106e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.254" endtime="20201117 14:41:09.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.249" endtime="20201117 14:41:09.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.259" endtime="20201117 14:41:09.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.262" endtime="20201117 14:41:09.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.260" endtime="20201117 14:41:09.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.257" endtime="20201117 14:41:09.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.891" endtime="20201117 14:41:09.284"></status>
</kw>
<msg timestamp="20201117 14:41:09.284" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.292" endtime="20201117 14:41:09.307"></status>
</kw>
<msg timestamp="20201117 14:41:09.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.291" endtime="20201117 14:41:09.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.309" endtime="20201117 14:41:09.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.311" endtime="20201117 14:41:09.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.288" endtime="20201117 14:41:09.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.286" endtime="20201117 14:41:09.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.321" endtime="20201117 14:41:09.607"></status>
</kw>
<msg timestamp="20201117 14:41:09.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.320" endtime="20201117 14:41:09.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.611" endtime="20201117 14:41:09.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.620" endtime="20201117 14:41:09.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.317" endtime="20201117 14:41:09.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.315" endtime="20201117 14:41:09.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.626" level="INFO">${RESULT} = [{'time': 0.022361194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5013000000000405e-05, 'source_diff': 3.5013000000000405e-05}, {'time': 0.022400972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:09.623" endtime="20201117 14:41:09.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.640" level="INFO">${ACCURACY} = {'source_diff': [3.5013000000000405e-05, 3.447200000000067e-05, 3.375000000000253e-05, 3.422299999999989e-05, 3.3819000000000904e-05, 3.419400000000128e-05, 3.379200000000124e-05, 3.3804999999997865e-...</msg>
<status status="PASS" starttime="20201117 14:41:09.627" endtime="20201117 14:41:09.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.644" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.643" endtime="20201117 14:41:09.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.647" level="INFO">VALUE: [3.5013000000000405e-05, 3.447200000000067e-05, 3.375000000000253e-05, 3.422299999999989e-05, 3.3819000000000904e-05, 3.419400000000128e-05, 3.379200000000124e-05, 3.3804999999997865e-05, 3.426399999999913e-05, 3.405600000000106e-05, 3.3888999999998753e-05, 3.42640000000026e-05, 3.398599999999974e-05, 3.407000000000063e-05, 3.39450000000005e-05, 3.419500000000075e-05, 3.3860999999999614e-05, 3.4138999999999003e-05, 3.3888999999998753e-05, 3.420900000000032e-05, 3.420899999999685e-05, 3.3888999999998753e-05, 3.409799999999977e-05, 3.405600000000106e-05, 3.427800000000217e-05, 3.415300000000204e-05, 3.3874999999999184e-05, 3.4097000000000294e-05, 3.3833000000000474e-05, 3.3833000000000474e-05, 3.3874999999999184e-05, 3.40840000000002e-05, 3.418000000000171e-05, 3.393100000000093e-05, 3.4290999999998795e-05, 3.422200000000042e-05, 3.3762999999999155e-05, 3.404200000000149e-05, 3.3888999999998753e-05, 3.422199999999695e-05, 3.398599999999974e-05, 3.4041000000002014e-05, 3.376399999999863e-05, 3.374999999999906e-05, 3.39580000000006e-05, 3.420800000000085e-05, 3.379200000000124e-05, 3.375000000000253e-05, 3.394399999999756e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.645" endtime="20201117 14:41:09.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.641" endtime="20201117 14:41:09.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.651" endtime="20201117 14:41:09.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.654" endtime="20201117 14:41:09.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.652" endtime="20201117 14:41:09.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.649" endtime="20201117 14:41:09.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.284" endtime="20201117 14:41:09.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.889" endtime="20201117 14:41:09.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.888" endtime="20201117 14:41:09.675"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.677" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.686" endtime="20201117 14:41:09.703"></status>
</kw>
<msg timestamp="20201117 14:41:09.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.684" endtime="20201117 14:41:09.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.704" endtime="20201117 14:41:09.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.707" endtime="20201117 14:41:09.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.681" endtime="20201117 14:41:09.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.679" endtime="20201117 14:41:09.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.716" endtime="20201117 14:41:10.002"></status>
</kw>
<msg timestamp="20201117 14:41:10.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024062833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024098569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.714" endtime="20201117 14:41:10.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024062833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024098569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.006" endtime="20201117 14:41:10.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.015" endtime="20201117 14:41:10.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.712" endtime="20201117 14:41:10.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.710" endtime="20201117 14:41:10.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.021" level="INFO">${RESULT} = [{'time': 0.024098569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.573600000000149e-05, 'source_diff': 3.573600000000149e-05}, {'time': 0.024138389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:10.018" endtime="20201117 14:41:10.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.035" level="INFO">${ACCURACY} = {'source_diff': [3.573600000000149e-05, 3.457000000000113e-05, 3.505600000000206e-05, 3.500000000000031e-05, 3.477800000000267e-05, 3.523600000000099e-05, 3.505600000000206e-05, 3.506999999999816e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:10.022" endtime="20201117 14:41:10.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.040" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.039" endtime="20201117 14:41:10.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.042" level="INFO">VALUE: [3.573600000000149e-05, 3.457000000000113e-05, 3.505600000000206e-05, 3.500000000000031e-05, 3.477800000000267e-05, 3.523600000000099e-05, 3.505600000000206e-05, 3.506999999999816e-05, 3.469500000000125e-05, 3.5152999999999573e-05, 3.480600000000181e-05, 3.47779999999992e-05, 3.504200000000249e-05, 3.475000000000006e-05, 3.469500000000125e-05, 3.4818999999998435e-05, 3.491599999999942e-05, 3.473600000000049e-05, 3.520799999999838e-05, 3.5097000000001294e-05, 3.5040999999999545e-05, 3.5026999999999975e-05, 3.469399999999831e-05, 3.5111000000000864e-05, 3.51520000000001e-05, 3.4847000000001044e-05, 3.516599999999967e-05, 3.5097000000001294e-05, 3.491599999999942e-05, 3.4833000000001474e-05, 3.502799999999945e-05, 3.5083000000001724e-05, 3.472199999999745e-05, 3.494400000000203e-05, 3.499999999999684e-05, 3.526400000000013e-05, 3.524999999999709e-05, 3.480600000000181e-05, 3.480599999999834e-05, 3.526400000000013e-05, 3.470799999999788e-05, 3.504200000000249e-05, 3.519499999999828e-05, 3.500000000000031e-05, 3.518100000000218e-05, 3.5082999999998254e-05, 3.532000000000188e-05, 3.5139000000000004e-05, 3.513799999999706e-05, 3.519500000000175e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.041" endtime="20201117 14:41:10.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.036" endtime="20201117 14:41:10.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.046" endtime="20201117 14:41:10.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.049" endtime="20201117 14:41:10.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.047" endtime="20201117 14:41:10.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.044" endtime="20201117 14:41:10.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.678" endtime="20201117 14:41:10.070"></status>
</kw>
<msg timestamp="20201117 14:41:10.070" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.078" endtime="20201117 14:41:10.093"></status>
</kw>
<msg timestamp="20201117 14:41:10.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.077" endtime="20201117 14:41:10.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.095" endtime="20201117 14:41:10.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.097" endtime="20201117 14:41:10.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.074" endtime="20201117 14:41:10.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.072" endtime="20201117 14:41:10.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.107" endtime="20201117 14:41:10.393"></status>
</kw>
<msg timestamp="20201117 14:41:10.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.105" endtime="20201117 14:41:10.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.397" endtime="20201117 14:41:10.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.405" endtime="20201117 14:41:10.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.103" endtime="20201117 14:41:10.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.101" endtime="20201117 14:41:10.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.412" level="INFO">${RESULT} = [{'time': 0.021550667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6180999999999713e-05, 'source_diff': 3.6180999999999713e-05}, {'time': 0.021591528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:10.408" endtime="20201117 14:41:10.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.425" level="INFO">${ACCURACY} = {'source_diff': [3.6180999999999713e-05, 3.5389000000000254e-05, 3.4833000000001474e-05, 3.480599999999834e-05, 3.500000000000031e-05, 3.4902999999999323e-05, 3.4763000000000155e-05, 3.508399999999773...</msg>
<status status="PASS" starttime="20201117 14:41:10.413" endtime="20201117 14:41:10.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.430" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.429" endtime="20201117 14:41:10.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.433" level="INFO">VALUE: [3.6180999999999713e-05, 3.5389000000000254e-05, 3.4833000000001474e-05, 3.480599999999834e-05, 3.500000000000031e-05, 3.4902999999999323e-05, 3.4763000000000155e-05, 3.508399999999773e-05, 3.4847000000001044e-05, 3.5166999999999143e-05, 3.5139000000000004e-05, 3.523600000000099e-05, 3.4624999999999934e-05, 3.475000000000006e-05, 3.5097000000001294e-05, 3.501399999999988e-05, 3.507000000000163e-05, 3.476399999999963e-05, 3.472300000000039e-05, 3.479199999999877e-05, 3.47640000000031e-05, 3.525000000000056e-05, 3.502799999999945e-05, 3.4847000000001044e-05, 3.472199999999745e-05, 3.476399999999963e-05, 3.5040999999999545e-05, 3.517999999999924e-05, 3.4833000000001474e-05, 3.519399999999881e-05, 3.476399999999963e-05, 3.5083000000001724e-05, 3.526400000000013e-05, 3.473600000000049e-05, 3.4860999999997144e-05, 3.4861000000000614e-05, 3.500000000000031e-05, 3.526400000000013e-05, 3.5068999999998685e-05, 3.501399999999988e-05, 3.5166999999999143e-05, 3.473600000000049e-05, 3.4888999999999754e-05, 3.5152999999999573e-05, 3.4846999999997574e-05, 3.522200000000142e-05, 3.501399999999988e-05, 3.500000000000031e-05, 3.526400000000013e-05, 3.5111000000000864e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.432" endtime="20201117 14:41:10.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.427" endtime="20201117 14:41:10.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.436" endtime="20201117 14:41:10.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.440" endtime="20201117 14:41:10.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.438" endtime="20201117 14:41:10.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.434" endtime="20201117 14:41:10.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.071" endtime="20201117 14:41:10.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.676" endtime="20201117 14:41:10.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.675" endtime="20201117 14:41:10.461"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.463" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.471" endtime="20201117 14:41:10.487"></status>
</kw>
<msg timestamp="20201117 14:41:10.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.470" endtime="20201117 14:41:10.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.489" endtime="20201117 14:41:10.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.491" endtime="20201117 14:41:10.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.467" endtime="20201117 14:41:10.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.465" endtime="20201117 14:41:10.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.500" endtime="20201117 14:41:10.785"></status>
</kw>
<msg timestamp="20201117 14:41:10.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.498" endtime="20201117 14:41:10.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.789" endtime="20201117 14:41:10.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.798" endtime="20201117 14:41:10.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.496" endtime="20201117 14:41:10.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.494" endtime="20201117 14:41:10.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.805" level="INFO">${RESULT} = [{'time': 0.024882875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6931000000000463e-05, 'source_diff': 3.6931000000000463e-05}, {'time': 0.024923667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:10.801" endtime="20201117 14:41:10.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.820" level="INFO">${ACCURACY} = {'source_diff': [3.6931000000000463e-05, 3.55840000000017e-05, 3.6110999999998394e-05, 3.5666999999999643e-05, 3.626400000000113e-05, 3.602800000000045e-05, 3.5903000000000324e-05, 3.5874999999997714e...</msg>
<status status="PASS" starttime="20201117 14:41:10.806" endtime="20201117 14:41:10.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.824" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.823" endtime="20201117 14:41:10.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.827" level="INFO">VALUE: [3.6931000000000463e-05, 3.55840000000017e-05, 3.6110999999998394e-05, 3.5666999999999643e-05, 3.626400000000113e-05, 3.602800000000045e-05, 3.5903000000000324e-05, 3.5874999999997714e-05, 3.6082999999999255e-05, 3.590200000000085e-05, 3.5875000000001184e-05, 3.572200000000192e-05, 3.615199999999763e-05, 3.626399999999766e-05, 3.5833000000002474e-05, 3.600000000000131e-05, 3.5889000000000754e-05, 3.5847000000002044e-05, 3.5832999999999005e-05, 3.5875000000001184e-05, 3.6068999999999685e-05, 3.624999999999809e-05, 3.62780000000007e-05, 3.576400000000063e-05, 3.625000000000156e-05, 3.5861000000001614e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.5902999999996854e-05, 3.606999999999916e-05, 3.572200000000192e-05, 3.598599999999827e-05, 3.569499999999878e-05, 3.623600000000199e-05, 3.5847000000002044e-05, 3.598600000000174e-05, 3.593099999999946e-05, 3.626399999999766e-05, 3.59450000000025e-05, 3.626400000000113e-05, 3.6167000000000143e-05, 3.60979999999983e-05, 3.5860999999998144e-05, 3.60840000000022e-05, 3.626400000000113e-05, 3.593099999999946e-05, 3.623699999999799e-05, 3.6276999999997755e-05, 3.59580000000026e-05, 3.569500000000225e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.825" endtime="20201117 14:41:10.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.821" endtime="20201117 14:41:10.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.830" endtime="20201117 14:41:10.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.833" endtime="20201117 14:41:10.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.832" endtime="20201117 14:41:10.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.828" endtime="20201117 14:41:10.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.464" endtime="20201117 14:41:10.854"></status>
</kw>
<msg timestamp="20201117 14:41:10.854" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.862" endtime="20201117 14:41:10.878"></status>
</kw>
<msg timestamp="20201117 14:41:10.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.861" endtime="20201117 14:41:10.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.879" endtime="20201117 14:41:10.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.882" endtime="20201117 14:41:10.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.858" endtime="20201117 14:41:10.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.856" endtime="20201117 14:41:10.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.892" endtime="20201117 14:41:11.178"></status>
</kw>
<msg timestamp="20201117 14:41:11.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.890" endtime="20201117 14:41:11.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.182" endtime="20201117 14:41:11.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.191" endtime="20201117 14:41:11.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.887" endtime="20201117 14:41:11.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.886" endtime="20201117 14:41:11.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.197" level="INFO">${RESULT} = [{'time': 0.021485819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6846999999999575e-05, 'source_diff': 3.6846999999999575e-05}, {'time': 0.021526653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.194" endtime="20201117 14:41:11.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.211" level="INFO">${ACCURACY} = {'source_diff': [3.6846999999999575e-05, 3.548600000000124e-05, 3.5874999999997714e-05, 3.580600000000281e-05, 3.6096999999998824e-05, 3.6153000000000574e-05, 3.624999999999809e-05, 3.6138999999997534...</msg>
<status status="PASS" starttime="20201117 14:41:11.198" endtime="20201117 14:41:11.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.215" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.214" endtime="20201117 14:41:11.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.218" level="INFO">VALUE: [3.6846999999999575e-05, 3.548600000000124e-05, 3.5874999999997714e-05, 3.580600000000281e-05, 3.6096999999998824e-05, 3.6153000000000574e-05, 3.624999999999809e-05, 3.6138999999997534e-05, 3.5888999999997284e-05, 3.600000000000131e-05, 3.618000000000024e-05, 3.575000000000106e-05, 3.606999999999916e-05, 3.577799999999673e-05, 3.6111000000001864e-05, 3.5861000000001614e-05, 3.5818999999999435e-05, 3.5860999999998144e-05, 3.6124999999997964e-05, 3.594399999999956e-05, 3.601400000000088e-05, 3.576400000000063e-05, 3.624999999999809e-05, 3.62780000000007e-05, 3.567999999999974e-05, 3.618000000000024e-05, 3.572199999999845e-05, 3.574999999999759e-05, 3.602800000000045e-05, 3.5861000000001614e-05, 3.592999999999999e-05, 3.62780000000007e-05, 3.619399999999981e-05, 3.5819000000002904e-05, 3.5847000000002044e-05, 3.6152999999997104e-05, 3.599999999999784e-05, 3.573599999999802e-05, 3.6083000000002724e-05, 3.5875000000001184e-05, 3.57780000000002e-05, 3.583399999999848e-05, 3.623599999999852e-05, 3.604200000000002e-05, 3.579199999999977e-05, 3.602800000000045e-05, 3.601399999999741e-05, 3.593100000000293e-05, 3.619500000000275e-05, 3.598700000000121e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.217" endtime="20201117 14:41:11.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.212" endtime="20201117 14:41:11.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.221" endtime="20201117 14:41:11.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.225" endtime="20201117 14:41:11.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.223" endtime="20201117 14:41:11.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.220" endtime="20201117 14:41:11.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.855" endtime="20201117 14:41:11.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.462" endtime="20201117 14:41:11.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.461" endtime="20201117 14:41:11.246"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.249" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.257" endtime="20201117 14:41:11.273"></status>
</kw>
<msg timestamp="20201117 14:41:11.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.256" endtime="20201117 14:41:11.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.274" endtime="20201117 14:41:11.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.277" endtime="20201117 14:41:11.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.253" endtime="20201117 14:41:11.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.251" endtime="20201117 14:41:11.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.286" endtime="20201117 14:41:11.572"></status>
</kw>
<msg timestamp="20201117 14:41:11.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025211556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025249042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.285" endtime="20201117 14:41:11.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025211556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025249042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.576" endtime="20201117 14:41:11.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.584" endtime="20201117 14:41:11.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.282" endtime="20201117 14:41:11.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.280" endtime="20201117 14:41:11.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.591" level="INFO">${RESULT} = [{'time': 0.025249042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.025291861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:11.588" endtime="20201117 14:41:11.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.605" level="INFO">${ACCURACY} = {'source_diff': [3.748599999999977e-05, 3.72919999999978e-05, 3.726399999999866e-05, 3.705600000000059e-05, 3.6860999999999144e-05, 3.7096999999999825e-05, 3.694500000000003e-05, 3.672199999999945e-05...</msg>
<status status="PASS" starttime="20201117 14:41:11.592" endtime="20201117 14:41:11.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.609" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.608" endtime="20201117 14:41:11.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.612" level="INFO">VALUE: [3.748599999999977e-05, 3.72919999999978e-05, 3.726399999999866e-05, 3.705600000000059e-05, 3.6860999999999144e-05, 3.7096999999999825e-05, 3.694500000000003e-05, 3.672199999999945e-05, 3.7110999999999394e-05, 3.722199999999995e-05, 3.7153000000001574e-05, 3.7167000000001144e-05, 3.7111000000002864e-05, 3.705599999999712e-05, 3.7069000000000685e-05, 3.672299999999892e-05, 3.702800000000145e-05, 3.6902999999997854e-05, 3.684799999999905e-05, 3.676400000000163e-05, 3.6805000000000865e-05, 3.720800000000038e-05, 3.724999999999909e-05, 3.726400000000213e-05, 3.725000000000256e-05, 3.686199999999862e-05, 3.719400000000081e-05, 3.724999999999909e-05, 3.690199999999838e-05, 3.701399999999841e-05, 3.698599999999927e-05, 3.6860999999999144e-05, 3.722199999999995e-05, 3.6875000000002184e-05, 3.7027000000001975e-05, 3.7096999999999825e-05, 3.667999999999727e-05, 3.7167000000001144e-05, 3.702800000000145e-05, 3.698599999999927e-05, 3.7138999999998534e-05, 3.719400000000081e-05, 3.6860999999999144e-05, 3.726400000000213e-05, 3.718000000000124e-05, 3.669400000000031e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.6833000000000005e-05, 3.681999999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.610" endtime="20201117 14:41:11.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.606" endtime="20201117 14:41:11.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.615" endtime="20201117 14:41:11.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.618" endtime="20201117 14:41:11.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.617" endtime="20201117 14:41:11.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.613" endtime="20201117 14:41:11.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.249" endtime="20201117 14:41:11.639"></status>
</kw>
<msg timestamp="20201117 14:41:11.639" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.647" endtime="20201117 14:41:11.663"></status>
</kw>
<msg timestamp="20201117 14:41:11.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.646" endtime="20201117 14:41:11.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.664" endtime="20201117 14:41:11.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.667" endtime="20201117 14:41:11.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.643" endtime="20201117 14:41:11.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.641" endtime="20201117 14:41:11.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.677" endtime="20201117 14:41:11.963"></status>
</kw>
<msg timestamp="20201117 14:41:11.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021479819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.676" endtime="20201117 14:41:11.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021479819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.967" endtime="20201117 14:41:11.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.975" endtime="20201117 14:41:11.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.673" endtime="20201117 14:41:11.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.671" endtime="20201117 14:41:11.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.982" level="INFO">${RESULT} = [{'time': 0.021479819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.819400000000181e-05, 'source_diff': 3.819400000000181e-05}, {'time': 0.021522653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:11.979" endtime="20201117 14:41:11.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.996" level="INFO">${ACCURACY} = {'source_diff': [3.819400000000181e-05, 3.7431000000000964e-05, 3.670899999999935e-05, 3.707000000000016e-05, 3.7153000000001574e-05, 3.6903000000001324e-05, 3.670899999999935e-05, 3.708399999999973e-...</msg>
<status status="PASS" starttime="20201117 14:41:11.983" endtime="20201117 14:41:11.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.000" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.999" endtime="20201117 14:41:12.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.003" level="INFO">VALUE: [3.819400000000181e-05, 3.7431000000000964e-05, 3.670899999999935e-05, 3.707000000000016e-05, 3.7153000000001574e-05, 3.6903000000001324e-05, 3.670899999999935e-05, 3.708399999999973e-05, 3.7096999999999825e-05, 3.7069000000000685e-05, 3.7012999999998936e-05, 3.7152999999998104e-05, 3.694400000000056e-05, 3.701399999999841e-05, 3.7069000000000685e-05, 3.723599999999952e-05, 3.695800000000013e-05, 3.6875000000002184e-05, 3.7027000000001975e-05, 3.716600000000167e-05, 3.722199999999995e-05, 3.6847000000003044e-05, 3.694400000000056e-05, 3.7167000000001144e-05, 3.6790999999997825e-05, 3.693000000000099e-05, 3.724999999999909e-05, 3.6819000000000435e-05, 3.676400000000163e-05, 3.6875000000002184e-05, 3.676400000000163e-05, 3.676400000000163e-05, 3.7096999999999825e-05, 3.697200000000317e-05, 3.673599999999902e-05, 3.7013000000002405e-05, 3.720800000000038e-05, 3.680600000000034e-05, 3.702799999999798e-05, 3.694500000000003e-05, 3.7124999999998964e-05, 3.6860999999999144e-05, 3.722199999999995e-05, 3.6931000000000463e-05, 3.701400000000188e-05, 3.698600000000274e-05, 3.725000000000256e-05, 3.6903000000001324e-05, 3.670899999999935e-05, 3.684799999999905e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.001" endtime="20201117 14:41:12.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.996" endtime="20201117 14:41:12.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.006" endtime="20201117 14:41:12.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.009" endtime="20201117 14:41:12.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.008" endtime="20201117 14:41:12.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.004" endtime="20201117 14:41:12.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.640" endtime="20201117 14:41:12.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.247" endtime="20201117 14:41:12.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.246" endtime="20201117 14:41:12.030"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.033" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.041" endtime="20201117 14:41:12.058"></status>
</kw>
<msg timestamp="20201117 14:41:12.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.040" endtime="20201117 14:41:12.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.060" endtime="20201117 14:41:12.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.062" endtime="20201117 14:41:12.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.037" endtime="20201117 14:41:12.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.035" endtime="20201117 14:41:12.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.071" endtime="20201117 14:41:12.357"></status>
</kw>
<msg timestamp="20201117 14:41:12.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025342417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025380875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.070" endtime="20201117 14:41:12.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025342417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025380875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.361" endtime="20201117 14:41:12.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.369" endtime="20201117 14:41:12.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.067" endtime="20201117 14:41:12.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.065" endtime="20201117 14:41:12.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.376" level="INFO">${RESULT} = [{'time': 0.025380875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.845800000000163e-05, 'source_diff': 3.845800000000163e-05}, {'time': 0.025424708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:12.372" endtime="20201117 14:41:12.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.390" level="INFO">${ACCURACY} = {'source_diff': [3.845800000000163e-05, 3.798600000000027e-05, 3.802800000000245e-05, 3.792999999999852e-05, 3.7874999999999714e-05, 3.794399999999809e-05, 3.7805000000001865e-05, 3.8111000000000395e-...</msg>
<status status="PASS" starttime="20201117 14:41:12.377" endtime="20201117 14:41:12.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.395" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.394" endtime="20201117 14:41:12.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.397" level="INFO">VALUE: [3.845800000000163e-05, 3.798600000000027e-05, 3.802800000000245e-05, 3.792999999999852e-05, 3.7874999999999714e-05, 3.794399999999809e-05, 3.7805000000001865e-05, 3.8111000000000395e-05, 3.795799999999766e-05, 3.7888999999999284e-05, 3.827799999999923e-05, 3.8097000000000825e-05, 3.8124999999999964e-05, 3.801399999999941e-05, 3.780599999999787e-05, 3.776400000000263e-05, 3.825000000000009e-05, 3.8097000000000825e-05, 3.804200000000202e-05, 3.8124999999999964e-05, 3.776399999999916e-05, 3.773600000000002e-05, 3.77919999999983e-05, 3.807000000000116e-05, 3.822199999999748e-05, 3.79590000000006e-05, 3.825000000000009e-05, 3.798600000000027e-05, 3.8332999999998035e-05, 3.7695000000000783e-05, 3.7888999999999284e-05, 3.779200000000177e-05, 3.77919999999983e-05, 3.807000000000116e-05, 3.822200000000095e-05, 3.791599999999895e-05, 3.772200000000045e-05, 3.8096999999997355e-05, 3.7833000000001005e-05, 3.8083000000001255e-05, 3.8026999999999506e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.791599999999895e-05, 3.802799999999898e-05, 3.801399999999941e-05, 3.799999999999984e-05, 3.794400000000156e-05, 3.772200000000045e-05, 3.7903000000002324e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.396" endtime="20201117 14:41:12.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.391" endtime="20201117 14:41:12.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.401" endtime="20201117 14:41:12.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.404" endtime="20201117 14:41:12.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.402" endtime="20201117 14:41:12.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.399" endtime="20201117 14:41:12.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.033" endtime="20201117 14:41:12.431"></status>
</kw>
<msg timestamp="20201117 14:41:12.431" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.439" endtime="20201117 14:41:12.455"></status>
</kw>
<msg timestamp="20201117 14:41:12.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.438" endtime="20201117 14:41:12.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.457" endtime="20201117 14:41:12.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.459" endtime="20201117 14:41:12.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.435" endtime="20201117 14:41:12.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.433" endtime="20201117 14:41:12.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.470" endtime="20201117 14:41:12.755"></status>
</kw>
<msg timestamp="20201117 14:41:12.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028031986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028070472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.468" endtime="20201117 14:41:12.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028031986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028070472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.760" endtime="20201117 14:41:12.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.768" endtime="20201117 14:41:12.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.465" endtime="20201117 14:41:12.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.464" endtime="20201117 14:41:12.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.775" level="INFO">${RESULT} = [{'time': 0.028070472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.848600000000077e-05, 'source_diff': 3.848600000000077e-05}, {'time': 0.028114306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:12.771" endtime="20201117 14:41:12.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.788" level="INFO">${ACCURACY} = {'source_diff': [3.848600000000077e-05, 3.806999999999769e-05, 3.8276999999999756e-05, 3.813800000000006e-05, 3.819399999999834e-05, 3.799999999999984e-05, 3.8055000000002115e-05, 3.8097000000000825e-...</msg>
<status status="PASS" starttime="20201117 14:41:12.775" endtime="20201117 14:41:12.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.793" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.792" endtime="20201117 14:41:12.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.795" level="INFO">VALUE: [3.848600000000077e-05, 3.806999999999769e-05, 3.8276999999999756e-05, 3.813800000000006e-05, 3.819399999999834e-05, 3.799999999999984e-05, 3.8055000000002115e-05, 3.8097000000000825e-05, 3.8319000000001935e-05, 3.799999999999984e-05, 3.822200000000095e-05, 3.820800000000138e-05, 3.802799999999898e-05, 3.7833000000001005e-05, 3.7819000000001435e-05, 3.772200000000045e-05, 3.776399999999916e-05, 3.794399999999809e-05, 3.798699999999974e-05, 3.801400000000288e-05, 3.8166999999998674e-05, 3.773600000000002e-05, 3.8083000000001255e-05, 3.826399999999966e-05, 3.7888999999999284e-05, 3.776400000000263e-05, 3.8152999999999104e-05, 3.7945000000001033e-05, 3.8096999999997355e-05, 3.777799999999873e-05, 3.798600000000027e-05, 3.822199999999748e-05, 3.804200000000202e-05, 3.780600000000134e-05, 3.801399999999941e-05, 3.822300000000042e-05, 3.773600000000002e-05, 3.79590000000006e-05, 3.794399999999809e-05, 3.7874999999999714e-05, 3.773699999999949e-05, 3.82780000000027e-05, 3.7818999999997965e-05, 3.7888999999999284e-05, 3.7874999999999714e-05, 3.8054999999998645e-05, 3.795799999999766e-05, 3.8290999999999326e-05, 3.7874999999999714e-05, 3.774999999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.794" endtime="20201117 14:41:12.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.789" endtime="20201117 14:41:12.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.799" endtime="20201117 14:41:12.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.802" endtime="20201117 14:41:12.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.801" endtime="20201117 14:41:12.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.797" endtime="20201117 14:41:12.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.432" endtime="20201117 14:41:12.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.032" endtime="20201117 14:41:12.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.031" endtime="20201117 14:41:12.823"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.825" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.834" endtime="20201117 14:41:12.850"></status>
</kw>
<msg timestamp="20201117 14:41:12.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.832" endtime="20201117 14:41:12.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.851" endtime="20201117 14:41:12.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.854" endtime="20201117 14:41:12.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.830" endtime="20201117 14:41:12.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.827" endtime="20201117 14:41:12.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.863" endtime="20201117 14:41:13.149"></status>
</kw>
<msg timestamp="20201117 14:41:13.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02415375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:12.862" endtime="20201117 14:41:13.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02415375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:13.153" endtime="20201117 14:41:13.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.161" endtime="20201117 14:41:13.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.859" endtime="20201117 14:41:13.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.857" endtime="20201117 14:41:13.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.168" level="INFO">${RESULT} = [{'time': 0.02415375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9389000000000784e-05, 'source_diff': 3.9389000000000784e-05}, {'time': 0.024198597, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:41:13.164" endtime="20201117 14:41:13.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.181" level="INFO">${ACCURACY} = {'source_diff': [3.9389000000000784e-05, 3.924999999999762e-05, 3.901400000000041e-05, 3.9111000000001395e-05, 3.892999999999952e-05, 3.872199999999798e-05, 3.9097000000001825e-05, 3.9082999999998785e...</msg>
<status status="PASS" starttime="20201117 14:41:13.169" endtime="20201117 14:41:13.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.186" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.185" endtime="20201117 14:41:13.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.189" level="INFO">VALUE: [3.9389000000000784e-05, 3.924999999999762e-05, 3.901400000000041e-05, 3.9111000000001395e-05, 3.892999999999952e-05, 3.872199999999798e-05, 3.9097000000001825e-05, 3.9082999999998785e-05, 3.873600000000102e-05, 3.9054999999999646e-05, 3.9167000000003144e-05, 3.875000000000059e-05, 3.875000000000059e-05, 3.899999999999737e-05, 3.922200000000195e-05, 3.9139000000000534e-05, 3.9124999999997495e-05, 3.926400000000066e-05, 3.8875000000000715e-05, 3.9068999999999215e-05, 3.898600000000127e-05, 3.9139000000000534e-05, 3.8902999999999854e-05, 3.92919999999998e-05, 3.883399999999801e-05, 3.902799999999998e-05, 3.9180999999999244e-05, 3.8902999999999854e-05, 3.8917000000002894e-05, 3.9125000000000965e-05, 3.87919999999993e-05, 3.876400000000016e-05, 3.875000000000059e-05, 3.8875000000000715e-05, 3.8833000000002005e-05, 3.8680999999998744e-05, 3.890200000000038e-05, 3.891599999999995e-05, 3.8790999999999826e-05, 3.926399999999719e-05, 3.8861000000001145e-05, 3.870800000000188e-05, 3.875000000000059e-05, 3.8776999999996786e-05, 3.900000000000084e-05, 3.922199999999848e-05, 3.922200000000195e-05, 3.875000000000059e-05, 3.873599999999755e-05, 3.9069000000002685e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.187" endtime="20201117 14:41:13.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.182" endtime="20201117 14:41:13.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.192" endtime="20201117 14:41:13.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.195" endtime="20201117 14:41:13.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.194" endtime="20201117 14:41:13.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.190" endtime="20201117 14:41:13.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.826" endtime="20201117 14:41:13.216"></status>
</kw>
<msg timestamp="20201117 14:41:13.216" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.225" endtime="20201117 14:41:13.240"></status>
</kw>
<msg timestamp="20201117 14:41:13.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.223" endtime="20201117 14:41:13.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.241" endtime="20201117 14:41:13.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.244" endtime="20201117 14:41:13.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.221" endtime="20201117 14:41:13.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.218" endtime="20201117 14:41:13.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.254" endtime="20201117 14:41:13.541"></status>
</kw>
<msg timestamp="20201117 14:41:13.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.252" endtime="20201117 14:41:13.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.545" endtime="20201117 14:41:13.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.553" endtime="20201117 14:41:13.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.250" endtime="20201117 14:41:13.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.248" endtime="20201117 14:41:13.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.560" level="INFO">${RESULT} = [{'time': 0.021495889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0181000000000244e-05, 'source_diff': 4.0181000000000244e-05}, {'time': 0.021540722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:13.557" endtime="20201117 14:41:13.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.574" level="INFO">${ACCURACY} = {'source_diff': [4.0181000000000244e-05, 3.9305000000003365e-05, 3.8875000000000715e-05, 3.9139000000000534e-05, 3.895800000000213e-05, 3.926400000000066e-05, 3.9125000000000965e-05, 3.898600000000127...</msg>
<status status="PASS" starttime="20201117 14:41:13.561" endtime="20201117 14:41:13.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.578" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.577" endtime="20201117 14:41:13.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.581" level="INFO">VALUE: [4.0181000000000244e-05, 3.9305000000003365e-05, 3.8875000000000715e-05, 3.9139000000000534e-05, 3.895800000000213e-05, 3.926400000000066e-05, 3.9125000000000965e-05, 3.898600000000127e-05, 3.9139000000000534e-05, 3.8889000000000284e-05, 3.922200000000195e-05, 3.919399999999934e-05, 3.920799999999891e-05, 3.870800000000188e-05, 3.8958999999998134e-05, 3.876400000000016e-05, 3.922200000000195e-05, 3.87919999999993e-05, 3.8846999999998105e-05, 3.927800000000023e-05, 3.8875000000000715e-05, 3.9195000000002284e-05, 3.908400000000173e-05, 3.8860999999997675e-05, 3.893000000000299e-05, 3.9153000000000104e-05, 3.9054999999999646e-05, 3.924999999999762e-05, 3.9111000000001395e-05, 3.8818999999998965e-05, 3.9110999999997925e-05, 3.9041000000000076e-05, 3.899999999999737e-05, 3.8833000000002005e-05, 3.872200000000145e-05, 3.9277000000000756e-05, 3.902799999999998e-05, 3.8846999999998105e-05, 3.91660000000002e-05, 3.8875000000000715e-05, 3.9054999999999646e-05, 3.897199999999823e-05, 3.873600000000102e-05, 3.89720000000017e-05, 3.920799999999891e-05, 3.8819000000002435e-05, 3.8889000000000284e-05, 3.8944999999998564e-05, 3.9097000000001825e-05, 3.919399999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.579" endtime="20201117 14:41:13.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.575" endtime="20201117 14:41:13.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.584" endtime="20201117 14:41:13.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.588" endtime="20201117 14:41:13.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.586" endtime="20201117 14:41:13.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.583" endtime="20201117 14:41:13.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.217" endtime="20201117 14:41:13.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.824" endtime="20201117 14:41:13.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.823" endtime="20201117 14:41:13.609"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.611" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.620" endtime="20201117 14:41:13.636"></status>
</kw>
<msg timestamp="20201117 14:41:13.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.618" endtime="20201117 14:41:13.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.638" endtime="20201117 14:41:13.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.641" endtime="20201117 14:41:13.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.615" endtime="20201117 14:41:13.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.613" endtime="20201117 14:41:13.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.650" endtime="20201117 14:41:13.936"></status>
</kw>
<msg timestamp="20201117 14:41:13.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024904514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024945069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.648" endtime="20201117 14:41:13.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024904514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024945069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.940" endtime="20201117 14:41:13.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.948" endtime="20201117 14:41:13.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.645" endtime="20201117 14:41:13.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.644" endtime="20201117 14:41:13.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.955" level="INFO">${RESULT} = [{'time': 0.024945069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0555000000001146e-05, 'source_diff': 4.0555000000001146e-05}, {'time': 0.024990875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:13.951" endtime="20201117 14:41:13.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.970" level="INFO">${ACCURACY} = {'source_diff': [4.0555000000001146e-05, 4.022199999999948e-05, 3.97920000000003e-05, 3.9875000000001715e-05, 4.022199999999948e-05, 4.027799999999776e-05, 4.023600000000252e-05, 3.983400000000248e-05...</msg>
<status status="PASS" starttime="20201117 14:41:13.956" endtime="20201117 14:41:13.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.974" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.973" endtime="20201117 14:41:13.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.977" level="INFO">VALUE: [4.0555000000001146e-05, 4.022199999999948e-05, 3.97920000000003e-05, 3.9875000000001715e-05, 4.022199999999948e-05, 4.027799999999776e-05, 4.023600000000252e-05, 3.983400000000248e-05, 4.0208999999999384e-05, 3.977800000000073e-05, 4.023599999999905e-05, 3.981999999999944e-05, 3.9889000000001285e-05, 3.983399999999901e-05, 3.984799999999858e-05, 4.020799999999991e-05, 4.006999999999969e-05, 4.0138999999998065e-05, 3.980599999999987e-05, 4.0124999999998495e-05, 3.973599999999855e-05, 3.997199999999923e-05, 3.991599999999748e-05, 3.9776999999997786e-05, 4.024999999999862e-05, 4.015200000000163e-05, 4.0153000000001104e-05, 4.001400000000141e-05, 4.018000000000077e-05, 4.002800000000098e-05, 4.0139000000001535e-05, 4.004200000000055e-05, 3.9818999999999966e-05, 4.018000000000077e-05, 3.973599999999855e-05, 4.0138999999998065e-05, 3.973599999999855e-05, 4.0152999999997635e-05, 3.9888999999997815e-05, 3.980599999999987e-05, 4.0096999999999355e-05, 3.999999999999837e-05, 3.997199999999923e-05, 4.0111000000002395e-05, 4.0291000000001326e-05, 3.998600000000227e-05, 4.0222999999998954e-05, 3.9709000000002354e-05, 3.977800000000073e-05, 4.0139000000001535e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.975" endtime="20201117 14:41:13.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.971" endtime="20201117 14:41:13.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.980" endtime="20201117 14:41:13.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.984" endtime="20201117 14:41:14.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.982" endtime="20201117 14:41:14.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.979" endtime="20201117 14:41:14.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.612" endtime="20201117 14:41:14.004"></status>
</kw>
<msg timestamp="20201117 14:41:14.005" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.013" endtime="20201117 14:41:14.029"></status>
</kw>
<msg timestamp="20201117 14:41:14.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.011" endtime="20201117 14:41:14.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.030" endtime="20201117 14:41:14.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.033" endtime="20201117 14:41:14.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.009" endtime="20201117 14:41:14.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.007" endtime="20201117 14:41:14.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.043" endtime="20201117 14:41:14.328"></status>
</kw>
<msg timestamp="20201117 14:41:14.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.041" endtime="20201117 14:41:14.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.333" endtime="20201117 14:41:14.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.341" endtime="20201117 14:41:14.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.038" endtime="20201117 14:41:14.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.037" endtime="20201117 14:41:14.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.348" level="INFO">${RESULT} = [{'time': 0.021626042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0389000000001785e-05, 'source_diff': 4.0389000000001785e-05}, {'time': 0.021671875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:14.344" endtime="20201117 14:41:14.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.361" level="INFO">${ACCURACY} = {'source_diff': [4.0389000000001785e-05, 4.0124999999998495e-05, 3.997199999999923e-05, 3.9832999999999535e-05, 3.997199999999923e-05, 3.9930999999999994e-05, 3.9944999999999564e-05, 3.984699999999910...</msg>
<status status="PASS" starttime="20201117 14:41:14.349" endtime="20201117 14:41:14.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.366" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.365" endtime="20201117 14:41:14.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.369" level="INFO">VALUE: [4.0389000000001785e-05, 4.0124999999998495e-05, 3.997199999999923e-05, 3.9832999999999535e-05, 3.997199999999923e-05, 3.9930999999999994e-05, 3.9944999999999564e-05, 3.9846999999999105e-05, 4.0138999999998065e-05, 4.0152999999997635e-05, 4.0111000000002395e-05, 4.0167000000000674e-05, 3.9959000000002604e-05, 3.983399999999901e-05, 4.0167000000000674e-05, 4.0139000000001535e-05, 4.0223000000002423e-05, 4.0208999999999384e-05, 3.9903000000000854e-05, 4.0139000000001535e-05, 3.9763000000001686e-05, 4.0012999999998466e-05, 3.9777000000001256e-05, 3.994400000000009e-05, 3.994400000000009e-05, 4.027799999999776e-05, 4.0194999999999814e-05, 3.993000000000052e-05, 4.000000000000184e-05, 4.016599999999773e-05, 3.99859999999988e-05, 3.9917000000000424e-05, 4.0125000000001965e-05, 4.023599999999905e-05, 3.975000000000159e-05, 4.001400000000141e-05, 3.976400000000116e-05, 3.970799999999941e-05, 4.0096999999999355e-05, 3.977799999999726e-05, 4.0069000000000216e-05, 3.976400000000116e-05, 4.0096999999999355e-05, 4.001399999999794e-05, 4.026399999999819e-05, 3.997199999999923e-05, 4.0138999999998065e-05, 4.0041000000001076e-05, 3.976400000000116e-05, 4.0153000000001104e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.367" endtime="20201117 14:41:14.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.363" endtime="20201117 14:41:14.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.372" endtime="20201117 14:41:14.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.375" endtime="20201117 14:41:14.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.374" endtime="20201117 14:41:14.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.370" endtime="20201117 14:41:14.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.005" endtime="20201117 14:41:14.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.610" endtime="20201117 14:41:14.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.609" endtime="20201117 14:41:14.396"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.399" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.407" endtime="20201117 14:41:14.423"></status>
</kw>
<msg timestamp="20201117 14:41:14.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.405" endtime="20201117 14:41:14.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.425" endtime="20201117 14:41:14.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.427" endtime="20201117 14:41:14.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.403" endtime="20201117 14:41:14.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.401" endtime="20201117 14:41:14.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.436" endtime="20201117 14:41:14.722"></status>
</kw>
<msg timestamp="20201117 14:41:14.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.435" endtime="20201117 14:41:14.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.726" endtime="20201117 14:41:14.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.734" endtime="20201117 14:41:14.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.432" endtime="20201117 14:41:14.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.430" endtime="20201117 14:41:14.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.741" level="INFO">${RESULT} = [{'time': 0.024423667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.14860000000003e-05, 'source_diff': 4.14860000000003e-05}, {'time': 0.024470542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:14.738" endtime="20201117 14:41:14.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.755" level="INFO">${ACCURACY} = {'source_diff': [4.14860000000003e-05, 4.1445000000001064e-05, 4.1124999999999495e-05, 4.1181000000001244e-05, 4.0931000000000994e-05, 4.0791000000001826e-05, 4.104199999999808e-05, 4.0959000000000134...</msg>
<status status="PASS" starttime="20201117 14:41:14.742" endtime="20201117 14:41:14.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.759" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.758" endtime="20201117 14:41:14.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.762" level="INFO">VALUE: [4.14860000000003e-05, 4.1445000000001064e-05, 4.1124999999999495e-05, 4.1181000000001244e-05, 4.0931000000000994e-05, 4.0791000000001826e-05, 4.104199999999808e-05, 4.0959000000000134e-05, 4.080600000000087e-05, 4.09859999999998e-05, 4.123600000000005e-05, 4.0860999999999675e-05, 4.0959000000000134e-05, 4.102800000000198e-05, 4.088799999999934e-05, 4.1262999999999717e-05, 4.101399999999894e-05, 4.075000000000259e-05, 4.1153000000002105e-05, 4.1262999999999717e-05, 4.0791000000001826e-05, 4.102799999999851e-05, 4.11799999999983e-05, 4.122200000000048e-05, 4.1069000000001216e-05, 4.0847000000000105e-05, 4.0847000000000105e-05, 4.0888999999998815e-05, 4.099999999999937e-05, 4.0847000000000105e-05, 4.101400000000241e-05, 4.101399999999894e-05, 4.130600000000137e-05, 4.102800000000198e-05, 4.1082999999997316e-05, 4.12920000000018e-05, 4.097200000000023e-05, 4.073599999999955e-05, 4.102800000000198e-05, 4.0888999999998815e-05, 4.1152999999998635e-05, 4.073599999999955e-05, 4.082000000000044e-05, 4.126400000000266e-05, 4.101400000000241e-05, 4.076399999999869e-05, 4.122200000000048e-05, 4.126399999999919e-05, 4.129199999999833e-05, 4.1012999999999467e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.761" endtime="20201117 14:41:14.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.756" endtime="20201117 14:41:14.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.765" endtime="20201117 14:41:14.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.768" endtime="20201117 14:41:14.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.767" endtime="20201117 14:41:14.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.763" endtime="20201117 14:41:14.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.399" endtime="20201117 14:41:14.789"></status>
</kw>
<msg timestamp="20201117 14:41:14.789" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.798" endtime="20201117 14:41:14.814"></status>
</kw>
<msg timestamp="20201117 14:41:14.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.796" endtime="20201117 14:41:14.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.815" endtime="20201117 14:41:14.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.818" endtime="20201117 14:41:14.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.794" endtime="20201117 14:41:14.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.791" endtime="20201117 14:41:14.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.828" endtime="20201117 14:41:15.113"></status>
</kw>
<msg timestamp="20201117 14:41:15.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.827" endtime="20201117 14:41:15.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.117" endtime="20201117 14:41:15.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.126" endtime="20201117 14:41:15.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.824" endtime="20201117 14:41:15.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.822" endtime="20201117 14:41:15.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.133" level="INFO">${RESULT} = [{'time': 0.021887889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.220800000000191e-05, 'source_diff': 4.220800000000191e-05}, {'time': 0.021934722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:15.129" endtime="20201117 14:41:15.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.146" level="INFO">${ACCURACY} = {'source_diff': [4.220800000000191e-05, 4.1040999999998606e-05, 4.119400000000134e-05, 4.0861000000003145e-05, 4.1152999999998635e-05, 4.126399999999919e-05, 4.074999999999912e-05, 4.0931000000000994e...</msg>
<status status="PASS" starttime="20201117 14:41:15.134" endtime="20201117 14:41:15.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.151" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.150" endtime="20201117 14:41:15.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.153" level="INFO">VALUE: [4.220800000000191e-05, 4.1040999999998606e-05, 4.119400000000134e-05, 4.0861000000003145e-05, 4.1152999999998635e-05, 4.126399999999919e-05, 4.074999999999912e-05, 4.0931000000000994e-05, 4.076399999999869e-05, 4.1319000000001466e-05, 4.0610999999999425e-05, 4.0945000000000564e-05, 4.105600000000112e-05, 4.120800000000091e-05, 4.122200000000048e-05, 4.09859999999998e-05, 4.07920000000013e-05, 4.083400000000001e-05, 4.1110999999999925e-05, 4.1209000000000384e-05, 4.1195000000000814e-05, 4.08059999999974e-05, 4.1166999999998205e-05, 4.0874999999999245e-05, 4.101400000000241e-05, 4.099999999999937e-05, 4.120800000000091e-05, 4.123600000000005e-05, 4.0860999999999675e-05, 4.097199999999676e-05, 4.122200000000048e-05, 4.099999999999937e-05, 4.1055000000001646e-05, 4.123600000000005e-05, 4.12920000000018e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.095800000000066e-05, 4.1138999999999065e-05, 4.11799999999983e-05, 4.104200000000155e-05, 4.119400000000134e-05, 4.092999999999805e-05, 4.1054999999998176e-05, 4.1181000000001244e-05, 4.1153000000002105e-05, 4.0959000000000134e-05, 4.09859999999998e-05, 4.1152999999998635e-05, 4.074999999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.152" endtime="20201117 14:41:15.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.147" endtime="20201117 14:41:15.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.157" endtime="20201117 14:41:15.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.160" endtime="20201117 14:41:15.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.159" endtime="20201117 14:41:15.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.155" endtime="20201117 14:41:15.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.790" endtime="20201117 14:41:15.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.397" endtime="20201117 14:41:15.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.397" endtime="20201117 14:41:15.181"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.183" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.192" endtime="20201117 14:41:15.209"></status>
</kw>
<msg timestamp="20201117 14:41:15.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.190" endtime="20201117 14:41:15.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.211" endtime="20201117 14:41:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.213" endtime="20201117 14:41:15.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.188" endtime="20201117 14:41:15.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.185" endtime="20201117 14:41:15.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.223" endtime="20201117 14:41:15.509"></status>
</kw>
<msg timestamp="20201117 14:41:15.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025065597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.221" endtime="20201117 14:41:15.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025065597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.513" endtime="20201117 14:41:15.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.522" endtime="20201117 14:41:15.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.218" endtime="20201117 14:41:15.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.216" endtime="20201117 14:41:15.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.528" level="INFO">${RESULT} = [{'time': 0.025065597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2832999999999066e-05, 'source_diff': 4.2832999999999066e-05}, {'time': 0.025113431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.525" endtime="20201117 14:41:15.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.543" level="INFO">${ACCURACY} = {'source_diff': [4.2832999999999066e-05, 4.2444999999998595e-05, 4.19860000000008e-05, 4.206999999999822e-05, 4.204199999999908e-05, 4.223600000000105e-05, 4.1833000000001536e-05, 4.225000000000062e-0...</msg>
<status status="PASS" starttime="20201117 14:41:15.529" endtime="20201117 14:41:15.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.548" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.547" endtime="20201117 14:41:15.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.550" level="INFO">VALUE: [4.2832999999999066e-05, 4.2444999999998595e-05, 4.19860000000008e-05, 4.206999999999822e-05, 4.204199999999908e-05, 4.223600000000105e-05, 4.1833000000001536e-05, 4.225000000000062e-05, 4.1805000000002396e-05, 4.192999999999905e-05, 4.201399999999994e-05, 4.194399999999862e-05, 4.21799999999993e-05, 4.2083000000001786e-05, 4.1903000000002855e-05, 4.2097000000001356e-05, 4.170800000000141e-05, 4.2068999999998746e-05, 4.198599999999733e-05, 4.206999999999822e-05, 4.173599999999708e-05, 4.2166999999999205e-05, 4.2110999999997456e-05, 4.1916999999998955e-05, 4.2068999999998746e-05, 4.2180999999998775e-05, 4.2124999999997026e-05, 4.202799999999951e-05, 4.176399999999969e-05, 4.223600000000105e-05, 4.2208999999997915e-05, 4.175000000000012e-05, 4.2111000000000925e-05, 4.2209000000001384e-05, 4.2152999999999635e-05, 4.223600000000105e-05, 4.1902999999999385e-05, 4.1973000000000704e-05, 4.225000000000062e-05, 4.222200000000148e-05, 4.1902999999999385e-05, 4.1776999999999787e-05, 4.180600000000187e-05, 4.176399999999969e-05, 4.191599999999948e-05, 4.219399999999887e-05, 4.1569000000001716e-05, 4.2040999999999606e-05, 4.198599999999733e-05, 4.169399999999837e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.549" endtime="20201117 14:41:15.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.544" endtime="20201117 14:41:15.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.554" endtime="20201117 14:41:15.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.557" endtime="20201117 14:41:15.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.555" endtime="20201117 14:41:15.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.552" endtime="20201117 14:41:15.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.184" endtime="20201117 14:41:15.578"></status>
</kw>
<msg timestamp="20201117 14:41:15.578" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.586" endtime="20201117 14:41:15.603"></status>
</kw>
<msg timestamp="20201117 14:41:15.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.584" endtime="20201117 14:41:15.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.604" endtime="20201117 14:41:15.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.607" endtime="20201117 14:41:15.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.582" endtime="20201117 14:41:15.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.580" endtime="20201117 14:41:15.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.617" endtime="20201117 14:41:15.903"></status>
</kw>
<msg timestamp="20201117 14:41:15.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.615" endtime="20201117 14:41:15.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.907" endtime="20201117 14:41:15.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.915" endtime="20201117 14:41:15.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.613" endtime="20201117 14:41:15.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.611" endtime="20201117 14:41:15.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.922" level="INFO">${RESULT} = [{'time': 0.021484542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2430999999999025e-05, 'source_diff': 4.2430999999999025e-05}, {'time': 0.021532361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.919" endtime="20201117 14:41:15.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.936" level="INFO">${ACCURACY} = {'source_diff': [4.2430999999999025e-05, 4.244399999999912e-05, 4.19860000000008e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.19860000000008e-05, 4.2195000000001814e-05, 4.207000000000169e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:15.923" endtime="20201117 14:41:15.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.940" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.939" endtime="20201117 14:41:15.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.943" level="INFO">VALUE: [4.2430999999999025e-05, 4.244399999999912e-05, 4.19860000000008e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.19860000000008e-05, 4.2195000000001814e-05, 4.207000000000169e-05, 4.176399999999969e-05, 4.173600000000055e-05, 4.2180999999998775e-05, 4.2194999999998345e-05, 4.1930999999998525e-05, 4.208400000000126e-05, 4.1875000000000245e-05, 4.204199999999908e-05, 4.175000000000012e-05, 4.2195000000001814e-05, 4.1694999999997845e-05, 4.202799999999951e-05, 4.225000000000062e-05, 4.2166999999999205e-05, 4.1818999999998496e-05, 4.172200000000098e-05, 4.191599999999948e-05, 4.1861000000000675e-05, 4.173600000000055e-05, 4.176400000000316e-05, 4.1776999999999787e-05, 4.173599999999708e-05, 4.170800000000141e-05, 4.194399999999862e-05, 4.222200000000148e-05, 4.219399999999887e-05, 4.2139000000000065e-05, 4.194399999999862e-05, 4.177799999999926e-05, 4.223599999999758e-05, 4.1861000000000675e-05, 4.1930999999998525e-05, 4.202799999999951e-05, 4.2152999999999635e-05, 4.197200000000123e-05, 4.177799999999926e-05, 4.204199999999908e-05, 4.2111000000000925e-05, 4.1917000000002425e-05, 4.179199999999883e-05, 4.17920000000023e-05, 4.208399999999779e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.941" endtime="20201117 14:41:15.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.937" endtime="20201117 14:41:15.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.946" endtime="20201117 14:41:15.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.949" endtime="20201117 14:41:15.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.948" endtime="20201117 14:41:15.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.944" endtime="20201117 14:41:15.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.578" endtime="20201117 14:41:15.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.182" endtime="20201117 14:41:15.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.181" endtime="20201117 14:41:15.970"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.973" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.981" endtime="20201117 14:41:15.998"></status>
</kw>
<msg timestamp="20201117 14:41:15.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.980" endtime="20201117 14:41:15.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.000" endtime="20201117 14:41:16.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.002" endtime="20201117 14:41:16.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.977" endtime="20201117 14:41:16.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.975" endtime="20201117 14:41:16.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.011" endtime="20201117 14:41:16.294"></status>
</kw>
<msg timestamp="20201117 14:41:16.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024487889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.010" endtime="20201117 14:41:16.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024487889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.299" endtime="20201117 14:41:16.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.307" endtime="20201117 14:41:16.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.007" endtime="20201117 14:41:16.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.005" endtime="20201117 14:41:16.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.314" level="INFO">${RESULT} = [{'time': 0.024531278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3389000000001315e-05, 'source_diff': 4.3389000000001315e-05}, {'time': 0.024580125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:16.310" endtime="20201117 14:41:16.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.328" level="INFO">${ACCURACY} = {'source_diff': [4.3389000000001315e-05, 4.33059999999999e-05, 4.3082999999999316e-05, 4.3125000000001495e-05, 4.322199999999901e-05, 4.2874999999997776e-05, 4.283400000000201e-05, 4.2930999999999525e...</msg>
<status status="PASS" starttime="20201117 14:41:16.315" endtime="20201117 14:41:16.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.333" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.332" endtime="20201117 14:41:16.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.335" level="INFO">VALUE: [4.3389000000001315e-05, 4.33059999999999e-05, 4.3082999999999316e-05, 4.3125000000001495e-05, 4.322199999999901e-05, 4.2874999999997776e-05, 4.283400000000201e-05, 4.2930999999999525e-05, 4.276400000000069e-05, 4.273599999999808e-05, 4.2846999999998636e-05, 4.2959000000002134e-05, 4.2861000000001676e-05, 4.308399999999879e-05, 4.273599999999808e-05, 4.301399999999747e-05, 4.323600000000205e-05, 4.2931000000002995e-05, 4.326300000000172e-05, 4.31800000000003e-05, 4.277800000000026e-05, 4.324999999999815e-05, 4.294400000000309e-05, 4.3139000000001065e-05, 4.294399999999962e-05, 4.326299999999825e-05, 4.2791000000000357e-05, 4.2818999999999496e-05, 4.325000000000162e-05, 4.325000000000162e-05, 4.275000000000112e-05, 4.295799999999919e-05, 4.2875000000001245e-05, 4.294400000000309e-05, 4.319399999999987e-05, 4.3110999999998456e-05, 4.325000000000162e-05, 4.301399999999747e-05, 4.322200000000248e-05, 4.301400000000094e-05, 4.28059999999994e-05, 4.3152999999997166e-05, 4.3152999999997166e-05, 4.327800000000076e-05, 4.2861000000001676e-05, 4.305599999999965e-05, 4.2930999999999525e-05, 4.283399999999854e-05, 4.3195000000002814e-05, 4.308400000000226e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.334" endtime="20201117 14:41:16.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.329" endtime="20201117 14:41:16.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.338" endtime="20201117 14:41:16.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.342" endtime="20201117 14:41:16.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.340" endtime="20201117 14:41:16.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.336" endtime="20201117 14:41:16.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.973" endtime="20201117 14:41:16.363"></status>
</kw>
<msg timestamp="20201117 14:41:16.363" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.371" endtime="20201117 14:41:16.388"></status>
</kw>
<msg timestamp="20201117 14:41:16.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.370" endtime="20201117 14:41:16.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.389" endtime="20201117 14:41:16.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.392" endtime="20201117 14:41:16.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.367" endtime="20201117 14:41:16.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.365" endtime="20201117 14:41:16.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.402" endtime="20201117 14:41:16.687"></status>
</kw>
<msg timestamp="20201117 14:41:16.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.400" endtime="20201117 14:41:16.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.691" endtime="20201117 14:41:16.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.700" endtime="20201117 14:41:16.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.398" endtime="20201117 14:41:16.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.396" endtime="20201117 14:41:16.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.706" level="INFO">${RESULT} = [{'time': 0.022027014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.345799999999969e-05, 'source_diff': 4.345799999999969e-05}, {'time': 0.022075875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:16.703" endtime="20201117 14:41:16.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.720" level="INFO">${ACCURACY} = {'source_diff': [4.345799999999969e-05, 4.323599999999858e-05, 4.3167000000000205e-05, 4.276400000000069e-05, 4.297199999999876e-05, 4.276400000000069e-05, 4.2846999999998636e-05, 4.269399999999937e-0...</msg>
<status status="PASS" starttime="20201117 14:41:16.707" endtime="20201117 14:41:16.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.724" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.723" endtime="20201117 14:41:16.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.727" level="INFO">VALUE: [4.345799999999969e-05, 4.323599999999858e-05, 4.3167000000000205e-05, 4.276400000000069e-05, 4.297199999999876e-05, 4.276400000000069e-05, 4.2846999999998636e-05, 4.269399999999937e-05, 4.282000000000244e-05, 4.2832999999999066e-05, 4.298599999999833e-05, 4.274999999999765e-05, 4.301300000000147e-05, 4.29860000000018e-05, 4.300000000000137e-05, 4.3208999999998915e-05, 4.2472999999997735e-05, 4.319399999999987e-05, 4.302800000000051e-05, 4.275000000000112e-05, 4.3222999999998485e-05, 4.2888999999997346e-05, 4.2944999999999095e-05, 4.3318999999999996e-05, 4.294399999999962e-05, 4.277700000000079e-05, 4.302700000000104e-05, 4.3012999999998e-05, 4.281999999999897e-05, 4.3291000000000857e-05, 4.2639000000000565e-05, 4.2791000000000357e-05, 4.2860999999998206e-05, 4.2875000000001245e-05, 4.2833000000002536e-05, 4.3068999999999746e-05, 4.301400000000094e-05, 4.293000000000005e-05, 4.2846999999998636e-05, 4.2653000000000135e-05, 4.319399999999987e-05, 4.2944999999999095e-05, 4.275000000000112e-05, 4.2888999999997346e-05, 4.2903000000000385e-05, 4.326400000000119e-05, 4.28059999999994e-05, 4.297199999999876e-05, 4.2709000000001884e-05, 4.327700000000129e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.725" endtime="20201117 14:41:16.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.721" endtime="20201117 14:41:16.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.730" endtime="20201117 14:41:16.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.734" endtime="20201117 14:41:16.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.732" endtime="20201117 14:41:16.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.729" endtime="20201117 14:41:16.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.364" endtime="20201117 14:41:16.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.972" endtime="20201117 14:41:16.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.971" endtime="20201117 14:41:16.755"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.757" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.765" endtime="20201117 14:41:16.783"></status>
</kw>
<msg timestamp="20201117 14:41:16.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.764" endtime="20201117 14:41:16.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.784" endtime="20201117 14:41:16.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.787" endtime="20201117 14:41:16.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.761" endtime="20201117 14:41:16.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.759" endtime="20201117 14:41:16.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.796" endtime="20201117 14:41:17.082"></status>
</kw>
<msg timestamp="20201117 14:41:17.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024771278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:16.794" endtime="20201117 14:41:17.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024771278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02481575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:17.086" endtime="20201117 14:41:17.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.094" endtime="20201117 14:41:17.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.792" endtime="20201117 14:41:17.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.790" endtime="20201117 14:41:17.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.101" level="INFO">${RESULT} = [{'time': 0.02481575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.447200000000026e-05, 'source_diff': 4.447200000000026e-05}, {'time': 0.024865583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:17.097" endtime="20201117 14:41:17.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.116" level="INFO">${ACCURACY} = {'source_diff': [4.447200000000026e-05, 4.441599999999851e-05, 4.4124999999999026e-05, 4.397199999999976e-05, 4.38060000000004e-05, 4.422200000000001e-05, 4.4139000000002065e-05, 4.404199999999761e-05...</msg>
<status status="PASS" starttime="20201117 14:41:17.102" endtime="20201117 14:41:17.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.120" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.119" endtime="20201117 14:41:17.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.123" level="INFO">VALUE: [4.447200000000026e-05, 4.441599999999851e-05, 4.4124999999999026e-05, 4.397199999999976e-05, 4.38060000000004e-05, 4.422200000000001e-05, 4.4139000000002065e-05, 4.404199999999761e-05, 4.3888999999998346e-05, 4.41939999999974e-05, 4.398599999999933e-05, 4.4138999999998596e-05, 4.4110999999999456e-05, 4.4181000000000775e-05, 4.4124999999999026e-05, 4.405600000000065e-05, 4.3667000000000705e-05, 4.3888999999998346e-05, 4.423599999999958e-05, 4.4138999999998596e-05, 4.400000000000237e-05, 4.401399999999847e-05, 4.3972999999999235e-05, 4.4181000000000775e-05, 4.419400000000087e-05, 4.4055000000001177e-05, 4.409799999999936e-05, 4.388800000000234e-05, 4.426399999999872e-05, 4.398599999999933e-05, 4.402699999999857e-05, 4.4138999999998596e-05, 4.41800000000013e-05, 4.4069000000000746e-05, 4.424999999999915e-05, 4.401400000000194e-05, 4.423600000000305e-05, 4.402800000000151e-05, 4.3874999999998776e-05, 4.369400000000037e-05, 4.429200000000133e-05, 4.379199999999736e-05, 4.3846999999999636e-05, 4.377800000000126e-05, 4.402800000000151e-05, 4.401400000000194e-05, 4.429200000000133e-05, 4.3819000000000496e-05, 4.4181000000000775e-05, 4.4222999999999485e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.121" endtime="20201117 14:41:17.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.117" endtime="20201117 14:41:17.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.126" endtime="20201117 14:41:17.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.130" endtime="20201117 14:41:17.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.128" endtime="20201117 14:41:17.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.125" endtime="20201117 14:41:17.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.758" endtime="20201117 14:41:17.151"></status>
</kw>
<msg timestamp="20201117 14:41:17.151" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.159" endtime="20201117 14:41:17.175"></status>
</kw>
<msg timestamp="20201117 14:41:17.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.157" endtime="20201117 14:41:17.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.177" endtime="20201117 14:41:17.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.179" endtime="20201117 14:41:17.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.155" endtime="20201117 14:41:17.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.153" endtime="20201117 14:41:17.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.189" endtime="20201117 14:41:17.475"></status>
</kw>
<msg timestamp="20201117 14:41:17.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021534306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.188" endtime="20201117 14:41:17.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021534306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.479" endtime="20201117 14:41:17.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.487" endtime="20201117 14:41:17.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.185" endtime="20201117 14:41:17.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.183" endtime="20201117 14:41:17.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.494" level="INFO">${RESULT} = [{'time': 0.021534306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.477799999999879e-05, 'source_diff': 4.477799999999879e-05}, {'time': 0.021584125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:17.491" endtime="20201117 14:41:17.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.508" level="INFO">${ACCURACY} = {'source_diff': [4.477799999999879e-05, 4.422200000000001e-05, 4.4181000000000775e-05, 4.4195000000000345e-05, 4.420800000000044e-05, 4.379200000000083e-05, 4.4125000000002496e-05, 4.3917000000000955e...</msg>
<status status="PASS" starttime="20201117 14:41:17.495" endtime="20201117 14:41:17.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.512" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.511" endtime="20201117 14:41:17.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.515" level="INFO">VALUE: [4.477799999999879e-05, 4.422200000000001e-05, 4.4181000000000775e-05, 4.4195000000000345e-05, 4.420800000000044e-05, 4.379200000000083e-05, 4.4125000000002496e-05, 4.3917000000000955e-05, 4.427800000000176e-05, 4.4167000000001205e-05, 4.39999999999989e-05, 4.4195000000000345e-05, 4.390199999999844e-05, 4.3860999999999206e-05, 4.3874999999998776e-05, 4.4110999999999456e-05, 4.3874999999998776e-05, 4.4195000000000345e-05, 4.401400000000194e-05, 4.3889000000001815e-05, 4.41939999999974e-05, 4.405499999999771e-05, 4.3805000000000927e-05, 4.3833000000000066e-05, 4.4055000000001177e-05, 4.3889000000001815e-05, 4.426399999999872e-05, 4.41800000000013e-05, 4.4096999999999886e-05, 4.401400000000194e-05, 4.4167000000001205e-05, 4.427800000000176e-05, 4.4069000000000746e-05, 4.3860999999999206e-05, 4.424999999999915e-05, 4.38060000000004e-05, 4.408399999999979e-05, 4.38060000000004e-05, 4.372199999999951e-05, 4.4083000000000316e-05, 4.397199999999976e-05, 4.3694999999999845e-05, 4.404199999999761e-05, 4.3888999999998346e-05, 4.409799999999936e-05, 4.398599999999933e-05, 4.3917000000000955e-05, 4.376400000000169e-05, 4.379200000000083e-05, 4.3945000000000095e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.513" endtime="20201117 14:41:17.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.509" endtime="20201117 14:41:17.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.524" endtime="20201117 14:41:17.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.528" endtime="20201117 14:41:17.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.526" endtime="20201117 14:41:17.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.522" endtime="20201117 14:41:17.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.151" endtime="20201117 14:41:17.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.756" endtime="20201117 14:41:17.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.755" endtime="20201117 14:41:17.549"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.551" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.559" endtime="20201117 14:41:17.575"></status>
</kw>
<msg timestamp="20201117 14:41:17.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.558" endtime="20201117 14:41:17.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.576" endtime="20201117 14:41:17.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.579" endtime="20201117 14:41:17.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.555" endtime="20201117 14:41:17.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.553" endtime="20201117 14:41:17.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.588" endtime="20201117 14:41:17.873"></status>
</kw>
<msg timestamp="20201117 14:41:17.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.586" endtime="20201117 14:41:17.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.878" endtime="20201117 14:41:17.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.886" endtime="20201117 14:41:17.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.584" endtime="20201117 14:41:17.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.582" endtime="20201117 14:41:17.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.893" level="INFO">${RESULT} = [{'time': 0.024012778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.609699999999842e-05, 'source_diff': 4.609699999999842e-05}, {'time': 0.024063597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:17.889" endtime="20201117 14:41:17.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.906" level="INFO">${ACCURACY} = {'source_diff': [4.609699999999842e-05, 4.53329999999981e-05, 4.51800000000023e-05, 4.4889000000002816e-05, 4.523600000000058e-05, 4.520800000000144e-05, 4.506899999999828e-05, 4.4833000000001066e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:17.894" endtime="20201117 14:41:17.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.911" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.910" endtime="20201117 14:41:17.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.914" level="INFO">VALUE: [4.609699999999842e-05, 4.53329999999981e-05, 4.51800000000023e-05, 4.4889000000002816e-05, 4.523600000000058e-05, 4.520800000000144e-05, 4.506899999999828e-05, 4.4833000000001066e-05, 4.4903000000002385e-05, 4.506899999999828e-05, 4.476400000000269e-05, 4.502799999999904e-05, 4.5125000000000026e-05, 4.470800000000094e-05, 4.483399999999707e-05, 4.5111000000000456e-05, 4.476399999999922e-05, 4.472200000000051e-05, 4.4959000000000665e-05, 4.4930999999998056e-05, 4.480499999999846e-05, 4.4917000000001955e-05, 4.49999999999999e-05, 4.4888999999999346e-05, 4.526299999999678e-05, 4.4959000000000665e-05, 4.482000000000097e-05, 4.4709000000000415e-05, 4.481899999999803e-05, 4.4861000000000206e-05, 4.504199999999861e-05, 4.526300000000025e-05, 4.502799999999904e-05, 4.5083000000001316e-05, 4.49999999999999e-05, 4.4861000000000206e-05, 4.525000000000015e-05, 4.5138999999999596e-05, 4.494400000000162e-05, 4.497200000000076e-05, 4.480599999999793e-05, 4.4847000000000636e-05, 4.522199999999754e-05, 4.51939999999984e-05, 4.482000000000097e-05, 4.48329999999976e-05, 4.5083000000001316e-05, 4.525000000000015e-05, 4.497200000000076e-05, 4.477799999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.912" endtime="20201117 14:41:17.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.907" endtime="20201117 14:41:17.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.917" endtime="20201117 14:41:17.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.920" endtime="20201117 14:41:17.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.919" endtime="20201117 14:41:17.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.915" endtime="20201117 14:41:17.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.552" endtime="20201117 14:41:17.941"></status>
</kw>
<msg timestamp="20201117 14:41:17.941" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.949" endtime="20201117 14:41:17.966"></status>
</kw>
<msg timestamp="20201117 14:41:17.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.948" endtime="20201117 14:41:17.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.967" endtime="20201117 14:41:17.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.970" endtime="20201117 14:41:17.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.945" endtime="20201117 14:41:17.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.943" endtime="20201117 14:41:17.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.980" endtime="20201117 14:41:18.265"></status>
</kw>
<msg timestamp="20201117 14:41:18.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021531208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.978" endtime="20201117 14:41:18.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021531208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.269" endtime="20201117 14:41:18.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.277" endtime="20201117 14:41:18.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.976" endtime="20201117 14:41:18.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.974" endtime="20201117 14:41:18.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.284" level="INFO">${RESULT} = [{'time': 0.021531208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5625000000000526e-05, 'source_diff': 4.5625000000000526e-05}, {'time': 0.021582069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:18.281" endtime="20201117 14:41:18.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.298" level="INFO">${ACCURACY} = {'source_diff': [4.5625000000000526e-05, 4.516599999999926e-05, 4.504199999999861e-05, 4.526400000000319e-05, 4.505599999999818e-05, 4.526399999999972e-05, 4.488799999999987e-05, 4.470800000000094e-05...</msg>
<status status="PASS" starttime="20201117 14:41:18.285" endtime="20201117 14:41:18.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.303" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.302" endtime="20201117 14:41:18.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.305" level="INFO">VALUE: [4.5625000000000526e-05, 4.516599999999926e-05, 4.504199999999861e-05, 4.526400000000319e-05, 4.505599999999818e-05, 4.526399999999972e-05, 4.488799999999987e-05, 4.470800000000094e-05, 4.490199999999944e-05, 4.498600000000033e-05, 4.493000000000205e-05, 4.4861000000000206e-05, 4.474999999999965e-05, 4.469400000000137e-05, 4.523600000000058e-05, 4.526399999999972e-05, 4.5069000000001747e-05, 4.504199999999861e-05, 4.529200000000233e-05, 4.520799999999797e-05, 4.5097000000000886e-05, 4.532000000000147e-05, 4.4902999999998916e-05, 4.501399999999947e-05, 4.507000000000122e-05, 4.474999999999965e-05, 4.5111000000000456e-05, 4.4902999999998916e-05, 4.473600000000008e-05, 4.48060000000014e-05, 4.4916999999998486e-05, 4.53060000000019e-05, 4.463799999999962e-05, 4.473600000000008e-05, 4.4889000000002816e-05, 4.4959000000000665e-05, 4.49999999999999e-05, 4.4722999999999985e-05, 4.474999999999965e-05, 4.488799999999987e-05, 4.4833000000001066e-05, 4.490199999999944e-05, 4.495799999999772e-05, 4.479099999999889e-05, 4.482000000000097e-05, 4.51939999999984e-05, 4.525000000000015e-05, 4.505500000000218e-05, 4.4861000000000206e-05, 4.493000000000205e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.304" endtime="20201117 14:41:18.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.299" endtime="20201117 14:41:18.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.308" endtime="20201117 14:41:18.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.312" endtime="20201117 14:41:18.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.310" endtime="20201117 14:41:18.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.307" endtime="20201117 14:41:18.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.942" endtime="20201117 14:41:18.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.550" endtime="20201117 14:41:18.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.549" endtime="20201117 14:41:18.333"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.335" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.343" endtime="20201117 14:41:18.361"></status>
</kw>
<msg timestamp="20201117 14:41:18.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.342" endtime="20201117 14:41:18.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.362" endtime="20201117 14:41:18.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.365" endtime="20201117 14:41:18.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.339" endtime="20201117 14:41:18.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.337" endtime="20201117 14:41:18.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.374" endtime="20201117 14:41:18.659"></status>
</kw>
<msg timestamp="20201117 14:41:18.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025179458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025226556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.373" endtime="20201117 14:41:18.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025179458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025226556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.663" endtime="20201117 14:41:18.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.672" endtime="20201117 14:41:18.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.370" endtime="20201117 14:41:18.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.368" endtime="20201117 14:41:18.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.679" level="INFO">${RESULT} = [{'time': 0.025226556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709800000000236e-05, 'source_diff': 4.709800000000236e-05}, {'time': 0.025278389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:18.675" endtime="20201117 14:41:18.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.694" level="INFO">${ACCURACY} = {'source_diff': [4.709800000000236e-05, 4.629199999999986e-05, 4.6097000000001886e-05, 4.5889000000000346e-05, 4.58060000000024e-05, 4.5695000000001845e-05, 4.573599999999761e-05, 4.6111000000001456e-...</msg>
<status status="PASS" starttime="20201117 14:41:18.680" endtime="20201117 14:41:18.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.698" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.697" endtime="20201117 14:41:18.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.701" level="INFO">VALUE: [4.709800000000236e-05, 4.629199999999986e-05, 4.6097000000001886e-05, 4.5889000000000346e-05, 4.58060000000024e-05, 4.5695000000001845e-05, 4.573599999999761e-05, 4.6111000000001456e-05, 4.627800000000029e-05, 4.6180999999999306e-05, 4.616600000000026e-05, 4.608400000000179e-05, 4.602800000000004e-05, 4.624999999999768e-05, 4.591600000000001e-05, 4.592999999999958e-05, 4.624999999999768e-05, 4.620800000000244e-05, 4.602700000000057e-05, 4.574999999999718e-05, 4.616600000000026e-05, 4.598600000000133e-05, 4.612499999999756e-05, 4.56800000000028e-05, 4.604100000000014e-05, 4.5875000000000776e-05, 4.617999999999983e-05, 4.60000000000009e-05, 4.620799999999897e-05, 4.595800000000219e-05, 4.584799999999764e-05, 4.612499999999756e-05, 4.595800000000219e-05, 4.6166999999999736e-05, 4.580599999999893e-05, 4.579199999999936e-05, 4.579199999999936e-05, 4.6180999999999306e-05, 4.626400000000072e-05, 4.598600000000133e-05, 4.626399999999725e-05, 4.6125000000001026e-05, 4.586200000000068e-05, 4.573599999999761e-05, 4.575000000000065e-05, 4.583400000000154e-05, 4.612499999999756e-05, 4.590200000000044e-05, 4.577799999999979e-05, 4.609699999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.700" endtime="20201117 14:41:18.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.695" endtime="20201117 14:41:18.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.704" endtime="20201117 14:41:18.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.707" endtime="20201117 14:41:18.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.706" endtime="20201117 14:41:18.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.702" endtime="20201117 14:41:18.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.336" endtime="20201117 14:41:18.728"></status>
</kw>
<msg timestamp="20201117 14:41:18.728" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.736" endtime="20201117 14:41:18.753"></status>
</kw>
<msg timestamp="20201117 14:41:18.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.735" endtime="20201117 14:41:18.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.754" endtime="20201117 14:41:18.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.757" endtime="20201117 14:41:18.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.732" endtime="20201117 14:41:18.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.730" endtime="20201117 14:41:18.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.766" endtime="20201117 14:41:19.052"></status>
</kw>
<msg timestamp="20201117 14:41:19.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021474639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:18.765" endtime="20201117 14:41:19.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02142775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021474639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:19.056" endtime="20201117 14:41:19.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.065" endtime="20201117 14:41:19.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.762" endtime="20201117 14:41:19.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.761" endtime="20201117 14:41:19.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.072" level="INFO">${RESULT} = [{'time': 0.021474639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6889000000001346e-05, 'source_diff': 4.6889000000001346e-05}, {'time': 0.021526472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:19.068" endtime="20201117 14:41:19.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.085" level="INFO">${ACCURACY} = {'source_diff': [4.6889000000001346e-05, 4.6097000000001886e-05, 4.573600000000108e-05, 4.599999999999743e-05, 4.5917000000002955e-05, 4.580499999999946e-05, 4.6166999999999736e-05, 4.576400000000022e...</msg>
<status status="PASS" starttime="20201117 14:41:19.073" endtime="20201117 14:41:19.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.090" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.089" endtime="20201117 14:41:19.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.092" level="INFO">VALUE: [4.6889000000001346e-05, 4.6097000000001886e-05, 4.573600000000108e-05, 4.599999999999743e-05, 4.5917000000002955e-05, 4.580499999999946e-05, 4.6166999999999736e-05, 4.576400000000022e-05, 4.6166999999999736e-05, 4.579199999999936e-05, 4.6111000000001456e-05, 4.58329999999986e-05, 4.602800000000004e-05, 4.5945000000002095e-05, 4.5959000000001665e-05, 4.6222999999998016e-05, 4.6139000000000596e-05, 4.5916999999999486e-05, 4.626399999999725e-05, 4.5875000000000776e-05, 4.573599999999761e-05, 4.6208999999998446e-05, 4.630499999999996e-05, 4.608400000000179e-05, 4.583399999999807e-05, 4.598600000000133e-05, 4.570800000000194e-05, 4.623599999999811e-05, 4.599999999999743e-05, 4.617999999999983e-05, 4.597199999999829e-05, 4.612499999999756e-05, 4.601400000000047e-05, 4.575000000000065e-05, 4.593000000000305e-05, 4.6125000000001026e-05, 4.624999999999768e-05, 4.612499999999756e-05, 4.625000000000115e-05, 4.606899999999928e-05, 4.629199999999986e-05, 4.6153000000000166e-05, 4.584699999999817e-05, 4.5945000000002095e-05, 4.626400000000072e-05, 4.5736999999997086e-05, 4.6153000000000166e-05, 4.579199999999936e-05, 4.625000000000115e-05, 4.5902999999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.091" endtime="20201117 14:41:19.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.086" endtime="20201117 14:41:19.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.095" endtime="20201117 14:41:19.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.099" endtime="20201117 14:41:19.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.097" endtime="20201117 14:41:19.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.094" endtime="20201117 14:41:19.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.729" endtime="20201117 14:41:19.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.334" endtime="20201117 14:41:19.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.333" endtime="20201117 14:41:19.120"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.122" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.131" endtime="20201117 14:41:19.146"></status>
</kw>
<msg timestamp="20201117 14:41:19.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.129" endtime="20201117 14:41:19.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.147" endtime="20201117 14:41:19.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.150" endtime="20201117 14:41:19.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.126" endtime="20201117 14:41:19.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.124" endtime="20201117 14:41:19.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.160" endtime="20201117 14:41:19.446"></status>
</kw>
<msg timestamp="20201117 14:41:19.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023942167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023989806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.158" endtime="20201117 14:41:19.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023942167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023989806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.450" endtime="20201117 14:41:19.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.458" endtime="20201117 14:41:19.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.155" endtime="20201117 14:41:19.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.153" endtime="20201117 14:41:19.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.465" level="INFO">${RESULT} = [{'time': 0.023989806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.763899999999863e-05, 'source_diff': 4.763899999999863e-05}, {'time': 0.024042653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:19.461" endtime="20201117 14:41:19.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.479" level="INFO">${ACCURACY} = {'source_diff': [4.763899999999863e-05, 4.709699999999942e-05, 4.6889000000001346e-05, 4.7139000000001596e-05, 4.702800000000104e-05, 4.6972999999998766e-05, 4.70269999999981e-05, 4.687499999999831e-0...</msg>
<status status="PASS" starttime="20201117 14:41:19.466" endtime="20201117 14:41:19.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.483" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.482" endtime="20201117 14:41:19.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.486" level="INFO">VALUE: [4.763899999999863e-05, 4.709699999999942e-05, 4.6889000000001346e-05, 4.7139000000001596e-05, 4.702800000000104e-05, 4.6972999999998766e-05, 4.70269999999981e-05, 4.687499999999831e-05, 4.675000000000165e-05, 4.68199999999995e-05, 4.724999999999868e-05, 4.6944999999999626e-05, 4.706999999999975e-05, 4.676299999999828e-05, 4.690199999999797e-05, 4.677699999999785e-05, 4.708299999999985e-05, 4.705500000000071e-05, 4.723600000000258e-05, 4.676399999999775e-05, 4.687499999999831e-05, 4.706899999999681e-05, 4.725000000000215e-05, 4.686099999999874e-05, 4.697200000000276e-05, 4.677800000000079e-05, 4.697199999999929e-05, 4.672199999999904e-05, 4.730600000000043e-05, 4.7181000000000306e-05, 4.677800000000079e-05, 4.66939999999999e-05, 4.705600000000018e-05, 4.729200000000086e-05, 4.726399999999825e-05, 4.675000000000165e-05, 4.7194999999999876e-05, 4.723599999999911e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.723599999999911e-05, 4.724999999999868e-05, 4.676399999999775e-05, 4.720799999999997e-05, 4.706999999999975e-05, 4.679199999999689e-05, 4.70000000000019e-05, 4.727800000000129e-05, 4.697200000000276e-05, 4.729100000000139e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.484" endtime="20201117 14:41:19.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.480" endtime="20201117 14:41:19.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.489" endtime="20201117 14:41:19.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.492" endtime="20201117 14:41:19.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.491" endtime="20201117 14:41:19.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.487" endtime="20201117 14:41:19.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.123" endtime="20201117 14:41:19.513"></status>
</kw>
<msg timestamp="20201117 14:41:19.513" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.521" endtime="20201117 14:41:19.538"></status>
</kw>
<msg timestamp="20201117 14:41:19.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.520" endtime="20201117 14:41:19.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.540" endtime="20201117 14:41:19.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.543" endtime="20201117 14:41:19.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.517" endtime="20201117 14:41:19.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.515" endtime="20201117 14:41:19.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.553" endtime="20201117 14:41:19.838"></status>
</kw>
<msg timestamp="20201117 14:41:19.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.551" endtime="20201117 14:41:19.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.842" endtime="20201117 14:41:19.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.850" endtime="20201117 14:41:19.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.549" endtime="20201117 14:41:19.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.547" endtime="20201117 14:41:19.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.857" level="INFO">${RESULT} = [{'time': 0.021643931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.809800000000336e-05, 'source_diff': 4.809800000000336e-05}, {'time': 0.021696764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:19.853" endtime="20201117 14:41:19.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.870" level="INFO">${ACCURACY} = {'source_diff': [4.809800000000336e-05, 4.723599999999911e-05, 4.708299999999985e-05, 4.7181000000000306e-05, 4.6931000000000056e-05, 4.722199999999954e-05, 4.704200000000061e-05, 4.716599999999779e-0...</msg>
<status status="PASS" starttime="20201117 14:41:19.858" endtime="20201117 14:41:19.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.875" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.874" endtime="20201117 14:41:19.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.877" level="INFO">VALUE: [4.809800000000336e-05, 4.723599999999911e-05, 4.708299999999985e-05, 4.7181000000000306e-05, 4.6931000000000056e-05, 4.722199999999954e-05, 4.704200000000061e-05, 4.716599999999779e-05, 4.730600000000043e-05, 4.663899999999763e-05, 4.674999999999818e-05, 4.680599999999993e-05, 4.688899999999788e-05, 4.683399999999907e-05, 4.7194999999999876e-05, 4.691699999999702e-05, 4.681900000000003e-05, 4.674999999999818e-05, 4.704099999999767e-05, 4.697199999999929e-05, 4.716600000000126e-05, 4.694400000000015e-05, 4.723600000000258e-05, 4.679100000000089e-05, 4.729200000000086e-05, 4.7153000000001166e-05, 4.722199999999954e-05, 4.701400000000147e-05, 4.726399999999825e-05, 4.706900000000028e-05, 4.7181000000000306e-05, 4.7181000000000306e-05, 4.704200000000061e-05, 4.7167000000000736e-05, 4.723599999999911e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.672199999999904e-05, 4.687499999999831e-05, 4.688899999999788e-05, 4.693000000000058e-05, 4.702800000000104e-05, 4.683400000000254e-05, 4.701400000000147e-05, 4.680599999999993e-05, 4.726400000000172e-05, 4.679200000000036e-05, 4.706999999999975e-05, 4.720799999999997e-05, 4.729100000000139e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.876" endtime="20201117 14:41:19.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.871" endtime="20201117 14:41:19.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.881" endtime="20201117 14:41:19.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.884" endtime="20201117 14:41:19.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.883" endtime="20201117 14:41:19.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.879" endtime="20201117 14:41:19.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.514" endtime="20201117 14:41:19.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.121" endtime="20201117 14:41:19.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.120" endtime="20201117 14:41:19.905"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.907" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.916" endtime="20201117 14:41:19.933"></status>
</kw>
<msg timestamp="20201117 14:41:19.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.915" endtime="20201117 14:41:19.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.935" endtime="20201117 14:41:19.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.937" endtime="20201117 14:41:19.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.912" endtime="20201117 14:41:19.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.909" endtime="20201117 14:41:19.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.946" endtime="20201117 14:41:20.231"></status>
</kw>
<msg timestamp="20201117 14:41:20.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025291792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.945" endtime="20201117 14:41:20.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025291792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.235" endtime="20201117 14:41:20.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.243" endtime="20201117 14:41:20.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.942" endtime="20201117 14:41:20.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.941" endtime="20201117 14:41:20.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.250" level="INFO">${RESULT} = [{'time': 0.025291792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8473000000000266e-05, 'source_diff': 4.8473000000000266e-05}, {'time': 0.025345639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:20.247" endtime="20201117 14:41:20.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.265" level="INFO">${ACCURACY} = {'source_diff': [4.8473000000000266e-05, 4.847200000000079e-05, 4.811099999999999e-05, 4.784700000000017e-05, 4.779200000000136e-05, 4.777799999999832e-05, 4.798599999999986e-05, 4.804200000000161e-05...</msg>
<status status="PASS" starttime="20201117 14:41:20.251" endtime="20201117 14:41:20.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.270" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.269" endtime="20201117 14:41:20.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.272" level="INFO">VALUE: [4.8473000000000266e-05, 4.847200000000079e-05, 4.811099999999999e-05, 4.784700000000017e-05, 4.779200000000136e-05, 4.777799999999832e-05, 4.798599999999986e-05, 4.804200000000161e-05, 4.798599999999986e-05, 4.8195000000000876e-05, 4.7903000000001916e-05, 4.7917000000001486e-05, 4.7972999999999766e-05, 4.8209000000000446e-05, 4.8209000000000446e-05, 4.808400000000032e-05, 4.797200000000029e-05, 4.813899999999913e-05, 4.813899999999913e-05, 4.772200000000004e-05, 4.806899999999781e-05, 4.823600000000011e-05, 4.826399999999925e-05, 4.798599999999986e-05, 4.777799999999832e-05, 4.779199999999789e-05, 4.804200000000161e-05, 4.8167000000001736e-05, 4.812499999999956e-05, 4.790299999999845e-05, 4.786099999999974e-05, 4.779200000000136e-05, 4.811099999999999e-05, 4.784800000000311e-05, 4.790199999999897e-05, 4.822200000000054e-05, 4.7944999999997157e-05, 4.797200000000029e-05, 4.827799999999882e-05, 4.8223000000000016e-05, 4.7958999999996726e-05, 4.8013999999999e-05, 4.8013999999999e-05, 4.7959000000000196e-05, 4.78879999999994e-05, 4.829200000000186e-05, 4.795800000000072e-05, 4.773599999999961e-05, 4.781899999999756e-05, 4.7875000000002776e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.271" endtime="20201117 14:41:20.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.266" endtime="20201117 14:41:20.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.275" endtime="20201117 14:41:20.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.279" endtime="20201117 14:41:20.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.277" endtime="20201117 14:41:20.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.274" endtime="20201117 14:41:20.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.908" endtime="20201117 14:41:20.300"></status>
</kw>
<msg timestamp="20201117 14:41:20.300" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.308" endtime="20201117 14:41:20.325"></status>
</kw>
<msg timestamp="20201117 14:41:20.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.307" endtime="20201117 14:41:20.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.326" endtime="20201117 14:41:20.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.329" endtime="20201117 14:41:20.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.304" endtime="20201117 14:41:20.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.302" endtime="20201117 14:41:20.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.339" endtime="20201117 14:41:20.624"></status>
</kw>
<msg timestamp="20201117 14:41:20.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.337" endtime="20201117 14:41:20.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.628" endtime="20201117 14:41:20.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.637" endtime="20201117 14:41:20.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.335" endtime="20201117 14:41:20.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.333" endtime="20201117 14:41:20.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.643" level="INFO">${RESULT} = [{'time': 0.021977208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.898600000000086e-05, 'source_diff': 4.898600000000086e-05}, {'time': 0.022030111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.640" endtime="20201117 14:41:20.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.657" level="INFO">${ACCURACY} = {'source_diff': [4.898600000000086e-05, 4.7625000000002526e-05, 4.811099999999999e-05, 4.80000000000029e-05, 4.787499999999931e-05, 4.780500000000146e-05, 4.797200000000029e-05, 4.777700000000232e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:20.644" endtime="20201117 14:41:20.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.662" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.661" endtime="20201117 14:41:20.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.664" level="INFO">VALUE: [4.898600000000086e-05, 4.7625000000002526e-05, 4.811099999999999e-05, 4.80000000000029e-05, 4.787499999999931e-05, 4.780500000000146e-05, 4.797200000000029e-05, 4.777700000000232e-05, 4.829099999999892e-05, 4.822200000000054e-05, 4.823600000000011e-05, 4.775000000000265e-05, 4.780499999999799e-05, 4.777799999999832e-05, 4.824999999999968e-05, 4.820800000000097e-05, 4.7959000000000196e-05, 4.776399999999875e-05, 4.8153000000002166e-05, 4.786099999999974e-05, 4.802799999999857e-05, 4.809699999999695e-05, 4.795800000000072e-05, 4.799999999999943e-05, 4.8167000000001736e-05, 4.780600000000093e-05, 4.811099999999999e-05, 4.780600000000093e-05, 4.802799999999857e-05, 4.783400000000007e-05, 4.7945000000000626e-05, 4.826399999999925e-05, 4.806999999999728e-05, 4.790199999999897e-05, 4.788899999999888e-05, 4.8167000000001736e-05, 4.791599999999854e-05, 4.772200000000004e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.824999999999968e-05, 4.78330000000006e-05, 4.787499999999931e-05, 4.802799999999857e-05, 4.808300000000085e-05, 4.780500000000146e-05, 4.829200000000186e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.663" endtime="20201117 14:41:20.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.658" endtime="20201117 14:41:20.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.668" endtime="20201117 14:41:20.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.671" endtime="20201117 14:41:20.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.670" endtime="20201117 14:41:20.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.665" endtime="20201117 14:41:20.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.301" endtime="20201117 14:41:20.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.906" endtime="20201117 14:41:20.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.905" endtime="20201117 14:41:20.692"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.694" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.703" endtime="20201117 14:41:20.720"></status>
</kw>
<msg timestamp="20201117 14:41:20.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.701" endtime="20201117 14:41:20.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.721" endtime="20201117 14:41:20.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.724" endtime="20201117 14:41:20.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.699" endtime="20201117 14:41:20.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.696" endtime="20201117 14:41:20.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.733" endtime="20201117 14:41:21.017"></status>
</kw>
<msg timestamp="20201117 14:41:21.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02443025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:20.731" endtime="20201117 14:41:21.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02443025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:21.022" endtime="20201117 14:41:21.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.030" endtime="20201117 14:41:21.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.729" endtime="20201117 14:41:21.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.727" endtime="20201117 14:41:21.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.037" level="INFO">${RESULT} = [{'time': 0.02443025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972200000000204e-05, 'source_diff': 4.972200000000204e-05}, {'time': 0.024485083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:21.033" endtime="20201117 14:41:21.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.050" level="INFO">${ACCURACY} = {'source_diff': [4.972200000000204e-05, 4.941600000000004e-05, 4.886100000000074e-05, 4.923600000000111e-05, 4.873600000000061e-05, 4.922200000000154e-05, 4.888899999999988e-05, 4.926399999999678e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:21.037" endtime="20201117 14:41:21.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.055" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.054" endtime="20201117 14:41:21.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.057" level="INFO">VALUE: [4.972200000000204e-05, 4.941600000000004e-05, 4.886100000000074e-05, 4.923600000000111e-05, 4.873600000000061e-05, 4.922200000000154e-05, 4.888899999999988e-05, 4.926399999999678e-05, 4.911100000000099e-05, 4.913899999999666e-05, 4.904199999999914e-05, 4.899999999999696e-05, 4.926400000000025e-05, 4.895799999999825e-05, 4.877799999999932e-05, 4.88339999999976e-05, 4.8917000000002486e-05, 4.8972999999997296e-05, 4.872200000000104e-05, 4.927799999999982e-05, 4.908400000000132e-05, 4.881999999999803e-05, 4.88200000000015e-05, 4.879199999999889e-05, 4.894499999999816e-05, 4.88200000000015e-05, 4.917999999999936e-05, 4.905499999999924e-05, 4.881899999999856e-05, 4.898600000000086e-05, 4.890299999999945e-05, 4.900000000000043e-05, 4.888899999999988e-05, 4.895800000000172e-05, 4.879099999999942e-05, 4.904099999999967e-05, 4.870800000000147e-05, 4.881899999999856e-05, 4.898600000000086e-05, 4.911099999999752e-05, 4.897200000000129e-05, 4.924999999999721e-05, 4.926400000000025e-05, 4.906899999999881e-05, 4.886100000000074e-05, 4.934700000000167e-05, 4.920800000000197e-05, 4.909699999999795e-05, 4.925000000000068e-05, 4.931999999999853e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.056" endtime="20201117 14:41:21.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.051" endtime="20201117 14:41:21.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.061" endtime="20201117 14:41:21.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.064" endtime="20201117 14:41:21.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.063" endtime="20201117 14:41:21.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.059" endtime="20201117 14:41:21.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.695" endtime="20201117 14:41:21.085"></status>
</kw>
<msg timestamp="20201117 14:41:21.085" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.093" endtime="20201117 14:41:21.110"></status>
</kw>
<msg timestamp="20201117 14:41:21.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.092" endtime="20201117 14:41:21.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.112" endtime="20201117 14:41:21.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.114" endtime="20201117 14:41:21.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.089" endtime="20201117 14:41:21.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.087" endtime="20201117 14:41:21.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.124" endtime="20201117 14:41:21.410"></status>
</kw>
<msg timestamp="20201117 14:41:21.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.123" endtime="20201117 14:41:21.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.414" endtime="20201117 14:41:21.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.422" endtime="20201117 14:41:21.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.120" endtime="20201117 14:41:21.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.119" endtime="20201117 14:41:21.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.429" level="INFO">${RESULT} = [{'time': 0.021816569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.969399999999943e-05, 'source_diff': 4.969399999999943e-05}, {'time': 0.021871403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:21.426" endtime="20201117 14:41:21.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.443" level="INFO">${ACCURACY} = {'source_diff': [4.969399999999943e-05, 4.9320000000002e-05, 4.924999999999721e-05, 4.908400000000132e-05, 4.873600000000061e-05, 4.923600000000111e-05, 4.906999999999828e-05, 4.9209000000001446e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:21.430" endtime="20201117 14:41:21.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.447" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.446" endtime="20201117 14:41:21.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.450" level="INFO">VALUE: [4.969399999999943e-05, 4.9320000000002e-05, 4.924999999999721e-05, 4.908400000000132e-05, 4.873600000000061e-05, 4.923600000000111e-05, 4.906999999999828e-05, 4.9209000000001446e-05, 4.8959000000001196e-05, 4.904100000000314e-05, 4.884700000000117e-05, 4.876300000000028e-05, 4.893000000000258e-05, 4.873600000000061e-05, 4.925000000000068e-05, 4.890199999999997e-05, 4.879200000000236e-05, 4.916599999999979e-05, 4.8903000000002916e-05, 4.895800000000172e-05, 4.893099999999859e-05, 4.929199999999939e-05, 4.919399999999893e-05, 4.912500000000056e-05, 4.890299999999945e-05, 4.891699999999902e-05, 4.909699999999795e-05, 4.873600000000061e-05, 4.925000000000068e-05, 4.902799999999957e-05, 4.925000000000068e-05, 4.892999999999911e-05, 4.894499999999816e-05, 4.9181000000002306e-05, 4.881999999999803e-05, 4.88200000000015e-05, 4.8987000000000336e-05, 4.912499999999709e-05, 4.908400000000132e-05, 4.918099999999884e-05, 4.875000000000018e-05, 4.876399999999975e-05, 4.926400000000025e-05, 4.905499999999924e-05, 4.866600000000276e-05, 4.90270000000001e-05, 4.906900000000228e-05, 4.898600000000086e-05, 4.929099999999992e-05, 4.869399999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.448" endtime="20201117 14:41:21.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.444" endtime="20201117 14:41:21.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.453" endtime="20201117 14:41:21.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.457" endtime="20201117 14:41:21.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.455" endtime="20201117 14:41:21.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.452" endtime="20201117 14:41:21.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.086" endtime="20201117 14:41:21.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.693" endtime="20201117 14:41:21.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.692" endtime="20201117 14:41:21.478"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.480" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.488" endtime="20201117 14:41:21.506"></status>
</kw>
<msg timestamp="20201117 14:41:21.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.487" endtime="20201117 14:41:21.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.507" endtime="20201117 14:41:21.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.510" endtime="20201117 14:41:21.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.484" endtime="20201117 14:41:21.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.482" endtime="20201117 14:41:21.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.519" endtime="20201117 14:41:21.804"></status>
</kw>
<msg timestamp="20201117 14:41:21.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.517" endtime="20201117 14:41:21.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.808" endtime="20201117 14:41:21.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.816" endtime="20201117 14:41:21.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.515" endtime="20201117 14:41:21.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.513" endtime="20201117 14:41:21.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.823" level="INFO">${RESULT} = [{'time': 0.025115375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.065299999999773e-05, 'source_diff': 5.065299999999773e-05}, {'time': 0.025171208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:21.819" endtime="20201117 14:41:21.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.838" level="INFO">${ACCURACY} = {'source_diff': [5.065299999999773e-05, 5.037500000000181e-05, 5.023600000000211e-05, 5.0165999999997324e-05, 5.011099999999852e-05, 5.0014000000001e-05, 5.005500000000024e-05, 4.980599999999946e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:21.824" endtime="20201117 14:41:21.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.842" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.841" endtime="20201117 14:41:21.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.845" level="INFO">VALUE: [5.065299999999773e-05, 5.037500000000181e-05, 5.023600000000211e-05, 5.0165999999997324e-05, 5.011099999999852e-05, 5.0014000000001e-05, 5.005500000000024e-05, 4.980599999999946e-05, 4.993000000000011e-05, 4.98330000000026e-05, 4.990300000000045e-05, 5.012500000000156e-05, 5.025000000000168e-05, 4.975000000000118e-05, 4.997199999999882e-05, 4.990299999999698e-05, 5.011100000000199e-05, 4.991700000000002e-05, 4.980599999999946e-05, 5.008399999999885e-05, 5.01530000000007e-05, 5.019499999999941e-05, 4.986100000000174e-05, 5.023599999999864e-05, 5.013900000000113e-05, 4.987500000000131e-05, 5.024999999999821e-05, 5.0237000000001586e-05, 5.004200000000014e-05, 4.975000000000118e-05, 4.98469999999987e-05, 5.027700000000135e-05, 4.981899999999956e-05, 4.977699999999738e-05, 5.002800000000057e-05, 5.00270000000011e-05, 5.0320000000003e-05, 5.01530000000007e-05, 4.974999999999771e-05, 4.987500000000131e-05, 4.973600000000161e-05, 4.995799999999925e-05, 4.991700000000002e-05, 5.013899999999766e-05, 5.018099999999984e-05, 4.973600000000161e-05, 5.025000000000168e-05, 5.016700000000027e-05, 5.01530000000007e-05, 5.025000000000168e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.843" endtime="20201117 14:41:21.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.839" endtime="20201117 14:41:21.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.848" endtime="20201117 14:41:21.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.852" endtime="20201117 14:41:21.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.850" endtime="20201117 14:41:21.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.847" endtime="20201117 14:41:21.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.481" endtime="20201117 14:41:21.872"></status>
</kw>
<msg timestamp="20201117 14:41:21.873" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.881" endtime="20201117 14:41:21.897"></status>
</kw>
<msg timestamp="20201117 14:41:21.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.879" endtime="20201117 14:41:21.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.899" endtime="20201117 14:41:21.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.901" endtime="20201117 14:41:21.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.877" endtime="20201117 14:41:21.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.875" endtime="20201117 14:41:21.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.911" endtime="20201117 14:41:22.197"></status>
</kw>
<msg timestamp="20201117 14:41:22.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.910" endtime="20201117 14:41:22.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.201" endtime="20201117 14:41:22.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.209" endtime="20201117 14:41:22.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.907" endtime="20201117 14:41:22.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.905" endtime="20201117 14:41:22.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.216" level="INFO">${RESULT} = [{'time': 0.021591931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.054200000000064e-05, 'source_diff': 5.054200000000064e-05}, {'time': 0.021647708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.212" endtime="20201117 14:41:22.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.229" level="INFO">${ACCURACY} = {'source_diff': [5.054200000000064e-05, 5.027700000000135e-05, 4.984700000000217e-05, 4.994399999999968e-05, 4.981899999999956e-05, 4.986099999999827e-05, 4.981899999999956e-05, 5.026400000000125e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:22.217" endtime="20201117 14:41:22.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.234" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.233" endtime="20201117 14:41:22.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.237" level="INFO">VALUE: [5.054200000000064e-05, 5.027700000000135e-05, 4.984700000000217e-05, 4.994399999999968e-05, 4.981899999999956e-05, 4.986099999999827e-05, 4.981899999999956e-05, 5.026400000000125e-05, 4.990300000000045e-05, 5.008299999999938e-05, 5.013900000000113e-05, 4.977800000000032e-05, 5.009700000000242e-05, 4.981900000000303e-05, 5.002800000000057e-05, 5.011099999999852e-05, 4.997199999999882e-05, 4.977800000000032e-05, 5.012500000000156e-05, 4.9959000000002196e-05, 5.004100000000067e-05, 5.026400000000125e-05, 5.013899999999766e-05, 5.018099999999984e-05, 4.988900000000088e-05, 4.973600000000161e-05, 5.0222999999998547e-05, 4.994499999999916e-05, 5.006999999999928e-05, 4.980599999999946e-05, 4.991700000000002e-05, 5.0237000000001586e-05, 4.988900000000088e-05, 4.999999999999796e-05, 4.999999999999796e-05, 4.976400000000075e-05, 5.013900000000113e-05, 4.997200000000229e-05, 4.9707999999999e-05, 5.022199999999907e-05, 4.972199999999857e-05, 4.991700000000002e-05, 5.018000000000036e-05, 5.000000000000143e-05, 4.993099999999959e-05, 5.001399999999753e-05, 4.988899999999741e-05, 5.012500000000156e-05, 5.030500000000049e-05, 4.990300000000045e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.235" endtime="20201117 14:41:22.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.231" endtime="20201117 14:41:22.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.240" endtime="20201117 14:41:22.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.243" endtime="20201117 14:41:22.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.242" endtime="20201117 14:41:22.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.238" endtime="20201117 14:41:22.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.873" endtime="20201117 14:41:22.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.479" endtime="20201117 14:41:22.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.478" endtime="20201117 14:41:22.264"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.267" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.275" endtime="20201117 14:41:22.291"></status>
</kw>
<msg timestamp="20201117 14:41:22.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.273" endtime="20201117 14:41:22.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.293" endtime="20201117 14:41:22.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.295" endtime="20201117 14:41:22.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.271" endtime="20201117 14:41:22.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.269" endtime="20201117 14:41:22.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.304" endtime="20201117 14:41:22.590"></status>
</kw>
<msg timestamp="20201117 14:41:22.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023872861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.303" endtime="20201117 14:41:22.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023872861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023924806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.594" endtime="20201117 14:41:22.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.602" endtime="20201117 14:41:22.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.300" endtime="20201117 14:41:22.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.298" endtime="20201117 14:41:22.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.613" level="INFO">${RESULT} = [{'time': 0.023924806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194500000000116e-05, 'source_diff': 5.194500000000116e-05}, {'time': 0.023981611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.610" endtime="20201117 14:41:22.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.627" level="INFO">${ACCURACY} = {'source_diff': [5.194500000000116e-05, 5.105500000000124e-05, 5.099999999999896e-05, 5.106900000000081e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.084700000000317e-05, 5.124999999999921e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:22.614" endtime="20201117 14:41:22.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.631" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.630" endtime="20201117 14:41:22.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.634" level="INFO">VALUE: [5.194500000000116e-05, 5.105500000000124e-05, 5.099999999999896e-05, 5.106900000000081e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.084700000000317e-05, 5.124999999999921e-05, 5.093100000000059e-05, 5.094500000000016e-05, 5.120899999999998e-05, 5.077800000000132e-05, 5.120899999999998e-05, 5.079200000000089e-05, 5.090300000000145e-05, 5.116700000000127e-05, 5.087500000000231e-05, 5.107000000000028e-05, 5.111199999999899e-05, 5.088899999999841e-05, 5.077699999999838e-05, 5.08469999999997e-05, 5.0888000000002404e-05, 5.116600000000179e-05, 5.126399999999878e-05, 5.0708e-05, 5.124999999999921e-05, 5.105499999999777e-05, 5.108300000000038e-05, 5.102800000000157e-05, 5.097199999999982e-05, 5.079200000000089e-05, 5.091700000000102e-05, 5.119500000000041e-05, 5.106899999999734e-05, 5.105600000000071e-05, 5.090299999999798e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.077800000000132e-05, 5.090300000000145e-05, 5.086099999999927e-05, 5.083400000000307e-05, 5.111100000000299e-05, 5.091699999999755e-05, 5.095899999999973e-05, 5.107000000000028e-05, 5.13470000000002e-05, 5.129199999999792e-05, 5.098599999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.632" endtime="20201117 14:41:22.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.628" endtime="20201117 14:41:22.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.637" endtime="20201117 14:41:22.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.640" endtime="20201117 14:41:22.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.639" endtime="20201117 14:41:22.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.635" endtime="20201117 14:41:22.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.267" endtime="20201117 14:41:22.661"></status>
</kw>
<msg timestamp="20201117 14:41:22.661" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.670" endtime="20201117 14:41:22.686"></status>
</kw>
<msg timestamp="20201117 14:41:22.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.668" endtime="20201117 14:41:22.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.688" endtime="20201117 14:41:22.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.690" endtime="20201117 14:41:22.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.665" endtime="20201117 14:41:22.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.663" endtime="20201117 14:41:22.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.700" endtime="20201117 14:41:22.985"></status>
</kw>
<msg timestamp="20201117 14:41:22.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.699" endtime="20201117 14:41:22.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.989" endtime="20201117 14:41:22.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.998" endtime="20201117 14:41:23.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.696" endtime="20201117 14:41:23.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.694" endtime="20201117 14:41:23.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.005" level="INFO">${RESULT} = [{'time': 0.021539069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.179100000000242e-05, 'source_diff': 5.179100000000242e-05}, {'time': 0.021595903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.002" endtime="20201117 14:41:23.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.018" level="INFO">${ACCURACY} = {'source_diff': [5.179100000000242e-05, 5.140299999999848e-05, 5.074999999999871e-05, 5.104200000000114e-05, 5.091700000000102e-05, 5.072199999999957e-05, 5.130600000000096e-05, 5.122299999999955e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:23.006" endtime="20201117 14:41:23.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.023" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.022" endtime="20201117 14:41:23.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.025" level="INFO">VALUE: [5.179100000000242e-05, 5.140299999999848e-05, 5.074999999999871e-05, 5.104200000000114e-05, 5.091700000000102e-05, 5.072199999999957e-05, 5.130600000000096e-05, 5.122299999999955e-05, 5.08339999999996e-05, 5.082000000000003e-05, 5.109799999999942e-05, 5.083300000000013e-05, 5.093000000000111e-05, 5.122200000000007e-05, 5.112499999999909e-05, 5.086099999999927e-05, 5.10409999999982e-05, 5.109699999999995e-05, 5.1193999999997464e-05, 5.102800000000157e-05, 5.074999999999871e-05, 5.090300000000145e-05, 5.091700000000102e-05, 5.098600000000286e-05, 5.091700000000102e-05, 5.0693999999996964e-05, 5.113899999999866e-05, 5.126399999999878e-05, 5.107000000000028e-05, 5.130600000000096e-05, 5.108300000000038e-05, 5.122299999999955e-05, 5.095899999999973e-05, 5.073600000000261e-05, 5.113899999999866e-05, 5.122299999999955e-05, 5.127799999999835e-05, 5.086099999999927e-05, 5.0986999999998867e-05, 5.080600000000046e-05, 5.124999999999921e-05, 5.1138000000002654e-05, 5.11530000000017e-05, 5.109699999999995e-05, 5.080499999999752e-05, 5.1179999999997894e-05, 5.076399999999828e-05, 5.08469999999997e-05, 5.086099999999927e-05, 5.080500000000099e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.024" endtime="20201117 14:41:23.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.019" endtime="20201117 14:41:23.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.029" endtime="20201117 14:41:23.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.032" endtime="20201117 14:41:23.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.031" endtime="20201117 14:41:23.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.027" endtime="20201117 14:41:23.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.662" endtime="20201117 14:41:23.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.266" endtime="20201117 14:41:23.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.265" endtime="20201117 14:41:23.053"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.056" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.064" endtime="20201117 14:41:23.081"></status>
</kw>
<msg timestamp="20201117 14:41:23.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.062" endtime="20201117 14:41:23.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.082" endtime="20201117 14:41:23.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.085" endtime="20201117 14:41:23.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.060" endtime="20201117 14:41:23.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.058" endtime="20201117 14:41:23.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.094" endtime="20201117 14:41:23.379"></status>
</kw>
<msg timestamp="20201117 14:41:23.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024763139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024816167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.093" endtime="20201117 14:41:23.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024763139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024816167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.383" endtime="20201117 14:41:23.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.391" endtime="20201117 14:41:23.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.090" endtime="20201117 14:41:23.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.088" endtime="20201117 14:41:23.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.398" level="INFO">${RESULT} = [{'time': 0.024816167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.30280000000001e-05, 'source_diff': 5.30280000000001e-05}, {'time': 0.024874, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5....</msg>
<status status="PASS" starttime="20201117 14:41:23.395" endtime="20201117 14:41:23.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.413" level="INFO">${ACCURACY} = {'source_diff': [5.30280000000001e-05, 5.22080000000015e-05, 5.190300000000245e-05, 5.229199999999892e-05, 5.191699999999855e-05, 5.222300000000055e-05, 5.21669999999988e-05, 5.193100000000159e-05, 5....</msg>
<status status="PASS" starttime="20201117 14:41:23.399" endtime="20201117 14:41:23.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.418" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.417" endtime="20201117 14:41:23.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.421" level="INFO">VALUE: [5.30280000000001e-05, 5.22080000000015e-05, 5.190300000000245e-05, 5.229199999999892e-05, 5.191699999999855e-05, 5.222300000000055e-05, 5.21669999999988e-05, 5.193100000000159e-05, 5.187499999999984e-05, 5.223600000000064e-05, 5.226399999999978e-05, 5.209800000000042e-05, 5.198600000000039e-05, 5.2207999999998034e-05, 5.219500000000141e-05, 5.181899999999809e-05, 5.1901999999999504e-05, 5.2207999999998034e-05, 5.181899999999809e-05, 5.197200000000082e-05, 5.191699999999855e-05, 5.180499999999852e-05, 5.202800000000257e-05, 5.1915999999999074e-05, 5.219400000000193e-05, 5.1957999999997784e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.206899999999834e-05, 5.1708000000001e-05, 5.207000000000128e-05, 5.2207999999998034e-05, 5.21530000000027e-05, 5.220899999999751e-05, 5.174999999999971e-05, 5.226399999999978e-05, 5.187499999999984e-05, 5.176399999999928e-05, 5.181999999999756e-05, 5.226399999999978e-05, 5.215299999999923e-05, 5.188899999999941e-05, 5.222200000000107e-05, 5.219499999999794e-05, 5.199999999999996e-05, 5.212500000000009e-05, 5.181900000000156e-05, 5.198600000000039e-05, 5.226399999999978e-05, 5.199999999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.419" endtime="20201117 14:41:23.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.414" endtime="20201117 14:41:23.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.424" endtime="20201117 14:41:23.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.428" endtime="20201117 14:41:23.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.426" endtime="20201117 14:41:23.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.422" endtime="20201117 14:41:23.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.056" endtime="20201117 14:41:23.449"></status>
</kw>
<msg timestamp="20201117 14:41:23.449" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.457" endtime="20201117 14:41:23.473"></status>
</kw>
<msg timestamp="20201117 14:41:23.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.456" endtime="20201117 14:41:23.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.475" endtime="20201117 14:41:23.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.478" endtime="20201117 14:41:23.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.453" endtime="20201117 14:41:23.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.451" endtime="20201117 14:41:23.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.488" endtime="20201117 14:41:23.774"></status>
</kw>
<msg timestamp="20201117 14:41:23.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.486" endtime="20201117 14:41:23.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.778" endtime="20201117 14:41:23.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.786" endtime="20201117 14:41:23.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.484" endtime="20201117 14:41:23.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.482" endtime="20201117 14:41:23.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.793" level="INFO">${RESULT} = [{'time': 0.021930375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.234699999999773e-05, 'source_diff': 5.234699999999773e-05}, {'time': 0.021987222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.789" endtime="20201117 14:41:23.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.806" level="INFO">${ACCURACY} = {'source_diff': [5.234699999999773e-05, 5.158300000000088e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.195900000000073e-05, 5.21669999999988e-05, 5.199999999999996e-05, 5.227799999999935e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:23.794" endtime="20201117 14:41:23.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.811" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.810" endtime="20201117 14:41:23.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.813" level="INFO">VALUE: [5.234699999999773e-05, 5.158300000000088e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.195900000000073e-05, 5.21669999999988e-05, 5.199999999999996e-05, 5.227799999999935e-05, 5.21669999999988e-05, 5.199999999999996e-05, 5.205599999999824e-05, 5.194500000000116e-05, 5.172200000000057e-05, 5.20279999999991e-05, 5.176400000000275e-05, 5.194500000000116e-05, 5.174999999999971e-05, 5.179199999999842e-05, 5.20279999999991e-05, 5.223600000000064e-05, 5.184800000000017e-05, 5.220900000000098e-05, 5.1915999999999074e-05, 5.225000000000021e-05, 5.20409999999992e-05, 5.2221999999997604e-05, 5.186100000000027e-05, 5.1915999999999074e-05, 5.211100000000052e-05, 5.179100000000242e-05, 5.1901999999999504e-05, 5.213899999999966e-05, 5.202800000000257e-05, 5.177799999999885e-05, 5.186100000000027e-05, 5.201399999999953e-05, 5.213899999999966e-05, 5.174999999999971e-05, 5.206900000000181e-05, 5.218100000000184e-05, 5.209700000000095e-05, 5.222200000000107e-05, 5.2249999999996743e-05, 5.18470000000007e-05, 5.2014000000003e-05, 5.1971999999997354e-05, 5.182000000000103e-05, 5.208400000000085e-05, 5.186100000000027e-05, 5.19730000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.812" endtime="20201117 14:41:23.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.807" endtime="20201117 14:41:23.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.816" endtime="20201117 14:41:23.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.820" endtime="20201117 14:41:23.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.818" endtime="20201117 14:41:23.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.815" endtime="20201117 14:41:23.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.450" endtime="20201117 14:41:23.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.054" endtime="20201117 14:41:23.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.054" endtime="20201117 14:41:23.841"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.843" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.852" endtime="20201117 14:41:23.869"></status>
</kw>
<msg timestamp="20201117 14:41:23.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.850" endtime="20201117 14:41:23.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.870" endtime="20201117 14:41:23.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.873" endtime="20201117 14:41:23.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.847" endtime="20201117 14:41:23.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.845" endtime="20201117 14:41:23.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.882" endtime="20201117 14:41:24.168"></status>
</kw>
<msg timestamp="20201117 14:41:24.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.880" endtime="20201117 14:41:24.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024315736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.172" endtime="20201117 14:41:24.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.180" endtime="20201117 14:41:24.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.877" endtime="20201117 14:41:24.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.876" endtime="20201117 14:41:24.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.187" level="INFO">${RESULT} = [{'time': 0.024369806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.406999999999981e-05, 'source_diff': 5.406999999999981e-05}, {'time': 0.024428611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:24.183" endtime="20201117 14:41:24.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.200" level="INFO">${ACCURACY} = {'source_diff': [5.406999999999981e-05, 5.313900000000066e-05, 5.2999999999997494e-05, 5.308299999999891e-05, 5.312500000000109e-05, 5.329199999999992e-05, 5.295800000000225e-05, 5.312499999999762e-05...</msg>
<status status="PASS" starttime="20201117 14:41:24.188" endtime="20201117 14:41:24.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.205" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.204" endtime="20201117 14:41:24.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.207" level="INFO">VALUE: [5.406999999999981e-05, 5.313900000000066e-05, 5.2999999999997494e-05, 5.308299999999891e-05, 5.312500000000109e-05, 5.329199999999992e-05, 5.295800000000225e-05, 5.312499999999762e-05, 5.332000000000253e-05, 5.29730000000013e-05, 5.308399999999838e-05, 5.304199999999967e-05, 5.300000000000096e-05, 5.309800000000142e-05, 5.319499999999894e-05, 5.327800000000035e-05, 5.284800000000117e-05, 5.309699999999848e-05, 5.320900000000198e-05, 5.286200000000074e-05, 5.306900000000281e-05, 5.281899999999909e-05, 5.326400000000078e-05, 5.3152000000000754e-05, 5.276400000000028e-05, 5.312500000000109e-05, 5.290299999999998e-05, 5.311099999999805e-05, 5.30280000000001e-05, 5.283299999999866e-05, 5.31669999999998e-05, 5.327800000000035e-05, 5.2929999999999644e-05, 5.2985999999997924e-05, 5.294400000000268e-05, 5.30410000000002e-05, 5.28609999999978e-05, 5.315300000000023e-05, 5.290299999999998e-05, 5.2721999999998104e-05, 5.302799999999663e-05, 5.286100000000127e-05, 5.2999999999997494e-05, 5.2999999999997494e-05, 5.287500000000084e-05, 5.280599999999899e-05, 5.297299999999783e-05, 5.293100000000259e-05, 5.29730000000013e-05, 5.3179999999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.206" endtime="20201117 14:41:24.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.201" endtime="20201117 14:41:24.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.210" endtime="20201117 14:41:24.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.214" endtime="20201117 14:41:24.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.212" endtime="20201117 14:41:24.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.209" endtime="20201117 14:41:24.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.844" endtime="20201117 14:41:24.235"></status>
</kw>
<msg timestamp="20201117 14:41:24.235" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.243" endtime="20201117 14:41:24.260"></status>
</kw>
<msg timestamp="20201117 14:41:24.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.242" endtime="20201117 14:41:24.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.261" endtime="20201117 14:41:24.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.264" endtime="20201117 14:41:24.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.239" endtime="20201117 14:41:24.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.237" endtime="20201117 14:41:24.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.274" endtime="20201117 14:41:24.560"></status>
</kw>
<msg timestamp="20201117 14:41:24.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.272" endtime="20201117 14:41:24.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.564" endtime="20201117 14:41:24.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.572" endtime="20201117 14:41:24.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.270" endtime="20201117 14:41:24.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.268" endtime="20201117 14:41:24.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.579" level="INFO">${RESULT} = [{'time': 0.021976806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000000171e-05, 'source_diff': 5.375000000000171e-05}, {'time': 0.022035639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:24.575" endtime="20201117 14:41:24.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.592" level="INFO">${ACCURACY} = {'source_diff': [5.375000000000171e-05, 5.309699999999848e-05, 5.288900000000041e-05, 5.319499999999894e-05, 5.3235999999998174e-05, 5.270899999999801e-05, 5.282000000000203e-05, 5.304199999999967e-05...</msg>
<status status="PASS" starttime="20201117 14:41:24.580" endtime="20201117 14:41:24.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.597" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.596" endtime="20201117 14:41:24.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.599" level="INFO">VALUE: [5.375000000000171e-05, 5.309699999999848e-05, 5.288900000000041e-05, 5.319499999999894e-05, 5.3235999999998174e-05, 5.270899999999801e-05, 5.282000000000203e-05, 5.304199999999967e-05, 5.3013999999997063e-05, 5.287500000000084e-05, 5.29730000000013e-05, 5.270899999999801e-05, 5.281899999999909e-05, 5.2943999999999214e-05, 5.2638000000000684e-05, 5.273600000000114e-05, 5.2902000000000504e-05, 5.2943999999999214e-05, 5.2901999999997035e-05, 5.298600000000139e-05, 5.290299999999998e-05, 5.3013999999997063e-05, 5.2929999999999644e-05, 5.279199999999942e-05, 5.30280000000001e-05, 5.313900000000066e-05, 5.318099999999937e-05, 5.28609999999978e-05, 5.300000000000096e-05, 5.326400000000078e-05, 5.287499999999737e-05, 5.326400000000078e-05, 5.30280000000001e-05, 5.301300000000106e-05, 5.307000000000228e-05, 5.295900000000173e-05, 5.287499999999737e-05, 5.300000000000096e-05, 5.306999999999881e-05, 5.3221999999998604e-05, 5.326400000000078e-05, 5.3179999999999894e-05, 5.3221999999998604e-05, 5.305499999999977e-05, 5.276300000000081e-05, 5.2971999999998354e-05, 5.306899999999934e-05, 5.323600000000164e-05, 5.327800000000035e-05, 5.2999999999997494e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.598" endtime="20201117 14:41:24.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.593" endtime="20201117 14:41:24.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.603" endtime="20201117 14:41:24.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.606" endtime="20201117 14:41:24.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.605" endtime="20201117 14:41:24.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.601" endtime="20201117 14:41:24.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.236" endtime="20201117 14:41:24.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.842" endtime="20201117 14:41:24.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.841" endtime="20201117 14:41:24.628"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.630" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.638" endtime="20201117 14:41:24.656"></status>
</kw>
<msg timestamp="20201117 14:41:24.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.637" endtime="20201117 14:41:24.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.658" endtime="20201117 14:41:24.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.660" endtime="20201117 14:41:24.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.634" endtime="20201117 14:41:24.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.632" endtime="20201117 14:41:24.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.669" endtime="20201117 14:41:24.955"></status>
</kw>
<msg timestamp="20201117 14:41:24.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025180153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025234875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.668" endtime="20201117 14:41:24.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025180153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025234875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.959" endtime="20201117 14:41:24.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.967" endtime="20201117 14:41:24.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.665" endtime="20201117 14:41:24.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.663" endtime="20201117 14:41:24.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.974" level="INFO">${RESULT} = [{'time': 0.025234875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4722000000000104e-05, 'source_diff': 5.4722000000000104e-05}, {'time': 0.025294722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:24.971" endtime="20201117 14:41:24.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.989" level="INFO">${ACCURACY} = {'source_diff': [5.4722000000000104e-05, 5.415299999999776e-05, 5.398600000000239e-05, 5.4208000000000034e-05, 5.3777999999997383e-05, 5.406899999999687e-05, 5.4013999999998064e-05, 5.384699999999923e...</msg>
<status status="PASS" starttime="20201117 14:41:24.975" endtime="20201117 14:41:24.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.994" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.993" endtime="20201117 14:41:24.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.996" level="INFO">VALUE: [5.4722000000000104e-05, 5.415299999999776e-05, 5.398600000000239e-05, 5.4208000000000034e-05, 5.3777999999997383e-05, 5.406899999999687e-05, 5.4013999999998064e-05, 5.384699999999923e-05, 5.3708000000003e-05, 5.376400000000128e-05, 5.413900000000166e-05, 5.383299999999966e-05, 5.394499999999969e-05, 5.427800000000135e-05, 5.40280000000011e-05, 5.380599999999999e-05, 5.405600000000024e-05, 5.429200000000092e-05, 5.381999999999956e-05, 5.427800000000135e-05, 5.381999999999956e-05, 5.423699999999865e-05, 5.415299999999776e-05, 5.394499999999969e-05, 5.3888000000001934e-05, 5.4221999999999604e-05, 5.4166000000001324e-05, 5.380500000000052e-05, 5.40410000000012e-05, 5.415299999999776e-05, 5.3985999999998924e-05, 5.405600000000024e-05, 5.426400000000178e-05, 5.4249999999998744e-05, 5.377800000000085e-05, 5.3707999999999534e-05, 5.415299999999776e-05, 5.430600000000049e-05, 5.4194000000000464e-05, 5.379200000000042e-05, 5.4027999999997633e-05, 5.413900000000166e-05, 5.3957999999999784e-05, 5.388899999999794e-05, 5.412500000000209e-05, 5.408400000000285e-05, 5.373600000000214e-05, 5.383299999999966e-05, 5.401400000000153e-05, 5.390300000000098e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.995" endtime="20201117 14:41:24.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.990" endtime="20201117 14:41:24.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.000" endtime="20201117 14:41:25.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.003" endtime="20201117 14:41:25.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.002" endtime="20201117 14:41:25.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.998" endtime="20201117 14:41:25.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.631" endtime="20201117 14:41:25.024"></status>
</kw>
<msg timestamp="20201117 14:41:25.024" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.032" endtime="20201117 14:41:25.049"></status>
</kw>
<msg timestamp="20201117 14:41:25.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.031" endtime="20201117 14:41:25.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.050" endtime="20201117 14:41:25.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.053" endtime="20201117 14:41:25.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.028" endtime="20201117 14:41:25.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.026" endtime="20201117 14:41:25.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.063" endtime="20201117 14:41:25.349"></status>
</kw>
<msg timestamp="20201117 14:41:25.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.061" endtime="20201117 14:41:25.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.353" endtime="20201117 14:41:25.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.361" endtime="20201117 14:41:25.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.059" endtime="20201117 14:41:25.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.057" endtime="20201117 14:41:25.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.368" level="INFO">${RESULT} = [{'time': 0.021533903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.507000000000081e-05, 'source_diff': 5.507000000000081e-05}, {'time': 0.02159375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:25.364" endtime="20201117 14:41:25.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.381" level="INFO">${ACCURACY} = {'source_diff': [5.507000000000081e-05, 5.4027999999997633e-05, 5.3971999999999354e-05, 5.413900000000166e-05, 5.419499999999994e-05, 5.430500000000102e-05, 5.373600000000214e-05, 5.423600000000264e-0...</msg>
<status status="PASS" starttime="20201117 14:41:25.369" endtime="20201117 14:41:25.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.386" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.385" endtime="20201117 14:41:25.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.388" level="INFO">VALUE: [5.507000000000081e-05, 5.4027999999997633e-05, 5.3971999999999354e-05, 5.413900000000166e-05, 5.419499999999994e-05, 5.430500000000102e-05, 5.373600000000214e-05, 5.423600000000264e-05, 5.386100000000227e-05, 5.395899999999926e-05, 5.40280000000011e-05, 5.427800000000135e-05, 5.398600000000239e-05, 5.419499999999994e-05, 5.434699999999973e-05, 5.398700000000187e-05, 5.380599999999999e-05, 5.425000000000221e-05, 5.383299999999966e-05, 5.384699999999923e-05, 5.3902000000001504e-05, 5.3957999999999784e-05, 5.411099999999905e-05, 5.413900000000166e-05, 5.3916000000001074e-05, 5.3916000000001074e-05, 5.377800000000085e-05, 5.3985999999998924e-05, 5.40419999999972e-05, 5.4208000000000034e-05, 5.379200000000042e-05, 5.4277999999997883e-05, 5.423600000000264e-05, 5.4291999999997453e-05, 5.408299999999991e-05, 5.416699999999733e-05, 5.386100000000227e-05, 5.409699999999948e-05, 5.400000000000196e-05, 5.38340000000026e-05, 5.425000000000221e-05, 5.382000000000303e-05, 5.409800000000242e-05, 5.427800000000135e-05, 5.402700000000163e-05, 5.423700000000212e-05, 5.4194000000000464e-05, 5.398600000000239e-05, 5.383300000000313e-05, 5.376300000000181e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.387" endtime="20201117 14:41:25.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.382" endtime="20201117 14:41:25.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.392" endtime="20201117 14:41:25.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.395" endtime="20201117 14:41:25.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.394" endtime="20201117 14:41:25.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.390" endtime="20201117 14:41:25.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.025" endtime="20201117 14:41:25.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.629" endtime="20201117 14:41:25.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.628" endtime="20201117 14:41:25.416"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.419" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.427" endtime="20201117 14:41:25.443"></status>
</kw>
<msg timestamp="20201117 14:41:25.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.425" endtime="20201117 14:41:25.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.445" endtime="20201117 14:41:25.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.448" endtime="20201117 14:41:25.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.423" endtime="20201117 14:41:25.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.421" endtime="20201117 14:41:25.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.458" endtime="20201117 14:41:25.743"></status>
</kw>
<msg timestamp="20201117 14:41:25.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023938944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.456" endtime="20201117 14:41:25.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023938944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.748" endtime="20201117 14:41:25.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.756" endtime="20201117 14:41:25.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.453" endtime="20201117 14:41:25.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.451" endtime="20201117 14:41:25.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.763" level="INFO">${RESULT} = [{'time': 0.023994903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.595900000000126e-05, 'source_diff': 5.595900000000126e-05}, {'time': 0.02405575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:25.759" endtime="20201117 14:41:25.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.776" level="INFO">${ACCURACY} = {'source_diff': [5.595900000000126e-05, 5.5249999999999744e-05, 5.4763999999998814e-05, 5.515299999999876e-05, 5.4749999999999244e-05, 5.479200000000142e-05, 5.504200000000167e-05, 5.4958000000000784e...</msg>
<status status="PASS" starttime="20201117 14:41:25.763" endtime="20201117 14:41:25.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.781" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.780" endtime="20201117 14:41:25.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.784" level="INFO">VALUE: [5.595900000000126e-05, 5.5249999999999744e-05, 5.4763999999998814e-05, 5.515299999999876e-05, 5.4749999999999244e-05, 5.479200000000142e-05, 5.504200000000167e-05, 5.4958000000000784e-05, 5.520900000000051e-05, 5.512499999999962e-05, 5.508400000000038e-05, 5.482000000000056e-05, 5.488899999999894e-05, 5.497299999999983e-05, 5.512499999999962e-05, 5.5221999999997134e-05, 5.509799999999995e-05, 5.509700000000048e-05, 5.5222000000000604e-05, 5.4999999999999494e-05, 5.5249999999999744e-05, 5.505500000000177e-05, 5.4749999999999244e-05, 5.4777999999998384e-05, 5.5208000000001034e-05, 5.506899999999787e-05, 5.5291999999998453e-05, 5.481900000000109e-05, 5.5194000000001464e-05, 5.4749999999999244e-05, 5.493099999999765e-05, 5.519500000000094e-05, 5.48609999999998e-05, 5.509699999999701e-05, 5.4958000000000784e-05, 5.4735999999999674e-05, 5.484700000000023e-05, 5.509699999999701e-05, 5.469500000000044e-05, 5.522300000000008e-05, 5.477800000000185e-05, 5.495900000000026e-05, 5.493100000000112e-05, 5.523699999999965e-05, 5.488900000000241e-05, 5.4985999999999924e-05, 5.4972000000000354e-05, 5.526299999999984e-05, 5.509700000000048e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.782" endtime="20201117 14:41:25.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.777" endtime="20201117 14:41:25.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.787" endtime="20201117 14:41:25.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.790" endtime="20201117 14:41:25.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.789" endtime="20201117 14:41:25.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.785" endtime="20201117 14:41:25.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.419" endtime="20201117 14:41:25.811"></status>
</kw>
<msg timestamp="20201117 14:41:25.811" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.819" endtime="20201117 14:41:25.836"></status>
</kw>
<msg timestamp="20201117 14:41:25.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.818" endtime="20201117 14:41:25.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.838" endtime="20201117 14:41:25.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.840" endtime="20201117 14:41:25.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.815" endtime="20201117 14:41:25.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.813" endtime="20201117 14:41:25.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.850" endtime="20201117 14:41:26.136"></status>
</kw>
<msg timestamp="20201117 14:41:26.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.849" endtime="20201117 14:41:26.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.140" endtime="20201117 14:41:26.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.148" endtime="20201117 14:41:26.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.846" endtime="20201117 14:41:26.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.845" endtime="20201117 14:41:26.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.155" level="INFO">${RESULT} = [{'time': 0.021849583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5707999999998065e-05, 'source_diff': 5.5707999999998065e-05}, {'time': 0.021910417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:26.152" endtime="20201117 14:41:26.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.169" level="INFO">${ACCURACY} = {'source_diff': [5.5707999999998065e-05, 5.527800000000235e-05, 5.480599999999752e-05, 5.5249999999999744e-05, 5.479200000000142e-05, 5.525000000000321e-05, 5.509700000000048e-05, 5.5249999999999744e-...</msg>
<status status="PASS" starttime="20201117 14:41:26.156" endtime="20201117 14:41:26.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.174" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.173" endtime="20201117 14:41:26.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.176" level="INFO">VALUE: [5.5707999999998065e-05, 5.527800000000235e-05, 5.480599999999752e-05, 5.5249999999999744e-05, 5.479200000000142e-05, 5.525000000000321e-05, 5.509700000000048e-05, 5.5249999999999744e-05, 5.5137999999999715e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.490300000000198e-05, 5.512499999999962e-05, 5.5193999999997995e-05, 5.505500000000177e-05, 5.477800000000185e-05, 5.4763999999998814e-05, 5.4972000000000354e-05, 5.4999999999999494e-05, 5.5236000000000174e-05, 5.51809999999979e-05, 5.4763999999998814e-05, 5.490300000000198e-05, 5.520900000000051e-05, 5.511100000000005e-05, 5.509700000000048e-05, 5.509799999999995e-05, 5.5236000000000174e-05, 5.493099999999765e-05, 5.5249999999999744e-05, 5.497299999999983e-05, 5.4971999999996884e-05, 5.513899999999919e-05, 5.4915999999998605e-05, 5.5222000000000604e-05, 5.483299999999719e-05, 5.4901999999999035e-05, 5.5249999999999744e-05, 5.4694000000000964e-05, 5.4999999999999494e-05, 5.4985999999999924e-05, 5.505500000000177e-05, 5.530500000000202e-05, 5.51809999999979e-05, 5.4791999999997953e-05, 5.480600000000099e-05, 5.484700000000023e-05, 5.516699999999833e-05, 5.4722000000000104e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.175" endtime="20201117 14:41:26.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.170" endtime="20201117 14:41:26.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.179" endtime="20201117 14:41:26.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.183" endtime="20201117 14:41:26.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.181" endtime="20201117 14:41:26.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.178" endtime="20201117 14:41:26.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.812" endtime="20201117 14:41:26.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.417" endtime="20201117 14:41:26.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.416" endtime="20201117 14:41:26.204"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.206" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.214" endtime="20201117 14:41:26.233"></status>
</kw>
<msg timestamp="20201117 14:41:26.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.213" endtime="20201117 14:41:26.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.234" endtime="20201117 14:41:26.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.237" endtime="20201117 14:41:26.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.210" endtime="20201117 14:41:26.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.208" endtime="20201117 14:41:26.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.246" endtime="20201117 14:41:26.532"></status>
</kw>
<msg timestamp="20201117 14:41:26.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.244" endtime="20201117 14:41:26.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.536" endtime="20201117 14:41:26.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.544" endtime="20201117 14:41:26.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.242" endtime="20201117 14:41:26.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.240" endtime="20201117 14:41:26.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.551" level="INFO">${RESULT} = [{'time': 0.025239792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7250000000001744e-05, 'source_diff': 5.7250000000001744e-05}, {'time': 0.025301625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:26.548" endtime="20201117 14:41:26.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.566" level="INFO">${ACCURACY} = {'source_diff': [5.7250000000001744e-05, 5.638900000000044e-05, 5.5943999999998745e-05, 5.5971999999997885e-05, 5.5708000000001534e-05, 5.586099999999733e-05, 5.563899999999969e-05, 5.583399999999766e...</msg>
<status status="PASS" starttime="20201117 14:41:26.552" endtime="20201117 14:41:26.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.571" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.570" endtime="20201117 14:41:26.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.573" level="INFO">VALUE: [5.7250000000001744e-05, 5.638900000000044e-05, 5.5943999999998745e-05, 5.5971999999997885e-05, 5.5708000000001534e-05, 5.586099999999733e-05, 5.563899999999969e-05, 5.583399999999766e-05, 5.611100000000105e-05, 5.56809999999984e-05, 5.593100000000212e-05, 5.5777999999999384e-05, 5.572300000000058e-05, 5.6277999999999884e-05, 5.555600000000174e-05, 5.591699999999908e-05, 5.5999999999997024e-05, 5.6014000000000064e-05, 5.581899999999862e-05, 5.611100000000105e-05, 5.5707999999998065e-05, 5.5944000000002214e-05, 5.5763999999999814e-05, 5.5750000000000244e-05, 5.5722000000001104e-05, 5.612499999999715e-05, 5.590299999999951e-05, 5.609800000000095e-05, 5.6291999999999454e-05, 5.5750000000000244e-05, 5.594500000000169e-05, 5.6027999999999634e-05, 5.593100000000212e-05, 5.569500000000144e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.5999999999997024e-05, 5.615299999999976e-05, 5.608300000000191e-05, 5.594500000000169e-05, 5.584799999999723e-05, 5.616699999999933e-05, 5.587500000000037e-05, 5.573700000000015e-05, 5.587500000000037e-05, 5.612500000000062e-05, 5.5902000000000035e-05, 5.579099999999948e-05, 5.5958000000001784e-05, 5.6207999999998565e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.572" endtime="20201117 14:41:26.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.567" endtime="20201117 14:41:26.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.576" endtime="20201117 14:41:26.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.580" endtime="20201117 14:41:26.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.578" endtime="20201117 14:41:26.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.574" endtime="20201117 14:41:26.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.207" endtime="20201117 14:41:26.600"></status>
</kw>
<msg timestamp="20201117 14:41:26.601" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.609" endtime="20201117 14:41:26.625"></status>
</kw>
<msg timestamp="20201117 14:41:26.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.607" endtime="20201117 14:41:26.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.627" endtime="20201117 14:41:26.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.629" endtime="20201117 14:41:26.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.605" endtime="20201117 14:41:26.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.603" endtime="20201117 14:41:26.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.639" endtime="20201117 14:41:26.925"></status>
</kw>
<msg timestamp="20201117 14:41:26.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021510194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.638" endtime="20201117 14:41:26.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021510194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.930" endtime="20201117 14:41:26.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.938" endtime="20201117 14:41:26.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.635" endtime="20201117 14:41:26.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.633" endtime="20201117 14:41:26.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.945" level="INFO">${RESULT} = [{'time': 0.021567361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.716700000000033e-05, 'source_diff': 5.716700000000033e-05}, {'time': 0.021629139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:26.942" endtime="20201117 14:41:26.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.959" level="INFO">${ACCURACY} = {'source_diff': [5.716700000000033e-05, 5.6499999999997524e-05, 5.593100000000212e-05, 5.615299999999976e-05, 5.6264000000000314e-05, 5.6027999999999634e-05, 5.615299999999976e-05, 5.6027999999999634e...</msg>
<status status="PASS" starttime="20201117 14:41:26.946" endtime="20201117 14:41:26.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.963" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.962" endtime="20201117 14:41:26.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.966" level="INFO">VALUE: [5.716700000000033e-05, 5.6499999999997524e-05, 5.593100000000212e-05, 5.615299999999976e-05, 5.6264000000000314e-05, 5.6027999999999634e-05, 5.615299999999976e-05, 5.6027999999999634e-05, 5.6249999999997274e-05, 5.6236000000001174e-05, 5.591700000000255e-05, 5.620900000000151e-05, 5.6000000000000494e-05, 5.6027999999999634e-05, 5.593099999999865e-05, 5.582000000000156e-05, 5.602700000000016e-05, 5.6165999999999855e-05, 5.5972000000001354e-05, 5.5943999999998745e-05, 5.5943999999998745e-05, 5.584699999999776e-05, 5.6194000000002464e-05, 5.609699999999801e-05, 5.579100000000295e-05, 5.6222000000001604e-05, 5.6264000000000314e-05, 5.5736000000000674e-05, 5.606899999999887e-05, 5.615299999999976e-05, 5.6207999999998565e-05, 5.588899999999994e-05, 5.6277999999999884e-05, 5.613900000000019e-05, 5.6221999999998135e-05, 5.6264000000000314e-05, 5.5763999999999814e-05, 5.6250000000000744e-05, 5.586200000000027e-05, 5.612499999999715e-05, 5.5805999999998523e-05, 5.580499999999905e-05, 5.620900000000151e-05, 5.5750000000000244e-05, 5.587500000000037e-05, 5.6222000000001604e-05, 5.5902000000000035e-05, 5.6000000000000494e-05, 5.5971999999997885e-05, 5.580499999999905e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.964" endtime="20201117 14:41:26.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.960" endtime="20201117 14:41:26.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.969" endtime="20201117 14:41:26.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.972" endtime="20201117 14:41:26.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.971" endtime="20201117 14:41:26.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.967" endtime="20201117 14:41:26.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.601" endtime="20201117 14:41:26.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.205" endtime="20201117 14:41:26.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.204" endtime="20201117 14:41:26.993"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.996" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.004" endtime="20201117 14:41:27.021"></status>
</kw>
<msg timestamp="20201117 14:41:27.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.002" endtime="20201117 14:41:27.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.022" endtime="20201117 14:41:27.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.025" endtime="20201117 14:41:27.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.000" endtime="20201117 14:41:27.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.998" endtime="20201117 14:41:27.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.034" endtime="20201117 14:41:27.320"></status>
</kw>
<msg timestamp="20201117 14:41:27.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024091347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024149306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.033" endtime="20201117 14:41:27.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024091347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024149306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.324" endtime="20201117 14:41:27.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.332" endtime="20201117 14:41:27.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.030" endtime="20201117 14:41:27.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.028" endtime="20201117 14:41:27.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.339" level="INFO">${RESULT} = [{'time': 0.024149306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.795899999999979e-05, 'source_diff': 5.795899999999979e-05}, {'time': 0.024212139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:27.336" endtime="20201117 14:41:27.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.353" level="INFO">${ACCURACY} = {'source_diff': [5.795899999999979e-05, 5.7471999999999385e-05, 5.715300000000076e-05, 5.683399999999866e-05, 5.715299999999729e-05, 5.730500000000055e-05, 5.683400000000213e-05, 5.690300000000051e-05...</msg>
<status status="PASS" starttime="20201117 14:41:27.340" endtime="20201117 14:41:27.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.357" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.356" endtime="20201117 14:41:27.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.360" level="INFO">VALUE: [5.795899999999979e-05, 5.7471999999999385e-05, 5.715300000000076e-05, 5.683399999999866e-05, 5.715299999999729e-05, 5.730500000000055e-05, 5.683400000000213e-05, 5.690300000000051e-05, 5.709799999999848e-05, 5.6901999999997566e-05, 5.697299999999836e-05, 5.7166000000000855e-05, 5.6986000000001924e-05, 5.713900000000119e-05, 5.712500000000162e-05, 5.727699999999794e-05, 5.6971999999998885e-05, 5.7263999999997844e-05, 5.7207999999999565e-05, 5.683300000000266e-05, 5.695899999999879e-05, 5.695900000000226e-05, 5.7013999999997594e-05, 5.6707999999999065e-05, 5.716700000000033e-05, 5.691700000000008e-05, 5.6764000000000814e-05, 5.6791999999999954e-05, 5.7235999999998705e-05, 5.716700000000033e-05, 5.7000000000001494e-05, 5.691700000000008e-05, 5.673700000000115e-05, 5.6819999999999093e-05, 5.670899999999854e-05, 5.682000000000256e-05, 5.68480000000017e-05, 5.6764000000000814e-05, 5.6930000000000175e-05, 5.702700000000116e-05, 5.7165999999997386e-05, 5.6930000000000175e-05, 5.6916000000000605e-05, 5.712500000000162e-05, 5.706899999999987e-05, 5.7207999999999565e-05, 5.6707999999999065e-05, 5.713899999999772e-05, 5.6972000000002354e-05, 5.716700000000033e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.358" endtime="20201117 14:41:27.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.354" endtime="20201117 14:41:27.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.363" endtime="20201117 14:41:27.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.366" endtime="20201117 14:41:27.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.365" endtime="20201117 14:41:27.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.361" endtime="20201117 14:41:27.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.996" endtime="20201117 14:41:27.387"></status>
</kw>
<msg timestamp="20201117 14:41:27.387" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.395" endtime="20201117 14:41:27.412"></status>
</kw>
<msg timestamp="20201117 14:41:27.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.394" endtime="20201117 14:41:27.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.414" endtime="20201117 14:41:27.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.417" endtime="20201117 14:41:27.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.391" endtime="20201117 14:41:27.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.389" endtime="20201117 14:41:27.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.427" endtime="20201117 14:41:27.712"></status>
</kw>
<msg timestamp="20201117 14:41:27.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.425" endtime="20201117 14:41:27.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.716" endtime="20201117 14:41:27.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.725" endtime="20201117 14:41:27.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.423" endtime="20201117 14:41:27.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.421" endtime="20201117 14:41:27.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.731" level="INFO">${RESULT} = [{'time': 0.021473528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.759699999999951e-05, 'source_diff': 5.759699999999951e-05}, {'time': 0.021536319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:27.728" endtime="20201117 14:41:27.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.745" level="INFO">${ACCURACY} = {'source_diff': [5.759699999999951e-05, 5.7444000000000245e-05, 5.677700000000091e-05, 5.6971999999998885e-05, 5.7264000000001314e-05, 5.713899999999772e-05, 5.6985999999998455e-05, 5.708300000000291e...</msg>
<status status="PASS" starttime="20201117 14:41:27.732" endtime="20201117 14:41:27.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.749" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.748" endtime="20201117 14:41:27.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.752" level="INFO">VALUE: [5.759699999999951e-05, 5.7444000000000245e-05, 5.677700000000091e-05, 5.6971999999998885e-05, 5.7264000000001314e-05, 5.713899999999772e-05, 5.6985999999998455e-05, 5.708300000000291e-05, 5.7166000000000855e-05, 5.7250000000001744e-05, 5.7028000000000634e-05, 5.712499999999815e-05, 5.715299999999729e-05, 5.690300000000051e-05, 5.693099999999965e-05, 5.712500000000162e-05, 5.6791999999999954e-05, 5.693099999999965e-05, 5.691700000000008e-05, 5.712500000000162e-05, 5.687500000000137e-05, 5.7221999999999135e-05, 5.6791999999999954e-05, 5.7180000000000425e-05, 5.6735999999998205e-05, 5.68480000000017e-05, 5.6805999999999524e-05, 5.679100000000048e-05, 5.6902000000001035e-05, 5.709699999999901e-05, 5.6902000000001035e-05, 5.706899999999987e-05, 5.730500000000055e-05, 5.709700000000248e-05, 5.7014000000001064e-05, 5.680500000000005e-05, 5.7193999999999995e-05, 5.6722000000002104e-05, 5.6958000000002784e-05, 5.711100000000205e-05, 5.6957999999999315e-05, 5.711099999999858e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.6764000000000814e-05, 5.6972000000002354e-05, 5.686099999999833e-05, 5.695899999999879e-05, 5.68749999999979e-05, 5.6805999999999524e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.751" endtime="20201117 14:41:27.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.746" endtime="20201117 14:41:27.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.755" endtime="20201117 14:41:27.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.759" endtime="20201117 14:41:27.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.757" endtime="20201117 14:41:27.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.753" endtime="20201117 14:41:27.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.388" endtime="20201117 14:41:27.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.995" endtime="20201117 14:41:27.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.994" endtime="20201117 14:41:27.780"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.782" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.794" endtime="20201117 14:41:27.812"></status>
</kw>
<msg timestamp="20201117 14:41:27.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.792" endtime="20201117 14:41:27.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.814" endtime="20201117 14:41:27.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.816" endtime="20201117 14:41:27.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.786" endtime="20201117 14:41:27.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.784" endtime="20201117 14:41:27.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.825" endtime="20201117 14:41:28.110"></status>
</kw>
<msg timestamp="20201117 14:41:28.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029135319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02919375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:27.824" endtime="20201117 14:41:28.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029135319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02919375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:28.114" endtime="20201117 14:41:28.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.122" endtime="20201117 14:41:28.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.821" endtime="20201117 14:41:28.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.819" endtime="20201117 14:41:28.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.129" level="INFO">${RESULT} = [{'time': 0.02919375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.843100000000115e-05, 'source_diff': 5.843100000000115e-05}, {'time': 0.029257611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:28.125" endtime="20201117 14:41:28.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.144" level="INFO">${ACCURACY} = {'source_diff': [5.843100000000115e-05, 5.8222000000000135e-05, 5.8235999999999705e-05, 5.784699999999976e-05, 5.8292000000001454e-05, 5.809700000000001e-05, 5.7693999999997025e-05, 5.7971999999999885...</msg>
<status status="PASS" starttime="20201117 14:41:28.130" endtime="20201117 14:41:28.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.148" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.147" endtime="20201117 14:41:28.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.151" level="INFO">VALUE: [5.843100000000115e-05, 5.8222000000000135e-05, 5.8235999999999705e-05, 5.784699999999976e-05, 5.8292000000001454e-05, 5.809700000000001e-05, 5.7693999999997025e-05, 5.7971999999999885e-05, 5.8263999999998844e-05, 5.7806000000000524e-05, 5.7971999999999885e-05, 5.7708000000000065e-05, 5.783300000000019e-05, 5.787500000000237e-05, 5.813900000000219e-05, 5.7791999999997484e-05, 5.8235999999999705e-05, 5.784799999999923e-05, 5.7778000000001384e-05, 5.822299999999961e-05, 5.7888000000002465e-05, 5.7888000000002465e-05, 5.833300000000069e-05, 5.780499999999758e-05, 5.7764000000001814e-05, 5.784699999999976e-05, 5.80550000000013e-05, 5.7971999999999885e-05, 5.7708000000000065e-05, 5.812500000000262e-05, 5.813900000000219e-05, 5.809700000000001e-05, 5.787500000000237e-05, 5.7722000000003104e-05, 5.8320000000000594e-05, 5.784699999999976e-05, 5.809700000000001e-05, 5.7971999999996415e-05, 5.7999999999995555e-05, 5.7735999999995735e-05, 5.770899999999607e-05, 5.8083999999999913e-05, 5.820899999999657e-05, 5.8264000000002314e-05, 5.788899999999847e-05, 5.78749999999989e-05, 5.81670000000048e-05, 5.80550000000013e-05, 5.802700000000216e-05, 5.8166000000005325e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.149" endtime="20201117 14:41:28.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.144" endtime="20201117 14:41:28.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.154" endtime="20201117 14:41:28.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.157" endtime="20201117 14:41:28.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.156" endtime="20201117 14:41:28.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.152" endtime="20201117 14:41:28.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.783" endtime="20201117 14:41:28.178"></status>
</kw>
<msg timestamp="20201117 14:41:28.178" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.187" endtime="20201117 14:41:28.204"></status>
</kw>
<msg timestamp="20201117 14:41:28.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.185" endtime="20201117 14:41:28.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.205" endtime="20201117 14:41:28.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.208" endtime="20201117 14:41:28.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.183" endtime="20201117 14:41:28.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.180" endtime="20201117 14:41:28.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.218" endtime="20201117 14:41:28.504"></status>
</kw>
<msg timestamp="20201117 14:41:28.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.216" endtime="20201117 14:41:28.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.508" endtime="20201117 14:41:28.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.517" endtime="20201117 14:41:28.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.214" endtime="20201117 14:41:28.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.212" endtime="20201117 14:41:28.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.523" level="INFO">${RESULT} = [{'time': 0.022344556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.923700000000018e-05, 'source_diff': 5.923700000000018e-05}, {'time': 0.022408389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.520" endtime="20201117 14:41:28.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.537" level="INFO">${ACCURACY} = {'source_diff': [5.923700000000018e-05, 5.81810000000009e-05, 5.78749999999989e-05, 5.78610000000028e-05, 5.826300000000284e-05, 5.8083999999999913e-05, 5.7792000000000954e-05, 5.8028000000001634e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:28.524" endtime="20201117 14:41:28.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.542" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.541" endtime="20201117 14:41:28.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.544" level="INFO">VALUE: [5.923700000000018e-05, 5.81810000000009e-05, 5.78749999999989e-05, 5.78610000000028e-05, 5.826300000000284e-05, 5.8083999999999913e-05, 5.7792000000000954e-05, 5.8028000000001634e-05, 5.8000000000002494e-05, 5.8208000000000565e-05, 5.8222000000000135e-05, 5.813899999999872e-05, 5.780499999999758e-05, 5.7763999999998344e-05, 5.76810000000004e-05, 5.816699999999786e-05, 5.808300000000044e-05, 5.7680000000000925e-05, 5.779100000000148e-05, 5.8207999999997095e-05, 5.784699999999976e-05, 5.7708000000000065e-05, 5.7971999999999885e-05, 5.808300000000044e-05, 5.8235999999999705e-05, 5.7958000000000315e-05, 5.8222000000000135e-05, 5.7971999999999885e-05, 5.7735999999999205e-05, 5.8249999999999275e-05, 5.7749999999998775e-05, 5.8208000000000565e-05, 5.7833999999999663e-05, 5.794500000000022e-05, 5.8083999999999913e-05, 5.7985999999999455e-05, 5.7777999999997914e-05, 5.8083999999999913e-05, 5.791700000000108e-05, 5.8083999999999913e-05, 5.7930000000001175e-05, 5.7778000000001384e-05, 5.777700000000191e-05, 5.802699999999869e-05, 5.8207999999997095e-05, 5.783300000000019e-05, 5.8013999999998594e-05, 5.7985999999999455e-05, 5.813900000000219e-05, 5.791700000000108e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.543" endtime="20201117 14:41:28.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.538" endtime="20201117 14:41:28.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.548" endtime="20201117 14:41:28.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.551" endtime="20201117 14:41:28.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.550" endtime="20201117 14:41:28.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.546" endtime="20201117 14:41:28.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.179" endtime="20201117 14:41:28.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.781" endtime="20201117 14:41:28.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.780" endtime="20201117 14:41:28.572"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.574" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.583" endtime="20201117 14:41:28.599"></status>
</kw>
<msg timestamp="20201117 14:41:28.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.581" endtime="20201117 14:41:28.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.600" endtime="20201117 14:41:28.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.603" endtime="20201117 14:41:28.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.578" endtime="20201117 14:41:28.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.576" endtime="20201117 14:41:28.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.612" endtime="20201117 14:41:28.896"></status>
</kw>
<msg timestamp="20201117 14:41:28.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.610" endtime="20201117 14:41:28.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024016625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.900" endtime="20201117 14:41:28.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.908" endtime="20201117 14:41:28.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.608" endtime="20201117 14:41:28.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.606" endtime="20201117 14:41:28.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.915" level="INFO">${RESULT} = [{'time': 0.024016625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9693999999999026e-05, 'source_diff': 5.9693999999999026e-05}, {'time': 0.024080458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:28.912" endtime="20201117 14:41:28.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.928" level="INFO">${ACCURACY} = {'source_diff': [5.9693999999999026e-05, 5.854099999999876e-05, 5.886100000000033e-05, 5.90550000000023e-05, 5.911100000000058e-05, 5.879100000000248e-05, 5.9013999999999595e-05, 5.8930000000002175e-0...</msg>
<status status="PASS" starttime="20201117 14:41:28.916" endtime="20201117 14:41:28.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.933" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.932" endtime="20201117 14:41:28.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.935" level="INFO">VALUE: [5.9693999999999026e-05, 5.854099999999876e-05, 5.886100000000033e-05, 5.90550000000023e-05, 5.911100000000058e-05, 5.879100000000248e-05, 5.9013999999999595e-05, 5.8930000000002175e-05, 5.890299999999904e-05, 5.915299999999929e-05, 5.9263999999999845e-05, 5.893099999999818e-05, 5.915299999999929e-05, 5.9084000000000914e-05, 5.8777999999998914e-05, 5.9263999999999845e-05, 5.9221999999997665e-05, 5.913899999999972e-05, 5.891699999999861e-05, 5.8749999999999775e-05, 5.91810000000019e-05, 5.894499999999775e-05, 5.8777999999998914e-05, 5.888899999999947e-05, 5.9151999999999816e-05, 5.9179999999998956e-05, 5.9250000000000275e-05, 5.912500000000015e-05, 5.912500000000015e-05, 5.904099999999926e-05, 5.88749999999999e-05, 5.891699999999861e-05, 5.911099999999711e-05, 5.8679999999998456e-05, 5.9208000000001565e-05, 5.891699999999861e-05, 5.8708000000001065e-05, 5.911099999999711e-05, 5.912500000000015e-05, 5.894500000000122e-05, 5.863899999999922e-05, 5.919500000000147e-05, 5.8971999999997415e-05, 5.912500000000015e-05, 5.9263999999999845e-05, 5.9236000000000705e-05, 5.8986000000000455e-05, 5.9291999999998984e-05, 5.897300000000036e-05, 5.9236000000000705e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.934" endtime="20201117 14:41:28.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.929" endtime="20201117 14:41:28.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.939" endtime="20201117 14:41:28.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.943" endtime="20201117 14:41:28.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.941" endtime="20201117 14:41:28.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.937" endtime="20201117 14:41:28.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.575" endtime="20201117 14:41:28.963"></status>
</kw>
<msg timestamp="20201117 14:41:28.963" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.972" endtime="20201117 14:41:28.988"></status>
</kw>
<msg timestamp="20201117 14:41:28.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.970" endtime="20201117 14:41:28.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.990" endtime="20201117 14:41:28.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.992" endtime="20201117 14:41:28.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.968" endtime="20201117 14:41:28.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.965" endtime="20201117 14:41:28.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.003" endtime="20201117 14:41:29.288"></status>
</kw>
<msg timestamp="20201117 14:41:29.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021530431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:29.001" endtime="20201117 14:41:29.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021530431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:29.292" endtime="20201117 14:41:29.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.300" endtime="20201117 14:41:29.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.998" endtime="20201117 14:41:29.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.997" endtime="20201117 14:41:29.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.307" level="INFO">${RESULT} = [{'time': 0.021530431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.993099999999918e-05, 'source_diff': 5.993099999999918e-05}, {'time': 0.021595264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.303" endtime="20201117 14:41:29.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.320" level="INFO">${ACCURACY} = {'source_diff': [5.993099999999918e-05, 5.9263999999999845e-05, 5.8806000000001524e-05, 5.91810000000019e-05, 5.894500000000122e-05, 5.886100000000033e-05, 5.8763999999999345e-05, 5.9250000000000275e-...</msg>
<status status="PASS" starttime="20201117 14:41:29.308" endtime="20201117 14:41:29.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.325" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.324" endtime="20201117 14:41:29.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.327" level="INFO">VALUE: [5.993099999999918e-05, 5.9263999999999845e-05, 5.8806000000001524e-05, 5.91810000000019e-05, 5.894500000000122e-05, 5.886100000000033e-05, 5.8763999999999345e-05, 5.9250000000000275e-05, 5.9250000000000275e-05, 5.904099999999926e-05, 5.8749999999999775e-05, 5.879099999999901e-05, 5.915299999999929e-05, 5.909699999999754e-05, 5.909700000000101e-05, 5.9235999999997235e-05, 5.859700000000051e-05, 5.888899999999947e-05, 5.8763999999999345e-05, 5.9208000000001565e-05, 5.908299999999797e-05, 5.883300000000119e-05, 5.9222000000001135e-05, 5.8791999999998484e-05, 5.912500000000015e-05, 5.8986000000000455e-05, 5.9013999999999595e-05, 5.890299999999904e-05, 5.913899999999972e-05, 5.888899999999947e-05, 5.9250000000000275e-05, 5.8820000000001094e-05, 5.922299999999714e-05, 5.880499999999858e-05, 5.8806000000001524e-05, 5.88749999999999e-05, 5.923700000000018e-05, 5.9138000000000246e-05, 5.906900000000187e-05, 5.8985999999996985e-05, 5.8986000000000455e-05, 5.8722000000000635e-05, 5.8957999999997845e-05, 5.8986000000000455e-05, 5.90550000000023e-05, 5.88749999999999e-05, 5.9194000000001995e-05, 5.9292000000002454e-05, 5.8777999999998914e-05, 5.916700000000233e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.326" endtime="20201117 14:41:29.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.321" endtime="20201117 14:41:29.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.331" endtime="20201117 14:41:29.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.335" endtime="20201117 14:41:29.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.333" endtime="20201117 14:41:29.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.329" endtime="20201117 14:41:29.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.964" endtime="20201117 14:41:29.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.573" endtime="20201117 14:41:29.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.572" endtime="20201117 14:41:29.356"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.358" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.366" endtime="20201117 14:41:29.385"></status>
</kw>
<msg timestamp="20201117 14:41:29.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.365" endtime="20201117 14:41:29.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.387" endtime="20201117 14:41:29.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.389" endtime="20201117 14:41:29.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.362" endtime="20201117 14:41:29.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.360" endtime="20201117 14:41:29.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.398" endtime="20201117 14:41:29.684"></status>
</kw>
<msg timestamp="20201117 14:41:29.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024722694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024783806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.397" endtime="20201117 14:41:29.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024722694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024783806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.688" endtime="20201117 14:41:29.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.696" endtime="20201117 14:41:29.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.394" endtime="20201117 14:41:29.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.392" endtime="20201117 14:41:29.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.703" level="INFO">${RESULT} = [{'time': 0.024783806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111199999999858e-05, 'source_diff': 6.111199999999858e-05}, {'time': 0.024848639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.699" endtime="20201117 14:41:29.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.718" level="INFO">${ACCURACY} = {'source_diff': [6.111199999999858e-05, 5.9541999999999234e-05, 6.0014000000000595e-05, 5.9791999999999484e-05, 6.020899999999857e-05, 6.0070000000002344e-05, 6.0194999999999e-05, 5.9764000000000345e-...</msg>
<status status="PASS" starttime="20201117 14:41:29.704" endtime="20201117 14:41:29.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.722" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.721" endtime="20201117 14:41:29.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.725" level="INFO">VALUE: [6.111199999999858e-05, 5.9541999999999234e-05, 6.0014000000000595e-05, 5.9791999999999484e-05, 6.020899999999857e-05, 6.0070000000002344e-05, 6.0194999999999e-05, 5.9764000000000345e-05, 6.0193999999999526e-05, 6.0098000000001484e-05, 5.9764000000000345e-05, 6.0221999999998665e-05, 6.008300000000244e-05, 6.005499999999983e-05, 6.013899999999725e-05, 6.0278000000000415e-05, 5.995900000000179e-05, 6.0249999999997805e-05, 6.011099999999811e-05, 6.0264000000000845e-05, 6.0028000000000165e-05, 6.0014000000000595e-05, 5.9736000000001205e-05, 5.98750000000009e-05, 6.0084000000001914e-05, 6.012500000000115e-05, 6.0250000000001275e-05, 5.991699999999961e-05, 5.96949999999985e-05, 5.98750000000009e-05, 5.96949999999985e-05, 5.993099999999918e-05, 5.9806000000002524e-05, 6.018099999999943e-05, 5.9819999999998624e-05, 6.0000000000001025e-05, 5.988900000000047e-05, 5.990300000000004e-05, 5.984699999999829e-05, 5.980499999999958e-05, 5.986100000000133e-05, 6.0263999999997375e-05, 5.9736000000001205e-05, 5.9971999999998415e-05, 5.9957999999998846e-05, 6.0278000000000415e-05, 6.0278000000000415e-05, 5.9777999999999915e-05, 5.987499999999743e-05, 6.0207999999999096e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.723" endtime="20201117 14:41:29.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.719" endtime="20201117 14:41:29.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.728" endtime="20201117 14:41:29.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.732" endtime="20201117 14:41:29.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.730" endtime="20201117 14:41:29.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.727" endtime="20201117 14:41:29.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.359" endtime="20201117 14:41:29.752"></status>
</kw>
<msg timestamp="20201117 14:41:29.753" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.761" endtime="20201117 14:41:29.778"></status>
</kw>
<msg timestamp="20201117 14:41:29.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.759" endtime="20201117 14:41:29.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.779" endtime="20201117 14:41:29.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.782" endtime="20201117 14:41:29.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.757" endtime="20201117 14:41:29.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.755" endtime="20201117 14:41:29.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.792" endtime="20201117 14:41:30.078"></status>
</kw>
<msg timestamp="20201117 14:41:30.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021621333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.790" endtime="20201117 14:41:30.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021621333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.082" endtime="20201117 14:41:30.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.091" endtime="20201117 14:41:30.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.788" endtime="20201117 14:41:30.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.786" endtime="20201117 14:41:30.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.097" level="INFO">${RESULT} = [{'time': 0.021621333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.087499999999843e-05, 'source_diff': 6.087499999999843e-05}, {'time': 0.021687083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.094" endtime="20201117 14:41:30.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.111" level="INFO">${ACCURACY} = {'source_diff': [6.087499999999843e-05, 6.0264000000000845e-05, 5.9819999999998624e-05, 6.0250000000001275e-05, 6.0014000000000595e-05, 5.9957999999998846e-05, 6.0236000000001705e-05, 6.01389999999972...</msg>
<status status="PASS" starttime="20201117 14:41:30.098" endtime="20201117 14:41:30.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.116" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.115" endtime="20201117 14:41:30.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.118" level="INFO">VALUE: [6.087499999999843e-05, 6.0264000000000845e-05, 5.9819999999998624e-05, 6.0250000000001275e-05, 6.0014000000000595e-05, 5.9957999999998846e-05, 6.0236000000001705e-05, 6.013899999999725e-05, 6.0249999999997805e-05, 6.012500000000115e-05, 5.98750000000009e-05, 6.0263999999997375e-05, 5.9929999999999706e-05, 5.997300000000136e-05, 5.9985999999997985e-05, 6.0041999999999734e-05, 5.969500000000197e-05, 5.972300000000111e-05, 5.986100000000133e-05, 6.0250000000001275e-05, 6.00689999999994e-05, 6.009699999999854e-05, 5.994500000000222e-05, 5.9929999999999706e-05, 5.9707999999998596e-05, 5.9957999999998846e-05, 5.9986000000001455e-05, 6.002700000000069e-05, 6.0263999999997375e-05, 5.9791999999999484e-05, 6.0221999999998665e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.0097999999998014e-05, 6.00689999999994e-05, 6.0263999999997375e-05, 6.00689999999994e-05, 5.9736000000001205e-05, 6.0250000000001275e-05, 6.0084000000001914e-05, 5.9833999999998194e-05, 6.013900000000072e-05, 6.004100000000026e-05, 5.972300000000111e-05, 6.0055999999999304e-05, 5.9764000000000345e-05, 5.9820000000002094e-05, 5.990300000000004e-05, 5.9791999999999484e-05, 6.0152000000000816e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.117" endtime="20201117 14:41:30.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.112" endtime="20201117 14:41:30.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.121" endtime="20201117 14:41:30.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.125" endtime="20201117 14:41:30.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.123" endtime="20201117 14:41:30.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.120" endtime="20201117 14:41:30.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.753" endtime="20201117 14:41:30.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.357" endtime="20201117 14:41:30.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.356" endtime="20201117 14:41:30.146"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.148" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.156" endtime="20201117 14:41:30.173"></status>
</kw>
<msg timestamp="20201117 14:41:30.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.155" endtime="20201117 14:41:30.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.174" endtime="20201117 14:41:30.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.177" endtime="20201117 14:41:30.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.152" endtime="20201117 14:41:30.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.150" endtime="20201117 14:41:30.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.186" endtime="20201117 14:41:30.471"></status>
</kw>
<msg timestamp="20201117 14:41:30.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.184" endtime="20201117 14:41:30.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.476" endtime="20201117 14:41:30.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.484" endtime="20201117 14:41:30.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.182" endtime="20201117 14:41:30.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.180" endtime="20201117 14:41:30.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.491" level="INFO">${RESULT} = [{'time': 0.023957958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.150000000000252e-05, 'source_diff': 6.150000000000252e-05}, {'time': 0.024024792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.488" endtime="20201117 14:41:30.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.505" level="INFO">${ACCURACY} = {'source_diff': [6.150000000000252e-05, 6.1028000000001165e-05, 6.0721999999999166e-05, 6.0735999999998735e-05, 6.1195e-05, 6.109799999999901e-05, 6.098699999999846e-05, 6.073699999999821e-05, 6.09300...</msg>
<status status="PASS" starttime="20201117 14:41:30.492" endtime="20201117 14:41:30.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.509" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.508" endtime="20201117 14:41:30.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.512" level="INFO">VALUE: [6.150000000000252e-05, 6.1028000000001165e-05, 6.0721999999999166e-05, 6.0735999999998735e-05, 6.1195e-05, 6.109799999999901e-05, 6.098699999999846e-05, 6.073699999999821e-05, 6.0930000000000706e-05, 6.080500000000058e-05, 6.118000000000096e-05, 6.113899999999825e-05, 6.0735999999998735e-05, 6.0971999999999416e-05, 6.115300000000129e-05, 6.094499999999975e-05, 6.083299999999972e-05, 6.0694000000000026e-05, 6.108299999999997e-05, 6.087499999999843e-05, 6.1013999999998125e-05, 6.0749999999998305e-05, 6.122199999999967e-05, 6.0888999999998e-05, 6.0792000000000485e-05, 6.111099999999911e-05, 6.109800000000248e-05, 6.0971999999999416e-05, 6.126399999999838e-05, 6.0777999999997445e-05, 6.111099999999911e-05, 6.106899999999693e-05, 6.0750000000001775e-05, 6.07629999999984e-05, 6.087499999999843e-05, 6.116600000000139e-05, 6.079099999999754e-05, 6.127699999999847e-05, 6.10560000000003e-05, 6.10690000000004e-05, 6.0999999999998555e-05, 6.0722000000002635e-05, 6.090299999999757e-05, 6.086099999999886e-05, 6.0957999999999846e-05, 6.0957999999999846e-05, 6.113900000000172e-05, 6.108299999999997e-05, 6.113900000000172e-05, 6.0820000000003094e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.511" endtime="20201117 14:41:30.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.506" endtime="20201117 14:41:30.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.515" endtime="20201117 14:41:30.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.518" endtime="20201117 14:41:30.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.517" endtime="20201117 14:41:30.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.513" endtime="20201117 14:41:30.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.149" endtime="20201117 14:41:30.539"></status>
</kw>
<msg timestamp="20201117 14:41:30.540" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.548" endtime="20201117 14:41:30.565"></status>
</kw>
<msg timestamp="20201117 14:41:30.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.546" endtime="20201117 14:41:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.567" endtime="20201117 14:41:30.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.569" endtime="20201117 14:41:30.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.544" endtime="20201117 14:41:30.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.542" endtime="20201117 14:41:30.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.579" endtime="20201117 14:41:30.864"></status>
</kw>
<msg timestamp="20201117 14:41:30.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.577" endtime="20201117 14:41:30.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.868" endtime="20201117 14:41:30.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.877" endtime="20201117 14:41:30.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.575" endtime="20201117 14:41:30.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.573" endtime="20201117 14:41:30.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.884" level="INFO">${RESULT} = [{'time': 0.021808889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.173599999999974e-05, 'source_diff': 6.173599999999974e-05}, {'time': 0.021875722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.880" endtime="20201117 14:41:30.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.897" level="INFO">${ACCURACY} = {'source_diff': [6.173599999999974e-05, 6.127800000000141e-05, 6.105500000000083e-05, 6.093100000000018e-05, 6.088900000000147e-05, 6.12080000000001e-05, 6.081900000000015e-05, 6.111099999999911e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:30.885" endtime="20201117 14:41:30.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.902" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.901" endtime="20201117 14:41:30.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.904" level="INFO">VALUE: [6.173599999999974e-05, 6.127800000000141e-05, 6.105500000000083e-05, 6.093100000000018e-05, 6.088900000000147e-05, 6.12080000000001e-05, 6.081900000000015e-05, 6.111099999999911e-05, 6.090300000000104e-05, 6.1027999999997695e-05, 6.0806000000000054e-05, 6.091700000000061e-05, 6.127799999999795e-05, 6.0999999999998555e-05, 6.095899999999932e-05, 6.094499999999975e-05, 6.12499999999988e-05, 6.0777999999997445e-05, 6.120899999999957e-05, 6.0971999999999416e-05, 6.108299999999997e-05, 6.126400000000184e-05, 6.0901999999998097e-05, 6.122199999999967e-05, 6.0735999999998735e-05, 6.108299999999997e-05, 6.0777999999997445e-05, 6.0985999999998985e-05, 6.0735999999998735e-05, 6.0749999999998305e-05, 6.083299999999972e-05, 6.0944000000000276e-05, 6.126399999999838e-05, 6.093100000000018e-05, 6.0834000000002664e-05, 6.106999999999987e-05, 6.070900000000254e-05, 6.12080000000001e-05, 6.1027999999997695e-05, 6.0848000000002234e-05, 6.12360000000027e-05, 6.072300000000211e-05, 6.106999999999987e-05, 6.126400000000184e-05, 6.098700000000193e-05, 6.123700000000218e-05, 6.079100000000101e-05, 6.10690000000004e-05, 6.087499999999843e-05, 6.111100000000258e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.903" endtime="20201117 14:41:30.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.898" endtime="20201117 14:41:30.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.907" endtime="20201117 14:41:30.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.911" endtime="20201117 14:41:30.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.909" endtime="20201117 14:41:30.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.906" endtime="20201117 14:41:30.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.540" endtime="20201117 14:41:30.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.147" endtime="20201117 14:41:30.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.146" endtime="20201117 14:41:30.932"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.934" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.943" endtime="20201117 14:41:30.961"></status>
</kw>
<msg timestamp="20201117 14:41:30.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.941" endtime="20201117 14:41:30.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.962" endtime="20201117 14:41:30.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.965" endtime="20201117 14:41:30.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.938" endtime="20201117 14:41:30.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.936" endtime="20201117 14:41:30.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.974" endtime="20201117 14:41:31.259"></status>
</kw>
<msg timestamp="20201117 14:41:31.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025218167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.973" endtime="20201117 14:41:31.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025218167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025280667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.264" endtime="20201117 14:41:31.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.272" endtime="20201117 14:41:31.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.970" endtime="20201117 14:41:31.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.968" endtime="20201117 14:41:31.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.279" level="INFO">${RESULT} = [{'time': 0.025280667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.250000000000006e-05, 'source_diff': 6.250000000000006e-05}, {'time': 0.025347528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.275" endtime="20201117 14:41:31.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.293" level="INFO">${ACCURACY} = {'source_diff': [6.250000000000006e-05, 6.161099999999961e-05, 6.195800000000085e-05, 6.223600000000024e-05, 6.18750000000029e-05, 6.212499999999968e-05, 6.213899999999925e-05, 6.227800000000241e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:31.279" endtime="20201117 14:41:31.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.298" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.297" endtime="20201117 14:41:31.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.300" level="INFO">VALUE: [6.250000000000006e-05, 6.161099999999961e-05, 6.195800000000085e-05, 6.223600000000024e-05, 6.18750000000029e-05, 6.212499999999968e-05, 6.213899999999925e-05, 6.227800000000241e-05, 6.175000000000277e-05, 6.172299999999964e-05, 6.194500000000075e-05, 6.194500000000075e-05, 6.172299999999964e-05, 6.213899999999925e-05, 6.190300000000204e-05, 6.198599999999999e-05, 6.212499999999968e-05, 6.209700000000054e-05, 6.187499999999943e-05, 6.1888999999999e-05, 6.177699999999897e-05, 6.169400000000103e-05, 6.195800000000085e-05, 6.197199999999695e-05, 6.222200000000067e-05, 6.194400000000128e-05, 6.218100000000143e-05, 6.181899999999768e-05, 6.208300000000097e-05, 6.191700000000161e-05, 6.191700000000161e-05, 6.201399999999913e-05, 6.204200000000173e-05, 6.202800000000216e-05, 6.195900000000032e-05, 6.226399999999938e-05, 6.194500000000075e-05, 6.190299999999857e-05, 6.199999999999956e-05, 6.19019999999991e-05, 6.175000000000277e-05, 6.187499999999943e-05, 6.183300000000072e-05, 6.201399999999913e-05, 6.226400000000284e-05, 6.216599999999892e-05, 6.186099999999986e-05, 6.204100000000226e-05, 6.198599999999999e-05, 6.183299999999725e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.299" endtime="20201117 14:41:31.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.294" endtime="20201117 14:41:31.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.304" endtime="20201117 14:41:31.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.307" endtime="20201117 14:41:31.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.305" endtime="20201117 14:41:31.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.302" endtime="20201117 14:41:31.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.935" endtime="20201117 14:41:31.328"></status>
</kw>
<msg timestamp="20201117 14:41:31.328" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.336" endtime="20201117 14:41:31.353"></status>
</kw>
<msg timestamp="20201117 14:41:31.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.334" endtime="20201117 14:41:31.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.355" endtime="20201117 14:41:31.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.358" endtime="20201117 14:41:31.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.332" endtime="20201117 14:41:31.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.330" endtime="20201117 14:41:31.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.368" endtime="20201117 14:41:31.653"></status>
</kw>
<msg timestamp="20201117 14:41:31.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.366" endtime="20201117 14:41:31.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.657" endtime="20201117 14:41:31.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.665" endtime="20201117 14:41:31.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.364" endtime="20201117 14:41:31.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.362" endtime="20201117 14:41:31.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.672" level="INFO">${RESULT} = [{'time': 0.021847639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.237499999999993e-05, 'source_diff': 6.237499999999993e-05}, {'time': 0.021915486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.668" endtime="20201117 14:41:31.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.685" level="INFO">${ACCURACY} = {'source_diff': [6.237499999999993e-05, 6.215300000000229e-05, 6.213899999999925e-05, 6.212499999999968e-05, 6.218100000000143e-05, 6.204200000000173e-05, 6.211100000000011e-05, 6.20279999999987e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:31.673" endtime="20201117 14:41:31.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.690" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.689" endtime="20201117 14:41:31.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.692" level="INFO">VALUE: [6.237499999999993e-05, 6.215300000000229e-05, 6.213899999999925e-05, 6.212499999999968e-05, 6.218100000000143e-05, 6.204200000000173e-05, 6.211100000000011e-05, 6.20279999999987e-05, 6.176400000000234e-05, 6.20140000000026e-05, 6.197200000000042e-05, 6.212499999999968e-05, 6.215299999999882e-05, 6.209700000000054e-05, 6.182000000000062e-05, 6.22499999999998e-05, 6.177700000000244e-05, 6.197299999999989e-05, 6.191599999999867e-05, 6.213900000000272e-05, 6.181899999999768e-05, 6.222200000000067e-05, 6.202699999999922e-05, 6.212499999999968e-05, 6.177799999999845e-05, 6.179099999999854e-05, 6.222200000000067e-05, 6.179199999999802e-05, 6.184799999999976e-05, 6.191699999999814e-05, 6.223600000000024e-05, 6.190299999999857e-05, 6.226399999999938e-05, 6.193100000000118e-05, 6.204199999999827e-05, 6.205599999999784e-05, 6.2195000000001e-05, 6.207000000000087e-05, 6.169499999999703e-05, 6.19300000000017e-05, 6.195900000000032e-05, 6.190200000000257e-05, 6.22089999999971e-05, 6.226400000000284e-05, 6.180500000000158e-05, 6.22219999999972e-05, 6.200000000000302e-05, 6.198599999999999e-05, 6.190200000000257e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.691" endtime="20201117 14:41:31.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.686" endtime="20201117 14:41:31.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.695" endtime="20201117 14:41:31.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.699" endtime="20201117 14:41:31.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.697" endtime="20201117 14:41:31.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.694" endtime="20201117 14:41:31.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.328" endtime="20201117 14:41:31.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.933" endtime="20201117 14:41:31.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.932" endtime="20201117 14:41:31.720"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.722" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.731" endtime="20201117 14:41:31.748"></status>
</kw>
<msg timestamp="20201117 14:41:31.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.729" endtime="20201117 14:41:31.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.749" endtime="20201117 14:41:31.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.752" endtime="20201117 14:41:31.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.726" endtime="20201117 14:41:31.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.724" endtime="20201117 14:41:31.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.761" endtime="20201117 14:41:32.046"></status>
</kw>
<msg timestamp="20201117 14:41:32.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02453, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:41:31.759" endtime="20201117 14:41:32.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02453, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:41:32.051" endtime="20201117 14:41:32.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.059" endtime="20201117 14:41:32.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.757" endtime="20201117 14:41:32.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.755" endtime="20201117 14:41:32.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.066" level="INFO">${RESULT} = [{'time': 0.02453, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.406899999999993e-05, 'source_diff': 6.406899999999993e-05}, {'time': 0.024598833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201117 14:41:32.062" endtime="20201117 14:41:32.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.079" level="INFO">${ACCURACY} = {'source_diff': [6.406899999999993e-05, 6.334700000000179e-05, 6.304099999999979e-05, 6.326400000000038e-05, 6.277699999999997e-05, 6.312499999999721e-05, 6.2889e-05, 6.305499999999936e-05, 6.30970000...</msg>
<status status="PASS" starttime="20201117 14:41:32.067" endtime="20201117 14:41:32.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.084" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.083" endtime="20201117 14:41:32.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.086" level="INFO">VALUE: [6.406899999999993e-05, 6.334700000000179e-05, 6.304099999999979e-05, 6.326400000000038e-05, 6.277699999999997e-05, 6.312499999999721e-05, 6.2889e-05, 6.305499999999936e-05, 6.309700000000154e-05, 6.301400000000013e-05, 6.304200000000273e-05, 6.32500000000008e-05, 6.277799999999945e-05, 6.312500000000068e-05, 6.294500000000175e-05, 6.32500000000008e-05, 6.304199999999927e-05, 6.298599999999752e-05, 6.316699999999939e-05, 6.316599999999992e-05, 6.280599999999859e-05, 6.279200000000248e-05, 6.316699999999939e-05, 6.300000000000056e-05, 6.322300000000114e-05, 6.327799999999995e-05, 6.300000000000056e-05, 6.316599999999992e-05, 6.323600000000124e-05, 6.327799999999995e-05, 6.313900000000025e-05, 6.309700000000154e-05, 6.300000000000056e-05, 6.286100000000086e-05, 6.297199999999795e-05, 6.316700000000286e-05, 6.306899999999893e-05, 6.298600000000099e-05, 6.30279999999997e-05, 6.276399999999988e-05, 6.300000000000056e-05, 6.27500000000003e-05, 6.308400000000144e-05, 6.279199999999902e-05, 6.294500000000175e-05, 6.32500000000008e-05, 6.290299999999957e-05, 6.2889e-05, 6.305599999999884e-05, 6.302700000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.085" endtime="20201117 14:41:32.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.080" endtime="20201117 14:41:32.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.089" endtime="20201117 14:41:32.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.093" endtime="20201117 14:41:32.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.091" endtime="20201117 14:41:32.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.088" endtime="20201117 14:41:32.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.723" endtime="20201117 14:41:32.114"></status>
</kw>
<msg timestamp="20201117 14:41:32.114" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.123" endtime="20201117 14:41:32.139"></status>
</kw>
<msg timestamp="20201117 14:41:32.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.121" endtime="20201117 14:41:32.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.140" endtime="20201117 14:41:32.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.143" endtime="20201117 14:41:32.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.118" endtime="20201117 14:41:32.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.116" endtime="20201117 14:41:32.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.153" endtime="20201117 14:41:32.438"></status>
</kw>
<msg timestamp="20201117 14:41:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.151" endtime="20201117 14:41:32.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.442" endtime="20201117 14:41:32.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.450" endtime="20201117 14:41:32.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.149" endtime="20201117 14:41:32.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.147" endtime="20201117 14:41:32.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.457" level="INFO">${RESULT} = [{'time': 0.022045375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999784e-05, 'source_diff': 6.374999999999784e-05}, {'time': 0.02211425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:32.454" endtime="20201117 14:41:32.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.471" level="INFO">${ACCURACY} = {'source_diff': [6.374999999999784e-05, 6.343099999999921e-05, 6.270799999999813e-05, 6.319399999999906e-05, 6.280499999999911e-05, 6.311099999999764e-05, 6.276399999999988e-05, 6.301400000000013e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:32.458" endtime="20201117 14:41:32.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.475" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.474" endtime="20201117 14:41:32.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.478" level="INFO">VALUE: [6.374999999999784e-05, 6.343099999999921e-05, 6.270799999999813e-05, 6.319399999999906e-05, 6.280499999999911e-05, 6.311099999999764e-05, 6.276399999999988e-05, 6.301400000000013e-05, 6.273600000000074e-05, 6.30279999999997e-05, 6.273600000000074e-05, 6.311100000000111e-05, 6.32500000000008e-05, 6.305599999999884e-05, 6.280599999999859e-05, 6.323600000000124e-05, 6.32500000000008e-05, 6.316699999999939e-05, 6.293099999999871e-05, 6.329199999999952e-05, 6.308400000000144e-05, 6.32500000000008e-05, 6.27219999999977e-05, 6.281900000000215e-05, 6.270799999999813e-05, 6.305499999999936e-05, 6.305499999999936e-05, 6.317999999999949e-05, 6.309700000000154e-05, 6.313900000000025e-05, 6.315299999999982e-05, 6.30279999999997e-05, 6.298600000000099e-05, 6.30829999999985e-05, 6.320799999999863e-05, 6.27500000000003e-05, 6.29439999999988e-05, 6.281900000000215e-05, 6.277799999999945e-05, 6.32500000000008e-05, 6.294499999999828e-05, 6.286100000000086e-05, 6.268099999999846e-05, 6.30279999999997e-05, 6.272300000000064e-05, 6.30279999999997e-05, 6.270900000000107e-05, 6.288800000000053e-05, 6.284800000000076e-05, 6.295900000000132e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.476" endtime="20201117 14:41:32.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.472" endtime="20201117 14:41:32.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.481" endtime="20201117 14:41:32.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.485" endtime="20201117 14:41:32.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.483" endtime="20201117 14:41:32.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.479" endtime="20201117 14:41:32.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.115" endtime="20201117 14:41:32.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.721" endtime="20201117 14:41:32.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.720" endtime="20201117 14:41:32.506"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.508" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.516" endtime="20201117 14:41:32.534"></status>
</kw>
<msg timestamp="20201117 14:41:32.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.515" endtime="20201117 14:41:32.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.535" endtime="20201117 14:41:32.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.538" endtime="20201117 14:41:32.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.512" endtime="20201117 14:41:32.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.510" endtime="20201117 14:41:32.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.547" endtime="20201117 14:41:32.832"></status>
</kw>
<msg timestamp="20201117 14:41:32.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.545" endtime="20201117 14:41:32.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024913931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.837" endtime="20201117 14:41:32.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.845" endtime="20201117 14:41:32.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.543" endtime="20201117 14:41:32.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.541" endtime="20201117 14:41:32.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.852" level="INFO">${RESULT} = [{'time': 0.024978625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.469400000000056e-05, 'source_diff': 6.469400000000056e-05}, {'time': 0.025048472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.848" endtime="20201117 14:41:32.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.867" level="INFO">${ACCURACY} = {'source_diff': [6.469400000000056e-05, 6.402799999999723e-05, 6.427800000000095e-05, 6.404100000000079e-05, 6.386100000000186e-05, 6.391700000000014e-05, 6.411099999999864e-05, 6.380599999999959e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:32.853" endtime="20201117 14:41:32.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.871" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.870" endtime="20201117 14:41:32.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.874" level="INFO">VALUE: [6.469400000000056e-05, 6.402799999999723e-05, 6.427800000000095e-05, 6.404100000000079e-05, 6.386100000000186e-05, 6.391700000000014e-05, 6.411099999999864e-05, 6.380599999999959e-05, 6.418099999999996e-05, 6.377800000000045e-05, 6.387500000000143e-05, 6.384699999999882e-05, 6.395799999999938e-05, 6.373599999999827e-05, 6.383399999999873e-05, 6.394500000000275e-05, 6.40280000000007e-05, 6.38340000000022e-05, 6.380500000000011e-05, 6.393000000000024e-05, 6.376400000000088e-05, 6.415199999999788e-05, 6.383299999999925e-05, 6.411100000000211e-05, 6.377800000000045e-05, 6.412500000000168e-05, 6.411099999999864e-05, 6.379100000000054e-05, 6.399999999999809e-05, 6.426400000000138e-05, 6.379200000000002e-05, 6.423600000000224e-05, 6.405599999999984e-05, 6.412499999999821e-05, 6.416700000000039e-05, 6.40829999999995e-05, 6.381999999999916e-05, 6.3889000000001e-05, 6.391700000000014e-05, 6.374999999999784e-05, 6.408399999999898e-05, 6.394499999999928e-05, 6.401400000000113e-05, 6.381899999999968e-05, 6.399999999999809e-05, 6.42219999999992e-05, 6.42219999999992e-05, 6.369399999999956e-05, 6.37769999999975e-05, 6.422200000000267e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.872" endtime="20201117 14:41:32.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.867" endtime="20201117 14:41:32.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.881" endtime="20201117 14:41:32.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.884" endtime="20201117 14:41:32.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.883" endtime="20201117 14:41:32.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.879" endtime="20201117 14:41:32.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.509" endtime="20201117 14:41:32.905"></status>
</kw>
<msg timestamp="20201117 14:41:32.905" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.914" endtime="20201117 14:41:32.930"></status>
</kw>
<msg timestamp="20201117 14:41:32.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.912" endtime="20201117 14:41:32.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.932" endtime="20201117 14:41:32.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.934" endtime="20201117 14:41:32.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.910" endtime="20201117 14:41:32.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.907" endtime="20201117 14:41:32.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.944" endtime="20201117 14:41:33.230"></status>
</kw>
<msg timestamp="20201117 14:41:33.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.943" endtime="20201117 14:41:33.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.234" endtime="20201117 14:41:33.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.242" endtime="20201117 14:41:33.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.940" endtime="20201117 14:41:33.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.938" endtime="20201117 14:41:33.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.249" level="INFO">${RESULT} = [{'time': 0.021567542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.511099999999964e-05, 'source_diff': 6.511099999999964e-05}, {'time': 0.021636417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.245" endtime="20201117 14:41:33.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.262" level="INFO">${ACCURACY} = {'source_diff': [6.511099999999964e-05, 6.362500000000118e-05, 6.420799999999963e-05, 6.409700000000254e-05, 6.409700000000254e-05, 6.395799999999938e-05, 6.383399999999873e-05, 6.429200000000052e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:33.250" endtime="20201117 14:41:33.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.267" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.266" endtime="20201117 14:41:33.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.269" level="INFO">VALUE: [6.511099999999964e-05, 6.362500000000118e-05, 6.420799999999963e-05, 6.409700000000254e-05, 6.409700000000254e-05, 6.395799999999938e-05, 6.383399999999873e-05, 6.429200000000052e-05, 6.397299999999842e-05, 6.39029999999971e-05, 6.384800000000176e-05, 6.405599999999984e-05, 6.413900000000125e-05, 6.387500000000143e-05, 6.40280000000007e-05, 6.411099999999864e-05, 6.39159999999972e-05, 6.413900000000125e-05, 6.395800000000285e-05, 6.391600000000067e-05, 6.413900000000125e-05, 6.387499999999796e-05, 6.381899999999968e-05, 6.40280000000007e-05, 6.420799999999963e-05, 6.412500000000168e-05, 6.377800000000045e-05, 6.426400000000138e-05, 6.393099999999971e-05, 6.39029999999971e-05, 6.387499999999796e-05, 6.418099999999996e-05, 6.423600000000224e-05, 6.430600000000009e-05, 6.37639999999974e-05, 6.390300000000057e-05, 6.408399999999898e-05, 6.411200000000158e-05, 6.384800000000176e-05, 6.415200000000135e-05, 6.393000000000024e-05, 6.384699999999882e-05, 6.395799999999938e-05, 6.397299999999842e-05, 6.429099999999757e-05, 6.386099999999839e-05, 6.390300000000057e-05, 6.387499999999796e-05, 6.398599999999852e-05, 6.409699999999907e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.268" endtime="20201117 14:41:33.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.263" endtime="20201117 14:41:33.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.273" endtime="20201117 14:41:33.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.276" endtime="20201117 14:41:33.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.275" endtime="20201117 14:41:33.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.271" endtime="20201117 14:41:33.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.906" endtime="20201117 14:41:33.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.507" endtime="20201117 14:41:33.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.506" endtime="20201117 14:41:33.297"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.300" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.308" endtime="20201117 14:41:33.325"></status>
</kw>
<msg timestamp="20201117 14:41:33.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.306" endtime="20201117 14:41:33.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.327" endtime="20201117 14:41:33.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.329" endtime="20201117 14:41:33.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.304" endtime="20201117 14:41:33.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.302" endtime="20201117 14:41:33.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.338" endtime="20201117 14:41:33.624"></status>
</kw>
<msg timestamp="20201117 14:41:33.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024084514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024150569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.337" endtime="20201117 14:41:33.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024084514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024150569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.628" endtime="20201117 14:41:33.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.636" endtime="20201117 14:41:33.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.334" endtime="20201117 14:41:33.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.333" endtime="20201117 14:41:33.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.643" level="INFO">${RESULT} = [{'time': 0.024150569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.605499999999889e-05, 'source_diff': 6.605499999999889e-05}, {'time': 0.024221417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.640" endtime="20201117 14:41:33.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.657" level="INFO">${ACCURACY} = {'source_diff': [6.605499999999889e-05, 6.516699999999792e-05, 6.522299999999967e-05, 6.491700000000114e-05, 6.501399999999866e-05, 6.5276999999999e-05, 6.509700000000007e-05, 6.50830000000005e-05, 6....</msg>
<status status="PASS" starttime="20201117 14:41:33.644" endtime="20201117 14:41:33.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.662" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.661" endtime="20201117 14:41:33.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.665" level="INFO">VALUE: [6.605499999999889e-05, 6.516699999999792e-05, 6.522299999999967e-05, 6.491700000000114e-05, 6.501399999999866e-05, 6.5276999999999e-05, 6.509700000000007e-05, 6.50830000000005e-05, 6.469400000000056e-05, 6.512499999999921e-05, 6.5276999999999e-05, 6.495800000000038e-05, 6.50830000000005e-05, 6.483300000000025e-05, 6.526400000000238e-05, 6.520799999999716e-05, 6.477799999999798e-05, 6.506900000000093e-05, 6.524999999999934e-05, 6.487499999999896e-05, 6.484699999999982e-05, 6.511099999999964e-05, 6.469500000000003e-05, 6.491699999999767e-05, 6.519500000000053e-05, 6.523599999999977e-05, 6.477800000000145e-05, 6.476400000000188e-05, 6.522299999999967e-05, 6.487499999999896e-05, 6.483399999999973e-05, 6.523599999999977e-05, 6.52639999999989e-05, 6.511099999999964e-05, 6.502799999999823e-05, 6.481900000000068e-05, 6.499999999999909e-05, 6.49159999999982e-05, 6.484699999999982e-05, 6.52220000000002e-05, 6.479200000000102e-05, 6.505600000000084e-05, 6.473599999999927e-05, 6.530600000000109e-05, 6.504099999999832e-05, 6.519500000000053e-05, 6.483299999999678e-05, 6.516700000000139e-05, 6.476400000000188e-05, 6.487500000000243e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.663" endtime="20201117 14:41:33.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.658" endtime="20201117 14:41:33.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.668" endtime="20201117 14:41:33.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.671" endtime="20201117 14:41:33.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.670" endtime="20201117 14:41:33.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.666" endtime="20201117 14:41:33.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.300" endtime="20201117 14:41:33.692"></status>
</kw>
<msg timestamp="20201117 14:41:33.692" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.701" endtime="20201117 14:41:33.717"></status>
</kw>
<msg timestamp="20201117 14:41:33.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.699" endtime="20201117 14:41:33.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.718" endtime="20201117 14:41:33.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.721" endtime="20201117 14:41:33.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.696" endtime="20201117 14:41:33.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.694" endtime="20201117 14:41:33.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.731" endtime="20201117 14:41:34.015"></status>
</kw>
<msg timestamp="20201117 14:41:34.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.729" endtime="20201117 14:41:34.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.020" endtime="20201117 14:41:34.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.028" endtime="20201117 14:41:34.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.727" endtime="20201117 14:41:34.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.725" endtime="20201117 14:41:34.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.034" level="INFO">${RESULT} = [{'time': 0.021654778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.543100000000121e-05, 'source_diff': 6.543100000000121e-05}, {'time': 0.021725611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.031" endtime="20201117 14:41:34.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.048" level="INFO">${ACCURACY} = {'source_diff': [6.543100000000121e-05, 6.542999999999827e-05, 6.502799999999823e-05, 6.506900000000093e-05, 6.506900000000093e-05, 6.519500000000053e-05, 6.477800000000145e-05, 6.493100000000071e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:34.035" endtime="20201117 14:41:34.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.053" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.052" endtime="20201117 14:41:34.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.055" level="INFO">VALUE: [6.543100000000121e-05, 6.542999999999827e-05, 6.502799999999823e-05, 6.506900000000093e-05, 6.506900000000093e-05, 6.519500000000053e-05, 6.477800000000145e-05, 6.493100000000071e-05, 6.519499999999706e-05, 6.473599999999927e-05, 6.513899999999878e-05, 6.509799999999955e-05, 6.505600000000084e-05, 6.498699999999899e-05, 6.50280000000017e-05, 6.504099999999832e-05, 6.520799999999716e-05, 6.506900000000093e-05, 6.495800000000038e-05, 6.505500000000136e-05, 6.466600000000142e-05, 6.469399999999709e-05, 6.472200000000317e-05, 6.512500000000268e-05, 6.499999999999909e-05, 6.50830000000005e-05, 6.512499999999921e-05, 6.480600000000059e-05, 6.526400000000238e-05, 6.495799999999691e-05, 6.504100000000179e-05, 6.47639999999984e-05, 6.52220000000002e-05, 6.518100000000096e-05, 6.477800000000145e-05, 6.490300000000157e-05, 6.52500000000028e-05, 6.469500000000003e-05, 6.493099999999724e-05, 6.501299999999918e-05, 6.488899999999853e-05, 6.518000000000149e-05, 6.498599999999952e-05, 6.481900000000068e-05, 6.516599999999845e-05, 6.516599999999845e-05, 6.527799999999848e-05, 6.491700000000114e-05, 6.504100000000179e-05, 6.476400000000188e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.054" endtime="20201117 14:41:34.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.049" endtime="20201117 14:41:34.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.058" endtime="20201117 14:41:34.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.062" endtime="20201117 14:41:34.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.060" endtime="20201117 14:41:34.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.057" endtime="20201117 14:41:34.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.693" endtime="20201117 14:41:34.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.299" endtime="20201117 14:41:34.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.298" endtime="20201117 14:41:34.083"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.085" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.093" endtime="20201117 14:41:34.111"></status>
</kw>
<msg timestamp="20201117 14:41:34.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.092" endtime="20201117 14:41:34.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.112" endtime="20201117 14:41:34.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.115" endtime="20201117 14:41:34.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.089" endtime="20201117 14:41:34.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.087" endtime="20201117 14:41:34.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.124" endtime="20201117 14:41:34.410"></status>
</kw>
<msg timestamp="20201117 14:41:34.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024837361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.122" endtime="20201117 14:41:34.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024837361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.414" endtime="20201117 14:41:34.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.422" endtime="20201117 14:41:34.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.120" endtime="20201117 14:41:34.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.118" endtime="20201117 14:41:34.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.429" level="INFO">${RESULT} = [{'time': 0.024904472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.711100000000164e-05, 'source_diff': 6.711100000000164e-05}, {'time': 0.024975319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.426" endtime="20201117 14:41:34.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.444" level="INFO">${ACCURACY} = {'source_diff': [6.711100000000164e-05, 6.552699999999925e-05, 6.577799999999898e-05, 6.57639999999994e-05, 6.620800000000163e-05, 6.629200000000252e-05, 6.611100000000064e-05, 6.593000000000224e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:34.430" endtime="20201117 14:41:34.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.448" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.447" endtime="20201117 14:41:34.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.451" level="INFO">VALUE: [6.711100000000164e-05, 6.552699999999925e-05, 6.577799999999898e-05, 6.57639999999994e-05, 6.620800000000163e-05, 6.629200000000252e-05, 6.611100000000064e-05, 6.593000000000224e-05, 6.579099999999907e-05, 6.579200000000202e-05, 6.618100000000196e-05, 6.586100000000039e-05, 6.595900000000085e-05, 6.574999999999984e-05, 6.618100000000196e-05, 6.583399999999726e-05, 6.594500000000128e-05, 6.60280000000027e-05, 6.597200000000095e-05, 6.630499999999914e-05, 6.556999999999744e-05, 6.57639999999994e-05, 6.615299999999935e-05, 6.609700000000107e-05, 6.572199999999723e-05, 6.588800000000006e-05, 6.577700000000297e-05, 6.600000000000009e-05, 6.597200000000095e-05, 6.586100000000039e-05, 6.583300000000125e-05, 6.616700000000239e-05, 6.623600000000077e-05, 6.590300000000257e-05, 6.620799999999816e-05, 6.602799999999923e-05, 6.625000000000034e-05, 6.573600000000027e-05, 6.579199999999855e-05, 6.587499999999996e-05, 6.62090000000011e-05, 6.627799999999948e-05, 6.588899999999953e-05, 6.574999999999984e-05, 6.577799999999898e-05, 6.609800000000055e-05, 6.587499999999996e-05, 6.57639999999994e-05, 6.619399999999859e-05, 6.597200000000095e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.450" endtime="20201117 14:41:34.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.445" endtime="20201117 14:41:34.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.454" endtime="20201117 14:41:34.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.459" endtime="20201117 14:41:34.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.456" endtime="20201117 14:41:34.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.452" endtime="20201117 14:41:34.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.086" endtime="20201117 14:41:34.480"></status>
</kw>
<msg timestamp="20201117 14:41:34.480" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.488" endtime="20201117 14:41:34.506"></status>
</kw>
<msg timestamp="20201117 14:41:34.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.487" endtime="20201117 14:41:34.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.507" endtime="20201117 14:41:34.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.510" endtime="20201117 14:41:34.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.484" endtime="20201117 14:41:34.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.482" endtime="20201117 14:41:34.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.520" endtime="20201117 14:41:34.806"></status>
</kw>
<msg timestamp="20201117 14:41:34.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.518" endtime="20201117 14:41:34.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.810" endtime="20201117 14:41:34.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.819" endtime="20201117 14:41:34.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.516" endtime="20201117 14:41:34.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.514" endtime="20201117 14:41:34.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.825" level="INFO">${RESULT} = [{'time': 0.021802875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.683299999999878e-05, 'source_diff': 6.683299999999878e-05}, {'time': 0.021873694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.822" endtime="20201117 14:41:34.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.839" level="INFO">${ACCURACY} = {'source_diff': [6.683299999999878e-05, 6.552699999999925e-05, 6.579099999999907e-05, 6.595800000000138e-05, 6.605499999999889e-05, 6.625000000000034e-05, 6.615299999999935e-05, 6.600000000000009e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:34.826" endtime="20201117 14:41:34.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.844" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.843" endtime="20201117 14:41:34.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.846" level="INFO">VALUE: [6.683299999999878e-05, 6.552699999999925e-05, 6.579099999999907e-05, 6.595800000000138e-05, 6.605499999999889e-05, 6.625000000000034e-05, 6.615299999999935e-05, 6.600000000000009e-05, 6.588899999999953e-05, 6.59029999999991e-05, 6.590300000000257e-05, 6.583300000000125e-05, 6.595800000000138e-05, 6.627800000000295e-05, 6.618099999999849e-05, 6.598599999999705e-05, 6.609800000000055e-05, 6.586100000000039e-05, 6.586199999999987e-05, 6.573600000000027e-05, 6.625000000000034e-05, 6.609800000000055e-05, 6.57229999999967e-05, 6.604099999999932e-05, 6.623600000000077e-05, 6.562499999999971e-05, 6.618000000000249e-05, 6.600000000000009e-05, 6.602699999999975e-05, 6.580499999999864e-05, 6.598600000000052e-05, 6.609700000000107e-05, 6.587499999999996e-05, 6.579199999999855e-05, 6.60419999999988e-05, 6.593100000000171e-05, 6.57639999999994e-05, 6.623600000000077e-05, 6.555600000000134e-05, 6.572300000000017e-05, 6.62220000000012e-05, 6.618099999999849e-05, 6.608400000000098e-05, 6.613900000000325e-05, 6.62639999999999e-05, 6.612500000000021e-05, 6.572300000000017e-05, 6.612500000000021e-05, 6.588800000000006e-05, 6.593000000000224e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.845" endtime="20201117 14:41:34.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.840" endtime="20201117 14:41:34.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.849" endtime="20201117 14:41:34.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.853" endtime="20201117 14:41:34.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.851" endtime="20201117 14:41:34.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.848" endtime="20201117 14:41:34.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.481" endtime="20201117 14:41:34.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.084" endtime="20201117 14:41:34.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.083" endtime="20201117 14:41:34.874"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.876" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.885" endtime="20201117 14:41:34.904"></status>
</kw>
<msg timestamp="20201117 14:41:34.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.884" endtime="20201117 14:41:34.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.905" endtime="20201117 14:41:34.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.908" endtime="20201117 14:41:34.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.881" endtime="20201117 14:41:34.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.879" endtime="20201117 14:41:34.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.917" endtime="20201117 14:41:35.203"></status>
</kw>
<msg timestamp="20201117 14:41:35.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.916" endtime="20201117 14:41:35.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025431861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.207" endtime="20201117 14:41:35.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.215" endtime="20201117 14:41:35.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.913" endtime="20201117 14:41:35.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.911" endtime="20201117 14:41:35.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.222" level="INFO">${RESULT} = [{'time': 0.025431861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.741700000000017e-05, 'source_diff': 6.741700000000017e-05}, {'time': 0.025504694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.219" endtime="20201117 14:41:35.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.236" level="INFO">${ACCURACY} = {'source_diff': [6.741700000000017e-05, 6.701300000000118e-05, 6.711100000000164e-05, 6.719399999999959e-05, 6.706999999999894e-05, 6.72640000000009e-05, 6.67359999999978e-05, 6.687499999999749e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:41:35.223" endtime="20201117 14:41:35.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.240" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.239" endtime="20201117 14:41:35.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.243" level="INFO">VALUE: [6.741700000000017e-05, 6.701300000000118e-05, 6.711100000000164e-05, 6.719399999999959e-05, 6.706999999999894e-05, 6.72640000000009e-05, 6.67359999999978e-05, 6.687499999999749e-05, 6.673600000000127e-05, 6.727800000000048e-05, 6.686099999999792e-05, 6.687500000000096e-05, 6.712500000000121e-05, 6.712499999999774e-05, 6.718100000000296e-05, 6.723600000000177e-05, 6.716600000000045e-05, 6.715300000000035e-05, 6.72640000000009e-05, 6.713900000000078e-05, 6.69030000000001e-05, 6.684700000000182e-05, 6.72090000000021e-05, 6.718099999999949e-05, 6.69160000000002e-05, 6.711100000000164e-05, 6.681899999999921e-05, 6.670799999999866e-05, 6.701399999999719e-05, 6.712500000000121e-05, 6.697199999999848e-05, 6.69030000000001e-05, 6.725000000000134e-05, 6.679199999999955e-05, 6.686099999999792e-05, 6.693100000000271e-05, 6.723600000000177e-05, 6.72359999999983e-05, 6.683299999999878e-05, 6.683300000000225e-05, 6.681999999999869e-05, 6.72359999999983e-05, 6.683400000000173e-05, 6.723600000000177e-05, 6.693099999999924e-05, 6.719399999999959e-05, 6.713900000000078e-05, 6.675000000000084e-05, 6.708299999999903e-05, 6.727699999999753e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.241" endtime="20201117 14:41:35.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.237" endtime="20201117 14:41:35.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.246" endtime="20201117 14:41:35.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.249" endtime="20201117 14:41:35.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.248" endtime="20201117 14:41:35.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.244" endtime="20201117 14:41:35.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.877" endtime="20201117 14:41:35.270"></status>
</kw>
<msg timestamp="20201117 14:41:35.270" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.279" endtime="20201117 14:41:35.296"></status>
</kw>
<msg timestamp="20201117 14:41:35.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.277" endtime="20201117 14:41:35.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.298" endtime="20201117 14:41:35.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.301" endtime="20201117 14:41:35.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.274" endtime="20201117 14:41:35.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.272" endtime="20201117 14:41:35.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.311" endtime="20201117 14:41:35.597"></status>
</kw>
<msg timestamp="20201117 14:41:35.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.309" endtime="20201117 14:41:35.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.601" endtime="20201117 14:41:35.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.610" endtime="20201117 14:41:35.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.307" endtime="20201117 14:41:35.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.305" endtime="20201117 14:41:35.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.617" level="INFO">${RESULT} = [{'time': 0.022385653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.79169999999972e-05, 'source_diff': 6.79169999999972e-05}, {'time': 0.0224585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201117 14:41:35.613" endtime="20201117 14:41:35.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.630" level="INFO">${ACCURACY} = {'source_diff': [6.79169999999972e-05, 6.705599999999937e-05, 6.666699999999942e-05, 6.67640000000004e-05, 6.67640000000004e-05, 6.726399999999744e-05, 6.712500000000121e-05, 6.72640000000009e-05, 6.7...</msg>
<status status="PASS" starttime="20201117 14:41:35.618" endtime="20201117 14:41:35.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.635" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.634" endtime="20201117 14:41:35.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.637" level="INFO">VALUE: [6.79169999999972e-05, 6.705599999999937e-05, 6.666699999999942e-05, 6.67640000000004e-05, 6.67640000000004e-05, 6.726399999999744e-05, 6.712500000000121e-05, 6.72640000000009e-05, 6.724999999999787e-05, 6.725000000000134e-05, 6.679199999999955e-05, 6.719399999999959e-05, 6.70839999999985e-05, 6.713900000000078e-05, 6.72640000000009e-05, 6.702700000000075e-05, 6.683299999999878e-05, 6.72640000000009e-05, 6.708299999999903e-05, 6.713899999999731e-05, 6.700000000000109e-05, 6.697200000000195e-05, 6.713900000000078e-05, 6.715300000000035e-05, 6.686100000000139e-05, 6.69030000000001e-05, 6.695799999999891e-05, 6.687500000000096e-05, 6.716699999999992e-05, 6.694499999999881e-05, 6.715300000000035e-05, 6.680599999999912e-05, 6.719499999999906e-05, 6.70419999999998e-05, 6.684700000000182e-05, 6.688900000000053e-05, 6.669499999999856e-05, 6.718000000000002e-05, 6.690200000000063e-05, 6.686100000000139e-05, 6.67359999999978e-05, 6.675000000000084e-05, 6.720799999999916e-05, 6.687499999999749e-05, 6.680499999999964e-05, 6.72220000000022e-05, 6.720799999999916e-05, 6.716699999999992e-05, 6.673600000000127e-05, 6.694399999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.636" endtime="20201117 14:41:35.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.631" endtime="20201117 14:41:35.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.640" endtime="20201117 14:41:35.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.644" endtime="20201117 14:41:35.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.642" endtime="20201117 14:41:35.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.639" endtime="20201117 14:41:35.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.271" endtime="20201117 14:41:35.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.875" endtime="20201117 14:41:35.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.874" endtime="20201117 14:41:35.665"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.667" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.676" endtime="20201117 14:41:35.694"></status>
</kw>
<msg timestamp="20201117 14:41:35.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.674" endtime="20201117 14:41:35.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.696" endtime="20201117 14:41:35.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.698" endtime="20201117 14:41:35.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.671" endtime="20201117 14:41:35.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.669" endtime="20201117 14:41:35.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.707" endtime="20201117 14:41:35.993"></status>
</kw>
<msg timestamp="20201117 14:41:35.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025434125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025502542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.706" endtime="20201117 14:41:35.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025434125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025502542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.997" endtime="20201117 14:41:36.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.005" endtime="20201117 14:41:36.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.703" endtime="20201117 14:41:36.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.701" endtime="20201117 14:41:36.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.012" level="INFO">${RESULT} = [{'time': 0.025502542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.841700000000117e-05, 'source_diff': 6.841700000000117e-05}, {'time': 0.025576389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.009" endtime="20201117 14:41:36.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.027" level="INFO">${ACCURACY} = {'source_diff': [6.841700000000117e-05, 6.820800000000016e-05, 6.806999999999994e-05, 6.788899999999806e-05, 6.77640000000014e-05, 6.811100000000264e-05, 6.77640000000014e-05, 6.78480000000023e-05, 6....</msg>
<status status="PASS" starttime="20201117 14:41:36.013" endtime="20201117 14:41:36.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.031" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.030" endtime="20201117 14:41:36.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.034" level="INFO">VALUE: [6.841700000000117e-05, 6.820800000000016e-05, 6.806999999999994e-05, 6.788899999999806e-05, 6.77640000000014e-05, 6.811100000000264e-05, 6.77640000000014e-05, 6.78480000000023e-05, 6.793100000000024e-05, 6.772300000000217e-05, 6.775000000000184e-05, 6.787500000000196e-05, 6.774999999999837e-05, 6.801299999999871e-05, 6.801299999999871e-05, 6.790199999999816e-05, 6.77359999999988e-05, 6.800000000000209e-05, 6.77220000000027e-05, 6.77359999999988e-05, 6.795899999999938e-05, 6.772199999999923e-05, 6.804199999999733e-05, 6.788899999999806e-05, 6.775000000000184e-05, 6.779200000000055e-05, 6.790299999999763e-05, 6.813900000000178e-05, 6.773600000000227e-05, 6.795899999999938e-05, 6.813900000000178e-05, 6.819500000000006e-05, 6.783400000000273e-05, 6.775000000000184e-05, 6.825000000000234e-05, 6.77220000000027e-05, 6.784699999999935e-05, 6.799999999999862e-05, 6.826399999999844e-05, 6.766599999999748e-05, 6.798600000000252e-05, 6.774999999999837e-05, 6.779200000000055e-05, 6.79169999999972e-05, 6.780499999999717e-05, 6.770799999999966e-05, 6.802799999999776e-05, 6.801399999999819e-05, 6.805600000000037e-05, 6.79169999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.033" endtime="20201117 14:41:36.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.028" endtime="20201117 14:41:36.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.037" endtime="20201117 14:41:36.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.040" endtime="20201117 14:41:36.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.039" endtime="20201117 14:41:36.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.035" endtime="20201117 14:41:36.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.668" endtime="20201117 14:41:36.062"></status>
</kw>
<msg timestamp="20201117 14:41:36.062" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.070" endtime="20201117 14:41:36.087"></status>
</kw>
<msg timestamp="20201117 14:41:36.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.069" endtime="20201117 14:41:36.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.089" endtime="20201117 14:41:36.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.091" endtime="20201117 14:41:36.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.066" endtime="20201117 14:41:36.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.064" endtime="20201117 14:41:36.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.101" endtime="20201117 14:41:36.387"></status>
</kw>
<msg timestamp="20201117 14:41:36.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.100" endtime="20201117 14:41:36.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.391" endtime="20201117 14:41:36.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.400" endtime="20201117 14:41:36.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.097" endtime="20201117 14:41:36.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.095" endtime="20201117 14:41:36.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.406" level="INFO">${RESULT} = [{'time': 0.022494736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.831900000000071e-05, 'source_diff': 6.831900000000071e-05}, {'time': 0.022568611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.403" endtime="20201117 14:41:36.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.420" level="INFO">${ACCURACY} = {'source_diff': [6.831900000000071e-05, 6.831899999999724e-05, 6.797199999999948e-05, 6.793000000000077e-05, 6.806900000000046e-05, 6.779100000000107e-05, 6.780500000000064e-05, 6.780500000000064e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:36.407" endtime="20201117 14:41:36.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.425" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.423" endtime="20201117 14:41:36.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.427" level="INFO">VALUE: [6.831900000000071e-05, 6.831899999999724e-05, 6.797199999999948e-05, 6.793000000000077e-05, 6.806900000000046e-05, 6.779100000000107e-05, 6.780500000000064e-05, 6.780500000000064e-05, 6.769400000000009e-05, 6.829199999999758e-05, 6.793100000000024e-05, 6.802800000000123e-05, 6.819500000000006e-05, 6.813899999999831e-05, 6.813899999999831e-05, 6.79030000000011e-05, 6.788899999999806e-05, 6.795899999999938e-05, 6.780600000000012e-05, 6.793100000000024e-05, 6.786099999999892e-05, 6.819400000000059e-05, 6.790200000000163e-05, 6.811099999999917e-05, 6.776299999999846e-05, 6.804100000000132e-05, 6.777799999999751e-05, 6.808300000000003e-05, 6.802800000000123e-05, 6.826399999999844e-05, 6.787499999999849e-05, 6.795799999999991e-05, 6.820800000000016e-05, 6.80969999999996e-05, 6.77640000000014e-05, 6.799999999999862e-05, 6.806999999999994e-05, 6.780500000000064e-05, 6.824999999999887e-05, 6.795899999999938e-05, 6.783399999999926e-05, 6.79030000000011e-05, 6.780600000000012e-05, 6.787499999999849e-05, 6.79030000000011e-05, 6.824999999999887e-05, 6.781900000000021e-05, 6.784699999999935e-05, 6.801400000000166e-05, 6.826399999999844e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.426" endtime="20201117 14:41:36.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.421" endtime="20201117 14:41:36.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.431" endtime="20201117 14:41:36.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.434" endtime="20201117 14:41:36.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.432" endtime="20201117 14:41:36.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.428" endtime="20201117 14:41:36.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.063" endtime="20201117 14:41:36.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.666" endtime="20201117 14:41:36.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.665" endtime="20201117 14:41:36.455"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.457" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.466" endtime="20201117 14:41:36.483"></status>
</kw>
<msg timestamp="20201117 14:41:36.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.464" endtime="20201117 14:41:36.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.485" endtime="20201117 14:41:36.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.487" endtime="20201117 14:41:36.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.462" endtime="20201117 14:41:36.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.459" endtime="20201117 14:41:36.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.496" endtime="20201117 14:41:36.782"></status>
</kw>
<msg timestamp="20201117 14:41:36.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024061708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.495" endtime="20201117 14:41:36.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024061708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.786" endtime="20201117 14:41:36.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.794" endtime="20201117 14:41:36.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.492" endtime="20201117 14:41:36.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.490" endtime="20201117 14:41:36.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.801" level="INFO">${RESULT} = [{'time': 0.024061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.940199999999966e-05, 'source_diff': 6.940199999999966e-05}, {'time': 0.024135556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.797" endtime="20201117 14:41:36.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.815" level="INFO">${ACCURACY} = {'source_diff': [6.940199999999966e-05, 6.849999999999912e-05, 6.913899999999931e-05, 6.908300000000103e-05, 6.874999999999937e-05, 6.886099999999992e-05, 6.922200000000073e-05, 6.906899999999799e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:36.802" endtime="20201117 14:41:36.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.819" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.818" endtime="20201117 14:41:36.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.822" level="INFO">VALUE: [6.940199999999966e-05, 6.849999999999912e-05, 6.913899999999931e-05, 6.908300000000103e-05, 6.874999999999937e-05, 6.886099999999992e-05, 6.922200000000073e-05, 6.906899999999799e-05, 6.913899999999931e-05, 6.888899999999906e-05, 6.881900000000121e-05, 6.87359999999998e-05, 6.929199999999858e-05, 6.880600000000112e-05, 6.89169999999982e-05, 6.876399999999894e-05, 6.888899999999906e-05, 6.907000000000094e-05, 6.883400000000026e-05, 6.90970000000006e-05, 6.930600000000162e-05, 6.875000000000284e-05, 6.880599999999765e-05, 6.912499999999974e-05, 6.873700000000274e-05, 6.893099999999777e-05, 6.911100000000017e-05, 6.890200000000263e-05, 6.89160000000022e-05, 6.911100000000017e-05, 6.918000000000202e-05, 6.92640000000029e-05, 6.90970000000006e-05, 6.922200000000073e-05, 6.894400000000134e-05, 6.909699999999713e-05, 6.876399999999894e-05, 6.924999999999987e-05, 6.875000000000284e-05, 6.926399999999944e-05, 6.883300000000078e-05, 6.89030000000021e-05, 6.906999999999747e-05, 6.90559999999979e-05, 6.895900000000038e-05, 6.902800000000223e-05, 6.870900000000013e-05, 6.930599999999815e-05, 6.895900000000038e-05, 6.894399999999787e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.820" endtime="20201117 14:41:36.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.815" endtime="20201117 14:41:36.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.825" endtime="20201117 14:41:36.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.829" endtime="20201117 14:41:36.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.827" endtime="20201117 14:41:36.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.823" endtime="20201117 14:41:36.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.458" endtime="20201117 14:41:36.849"></status>
</kw>
<msg timestamp="20201117 14:41:36.850" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.858" endtime="20201117 14:41:36.875"></status>
</kw>
<msg timestamp="20201117 14:41:36.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.856" endtime="20201117 14:41:36.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.876" endtime="20201117 14:41:36.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.879" endtime="20201117 14:41:36.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.854" endtime="20201117 14:41:36.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.852" endtime="20201117 14:41:36.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.889" endtime="20201117 14:41:37.175"></status>
</kw>
<msg timestamp="20201117 14:41:37.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.887" endtime="20201117 14:41:37.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.179" endtime="20201117 14:41:37.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.187" endtime="20201117 14:41:37.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.885" endtime="20201117 14:41:37.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.883" endtime="20201117 14:41:37.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.194" level="INFO">${RESULT} = [{'time': 0.021682125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.99169999999992e-05, 'source_diff': 6.99169999999992e-05}, {'time': 0.021756986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:37.190" endtime="20201117 14:41:37.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.207" level="INFO">${ACCURACY} = {'source_diff': [6.99169999999992e-05, 6.92360000000003e-05, 6.902800000000223e-05, 6.884700000000035e-05, 6.877799999999851e-05, 6.895800000000091e-05, 6.870800000000066e-05, 6.926399999999944e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:41:37.195" endtime="20201117 14:41:37.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.212" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.211" endtime="20201117 14:41:37.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.214" level="INFO">VALUE: [6.99169999999992e-05, 6.92360000000003e-05, 6.902800000000223e-05, 6.884700000000035e-05, 6.877799999999851e-05, 6.895800000000091e-05, 6.870800000000066e-05, 6.926399999999944e-05, 6.904199999999833e-05, 6.888899999999906e-05, 6.911100000000017e-05, 6.890299999999863e-05, 6.929199999999858e-05, 6.876399999999894e-05, 6.886099999999992e-05, 6.912499999999974e-05, 6.904099999999885e-05, 6.897299999999995e-05, 6.880499999999817e-05, 6.901299999999971e-05, 6.893000000000177e-05, 6.920800000000116e-05, 6.90420000000018e-05, 6.87770000000025e-05, 6.925000000000334e-05, 6.872200000000023e-05, 6.90970000000006e-05, 6.872200000000023e-05, 6.883299999999731e-05, 6.884700000000035e-05, 6.893100000000124e-05, 6.894400000000134e-05, 6.902799999999876e-05, 6.87359999999998e-05, 6.924999999999987e-05, 6.906999999999747e-05, 6.929199999999858e-05, 6.930499999999867e-05, 6.918100000000149e-05, 6.893099999999777e-05, 6.901399999999919e-05, 6.886200000000287e-05, 6.880499999999817e-05, 6.916599999999898e-05, 6.880500000000164e-05, 6.876399999999894e-05, 6.92360000000003e-05, 6.908300000000103e-05, 6.870800000000066e-05, 6.898600000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.213" endtime="20201117 14:41:37.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.208" endtime="20201117 14:41:37.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.218" endtime="20201117 14:41:37.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.221" endtime="20201117 14:41:37.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.220" endtime="20201117 14:41:37.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.216" endtime="20201117 14:41:37.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.850" endtime="20201117 14:41:37.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.456" endtime="20201117 14:41:37.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.455" endtime="20201117 14:41:37.243"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.245" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.253" endtime="20201117 14:41:37.272"></status>
</kw>
<msg timestamp="20201117 14:41:37.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.252" endtime="20201117 14:41:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.273" endtime="20201117 14:41:37.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.276" endtime="20201117 14:41:37.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.249" endtime="20201117 14:41:37.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.247" endtime="20201117 14:41:37.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.285" endtime="20201117 14:41:37.571"></status>
</kw>
<msg timestamp="20201117 14:41:37.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025127903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.283" endtime="20201117 14:41:37.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025127903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.575" endtime="20201117 14:41:37.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.583" endtime="20201117 14:41:37.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.281" endtime="20201117 14:41:37.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.279" endtime="20201117 14:41:37.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.589" level="INFO">${RESULT} = [{'time': 0.025199028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.112499999999827e-05, 'source_diff': 7.112499999999827e-05}, {'time': 0.025274861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.586" endtime="20201117 14:41:37.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.604" level="INFO">${ACCURACY} = {'source_diff': [7.112499999999827e-05, 7.022199999999826e-05, 7.008300000000203e-05, 7.006899999999899e-05, 7.02360000000013e-05, 7.006899999999899e-05, 7.000000000000062e-05, 6.982000000000169e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:37.590" endtime="20201117 14:41:37.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.609" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.608" endtime="20201117 14:41:37.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.612" level="INFO">VALUE: [7.112499999999827e-05, 7.022199999999826e-05, 7.008300000000203e-05, 7.006899999999899e-05, 7.02360000000013e-05, 7.006899999999899e-05, 7.000000000000062e-05, 6.982000000000169e-05, 7.019499999999859e-05, 6.980600000000212e-05, 7.004199999999933e-05, 7.013800000000084e-05, 7.00559999999989e-05, 7.02369999999973e-05, 7.016599999999998e-05, 7.023599999999783e-05, 6.975000000000037e-05, 6.986100000000092e-05, 6.975000000000037e-05, 6.976399999999994e-05, 7.012499999999727e-05, 6.995800000000191e-05, 7.006899999999899e-05, 7.016699999999945e-05, 6.977799999999951e-05, 7.016699999999945e-05, 7.020899999999816e-05, 6.977799999999951e-05, 6.977799999999951e-05, 6.988900000000006e-05, 6.976399999999994e-05, 6.993099999999877e-05, 6.97640000000034e-05, 7.00559999999989e-05, 7.016699999999945e-05, 7.029199999999958e-05, 7.008399999999804e-05, 6.975000000000037e-05, 7.02360000000013e-05, 7.002700000000028e-05, 7.020799999999869e-05, 7.026400000000044e-05, 7.022200000000173e-05, 7.005499999999942e-05, 7.008299999999856e-05, 7.011100000000117e-05, 7.012499999999727e-05, 7.027800000000001e-05, 6.987500000000049e-05, 7.002799999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.610" endtime="20201117 14:41:37.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.605" endtime="20201117 14:41:37.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.615" endtime="20201117 14:41:37.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.618" endtime="20201117 14:41:37.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.617" endtime="20201117 14:41:37.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.613" endtime="20201117 14:41:37.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.245" endtime="20201117 14:41:37.640"></status>
</kw>
<msg timestamp="20201117 14:41:37.640" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.648" endtime="20201117 14:41:37.665"></status>
</kw>
<msg timestamp="20201117 14:41:37.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.646" endtime="20201117 14:41:37.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.667" endtime="20201117 14:41:37.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.669" endtime="20201117 14:41:37.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.644" endtime="20201117 14:41:37.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.642" endtime="20201117 14:41:37.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.679" endtime="20201117 14:41:37.964"></status>
</kw>
<msg timestamp="20201117 14:41:37.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.678" endtime="20201117 14:41:37.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.968" endtime="20201117 14:41:37.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.976" endtime="20201117 14:41:37.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.675" endtime="20201117 14:41:37.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.673" endtime="20201117 14:41:37.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.983" level="INFO">${RESULT} = [{'time': 0.021968611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068000000000005e-05, 'source_diff': 7.068000000000005e-05}, {'time': 0.022044458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.980" endtime="20201117 14:41:37.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.996" level="INFO">${ACCURACY} = {'source_diff': [7.068000000000005e-05, 7.044399999999937e-05, 6.9762999999997e-05, 7.00970000000016e-05, 7.02499999999974e-05, 7.013900000000031e-05, 6.990299999999963e-05, 6.980500000000264e-05, 6.9...</msg>
<status status="PASS" starttime="20201117 14:41:37.984" endtime="20201117 14:41:38.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.005" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.004" endtime="20201117 14:41:38.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.008" level="INFO">VALUE: [7.068000000000005e-05, 7.044399999999937e-05, 6.9762999999997e-05, 7.00970000000016e-05, 7.02499999999974e-05, 7.013900000000031e-05, 6.990299999999963e-05, 6.980500000000264e-05, 6.998600000000105e-05, 6.970800000000166e-05, 7.002799999999976e-05, 6.983400000000126e-05, 6.990299999999963e-05, 6.99169999999992e-05, 7.013900000000031e-05, 6.97360000000008e-05, 6.980600000000212e-05, 7.00840000000015e-05, 7.004199999999933e-05, 7.002799999999976e-05, 6.981899999999874e-05, 7.001400000000019e-05, 6.998600000000105e-05, 6.977700000000003e-05, 6.97909999999996e-05, 7.016599999999998e-05, 7.02360000000013e-05, 6.994399999999887e-05, 7.013900000000031e-05, 6.994399999999887e-05, 7.027800000000001e-05, 7.002799999999976e-05, 6.987500000000049e-05, 7.000000000000062e-05, 7.02360000000013e-05, 7.001400000000019e-05, 6.988900000000006e-05, 6.984699999999788e-05, 7.029199999999958e-05, 6.977799999999951e-05, 6.998600000000105e-05, 6.99169999999992e-05, 7.01109999999977e-05, 7.002799999999976e-05, 6.983299999999831e-05, 6.975000000000037e-05, 6.977700000000003e-05, 6.975000000000037e-05, 7.006899999999899e-05, 7.019399999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.006" endtime="20201117 14:41:38.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.002" endtime="20201117 14:41:38.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.011" endtime="20201117 14:41:38.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.014" endtime="20201117 14:41:38.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.013" endtime="20201117 14:41:38.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.009" endtime="20201117 14:41:38.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.640" endtime="20201117 14:41:38.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.244" endtime="20201117 14:41:38.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.243" endtime="20201117 14:41:38.035"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.038" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.046" endtime="20201117 14:41:38.064"></status>
</kw>
<msg timestamp="20201117 14:41:38.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.044" endtime="20201117 14:41:38.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.065" endtime="20201117 14:41:38.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.068" endtime="20201117 14:41:38.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.042" endtime="20201117 14:41:38.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.040" endtime="20201117 14:41:38.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.077" endtime="20201117 14:41:38.362"></status>
</kw>
<msg timestamp="20201117 14:41:38.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.075" endtime="20201117 14:41:38.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.366" endtime="20201117 14:41:38.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.374" endtime="20201117 14:41:38.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.073" endtime="20201117 14:41:38.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.071" endtime="20201117 14:41:38.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.382" level="INFO">${RESULT} = [{'time': 0.024192444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.202699999999881e-05, 'source_diff': 7.202699999999881e-05}, {'time': 0.024268292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.378" endtime="20201117 14:41:38.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.395" level="INFO">${ACCURACY} = {'source_diff': [7.202699999999881e-05, 7.0584000000002e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.10559999999999e-05, 7.12369999999983e-05, 7.091599999999726e-05, 7.112500000000174e-05, 7.1...</msg>
<status status="PASS" starttime="20201117 14:41:38.383" endtime="20201117 14:41:38.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.400" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.399" endtime="20201117 14:41:38.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.402" level="INFO">VALUE: [7.202699999999881e-05, 7.0584000000002e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.10559999999999e-05, 7.12369999999983e-05, 7.091599999999726e-05, 7.112500000000174e-05, 7.126400000000144e-05, 7.094399999999987e-05, 7.09300000000003e-05, 7.073599999999833e-05, 7.084699999999888e-05, 7.119399999999665e-05, 7.086100000000192e-05, 7.10559999999999e-05, 7.084699999999888e-05, 7.133399999999929e-05, 7.081999999999922e-05, 7.120900000000263e-05, 7.087499999999802e-05, 7.070900000000213e-05, 7.112500000000174e-05, 7.112499999999827e-05, 7.09170000000002e-05, 7.122199999999926e-05, 7.106999999999947e-05, 7.088799999999812e-05, 7.094399999999987e-05, 7.07360000000018e-05, 7.113900000000131e-05, 7.102800000000076e-05, 7.09300000000003e-05, 7.084699999999888e-05, 7.083299999999931e-05, 7.095799999999944e-05, 7.105500000000042e-05, 7.083299999999931e-05, 7.095899999999891e-05, 7.083299999999931e-05, 7.080599999999965e-05, 7.069499999999909e-05, 7.080599999999965e-05, 7.12360000000023e-05, 7.10840000000025e-05, 7.087500000000149e-05, 7.116700000000045e-05, 7.106999999999947e-05, 7.118100000000002e-05, 7.12629999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.401" endtime="20201117 14:41:38.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.396" endtime="20201117 14:41:38.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.405" endtime="20201117 14:41:38.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.409" endtime="20201117 14:41:38.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.407" endtime="20201117 14:41:38.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.404" endtime="20201117 14:41:38.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.038" endtime="20201117 14:41:38.430"></status>
</kw>
<msg timestamp="20201117 14:41:38.430" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.438" endtime="20201117 14:41:38.455"></status>
</kw>
<msg timestamp="20201117 14:41:38.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.436" endtime="20201117 14:41:38.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.457" endtime="20201117 14:41:38.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.459" endtime="20201117 14:41:38.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.434" endtime="20201117 14:41:38.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.432" endtime="20201117 14:41:38.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.469" endtime="20201117 14:41:38.756"></status>
</kw>
<msg timestamp="20201117 14:41:38.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.468" endtime="20201117 14:41:38.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.760" endtime="20201117 14:41:38.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.769" endtime="20201117 14:41:38.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.465" endtime="20201117 14:41:38.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.463" endtime="20201117 14:41:38.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.776" level="INFO">${RESULT} = [{'time': 0.021592667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.16109999999992e-05, 'source_diff': 7.16109999999992e-05}, {'time': 0.0216695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201117 14:41:38.772" endtime="20201117 14:41:38.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.789" level="INFO">${ACCURACY} = {'source_diff': [7.16109999999992e-05, 7.144400000000037e-05, 7.122199999999926e-05, 7.090300000000063e-05, 7.116700000000045e-05, 7.122299999999873e-05, 7.126399999999797e-05, 7.084700000000235e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:38.776" endtime="20201117 14:41:38.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.794" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.793" endtime="20201117 14:41:38.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.796" level="INFO">VALUE: [7.16109999999992e-05, 7.144400000000037e-05, 7.122199999999926e-05, 7.090300000000063e-05, 7.116700000000045e-05, 7.122299999999873e-05, 7.126399999999797e-05, 7.084700000000235e-05, 7.093099999999977e-05, 7.095900000000238e-05, 7.104200000000033e-05, 7.126400000000144e-05, 7.070899999999866e-05, 7.127699999999806e-05, 7.084699999999888e-05, 7.108299999999956e-05, 7.125000000000187e-05, 7.075000000000137e-05, 7.075000000000137e-05, 7.12499999999984e-05, 7.112499999999827e-05, 7.09170000000002e-05, 7.118100000000002e-05, 7.126400000000144e-05, 7.058299999999906e-05, 7.077800000000051e-05, 7.112499999999827e-05, 7.120899999999916e-05, 7.101399999999772e-05, 7.077700000000103e-05, 7.094500000000281e-05, 7.083299999999931e-05, 7.081999999999922e-05, 7.113900000000131e-05, 7.10979999999986e-05, 7.129200000000058e-05, 7.080500000000017e-05, 7.088900000000106e-05, 7.1069e-05, 7.115300000000088e-05, 7.119400000000012e-05, 7.116700000000045e-05, 7.095799999999944e-05, 7.10559999999999e-05, 7.112499999999827e-05, 7.087500000000149e-05, 7.104200000000033e-05, 7.079200000000008e-05, 7.095799999999944e-05, 7.097199999999901e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.795" endtime="20201117 14:41:38.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.790" endtime="20201117 14:41:38.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.799" endtime="20201117 14:41:38.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.803" endtime="20201117 14:41:38.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.801" endtime="20201117 14:41:38.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.798" endtime="20201117 14:41:38.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.430" endtime="20201117 14:41:38.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.037" endtime="20201117 14:41:38.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.036" endtime="20201117 14:41:38.824"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.826" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.834" endtime="20201117 14:41:38.853"></status>
</kw>
<msg timestamp="20201117 14:41:38.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.833" endtime="20201117 14:41:38.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.854" endtime="20201117 14:41:38.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.857" endtime="20201117 14:41:38.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.830" endtime="20201117 14:41:38.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.828" endtime="20201117 14:41:38.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.867" endtime="20201117 14:41:39.152"></status>
</kw>
<msg timestamp="20201117 14:41:39.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025087444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025160625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.865" endtime="20201117 14:41:39.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025087444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025160625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.156" endtime="20201117 14:41:39.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.164" endtime="20201117 14:41:39.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.862" endtime="20201117 14:41:39.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.860" endtime="20201117 14:41:39.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.171" level="INFO">${RESULT} = [{'time': 0.025160625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318099999999855e-05, 'source_diff': 7.318099999999855e-05}, {'time': 0.025237472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.168" endtime="20201117 14:41:39.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.186" level="INFO">${ACCURACY} = {'source_diff': [7.318099999999855e-05, 7.155500000000092e-05, 7.181900000000074e-05, 7.190199999999869e-05, 7.199999999999915e-05, 7.173599999999933e-05, 7.213899999999884e-05, 7.186099999999945e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:39.172" endtime="20201117 14:41:39.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.191" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.190" endtime="20201117 14:41:39.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.193" level="INFO">VALUE: [7.318099999999855e-05, 7.155500000000092e-05, 7.181900000000074e-05, 7.190199999999869e-05, 7.199999999999915e-05, 7.173599999999933e-05, 7.213899999999884e-05, 7.186099999999945e-05, 7.190300000000163e-05, 7.194400000000087e-05, 7.20829999999971e-05, 7.183300000000031e-05, 7.21109999999997e-05, 7.198699999999905e-05, 7.207000000000047e-05, 7.182000000000022e-05, 7.190300000000163e-05, 7.215299999999841e-05, 7.227799999999854e-05, 7.183399999999979e-05, 7.198699999999905e-05, 7.227699999999906e-05, 7.17499999999989e-05, 7.21109999999997e-05, 7.229099999999863e-05, 7.17499999999989e-05, 7.202799999999829e-05, 7.177800000000151e-05, 7.20560000000009e-05, 7.21109999999997e-05, 7.233300000000081e-05, 7.191699999999773e-05, 7.194400000000087e-05, 7.192999999999783e-05, 7.182000000000022e-05, 7.219500000000059e-05, 7.184700000000335e-05, 7.191699999999773e-05, 7.181900000000074e-05, 7.180600000000065e-05, 7.220900000000016e-05, 7.216700000000145e-05, 7.227800000000201e-05, 7.181899999999727e-05, 7.209700000000013e-05, 7.204099999999838e-05, 7.176400000000194e-05, 7.22499999999994e-05, 7.19300000000013e-05, 7.216599999999851e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.192" endtime="20201117 14:41:39.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.187" endtime="20201117 14:41:39.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.196" endtime="20201117 14:41:39.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.200" endtime="20201117 14:41:39.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.198" endtime="20201117 14:41:39.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.195" endtime="20201117 14:41:39.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.827" endtime="20201117 14:41:39.220"></status>
</kw>
<msg timestamp="20201117 14:41:39.221" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.229" endtime="20201117 14:41:39.246"></status>
</kw>
<msg timestamp="20201117 14:41:39.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.227" endtime="20201117 14:41:39.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.248" endtime="20201117 14:41:39.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.250" endtime="20201117 14:41:39.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.225" endtime="20201117 14:41:39.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.223" endtime="20201117 14:41:39.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.261" endtime="20201117 14:41:39.547"></status>
</kw>
<msg timestamp="20201117 14:41:39.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021362806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.259" endtime="20201117 14:41:39.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021362806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.551" endtime="20201117 14:41:39.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.559" endtime="20201117 14:41:39.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.257" endtime="20201117 14:41:39.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.255" endtime="20201117 14:41:39.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.566" level="INFO">${RESULT} = [{'time': 0.021435111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.23049999999982e-05, 'source_diff': 7.23049999999982e-05}, {'time': 0.021512944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:39.563" endtime="20201117 14:41:39.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.580" level="INFO">${ACCURACY} = {'source_diff': [7.23049999999982e-05, 7.206899999999752e-05, 7.226399999999897e-05, 7.177699999999856e-05, 7.186099999999945e-05, 7.213899999999884e-05, 7.170800000000019e-05, 7.208300000000056e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:39.567" endtime="20201117 14:41:39.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.584" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.583" endtime="20201117 14:41:39.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.587" level="INFO">VALUE: [7.23049999999982e-05, 7.206899999999752e-05, 7.226399999999897e-05, 7.177699999999856e-05, 7.186099999999945e-05, 7.213899999999884e-05, 7.170800000000019e-05, 7.208300000000056e-05, 7.188899999999859e-05, 7.17499999999989e-05, 7.222299999999973e-05, 7.173599999999933e-05, 7.212499999999927e-05, 7.230500000000167e-05, 7.170899999999966e-05, 7.202799999999829e-05, 7.201299999999924e-05, 7.213899999999884e-05, 7.175000000000237e-05, 7.187500000000249e-05, 7.22499999999994e-05, 7.216699999999798e-05, 7.206899999999752e-05, 7.177700000000203e-05, 7.188900000000206e-05, 7.180500000000117e-05, 7.17499999999989e-05, 7.195799999999697e-05, 7.192999999999783e-05, 7.176400000000194e-05, 7.188899999999859e-05, 7.220800000000069e-05, 7.2069000000001e-05, 7.209700000000013e-05, 7.195799999999697e-05, 7.234700000000038e-05, 7.176399999999847e-05, 7.176399999999847e-05, 7.212499999999927e-05, 7.177800000000151e-05, 7.226400000000244e-05, 7.202799999999829e-05, 7.176399999999847e-05, 7.201399999999872e-05, 7.199999999999915e-05, 7.186100000000292e-05, 7.201399999999872e-05, 7.198599999999958e-05, 7.195800000000044e-05, 7.215299999999841e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.585" endtime="20201117 14:41:39.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.580" endtime="20201117 14:41:39.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.590" endtime="20201117 14:41:39.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.593" endtime="20201117 14:41:39.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.592" endtime="20201117 14:41:39.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.588" endtime="20201117 14:41:39.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.221" endtime="20201117 14:41:39.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.825" endtime="20201117 14:41:39.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.824" endtime="20201117 14:41:39.614"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.617" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.625" endtime="20201117 14:41:39.643"></status>
</kw>
<msg timestamp="20201117 14:41:39.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.623" endtime="20201117 14:41:39.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.644" endtime="20201117 14:41:39.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.647" endtime="20201117 14:41:39.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.621" endtime="20201117 14:41:39.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.619" endtime="20201117 14:41:39.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.656" endtime="20201117 14:41:39.942"></status>
</kw>
<msg timestamp="20201117 14:41:39.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024502083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.654" endtime="20201117 14:41:39.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024502083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.946" endtime="20201117 14:41:39.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.954" endtime="20201117 14:41:39.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.652" endtime="20201117 14:41:39.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.650" endtime="20201117 14:41:39.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.961" level="INFO">${RESULT} = [{'time': 0.024502083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.400000000000115e-05, 'source_diff': 7.400000000000115e-05}, {'time': 0.024580903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.957" endtime="20201117 14:41:39.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.974" level="INFO">${ACCURACY} = {'source_diff': [7.400000000000115e-05, 7.344500000000184e-05, 7.315299999999941e-05, 7.319399999999865e-05, 7.315299999999941e-05, 7.316699999999898e-05, 7.288900000000306e-05, 7.316599999999951e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:39.962" endtime="20201117 14:41:39.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.979" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.978" endtime="20201117 14:41:39.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.982" level="INFO">VALUE: [7.400000000000115e-05, 7.344500000000184e-05, 7.315299999999941e-05, 7.319399999999865e-05, 7.315299999999941e-05, 7.316699999999898e-05, 7.288900000000306e-05, 7.316599999999951e-05, 7.306899999999852e-05, 7.322200000000126e-05, 7.277800000000251e-05, 7.277799999999904e-05, 7.276399999999947e-05, 7.295799999999797e-05, 7.319399999999865e-05, 7.277800000000251e-05, 7.276399999999947e-05, 7.297200000000101e-05, 7.29439999999984e-05, 7.282000000000122e-05, 7.3069999999998e-05, 7.313899999999984e-05, 7.324999999999693e-05, 7.265299999999891e-05, 7.276399999999947e-05, 7.309800000000061e-05, 7.315199999999994e-05, 7.273600000000033e-05, 7.320799999999822e-05, 7.322199999999779e-05, 7.284700000000088e-05, 7.288900000000306e-05, 7.267999999999858e-05, 7.320800000000169e-05, 7.326399999999997e-05, 7.31110000000007e-05, 7.290300000000263e-05, 7.302799999999929e-05, 7.297199999999754e-05, 7.300000000000015e-05, 7.287500000000002e-05, 7.288899999999959e-05, 7.270900000000066e-05, 7.305599999999843e-05, 7.300000000000015e-05, 7.29309999999983e-05, 7.298700000000005e-05, 7.326399999999997e-05, 7.327799999999954e-05, 7.294500000000134e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.980" endtime="20201117 14:41:39.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.975" endtime="20201117 14:41:39.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.985" endtime="20201117 14:41:39.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.988" endtime="20201117 14:41:40.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.986" endtime="20201117 14:41:40.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.983" endtime="20201117 14:41:40.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.617" endtime="20201117 14:41:40.009"></status>
</kw>
<msg timestamp="20201117 14:41:40.009" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.018" endtime="20201117 14:41:40.036"></status>
</kw>
<msg timestamp="20201117 14:41:40.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.016" endtime="20201117 14:41:40.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.037" endtime="20201117 14:41:40.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.040" endtime="20201117 14:41:40.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.014" endtime="20201117 14:41:40.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.011" endtime="20201117 14:41:40.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.050" endtime="20201117 14:41:40.335"></status>
</kw>
<msg timestamp="20201117 14:41:40.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.048" endtime="20201117 14:41:40.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.339" endtime="20201117 14:41:40.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.347" endtime="20201117 14:41:40.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.046" endtime="20201117 14:41:40.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.044" endtime="20201117 14:41:40.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.354" level="INFO">${RESULT} = [{'time': 0.022098931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.374999999999743e-05, 'source_diff': 7.374999999999743e-05}, {'time': 0.022176778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.351" endtime="20201117 14:41:40.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.368" level="INFO">${ACCURACY} = {'source_diff': [7.374999999999743e-05, 7.26110000000002e-05, 7.295900000000091e-05, 7.294500000000134e-05, 7.31110000000007e-05, 7.283400000000079e-05, 7.281999999999775e-05, 7.315299999999941e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:41:40.355" endtime="20201117 14:41:40.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.372" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.371" endtime="20201117 14:41:40.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.375" level="INFO">VALUE: [7.374999999999743e-05, 7.26110000000002e-05, 7.295900000000091e-05, 7.294500000000134e-05, 7.31110000000007e-05, 7.283400000000079e-05, 7.281999999999775e-05, 7.315299999999941e-05, 7.283400000000079e-05, 7.320799999999822e-05, 7.318000000000255e-05, 7.323600000000083e-05, 7.295800000000144e-05, 7.292999999999883e-05, 7.315199999999994e-05, 7.287500000000002e-05, 7.305599999999843e-05, 7.302800000000276e-05, 7.302799999999929e-05, 7.322200000000126e-05, 7.27499999999999e-05, 7.327799999999954e-05, 7.279199999999861e-05, 7.288899999999959e-05, 7.291699999999873e-05, 7.272200000000076e-05, 7.316700000000245e-05, 7.305599999999843e-05, 7.277699999999956e-05, 7.300000000000015e-05, 7.279099999999913e-05, 7.32500000000004e-05, 7.306899999999852e-05, 7.329099999999963e-05, 7.284699999999741e-05, 7.302700000000328e-05, 7.29439999999984e-05, 7.313899999999984e-05, 7.319399999999865e-05, 7.290199999999969e-05, 7.29439999999984e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.320900000000116e-05, 7.307000000000147e-05, 7.298600000000058e-05, 7.304200000000233e-05, 7.327799999999954e-05, 7.316699999999898e-05, 7.294500000000134e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.373" endtime="20201117 14:41:40.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.369" endtime="20201117 14:41:40.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.378" endtime="20201117 14:41:40.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.382" endtime="20201117 14:41:40.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.380" endtime="20201117 14:41:40.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.376" endtime="20201117 14:41:40.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.010" endtime="20201117 14:41:40.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.615" endtime="20201117 14:41:40.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.615" endtime="20201117 14:41:40.403"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.405" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.413" endtime="20201117 14:41:40.432"></status>
</kw>
<msg timestamp="20201117 14:41:40.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.412" endtime="20201117 14:41:40.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.433" endtime="20201117 14:41:40.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.436" endtime="20201117 14:41:40.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.409" endtime="20201117 14:41:40.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.407" endtime="20201117 14:41:40.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.445" endtime="20201117 14:41:40.739"></status>
</kw>
<msg timestamp="20201117 14:41:40.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024952319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.443" endtime="20201117 14:41:40.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024952319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.743" endtime="20201117 14:41:40.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.751" endtime="20201117 14:41:40.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.441" endtime="20201117 14:41:40.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.439" endtime="20201117 14:41:40.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.758" level="INFO">${RESULT} = [{'time': 0.024952319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.437500000000152e-05, 'source_diff': 7.437500000000152e-05}, {'time': 0.025032139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.754" endtime="20201117 14:41:40.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.772" level="INFO">${ACCURACY} = {'source_diff': [7.437500000000152e-05, 7.405599999999943e-05, 7.395900000000191e-05, 7.401399999999725e-05, 7.391699999999973e-05, 7.43050000000002e-05, 7.404199999999986e-05, 7.384699999999841e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:40.759" endtime="20201117 14:41:40.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.777" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.776" endtime="20201117 14:41:40.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.779" level="INFO">VALUE: [7.437500000000152e-05, 7.405599999999943e-05, 7.395900000000191e-05, 7.401399999999725e-05, 7.391699999999973e-05, 7.43050000000002e-05, 7.404199999999986e-05, 7.384699999999841e-05, 7.395799999999897e-05, 7.4069000000003e-05, 7.386099999999798e-05, 7.422199999999879e-05, 7.376400000000047e-05, 7.42500000000014e-05, 7.413900000000084e-05, 7.411099999999823e-05, 7.383299999999884e-05, 7.416699999999998e-05, 7.401400000000072e-05, 7.407000000000247e-05, 7.422199999999879e-05, 7.388900000000059e-05, 7.398599999999811e-05, 7.3763999999997e-05, 7.4069999999999e-05, 7.391699999999973e-05, 7.386099999999798e-05, 7.413900000000084e-05, 7.382000000000222e-05, 7.379100000000013e-05, 7.426299999999803e-05, 7.35690000000025e-05, 7.402700000000081e-05, 7.372199999999829e-05, 7.42500000000014e-05, 7.42500000000014e-05, 7.422199999999879e-05, 7.373599999999786e-05, 7.429200000000011e-05, 7.388900000000059e-05, 7.409699999999866e-05, 7.374999999999743e-05, 7.376400000000047e-05, 7.401400000000072e-05, 7.397199999999854e-05, 7.423600000000183e-05, 7.409800000000161e-05, 7.412500000000127e-05, 7.423699999999783e-05, 7.383400000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.778" endtime="20201117 14:41:40.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.773" endtime="20201117 14:41:40.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.783" endtime="20201117 14:41:40.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.786" endtime="20201117 14:41:40.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.785" endtime="20201117 14:41:40.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.781" endtime="20201117 14:41:40.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.406" endtime="20201117 14:41:40.807"></status>
</kw>
<msg timestamp="20201117 14:41:40.807" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.816" endtime="20201117 14:41:40.833"></status>
</kw>
<msg timestamp="20201117 14:41:40.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.814" endtime="20201117 14:41:40.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.834" endtime="20201117 14:41:40.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.836" endtime="20201117 14:41:40.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.812" endtime="20201117 14:41:40.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.809" endtime="20201117 14:41:40.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.846" endtime="20201117 14:41:41.133"></status>
</kw>
<msg timestamp="20201117 14:41:41.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.845" endtime="20201117 14:41:41.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.137" endtime="20201117 14:41:41.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.145" endtime="20201117 14:41:41.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.842" endtime="20201117 14:41:41.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.841" endtime="20201117 14:41:41.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.152" level="INFO">${RESULT} = [{'time': 0.021536333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.469400000000015e-05, 'source_diff': 7.469400000000015e-05}, {'time': 0.021616153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:41.148" endtime="20201117 14:41:41.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.165" level="INFO">${ACCURACY} = {'source_diff': [7.469400000000015e-05, 7.4069999999999e-05, 7.422199999999879e-05, 7.419499999999912e-05, 7.418099999999955e-05, 7.401399999999725e-05, 7.429100000000063e-05, 7.404100000000038e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:41:41.153" endtime="20201117 14:41:41.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.170" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.169" endtime="20201117 14:41:41.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.172" level="INFO">VALUE: [7.469400000000015e-05, 7.4069999999999e-05, 7.422199999999879e-05, 7.419499999999912e-05, 7.418099999999955e-05, 7.401399999999725e-05, 7.429100000000063e-05, 7.404100000000038e-05, 7.395799999999897e-05, 7.426299999999803e-05, 7.423600000000183e-05, 7.415200000000094e-05, 7.41249999999978e-05, 7.423599999999836e-05, 7.416699999999998e-05, 7.386100000000145e-05, 7.391699999999973e-05, 7.401400000000072e-05, 7.415300000000041e-05, 7.418099999999955e-05, 7.3763999999997e-05, 7.376400000000047e-05, 7.388900000000059e-05, 7.397199999999854e-05, 7.42500000000014e-05, 7.419499999999912e-05, 7.402800000000029e-05, 7.390300000000016e-05, 7.384700000000188e-05, 7.42500000000014e-05, 7.411099999999823e-05, 7.418099999999955e-05, 7.390300000000016e-05, 7.404100000000038e-05, 7.383299999999884e-05, 7.401400000000072e-05, 7.398600000000158e-05, 7.420799999999922e-05, 7.390300000000016e-05, 7.379199999999961e-05, 7.42500000000014e-05, 7.420900000000216e-05, 7.386099999999798e-05, 7.422200000000226e-05, 7.369499999999862e-05, 7.373599999999786e-05, 7.377800000000004e-05, 7.415300000000041e-05, 7.429200000000011e-05, 7.379199999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.171" endtime="20201117 14:41:41.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.166" endtime="20201117 14:41:41.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.176" endtime="20201117 14:41:41.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.179" endtime="20201117 14:41:41.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.178" endtime="20201117 14:41:41.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.174" endtime="20201117 14:41:41.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.808" endtime="20201117 14:41:41.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.404" endtime="20201117 14:41:41.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.403" endtime="20201117 14:41:41.200"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.203" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.211" endtime="20201117 14:41:41.229"></status>
</kw>
<msg timestamp="20201117 14:41:41.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.209" endtime="20201117 14:41:41.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.230" endtime="20201117 14:41:41.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.233" endtime="20201117 14:41:41.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.207" endtime="20201117 14:41:41.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.205" endtime="20201117 14:41:41.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.242" endtime="20201117 14:41:41.527"></status>
</kw>
<msg timestamp="20201117 14:41:41.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023911569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023987167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.240" endtime="20201117 14:41:41.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023911569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023987167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.531" endtime="20201117 14:41:41.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.539" endtime="20201117 14:41:41.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.238" endtime="20201117 14:41:41.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.236" endtime="20201117 14:41:41.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.546" level="INFO">${RESULT} = [{'time': 0.023987167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.559799999999964e-05, 'source_diff': 7.559799999999964e-05}, {'time': 0.024068, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:41.543" endtime="20201117 14:41:41.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.560" level="INFO">${ACCURACY} = {'source_diff': [7.559799999999964e-05, 7.509699999999966e-05, 7.491699999999726e-05, 7.499999999999868e-05, 7.495899999999944e-05, 7.516700000000098e-05, 7.472299999999876e-05, 7.523599999999936e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:41.547" endtime="20201117 14:41:41.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.564" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.563" endtime="20201117 14:41:41.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.567" level="INFO">VALUE: [7.559799999999964e-05, 7.509699999999966e-05, 7.491699999999726e-05, 7.499999999999868e-05, 7.495899999999944e-05, 7.516700000000098e-05, 7.472299999999876e-05, 7.523599999999936e-05, 7.501399999999825e-05, 7.507e-05, 7.508399999999957e-05, 7.498599999999911e-05, 7.476299999999853e-05, 7.520800000000022e-05, 7.522199999999979e-05, 7.52769999999986e-05, 7.497199999999954e-05, 7.502800000000129e-05, 7.522199999999979e-05, 7.497199999999954e-05, 7.513899999999837e-05, 7.502800000000129e-05, 7.516700000000098e-05, 7.499999999999868e-05, 7.513900000000184e-05, 7.484699999999941e-05, 7.480600000000018e-05, 7.502800000000129e-05, 7.490300000000116e-05, 7.519500000000012e-05, 7.479200000000061e-05, 7.48050000000007e-05, 7.523699999999883e-05, 7.47500000000019e-05, 7.486099999999898e-05, 7.473599999999886e-05, 7.473600000000233e-05, 7.513900000000184e-05, 7.505600000000043e-05, 7.473599999999886e-05, 7.513900000000184e-05, 7.473600000000233e-05, 7.516700000000098e-05, 7.527800000000154e-05, 7.49440000000004e-05, 7.512500000000227e-05, 7.526400000000197e-05, 7.502800000000129e-05, 7.47500000000019e-05, 7.502800000000129e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.565" endtime="20201117 14:41:41.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.561" endtime="20201117 14:41:41.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.570" endtime="20201117 14:41:41.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.574" endtime="20201117 14:41:41.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.572" endtime="20201117 14:41:41.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.569" endtime="20201117 14:41:41.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.203" endtime="20201117 14:41:41.594"></status>
</kw>
<msg timestamp="20201117 14:41:41.595" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.603" endtime="20201117 14:41:41.621"></status>
</kw>
<msg timestamp="20201117 14:41:41.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.601" endtime="20201117 14:41:41.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.623" endtime="20201117 14:41:41.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.625" endtime="20201117 14:41:41.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.599" endtime="20201117 14:41:41.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.597" endtime="20201117 14:41:41.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.635" endtime="20201117 14:41:41.920"></status>
</kw>
<msg timestamp="20201117 14:41:41.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.634" endtime="20201117 14:41:41.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.924" endtime="20201117 14:41:41.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.932" endtime="20201117 14:41:41.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.631" endtime="20201117 14:41:41.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.630" endtime="20201117 14:41:41.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.939" level="INFO">${RESULT} = [{'time': 0.021981819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.616599999999904e-05, 'source_diff': 7.616599999999904e-05}, {'time': 0.022062708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:41.935" endtime="20201117 14:41:41.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.952" level="INFO">${ACCURACY} = {'source_diff': [7.616599999999904e-05, 7.551399999999875e-05, 7.516700000000098e-05, 7.47500000000019e-05, 7.504199999999739e-05, 7.479199999999714e-05, 7.511099999999923e-05, 7.523699999999883e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:41.940" endtime="20201117 14:41:41.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.957" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.956" endtime="20201117 14:41:41.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.960" level="INFO">VALUE: [7.616599999999904e-05, 7.551399999999875e-05, 7.516700000000098e-05, 7.47500000000019e-05, 7.504199999999739e-05, 7.479199999999714e-05, 7.511099999999923e-05, 7.523699999999883e-05, 7.507e-05, 7.487499999999855e-05, 7.491599999999779e-05, 7.516599999999804e-05, 7.533300000000034e-05, 7.473599999999886e-05, 7.51249999999988e-05, 7.49029999999977e-05, 7.523599999999936e-05, 7.497199999999954e-05, 7.487499999999855e-05, 7.49310000000003e-05, 7.490300000000116e-05, 7.523599999999936e-05, 7.49310000000003e-05, 7.523599999999936e-05, 7.488899999999812e-05, 7.50830000000001e-05, 7.520899999999969e-05, 7.498599999999911e-05, 7.52639999999985e-05, 7.520800000000022e-05, 7.486099999999898e-05, 7.52769999999986e-05, 7.484699999999941e-05, 7.52639999999985e-05, 7.486099999999898e-05, 7.52639999999985e-05, 7.487500000000202e-05, 7.504100000000138e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.518100000000055e-05, 7.480600000000018e-05, 7.473600000000233e-05, 7.509699999999966e-05, 7.49310000000003e-05, 7.473599999999886e-05, 7.509699999999966e-05, 7.527800000000154e-05, 7.504200000000086e-05, 7.499999999999868e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.958" endtime="20201117 14:41:41.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.954" endtime="20201117 14:41:41.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.963" endtime="20201117 14:41:41.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.966" endtime="20201117 14:41:41.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.965" endtime="20201117 14:41:41.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.961" endtime="20201117 14:41:41.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.595" endtime="20201117 14:41:41.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.202" endtime="20201117 14:41:41.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.201" endtime="20201117 14:41:41.987"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.990" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.998" endtime="20201117 14:41:42.016"></status>
</kw>
<msg timestamp="20201117 14:41:42.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.996" endtime="20201117 14:41:42.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.017" endtime="20201117 14:41:42.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.020" endtime="20201117 14:41:42.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.994" endtime="20201117 14:41:42.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.992" endtime="20201117 14:41:42.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.029" endtime="20201117 14:41:42.315"></status>
</kw>
<msg timestamp="20201117 14:41:42.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025049847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.027" endtime="20201117 14:41:42.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025049847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.319" endtime="20201117 14:41:42.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.327" endtime="20201117 14:41:42.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.025" endtime="20201117 14:41:42.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.023" endtime="20201117 14:41:42.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.334" level="INFO">${RESULT} = [{'time': 0.025049847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.69029999999997e-05, 'source_diff': 7.69029999999997e-05}, {'time': 0.025130681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:42.331" endtime="20201117 14:41:42.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.349" level="INFO">${ACCURACY} = {'source_diff': [7.69029999999997e-05, 7.561199999999921e-05, 7.597200000000054e-05, 7.634699999999744e-05, 7.599999999999968e-05, 7.594399999999793e-05, 7.595800000000097e-05, 7.600000000000315e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:42.335" endtime="20201117 14:41:42.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.354" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.353" endtime="20201117 14:41:42.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.356" level="INFO">VALUE: [7.69029999999997e-05, 7.561199999999921e-05, 7.597200000000054e-05, 7.634699999999744e-05, 7.599999999999968e-05, 7.594399999999793e-05, 7.595800000000097e-05, 7.600000000000315e-05, 7.602799999999882e-05, 7.609799999999667e-05, 7.598600000000011e-05, 7.612500000000327e-05, 7.597200000000054e-05, 7.577800000000204e-05, 7.572200000000029e-05, 7.593099999999783e-05, 7.580600000000118e-05, 7.609800000000014e-05, 7.611199999999971e-05, 7.573599999999986e-05, 7.579200000000161e-05, 7.62639999999995e-05, 7.602799999999882e-05, 7.602699999999935e-05, 7.592999999999836e-05, 7.57769999999991e-05, 7.57769999999991e-05, 7.608299999999762e-05, 7.595800000000097e-05, 7.598600000000011e-05, 7.606900000000152e-05, 7.624999999999993e-05, 7.579200000000161e-05, 7.622300000000026e-05, 7.588899999999912e-05, 7.629199999999864e-05, 7.611100000000023e-05, 7.618100000000155e-05, 7.582000000000075e-05, 7.591700000000173e-05, 7.605600000000143e-05, 7.587499999999955e-05, 7.62639999999995e-05, 7.609800000000014e-05, 7.620799999999775e-05, 7.591599999999879e-05, 7.61379999999999e-05, 7.611100000000023e-05, 7.591599999999879e-05, 7.5763999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.355" endtime="20201117 14:41:42.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.350" endtime="20201117 14:41:42.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.359" endtime="20201117 14:41:42.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.363" endtime="20201117 14:41:42.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.361" endtime="20201117 14:41:42.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.358" endtime="20201117 14:41:42.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.990" endtime="20201117 14:41:42.384"></status>
</kw>
<msg timestamp="20201117 14:41:42.384" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.392" endtime="20201117 14:41:42.409"></status>
</kw>
<msg timestamp="20201117 14:41:42.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.390" endtime="20201117 14:41:42.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.410" endtime="20201117 14:41:42.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.413" endtime="20201117 14:41:42.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.388" endtime="20201117 14:41:42.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.386" endtime="20201117 14:41:42.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.423" endtime="20201117 14:41:42.709"></status>
</kw>
<msg timestamp="20201117 14:41:42.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.421" endtime="20201117 14:41:42.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.713" endtime="20201117 14:41:42.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.722" endtime="20201117 14:41:42.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.419" endtime="20201117 14:41:42.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.417" endtime="20201117 14:41:42.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.729" level="INFO">${RESULT} = [{'time': 0.021570458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.730499999999974e-05, 'source_diff': 7.730499999999974e-05}, {'time': 0.021652292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.725" endtime="20201117 14:41:42.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.742" level="INFO">${ACCURACY} = {'source_diff': [7.730499999999974e-05, 7.641699999999876e-05, 7.599999999999968e-05, 7.590199999999922e-05, 7.576299999999953e-05, 7.605500000000195e-05, 7.60969999999972e-05, 7.611100000000023e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:42.730" endtime="20201117 14:41:42.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.747" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.746" endtime="20201117 14:41:42.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.749" level="INFO">VALUE: [7.730499999999974e-05, 7.641699999999876e-05, 7.599999999999968e-05, 7.590199999999922e-05, 7.576299999999953e-05, 7.605500000000195e-05, 7.60969999999972e-05, 7.611100000000023e-05, 7.583300000000084e-05, 7.600000000000315e-05, 7.580499999999823e-05, 7.587499999999955e-05, 7.584700000000041e-05, 7.580599999999771e-05, 7.580600000000118e-05, 7.615299999999894e-05, 7.584799999999989e-05, 7.593099999999783e-05, 7.611100000000023e-05, 7.598600000000011e-05, 7.6070000000001e-05, 7.609700000000066e-05, 7.618000000000208e-05, 7.5763999999999e-05, 7.577799999999857e-05, 7.601400000000272e-05, 7.584700000000041e-05, 7.573599999999986e-05, 7.604100000000238e-05, 7.60969999999972e-05, 7.598600000000011e-05, 7.597200000000054e-05, 7.601400000000272e-05, 7.577799999999857e-05, 7.572200000000029e-05, 7.620800000000122e-05, 7.59579999999975e-05, 7.606899999999805e-05, 7.618100000000155e-05, 7.624999999999993e-05, 7.616699999999851e-05, 7.5763999999999e-05, 7.58890000000026e-05, 7.579199999999814e-05, 7.629199999999864e-05, 7.580600000000118e-05, 7.577799999999857e-05, 7.615199999999947e-05, 7.5763000000003e-05, 7.572200000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.748" endtime="20201117 14:41:42.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.743" endtime="20201117 14:41:42.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.753" endtime="20201117 14:41:42.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.756" endtime="20201117 14:41:42.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.754" endtime="20201117 14:41:42.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.751" endtime="20201117 14:41:42.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.384" endtime="20201117 14:41:42.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.989" endtime="20201117 14:41:42.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.988" endtime="20201117 14:41:42.777"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.779" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.788" endtime="20201117 14:41:42.805"></status>
</kw>
<msg timestamp="20201117 14:41:42.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.786" endtime="20201117 14:41:42.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.807" endtime="20201117 14:41:42.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.810" endtime="20201117 14:41:42.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.783" endtime="20201117 14:41:42.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.781" endtime="20201117 14:41:42.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.819" endtime="20201117 14:41:43.105"></status>
</kw>
<msg timestamp="20201117 14:41:43.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024500764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.818" endtime="20201117 14:41:43.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024500764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.109" endtime="20201117 14:41:43.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.117" endtime="20201117 14:41:43.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.815" endtime="20201117 14:41:43.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.813" endtime="20201117 14:41:43.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.124" level="INFO">${RESULT} = [{'time': 0.024500764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.808299999999962e-05, 'source_diff': 7.808299999999962e-05}, {'time': 0.024583597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:43.120" endtime="20201117 14:41:43.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.137" level="INFO">${ACCURACY} = {'source_diff': [7.808299999999962e-05, 7.712499999999733e-05, 7.711100000000123e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.705599999999896e-05, 7.666700000000248e-05, 7.698600000000111e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:43.125" endtime="20201117 14:41:43.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.142" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.141" endtime="20201117 14:41:43.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.144" level="INFO">VALUE: [7.808299999999962e-05, 7.712499999999733e-05, 7.711100000000123e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.705599999999896e-05, 7.666700000000248e-05, 7.698600000000111e-05, 7.69029999999997e-05, 7.695900000000144e-05, 7.675000000000043e-05, 7.684800000000089e-05, 7.708299999999862e-05, 7.695899999999797e-05, 7.691699999999926e-05, 7.694399999999893e-05, 7.67770000000001e-05, 7.713900000000037e-05, 7.68189999999988e-05, 7.705599999999896e-05, 7.727800000000007e-05, 7.687500000000055e-05, 7.700000000000068e-05, 7.716699999999951e-05, 7.697200000000154e-05, 7.677799999999957e-05, 7.68189999999988e-05, 7.683299999999837e-05, 7.722200000000179e-05, 7.706999999999853e-05, 7.720899999999822e-05, 7.698600000000111e-05, 7.716699999999951e-05, 7.695900000000144e-05, 7.715299999999994e-05, 7.70839999999981e-05, 7.719399999999918e-05, 7.726300000000103e-05, 7.719400000000265e-05, 7.724999999999746e-05, 7.692999999999936e-05, 7.686100000000098e-05, 7.708299999999862e-05, 7.711100000000123e-05, 7.686100000000098e-05, 7.683300000000184e-05, 7.716699999999951e-05, 7.715299999999994e-05, 7.716699999999951e-05, 7.698599999999764e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.143" endtime="20201117 14:41:43.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.138" endtime="20201117 14:41:43.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.147" endtime="20201117 14:41:43.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.151" endtime="20201117 14:41:43.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.149" endtime="20201117 14:41:43.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.146" endtime="20201117 14:41:43.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.780" endtime="20201117 14:41:43.172"></status>
</kw>
<msg timestamp="20201117 14:41:43.172" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.180" endtime="20201117 14:41:43.198"></status>
</kw>
<msg timestamp="20201117 14:41:43.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.178" endtime="20201117 14:41:43.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.199" endtime="20201117 14:41:43.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.202" endtime="20201117 14:41:43.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.176" endtime="20201117 14:41:43.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.174" endtime="20201117 14:41:43.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.218" endtime="20201117 14:41:43.504"></status>
</kw>
<msg timestamp="20201117 14:41:43.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021563819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.216" endtime="20201117 14:41:43.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021563819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.508" endtime="20201117 14:41:43.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.516" endtime="20201117 14:41:43.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.214" endtime="20201117 14:41:43.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.212" endtime="20201117 14:41:43.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.523" level="INFO">${RESULT} = [{'time': 0.021563819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.81380000000019e-05, 'source_diff': 7.81380000000019e-05}, {'time': 0.021646653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:43.519" endtime="20201117 14:41:43.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.536" level="INFO">${ACCURACY} = {'source_diff': [7.81380000000019e-05, 7.718099999999908e-05, 7.709800000000114e-05, 7.72640000000005e-05, 7.729199999999964e-05, 7.720899999999822e-05, 7.706899999999905e-05, 7.68189999999988e-05, 7....</msg>
<status status="PASS" starttime="20201117 14:41:43.524" endtime="20201117 14:41:43.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.541" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.540" endtime="20201117 14:41:43.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.543" level="INFO">VALUE: [7.81380000000019e-05, 7.718099999999908e-05, 7.709800000000114e-05, 7.72640000000005e-05, 7.729199999999964e-05, 7.720899999999822e-05, 7.706899999999905e-05, 7.68189999999988e-05, 7.691599999999979e-05, 7.690200000000022e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.711100000000123e-05, 7.679199999999914e-05, 7.697200000000154e-05, 7.672199999999782e-05, 7.700000000000068e-05, 7.715299999999994e-05, 7.708299999999862e-05, 7.711100000000123e-05, 7.681999999999828e-05, 7.715299999999994e-05, 7.693099999999883e-05, 7.683399999999785e-05, 7.704199999999939e-05, 7.69579999999985e-05, 7.688900000000012e-05, 7.705499999999949e-05, 7.6764e-05, 7.681900000000227e-05, 7.701300000000078e-05, 7.727800000000007e-05, 7.723600000000136e-05, 7.679100000000313e-05, 7.680499999999923e-05, 7.698599999999764e-05, 7.713900000000037e-05, 7.688900000000012e-05, 7.727800000000007e-05, 7.697200000000154e-05, 7.704200000000286e-05, 7.668100000000205e-05, 7.708299999999862e-05, 7.725000000000093e-05, 7.695899999999797e-05, 7.71250000000008e-05, 7.673600000000086e-05, 7.681900000000227e-05, 7.729100000000017e-05, 7.697200000000154e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.542" endtime="20201117 14:41:43.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.537" endtime="20201117 14:41:43.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.546" endtime="20201117 14:41:43.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.550" endtime="20201117 14:41:43.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.548" endtime="20201117 14:41:43.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.545" endtime="20201117 14:41:43.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.172" endtime="20201117 14:41:43.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.778" endtime="20201117 14:41:43.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.777" endtime="20201117 14:41:43.571"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.573" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.582" endtime="20201117 14:41:43.601"></status>
</kw>
<msg timestamp="20201117 14:41:43.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.580" endtime="20201117 14:41:43.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.602" endtime="20201117 14:41:43.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.605" endtime="20201117 14:41:43.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.577" endtime="20201117 14:41:43.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.575" endtime="20201117 14:41:43.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.614" endtime="20201117 14:41:43.898"></status>
</kw>
<msg timestamp="20201117 14:41:43.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025324833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.612" endtime="20201117 14:41:43.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025324833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.902" endtime="20201117 14:41:43.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.911" endtime="20201117 14:41:43.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.610" endtime="20201117 14:41:43.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.608" endtime="20201117 14:41:43.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.917" level="INFO">${RESULT} = [{'time': 0.025324833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.843000000000086e-05, 'source_diff': 7.843000000000086e-05}, {'time': 0.025408653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:43.914" endtime="20201117 14:41:43.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.932" level="INFO">${ACCURACY} = {'source_diff': [7.843000000000086e-05, 7.801400000000125e-05, 7.788900000000112e-05, 7.82229999999988e-05, 7.784799999999842e-05, 7.815300000000094e-05, 7.788800000000165e-05, 7.819499999999965e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:43.918" endtime="20201117 14:41:43.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.937" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.936" endtime="20201117 14:41:43.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.939" level="INFO">VALUE: [7.843000000000086e-05, 7.801400000000125e-05, 7.788900000000112e-05, 7.82229999999988e-05, 7.784799999999842e-05, 7.815300000000094e-05, 7.788800000000165e-05, 7.819499999999965e-05, 7.790200000000122e-05, 7.827800000000107e-05, 7.816600000000104e-05, 7.822199999999932e-05, 7.806900000000006e-05, 7.80969999999992e-05, 7.798600000000211e-05, 7.775000000000143e-05, 7.827699999999813e-05, 7.798599999999864e-05, 7.827800000000107e-05, 7.790299999999722e-05, 7.805599999999996e-05, 7.788900000000112e-05, 7.788900000000112e-05, 7.802800000000082e-05, 7.819499999999965e-05, 7.783299999999937e-05, 7.793099999999983e-05, 7.780500000000024e-05, 7.801400000000125e-05, 7.80129999999983e-05, 7.820800000000322e-05, 7.818000000000061e-05, 7.794399999999993e-05, 7.827800000000107e-05, 7.808299999999962e-05, 7.779200000000014e-05, 7.774999999999796e-05, 7.797199999999907e-05, 7.802800000000082e-05, 7.825000000000193e-05, 7.827800000000107e-05, 7.765300000000044e-05, 7.786099999999851e-05, 7.788900000000112e-05, 7.823699999999836e-05, 7.784799999999842e-05, 7.795800000000297e-05, 7.800000000000168e-05, 7.798600000000211e-05, 7.797199999999907e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.938" endtime="20201117 14:41:43.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.933" endtime="20201117 14:41:43.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.942" endtime="20201117 14:41:43.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.946" endtime="20201117 14:41:43.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.944" endtime="20201117 14:41:43.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.941" endtime="20201117 14:41:43.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.574" endtime="20201117 14:41:43.966"></status>
</kw>
<msg timestamp="20201117 14:41:43.967" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.975" endtime="20201117 14:41:43.993"></status>
</kw>
<msg timestamp="20201117 14:41:43.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.974" endtime="20201117 14:41:43.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.994" endtime="20201117 14:41:43.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.997" endtime="20201117 14:41:43.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.971" endtime="20201117 14:41:44.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.969" endtime="20201117 14:41:44.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.007" endtime="20201117 14:41:44.292"></status>
</kw>
<msg timestamp="20201117 14:41:44.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:44.006" endtime="20201117 14:41:44.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:44.296" endtime="20201117 14:41:44.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.304" endtime="20201117 14:41:44.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.003" endtime="20201117 14:41:44.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.001" endtime="20201117 14:41:44.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.311" level="INFO">${RESULT} = [{'time': 0.021946, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.876399999999853e-05, 'source_diff': 7.876399999999853e-05}, {'time': 0.022029833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:44.307" endtime="20201117 14:41:44.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.324" level="INFO">${ACCURACY} = {'source_diff': [7.876399999999853e-05, 7.804099999999745e-05, 7.788900000000112e-05, 7.802800000000082e-05, 7.829200000000064e-05, 7.78189999999998e-05, 7.79030000000007e-05, 7.79030000000007e-05, 7....</msg>
<status status="PASS" starttime="20201117 14:41:44.312" endtime="20201117 14:41:44.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.329" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.328" endtime="20201117 14:41:44.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.331" level="INFO">VALUE: [7.876399999999853e-05, 7.804099999999745e-05, 7.788900000000112e-05, 7.802800000000082e-05, 7.829200000000064e-05, 7.78189999999998e-05, 7.79030000000007e-05, 7.79030000000007e-05, 7.776399999999753e-05, 7.783299999999937e-05, 7.783300000000284e-05, 7.788900000000112e-05, 7.800000000000168e-05, 7.820899999999922e-05, 7.799999999999821e-05, 7.79030000000007e-05, 7.777800000000057e-05, 7.82640000000015e-05, 7.811099999999876e-05, 7.783300000000284e-05, 7.802700000000135e-05, 7.806900000000006e-05, 7.786100000000198e-05, 7.815200000000147e-05, 7.815299999999747e-05, 7.820799999999975e-05, 7.775000000000143e-05, 7.793099999999983e-05, 7.786100000000198e-05, 7.79449999999994e-05, 7.808299999999962e-05, 7.774999999999796e-05, 7.770799999999925e-05, 7.795899999999897e-05, 7.829200000000064e-05, 7.829200000000064e-05, 7.765300000000044e-05, 7.80839999999991e-05, 7.787499999999808e-05, 7.80969999999992e-05, 7.77770000000011e-05, 7.81389999999979e-05, 7.780500000000024e-05, 7.784699999999894e-05, 7.808299999999962e-05, 7.819400000000018e-05, 7.819400000000018e-05, 7.801399999999778e-05, 7.777800000000057e-05, 7.815299999999747e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.330" endtime="20201117 14:41:44.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.325" endtime="20201117 14:41:44.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.335" endtime="20201117 14:41:44.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.338" endtime="20201117 14:41:44.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.337" endtime="20201117 14:41:44.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.333" endtime="20201117 14:41:44.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.968" endtime="20201117 14:41:44.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.572" endtime="20201117 14:41:44.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.571" endtime="20201117 14:41:44.360"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.362" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.370" endtime="20201117 14:41:44.388"></status>
</kw>
<msg timestamp="20201117 14:41:44.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.369" endtime="20201117 14:41:44.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.390" endtime="20201117 14:41:44.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.392" endtime="20201117 14:41:44.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.366" endtime="20201117 14:41:44.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.364" endtime="20201117 14:41:44.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.401" endtime="20201117 14:41:44.687"></status>
</kw>
<msg timestamp="20201117 14:41:44.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024096236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.400" endtime="20201117 14:41:44.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024096236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.691" endtime="20201117 14:41:44.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.699" endtime="20201117 14:41:44.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.397" endtime="20201117 14:41:44.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.395" endtime="20201117 14:41:44.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.706" level="INFO">${RESULT} = [{'time': 0.024176389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.015299999999947e-05, 'source_diff': 8.015299999999947e-05}, {'time': 0.024261208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:44.702" endtime="20201117 14:41:44.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.719" level="INFO">${ACCURACY} = {'source_diff': [8.015299999999947e-05, 7.917999999999814e-05, 7.923599999999989e-05, 7.908300000000063e-05, 7.922200000000032e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.898599999999964e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:44.707" endtime="20201117 14:41:44.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.724" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.723" endtime="20201117 14:41:44.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.726" level="INFO">VALUE: [8.015299999999947e-05, 7.917999999999814e-05, 7.923599999999989e-05, 7.908300000000063e-05, 7.922200000000032e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.898599999999964e-05, 7.911099999999976e-05, 7.897200000000007e-05, 7.907000000000053e-05, 7.92640000000025e-05, 7.911099999999976e-05, 7.89450000000004e-05, 7.905600000000096e-05, 7.886199999999899e-05, 7.899999999999921e-05, 7.89450000000004e-05, 7.925000000000293e-05, 7.877699999999863e-05, 7.876399999999853e-05, 7.905500000000149e-05, 7.920800000000075e-05, 7.888900000000212e-05, 7.874999999999896e-05, 7.87779999999981e-05, 7.895899999999997e-05, 7.902799999999835e-05, 7.908300000000063e-05, 7.90970000000002e-05, 7.87779999999981e-05, 7.911200000000271e-05, 7.893099999999736e-05, 7.926399999999903e-05, 7.911099999999976e-05, 7.924999999999946e-05, 7.918100000000108e-05, 7.915299999999847e-05, 7.906899999999759e-05, 7.920800000000075e-05, 7.893100000000083e-05, 7.891600000000179e-05, 7.919400000000118e-05, 7.888899999999865e-05, 7.922200000000032e-05, 7.89580000000005e-05, 7.88190000000008e-05, 7.901400000000225e-05, 7.881899999999734e-05, 7.904199999999792e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.725" endtime="20201117 14:41:44.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.720" endtime="20201117 14:41:44.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.730" endtime="20201117 14:41:44.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.734" endtime="20201117 14:41:44.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.732" endtime="20201117 14:41:44.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.728" endtime="20201117 14:41:44.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.363" endtime="20201117 14:41:44.755"></status>
</kw>
<msg timestamp="20201117 14:41:44.755" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.763" endtime="20201117 14:41:44.781"></status>
</kw>
<msg timestamp="20201117 14:41:44.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.762" endtime="20201117 14:41:44.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.782" endtime="20201117 14:41:44.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.785" endtime="20201117 14:41:44.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.759" endtime="20201117 14:41:44.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.757" endtime="20201117 14:41:44.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.795" endtime="20201117 14:41:45.080"></status>
</kw>
<msg timestamp="20201117 14:41:45.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.793" endtime="20201117 14:41:45.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.084" endtime="20201117 14:41:45.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.092" endtime="20201117 14:41:45.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.791" endtime="20201117 14:41:45.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.789" endtime="20201117 14:41:45.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.099" level="INFO">${RESULT} = [{'time': 0.021764361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.952799999999885e-05, 'source_diff': 7.952799999999885e-05}, {'time': 0.021849208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.096" endtime="20201117 14:41:45.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.112" level="INFO">${ACCURACY} = {'source_diff': [7.952799999999885e-05, 7.91389999999989e-05, 7.905499999999802e-05, 7.923599999999989e-05, 7.90970000000002e-05, 7.869400000000068e-05, 7.92640000000025e-05, 7.906899999999759e-05, 7....</msg>
<status status="PASS" starttime="20201117 14:41:45.100" endtime="20201117 14:41:45.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.117" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.116" endtime="20201117 14:41:45.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.119" level="INFO">VALUE: [7.952799999999885e-05, 7.91389999999989e-05, 7.905499999999802e-05, 7.923599999999989e-05, 7.90970000000002e-05, 7.869400000000068e-05, 7.92640000000025e-05, 7.906899999999759e-05, 7.905600000000096e-05, 7.888899999999865e-05, 7.926399999999903e-05, 7.876399999999853e-05, 7.875000000000243e-05, 7.92640000000025e-05, 7.874999999999896e-05, 7.898699999999911e-05, 7.886099999999951e-05, 7.913799999999943e-05, 7.900000000000268e-05, 7.888900000000212e-05, 7.929200000000164e-05, 7.897200000000007e-05, 7.874999999999896e-05, 7.904100000000192e-05, 7.902800000000182e-05, 7.922199999999685e-05, 7.884699999999994e-05, 7.88190000000008e-05, 7.884699999999994e-05, 7.886099999999951e-05, 7.880600000000071e-05, 7.89580000000005e-05, 7.89169999999978e-05, 7.90840000000001e-05, 7.915299999999847e-05, 7.882000000000028e-05, 7.920900000000022e-05, 7.883300000000037e-05, 7.882000000000028e-05, 7.876399999999853e-05, 7.87909999999982e-05, 7.929100000000217e-05, 7.901400000000225e-05, 7.911099999999976e-05, 7.883300000000037e-05, 7.906900000000106e-05, 7.893100000000083e-05, 7.883300000000037e-05, 7.883300000000037e-05, 7.884700000000341e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.118" endtime="20201117 14:41:45.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.113" endtime="20201117 14:41:45.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.123" endtime="20201117 14:41:45.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.126" endtime="20201117 14:41:45.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.125" endtime="20201117 14:41:45.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.121" endtime="20201117 14:41:45.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.756" endtime="20201117 14:41:45.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.361" endtime="20201117 14:41:45.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.360" endtime="20201117 14:41:45.148"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.150" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.158" endtime="20201117 14:41:45.177"></status>
</kw>
<msg timestamp="20201117 14:41:45.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.157" endtime="20201117 14:41:45.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.178" endtime="20201117 14:41:45.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.181" endtime="20201117 14:41:45.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.154" endtime="20201117 14:41:45.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.152" endtime="20201117 14:41:45.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.190" endtime="20201117 14:41:45.475"></status>
</kw>
<msg timestamp="20201117 14:41:45.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.188" endtime="20201117 14:41:45.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.480" endtime="20201117 14:41:45.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.488" endtime="20201117 14:41:45.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.186" endtime="20201117 14:41:45.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.184" endtime="20201117 14:41:45.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.495" level="INFO">${RESULT} = [{'time': 0.024893528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.051400000000028e-05, 'source_diff': 8.051400000000028e-05}, {'time': 0.024979347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.491" endtime="20201117 14:41:45.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.509" level="INFO">${ACCURACY} = {'source_diff': [8.051400000000028e-05, 8.036099999999755e-05, 7.984700000000094e-05, 8.01389999999999e-05, 7.99580000000015e-05, 8.012500000000033e-05, 7.990299999999922e-05, 8.015299999999947e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:41:45.495" endtime="20201117 14:41:45.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.514" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.513" endtime="20201117 14:41:45.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.517" level="INFO">VALUE: [8.051400000000028e-05, 8.036099999999755e-05, 7.984700000000094e-05, 8.01389999999999e-05, 7.99580000000015e-05, 8.012500000000033e-05, 7.990299999999922e-05, 8.015299999999947e-05, 7.974999999999996e-05, 7.990299999999922e-05, 8.012500000000033e-05, 8.001399999999978e-05, 8.01109999999973e-05, 7.97230000000003e-05, 8.011200000000024e-05, 7.972200000000082e-05, 8.02909999999997e-05, 7.988899999999965e-05, 8.02779999999996e-05, 8.017999999999914e-05, 8.000000000000021e-05, 7.998599999999717e-05, 7.990299999999922e-05, 8.018099999999861e-05, 7.99580000000015e-05, 8.002799999999935e-05, 7.998600000000064e-05, 7.974999999999996e-05, 8.011100000000076e-05, 7.984800000000042e-05, 7.987500000000008e-05, 7.97230000000003e-05, 8.029199999999917e-05, 7.977699999999963e-05, 7.983399999999738e-05, 8.013800000000043e-05, 8.019399999999871e-05, 8.006899999999859e-05, 7.988899999999965e-05, 8.005499999999902e-05, 7.984700000000094e-05, 7.974999999999996e-05, 8.002799999999935e-05, 7.972199999999735e-05, 8.026400000000003e-05, 7.993099999999836e-05, 7.990299999999922e-05, 7.993100000000183e-05, 7.965299999999897e-05, 8.004200000000239e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.515" endtime="20201117 14:41:45.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.510" endtime="20201117 14:41:45.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.520" endtime="20201117 14:41:45.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.524" endtime="20201117 14:41:45.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.522" endtime="20201117 14:41:45.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.518" endtime="20201117 14:41:45.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.151" endtime="20201117 14:41:45.544"></status>
</kw>
<msg timestamp="20201117 14:41:45.544" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.553" endtime="20201117 14:41:45.570"></status>
</kw>
<msg timestamp="20201117 14:41:45.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.551" endtime="20201117 14:41:45.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.571" endtime="20201117 14:41:45.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.574" endtime="20201117 14:41:45.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.549" endtime="20201117 14:41:45.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.546" endtime="20201117 14:41:45.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.584" endtime="20201117 14:41:45.869"></status>
</kw>
<msg timestamp="20201117 14:41:45.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.582" endtime="20201117 14:41:45.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.873" endtime="20201117 14:41:45.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.881" endtime="20201117 14:41:45.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.580" endtime="20201117 14:41:45.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.578" endtime="20201117 14:41:45.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.888" level="INFO">${RESULT} = [{'time': 0.021611014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.036100000000101e-05, 'source_diff': 8.036100000000101e-05}, {'time': 0.021696847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.885" endtime="20201117 14:41:45.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.902" level="INFO">${ACCURACY} = {'source_diff': [8.036100000000101e-05, 8.023599999999742e-05, 8.005499999999902e-05, 7.984700000000094e-05, 8.018099999999861e-05, 8.002799999999935e-05, 7.986100000000051e-05, 8.020800000000175e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:45.889" endtime="20201117 14:41:45.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.907" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.906" endtime="20201117 14:41:45.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.909" level="INFO">VALUE: [8.036100000000101e-05, 8.023599999999742e-05, 8.005499999999902e-05, 7.984700000000094e-05, 8.018099999999861e-05, 8.002799999999935e-05, 7.986100000000051e-05, 8.020800000000175e-05, 7.994499999999793e-05, 8.004199999999892e-05, 7.974999999999996e-05, 7.997300000000054e-05, 7.988899999999965e-05, 8.029200000000264e-05, 8.005600000000196e-05, 7.986100000000051e-05, 8.025000000000046e-05, 7.972200000000082e-05, 8.02909999999997e-05, 7.994399999999846e-05, 7.976399999999953e-05, 8.022200000000132e-05, 8.008299999999816e-05, 8.000000000000021e-05, 7.987500000000008e-05, 7.976399999999953e-05, 7.970799999999778e-05, 8.011100000000076e-05, 7.96389999999994e-05, 8.02230000000008e-05, 8.024999999999699e-05, 7.979199999999867e-05, 7.997300000000054e-05, 7.984800000000042e-05, 7.984800000000042e-05, 7.998700000000011e-05, 7.984700000000094e-05, 8.0152e-05, 7.997200000000107e-05, 8.02779999999996e-05, 7.98190000000018e-05, 8.016599999999957e-05, 7.983300000000138e-05, 8.019399999999871e-05, 7.994499999999793e-05, 8.002799999999935e-05, 7.987500000000008e-05, 8.002699999999988e-05, 7.980599999999824e-05, 7.980599999999824e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.908" endtime="20201117 14:41:45.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.903" endtime="20201117 14:41:45.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.912" endtime="20201117 14:41:45.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.916" endtime="20201117 14:41:45.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.914" endtime="20201117 14:41:45.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.911" endtime="20201117 14:41:45.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.545" endtime="20201117 14:41:45.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.149" endtime="20201117 14:41:45.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.148" endtime="20201117 14:41:45.937"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.939" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.947" endtime="20201117 14:41:45.965"></status>
</kw>
<msg timestamp="20201117 14:41:45.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.946" endtime="20201117 14:41:45.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.967" endtime="20201117 14:41:45.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.970" endtime="20201117 14:41:45.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.943" endtime="20201117 14:41:45.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.941" endtime="20201117 14:41:45.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.979" endtime="20201117 14:41:46.265"></status>
</kw>
<msg timestamp="20201117 14:41:46.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024049264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.977" endtime="20201117 14:41:46.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024049264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.269" endtime="20201117 14:41:46.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.277" endtime="20201117 14:41:46.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.974" endtime="20201117 14:41:46.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.973" endtime="20201117 14:41:46.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.284" level="INFO">${RESULT} = [{'time': 0.024049264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.232000000000031e-05, 'source_diff': 8.232000000000031e-05}, {'time': 0.024136097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.281" endtime="20201117 14:41:46.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.298" level="INFO">${ACCURACY} = {'source_diff': [8.232000000000031e-05, 8.140299999999726e-05, 8.104100000000045e-05, 8.109699999999873e-05, 8.112499999999787e-05, 8.123600000000189e-05, 8.119499999999918e-05, 8.069499999999868e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:46.285" endtime="20201117 14:41:46.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.303" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.302" endtime="20201117 14:41:46.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.305" level="INFO">VALUE: [8.232000000000031e-05, 8.140299999999726e-05, 8.104100000000045e-05, 8.109699999999873e-05, 8.112499999999787e-05, 8.123600000000189e-05, 8.119499999999918e-05, 8.069499999999868e-05, 8.116700000000004e-05, 8.10970000000022e-05, 8.098600000000164e-05, 8.112500000000133e-05, 8.119499999999918e-05, 8.070900000000172e-05, 8.097200000000207e-05, 8.120899999999875e-05, 8.126299999999809e-05, 8.126400000000103e-05, 8.091600000000032e-05, 8.123599999999842e-05, 8.108299999999916e-05, 8.112500000000133e-05, 8.070799999999878e-05, 8.072199999999835e-05, 8.115300000000047e-05, 8.11390000000009e-05, 8.119499999999918e-05, 8.075000000000096e-05, 8.070899999999825e-05, 8.075000000000096e-05, 8.101400000000078e-05, 8.130500000000027e-05, 8.084800000000142e-05, 8.111200000000124e-05, 8.106999999999906e-05, 8.124999999999799e-05, 8.123599999999842e-05, 8.077700000000063e-05, 8.109699999999873e-05, 8.106899999999959e-05, 8.077799999999663e-05, 8.097200000000207e-05, 8.065299999999997e-05, 8.090300000000022e-05, 8.11109999999983e-05, 8.072200000000182e-05, 8.118099999999961e-05, 8.093099999999936e-05, 8.126400000000103e-05, 8.076400000000053e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.304" endtime="20201117 14:41:46.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.299" endtime="20201117 14:41:46.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.308" endtime="20201117 14:41:46.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.312" endtime="20201117 14:41:46.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.310" endtime="20201117 14:41:46.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.307" endtime="20201117 14:41:46.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.940" endtime="20201117 14:41:46.332"></status>
</kw>
<msg timestamp="20201117 14:41:46.333" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.341" endtime="20201117 14:41:46.359"></status>
</kw>
<msg timestamp="20201117 14:41:46.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.339" endtime="20201117 14:41:46.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.360" endtime="20201117 14:41:46.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.363" endtime="20201117 14:41:46.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.337" endtime="20201117 14:41:46.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.335" endtime="20201117 14:41:46.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.373" endtime="20201117 14:41:46.658"></status>
</kw>
<msg timestamp="20201117 14:41:46.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.371" endtime="20201117 14:41:46.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.662" endtime="20201117 14:41:46.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.671" endtime="20201117 14:41:46.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.369" endtime="20201117 14:41:46.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.367" endtime="20201117 14:41:46.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.677" level="INFO">${RESULT} = [{'time': 0.021673417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.151400000000128e-05, 'source_diff': 8.151400000000128e-05}, {'time': 0.021760278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.674" endtime="20201117 14:41:46.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.691" level="INFO">${ACCURACY} = {'source_diff': [8.151400000000128e-05, 8.120900000000222e-05, 8.084700000000195e-05, 8.09169999999998e-05, 8.083399999999838e-05, 8.090300000000022e-05, 8.125000000000146e-05, 8.116700000000004e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:46.678" endtime="20201117 14:41:46.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.695" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.694" endtime="20201117 14:41:46.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.698" level="INFO">VALUE: [8.151400000000128e-05, 8.120900000000222e-05, 8.084700000000195e-05, 8.09169999999998e-05, 8.083399999999838e-05, 8.090300000000022e-05, 8.125000000000146e-05, 8.116700000000004e-05, 8.090299999999676e-05, 8.075000000000096e-05, 8.102700000000088e-05, 8.091600000000032e-05, 8.123600000000189e-05, 8.098600000000164e-05, 8.080499999999977e-05, 8.07780000000001e-05, 8.11659999999971e-05, 8.098600000000164e-05, 8.072200000000182e-05, 8.090300000000022e-05, 8.073599999999792e-05, 8.072200000000182e-05, 8.100000000000121e-05, 8.115300000000047e-05, 8.131899999999984e-05, 8.131999999999931e-05, 8.108399999999863e-05, 8.126399999999756e-05, 8.07780000000001e-05, 8.094499999999893e-05, 8.12910000000007e-05, 8.059699999999823e-05, 8.090200000000075e-05, 8.123600000000189e-05, 8.065299999999997e-05, 8.129200000000017e-05, 8.120800000000275e-05, 8.116700000000004e-05, 8.087500000000108e-05, 8.111100000000177e-05, 8.088900000000065e-05, 8.093099999999936e-05, 8.109699999999873e-05, 8.094499999999893e-05, 8.115300000000047e-05, 8.079199999999967e-05, 8.129200000000017e-05, 8.101399999999731e-05, 8.088900000000065e-05, 8.076400000000053e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.697" endtime="20201117 14:41:46.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.692" endtime="20201117 14:41:46.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.701" endtime="20201117 14:41:46.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.705" endtime="20201117 14:41:46.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.703" endtime="20201117 14:41:46.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.700" endtime="20201117 14:41:46.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.333" endtime="20201117 14:41:46.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.938" endtime="20201117 14:41:46.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.937" endtime="20201117 14:41:46.726"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.728" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.736" endtime="20201117 14:41:46.756"></status>
</kw>
<msg timestamp="20201117 14:41:46.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.735" endtime="20201117 14:41:46.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.757" endtime="20201117 14:41:46.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.760" endtime="20201117 14:41:46.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.732" endtime="20201117 14:41:46.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.730" endtime="20201117 14:41:46.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.770" endtime="20201117 14:41:47.056"></status>
</kw>
<msg timestamp="20201117 14:41:47.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025221, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:46.769" endtime="20201117 14:41:47.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025221, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:47.060" endtime="20201117 14:41:47.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.069" endtime="20201117 14:41:47.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.765" endtime="20201117 14:41:47.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.763" endtime="20201117 14:41:47.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.075" level="INFO">${RESULT} = [{'time': 0.025221, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.244400000000096e-05, 'source_diff': 8.244400000000096e-05}, {'time': 0.025308819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:47.072" endtime="20201117 14:41:47.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.090" level="INFO">${ACCURACY} = {'source_diff': [8.244400000000096e-05, 8.205500000000102e-05, 8.181900000000034e-05, 8.20269999999984e-05, 8.205500000000102e-05, 8.226399999999856e-05, 8.168000000000064e-05, 8.184699999999948e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:47.076" endtime="20201117 14:41:47.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.095" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.094" endtime="20201117 14:41:47.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.097" level="INFO">VALUE: [8.244400000000096e-05, 8.205500000000102e-05, 8.181900000000034e-05, 8.20269999999984e-05, 8.205500000000102e-05, 8.226399999999856e-05, 8.168000000000064e-05, 8.184699999999948e-05, 8.195800000000003e-05, 8.21109999999993e-05, 8.194400000000046e-05, 8.21109999999993e-05, 8.176400000000153e-05, 8.17780000000011e-05, 8.17780000000011e-05, 8.212499999999887e-05, 8.222299999999932e-05, 8.229200000000117e-05, 8.176300000000206e-05, 8.201400000000178e-05, 8.188900000000165e-05, 8.201400000000178e-05, 8.21390000000019e-05, 8.188899999999819e-05, 8.19170000000008e-05, 8.173599999999892e-05, 8.205499999999755e-05, 8.188899999999819e-05, 8.173600000000239e-05, 8.216699999999758e-05, 8.202800000000135e-05, 8.226399999999856e-05, 8.187499999999862e-05, 8.176399999999806e-05, 8.220899999999975e-05, 8.204199999999745e-05, 8.213899999999844e-05, 8.187499999999862e-05, 8.188899999999819e-05, 8.223599999999942e-05, 8.173599999999892e-05, 8.194400000000046e-05, 8.19719999999996e-05, 8.224999999999899e-05, 8.175000000000196e-05, 8.22780000000016e-05, 8.193000000000089e-05, 8.222199999999985e-05, 8.187500000000208e-05, 8.208300000000016e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.096" endtime="20201117 14:41:47.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.091" endtime="20201117 14:41:47.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.100" endtime="20201117 14:41:47.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.104" endtime="20201117 14:41:47.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.102" endtime="20201117 14:41:47.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.099" endtime="20201117 14:41:47.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.729" endtime="20201117 14:41:47.124"></status>
</kw>
<msg timestamp="20201117 14:41:47.125" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.133" endtime="20201117 14:41:47.151"></status>
</kw>
<msg timestamp="20201117 14:41:47.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.131" endtime="20201117 14:41:47.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.152" endtime="20201117 14:41:47.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.155" endtime="20201117 14:41:47.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.129" endtime="20201117 14:41:47.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.127" endtime="20201117 14:41:47.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.165" endtime="20201117 14:41:47.450"></status>
</kw>
<msg timestamp="20201117 14:41:47.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021513792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.164" endtime="20201117 14:41:47.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021513792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.454" endtime="20201117 14:41:47.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.462" endtime="20201117 14:41:47.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.161" endtime="20201117 14:41:47.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.159" endtime="20201117 14:41:47.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.469" level="INFO">${RESULT} = [{'time': 0.021513792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.288899999999919e-05, 'source_diff': 8.288899999999919e-05}, {'time': 0.021601597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.466" endtime="20201117 14:41:47.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.483" level="INFO">${ACCURACY} = {'source_diff': [8.288899999999919e-05, 8.202800000000135e-05, 8.191699999999733e-05, 8.188899999999819e-05, 8.193000000000089e-05, 8.199999999999874e-05, 8.187499999999862e-05, 8.179200000000067e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:47.470" endtime="20201117 14:41:47.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.487" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.486" endtime="20201117 14:41:47.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.490" level="INFO">VALUE: [8.288899999999919e-05, 8.202800000000135e-05, 8.191699999999733e-05, 8.188899999999819e-05, 8.193000000000089e-05, 8.199999999999874e-05, 8.187499999999862e-05, 8.179200000000067e-05, 8.222199999999985e-05, 8.193100000000036e-05, 8.190299999999776e-05, 8.20979999999992e-05, 8.173600000000239e-05, 8.183400000000285e-05, 8.202800000000135e-05, 8.219500000000018e-05, 8.215199999999853e-05, 8.225000000000246e-05, 8.220800000000028e-05, 8.229200000000117e-05, 8.194400000000046e-05, 8.226399999999856e-05, 8.213899999999844e-05, 8.198599999999917e-05, 8.22780000000016e-05, 8.202799999999788e-05, 8.220899999999975e-05, 8.198599999999917e-05, 8.224999999999899e-05, 8.216699999999758e-05, 8.186099999999905e-05, 8.177799999999763e-05, 8.174999999999849e-05, 8.223599999999942e-05, 8.193000000000089e-05, 8.19589999999995e-05, 8.215199999999853e-05, 8.220800000000028e-05, 8.201400000000178e-05, 8.205500000000102e-05, 8.205500000000102e-05, 8.169400000000021e-05, 8.230600000000074e-05, 8.219400000000071e-05, 8.173600000000239e-05, 8.216700000000104e-05, 8.216700000000104e-05, 8.175000000000196e-05, 8.208300000000016e-05, 8.218100000000061e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.488" endtime="20201117 14:41:47.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.484" endtime="20201117 14:41:47.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.493" endtime="20201117 14:41:47.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.496" endtime="20201117 14:41:47.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.495" endtime="20201117 14:41:47.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.491" endtime="20201117 14:41:47.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.125" endtime="20201117 14:41:47.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.727" endtime="20201117 14:41:47.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.726" endtime="20201117 14:41:47.517"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.520" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.528" endtime="20201117 14:41:47.546"></status>
</kw>
<msg timestamp="20201117 14:41:47.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.527" endtime="20201117 14:41:47.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.548" endtime="20201117 14:41:47.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.550" endtime="20201117 14:41:47.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.524" endtime="20201117 14:41:47.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.522" endtime="20201117 14:41:47.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.559" endtime="20201117 14:41:47.846"></status>
</kw>
<msg timestamp="20201117 14:41:47.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.558" endtime="20201117 14:41:47.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.850" endtime="20201117 14:41:47.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.858" endtime="20201117 14:41:47.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.555" endtime="20201117 14:41:47.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.553" endtime="20201117 14:41:47.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.865" level="INFO">${RESULT} = [{'time': 0.024681431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.350000000000024e-05, 'source_diff': 8.350000000000024e-05}, {'time': 0.024770264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.861" endtime="20201117 14:41:47.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.878" level="INFO">${ACCURACY} = {'source_diff': [8.350000000000024e-05, 8.320800000000128e-05, 8.279200000000167e-05, 8.319499999999772e-05, 8.324999999999999e-05, 8.274999999999949e-05, 8.299999999999974e-05, 8.294399999999799e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:47.866" endtime="20201117 14:41:47.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.883" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.882" endtime="20201117 14:41:47.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.885" level="INFO">VALUE: [8.350000000000024e-05, 8.320800000000128e-05, 8.279200000000167e-05, 8.319499999999772e-05, 8.324999999999999e-05, 8.274999999999949e-05, 8.299999999999974e-05, 8.294399999999799e-05, 8.294400000000146e-05, 8.313799999999996e-05, 8.31659999999991e-05, 8.290299999999876e-05, 8.305500000000202e-05, 8.317999999999867e-05, 8.308300000000116e-05, 8.300000000000321e-05, 8.313899999999944e-05, 8.281900000000134e-05, 8.32780000000026e-05, 8.299999999999974e-05, 8.282000000000081e-05, 8.294500000000093e-05, 8.305599999999802e-05, 8.274999999999949e-05, 8.327799999999913e-05, 8.305499999999855e-05, 8.3152999999999e-05, 8.290199999999928e-05, 8.320799999999781e-05, 8.329099999999923e-05, 8.302699999999941e-05, 8.295799999999756e-05, 8.277799999999863e-05, 8.27910000000022e-05, 8.279200000000167e-05, 8.28330000000009e-05, 8.323600000000042e-05, 8.272200000000035e-05, 8.301399999999931e-05, 8.29170000000018e-05, 8.301399999999931e-05, 8.287499999999962e-05, 8.294500000000093e-05, 8.318100000000161e-05, 8.326399999999956e-05, 8.26109999999998e-05, 8.327699999999966e-05, 8.273599999999992e-05, 8.284700000000048e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.884" endtime="20201117 14:41:47.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.879" endtime="20201117 14:41:47.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.889" endtime="20201117 14:41:47.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.892" endtime="20201117 14:41:47.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.890" endtime="20201117 14:41:47.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.887" endtime="20201117 14:41:47.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.520" endtime="20201117 14:41:47.913"></status>
</kw>
<msg timestamp="20201117 14:41:47.913" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.922" endtime="20201117 14:41:47.940"></status>
</kw>
<msg timestamp="20201117 14:41:47.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.920" endtime="20201117 14:41:47.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.942" endtime="20201117 14:41:47.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.944" endtime="20201117 14:41:47.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.917" endtime="20201117 14:41:47.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.915" endtime="20201117 14:41:47.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.954" endtime="20201117 14:41:48.240"></status>
</kw>
<msg timestamp="20201117 14:41:48.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.953" endtime="20201117 14:41:48.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.244" endtime="20201117 14:41:48.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.252" endtime="20201117 14:41:48.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.950" endtime="20201117 14:41:48.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.948" endtime="20201117 14:41:48.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.259" level="INFO">${RESULT} = [{'time': 0.022359792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.372300000000082e-05, 'source_diff': 8.372300000000082e-05}, {'time': 0.022447625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.256" endtime="20201117 14:41:48.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.273" level="INFO">${ACCURACY} = {'source_diff': [8.372300000000082e-05, 8.258299999999719e-05, 8.295800000000103e-05, 8.293100000000136e-05, 8.286100000000005e-05, 8.319500000000118e-05, 8.305600000000149e-05, 8.326399999999956e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:48.260" endtime="20201117 14:41:48.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.277" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.276" endtime="20201117 14:41:48.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.280" level="INFO">VALUE: [8.372300000000082e-05, 8.258299999999719e-05, 8.295800000000103e-05, 8.293100000000136e-05, 8.286100000000005e-05, 8.319500000000118e-05, 8.305600000000149e-05, 8.326399999999956e-05, 8.307000000000106e-05, 8.273599999999992e-05, 8.302799999999888e-05, 8.273599999999992e-05, 8.272200000000035e-05, 8.323599999999695e-05, 8.315199999999953e-05, 8.309700000000073e-05, 8.323599999999695e-05, 8.302799999999888e-05, 8.324999999999999e-05, 8.295800000000103e-05, 8.322200000000085e-05, 8.286100000000005e-05, 8.305600000000149e-05, 8.319499999999772e-05, 8.290299999999876e-05, 8.324999999999999e-05, 8.320900000000075e-05, 8.305599999999802e-05, 8.331899999999837e-05, 8.31110000000003e-05, 8.308300000000116e-05, 8.304100000000245e-05, 8.316700000000204e-05, 8.324999999999999e-05, 8.255500000000152e-05, 8.284700000000048e-05, 8.27919999999982e-05, 8.270800000000078e-05, 8.323599999999695e-05, 8.306899999999812e-05, 8.288899999999919e-05, 8.318100000000161e-05, 8.276399999999906e-05, 8.312499999999987e-05, 8.301399999999931e-05, 8.281999999999734e-05, 8.284799999999995e-05, 8.31110000000003e-05, 8.284799999999995e-05, 8.320900000000075e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.278" endtime="20201117 14:41:48.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.273" endtime="20201117 14:41:48.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.287" endtime="20201117 14:41:48.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.290" endtime="20201117 14:41:48.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.289" endtime="20201117 14:41:48.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.281" endtime="20201117 14:41:48.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.914" endtime="20201117 14:41:48.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.518" endtime="20201117 14:41:48.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.518" endtime="20201117 14:41:48.312"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.314" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.322" endtime="20201117 14:41:48.342"></status>
</kw>
<msg timestamp="20201117 14:41:48.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.321" endtime="20201117 14:41:48.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.343" endtime="20201117 14:41:48.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.346" endtime="20201117 14:41:48.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.318" endtime="20201117 14:41:48.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.316" endtime="20201117 14:41:48.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.355" endtime="20201117 14:41:48.641"></status>
</kw>
<msg timestamp="20201117 14:41:48.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024835111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.353" endtime="20201117 14:41:48.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024835111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.645" endtime="20201117 14:41:48.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.653" endtime="20201117 14:41:48.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.351" endtime="20201117 14:41:48.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.349" endtime="20201117 14:41:48.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.660" level="INFO">${RESULT} = [{'time': 0.024919917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.480599999999977e-05, 'source_diff': 8.480599999999977e-05}, {'time': 0.025009806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.656" endtime="20201117 14:41:48.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.675" level="INFO">${ACCURACY} = {'source_diff': [8.480599999999977e-05, 8.44729999999981e-05, 8.424999999999752e-05, 8.404199999999945e-05, 8.420899999999829e-05, 8.384700000000148e-05, 8.412500000000087e-05, 8.370899999999779e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:48.661" endtime="20201117 14:41:48.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.679" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.678" endtime="20201117 14:41:48.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.682" level="INFO">VALUE: [8.480599999999977e-05, 8.44729999999981e-05, 8.424999999999752e-05, 8.404199999999945e-05, 8.420899999999829e-05, 8.384700000000148e-05, 8.412500000000087e-05, 8.370899999999779e-05, 8.384800000000095e-05, 8.4153e-05, 8.413899999999697e-05, 8.412500000000087e-05, 8.391699999999933e-05, 8.388900000000019e-05, 8.408300000000216e-05, 8.381900000000234e-05, 8.370800000000178e-05, 8.413900000000044e-05, 8.404200000000292e-05, 8.377799999999963e-05, 8.39590000000015e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.380599999999877e-05, 8.41110000000013e-05, 8.405499999999955e-05, 8.42919999999997e-05, 8.380599999999877e-05, 8.395800000000203e-05, 8.37370000000004e-05, 8.41660000000001e-05, 8.418000000000314e-05, 8.383299999999844e-05, 8.404200000000292e-05, 8.379099999999973e-05, 8.426400000000056e-05, 8.404199999999945e-05, 8.370799999999831e-05, 8.416699999999958e-05, 8.383299999999844e-05, 8.377799999999963e-05, 8.419500000000218e-05, 8.372200000000135e-05, 8.427800000000013e-05, 8.369500000000168e-05, 8.422299999999786e-05, 8.358400000000113e-05, 8.372300000000082e-05, 8.384700000000148e-05, 8.386100000000105e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.680" endtime="20201117 14:41:48.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.676" endtime="20201117 14:41:48.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.685" endtime="20201117 14:41:48.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.689" endtime="20201117 14:41:48.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.687" endtime="20201117 14:41:48.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.684" endtime="20201117 14:41:48.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.314" endtime="20201117 14:41:48.710"></status>
</kw>
<msg timestamp="20201117 14:41:48.710" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.718" endtime="20201117 14:41:48.737"></status>
</kw>
<msg timestamp="20201117 14:41:48.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.716" endtime="20201117 14:41:48.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.738" endtime="20201117 14:41:48.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.741" endtime="20201117 14:41:48.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.714" endtime="20201117 14:41:48.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.712" endtime="20201117 14:41:48.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.794" endtime="20201117 14:41:49.080"></status>
</kw>
<msg timestamp="20201117 14:41:49.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021457819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.792" endtime="20201117 14:41:49.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021457819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.084" endtime="20201117 14:41:49.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.092" endtime="20201117 14:41:49.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.789" endtime="20201117 14:41:49.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.787" endtime="20201117 14:41:49.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.099" level="INFO">${RESULT} = [{'time': 0.021542764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.494499999999947e-05, 'source_diff': 8.494499999999947e-05}, {'time': 0.021632625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.096" endtime="20201117 14:41:49.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.112" level="INFO">${ACCURACY} = {'source_diff': [8.494499999999947e-05, 8.419399999999924e-05, 8.423599999999795e-05, 8.420799999999881e-05, 8.4153e-05, 8.370800000000178e-05, 8.425000000000099e-05, 8.4153e-05, 8.418099999999915e-05...</msg>
<status status="PASS" starttime="20201117 14:41:49.100" endtime="20201117 14:41:49.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.117" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.116" endtime="20201117 14:41:49.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.119" level="INFO">VALUE: [8.494499999999947e-05, 8.419399999999924e-05, 8.423599999999795e-05, 8.420799999999881e-05, 8.4153e-05, 8.370800000000178e-05, 8.425000000000099e-05, 8.4153e-05, 8.418099999999915e-05, 8.376400000000006e-05, 8.419500000000218e-05, 8.402799999999988e-05, 8.41110000000013e-05, 8.388900000000019e-05, 8.402700000000041e-05, 8.375000000000049e-05, 8.388900000000019e-05, 8.395799999999856e-05, 8.383299999999844e-05, 8.372199999999788e-05, 8.429100000000023e-05, 8.427800000000013e-05, 8.419399999999924e-05, 8.386100000000105e-05, 8.39859999999977e-05, 8.391699999999933e-05, 8.394499999999847e-05, 8.374999999999702e-05, 8.405599999999902e-05, 8.380599999999877e-05, 8.383400000000138e-05, 8.395899999999804e-05, 8.409699999999826e-05, 8.425000000000099e-05, 8.373600000000092e-05, 8.376400000000006e-05, 8.390299999999976e-05, 8.376399999999659e-05, 8.417999999999967e-05, 8.413900000000044e-05, 8.426400000000056e-05, 8.387500000000062e-05, 8.387499999999715e-05, 8.395800000000203e-05, 8.390299999999976e-05, 8.390299999999976e-05, 8.423599999999795e-05, 8.37919999999992e-05, 8.417999999999967e-05, 8.405599999999902e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.118" endtime="20201117 14:41:49.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.113" endtime="20201117 14:41:49.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.123" endtime="20201117 14:41:49.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.126" endtime="20201117 14:41:49.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.125" endtime="20201117 14:41:49.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.121" endtime="20201117 14:41:49.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.710" endtime="20201117 14:41:49.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.313" endtime="20201117 14:41:49.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.312" endtime="20201117 14:41:49.147"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.150" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.158" endtime="20201117 14:41:49.177"></status>
</kw>
<msg timestamp="20201117 14:41:49.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.156" endtime="20201117 14:41:49.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.178" endtime="20201117 14:41:49.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.181" endtime="20201117 14:41:49.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.154" endtime="20201117 14:41:49.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.152" endtime="20201117 14:41:49.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.190" endtime="20201117 14:41:49.475"></status>
</kw>
<msg timestamp="20201117 14:41:49.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02395425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024040083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:49.188" endtime="20201117 14:41:49.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02395425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024040083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:49.479" endtime="20201117 14:41:49.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.487" endtime="20201117 14:41:49.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.185" endtime="20201117 14:41:49.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.184" endtime="20201117 14:41:49.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.494" level="INFO">${RESULT} = [{'time': 0.024040083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583300000000044e-05, 'source_diff': 8.583300000000044e-05}, {'time': 0.024129931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.491" endtime="20201117 14:41:49.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.508" level="INFO">${ACCURACY} = {'source_diff': [8.583300000000044e-05, 8.448700000000114e-05, 8.497199999999913e-05, 8.495799999999956e-05, 8.479100000000073e-05, 8.475000000000149e-05, 8.501399999999784e-05, 8.506899999999665e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:49.495" endtime="20201117 14:41:49.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.513" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.512" endtime="20201117 14:41:49.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.516" level="INFO">VALUE: [8.583300000000044e-05, 8.448700000000114e-05, 8.497199999999913e-05, 8.495799999999956e-05, 8.479100000000073e-05, 8.475000000000149e-05, 8.501399999999784e-05, 8.506899999999665e-05, 8.491600000000085e-05, 8.525000000000199e-05, 8.500000000000174e-05, 8.474999999999802e-05, 8.4846999999999e-05, 8.527799999999766e-05, 8.472199999999888e-05, 8.497300000000207e-05, 8.473599999999845e-05, 8.508400000000263e-05, 8.480599999999977e-05, 8.488900000000119e-05, 8.487500000000162e-05, 8.529100000000123e-05, 8.505500000000055e-05, 8.515199999999806e-05, 8.497199999999913e-05, 8.513899999999797e-05, 8.523600000000242e-05, 8.526400000000156e-05, 8.523600000000242e-05, 8.522199999999938e-05, 8.520799999999981e-05, 8.506900000000012e-05, 8.518100000000015e-05, 8.505600000000002e-05, 8.498600000000217e-05, 8.486100000000205e-05, 8.476400000000106e-05, 8.47370000000014e-05, 8.52370000000019e-05, 8.51249999999984e-05, 8.494399999999999e-05, 8.518000000000067e-05, 8.51249999999984e-05, 8.524999999999852e-05, 8.475000000000149e-05, 8.513900000000144e-05, 8.481899999999987e-05, 8.505500000000055e-05, 8.488900000000119e-05, 8.473599999999845e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.514" endtime="20201117 14:41:49.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.509" endtime="20201117 14:41:49.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.519" endtime="20201117 14:41:49.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.523" endtime="20201117 14:41:49.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.521" endtime="20201117 14:41:49.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.517" endtime="20201117 14:41:49.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.150" endtime="20201117 14:41:49.543"></status>
</kw>
<msg timestamp="20201117 14:41:49.543" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.552" endtime="20201117 14:41:49.569"></status>
</kw>
<msg timestamp="20201117 14:41:49.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.550" endtime="20201117 14:41:49.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.571" endtime="20201117 14:41:49.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.573" endtime="20201117 14:41:49.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.547" endtime="20201117 14:41:49.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.545" endtime="20201117 14:41:49.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.583" endtime="20201117 14:41:49.869"></status>
</kw>
<msg timestamp="20201117 14:41:49.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02160325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:49.581" endtime="20201117 14:41:49.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02160325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:49.873" endtime="20201117 14:41:49.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.881" endtime="20201117 14:41:49.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.578" endtime="20201117 14:41:49.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.576" endtime="20201117 14:41:49.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.888" level="INFO">${RESULT} = [{'time': 0.02160325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.61249999999994e-05, 'source_diff': 8.61249999999994e-05}, {'time': 0.021693139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:49.885" endtime="20201117 14:41:49.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.902" level="INFO">${ACCURACY} = {'source_diff': [8.61249999999994e-05, 8.466700000000008e-05, 8.48330000000029e-05, 8.495799999999956e-05, 8.491600000000085e-05, 8.477800000000063e-05, 8.486099999999858e-05, 8.516700000000058e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:41:49.889" endtime="20201117 14:41:49.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.907" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.905" endtime="20201117 14:41:49.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.909" level="INFO">VALUE: [8.61249999999994e-05, 8.466700000000008e-05, 8.48330000000029e-05, 8.495799999999956e-05, 8.491600000000085e-05, 8.477800000000063e-05, 8.486099999999858e-05, 8.516700000000058e-05, 8.524999999999852e-05, 8.473599999999845e-05, 8.486099999999858e-05, 8.47920000000002e-05, 8.470900000000225e-05, 8.518100000000015e-05, 8.504099999999751e-05, 8.519499999999972e-05, 8.523599999999895e-05, 8.522199999999938e-05, 8.506900000000012e-05, 8.491599999999738e-05, 8.527700000000166e-05, 8.520799999999981e-05, 8.505500000000055e-05, 8.504200000000045e-05, 8.523599999999895e-05, 8.488900000000119e-05, 8.515299999999754e-05, 8.518100000000015e-05, 8.504200000000045e-05, 8.508399999999916e-05, 8.525000000000199e-05, 8.525000000000199e-05, 8.480599999999977e-05, 8.533299999999994e-05, 8.494399999999999e-05, 8.516700000000058e-05, 8.518100000000015e-05, 8.51799999999972e-05, 8.473599999999845e-05, 8.51660000000011e-05, 8.515200000000153e-05, 8.488900000000119e-05, 8.494399999999999e-05, 8.5153000000001e-05, 8.520799999999981e-05, 8.515299999999754e-05, 8.516700000000058e-05, 8.51110000000023e-05, 8.522200000000285e-05, 8.495799999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.908" endtime="20201117 14:41:49.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.903" endtime="20201117 14:41:49.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.912" endtime="20201117 14:41:49.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.916" endtime="20201117 14:41:49.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.914" endtime="20201117 14:41:49.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.911" endtime="20201117 14:41:49.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.544" endtime="20201117 14:41:49.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.149" endtime="20201117 14:41:49.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.148" endtime="20201117 14:41:49.937"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.939" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.947" endtime="20201117 14:41:49.965"></status>
</kw>
<msg timestamp="20201117 14:41:49.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.946" endtime="20201117 14:41:49.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.966" endtime="20201117 14:41:49.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.969" endtime="20201117 14:41:49.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.943" endtime="20201117 14:41:49.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.941" endtime="20201117 14:41:49.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.978" endtime="20201117 14:41:50.264"></status>
</kw>
<msg timestamp="20201117 14:41:50.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023982778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024069861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.976" endtime="20201117 14:41:50.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023982778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024069861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.268" endtime="20201117 14:41:50.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.276" endtime="20201117 14:41:50.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.974" endtime="20201117 14:41:50.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.972" endtime="20201117 14:41:50.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.283" level="INFO">${RESULT} = [{'time': 0.024069861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708300000000169e-05, 'source_diff': 8.708300000000169e-05}, {'time': 0.024160708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.280" endtime="20201117 14:41:50.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.298" level="INFO">${ACCURACY} = {'source_diff': [8.708300000000169e-05, 8.54859999999992e-05, 8.623599999999995e-05, 8.613900000000244e-05, 8.592999999999795e-05, 8.583399999999991e-05, 8.629199999999823e-05, 8.599999999999927e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:50.284" endtime="20201117 14:41:50.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.302" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.301" endtime="20201117 14:41:50.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.305" level="INFO">VALUE: [8.708300000000169e-05, 8.54859999999992e-05, 8.623599999999995e-05, 8.613900000000244e-05, 8.592999999999795e-05, 8.583399999999991e-05, 8.629199999999823e-05, 8.599999999999927e-05, 8.608300000000069e-05, 8.606900000000112e-05, 8.6153000000002e-05, 8.615200000000253e-05, 8.602799999999841e-05, 8.627799999999866e-05, 8.609799999999973e-05, 8.587500000000262e-05, 8.606900000000112e-05, 8.613899999999897e-05, 8.570899999999979e-05, 8.586099999999958e-05, 8.631900000000137e-05, 8.559699999999976e-05, 8.588899999999872e-05, 8.591599999999838e-05, 8.570800000000031e-05, 8.586099999999958e-05, 8.622200000000038e-05, 8.627799999999866e-05, 8.620799999999734e-05, 8.577799999999816e-05, 8.582000000000034e-05, 8.620799999999734e-05, 8.580600000000077e-05, 8.607000000000059e-05, 8.606999999999712e-05, 8.59310000000009e-05, 8.618000000000167e-05, 8.622200000000038e-05, 8.613799999999949e-05, 8.601399999999884e-05, 8.604099999999851e-05, 8.605500000000155e-05, 8.593000000000142e-05, 8.597200000000013e-05, 8.586100000000305e-05, 8.595799999999709e-05, 8.586099999999958e-05, 8.61249999999994e-05, 8.600000000000274e-05, 8.618100000000115e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.303" endtime="20201117 14:41:50.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.299" endtime="20201117 14:41:50.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.308" endtime="20201117 14:41:50.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.311" endtime="20201117 14:41:50.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.310" endtime="20201117 14:41:50.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.306" endtime="20201117 14:41:50.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.940" endtime="20201117 14:41:50.332"></status>
</kw>
<msg timestamp="20201117 14:41:50.332" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.340" endtime="20201117 14:41:50.359"></status>
</kw>
<msg timestamp="20201117 14:41:50.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.339" endtime="20201117 14:41:50.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.360" endtime="20201117 14:41:50.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.363" endtime="20201117 14:41:50.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.336" endtime="20201117 14:41:50.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.334" endtime="20201117 14:41:50.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.372" endtime="20201117 14:41:50.659"></status>
</kw>
<msg timestamp="20201117 14:41:50.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021432347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.370" endtime="20201117 14:41:50.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021432347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.663" endtime="20201117 14:41:50.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.671" endtime="20201117 14:41:50.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.368" endtime="20201117 14:41:50.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.366" endtime="20201117 14:41:50.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.678" level="INFO">${RESULT} = [{'time': 0.021518806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.645900000000054e-05, 'source_diff': 8.645900000000054e-05}, {'time': 0.021610722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.675" endtime="20201117 14:41:50.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.692" level="INFO">${ACCURACY} = {'source_diff': [8.645900000000054e-05, 8.641599999999888e-05, 8.609799999999973e-05, 8.57920000000012e-05, 8.608400000000016e-05, 8.622299999999986e-05, 8.604099999999851e-05, 8.579100000000173e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:50.679" endtime="20201117 14:41:50.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.696" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.695" endtime="20201117 14:41:50.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.699" level="INFO">VALUE: [8.645900000000054e-05, 8.641599999999888e-05, 8.609799999999973e-05, 8.57920000000012e-05, 8.608400000000016e-05, 8.622299999999986e-05, 8.604099999999851e-05, 8.579100000000173e-05, 8.624999999999952e-05, 8.573599999999945e-05, 8.630499999999833e-05, 8.606900000000112e-05, 8.581900000000087e-05, 8.608300000000069e-05, 8.620799999999734e-05, 8.622200000000038e-05, 8.61669999999981e-05, 8.572199999999988e-05, 8.595800000000056e-05, 8.580600000000077e-05, 8.618099999999768e-05, 8.586099999999958e-05, 8.609799999999973e-05, 8.588900000000219e-05, 8.608300000000069e-05, 8.587499999999915e-05, 8.62920000000017e-05, 8.597200000000013e-05, 8.573599999999945e-05, 8.629100000000223e-05, 8.626400000000256e-05, 8.620799999999734e-05, 8.604199999999798e-05, 8.622200000000038e-05, 8.616700000000158e-05, 8.573599999999945e-05, 8.59310000000009e-05, 8.61119999999993e-05, 8.590299999999829e-05, 8.609699999999679e-05, 8.622200000000038e-05, 8.584799999999948e-05, 8.611200000000277e-05, 8.587499999999915e-05, 8.577799999999816e-05, 8.606900000000112e-05, 8.576300000000259e-05, 8.629100000000223e-05, 8.579099999999826e-05, 8.583300000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.697" endtime="20201117 14:41:50.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.692" endtime="20201117 14:41:50.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.702" endtime="20201117 14:41:50.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.705" endtime="20201117 14:41:50.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.704" endtime="20201117 14:41:50.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.700" endtime="20201117 14:41:50.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.333" endtime="20201117 14:41:50.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.938" endtime="20201117 14:41:50.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.937" endtime="20201117 14:41:50.726"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.728" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.737" endtime="20201117 14:41:50.755"></status>
</kw>
<msg timestamp="20201117 14:41:50.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.735" endtime="20201117 14:41:50.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.756" endtime="20201117 14:41:50.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.759" endtime="20201117 14:41:50.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.733" endtime="20201117 14:41:50.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.730" endtime="20201117 14:41:50.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.768" endtime="20201117 14:41:51.055"></status>
</kw>
<msg timestamp="20201117 14:41:51.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023980611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024068069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.767" endtime="20201117 14:41:51.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023980611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024068069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.059" endtime="20201117 14:41:51.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.068" endtime="20201117 14:41:51.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.764" endtime="20201117 14:41:51.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.762" endtime="20201117 14:41:51.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.074" level="INFO">${RESULT} = [{'time': 0.024068069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.745800000000206e-05, 'source_diff': 8.745800000000206e-05}, {'time': 0.024160917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.071" endtime="20201117 14:41:51.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.088" level="INFO">${ACCURACY} = {'source_diff': [8.745800000000206e-05, 8.732000000000184e-05, 8.731999999999837e-05, 8.71120000000003e-05, 8.722199999999791e-05, 8.675000000000002e-05, 8.723599999999748e-05, 8.668000000000217e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:51.075" endtime="20201117 14:41:51.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.092" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.091" endtime="20201117 14:41:51.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.095" level="INFO">VALUE: [8.745800000000206e-05, 8.732000000000184e-05, 8.731999999999837e-05, 8.71120000000003e-05, 8.722199999999791e-05, 8.675000000000002e-05, 8.723599999999748e-05, 8.668000000000217e-05, 8.722200000000138e-05, 8.695800000000156e-05, 8.719400000000224e-05, 8.673600000000045e-05, 8.675000000000002e-05, 8.701399999999984e-05, 8.700000000000027e-05, 8.675000000000002e-05, 8.720800000000181e-05, 8.709699999999779e-05, 8.700000000000027e-05, 8.709699999999779e-05, 8.675000000000002e-05, 8.709800000000073e-05, 8.684800000000048e-05, 8.676400000000306e-05, 8.726300000000062e-05, 8.655499999999858e-05, 8.730499999999933e-05, 8.718000000000267e-05, 8.691599999999938e-05, 8.683300000000144e-05, 8.706899999999865e-05, 8.697200000000113e-05, 8.683299999999797e-05, 8.700000000000027e-05, 8.691699999999886e-05, 8.709700000000126e-05, 8.676399999999959e-05, 8.718099999999868e-05, 8.697200000000113e-05, 8.715299999999954e-05, 8.675000000000002e-05, 8.675000000000002e-05, 8.718100000000215e-05, 8.676399999999959e-05, 8.688899999999972e-05, 8.691599999999938e-05, 8.679199999999873e-05, 8.688899999999972e-05, 8.690299999999929e-05, 8.677799999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.093" endtime="20201117 14:41:51.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.089" endtime="20201117 14:41:51.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.098" endtime="20201117 14:41:51.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.101" endtime="20201117 14:41:51.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.100" endtime="20201117 14:41:51.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.096" endtime="20201117 14:41:51.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.729" endtime="20201117 14:41:51.122"></status>
</kw>
<msg timestamp="20201117 14:41:51.122" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.130" endtime="20201117 14:41:51.149"></status>
</kw>
<msg timestamp="20201117 14:41:51.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.129" endtime="20201117 14:41:51.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.151" endtime="20201117 14:41:51.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.153" endtime="20201117 14:41:51.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.126" endtime="20201117 14:41:51.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.124" endtime="20201117 14:41:51.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.163" endtime="20201117 14:41:51.449"></status>
</kw>
<msg timestamp="20201117 14:41:51.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.161" endtime="20201117 14:41:51.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.453" endtime="20201117 14:41:51.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.461" endtime="20201117 14:41:51.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.158" endtime="20201117 14:41:51.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.157" endtime="20201117 14:41:51.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.468" level="INFO">${RESULT} = [{'time': 0.021912597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.762499999999743e-05, 'source_diff': 8.762499999999743e-05}, {'time': 0.022005431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.465" endtime="20201117 14:41:51.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.482" level="INFO">${ACCURACY} = {'source_diff': [8.762499999999743e-05, 8.702799999999941e-05, 8.676399999999959e-05, 8.726399999999662e-05, 8.694400000000199e-05, 8.690299999999929e-05, 8.708399999999769e-05, 8.702799999999941e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:51.469" endtime="20201117 14:41:51.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.486" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.485" endtime="20201117 14:41:51.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.489" level="INFO">VALUE: [8.762499999999743e-05, 8.702799999999941e-05, 8.676399999999959e-05, 8.726399999999662e-05, 8.694400000000199e-05, 8.690299999999929e-05, 8.708399999999769e-05, 8.702799999999941e-05, 8.69860000000007e-05, 8.708300000000169e-05, 8.686100000000058e-05, 8.695800000000156e-05, 8.686100000000058e-05, 8.719500000000172e-05, 8.723599999999748e-05, 8.691699999999886e-05, 8.720899999999782e-05, 8.700000000000027e-05, 8.694399999999852e-05, 8.680600000000177e-05, 8.702699999999994e-05, 8.686100000000058e-05, 8.686100000000058e-05, 8.706899999999865e-05, 8.726400000000009e-05, 8.688899999999972e-05, 8.726400000000009e-05, 8.701399999999984e-05, 8.720800000000181e-05, 8.68059999999983e-05, 8.683400000000091e-05, 8.711099999999736e-05, 8.722200000000138e-05, 8.6944999999998e-05, 8.676399999999959e-05, 8.683399999999744e-05, 8.687500000000015e-05, 8.716700000000258e-05, 8.726300000000062e-05, 8.686100000000058e-05, 8.700000000000027e-05, 8.670800000000131e-05, 8.71799999999992e-05, 8.682000000000134e-05, 8.727799999999966e-05, 8.700000000000027e-05, 8.700000000000027e-05, 8.726400000000009e-05, 8.700000000000027e-05, 8.690299999999929e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.487" endtime="20201117 14:41:51.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.482" endtime="20201117 14:41:51.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.492" endtime="20201117 14:41:51.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.495" endtime="20201117 14:41:51.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.494" endtime="20201117 14:41:51.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.490" endtime="20201117 14:41:51.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.123" endtime="20201117 14:41:51.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.727" endtime="20201117 14:41:51.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.726" endtime="20201117 14:41:51.516"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.519" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.527" endtime="20201117 14:41:51.545"></status>
</kw>
<msg timestamp="20201117 14:41:51.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.526" endtime="20201117 14:41:51.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.547" endtime="20201117 14:41:51.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.549" endtime="20201117 14:41:51.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.523" endtime="20201117 14:41:51.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.521" endtime="20201117 14:41:51.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.558" endtime="20201117 14:41:51.845"></status>
</kw>
<msg timestamp="20201117 14:41:51.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.557" endtime="20201117 14:41:51.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.850" endtime="20201117 14:41:51.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.858" endtime="20201117 14:41:51.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.554" endtime="20201117 14:41:51.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.553" endtime="20201117 14:41:51.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.865" level="INFO">${RESULT} = [{'time': 0.024734431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.841700000000036e-05, 'source_diff': 8.841700000000036e-05}, {'time': 0.024828264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.861" endtime="20201117 14:41:51.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.879" level="INFO">${ACCURACY} = {'source_diff': [8.841700000000036e-05, 8.819499999999925e-05, 8.772300000000136e-05, 8.826400000000109e-05, 8.775000000000102e-05, 8.811099999999836e-05, 8.808300000000269e-05, 8.784700000000201e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:51.866" endtime="20201117 14:41:51.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.884" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.883" endtime="20201117 14:41:51.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.886" level="INFO">VALUE: [8.841700000000036e-05, 8.819499999999925e-05, 8.772300000000136e-05, 8.826400000000109e-05, 8.775000000000102e-05, 8.811099999999836e-05, 8.808300000000269e-05, 8.784700000000201e-05, 8.805500000000008e-05, 8.779100000000026e-05, 8.827800000000066e-05, 8.780499999999983e-05, 8.78189999999994e-05, 8.800000000000127e-05, 8.790300000000029e-05, 8.806999999999912e-05, 8.808299999999922e-05, 8.818099999999968e-05, 8.768099999999918e-05, 8.811100000000183e-05, 8.818099999999968e-05, 8.779199999999973e-05, 8.768099999999918e-05, 8.788900000000072e-05, 8.809699999999879e-05, 8.788900000000072e-05, 8.820799999999934e-05, 8.790200000000081e-05, 8.773600000000145e-05, 8.777800000000016e-05, 8.812499999999793e-05, 8.805500000000008e-05, 8.788900000000072e-05, 8.78189999999994e-05, 8.81670000000001e-05, 8.770800000000231e-05, 8.820799999999934e-05, 8.783299999999897e-05, 8.815299999999707e-05, 8.813900000000097e-05, 8.79860000000017e-05, 8.788799999999777e-05, 8.818099999999968e-05, 8.808400000000216e-05, 8.78189999999994e-05, 8.804100000000051e-05, 8.772199999999841e-05, 8.794399999999952e-05, 8.820800000000281e-05, 8.794399999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.885" endtime="20201117 14:41:51.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.880" endtime="20201117 14:41:51.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.890" endtime="20201117 14:41:51.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.893" endtime="20201117 14:41:51.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.892" endtime="20201117 14:41:51.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.888" endtime="20201117 14:41:51.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.519" endtime="20201117 14:41:51.914"></status>
</kw>
<msg timestamp="20201117 14:41:51.914" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.923" endtime="20201117 14:41:51.941"></status>
</kw>
<msg timestamp="20201117 14:41:51.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.921" endtime="20201117 14:41:51.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.943" endtime="20201117 14:41:51.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.945" endtime="20201117 14:41:51.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.918" endtime="20201117 14:41:51.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.916" endtime="20201117 14:41:51.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.954" endtime="20201117 14:41:52.240"></status>
</kw>
<msg timestamp="20201117 14:41:52.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.953" endtime="20201117 14:41:52.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.244" endtime="20201117 14:41:52.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.253" endtime="20201117 14:41:52.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.950" endtime="20201117 14:41:52.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.948" endtime="20201117 14:41:52.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.259" level="INFO">${RESULT} = [{'time': 0.022035472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854100000000101e-05, 'source_diff': 8.854100000000101e-05}, {'time': 0.022129306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.256" endtime="20201117 14:41:52.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.273" level="INFO">${ACCURACY} = {'source_diff': [8.854100000000101e-05, 8.819500000000272e-05, 8.779199999999973e-05, 8.801399999999737e-05, 8.792999999999995e-05, 8.815300000000054e-05, 8.780499999999983e-05, 8.794399999999952e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:52.260" endtime="20201117 14:41:52.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.277" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.276" endtime="20201117 14:41:52.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.280" level="INFO">VALUE: [8.854100000000101e-05, 8.819500000000272e-05, 8.779199999999973e-05, 8.801399999999737e-05, 8.792999999999995e-05, 8.815300000000054e-05, 8.780499999999983e-05, 8.794399999999952e-05, 8.815300000000054e-05, 8.76799999999997e-05, 8.815300000000054e-05, 8.795799999999909e-05, 8.769399999999927e-05, 8.805600000000302e-05, 8.800000000000127e-05, 8.786099999999811e-05, 8.813900000000097e-05, 8.77920000000032e-05, 8.787500000000115e-05, 8.820799999999934e-05, 8.777800000000016e-05, 8.825000000000152e-05, 8.797200000000213e-05, 8.795799999999909e-05, 8.819399999999977e-05, 8.805500000000008e-05, 8.783299999999897e-05, 8.813900000000097e-05, 8.823599999999848e-05, 8.824999999999805e-05, 8.818099999999968e-05, 8.818099999999968e-05, 8.797199999999866e-05, 8.826399999999762e-05, 8.795900000000204e-05, 8.787500000000115e-05, 8.793099999999943e-05, 8.788799999999777e-05, 8.775000000000102e-05, 8.808299999999922e-05, 8.773600000000145e-05, 8.826399999999762e-05, 8.81250000000014e-05, 8.811100000000183e-05, 8.790300000000029e-05, 8.795799999999909e-05, 8.79310000000029e-05, 8.815300000000054e-05, 8.772199999999841e-05, 8.79999999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.278" endtime="20201117 14:41:52.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.274" endtime="20201117 14:41:52.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.283" endtime="20201117 14:41:52.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.287" endtime="20201117 14:41:52.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.285" endtime="20201117 14:41:52.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.281" endtime="20201117 14:41:52.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.915" endtime="20201117 14:41:52.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.517" endtime="20201117 14:41:52.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.517" endtime="20201117 14:41:52.308"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.310" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.318" endtime="20201117 14:41:52.337"></status>
</kw>
<msg timestamp="20201117 14:41:52.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.317" endtime="20201117 14:41:52.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.338" endtime="20201117 14:41:52.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.341" endtime="20201117 14:41:52.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.314" endtime="20201117 14:41:52.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.312" endtime="20201117 14:41:52.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.350" endtime="20201117 14:41:52.637"></status>
</kw>
<msg timestamp="20201117 14:41:52.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02389275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023982278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:52.348" endtime="20201117 14:41:52.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02389275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023982278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:52.641" endtime="20201117 14:41:52.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.649" endtime="20201117 14:41:52.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.346" endtime="20201117 14:41:52.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.344" endtime="20201117 14:41:52.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.656" level="INFO">${RESULT} = [{'time': 0.023982278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.952799999999844e-05, 'source_diff': 8.952799999999844e-05}, {'time': 0.024077097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.652" endtime="20201117 14:41:52.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.669" level="INFO">${ACCURACY} = {'source_diff': [8.952799999999844e-05, 8.909699999999979e-05, 8.888899999999825e-05, 8.902800000000141e-05, 8.91939999999973e-05, 8.88060000000003e-05, 8.91389999999985e-05, 8.923599999999948e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:41:52.657" endtime="20201117 14:41:52.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.674" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.673" endtime="20201117 14:41:52.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.676" level="INFO">VALUE: [8.952799999999844e-05, 8.909699999999979e-05, 8.888899999999825e-05, 8.902800000000141e-05, 8.91939999999973e-05, 8.88060000000003e-05, 8.91389999999985e-05, 8.923599999999948e-05, 8.874999999999855e-05, 8.908399999999969e-05, 8.909799999999926e-05, 8.893000000000095e-05, 8.926299999999915e-05, 8.911199999999883e-05, 8.908300000000022e-05, 8.877700000000169e-05, 8.894400000000052e-05, 8.905500000000108e-05, 8.91800000000012e-05, 8.872200000000288e-05, 8.883299999999997e-05, 8.894400000000052e-05, 8.908300000000022e-05, 8.872200000000288e-05, 8.923600000000295e-05, 8.875000000000202e-05, 8.909699999999979e-05, 8.919400000000077e-05, 8.918099999999721e-05, 8.876399999999812e-05, 8.89999999999988e-05, 8.908300000000022e-05, 8.922199999999991e-05, 8.879100000000126e-05, 8.934700000000004e-05, 8.884699999999954e-05, 8.91389999999985e-05, 8.895800000000009e-05, 8.891700000000086e-05, 8.911099999999936e-05, 8.902800000000141e-05, 8.883299999999997e-05, 8.870799999999984e-05, 8.883299999999997e-05, 8.884799999999901e-05, 8.876400000000159e-05, 8.913900000000197e-05, 8.881999999999987e-05, 8.891700000000086e-05, 8.91389999999985e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.675" endtime="20201117 14:41:52.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.670" endtime="20201117 14:41:52.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.680" endtime="20201117 14:41:52.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.683" endtime="20201117 14:41:52.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.682" endtime="20201117 14:41:52.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.678" endtime="20201117 14:41:52.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.311" endtime="20201117 14:41:52.704"></status>
</kw>
<msg timestamp="20201117 14:41:52.704" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.712" endtime="20201117 14:41:52.731"></status>
</kw>
<msg timestamp="20201117 14:41:52.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.711" endtime="20201117 14:41:52.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.733" endtime="20201117 14:41:52.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.735" endtime="20201117 14:41:52.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.708" endtime="20201117 14:41:52.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.706" endtime="20201117 14:41:52.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.744" endtime="20201117 14:41:53.031"></status>
</kw>
<msg timestamp="20201117 14:41:53.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02155425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:52.743" endtime="20201117 14:41:53.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02155425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:53.035" endtime="20201117 14:41:53.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.043" endtime="20201117 14:41:53.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.740" endtime="20201117 14:41:53.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.738" endtime="20201117 14:41:53.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.050" level="INFO">${RESULT} = [{'time': 0.021643611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.936099999999961e-05, 'source_diff': 8.936099999999961e-05}, {'time': 0.021738458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.047" endtime="20201117 14:41:53.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.063" level="INFO">${ACCURACY} = {'source_diff': [8.936099999999961e-05, 8.902699999999847e-05, 8.912499999999893e-05, 8.895800000000009e-05, 8.880599999999683e-05, 8.872199999999941e-05, 8.883299999999997e-05, 8.895800000000009e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:53.051" endtime="20201117 14:41:53.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.068" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.067" endtime="20201117 14:41:53.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.070" level="INFO">VALUE: [8.936099999999961e-05, 8.902699999999847e-05, 8.912499999999893e-05, 8.895800000000009e-05, 8.880599999999683e-05, 8.872199999999941e-05, 8.883299999999997e-05, 8.895800000000009e-05, 8.919500000000025e-05, 8.923599999999948e-05, 8.890300000000129e-05, 8.916599999999816e-05, 8.918100000000068e-05, 8.88190000000004e-05, 8.874999999999855e-05, 8.883299999999997e-05, 8.905600000000055e-05, 8.91250000000024e-05, 8.886100000000258e-05, 8.886100000000258e-05, 8.895800000000009e-05, 8.890300000000129e-05, 8.930500000000133e-05, 8.886099999999911e-05, 8.89999999999988e-05, 8.912499999999893e-05, 8.897199999999966e-05, 8.904199999999751e-05, 8.877799999999769e-05, 8.915299999999807e-05, 8.897199999999966e-05, 8.890199999999834e-05, 8.898599999999923e-05, 8.901399999999837e-05, 8.881999999999987e-05, 8.880500000000083e-05, 8.904100000000151e-05, 8.895800000000009e-05, 8.890200000000181e-05, 8.883299999999997e-05, 8.905500000000108e-05, 8.877800000000116e-05, 8.920800000000034e-05, 8.905600000000055e-05, 8.891700000000086e-05, 8.927699999999872e-05, 8.879199999999726e-05, 8.900000000000227e-05, 8.8945e-05, 8.89999999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.069" endtime="20201117 14:41:53.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.064" endtime="20201117 14:41:53.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.074" endtime="20201117 14:41:53.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.077" endtime="20201117 14:41:53.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.076" endtime="20201117 14:41:53.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.072" endtime="20201117 14:41:53.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.705" endtime="20201117 14:41:53.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.309" endtime="20201117 14:41:53.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.308" endtime="20201117 14:41:53.099"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.101" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.109" endtime="20201117 14:41:53.128"></status>
</kw>
<msg timestamp="20201117 14:41:53.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.108" endtime="20201117 14:41:53.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.129" endtime="20201117 14:41:53.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.132" endtime="20201117 14:41:53.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.105" endtime="20201117 14:41:53.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.103" endtime="20201117 14:41:53.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.141" endtime="20201117 14:41:53.427"></status>
</kw>
<msg timestamp="20201117 14:41:53.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024321028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024412319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.139" endtime="20201117 14:41:53.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024321028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024412319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.431" endtime="20201117 14:41:53.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.440" endtime="20201117 14:41:53.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.137" endtime="20201117 14:41:53.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.135" endtime="20201117 14:41:53.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.446" level="INFO">${RESULT} = [{'time': 0.024412319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.129099999999682e-05, 'source_diff': 9.129099999999682e-05}, {'time': 0.024508153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.443" endtime="20201117 14:41:53.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.461" level="INFO">${ACCURACY} = {'source_diff': [9.129099999999682e-05, 9.037500000000018e-05, 9.005599999999808e-05, 8.984800000000001e-05, 8.984800000000001e-05, 8.977800000000216e-05, 9.01389999999995e-05, 8.984700000000054e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:53.447" endtime="20201117 14:41:53.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.466" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.464" endtime="20201117 14:41:53.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.473" level="INFO">VALUE: [9.129099999999682e-05, 9.037500000000018e-05, 9.005599999999808e-05, 8.984800000000001e-05, 8.984800000000001e-05, 8.977800000000216e-05, 9.01389999999995e-05, 8.984700000000054e-05, 8.998600000000023e-05, 8.979099999999879e-05, 8.997200000000066e-05, 9.017999999999873e-05, 9.008300000000122e-05, 8.969400000000127e-05, 8.997199999999719e-05, 8.977799999999869e-05, 9.011100000000036e-05, 9.004199999999851e-05, 8.99999999999998e-05, 9.019500000000125e-05, 8.997300000000014e-05, 8.991699999999839e-05, 9.025000000000005e-05, 9.01939999999983e-05, 8.987499999999968e-05, 9.009700000000079e-05, 9.027699999999972e-05, 9.012499999999993e-05, 9.01389999999995e-05, 9.006899999999818e-05, 9.01939999999983e-05, 8.979200000000173e-05, 9.005599999999808e-05, 8.997200000000066e-05, 9.019500000000125e-05, 8.990299999999882e-05, 9.001399999999937e-05, 8.984700000000054e-05, 8.973599999999998e-05, 9.002799999999894e-05, 8.977800000000216e-05, 8.980599999999783e-05, 8.988899999999925e-05, 8.988899999999925e-05, 8.98190000000014e-05, 8.980499999999836e-05, 9.004100000000251e-05, 8.976399999999912e-05, 9.005499999999861e-05, 8.970800000000084e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.467" endtime="20201117 14:41:53.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.462" endtime="20201117 14:41:53.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.476" endtime="20201117 14:41:53.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.480" endtime="20201117 14:41:53.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.478" endtime="20201117 14:41:53.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.475" endtime="20201117 14:41:53.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.102" endtime="20201117 14:41:53.500"></status>
</kw>
<msg timestamp="20201117 14:41:53.501" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.509" endtime="20201117 14:41:53.527"></status>
</kw>
<msg timestamp="20201117 14:41:53.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.507" endtime="20201117 14:41:53.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.529" endtime="20201117 14:41:53.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.531" endtime="20201117 14:41:53.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.505" endtime="20201117 14:41:53.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.503" endtime="20201117 14:41:53.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.540" endtime="20201117 14:41:53.827"></status>
</kw>
<msg timestamp="20201117 14:41:53.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021625792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.539" endtime="20201117 14:41:53.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021625792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.832" endtime="20201117 14:41:53.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.840" endtime="20201117 14:41:53.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.536" endtime="20201117 14:41:53.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.534" endtime="20201117 14:41:53.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.846" level="INFO">${RESULT} = [{'time': 0.021625792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.052800000000291e-05, 'source_diff': 9.052800000000291e-05}, {'time': 0.021721653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.843" endtime="20201117 14:41:53.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.860" level="INFO">${ACCURACY} = {'source_diff': [9.052800000000291e-05, 8.995900000000057e-05, 8.983400000000044e-05, 8.988899999999925e-05, 9.002799999999894e-05, 9.020800000000134e-05, 8.977799999999869e-05, 8.993100000000143e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:53.847" endtime="20201117 14:41:53.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.865" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.864" endtime="20201117 14:41:53.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.868" level="INFO">VALUE: [9.052800000000291e-05, 8.995900000000057e-05, 8.983400000000044e-05, 8.988899999999925e-05, 9.002799999999894e-05, 9.020800000000134e-05, 8.977799999999869e-05, 8.993100000000143e-05, 9.002699999999947e-05, 9.008300000000122e-05, 8.987499999999968e-05, 9.015299999999907e-05, 9.011100000000036e-05, 8.993000000000195e-05, 8.998599999999676e-05, 8.976399999999912e-05, 8.99999999999998e-05, 8.98329999999975e-05, 8.983400000000044e-05, 8.980599999999783e-05, 9.001399999999937e-05, 8.984700000000054e-05, 9.01389999999995e-05, 9.012499999999993e-05, 8.982000000000087e-05, 9.009800000000026e-05, 8.977699999999922e-05, 8.9945000000001e-05, 9.006900000000165e-05, 8.990199999999934e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.015300000000254e-05, 9.008300000000122e-05, 8.991700000000186e-05, 9.029200000000223e-05, 8.990299999999882e-05, 9.005600000000155e-05, 8.986199999999958e-05, 8.972200000000041e-05, 8.994400000000152e-05, 8.976399999999912e-05, 9.009699999999732e-05, 8.973699999999946e-05, 8.986100000000011e-05, 9.002699999999947e-05, 8.977799999999869e-05, 9.012499999999993e-05, 9.025000000000005e-05, 9.006900000000165e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.866" endtime="20201117 14:41:53.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.861" endtime="20201117 14:41:53.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.871" endtime="20201117 14:41:53.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.875" endtime="20201117 14:41:53.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.873" endtime="20201117 14:41:53.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.870" endtime="20201117 14:41:53.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.501" endtime="20201117 14:41:53.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.100" endtime="20201117 14:41:53.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.099" endtime="20201117 14:41:53.896"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.899" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.907" endtime="20201117 14:41:53.926"></status>
</kw>
<msg timestamp="20201117 14:41:53.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.906" endtime="20201117 14:41:53.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.927" endtime="20201117 14:41:53.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.930" endtime="20201117 14:41:53.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.903" endtime="20201117 14:41:53.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.901" endtime="20201117 14:41:53.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.939" endtime="20201117 14:41:54.225"></status>
</kw>
<msg timestamp="20201117 14:41:54.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024611611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.937" endtime="20201117 14:41:54.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024611611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.229" endtime="20201117 14:41:54.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.237" endtime="20201117 14:41:54.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.935" endtime="20201117 14:41:54.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.933" endtime="20201117 14:41:54.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.244" level="INFO">${RESULT} = [{'time': 0.024611611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.217999999999726e-05, 'source_diff': 9.217999999999726e-05}, {'time': 0.024708458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.241" endtime="20201117 14:41:54.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.258" level="INFO">${ACCURACY} = {'source_diff': [9.217999999999726e-05, 9.1332999999999e-05, 9.124999999999758e-05, 9.080499999999936e-05, 9.077700000000022e-05, 9.079099999999979e-05, 9.076400000000012e-05, 9.08329999999985e-05, 9....</msg>
<status status="PASS" starttime="20201117 14:41:54.245" endtime="20201117 14:41:54.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.264" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.263" endtime="20201117 14:41:54.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.266" level="INFO">VALUE: [9.217999999999726e-05, 9.1332999999999e-05, 9.124999999999758e-05, 9.080499999999936e-05, 9.077700000000022e-05, 9.079099999999979e-05, 9.076400000000012e-05, 9.08329999999985e-05, 9.073600000000098e-05, 9.126399999999715e-05, 9.069400000000227e-05, 9.118099999999921e-05, 9.099999999999733e-05, 9.090299999999982e-05, 9.11390000000005e-05, 9.086100000000111e-05, 9.088900000000025e-05, 9.086199999999711e-05, 9.070800000000184e-05, 9.075000000000055e-05, 9.08329999999985e-05, 9.079099999999979e-05, 9.123599999999801e-05, 9.076400000000012e-05, 9.105499999999961e-05, 9.111099999999789e-05, 9.129199999999976e-05, 9.123599999999801e-05, 9.111099999999789e-05, 9.077799999999969e-05, 9.122199999999844e-05, 9.113800000000102e-05, 9.094499999999853e-05, 9.129200000000323e-05, 9.116699999999964e-05, 9.090200000000034e-05, 9.084800000000101e-05, 9.10000000000008e-05, 9.123599999999801e-05, 9.123600000000148e-05, 9.109700000000179e-05, 9.129199999999976e-05, 9.098600000000123e-05, 9.098599999999776e-05, 9.126400000000062e-05, 9.130599999999933e-05, 9.123600000000148e-05, 9.077799999999969e-05, 9.073600000000098e-05, 9.088900000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.265" endtime="20201117 14:41:54.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.259" endtime="20201117 14:41:54.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.270" endtime="20201117 14:41:54.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.275" endtime="20201117 14:41:54.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.274" endtime="20201117 14:41:54.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.268" endtime="20201117 14:41:54.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.900" endtime="20201117 14:41:54.296"></status>
</kw>
<msg timestamp="20201117 14:41:54.296" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.304" endtime="20201117 14:41:54.324"></status>
</kw>
<msg timestamp="20201117 14:41:54.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.303" endtime="20201117 14:41:54.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.325" endtime="20201117 14:41:54.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.327" endtime="20201117 14:41:54.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.300" endtime="20201117 14:41:54.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.298" endtime="20201117 14:41:54.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.338" endtime="20201117 14:41:54.627"></status>
</kw>
<msg timestamp="20201117 14:41:54.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.337" endtime="20201117 14:41:54.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.631" endtime="20201117 14:41:54.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.640" endtime="20201117 14:41:54.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.334" endtime="20201117 14:41:54.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.332" endtime="20201117 14:41:54.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.647" level="INFO">${RESULT} = [{'time': 0.021526514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.172199999999894e-05, 'source_diff': 9.172199999999894e-05}, {'time': 0.021623347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.644" endtime="20201117 14:41:54.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.661" level="INFO">${ACCURACY} = {'source_diff': [9.172199999999894e-05, 9.130499999999986e-05, 9.120799999999887e-05, 9.116699999999964e-05, 9.125000000000105e-05, 9.102799999999994e-05, 9.115300000000007e-05, 9.084699999999807e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:54.648" endtime="20201117 14:41:54.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.666" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.665" endtime="20201117 14:41:54.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.668" level="INFO">VALUE: [9.172199999999894e-05, 9.130499999999986e-05, 9.120799999999887e-05, 9.116699999999964e-05, 9.125000000000105e-05, 9.102799999999994e-05, 9.115300000000007e-05, 9.084699999999807e-05, 9.10000000000008e-05, 9.118099999999921e-05, 9.101400000000037e-05, 9.111200000000083e-05, 9.070799999999837e-05, 9.081899999999893e-05, 9.086100000000111e-05, 9.112500000000093e-05, 9.113899999999703e-05, 9.088900000000025e-05, 9.109699999999832e-05, 9.108300000000222e-05, 9.066699999999914e-05, 9.106899999999918e-05, 9.073600000000098e-05, 9.119499999999878e-05, 9.088900000000025e-05, 9.118099999999921e-05, 9.122199999999844e-05, 9.105599999999908e-05, 9.068099999999871e-05, 9.095900000000157e-05, 9.097300000000114e-05, 9.090200000000034e-05, 9.090200000000034e-05, 9.088900000000025e-05, 9.105499999999961e-05, 9.123600000000148e-05, 9.125000000000105e-05, 9.098600000000123e-05, 9.092999999999948e-05, 9.084699999999807e-05, 9.116699999999964e-05, 9.13190000000029e-05, 9.06670000000026e-05, 9.076400000000012e-05, 9.127800000000019e-05, 9.076300000000065e-05, 9.098599999999776e-05, 9.120899999999835e-05, 9.092999999999948e-05, 9.091599999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.667" endtime="20201117 14:41:54.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.662" endtime="20201117 14:41:54.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.672" endtime="20201117 14:41:54.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.675" endtime="20201117 14:41:54.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.674" endtime="20201117 14:41:54.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.670" endtime="20201117 14:41:54.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.297" endtime="20201117 14:41:54.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.898" endtime="20201117 14:41:54.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.897" endtime="20201117 14:41:54.696"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.699" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.707" endtime="20201117 14:41:54.728"></status>
</kw>
<msg timestamp="20201117 14:41:54.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.706" endtime="20201117 14:41:54.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.731" endtime="20201117 14:41:54.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.738" endtime="20201117 14:41:54.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.703" endtime="20201117 14:41:54.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.701" endtime="20201117 14:41:54.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.761" endtime="20201117 14:41:55.057"></status>
</kw>
<msg timestamp="20201117 14:41:55.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024751931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024844292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.757" endtime="20201117 14:41:55.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024751931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024844292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.061" endtime="20201117 14:41:55.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.070" endtime="20201117 14:41:55.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.750" endtime="20201117 14:41:55.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.746" endtime="20201117 14:41:55.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.076" level="INFO">${RESULT} = [{'time': 0.024844292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236099999999914e-05, 'source_diff': 9.236099999999914e-05}, {'time': 0.024941125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.073" endtime="20201117 14:41:55.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.093" level="INFO">${ACCURACY} = {'source_diff': [9.236099999999914e-05, 9.155600000000305e-05, 9.226400000000162e-05, 9.194400000000005e-05, 9.215300000000107e-05, 9.225000000000205e-05, 9.198599999999876e-05, 9.21940000000003e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:55.077" endtime="20201117 14:41:55.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.097" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.096" endtime="20201117 14:41:55.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.100" level="INFO">VALUE: [9.236099999999914e-05, 9.155600000000305e-05, 9.226400000000162e-05, 9.194400000000005e-05, 9.215300000000107e-05, 9.225000000000205e-05, 9.198599999999876e-05, 9.21940000000003e-05, 9.168099999999971e-05, 9.212499999999846e-05, 9.204199999999704e-05, 9.224999999999858e-05, 9.18879999999983e-05, 9.204100000000104e-05, 9.172200000000241e-05, 9.190200000000134e-05, 9.177800000000069e-05, 9.227800000000119e-05, 9.174999999999808e-05, 9.202799999999747e-05, 9.173599999999851e-05, 9.222199999999944e-05, 9.187499999999821e-05, 9.227800000000119e-05, 9.180599999999983e-05, 9.205600000000008e-05, 9.208399999999922e-05, 9.226399999999815e-05, 9.183399999999897e-05, 9.21940000000003e-05, 9.218000000000073e-05, 9.186100000000211e-05, 9.205499999999714e-05, 9.225000000000205e-05, 9.212500000000193e-05, 9.20000000000018e-05, 9.202800000000094e-05, 9.218100000000021e-05, 9.222199999999944e-05, 9.233399999999947e-05, 9.179200000000026e-05, 9.183399999999897e-05, 9.194499999999953e-05, 9.220900000000282e-05, 9.197300000000214e-05, 9.19870000000017e-05, 9.218100000000021e-05, 9.225000000000205e-05, 9.20000000000018e-05, 9.231900000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.099" endtime="20201117 14:41:55.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.094" endtime="20201117 14:41:55.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.103" endtime="20201117 14:41:55.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.107" endtime="20201117 14:41:55.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.105" endtime="20201117 14:41:55.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.102" endtime="20201117 14:41:55.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.700" endtime="20201117 14:41:55.128"></status>
</kw>
<msg timestamp="20201117 14:41:55.128" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.136" endtime="20201117 14:41:55.155"></status>
</kw>
<msg timestamp="20201117 14:41:55.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.135" endtime="20201117 14:41:55.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.157" endtime="20201117 14:41:55.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.160" endtime="20201117 14:41:55.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.132" endtime="20201117 14:41:55.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.130" endtime="20201117 14:41:55.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.169" endtime="20201117 14:41:55.456"></status>
</kw>
<msg timestamp="20201117 14:41:55.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.168" endtime="20201117 14:41:55.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.460" endtime="20201117 14:41:55.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.469" endtime="20201117 14:41:55.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.165" endtime="20201117 14:41:55.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.163" endtime="20201117 14:41:55.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.475" level="INFO">${RESULT} = [{'time': 0.022095389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.323600000000001e-05, 'source_diff': 9.323600000000001e-05}, {'time': 0.022193236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.472" endtime="20201117 14:41:55.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.489" level="INFO">${ACCURACY} = {'source_diff': [9.323600000000001e-05, 9.244400000000055e-05, 9.177800000000069e-05, 9.201400000000137e-05, 9.225000000000205e-05, 9.18199999999994e-05, 9.193099999999996e-05, 9.206999999999965e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:55.476" endtime="20201117 14:41:55.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.493" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.492" endtime="20201117 14:41:55.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.496" level="INFO">VALUE: [9.323600000000001e-05, 9.244400000000055e-05, 9.177800000000069e-05, 9.201400000000137e-05, 9.225000000000205e-05, 9.18199999999994e-05, 9.193099999999996e-05, 9.206999999999965e-05, 9.201400000000137e-05, 9.176399999999765e-05, 9.174999999999808e-05, 9.182000000000287e-05, 9.187500000000168e-05, 9.204100000000104e-05, 9.202700000000147e-05, 9.170799999999937e-05, 9.19719999999992e-05, 9.205600000000008e-05, 9.19719999999992e-05, 9.180599999999983e-05, 9.198599999999876e-05, 9.172199999999894e-05, 9.199999999999833e-05, 9.179200000000026e-05, 9.193099999999996e-05, 9.188900000000125e-05, 9.20000000000018e-05, 9.193099999999996e-05, 9.223599999999901e-05, 9.20000000000018e-05, 9.204200000000051e-05, 9.222199999999944e-05, 9.226399999999815e-05, 9.177699999999775e-05, 9.206900000000018e-05, 9.229199999999729e-05, 9.188900000000125e-05, 9.16939999999998e-05, 9.194400000000005e-05, 9.220799999999987e-05, 9.216700000000064e-05, 9.173600000000198e-05, 9.222300000000239e-05, 9.193099999999996e-05, 9.218000000000073e-05, 9.194499999999953e-05, 9.227700000000172e-05, 9.213800000000202e-05, 9.184699999999907e-05, 9.187500000000168e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.494" endtime="20201117 14:41:55.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.489" endtime="20201117 14:41:55.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.499" endtime="20201117 14:41:55.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.502" endtime="20201117 14:41:55.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.500" endtime="20201117 14:41:55.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.497" endtime="20201117 14:41:55.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.128" endtime="20201117 14:41:55.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.698" endtime="20201117 14:41:55.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.697" endtime="20201117 14:41:55.526"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.531" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.549" endtime="20201117 14:41:55.572"></status>
</kw>
<msg timestamp="20201117 14:41:55.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.546" endtime="20201117 14:41:55.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.576" endtime="20201117 14:41:55.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.581" endtime="20201117 14:41:55.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.540" endtime="20201117 14:41:55.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.535" endtime="20201117 14:41:55.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.600" endtime="20201117 14:41:55.891"></status>
</kw>
<msg timestamp="20201117 14:41:55.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041048569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041142556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.596" endtime="20201117 14:41:55.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041048569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041142556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.895" endtime="20201117 14:41:55.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.904" endtime="20201117 14:41:55.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.591" endtime="20201117 14:41:55.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.587" endtime="20201117 14:41:55.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.911" level="INFO">${RESULT} = [{'time': 0.041142556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.398699999999677e-05, 'source_diff': 9.398699999999677e-05}, {'time': 0.041241361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.907" endtime="20201117 14:41:55.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.924" level="INFO">${ACCURACY} = {'source_diff': [9.398699999999677e-05, 9.330499999999492e-05, 9.313899999999903e-05, 9.311099999999989e-05, 9.28330000000005e-05, 9.322199999999697e-05, 9.312499999999946e-05, 9.320900000000382e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:55.912" endtime="20201117 14:41:55.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.929" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.928" endtime="20201117 14:41:55.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.931" level="INFO">VALUE: [9.398699999999677e-05, 9.330499999999492e-05, 9.313899999999903e-05, 9.311099999999989e-05, 9.28330000000005e-05, 9.322199999999697e-05, 9.312499999999946e-05, 9.320900000000382e-05, 9.308400000000022e-05, 9.323600000000348e-05, 9.316700000000511e-05, 9.281999999999346e-05, 9.292999999999801e-05, 9.280500000000136e-05, 9.299999999999586e-05, 9.30000000000028e-05, 9.273600000000298e-05, 9.330500000000186e-05, 9.270800000000384e-05, 9.31529999999986e-05, 9.2945000000004e-05, 9.290300000000529e-05, 9.279199999999432e-05, 9.301399999999543e-05, 9.3027999999995e-05, 9.319499999999731e-05, 9.297300000000314e-05, 9.31529999999986e-05, 9.298600000000323e-05, 9.327700000000272e-05, 9.302700000000247e-05, 9.281900000000093e-05, 9.295799999999715e-05, 9.311099999999989e-05, 9.304199999999457e-05, 9.284700000000007e-05, 9.28330000000005e-05, 9.305600000000108e-05, 9.284700000000007e-05, 9.309700000000032e-05, 9.276400000000212e-05, 9.320900000000382e-05, 9.284800000000648e-05, 9.312499999999946e-05, 9.308400000000022e-05, 9.318099999999774e-05, 9.297199999999672e-05, 9.291699999999792e-05, 9.281900000000093e-05, 9.320800000000434e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.930" endtime="20201117 14:41:55.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.925" endtime="20201117 14:41:55.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.934" endtime="20201117 14:41:55.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.937" endtime="20201117 14:41:55.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.936" endtime="20201117 14:41:55.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.933" endtime="20201117 14:41:55.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.533" endtime="20201117 14:41:55.959"></status>
</kw>
<msg timestamp="20201117 14:41:55.959" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.967" endtime="20201117 14:41:55.986"></status>
</kw>
<msg timestamp="20201117 14:41:55.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.965" endtime="20201117 14:41:55.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.987" endtime="20201117 14:41:55.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.990" endtime="20201117 14:41:55.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.963" endtime="20201117 14:41:55.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.961" endtime="20201117 14:41:55.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.999" endtime="20201117 14:41:56.285"></status>
</kw>
<msg timestamp="20201117 14:41:56.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:55.997" endtime="20201117 14:41:56.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:56.289" endtime="20201117 14:41:56.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.298" endtime="20201117 14:41:56.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.995" endtime="20201117 14:41:56.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.993" endtime="20201117 14:41:56.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.304" level="INFO">${RESULT} = [{'time': 0.021866, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.412500000000046e-05, 'source_diff': 9.412500000000046e-05}, {'time': 0.021963847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:56.301" endtime="20201117 14:41:56.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.318" level="INFO">${ACCURACY} = {'source_diff': [9.412500000000046e-05, 9.251400000000187e-05, 9.291699999999792e-05, 9.305499999999814e-05, 9.274999999999908e-05, 9.293100000000096e-05, 9.302800000000194e-05, 9.273599999999951e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:56.305" endtime="20201117 14:41:56.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.322" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.321" endtime="20201117 14:41:56.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.324" level="INFO">VALUE: [9.412500000000046e-05, 9.251400000000187e-05, 9.291699999999792e-05, 9.305499999999814e-05, 9.274999999999908e-05, 9.293100000000096e-05, 9.302800000000194e-05, 9.273599999999951e-05, 9.287499999999921e-05, 9.312499999999946e-05, 9.284700000000007e-05, 9.283399999999997e-05, 9.29870000000027e-05, 9.29720000000002e-05, 9.323699999999949e-05, 9.326299999999968e-05, 9.288899999999878e-05, 9.313899999999903e-05, 9.281900000000093e-05, 9.28330000000005e-05, 9.309700000000032e-05, 9.295800000000062e-05, 9.311099999999989e-05, 9.294499999999706e-05, 9.305600000000108e-05, 9.318100000000121e-05, 9.274999999999908e-05, 9.308400000000022e-05, 9.280599999999736e-05, 9.276399999999865e-05, 9.326399999999915e-05, 9.283399999999997e-05, 9.31390000000025e-05, 9.277800000000169e-05, 9.322200000000044e-05, 9.304100000000204e-05, 9.318000000000173e-05, 9.276400000000212e-05, 9.295799999999715e-05, 9.330599999999786e-05, 9.311099999999989e-05, 9.320800000000087e-05, 9.293100000000096e-05, 9.30139999999989e-05, 9.316699999999817e-05, 9.299999999999933e-05, 9.283399999999997e-05, 9.312500000000293e-05, 9.305499999999814e-05, 9.323699999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.323" endtime="20201117 14:41:56.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.319" endtime="20201117 14:41:56.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.328" endtime="20201117 14:41:56.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.332" endtime="20201117 14:41:56.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.330" endtime="20201117 14:41:56.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.326" endtime="20201117 14:41:56.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.960" endtime="20201117 14:41:56.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.529" endtime="20201117 14:41:56.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.527" endtime="20201117 14:41:56.353"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.355" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.363" endtime="20201117 14:41:56.382"></status>
</kw>
<msg timestamp="20201117 14:41:56.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.362" endtime="20201117 14:41:56.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.383" endtime="20201117 14:41:56.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.386" endtime="20201117 14:41:56.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.359" endtime="20201117 14:41:56.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.357" endtime="20201117 14:41:56.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.395" endtime="20201117 14:41:56.681"></status>
</kw>
<msg timestamp="20201117 14:41:56.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023975181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024069514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.393" endtime="20201117 14:41:56.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023975181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024069514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.685" endtime="20201117 14:41:56.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.693" endtime="20201117 14:41:56.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.391" endtime="20201117 14:41:56.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.389" endtime="20201117 14:41:56.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.700" level="INFO">${RESULT} = [{'time': 0.024069514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.433299999999853e-05, 'source_diff': 9.433299999999853e-05}, {'time': 0.024169347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:56.697" endtime="20201117 14:41:56.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.715" level="INFO">${ACCURACY} = {'source_diff': [9.433299999999853e-05, 9.405499999999914e-05, 9.418099999999874e-05, 9.406899999999871e-05, 9.409700000000132e-05, 9.390299999999935e-05, 9.406999999999818e-05, 9.375000000000008e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:56.701" endtime="20201117 14:41:56.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.719" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.718" endtime="20201117 14:41:56.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.722" level="INFO">VALUE: [9.433299999999853e-05, 9.405499999999914e-05, 9.418099999999874e-05, 9.406899999999871e-05, 9.409700000000132e-05, 9.390299999999935e-05, 9.406999999999818e-05, 9.375000000000008e-05, 9.372200000000094e-05, 9.375000000000008e-05, 9.40139999999999e-05, 9.409800000000079e-05, 9.400000000000033e-05, 9.398600000000076e-05, 9.388899999999978e-05, 9.384700000000107e-05, 9.376400000000312e-05, 9.398600000000076e-05, 9.394400000000205e-05, 9.412500000000046e-05, 9.412500000000046e-05, 9.413900000000003e-05, 9.409800000000079e-05, 9.37079999999979e-05, 9.427799999999972e-05, 9.423599999999754e-05, 9.381899999999846e-05, 9.373599999999704e-05, 9.387500000000021e-05, 9.408399999999775e-05, 9.394400000000205e-05, 9.38469999999976e-05, 9.411100000000089e-05, 9.42079999999984e-05, 9.400000000000033e-05, 9.404200000000251e-05, 9.400000000000033e-05, 9.411099999999742e-05, 9.370800000000137e-05, 9.398600000000076e-05, 9.413900000000003e-05, 9.40139999999999e-05, 9.408399999999775e-05, 9.416700000000264e-05, 9.422300000000092e-05, 9.377800000000269e-05, 9.419499999999831e-05, 9.381900000000193e-05, 9.39859999999973e-05, 9.42079999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.720" endtime="20201117 14:41:56.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.716" endtime="20201117 14:41:56.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.725" endtime="20201117 14:41:56.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.729" endtime="20201117 14:41:56.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.727" endtime="20201117 14:41:56.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.724" endtime="20201117 14:41:56.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.356" endtime="20201117 14:41:56.749"></status>
</kw>
<msg timestamp="20201117 14:41:56.750" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.758" endtime="20201117 14:41:56.776"></status>
</kw>
<msg timestamp="20201117 14:41:56.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.756" endtime="20201117 14:41:56.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.777" endtime="20201117 14:41:56.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.780" endtime="20201117 14:41:56.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.754" endtime="20201117 14:41:56.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.752" endtime="20201117 14:41:56.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.789" endtime="20201117 14:41:57.076"></status>
</kw>
<msg timestamp="20201117 14:41:57.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.787" endtime="20201117 14:41:57.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.080" endtime="20201117 14:41:57.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.088" endtime="20201117 14:41:57.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.785" endtime="20201117 14:41:57.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.783" endtime="20201117 14:41:57.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.095" level="INFO">${RESULT} = [{'time': 0.021723069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.505500000000014e-05, 'source_diff': 9.505500000000014e-05}, {'time': 0.021822917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.092" endtime="20201117 14:41:57.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.108" level="INFO">${ACCURACY} = {'source_diff': [9.505500000000014e-05, 9.405600000000208e-05, 9.408399999999775e-05, 9.391599999999944e-05, 9.42079999999984e-05, 9.423600000000101e-05, 9.422199999999797e-05, 9.404099999999957e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:57.096" endtime="20201117 14:41:57.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.113" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.112" endtime="20201117 14:41:57.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.115" level="INFO">VALUE: [9.505500000000014e-05, 9.405600000000208e-05, 9.408399999999775e-05, 9.391599999999944e-05, 9.42079999999984e-05, 9.423600000000101e-05, 9.422199999999797e-05, 9.404099999999957e-05, 9.415300000000307e-05, 9.400000000000033e-05, 9.395800000000162e-05, 9.418100000000221e-05, 9.402799999999947e-05, 9.404199999999904e-05, 9.397300000000067e-05, 9.405599999999861e-05, 9.418100000000221e-05, 9.405599999999861e-05, 9.384800000000054e-05, 9.376399999999965e-05, 9.386200000000011e-05, 9.417999999999926e-05, 9.423600000000101e-05, 9.42079999999984e-05, 9.398600000000076e-05, 9.38469999999976e-05, 9.429199999999929e-05, 9.38469999999976e-05, 9.402799999999947e-05, 9.395800000000162e-05, 9.375000000000008e-05, 9.386100000000064e-05, 9.388899999999978e-05, 9.393099999999849e-05, 9.41529999999996e-05, 9.387500000000021e-05, 9.422199999999797e-05, 9.425000000000058e-05, 9.397300000000067e-05, 9.372199999999747e-05, 9.388899999999978e-05, 9.422199999999797e-05, 9.408300000000175e-05, 9.380500000000236e-05, 9.39590000000011e-05, 9.386100000000064e-05, 9.42079999999984e-05, 9.426400000000015e-05, 9.387500000000021e-05, 9.387500000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.114" endtime="20201117 14:41:57.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.109" endtime="20201117 14:41:57.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.119" endtime="20201117 14:41:57.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.122" endtime="20201117 14:41:57.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.121" endtime="20201117 14:41:57.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.117" endtime="20201117 14:41:57.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.750" endtime="20201117 14:41:57.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.354" endtime="20201117 14:41:57.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.353" endtime="20201117 14:41:57.143"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.145" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.154" endtime="20201117 14:41:57.172"></status>
</kw>
<msg timestamp="20201117 14:41:57.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.152" endtime="20201117 14:41:57.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.174" endtime="20201117 14:41:57.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.176" endtime="20201117 14:41:57.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.150" endtime="20201117 14:41:57.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.147" endtime="20201117 14:41:57.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.185" endtime="20201117 14:41:57.471"></status>
</kw>
<msg timestamp="20201117 14:41:57.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023945611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.184" endtime="20201117 14:41:57.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023945611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.476" endtime="20201117 14:41:57.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.484" endtime="20201117 14:41:57.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.181" endtime="20201117 14:41:57.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.179" endtime="20201117 14:41:57.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.490" level="INFO">${RESULT} = [{'time': 0.023945611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.601399999999843e-05, 'source_diff': 9.601399999999843e-05}, {'time': 0.024046458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.487" endtime="20201117 14:41:57.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.504" level="INFO">${ACCURACY} = {'source_diff': [9.601399999999843e-05, 9.537499999999824e-05, 9.505500000000014e-05, 9.506899999999971e-05, 9.476400000000065e-05, 9.479199999999979e-05, 9.479199999999979e-05, 9.504199999999657e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:57.491" endtime="20201117 14:41:57.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.508" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.507" endtime="20201117 14:41:57.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.511" level="INFO">VALUE: [9.601399999999843e-05, 9.537499999999824e-05, 9.505500000000014e-05, 9.506899999999971e-05, 9.476400000000065e-05, 9.479199999999979e-05, 9.479199999999979e-05, 9.504199999999657e-05, 9.502800000000047e-05, 9.506999999999918e-05, 9.476400000000065e-05, 9.481999999999893e-05, 9.469500000000228e-05, 9.526400000000115e-05, 9.516700000000017e-05, 9.473699999999752e-05, 9.513900000000103e-05, 9.505500000000014e-05, 9.48880000000013e-05, 9.5027000000001e-05, 9.529200000000029e-05, 9.51530000000006e-05, 9.497199999999872e-05, 9.49859999999983e-05, 9.509699999999885e-05, 9.488900000000078e-05, 9.509699999999885e-05, 9.512500000000146e-05, 9.520899999999888e-05, 9.527800000000072e-05, 9.527800000000072e-05, 9.495899999999863e-05, 9.527799999999725e-05, 9.491699999999992e-05, 9.475000000000108e-05, 9.509699999999885e-05, 9.51660000000007e-05, 9.474999999999761e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.476400000000065e-05, 9.508299999999928e-05, 9.497300000000167e-05, 9.51530000000006e-05, 9.494499999999906e-05, 9.522199999999897e-05, 9.512499999999799e-05, 9.479199999999979e-05, 9.490300000000035e-05, 9.49859999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.509" endtime="20201117 14:41:57.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.505" endtime="20201117 14:41:57.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.514" endtime="20201117 14:41:57.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.518" endtime="20201117 14:41:57.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.516" endtime="20201117 14:41:57.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.513" endtime="20201117 14:41:57.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.146" endtime="20201117 14:41:57.539"></status>
</kw>
<msg timestamp="20201117 14:41:57.539" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.547" endtime="20201117 14:41:57.566"></status>
</kw>
<msg timestamp="20201117 14:41:57.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.545" endtime="20201117 14:41:57.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.567" endtime="20201117 14:41:57.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.570" endtime="20201117 14:41:57.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.543" endtime="20201117 14:41:57.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.541" endtime="20201117 14:41:57.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.579" endtime="20201117 14:41:57.867"></status>
</kw>
<msg timestamp="20201117 14:41:57.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.577" endtime="20201117 14:41:57.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.871" endtime="20201117 14:41:57.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.879" endtime="20201117 14:41:57.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.575" endtime="20201117 14:41:57.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.573" endtime="20201117 14:41:57.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.886" level="INFO">${RESULT} = [{'time': 0.021342444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.605499999999767e-05, 'source_diff': 9.605499999999767e-05}, {'time': 0.021443278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.882" endtime="20201117 14:41:57.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.899" level="INFO">${ACCURACY} = {'source_diff': [9.605499999999767e-05, 9.524999999999811e-05, 9.505599999999961e-05, 9.508400000000222e-05, 9.487499999999774e-05, 9.48880000000013e-05, 9.470899999999838e-05, 9.505500000000014e-05, ...</msg>
<status status="PASS" starttime="20201117 14:41:57.886" endtime="20201117 14:41:57.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.904" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.903" endtime="20201117 14:41:57.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.906" level="INFO">VALUE: [9.605499999999767e-05, 9.524999999999811e-05, 9.505599999999961e-05, 9.508400000000222e-05, 9.487499999999774e-05, 9.48880000000013e-05, 9.470899999999838e-05, 9.505500000000014e-05, 9.513900000000103e-05, 9.495799999999915e-05, 9.480499999999989e-05, 9.52079999999994e-05, 9.473599999999804e-05, 9.494399999999958e-05, 9.506899999999971e-05, 9.500000000000133e-05, 9.486100000000164e-05, 9.502800000000047e-05, 9.502699999999753e-05, 9.473599999999804e-05, 9.518100000000321e-05, 9.519500000000278e-05, 9.522199999999897e-05, 9.480499999999989e-05, 9.48469999999986e-05, 9.523599999999854e-05, 9.506899999999971e-05, 9.480499999999989e-05, 9.530599999999986e-05, 9.493000000000001e-05, 9.469399999999933e-05, 9.481899999999946e-05, 9.476400000000065e-05, 9.512499999999799e-05, 9.518099999999974e-05, 9.494499999999906e-05, 9.477800000000022e-05, 9.493099999999949e-05, 9.50140000000009e-05, 9.480499999999989e-05, 9.506999999999918e-05, 9.481899999999946e-05, 9.474999999999761e-05, 9.50140000000009e-05, 9.491600000000044e-05, 9.472199999999847e-05, 9.473599999999804e-05, 9.491699999999992e-05, 9.518000000000026e-05, 9.511099999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.905" endtime="20201117 14:41:57.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.900" endtime="20201117 14:41:57.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.909" endtime="20201117 14:41:57.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.913" endtime="20201117 14:41:57.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.911" endtime="20201117 14:41:57.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.908" endtime="20201117 14:41:57.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.539" endtime="20201117 14:41:57.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.144" endtime="20201117 14:41:57.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.144" endtime="20201117 14:41:57.934"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.937" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.945" endtime="20201117 14:41:57.963"></status>
</kw>
<msg timestamp="20201117 14:41:57.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.943" endtime="20201117 14:41:57.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.965" endtime="20201117 14:41:57.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.967" endtime="20201117 14:41:57.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.941" endtime="20201117 14:41:57.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.939" endtime="20201117 14:41:57.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.976" endtime="20201117 14:41:58.263"></status>
</kw>
<msg timestamp="20201117 14:41:58.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024746778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.975" endtime="20201117 14:41:58.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024746778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.267" endtime="20201117 14:41:58.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.275" endtime="20201117 14:41:58.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.972" endtime="20201117 14:41:58.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.970" endtime="20201117 14:41:58.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.282" level="INFO">${RESULT} = [{'time': 0.024746778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.640300000000185e-05, 'source_diff': 9.640300000000185e-05}, {'time': 0.024848639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.279" endtime="20201117 14:41:58.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.297" level="INFO">${ACCURACY} = {'source_diff': [9.640300000000185e-05, 9.64859999999998e-05, 9.609800000000279e-05, 9.62080000000004e-05, 9.577799999999775e-05, 9.62080000000004e-05, 9.605600000000061e-05, 9.572299999999895e-05, 9....</msg>
<status status="PASS" starttime="20201117 14:41:58.283" endtime="20201117 14:41:58.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.302" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.301" endtime="20201117 14:41:58.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.304" level="INFO">VALUE: [9.640300000000185e-05, 9.64859999999998e-05, 9.609800000000279e-05, 9.62080000000004e-05, 9.577799999999775e-05, 9.62080000000004e-05, 9.605600000000061e-05, 9.572299999999895e-05, 9.576400000000165e-05, 9.618000000000126e-05, 9.6027000000002e-05, 9.6027000000002e-05, 9.59720000000032e-05, 9.573599999999904e-05, 9.626399999999868e-05, 9.566700000000067e-05, 9.601399999999843e-05, 9.613899999999856e-05, 9.604199999999757e-05, 9.588899999999831e-05, 9.59720000000032e-05, 9.595899999999963e-05, 9.608399999999975e-05, 9.591599999999798e-05, 9.573599999999904e-05, 9.608399999999975e-05, 9.611199999999889e-05, 9.586100000000264e-05, 9.588900000000178e-05, 9.579100000000132e-05, 9.626399999999868e-05, 9.625000000000258e-05, 9.612499999999899e-05, 9.579199999999732e-05, 9.624999999999911e-05, 9.606900000000071e-05, 9.58469999999996e-05, 9.605600000000061e-05, 9.590299999999788e-05, 9.56530000000011e-05, 9.59859999999993e-05, 9.599999999999886e-05, 9.577800000000122e-05, 9.597199999999972e-05, 9.586100000000264e-05, 9.622199999999997e-05, 9.575000000000208e-05, 9.626400000000215e-05, 9.608300000000028e-05, 9.630600000000086e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.303" endtime="20201117 14:41:58.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.298" endtime="20201117 14:41:58.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.307" endtime="20201117 14:41:58.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.311" endtime="20201117 14:41:58.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.309" endtime="20201117 14:41:58.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.305" endtime="20201117 14:41:58.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.937" endtime="20201117 14:41:58.331"></status>
</kw>
<msg timestamp="20201117 14:41:58.331" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.340" endtime="20201117 14:41:58.359"></status>
</kw>
<msg timestamp="20201117 14:41:58.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.338" endtime="20201117 14:41:58.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.360" endtime="20201117 14:41:58.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.363" endtime="20201117 14:41:58.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.336" endtime="20201117 14:41:58.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.334" endtime="20201117 14:41:58.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.372" endtime="20201117 14:41:58.657"></status>
</kw>
<msg timestamp="20201117 14:41:58.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.370" endtime="20201117 14:41:58.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.661" endtime="20201117 14:41:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.675" endtime="20201117 14:41:58.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.367" endtime="20201117 14:41:58.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.366" endtime="20201117 14:41:58.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.681" level="INFO">${RESULT} = [{'time': 0.021455194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.726300000000021e-05, 'source_diff': 9.726300000000021e-05}, {'time': 0.021557014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.678" endtime="20201117 14:41:58.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.695" level="INFO">${ACCURACY} = {'source_diff': [9.726300000000021e-05, 9.63470000000001e-05, 9.62920000000013e-05, 9.572199999999947e-05, 9.62920000000013e-05, 9.591700000000092e-05, 9.598699999999877e-05, 9.588900000000178e-05, 9....</msg>
<status status="PASS" starttime="20201117 14:41:58.682" endtime="20201117 14:41:58.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.699" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.698" endtime="20201117 14:41:58.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.702" level="INFO">VALUE: [9.726300000000021e-05, 9.63470000000001e-05, 9.62920000000013e-05, 9.572199999999947e-05, 9.62920000000013e-05, 9.591700000000092e-05, 9.598699999999877e-05, 9.588900000000178e-05, 9.575000000000208e-05, 9.579100000000132e-05, 9.594400000000058e-05, 9.59720000000032e-05, 9.594399999999711e-05, 9.573599999999904e-05, 9.599999999999886e-05, 9.581899999999699e-05, 9.588900000000178e-05, 9.608300000000028e-05, 9.588899999999831e-05, 9.577699999999828e-05, 9.601399999999843e-05, 9.580600000000036e-05, 9.58339999999995e-05, 9.591700000000092e-05, 9.594500000000006e-05, 9.608399999999975e-05, 9.622199999999997e-05, 9.559700000000282e-05, 9.580500000000089e-05, 9.586099999999917e-05, 9.600000000000233e-05, 9.627800000000172e-05, 9.57079999999999e-05, 9.612499999999899e-05, 9.599999999999886e-05, 9.61669999999977e-05, 9.615299999999813e-05, 9.627799999999825e-05, 9.597199999999972e-05, 9.59859999999993e-05, 9.604200000000104e-05, 9.612499999999899e-05, 9.612499999999899e-05, 9.579100000000132e-05, 9.62080000000004e-05, 9.590200000000187e-05, 9.577699999999828e-05, 9.622199999999997e-05, 9.615299999999813e-05, 9.599999999999886e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.700" endtime="20201117 14:41:58.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.696" endtime="20201117 14:41:58.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.705" endtime="20201117 14:41:58.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.708" endtime="20201117 14:41:58.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.706" endtime="20201117 14:41:58.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.703" endtime="20201117 14:41:58.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.332" endtime="20201117 14:41:58.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.935" endtime="20201117 14:41:58.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.934" endtime="20201117 14:41:58.729"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.731" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.740" endtime="20201117 14:41:58.758"></status>
</kw>
<msg timestamp="20201117 14:41:58.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.738" endtime="20201117 14:41:58.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.759" endtime="20201117 14:41:58.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.761" endtime="20201117 14:41:58.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.736" endtime="20201117 14:41:58.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.733" endtime="20201117 14:41:58.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.771" endtime="20201117 14:41:59.058"></status>
</kw>
<msg timestamp="20201117 14:41:59.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023827889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023926, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:58.769" endtime="20201117 14:41:59.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023827889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023926, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:59.062" endtime="20201117 14:41:59.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.071" endtime="20201117 14:41:59.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.766" endtime="20201117 14:41:59.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.765" endtime="20201117 14:41:59.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.077" level="INFO">${RESULT} = [{'time': 0.023926, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.811099999999795e-05, 'source_diff': 9.811099999999795e-05}, {'time': 0.024028819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:59.074" endtime="20201117 14:41:59.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.091" level="INFO">${ACCURACY} = {'source_diff': [9.811099999999795e-05, 9.74019999999999e-05, 9.699999999999986e-05, 9.688900000000278e-05, 9.70409999999991e-05, 9.663900000000253e-05, 9.722200000000097e-05, 9.716599999999923e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:41:59.078" endtime="20201117 14:41:59.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.095" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.094" endtime="20201117 14:41:59.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.098" level="INFO">VALUE: [9.811099999999795e-05, 9.74019999999999e-05, 9.699999999999986e-05, 9.688900000000278e-05, 9.70409999999991e-05, 9.663900000000253e-05, 9.722200000000097e-05, 9.716599999999923e-05, 9.730600000000186e-05, 9.719399999999837e-05, 9.695800000000115e-05, 9.705499999999867e-05, 9.68470000000006e-05, 9.684800000000007e-05, 9.676400000000265e-05, 9.674999999999961e-05, 9.71799999999988e-05, 9.719400000000183e-05, 9.67080000000009e-05, 9.708299999999781e-05, 9.683299999999756e-05, 9.713899999999956e-05, 9.690300000000235e-05, 9.680499999999842e-05, 9.681899999999799e-05, 9.694400000000158e-05, 9.705600000000161e-05, 9.7027999999999e-05, 9.702800000000247e-05, 9.683299999999756e-05, 9.720900000000088e-05, 9.712499999999999e-05, 9.679199999999832e-05, 9.676399999999918e-05, 9.709800000000032e-05, 9.726399999999968e-05, 9.709800000000032e-05, 9.711099999999695e-05, 9.711099999999695e-05, 9.719400000000183e-05, 9.719400000000183e-05, 9.679199999999832e-05, 9.68470000000006e-05, 9.712499999999999e-05, 9.683300000000103e-05, 9.713899999999956e-05, 9.684699999999713e-05, 9.723600000000054e-05, 9.713899999999956e-05, 9.688900000000278e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.096" endtime="20201117 14:41:59.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.092" endtime="20201117 14:41:59.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.101" endtime="20201117 14:41:59.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.104" endtime="20201117 14:41:59.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.103" endtime="20201117 14:41:59.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.099" endtime="20201117 14:41:59.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.732" endtime="20201117 14:41:59.125"></status>
</kw>
<msg timestamp="20201117 14:41:59.125" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.133" endtime="20201117 14:41:59.152"></status>
</kw>
<msg timestamp="20201117 14:41:59.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.132" endtime="20201117 14:41:59.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.154" endtime="20201117 14:41:59.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.157" endtime="20201117 14:41:59.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.129" endtime="20201117 14:41:59.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.127" endtime="20201117 14:41:59.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.166" endtime="20201117 14:41:59.453"></status>
</kw>
<msg timestamp="20201117 14:41:59.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02170275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:59.164" endtime="20201117 14:41:59.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02170275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:59.457" endtime="20201117 14:41:59.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.465" endtime="20201117 14:41:59.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.162" endtime="20201117 14:41:59.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.160" endtime="20201117 14:41:59.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.472" level="INFO">${RESULT} = [{'time': 0.02170275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.793099999999902e-05, 'source_diff': 9.793099999999902e-05}, {'time': 0.021805597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:59.469" endtime="20201117 14:41:59.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.485" level="INFO">${ACCURACY} = {'source_diff': [9.793099999999902e-05, 9.715299999999913e-05, 9.673600000000004e-05, 9.697199999999725e-05, 9.726399999999968e-05, 9.693100000000149e-05, 9.704200000000204e-05, 9.699999999999986e-05,...</msg>
<status status="PASS" starttime="20201117 14:41:59.473" endtime="20201117 14:41:59.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.490" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.489" endtime="20201117 14:41:59.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.492" level="INFO">VALUE: [9.793099999999902e-05, 9.715299999999913e-05, 9.673600000000004e-05, 9.697199999999725e-05, 9.726399999999968e-05, 9.693100000000149e-05, 9.704200000000204e-05, 9.699999999999986e-05, 9.680600000000136e-05, 9.706999999999771e-05, 9.731900000000196e-05, 9.691700000000192e-05, 9.687499999999974e-05, 9.690299999999888e-05, 9.69860000000003e-05, 9.676399999999918e-05, 9.669400000000133e-05, 9.725000000000011e-05, 9.692999999999855e-05, 9.704199999999857e-05, 9.687499999999974e-05, 9.704199999999857e-05, 9.711100000000042e-05, 9.686100000000017e-05, 9.704199999999857e-05, 9.680600000000136e-05, 9.674999999999961e-05, 9.69860000000003e-05, 9.68340000000005e-05, 9.676300000000318e-05, 9.702699999999953e-05, 9.719400000000183e-05, 9.67080000000009e-05, 9.712499999999999e-05, 9.708300000000128e-05, 9.700000000000333e-05, 9.690299999999888e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.729199999999882e-05, 9.729199999999882e-05, 9.683399999999703e-05, 9.688899999999931e-05, 9.684800000000007e-05, 9.723600000000054e-05, 9.693099999999802e-05, 9.69730000000002e-05, 9.712499999999999e-05, 9.68470000000006e-05, 9.711100000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.491" endtime="20201117 14:41:59.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.486" endtime="20201117 14:41:59.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.495" endtime="20201117 14:41:59.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.499" endtime="20201117 14:41:59.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.497" endtime="20201117 14:41:59.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.494" endtime="20201117 14:41:59.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.126" endtime="20201117 14:41:59.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.730" endtime="20201117 14:41:59.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.729" endtime="20201117 14:41:59.520"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.522" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.531" endtime="20201117 14:41:59.549"></status>
</kw>
<msg timestamp="20201117 14:41:59.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.529" endtime="20201117 14:41:59.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.551" endtime="20201117 14:41:59.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.553" endtime="20201117 14:41:59.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.526" endtime="20201117 14:41:59.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.524" endtime="20201117 14:41:59.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.562" endtime="20201117 14:41:59.849"></status>
</kw>
<msg timestamp="20201117 14:41:59.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024354972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.561" endtime="20201117 14:41:59.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024354972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024453417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.853" endtime="20201117 14:41:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.861" endtime="20201117 14:41:59.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.558" endtime="20201117 14:41:59.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.556" endtime="20201117 14:41:59.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.868" level="INFO">${RESULT} = [{'time': 0.024453417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.844500000000256e-05, 'source_diff': 9.844500000000256e-05}, {'time': 0.02455725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:59.865" endtime="20201117 14:41:59.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.883" level="INFO">${ACCURACY} = {'source_diff': [9.844500000000256e-05, 9.837499999999777e-05, 9.827800000000025e-05, 9.806999999999871e-05, 9.815300000000013e-05, 9.78470000000016e-05, 9.78470000000016e-05, 9.823700000000102e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:41:59.869" endtime="20201117 14:41:59.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.887" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.886" endtime="20201117 14:41:59.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.890" level="INFO">VALUE: [9.844500000000256e-05, 9.837499999999777e-05, 9.827800000000025e-05, 9.806999999999871e-05, 9.815300000000013e-05, 9.78470000000016e-05, 9.78470000000016e-05, 9.823700000000102e-05, 9.801300000000096e-05, 9.809799999999785e-05, 9.795800000000215e-05, 9.805499999999967e-05, 9.809699999999838e-05, 9.812500000000099e-05, 9.8028e-05, 9.775000000000061e-05, 9.834699999999863e-05, 9.781899999999899e-05, 9.824999999999764e-05, 9.788900000000031e-05, 9.811099999999795e-05, 9.777799999999975e-05, 9.823700000000102e-05, 9.783399999999803e-05, 9.819500000000231e-05, 9.777799999999975e-05, 9.78059999999989e-05, 9.816600000000023e-05, 9.788900000000031e-05, 9.81799999999998e-05, 9.779099999999985e-05, 9.7721999999998e-05, 9.81669999999997e-05, 9.773599999999757e-05, 9.805599999999914e-05, 9.787500000000074e-05, 9.826400000000068e-05, 9.808299999999881e-05, 9.818099999999927e-05, 9.813900000000056e-05, 9.777799999999975e-05, 9.827800000000025e-05, 9.808399999999828e-05, 9.815200000000066e-05, 9.80410000000001e-05, 9.819399999999937e-05, 9.808300000000228e-05, 9.775000000000061e-05, 9.775000000000061e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.888" endtime="20201117 14:41:59.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.884" endtime="20201117 14:41:59.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.893" endtime="20201117 14:41:59.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.896" endtime="20201117 14:41:59.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.895" endtime="20201117 14:41:59.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.891" endtime="20201117 14:41:59.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.523" endtime="20201117 14:41:59.917"></status>
</kw>
<msg timestamp="20201117 14:41:59.918" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.926" endtime="20201117 14:41:59.944"></status>
</kw>
<msg timestamp="20201117 14:41:59.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.924" endtime="20201117 14:41:59.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.946" endtime="20201117 14:41:59.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.948" endtime="20201117 14:41:59.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.922" endtime="20201117 14:41:59.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.920" endtime="20201117 14:41:59.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.958" endtime="20201117 14:42:00.244"></status>
</kw>
<msg timestamp="20201117 14:42:00.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.956" endtime="20201117 14:42:00.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.248" endtime="20201117 14:42:00.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.256" endtime="20201117 14:42:00.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.953" endtime="20201117 14:42:00.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.951" endtime="20201117 14:42:00.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.263" level="INFO">${RESULT} = [{'time': 0.021800861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872200000000247e-05, 'source_diff': 9.872200000000247e-05}, {'time': 0.021903667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.259" endtime="20201117 14:42:00.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.276" level="INFO">${ACCURACY} = {'source_diff': [9.872200000000247e-05, 9.755600000000211e-05, 9.815300000000013e-05, 9.794499999999859e-05, 9.790299999999988e-05, 9.788900000000031e-05, 9.827700000000078e-05, 9.769399999999887e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:00.264" endtime="20201117 14:42:00.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.280" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.279" endtime="20201117 14:42:00.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.283" level="INFO">VALUE: [9.872200000000247e-05, 9.755600000000211e-05, 9.815300000000013e-05, 9.794499999999859e-05, 9.790299999999988e-05, 9.788900000000031e-05, 9.827700000000078e-05, 9.769399999999887e-05, 9.82080000000024e-05, 9.779199999999932e-05, 9.800000000000086e-05, 9.78470000000016e-05, 9.808299999999881e-05, 9.804199999999957e-05, 9.779199999999932e-05, 9.798700000000077e-05, 9.827800000000025e-05, 9.797199999999825e-05, 9.831999999999896e-05, 9.82219999999985e-05, 9.78059999999989e-05, 9.779099999999985e-05, 9.777700000000028e-05, 9.80410000000001e-05, 9.82080000000024e-05, 9.775000000000061e-05, 9.801399999999696e-05, 9.831899999999949e-05, 9.809699999999838e-05, 9.804199999999957e-05, 9.793099999999902e-05, 9.783299999999856e-05, 9.797200000000172e-05, 9.793000000000301e-05, 9.772300000000095e-05, 9.779199999999932e-05, 9.770899999999791e-05, 9.776400000000018e-05, 9.773700000000052e-05, 9.792999999999955e-05, 9.781900000000246e-05, 9.813900000000056e-05, 9.776399999999671e-05, 9.800000000000086e-05, 9.812499999999752e-05, 9.825000000000111e-05, 9.783299999999856e-05, 9.779199999999932e-05, 9.776400000000018e-05, 9.819499999999884e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.282" endtime="20201117 14:42:00.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.277" endtime="20201117 14:42:00.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.286" endtime="20201117 14:42:00.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.290" endtime="20201117 14:42:00.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.288" endtime="20201117 14:42:00.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.284" endtime="20201117 14:42:00.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.918" endtime="20201117 14:42:00.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.521" endtime="20201117 14:42:00.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.520" endtime="20201117 14:42:00.311"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.313" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.321" endtime="20201117 14:42:00.341"></status>
</kw>
<msg timestamp="20201117 14:42:00.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.320" endtime="20201117 14:42:00.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.342" endtime="20201117 14:42:00.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.345" endtime="20201117 14:42:00.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.317" endtime="20201117 14:42:00.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.315" endtime="20201117 14:42:00.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.354" endtime="20201117 14:42:00.640"></status>
</kw>
<msg timestamp="20201117 14:42:00.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023831083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023930667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.352" endtime="20201117 14:42:00.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023831083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023930667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.644" endtime="20201117 14:42:00.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.653" endtime="20201117 14:42:00.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.350" endtime="20201117 14:42:00.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.348" endtime="20201117 14:42:00.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.659" level="INFO">${RESULT} = [{'time': 0.023930667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.958399999999978e-05, 'source_diff': 9.958399999999978e-05}, {'time': 0.0240355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:00.656" endtime="20201117 14:42:00.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.673" level="INFO">${ACCURACY} = {'source_diff': [9.958399999999978e-05, 9.931900000000049e-05, 9.913900000000156e-05, 9.876400000000118e-05, 9.9028000000001e-05, 9.920899999999941e-05, 9.869499999999934e-05, 9.908399999999928e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:42:00.660" endtime="20201117 14:42:00.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.678" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.677" endtime="20201117 14:42:00.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.680" level="INFO">VALUE: [9.958399999999978e-05, 9.931900000000049e-05, 9.913900000000156e-05, 9.876400000000118e-05, 9.9028000000001e-05, 9.920899999999941e-05, 9.869499999999934e-05, 9.908399999999928e-05, 9.887499999999827e-05, 9.906999999999971e-05, 9.893100000000002e-05, 9.927699999999831e-05, 9.892999999999708e-05, 9.877699999999781e-05, 9.894400000000012e-05, 9.923600000000254e-05, 9.894400000000012e-05, 9.91800000000008e-05, 9.912499999999852e-05, 9.908299999999981e-05, 9.909699999999938e-05, 9.88059999999999e-05, 9.912500000000199e-05, 9.879100000000085e-05, 9.908399999999928e-05, 9.893000000000055e-05, 9.915200000000166e-05, 9.91800000000008e-05, 9.880500000000042e-05, 9.888900000000131e-05, 9.913900000000156e-05, 9.913899999999809e-05, 9.877800000000075e-05, 9.901399999999796e-05, 9.89999999999984e-05, 9.869499999999934e-05, 9.89860000000023e-05, 9.894499999999959e-05, 9.926400000000168e-05, 9.901400000000143e-05, 9.894499999999959e-05, 9.870899999999891e-05, 9.868099999999977e-05, 9.924999999999864e-05, 9.883299999999956e-05, 9.888900000000131e-05, 9.923599999999907e-05, 9.908299999999981e-05, 9.904099999999763e-05, 9.915300000000113e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.679" endtime="20201117 14:42:00.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.674" endtime="20201117 14:42:00.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.684" endtime="20201117 14:42:00.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.687" endtime="20201117 14:42:00.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.685" endtime="20201117 14:42:00.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.682" endtime="20201117 14:42:00.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.314" endtime="20201117 14:42:00.708"></status>
</kw>
<msg timestamp="20201117 14:42:00.708" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.716" endtime="20201117 14:42:00.735"></status>
</kw>
<msg timestamp="20201117 14:42:00.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.715" endtime="20201117 14:42:00.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.737" endtime="20201117 14:42:00.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.739" endtime="20201117 14:42:00.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.712" endtime="20201117 14:42:00.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.710" endtime="20201117 14:42:00.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.748" endtime="20201117 14:42:01.035"></status>
</kw>
<msg timestamp="20201117 14:42:01.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.746" endtime="20201117 14:42:01.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.039" endtime="20201117 14:42:01.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.047" endtime="20201117 14:42:01.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.744" endtime="20201117 14:42:01.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.742" endtime="20201117 14:42:01.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.054" level="INFO">${RESULT} = [{'time': 0.021956153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.962499999999902e-05, 'source_diff': 9.962499999999902e-05}, {'time': 0.022061028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:01.050" endtime="20201117 14:42:01.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.067" level="INFO">${ACCURACY} = {'source_diff': [9.962499999999902e-05, 9.943100000000052e-05, 9.919499999999984e-05, 9.897199999999926e-05, 9.906999999999971e-05, 9.927800000000125e-05, 9.905600000000014e-05, 9.909799999999885e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:01.055" endtime="20201117 14:42:01.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.072" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.071" endtime="20201117 14:42:01.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.074" level="INFO">VALUE: [9.962499999999902e-05, 9.943100000000052e-05, 9.919499999999984e-05, 9.897199999999926e-05, 9.906999999999971e-05, 9.927800000000125e-05, 9.905600000000014e-05, 9.909799999999885e-05, 9.873699999999805e-05, 9.923699999999855e-05, 9.908299999999981e-05, 9.908299999999981e-05, 9.876400000000118e-05, 9.9028000000001e-05, 9.927800000000125e-05, 9.923599999999907e-05, 9.898599999999882e-05, 9.8721999999999e-05, 9.919400000000037e-05, 9.904200000000057e-05, 9.913899999999809e-05, 9.920899999999941e-05, 9.900000000000186e-05, 9.881999999999946e-05, 9.900000000000186e-05, 9.877800000000075e-05, 9.877700000000128e-05, 9.884699999999913e-05, 9.926400000000168e-05, 9.924999999999864e-05, 9.870799999999944e-05, 9.880500000000042e-05, 9.915299999999766e-05, 9.869399999999987e-05, 9.870799999999944e-05, 9.91670000000007e-05, 9.894499999999959e-05, 9.909699999999938e-05, 9.909699999999938e-05, 9.881999999999946e-05, 9.911099999999895e-05, 9.901299999999849e-05, 9.89020000000014e-05, 9.902699999999806e-05, 9.877699999999781e-05, 9.904099999999763e-05, 9.884699999999913e-05, 9.895800000000315e-05, 9.876400000000118e-05, 9.915300000000113e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.073" endtime="20201117 14:42:01.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.068" endtime="20201117 14:42:01.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.078" endtime="20201117 14:42:01.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.081" endtime="20201117 14:42:01.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.079" endtime="20201117 14:42:01.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.076" endtime="20201117 14:42:01.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.709" endtime="20201117 14:42:01.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.312" endtime="20201117 14:42:01.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.311" endtime="20201117 14:42:01.102"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.104" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.112" endtime="20201117 14:42:01.131"></status>
</kw>
<msg timestamp="20201117 14:42:01.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.111" endtime="20201117 14:42:01.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.133" endtime="20201117 14:42:01.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.135" endtime="20201117 14:42:01.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.108" endtime="20201117 14:42:01.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.106" endtime="20201117 14:42:01.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.147" endtime="20201117 14:42:01.436"></status>
</kw>
<msg timestamp="20201117 14:42:01.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023849847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.145" endtime="20201117 14:42:01.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023849847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.440" endtime="20201117 14:42:01.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.448" endtime="20201117 14:42:01.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.142" endtime="20201117 14:42:01.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.140" endtime="20201117 14:42:01.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.454" level="INFO">${RESULT} = [{'time': 0.023849847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000100415999999999, 'source_diff': 0.000100415999999999}, {'time': 0.023954694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:01.451" endtime="20201117 14:42:01.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.469" level="INFO">${ACCURACY} = {'source_diff': [0.000100415999999999, 9.954099999999813e-05, 0.00010020799999999747, 9.988899999999884e-05, 9.973599999999957e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.98609999999997e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:42:01.455" endtime="20201117 14:42:01.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.474" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.473" endtime="20201117 14:42:01.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.477" level="INFO">VALUE: [0.000100415999999999, 9.954099999999813e-05, 0.00010020799999999747, 9.988899999999884e-05, 9.973599999999957e-05, 9.981900000000099e-05, 9.98060000000009e-05, 9.98609999999997e-05, 9.976399999999871e-05, 9.977800000000175e-05, 9.981900000000099e-05, 9.977799999999828e-05, 9.973599999999957e-05, 0.00010024999999999964, 9.973599999999957e-05, 0.00010013900000000256, 9.9819999999997e-05, 9.99999999999994e-05, 0.00010011099999999995, 9.998599999999983e-05, 0.00010006899999999777, 9.993100000000102e-05, 9.994400000000112e-05, 9.990299999999841e-05, 0.00010019400000000137, 0.00010011099999999995, 0.00010016699999999823, 0.00010007000000000071, 0.00010009799999999985, 0.00010007000000000071, 9.976300000000271e-05, 9.997299999999973e-05, 9.991699999999798e-05, 9.977700000000228e-05, 9.99860000000033e-05, 9.967999999999783e-05, 0.00010004099999999863, 9.976400000000218e-05, 0.00010032000000000096, 9.987500000000274e-05, 0.00010026399999999921, 0.00010006899999999777, 0.00010020800000000094, 9.995800000000069e-05, 0.00010024999999999964, 9.99999999999994e-05, 9.987499999999927e-05, 0.00010022299999999998, 0.00010011199999999942, 9.980499999999795e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.475" endtime="20201117 14:42:01.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.470" endtime="20201117 14:42:01.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.480" endtime="20201117 14:42:01.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.483" endtime="20201117 14:42:01.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.482" endtime="20201117 14:42:01.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.478" endtime="20201117 14:42:01.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.105" endtime="20201117 14:42:01.504"></status>
</kw>
<msg timestamp="20201117 14:42:01.504" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.512" endtime="20201117 14:42:01.531"></status>
</kw>
<msg timestamp="20201117 14:42:01.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.511" endtime="20201117 14:42:01.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.533" endtime="20201117 14:42:01.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.535" endtime="20201117 14:42:01.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.508" endtime="20201117 14:42:01.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.506" endtime="20201117 14:42:01.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.544" endtime="20201117 14:42:01.831"></status>
</kw>
<msg timestamp="20201117 14:42:01.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021335403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.543" endtime="20201117 14:42:01.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021335403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.835" endtime="20201117 14:42:01.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.843" endtime="20201117 14:42:01.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.540" endtime="20201117 14:42:01.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.538" endtime="20201117 14:42:01.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.850" level="INFO">${RESULT} = [{'time': 0.021436431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010102799999999953, 'source_diff': 0.00010102799999999953}, {'time': 0.021542306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:01.846" endtime="20201117 14:42:01.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.863" level="INFO">${ACCURACY} = {'source_diff': [0.00010102799999999953, 0.00010045900000000066, 0.0001000419999999981, 0.00010027799999999878, 9.998599999999983e-05, 9.977700000000228e-05, 9.994499999999712e-05, 9.995800000000069e-...</msg>
<status status="PASS" starttime="20201117 14:42:01.851" endtime="20201117 14:42:01.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.868" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.867" endtime="20201117 14:42:01.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.870" level="INFO">VALUE: [0.00010102799999999953, 0.00010045900000000066, 0.0001000419999999981, 0.00010027799999999878, 9.998599999999983e-05, 9.977700000000228e-05, 9.994499999999712e-05, 9.995800000000069e-05, 9.976399999999871e-05, 0.0001002220000000005, 0.00010005500000000167, 0.00010017999999999833, 0.00010019500000000084, 0.00010019400000000137, 0.00010005600000000114, 0.00010011099999999995, 9.995799999999722e-05, 0.00010023600000000008, 9.973699999999905e-05, 0.00010020900000000041, 9.975000000000261e-05, 0.00010008300000000081, 9.981900000000099e-05, 0.0001000410000000021, 0.00010008399999999681, 0.00010013899999999909, 0.00010002799999999853, 0.00010017999999999833, 0.0001001800000000018, 0.0001001670000000017, 9.976400000000218e-05, 9.994399999999765e-05, 0.00010026399999999921, 9.987499999999927e-05, 0.00010004200000000157, 0.00010001400000000243, 0.00010030599999999792, 0.00010018100000000127, 0.00010018100000000127, 9.974999999999914e-05, 9.980499999999795e-05, 0.00010004099999999863, 0.00010004099999999863, 0.00010009700000000038, 0.00010024999999999964, 9.977799999999828e-05, 0.00010016699999999823, 9.984700000000013e-05, 9.998599999999983e-05, 9.9722e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.869" endtime="20201117 14:42:01.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.864" endtime="20201117 14:42:01.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.873" endtime="20201117 14:42:01.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.877" endtime="20201117 14:42:01.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.875" endtime="20201117 14:42:01.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.872" endtime="20201117 14:42:01.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.505" endtime="20201117 14:42:01.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.103" endtime="20201117 14:42:01.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.102" endtime="20201117 14:42:01.898"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.900" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.908" endtime="20201117 14:42:01.927"></status>
</kw>
<msg timestamp="20201117 14:42:01.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.907" endtime="20201117 14:42:01.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.929" endtime="20201117 14:42:01.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.931" endtime="20201117 14:42:01.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.904" endtime="20201117 14:42:01.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.902" endtime="20201117 14:42:01.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.940" endtime="20201117 14:42:02.227"></status>
</kw>
<msg timestamp="20201117 14:42:02.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024143264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024244667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.939" endtime="20201117 14:42:02.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024143264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024244667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.231" endtime="20201117 14:42:02.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.239" endtime="20201117 14:42:02.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.936" endtime="20201117 14:42:02.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.934" endtime="20201117 14:42:02.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.246" level="INFO">${RESULT} = [{'time': 0.024244667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010140299999999991, 'source_diff': 0.00010140299999999991}, {'time': 0.0243515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:02.242" endtime="20201117 14:42:02.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.259" level="INFO">${ACCURACY} = {'source_diff': [0.00010140299999999991, 0.00010134700000000163, 0.0001010000000000004, 0.00010118100000000227, 0.00010111100000000095, 0.00010112500000000052, 0.00010093099999999855, 0.00010126300000...</msg>
<status status="PASS" starttime="20201117 14:42:02.247" endtime="20201117 14:42:02.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.263" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.262" endtime="20201117 14:42:02.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.266" level="INFO">VALUE: [0.00010140299999999991, 0.00010134700000000163, 0.0001010000000000004, 0.00010118100000000227, 0.00010111100000000095, 0.00010112500000000052, 0.00010093099999999855, 0.00010126300000000074, 0.00010094499999999812, 0.00010094399999999865, 0.000100722000000001, 0.0001010000000000004, 0.00010106899999999877, 0.0001011800000000028, 0.00010108299999999834, 0.00010097200000000126, 0.0001008610000000007, 0.00010119400000000237, 0.00010101399999999996, 0.00010079200000000232, 0.00010095899999999769, 0.00010081899999999852, 0.00010122300000000098, 0.00010122300000000098, 0.00010120899999999794, 0.0001008610000000007, 0.00010080499999999895, 0.00010095800000000169, 0.0001010000000000004, 0.00010083300000000156, 0.00010095799999999822, 0.00010119500000000184, 0.00010120799999999847, 0.0001010000000000004, 0.00010109699999999791, 0.00010076399999999971, 0.00010116699999999923, 0.00010088899999999984, 0.00010102799999999953, 0.00010097199999999779, 0.00010081899999999852, 0.00010084700000000113, 0.00010076399999999971, 0.00010104099999999963, 0.00010095799999999822, 0.00010073600000000058, 0.00010076399999999971, 0.0001012220000000015, 0.00010116699999999923, 0.00010094500000000159]</msg>
<status status="PASS" starttime="20201117 14:42:02.264" endtime="20201117 14:42:02.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.260" endtime="20201117 14:42:02.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.269" endtime="20201117 14:42:02.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.272" endtime="20201117 14:42:02.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.271" endtime="20201117 14:42:02.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.267" endtime="20201117 14:42:02.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.901" endtime="20201117 14:42:02.293"></status>
</kw>
<msg timestamp="20201117 14:42:02.293" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.301" endtime="20201117 14:42:02.321"></status>
</kw>
<msg timestamp="20201117 14:42:02.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.300" endtime="20201117 14:42:02.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.322" endtime="20201117 14:42:02.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.324" endtime="20201117 14:42:02.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.297" endtime="20201117 14:42:02.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.295" endtime="20201117 14:42:02.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.333" endtime="20201117 14:42:02.620"></status>
</kw>
<msg timestamp="20201117 14:42:02.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021482014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.332" endtime="20201117 14:42:02.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021482014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.624" endtime="20201117 14:42:02.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.632" endtime="20201117 14:42:02.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.329" endtime="20201117 14:42:02.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.328" endtime="20201117 14:42:02.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.639" level="INFO">${RESULT} = [{'time': 0.021482014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001013610000000012, 'source_diff': 0.0001013610000000012}, {'time': 0.021588847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:02.636" endtime="20201117 14:42:02.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.652" level="INFO">${ACCURACY} = {'source_diff': [0.0001013610000000012, 0.00010129099999999988, 0.00010120799999999847, 0.00010075000000000014, 0.0001011809999999988, 0.00010109700000000138, 0.00010098600000000083, 0.000100750000000...</msg>
<status status="PASS" starttime="20201117 14:42:02.640" endtime="20201117 14:42:02.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.657" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.656" endtime="20201117 14:42:02.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.659" level="INFO">VALUE: [0.0001013610000000012, 0.00010129099999999988, 0.00010120799999999847, 0.00010075000000000014, 0.0001011809999999988, 0.00010109700000000138, 0.00010098600000000083, 0.00010075000000000014, 0.00010087500000000027, 0.00010118100000000227, 0.00010083399999999756, 0.00010109800000000085, 0.00010098599999999736, 0.00010094399999999865, 0.00010088899999999984, 0.00010115200000000019, 0.00010083299999999809, 0.00010090299999999941, 0.00010113900000000009, 0.00010094399999999865, 0.00010115300000000313, 0.00010077799999999928, 0.000100819999999998, 0.00010129199999999935, 0.00010097199999999779, 0.00010082000000000146, 0.00010097199999999779, 0.00010094400000000212, 0.00010081899999999852, 0.00010108300000000181, 0.0001007359999999971, 0.00010111100000000095, 0.00010108300000000181, 0.00010116599999999976, 0.00010080599999999842, 0.00010113900000000009, 0.00010077799999999928, 0.00010130599999999892, 0.00010119500000000184, 0.000100722000000001, 0.00010105600000000214, 0.00010069500000000134, 0.00010084799999999713, 0.00010119499999999837, 0.00010116699999999923, 0.00010109700000000138, 0.00010075000000000014, 0.00010102700000000006, 0.00010105599999999867, 0.00010080499999999895]</msg>
<status status="PASS" starttime="20201117 14:42:02.658" endtime="20201117 14:42:02.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.653" endtime="20201117 14:42:02.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.662" endtime="20201117 14:42:02.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.665" endtime="20201117 14:42:02.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.664" endtime="20201117 14:42:02.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.661" endtime="20201117 14:42:02.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.294" endtime="20201117 14:42:02.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.899" endtime="20201117 14:42:02.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.898" endtime="20201117 14:42:02.687"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.689" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.697" endtime="20201117 14:42:02.716"></status>
</kw>
<msg timestamp="20201117 14:42:02.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.696" endtime="20201117 14:42:02.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.718" endtime="20201117 14:42:02.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.720" endtime="20201117 14:42:02.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.693" endtime="20201117 14:42:02.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.691" endtime="20201117 14:42:02.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.729" endtime="20201117 14:42:03.016"></status>
</kw>
<msg timestamp="20201117 14:42:03.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024004875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024108056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.728" endtime="20201117 14:42:03.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024004875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024108056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.021" endtime="20201117 14:42:03.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.029" endtime="20201117 14:42:03.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.725" endtime="20201117 14:42:03.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.723" endtime="20201117 14:42:03.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.035" level="INFO">${RESULT} = [{'time': 0.024108056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001031810000000008, 'source_diff': 0.0001031810000000008}, {'time': 0.024214903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:03.032" endtime="20201117 14:42:03.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.050" level="INFO">${ACCURACY} = {'source_diff': [0.0001031810000000008, 0.00010151400000000046, 0.00010177800000000028, 0.00010222199999999904, 0.00010206999999999924, 0.00010184799999999813, 0.0001018619999999977, 0.000101888999999...</msg>
<status status="PASS" starttime="20201117 14:42:03.036" endtime="20201117 14:42:03.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.054" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.053" endtime="20201117 14:42:03.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.057" level="INFO">VALUE: [0.0001031810000000008, 0.00010151400000000046, 0.00010177800000000028, 0.00010222199999999904, 0.00010206999999999924, 0.00010184799999999813, 0.0001018619999999977, 0.00010188899999999737, 0.00010205499999999673, 0.00010188900000000084, 0.00010209699999999891, 0.00010216600000000076, 0.00010213899999999762, 0.00010208300000000281, 0.00010190300000000041, 0.00010195799999999922, 0.00010186099999999823, 0.00010202800000000053, 0.00010190300000000041, 0.0001017359999999981, 0.00010180599999999942, 0.0001020420000000001, 0.00010188800000000137, 0.00010180599999999942, 0.0001017359999999981, 0.00010212499999999805, 0.00010206899999999977, 0.00010213900000000109, 0.00010176400000000071, 0.00010180499999999995, 0.00010202799999999707, 0.00010177800000000028, 0.0001020000000000014, 0.00010176400000000071, 0.00010190299999999694, 0.00010218000000000033, 0.00010177800000000028, 0.00010202800000000053, 0.00010209699999999891, 0.0001018749999999978, 0.0001018610000000017, 0.00010202700000000106, 0.0001018749999999978, 0.00010206899999999977, 0.00010227799999999732, 0.00010230599999999992, 0.00010194399999999965, 0.00010188900000000084, 0.0001020420000000001, 0.00010183299999999909]</msg>
<status status="PASS" starttime="20201117 14:42:03.055" endtime="20201117 14:42:03.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.051" endtime="20201117 14:42:03.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.060" endtime="20201117 14:42:03.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.063" endtime="20201117 14:42:03.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.062" endtime="20201117 14:42:03.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.058" endtime="20201117 14:42:03.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.690" endtime="20201117 14:42:03.084"></status>
</kw>
<msg timestamp="20201117 14:42:03.084" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.092" endtime="20201117 14:42:03.111"></status>
</kw>
<msg timestamp="20201117 14:42:03.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.091" endtime="20201117 14:42:03.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.112" endtime="20201117 14:42:03.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.115" endtime="20201117 14:42:03.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.088" endtime="20201117 14:42:03.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.086" endtime="20201117 14:42:03.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.124" endtime="20201117 14:42:03.411"></status>
</kw>
<msg timestamp="20201117 14:42:03.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021321264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.123" endtime="20201117 14:42:03.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021321264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.415" endtime="20201117 14:42:03.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.423" endtime="20201117 14:42:03.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.120" endtime="20201117 14:42:03.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.119" endtime="20201117 14:42:03.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.429" level="INFO">${RESULT} = [{'time': 0.021423736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010247199999999929, 'source_diff': 0.00010247199999999929}, {'time': 0.021530569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:03.426" endtime="20201117 14:42:03.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.442" level="INFO">${ACCURACY} = {'source_diff': [0.00010247199999999929, 0.0001015549999999997, 0.00010195799999999922, 0.00010187500000000127, 0.00010175000000000115, 0.00010176400000000071, 0.00010198599999999836, 0.00010211100000...</msg>
<status status="PASS" starttime="20201117 14:42:03.430" endtime="20201117 14:42:03.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.447" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.446" endtime="20201117 14:42:03.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.449" level="INFO">VALUE: [0.00010247199999999929, 0.0001015549999999997, 0.00010195799999999922, 0.00010187500000000127, 0.00010175000000000115, 0.00010176400000000071, 0.00010198599999999836, 0.00010211100000000195, 0.00010209700000000238, 0.00010208299999999934, 0.00010213899999999762, 0.00010198599999999836, 0.00010194399999999965, 0.00010190300000000041, 0.00010206999999999924, 0.0001018749999999978, 0.0001020000000000014, 0.00010204100000000063, 0.00010202700000000106, 0.0001020000000000014, 0.00010211099999999848, 0.00010197200000000226, 0.00010183299999999909, 0.00010175000000000115, 0.00010177800000000028, 0.00010176399999999725, 0.00010177800000000028, 0.00010220899999999894, 0.00010188900000000084, 0.0001020000000000014, 0.00010193000000000008, 0.00010212500000000152, 0.00010191699999999998, 0.00010206899999999977, 0.00010226299999999827, 0.000102416000000001, 0.00010163900000000059, 0.00010224999999999818, 0.00010181899999999952, 0.0001020420000000001, 0.0001016809999999993, 0.00010194499999999912, 0.0001021809999999998, 0.00010194500000000259, 0.00010216700000000023, 0.00010179199999999985, 0.00010204100000000063, 0.00010177800000000028, 0.0001022359999999986, 0.00010188800000000137]</msg>
<status status="PASS" starttime="20201117 14:42:03.448" endtime="20201117 14:42:03.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.443" endtime="20201117 14:42:03.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.452" endtime="20201117 14:42:03.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.456" endtime="20201117 14:42:03.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.454" endtime="20201117 14:42:03.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.451" endtime="20201117 14:42:03.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.085" endtime="20201117 14:42:03.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.688" endtime="20201117 14:42:03.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.687" endtime="20201117 14:42:03.477"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.479" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.488" endtime="20201117 14:42:03.507"></status>
</kw>
<msg timestamp="20201117 14:42:03.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.486" endtime="20201117 14:42:03.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.508" endtime="20201117 14:42:03.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.511" endtime="20201117 14:42:03.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.483" endtime="20201117 14:42:03.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.481" endtime="20201117 14:42:03.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.520" endtime="20201117 14:42:03.806"></status>
</kw>
<msg timestamp="20201117 14:42:03.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024396444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.518" endtime="20201117 14:42:03.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024396444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024499764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.810" endtime="20201117 14:42:03.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.818" endtime="20201117 14:42:03.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.516" endtime="20201117 14:42:03.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.514" endtime="20201117 14:42:03.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.825" level="INFO">${RESULT} = [{'time': 0.024499764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001033200000000005, 'source_diff': 0.0001033200000000005}, {'time': 0.024607597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:03.822" endtime="20201117 14:42:03.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.838" level="INFO">${ACCURACY} = {'source_diff': [0.0001033200000000005, 0.000102513999999998, 0.00010323600000000308, 0.00010299999999999893, 0.00010287500000000227, 0.00010306900000000077, 0.00010326399999999875, 0.0001032639999999...</msg>
<status status="PASS" starttime="20201117 14:42:03.826" endtime="20201117 14:42:03.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.843" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.842" endtime="20201117 14:42:03.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.845" level="INFO">VALUE: [0.0001033200000000005, 0.000102513999999998, 0.00010323600000000308, 0.00010299999999999893, 0.00010287500000000227, 0.00010306900000000077, 0.00010326399999999875, 0.00010326399999999875, 0.00010298599999999936, 0.00010279200000000085, 0.0001028879999999989, 0.00010316700000000123, 0.00010322200000000004, 0.00010279100000000138, 0.00010306900000000077, 0.00010284699999999966, 0.00010291599999999804, 0.00010297199999999979, 0.00010297199999999979, 0.00010276399999999825, 0.00010322200000000004, 0.0001030420000000011, 0.00010327799999999832, 0.00010320899999999994, 0.00010286099999999923, 0.00010283399999999956, 0.00010308399999999981, 0.00010312500000000252, 0.00010322200000000004, 0.00010277800000000128, 0.00010273600000000258, 0.00010270799999999997, 0.0001030139999999985, 0.00010291699999999751, 0.00010305499999999773, 0.0001028749999999988, 0.00010288899999999837, 0.00010286099999999923, 0.00010269499999999987, 0.00010311099999999948, 0.0001030420000000011, 0.00010308399999999981, 0.00010277800000000128, 0.00010311100000000295, 0.00010290199999999847, 0.0001028749999999988, 0.00010283300000000009, 0.00010326399999999875, 0.00010295800000000022, 0.00010322200000000004]</msg>
<status status="PASS" starttime="20201117 14:42:03.844" endtime="20201117 14:42:03.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.839" endtime="20201117 14:42:03.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.848" endtime="20201117 14:42:03.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.851" endtime="20201117 14:42:03.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.850" endtime="20201117 14:42:03.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.846" endtime="20201117 14:42:03.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.480" endtime="20201117 14:42:03.879"></status>
</kw>
<msg timestamp="20201117 14:42:03.880" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.888" endtime="20201117 14:42:03.908"></status>
</kw>
<msg timestamp="20201117 14:42:03.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.886" endtime="20201117 14:42:03.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.909" endtime="20201117 14:42:03.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.912" endtime="20201117 14:42:03.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.884" endtime="20201117 14:42:03.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.882" endtime="20201117 14:42:03.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.921" endtime="20201117 14:42:04.207"></status>
</kw>
<msg timestamp="20201117 14:42:04.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028986764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029091028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.919" endtime="20201117 14:42:04.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028986764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029091028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.212" endtime="20201117 14:42:04.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.220" endtime="20201117 14:42:04.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.916" endtime="20201117 14:42:04.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.915" endtime="20201117 14:42:04.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.226" level="INFO">${RESULT} = [{'time': 0.029091028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010426399999999975, 'source_diff': 0.00010426399999999975}, {'time': 0.029199903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:04.223" endtime="20201117 14:42:04.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.240" level="INFO">${ACCURACY} = {'source_diff': [0.00010426399999999975, 0.00010348599999999986, 0.00010293100000000055, 0.0001026940000000004, 0.00010293100000000055, 0.00010322200000000004, 0.00010283400000000303, 0.00010283400000...</msg>
<status status="PASS" starttime="20201117 14:42:04.227" endtime="20201117 14:42:04.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.244" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.243" endtime="20201117 14:42:04.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.246" level="INFO">VALUE: [0.00010426399999999975, 0.00010348599999999986, 0.00010293100000000055, 0.0001026940000000004, 0.00010293100000000055, 0.00010322200000000004, 0.00010283400000000303, 0.00010283400000000303, 0.00010287500000000227, 0.00010315300000000166, 0.00010273699999999858, 0.00010329099999999841, 0.00010293000000000108, 0.00010290199999999847, 0.00010322200000000004, 0.00010326400000000222, 0.00010297199999999979, 0.00010261100000000245, 0.00010302800000000154, 0.00010280600000000042, 0.00010297199999999979, 0.00010308299999999687, 0.00010298599999999936, 0.00010277799999999782, 0.0001027359999999991, 0.00010308399999999635, 0.00010320899999999994, 0.00010280499999999748, 0.0001032359999999996, 0.00010279099999999791, 0.00010295800000000022, 0.00010312500000000252, 0.00010326399999999875, 0.00010262500000000202, 0.00010281999999999653, 0.00010283300000000356, 0.00010284699999999619, 0.0001032359999999996, 0.00010281999999999653, 0.00010323699999999908, 0.00010276399999999825, 0.00010323700000000602, 0.00010324999999999918, 0.00010316599999999482, 0.00010298599999999936, 0.00010327699999999884, 0.0001030139999999985, 0.00010311099999999601, 0.00010295800000000022, 0.0001026940000000004]</msg>
<status status="PASS" starttime="20201117 14:42:04.245" endtime="20201117 14:42:04.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.240" endtime="20201117 14:42:04.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.250" endtime="20201117 14:42:04.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.253" endtime="20201117 14:42:04.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.252" endtime="20201117 14:42:04.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.248" endtime="20201117 14:42:04.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.880" endtime="20201117 14:42:04.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.478" endtime="20201117 14:42:04.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.477" endtime="20201117 14:42:04.275"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.277" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.285" endtime="20201117 14:42:04.304"></status>
</kw>
<msg timestamp="20201117 14:42:04.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.283" endtime="20201117 14:42:04.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.306" endtime="20201117 14:42:04.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.308" endtime="20201117 14:42:04.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.281" endtime="20201117 14:42:04.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.279" endtime="20201117 14:42:04.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.317" endtime="20201117 14:42:04.603"></status>
</kw>
<msg timestamp="20201117 14:42:04.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.315" endtime="20201117 14:42:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.607" endtime="20201117 14:42:04.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.615" endtime="20201117 14:42:04.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.313" endtime="20201117 14:42:04.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.311" endtime="20201117 14:42:04.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.621" level="INFO">${RESULT} = [{'time': 0.024142583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010529100000000041, 'source_diff': 0.00010529100000000041}, {'time': 0.024252486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:04.618" endtime="20201117 14:42:04.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.636" level="INFO">${ACCURACY} = {'source_diff': [0.00010529100000000041, 0.00010405499999999873, 0.00010383400000000056, 0.00010415199999999972, 0.00010377699999999934, 0.0001040139999999995, 0.0001038749999999998, 0.000103957999999...</msg>
<status status="PASS" starttime="20201117 14:42:04.622" endtime="20201117 14:42:04.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.641" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.640" endtime="20201117 14:42:04.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.643" level="INFO">VALUE: [0.00010529100000000041, 0.00010405499999999873, 0.00010383400000000056, 0.00010415199999999972, 0.00010377699999999934, 0.0001040139999999995, 0.0001038749999999998, 0.00010395799999999775, 0.00010394400000000165, 0.00010395800000000122, 0.00010402799999999907, 0.00010383300000000109, 0.00010426399999999975, 0.00010369500000000087, 0.00010419500000000137, 0.00010386100000000023, 0.00010427799999999932, 0.00010370900000000044, 0.0001038879999999999, 0.00010398600000000036, 0.0001039160000000025, 0.00010408299999999787, 0.00010381900000000152, 0.00010394400000000165, 0.00010390299999999894, 0.00010380600000000142, 0.00010372200000000054, 0.0001037360000000001, 0.00010380600000000142, 0.00010375000000000315, 0.00010426399999999975, 0.00010411199999999995, 0.00010370900000000044, 0.00010376399999999925, 0.00010413800000000015, 0.00010395799999999775, 0.00010405499999999873, 0.00010377700000000281, 0.00010392999999999861, 0.00010379100000000238, 0.0001040689999999983, 0.00010415299999999919, 0.000103820000000001, 0.00010426399999999975, 0.00010390299999999894, 0.00010426300000000027, 0.00010426399999999975, 0.00010404199999999864, 0.00010374999999999968, 0.00010429199999999889]</msg>
<status status="PASS" starttime="20201117 14:42:04.642" endtime="20201117 14:42:04.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.637" endtime="20201117 14:42:04.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.647" endtime="20201117 14:42:04.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.650" endtime="20201117 14:42:04.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.648" endtime="20201117 14:42:04.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.645" endtime="20201117 14:42:04.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.277" endtime="20201117 14:42:04.671"></status>
</kw>
<msg timestamp="20201117 14:42:04.671" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.679" endtime="20201117 14:42:04.699"></status>
</kw>
<msg timestamp="20201117 14:42:04.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.677" endtime="20201117 14:42:04.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.700" endtime="20201117 14:42:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.703" endtime="20201117 14:42:04.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.675" endtime="20201117 14:42:04.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.673" endtime="20201117 14:42:04.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.712" endtime="20201117 14:42:04.999"></status>
</kw>
<msg timestamp="20201117 14:42:05.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:04.710" endtime="20201117 14:42:05.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:05.003" endtime="20201117 14:42:05.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.011" endtime="20201117 14:42:05.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.708" endtime="20201117 14:42:05.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.706" endtime="20201117 14:42:05.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.017" level="INFO">${RESULT} = [{'time': 0.02165925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010470800000000197, 'source_diff': 0.00010470800000000197}, {'time': 0.021769083, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:05.014" endtime="20201117 14:42:05.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.031" level="INFO">${ACCURACY} = {'source_diff': [0.00010470800000000197, 0.0001042360000000006, 0.00010388899999999937, 0.00010381900000000152, 0.00010399999999999993, 0.00010399999999999993, 0.00010422300000000051, 0.00010415299999...</msg>
<status status="PASS" starttime="20201117 14:42:05.018" endtime="20201117 14:42:05.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.036" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.035" endtime="20201117 14:42:05.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.039" level="INFO">VALUE: [0.00010470800000000197, 0.0001042360000000006, 0.00010388899999999937, 0.00010381900000000152, 0.00010399999999999993, 0.00010399999999999993, 0.00010422300000000051, 0.00010415299999999919, 0.00010386100000000023, 0.00010386100000000023, 0.00010370899999999697, 0.00010398600000000036, 0.00010366700000000173, 0.00010381999999999753, 0.00010379099999999891, 0.00010418099999999833, 0.00010409699999999744, 0.00010372200000000054, 0.00010423599999999714, 0.00010384700000000066, 0.00010399999999999993, 0.00010429200000000236, 0.0001036810000000013, 0.00010420800000000147, 0.00010399999999999993, 0.000103820000000001, 0.00010419500000000137, 0.00010380599999999796, 0.00010399999999999993, 0.00010423700000000008, 0.00010379099999999891, 0.00010418000000000233, 0.00010412500000000005, 0.00010399999999999993, 0.00010425000000000018, 0.00010366599999999879, 0.00010386100000000023, 0.00010415300000000266, 0.00010399999999999993, 0.00010413899999999962, 0.00010393100000000155, 0.00010406999999999778, 0.00010405499999999873, 0.00010398699999999983, 0.00010372200000000054, 0.00010402699999999959, 0.00010399999999999993, 0.00010412499999999658, 0.00010398600000000036, 0.0001042360000000006]</msg>
<status status="PASS" starttime="20201117 14:42:05.037" endtime="20201117 14:42:05.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.032" endtime="20201117 14:42:05.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.042" endtime="20201117 14:42:05.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.045" endtime="20201117 14:42:05.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.044" endtime="20201117 14:42:05.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.040" endtime="20201117 14:42:05.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.672" endtime="20201117 14:42:05.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.276" endtime="20201117 14:42:05.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.275" endtime="20201117 14:42:05.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.058" endtime="20201117 14:42:05.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.072" endtime="20201117 14:42:05.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.070" endtime="20201117 14:42:05.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.068" endtime="20201117 14:42:05.092"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:45.986" endtime="20201117 14:42:05.093" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.102" endtime="20201117 14:42:05.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.101" endtime="20201117 14:42:05.122"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.135" endtime="20201117 14:42:05.150"></status>
</kw>
<msg timestamp="20201117 14:42:05.151" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.134" endtime="20201117 14:42:05.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.152" endtime="20201117 14:42:05.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.156" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:42:05.154" endtime="20201117 14:42:05.156"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:05.131" endtime="20201117 14:42:05.157"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:05.129" endtime="20201117 14:42:05.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.127" endtime="20201117 14:42:05.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:42:05.162" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:42:05.161" endtime="20201117 14:42:05.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.159" endtime="20201117 14:42:05.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.127" endtime="20201117 14:42:05.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.126" endtime="20201117 14:42:05.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.164" endtime="20201117 14:42:05.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.125" endtime="20201117 14:42:05.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.123" endtime="20201117 14:42:05.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.100" endtime="20201117 14:42:05.166"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.170" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.179" endtime="20201117 14:42:05.193"></status>
</kw>
<msg timestamp="20201117 14:42:05.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.177" endtime="20201117 14:42:05.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.195" endtime="20201117 14:42:05.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.197" endtime="20201117 14:42:05.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.174" endtime="20201117 14:42:05.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.172" endtime="20201117 14:42:05.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.206" endtime="20201117 14:42:05.493"></status>
</kw>
<msg timestamp="20201117 14:42:05.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068738639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:05.205" endtime="20201117 14:42:05.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068738639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:05.497" endtime="20201117 14:42:05.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.505" endtime="20201117 14:42:05.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.202" endtime="20201117 14:42:05.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.200" endtime="20201117 14:42:05.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.512" level="INFO">${RESULT} = [{'time': 0.068738639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.238899999999766e-05, 'source_diff': 2.238899999999766e-05}, {'time': 0.068762611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.508" endtime="20201117 14:42:05.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.526" level="INFO">${ACCURACY} = {'source_diff': [2.238899999999766e-05, 2.1943999999995967e-05, 2.2735999999995427e-05, 2.183299999999888e-05, 2.197299999999458e-05, 2.265299999999748e-05, 2.2028000000007264e-05, 2.184700000000539e-...</msg>
<status status="PASS" starttime="20201117 14:42:05.513" endtime="20201117 14:42:05.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.530" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.529" endtime="20201117 14:42:05.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.533" level="INFO">VALUE: [2.238899999999766e-05, 2.1943999999995967e-05, 2.2735999999995427e-05, 2.183299999999888e-05, 2.197299999999458e-05, 2.265299999999748e-05, 2.2028000000007264e-05, 2.184700000000539e-05, 2.191700000001018e-05, 2.188899999999716e-05, 2.186099999999802e-05, 2.1945000000009318e-05, 2.1999999999994246e-05, 2.1820000000005724e-05, 2.194499999999544e-05, 2.187500000000453e-05, 2.19169999999963e-05, 2.187500000000453e-05, 2.208300000000607e-05, 2.2736000000009304e-05, 2.208300000000607e-05, 2.2082999999992192e-05, 2.2069999999999035e-05, 2.2569999999999535e-05, 2.1874999999990652e-05, 2.1986000000001615e-05, 2.2041999999999895e-05, 2.263900000000485e-05, 2.1791999999992706e-05, 2.2569999999999535e-05, 2.193099999998893e-05, 2.1792000000006584e-05, 2.2056000000006404e-05, 2.1973000000008458e-05, 2.212499999999784e-05, 2.27369999999949e-05, 2.2027999999993386e-05, 2.25969999999992e-05, 2.1778000000000075e-05, 2.2014000000000755e-05, 2.265299999999748e-05, 2.2000000000008124e-05, 2.2026999999993913e-05, 2.184700000000539e-05, 2.208300000000607e-05, 2.1971999999995107e-05, 2.1736000000008304e-05, 2.17770000000006e-05, 2.2651999999998007e-05, 2.188899999999716e-05]</msg>
<status status="PASS" starttime="20201117 14:42:05.531" endtime="20201117 14:42:05.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.527" endtime="20201117 14:42:05.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.536" endtime="20201117 14:42:05.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.540" endtime="20201117 14:42:05.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.538" endtime="20201117 14:42:05.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.535" endtime="20201117 14:42:05.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.171" endtime="20201117 14:42:05.561"></status>
</kw>
<msg timestamp="20201117 14:42:05.561" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.569" endtime="20201117 14:42:05.583"></status>
</kw>
<msg timestamp="20201117 14:42:05.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.567" endtime="20201117 14:42:05.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.585" endtime="20201117 14:42:05.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.587" endtime="20201117 14:42:05.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.565" endtime="20201117 14:42:05.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.563" endtime="20201117 14:42:05.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.596" endtime="20201117 14:42:05.883"></status>
</kw>
<msg timestamp="20201117 14:42:05.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021513903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.595" endtime="20201117 14:42:05.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021513903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.887" endtime="20201117 14:42:05.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.895" endtime="20201117 14:42:05.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.592" endtime="20201117 14:42:05.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.590" endtime="20201117 14:42:05.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.901" level="INFO">${RESULT} = [{'time': 0.021513903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1805999999999215e-05, 'source_diff': 2.1805999999999215e-05}, {'time': 0.021537917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:05.898" endtime="20201117 14:42:05.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.916" level="INFO">${ACCURACY} = {'source_diff': [2.1805999999999215e-05, 2.1986000000001615e-05, 2.262499999999834e-05, 2.1750000000000935e-05, 2.187500000000106e-05, 2.2000000000001185e-05, 2.1778000000000075e-05, 2.195899999999848...</msg>
<status status="PASS" starttime="20201117 14:42:05.902" endtime="20201117 14:42:05.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.921" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.920" endtime="20201117 14:42:05.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.923" level="INFO">VALUE: [2.1805999999999215e-05, 2.1986000000001615e-05, 2.262499999999834e-05, 2.1750000000000935e-05, 2.187500000000106e-05, 2.2000000000001185e-05, 2.1778000000000075e-05, 2.195899999999848e-05, 2.1778000000000075e-05, 2.197299999999805e-05, 2.2542000000000395e-05, 2.266699999999705e-05, 2.1750000000000935e-05, 2.2083999999998605e-05, 2.2097999999998175e-05, 2.1985999999998146e-05, 2.1791999999999645e-05, 2.270899999999923e-05, 2.180499999999974e-05, 2.2055999999999465e-05, 2.1901999999997257e-05, 2.2651999999998007e-05, 2.2555999999999965e-05, 2.256900000000006e-05, 2.2112000000001214e-05, 2.1971999999998576e-05, 2.2694000000000186e-05, 2.2652000000001477e-05, 2.1958000000002476e-05, 2.180499999999974e-05, 2.259700000000267e-05, 2.211100000000174e-05, 2.201300000000128e-05, 2.183300000000235e-05, 2.206899999999956e-05, 2.188900000000063e-05, 2.2680000000000616e-05, 2.261099999999877e-05, 2.202700000000085e-05, 2.1916000000000296e-05, 2.211099999999827e-05, 2.2680000000000616e-05, 2.208299999999913e-05, 2.2000000000001185e-05, 2.183299999999888e-05, 2.2680000000000616e-05, 2.263899999999791e-05, 2.1999999999997716e-05, 2.1943999999999436e-05, 2.2721999999999326e-05]</msg>
<status status="PASS" starttime="20201117 14:42:05.922" endtime="20201117 14:42:05.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.917" endtime="20201117 14:42:05.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.926" endtime="20201117 14:42:05.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.930" endtime="20201117 14:42:05.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.928" endtime="20201117 14:42:05.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.925" endtime="20201117 14:42:05.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.562" endtime="20201117 14:42:05.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.169" endtime="20201117 14:42:05.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.168" endtime="20201117 14:42:05.951"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.953" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.961" endtime="20201117 14:42:05.976"></status>
</kw>
<msg timestamp="20201117 14:42:05.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.960" endtime="20201117 14:42:05.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.978" endtime="20201117 14:42:05.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.980" endtime="20201117 14:42:05.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.957" endtime="20201117 14:42:05.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.955" endtime="20201117 14:42:05.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.989" endtime="20201117 14:42:06.276"></status>
</kw>
<msg timestamp="20201117 14:42:06.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024390653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.988" endtime="20201117 14:42:06.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024390653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.280" endtime="20201117 14:42:06.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.288" endtime="20201117 14:42:06.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.985" endtime="20201117 14:42:06.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.983" endtime="20201117 14:42:06.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.295" level="INFO">${RESULT} = [{'time': 0.024390653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.191700000000324e-05, 'source_diff': 2.191700000000324e-05}, {'time': 0.024415667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.292" endtime="20201117 14:42:06.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.310" level="INFO">${ACCURACY} = {'source_diff': [2.191700000000324e-05, 2.27229999999988e-05, 2.261099999999877e-05, 2.2764000000001505e-05, 2.2707999999999756e-05, 2.270899999999923e-05, 2.2055999999999465e-05, 2.195900000000195e-0...</msg>
<status status="PASS" starttime="20201117 14:42:06.296" endtime="20201117 14:42:06.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.315" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.314" endtime="20201117 14:42:06.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.317" level="INFO">VALUE: [2.191700000000324e-05, 2.27229999999988e-05, 2.261099999999877e-05, 2.2764000000001505e-05, 2.2707999999999756e-05, 2.270899999999923e-05, 2.2055999999999465e-05, 2.195900000000195e-05, 2.2069999999999035e-05, 2.1791999999999645e-05, 2.211099999999827e-05, 2.17770000000006e-05, 2.2111999999997745e-05, 2.1971999999998576e-05, 2.197299999999805e-05, 2.209700000000217e-05, 2.186099999999802e-05, 2.2055999999999465e-05, 2.2597999999998675e-05, 2.2707999999999756e-05, 2.1791999999999645e-05, 2.197299999999805e-05, 2.2000000000001185e-05, 2.1972000000002045e-05, 2.1929999999999866e-05, 2.187500000000106e-05, 2.2750000000001935e-05, 2.184700000000192e-05, 2.263900000000138e-05, 2.2707999999999756e-05, 2.25969999999992e-05, 2.1999999999997716e-05, 2.263900000000138e-05, 2.261100000000224e-05, 2.2750000000001935e-05, 2.263900000000138e-05, 2.1778000000000075e-05, 2.2028000000000325e-05, 2.181899999999931e-05, 2.184699999999845e-05, 2.183299999999888e-05, 2.211099999999827e-05, 2.261100000000224e-05, 2.1778000000000075e-05, 2.255500000000049e-05, 2.1791999999999645e-05, 2.263900000000138e-05, 2.20969999999987e-05, 2.237500000000156e-05, 2.261100000000224e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.316" endtime="20201117 14:42:06.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.311" endtime="20201117 14:42:06.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.320" endtime="20201117 14:42:06.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.324" endtime="20201117 14:42:06.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.322" endtime="20201117 14:42:06.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.319" endtime="20201117 14:42:06.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.954" endtime="20201117 14:42:06.344"></status>
</kw>
<msg timestamp="20201117 14:42:06.345" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.353" endtime="20201117 14:42:06.368"></status>
</kw>
<msg timestamp="20201117 14:42:06.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.351" endtime="20201117 14:42:06.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.370" endtime="20201117 14:42:06.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.372" endtime="20201117 14:42:06.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.349" endtime="20201117 14:42:06.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.347" endtime="20201117 14:42:06.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.381" endtime="20201117 14:42:06.667"></status>
</kw>
<msg timestamp="20201117 14:42:06.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.379" endtime="20201117 14:42:06.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.671" endtime="20201117 14:42:06.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.680" endtime="20201117 14:42:06.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.377" endtime="20201117 14:42:06.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.375" endtime="20201117 14:42:06.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.686" level="INFO">${RESULT} = [{'time': 0.021905819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2652000000001477e-05, 'source_diff': 2.2652000000001477e-05}, {'time': 0.021929792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:06.683" endtime="20201117 14:42:06.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.700" level="INFO">${ACCURACY} = {'source_diff': [2.2652000000001477e-05, 2.2041999999999895e-05, 2.195899999999848e-05, 2.2097999999998175e-05, 2.195899999999848e-05, 2.1999999999997716e-05, 2.2055999999999465e-05, 2.173599999999789...</msg>
<status status="PASS" starttime="20201117 14:42:06.687" endtime="20201117 14:42:06.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.704" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.703" endtime="20201117 14:42:06.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.707" level="INFO">VALUE: [2.2652000000001477e-05, 2.2041999999999895e-05, 2.195899999999848e-05, 2.2097999999998175e-05, 2.195899999999848e-05, 2.1999999999997716e-05, 2.2055999999999465e-05, 2.1735999999997896e-05, 2.2555999999999965e-05, 2.268100000000009e-05, 2.2707999999999756e-05, 2.1985999999998146e-05, 2.2041999999999895e-05, 2.1833999999998355e-05, 2.188900000000063e-05, 2.205499999999999e-05, 2.1749999999997466e-05, 2.2694000000000186e-05, 2.212499999999784e-05, 2.1887999999997687e-05, 2.254100000000092e-05, 2.1749999999997466e-05, 2.263900000000138e-05, 2.204100000000042e-05, 2.212499999999784e-05, 2.187500000000106e-05, 2.1750000000000935e-05, 2.2028000000000325e-05, 2.202700000000085e-05, 2.2679999999997147e-05, 2.263899999999791e-05, 2.25969999999992e-05, 2.1985999999998146e-05, 2.20969999999987e-05, 2.237499999999809e-05, 2.19030000000002e-05, 2.2707999999999756e-05, 2.194500000000238e-05, 2.180499999999974e-05, 2.181900000000278e-05, 2.208299999999913e-05, 2.256900000000006e-05, 2.188900000000063e-05, 2.19030000000002e-05, 2.188900000000063e-05, 2.20969999999987e-05, 2.2707999999999756e-05, 2.268100000000009e-05, 2.1764000000000505e-05, 2.1736000000001365e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.705" endtime="20201117 14:42:06.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.701" endtime="20201117 14:42:06.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.710" endtime="20201117 14:42:06.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.713" endtime="20201117 14:42:06.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.712" endtime="20201117 14:42:06.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.708" endtime="20201117 14:42:06.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.345" endtime="20201117 14:42:06.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.952" endtime="20201117 14:42:06.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.951" endtime="20201117 14:42:06.734"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.737" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.745" endtime="20201117 14:42:06.759"></status>
</kw>
<msg timestamp="20201117 14:42:06.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.743" endtime="20201117 14:42:06.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.761" endtime="20201117 14:42:06.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.763" endtime="20201117 14:42:06.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.741" endtime="20201117 14:42:06.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.739" endtime="20201117 14:42:06.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.773" endtime="20201117 14:42:07.060"></status>
</kw>
<msg timestamp="20201117 14:42:07.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023967611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.771" endtime="20201117 14:42:07.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023967611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.064" endtime="20201117 14:42:07.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.073" endtime="20201117 14:42:07.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.769" endtime="20201117 14:42:07.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.767" endtime="20201117 14:42:07.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.079" level="INFO">${RESULT} = [{'time': 0.023967611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212500000000131e-05, 'source_diff': 2.212500000000131e-05}, {'time': 0.023992583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.076" endtime="20201117 14:42:07.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.093" level="INFO">${ACCURACY} = {'source_diff': [2.212500000000131e-05, 2.262500000000181e-05, 2.1971999999998576e-05, 2.1944000000002906e-05, 2.1957999999999006e-05, 2.2000000000001185e-05, 2.261100000000224e-05, 2.25830000000031e-...</msg>
<status status="PASS" starttime="20201117 14:42:07.080" endtime="20201117 14:42:07.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.097" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.096" endtime="20201117 14:42:07.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.100" level="INFO">VALUE: [2.212500000000131e-05, 2.262500000000181e-05, 2.1971999999998576e-05, 2.1944000000002906e-05, 2.1957999999999006e-05, 2.2000000000001185e-05, 2.261100000000224e-05, 2.25830000000031e-05, 2.206900000000303e-05, 2.20830000000026e-05, 2.25969999999992e-05, 2.186100000000149e-05, 2.2014000000000755e-05, 2.1986000000001615e-05, 2.19030000000002e-05, 2.1736000000001365e-05, 2.211099999999827e-05, 2.268100000000009e-05, 2.1916000000000296e-05, 2.266700000000052e-05, 2.191699999999977e-05, 2.2680000000000616e-05, 2.211100000000174e-05, 2.268100000000009e-05, 2.2708000000003226e-05, 2.255500000000049e-05, 2.2013999999997286e-05, 2.268100000000009e-05, 2.1999999999997716e-05, 2.19030000000002e-05, 2.2555999999999965e-05, 2.1943999999999436e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.19030000000002e-05, 2.194500000000238e-05, 2.191699999999977e-05, 2.1971999999998576e-05, 2.2707999999999756e-05, 2.1778000000000075e-05, 2.2555999999999965e-05, 2.2584000000002574e-05, 2.2583999999999105e-05, 2.2069999999999035e-05, 2.2721999999999326e-05, 2.194499999999891e-05, 2.2569999999999535e-05, 2.211099999999827e-05, 2.2041999999999895e-05, 2.2694000000000186e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.098" endtime="20201117 14:42:07.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.094" endtime="20201117 14:42:07.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.103" endtime="20201117 14:42:07.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.106" endtime="20201117 14:42:07.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.105" endtime="20201117 14:42:07.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.101" endtime="20201117 14:42:07.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.737" endtime="20201117 14:42:07.127"></status>
</kw>
<msg timestamp="20201117 14:42:07.127" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.135" endtime="20201117 14:42:07.149"></status>
</kw>
<msg timestamp="20201117 14:42:07.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.134" endtime="20201117 14:42:07.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.151" endtime="20201117 14:42:07.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.154" endtime="20201117 14:42:07.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.131" endtime="20201117 14:42:07.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.129" endtime="20201117 14:42:07.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.163" endtime="20201117 14:42:07.451"></status>
</kw>
<msg timestamp="20201117 14:42:07.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021515458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.161" endtime="20201117 14:42:07.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021515458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.455" endtime="20201117 14:42:07.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.463" endtime="20201117 14:42:07.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.159" endtime="20201117 14:42:07.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.157" endtime="20201117 14:42:07.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.469" level="INFO">${RESULT} = [{'time': 0.021515458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.186100000000149e-05, 'source_diff': 2.186100000000149e-05}, {'time': 0.021540458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.466" endtime="20201117 14:42:07.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.483" level="INFO">${ACCURACY} = {'source_diff': [2.186100000000149e-05, 2.2665999999997577e-05, 2.268100000000009e-05, 2.206899999999956e-05, 2.1930000000003336e-05, 2.188900000000063e-05, 2.208299999999913e-05, 2.212499999999784e-0...</msg>
<status status="PASS" starttime="20201117 14:42:07.470" endtime="20201117 14:42:07.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.487" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.486" endtime="20201117 14:42:07.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.490" level="INFO">VALUE: [2.186100000000149e-05, 2.2665999999997577e-05, 2.268100000000009e-05, 2.206899999999956e-05, 2.1930000000003336e-05, 2.188900000000063e-05, 2.208299999999913e-05, 2.212499999999784e-05, 2.2750000000001935e-05, 2.204100000000042e-05, 2.265299999999748e-05, 2.1986000000001615e-05, 2.206899999999956e-05, 2.2736000000002365e-05, 2.258299999999963e-05, 2.1971999999998576e-05, 2.1929999999999866e-05, 2.1778000000000075e-05, 2.197299999999805e-05, 2.2083999999998605e-05, 2.262500000000181e-05, 2.181899999999931e-05, 2.209700000000217e-05, 2.187500000000106e-05, 2.1764000000000505e-05, 2.266700000000052e-05, 2.268100000000009e-05, 2.2735999999998896e-05, 2.2070000000002504e-05, 2.2707999999999756e-05, 2.184699999999845e-05, 2.212500000000131e-05, 2.261099999999877e-05, 2.184699999999845e-05, 2.204100000000042e-05, 2.186100000000149e-05, 2.184699999999845e-05, 2.269499999999966e-05, 2.2721999999999326e-05, 2.269499999999966e-05, 2.268100000000009e-05, 2.263900000000138e-05, 2.187500000000106e-05, 2.2055999999999465e-05, 2.265300000000095e-05, 2.269499999999966e-05, 2.191699999999977e-05, 2.24030000000007e-05, 2.261100000000224e-05, 2.268100000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.488" endtime="20201117 14:42:07.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.484" endtime="20201117 14:42:07.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.493" endtime="20201117 14:42:07.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.496" endtime="20201117 14:42:07.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.495" endtime="20201117 14:42:07.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.491" endtime="20201117 14:42:07.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.128" endtime="20201117 14:42:07.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.735" endtime="20201117 14:42:07.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.735" endtime="20201117 14:42:07.517"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.520" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.528" endtime="20201117 14:42:07.543"></status>
</kw>
<msg timestamp="20201117 14:42:07.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.527" endtime="20201117 14:42:07.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.545" endtime="20201117 14:42:07.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.547" endtime="20201117 14:42:07.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.524" endtime="20201117 14:42:07.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.522" endtime="20201117 14:42:07.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.556" endtime="20201117 14:42:07.840"></status>
</kw>
<msg timestamp="20201117 14:42:07.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024545681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024568472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.555" endtime="20201117 14:42:07.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024545681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024568472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.844" endtime="20201117 14:42:07.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.853" endtime="20201117 14:42:07.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.552" endtime="20201117 14:42:07.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.550" endtime="20201117 14:42:07.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.859" level="INFO">${RESULT} = [{'time': 0.024568472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.279100000000117e-05, 'source_diff': 2.279100000000117e-05}, {'time': 0.024592431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.856" endtime="20201117 14:42:07.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.874" level="INFO">${ACCURACY} = {'source_diff': [2.279100000000117e-05, 2.1848000000001394e-05, 2.1820000000002254e-05, 2.25969999999992e-05, 2.211099999999827e-05, 2.17090000000017e-05, 2.2666000000001046e-05, 2.1929999999999866e-0...</msg>
<status status="PASS" starttime="20201117 14:42:07.860" endtime="20201117 14:42:07.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.879" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.878" endtime="20201117 14:42:07.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.881" level="INFO">VALUE: [2.279100000000117e-05, 2.1848000000001394e-05, 2.1820000000002254e-05, 2.25969999999992e-05, 2.211099999999827e-05, 2.17090000000017e-05, 2.2666000000001046e-05, 2.1929999999999866e-05, 2.1806000000002684e-05, 2.27229999999988e-05, 2.2749999999998466e-05, 2.212499999999784e-05, 2.252700000000135e-05, 2.2014000000000755e-05, 2.194500000000238e-05, 2.256900000000006e-05, 2.184699999999845e-05, 2.17770000000006e-05, 2.2040999999996952e-05, 2.25969999999992e-05, 2.186100000000149e-05, 2.2777999999997606e-05, 2.202700000000085e-05, 2.181899999999931e-05, 2.1957999999999006e-05, 2.2694000000000186e-05, 2.2666000000001046e-05, 2.261100000000224e-05, 2.204100000000042e-05, 2.206899999999956e-05, 2.2014000000000755e-05, 2.1929999999999866e-05, 2.2666000000001046e-05, 2.179100000000017e-05, 2.237499999999809e-05, 2.212499999999784e-05, 2.212499999999784e-05, 2.211100000000174e-05, 2.1986000000001615e-05, 2.25969999999992e-05, 2.1943999999999436e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.258299999999963e-05, 2.270899999999923e-05, 2.1943999999999436e-05, 2.262500000000181e-05, 2.194499999999891e-05, 2.261099999999877e-05, 2.2735999999998896e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.880" endtime="20201117 14:42:07.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.875" endtime="20201117 14:42:07.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.884" endtime="20201117 14:42:07.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.887" endtime="20201117 14:42:07.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.886" endtime="20201117 14:42:07.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.883" endtime="20201117 14:42:07.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.520" endtime="20201117 14:42:07.909"></status>
</kw>
<msg timestamp="20201117 14:42:07.909" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.917" endtime="20201117 14:42:07.932"></status>
</kw>
<msg timestamp="20201117 14:42:07.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.915" endtime="20201117 14:42:07.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.933" endtime="20201117 14:42:07.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.936" endtime="20201117 14:42:07.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.913" endtime="20201117 14:42:07.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.911" endtime="20201117 14:42:07.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.945" endtime="20201117 14:42:08.230"></status>
</kw>
<msg timestamp="20201117 14:42:08.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.943" endtime="20201117 14:42:08.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.234" endtime="20201117 14:42:08.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.243" endtime="20201117 14:42:08.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.941" endtime="20201117 14:42:08.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.939" endtime="20201117 14:42:08.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.249" level="INFO">${RESULT} = [{'time': 0.021822236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.180499999999974e-05, 'source_diff': 2.180499999999974e-05}, {'time': 0.021846278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:08.246" endtime="20201117 14:42:08.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.263" level="INFO">${ACCURACY} = {'source_diff': [2.180499999999974e-05, 2.211100000000174e-05, 2.2680000000000616e-05, 2.187499999999759e-05, 2.211100000000174e-05, 2.206900000000303e-05, 2.1972000000002045e-05, 2.1986000000001615e-...</msg>
<status status="PASS" starttime="20201117 14:42:08.250" endtime="20201117 14:42:08.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.267" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.266" endtime="20201117 14:42:08.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.270" level="INFO">VALUE: [2.180499999999974e-05, 2.211100000000174e-05, 2.2680000000000616e-05, 2.187499999999759e-05, 2.211100000000174e-05, 2.206900000000303e-05, 2.1972000000002045e-05, 2.1986000000001615e-05, 2.2055999999999465e-05, 2.183299999999888e-05, 2.19030000000002e-05, 2.2014000000000755e-05, 2.183299999999888e-05, 2.20969999999987e-05, 2.187499999999759e-05, 2.25969999999992e-05, 2.202700000000085e-05, 2.1943999999999436e-05, 2.2000000000001185e-05, 2.231899999999981e-05, 2.27770000000016e-05, 2.206899999999956e-05, 2.212500000000131e-05, 2.1958000000002476e-05, 2.213900000000088e-05, 2.2542000000000395e-05, 2.212500000000131e-05, 2.263899999999791e-05, 2.2666000000001046e-05, 2.1999999999997716e-05, 2.2749999999998466e-05, 2.1763999999997036e-05, 2.2041999999999895e-05, 2.1820000000002254e-05, 2.2084000000002074e-05, 2.2055999999999465e-05, 2.1778000000000075e-05, 2.197300000000152e-05, 2.2097999999998175e-05, 2.191699999999977e-05, 2.261099999999877e-05, 2.2028000000000325e-05, 2.1735999999997896e-05, 2.193099999999934e-05, 2.1805999999999215e-05, 2.1749999999997466e-05, 2.1848000000001394e-05, 2.2014000000000755e-05, 2.17770000000006e-05, 2.184700000000192e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.268" endtime="20201117 14:42:08.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.264" endtime="20201117 14:42:08.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.273" endtime="20201117 14:42:08.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.277" endtime="20201117 14:42:08.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.275" endtime="20201117 14:42:08.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.271" endtime="20201117 14:42:08.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.909" endtime="20201117 14:42:08.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.518" endtime="20201117 14:42:08.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.518" endtime="20201117 14:42:08.298"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.300" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.308" endtime="20201117 14:42:08.323"></status>
</kw>
<msg timestamp="20201117 14:42:08.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.307" endtime="20201117 14:42:08.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.325" endtime="20201117 14:42:08.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.327" endtime="20201117 14:42:08.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.304" endtime="20201117 14:42:08.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.302" endtime="20201117 14:42:08.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.336" endtime="20201117 14:42:08.624"></status>
</kw>
<msg timestamp="20201117 14:42:08.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024030736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.335" endtime="20201117 14:42:08.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024030736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.628" endtime="20201117 14:42:08.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.636" endtime="20201117 14:42:08.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.332" endtime="20201117 14:42:08.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.330" endtime="20201117 14:42:08.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.643" level="INFO">${RESULT} = [{'time': 0.024030736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2041999999999895e-05, 'source_diff': 2.2041999999999895e-05}, {'time': 0.024055764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:08.639" endtime="20201117 14:42:08.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.656" level="INFO">${ACCURACY} = {'source_diff': [2.2041999999999895e-05, 2.268100000000009e-05, 2.2721999999999326e-05, 2.2083999999998605e-05, 2.1764000000000505e-05, 2.266700000000052e-05, 2.2056000000002934e-05, 2.197200000000204...</msg>
<status status="PASS" starttime="20201117 14:42:08.644" endtime="20201117 14:42:08.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.661" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.660" endtime="20201117 14:42:08.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.663" level="INFO">VALUE: [2.2041999999999895e-05, 2.268100000000009e-05, 2.2721999999999326e-05, 2.2083999999998605e-05, 2.1764000000000505e-05, 2.266700000000052e-05, 2.2056000000002934e-05, 2.1972000000002045e-05, 2.183300000000235e-05, 2.2707999999999756e-05, 2.266700000000052e-05, 2.25969999999992e-05, 2.269499999999966e-05, 2.1957999999999006e-05, 2.188899999999716e-05, 2.2721999999999326e-05, 2.263900000000138e-05, 2.1805999999999215e-05, 2.211100000000174e-05, 2.1750000000000935e-05, 2.262500000000181e-05, 2.2000000000001185e-05, 2.238900000000113e-05, 2.184699999999845e-05, 2.265300000000095e-05, 2.2542000000000395e-05, 2.194499999999891e-05, 2.2194000000003156e-05, 2.1819999999998785e-05, 2.2721999999999326e-05, 2.2555999999999965e-05, 2.2098000000001644e-05, 2.1764000000000505e-05, 2.197300000000152e-05, 2.1833999999998355e-05, 2.1750000000000935e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.2736000000002365e-05, 2.212500000000131e-05, 2.187500000000106e-05, 2.2055999999999465e-05, 2.2612000000001714e-05, 2.187500000000106e-05, 2.2028000000000325e-05, 2.1833999999998355e-05, 2.187500000000106e-05, 2.2694000000000186e-05, 2.180499999999974e-05, 2.211100000000174e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.662" endtime="20201117 14:42:08.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.657" endtime="20201117 14:42:08.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.667" endtime="20201117 14:42:08.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.670" endtime="20201117 14:42:08.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.669" endtime="20201117 14:42:08.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.665" endtime="20201117 14:42:08.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.301" endtime="20201117 14:42:08.691"></status>
</kw>
<msg timestamp="20201117 14:42:08.691" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.699" endtime="20201117 14:42:08.714"></status>
</kw>
<msg timestamp="20201117 14:42:08.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.698" endtime="20201117 14:42:08.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.716" endtime="20201117 14:42:08.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.718" endtime="20201117 14:42:08.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.695" endtime="20201117 14:42:08.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.693" endtime="20201117 14:42:08.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.727" endtime="20201117 14:42:09.013"></status>
</kw>
<msg timestamp="20201117 14:42:09.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.725" endtime="20201117 14:42:09.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.017" endtime="20201117 14:42:09.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.025" endtime="20201117 14:42:09.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.723" endtime="20201117 14:42:09.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.721" endtime="20201117 14:42:09.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.032" level="INFO">${RESULT} = [{'time': 0.021630847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.021654847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:09.029" endtime="20201117 14:42:09.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.045" level="INFO">${ACCURACY} = {'source_diff': [2.204100000000042e-05, 2.183300000000235e-05, 2.191699999999977e-05, 2.262500000000181e-05, 2.261099999999877e-05, 2.209700000000217e-05, 2.1958000000002476e-05, 2.2750000000001935e-0...</msg>
<status status="PASS" starttime="20201117 14:42:09.033" endtime="20201117 14:42:09.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.050" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.049" endtime="20201117 14:42:09.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.053" level="INFO">VALUE: [2.204100000000042e-05, 2.183300000000235e-05, 2.191699999999977e-05, 2.262500000000181e-05, 2.261099999999877e-05, 2.209700000000217e-05, 2.1958000000002476e-05, 2.2750000000001935e-05, 2.2707999999999756e-05, 2.258299999999963e-05, 2.2764000000001505e-05, 2.2736000000002365e-05, 2.1929999999999866e-05, 2.2694000000000186e-05, 2.261099999999877e-05, 2.1985999999998146e-05, 2.193100000000281e-05, 2.1986000000001615e-05, 2.1722000000001795e-05, 2.1943999999999436e-05, 2.1986000000001615e-05, 2.1764000000000505e-05, 2.1819999999998785e-05, 2.188900000000063e-05, 2.1764000000000505e-05, 2.1819999999998785e-05, 2.2027999999996856e-05, 2.1957999999999006e-05, 2.272300000000227e-05, 2.2084000000002074e-05, 2.2028000000000325e-05, 2.187500000000106e-05, 2.265299999999748e-05, 2.2098000000001644e-05, 2.265299999999748e-05, 2.2180000000000116e-05, 2.2569999999999535e-05, 2.191699999999977e-05, 2.2555999999999965e-05, 2.263899999999791e-05, 2.1848000000001394e-05, 2.2026999999997382e-05, 2.2569999999999535e-05, 2.2736000000002365e-05, 2.2569999999999535e-05, 2.2362000000001464e-05, 2.2652000000001477e-05, 2.263899999999791e-05, 2.1847999999997925e-05, 2.2084000000002074e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.051" endtime="20201117 14:42:09.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.046" endtime="20201117 14:42:09.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.056" endtime="20201117 14:42:09.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.060" endtime="20201117 14:42:09.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.058" endtime="20201117 14:42:09.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.055" endtime="20201117 14:42:09.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.692" endtime="20201117 14:42:09.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.299" endtime="20201117 14:42:09.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.298" endtime="20201117 14:42:09.081"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.083" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.092" endtime="20201117 14:42:09.108"></status>
</kw>
<msg timestamp="20201117 14:42:09.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.091" endtime="20201117 14:42:09.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.109" endtime="20201117 14:42:09.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.112" endtime="20201117 14:42:09.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.088" endtime="20201117 14:42:09.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.085" endtime="20201117 14:42:09.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.121" endtime="20201117 14:42:09.407"></status>
</kw>
<msg timestamp="20201117 14:42:09.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024797014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.119" endtime="20201117 14:42:09.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024797014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.411" endtime="20201117 14:42:09.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.419" endtime="20201117 14:42:09.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.116" endtime="20201117 14:42:09.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.115" endtime="20201117 14:42:09.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.426" level="INFO">${RESULT} = [{'time': 0.024797014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.216700000000002e-05, 'source_diff': 2.216700000000002e-05}, {'time': 0.024820944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:09.423" endtime="20201117 14:42:09.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.441" level="INFO">${ACCURACY} = {'source_diff': [2.216700000000002e-05, 2.179100000000017e-05, 2.1862000000000964e-05, 2.262500000000181e-05, 2.1916000000000296e-05, 2.2388000000001657e-05, 2.2098000000001644e-05, 2.2721999999999326...</msg>
<status status="PASS" starttime="20201117 14:42:09.427" endtime="20201117 14:42:09.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.445" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.444" endtime="20201117 14:42:09.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.448" level="INFO">VALUE: [2.216700000000002e-05, 2.179100000000017e-05, 2.1862000000000964e-05, 2.262500000000181e-05, 2.1916000000000296e-05, 2.2388000000001657e-05, 2.2098000000001644e-05, 2.2721999999999326e-05, 2.2679999999997147e-05, 2.2722000000002796e-05, 2.2735999999998896e-05, 2.1916000000000296e-05, 2.205499999999999e-05, 2.237499999999809e-05, 2.183299999999888e-05, 2.2792000000000645e-05, 2.212499999999784e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.1916000000000296e-05, 2.25969999999992e-05, 2.2028000000000325e-05, 2.184699999999845e-05, 2.2707999999999756e-05, 2.209700000000217e-05, 2.187500000000106e-05, 2.1972000000002045e-05, 2.1986000000001615e-05, 2.265300000000095e-05, 2.256900000000006e-05, 2.1791999999999645e-05, 2.2028000000000325e-05, 2.186100000000149e-05, 2.265300000000095e-05, 2.1944000000002906e-05, 2.1778000000000075e-05, 2.1972000000002045e-05, 2.268100000000009e-05, 2.211100000000174e-05, 2.2736000000002365e-05, 2.268100000000009e-05, 2.256900000000006e-05, 2.2084000000002074e-05, 2.263900000000138e-05, 2.181899999999931e-05, 2.19030000000002e-05, 2.1778000000000075e-05, 2.263899999999791e-05, 2.2041999999999895e-05, 2.268100000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.446" endtime="20201117 14:42:09.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.442" endtime="20201117 14:42:09.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.452" endtime="20201117 14:42:09.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.455" endtime="20201117 14:42:09.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.453" endtime="20201117 14:42:09.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.450" endtime="20201117 14:42:09.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.084" endtime="20201117 14:42:09.475"></status>
</kw>
<msg timestamp="20201117 14:42:09.476" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.484" endtime="20201117 14:42:09.499"></status>
</kw>
<msg timestamp="20201117 14:42:09.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.482" endtime="20201117 14:42:09.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.500" endtime="20201117 14:42:09.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.503" endtime="20201117 14:42:09.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.480" endtime="20201117 14:42:09.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.478" endtime="20201117 14:42:09.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.512" endtime="20201117 14:42:09.800"></status>
</kw>
<msg timestamp="20201117 14:42:09.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.510" endtime="20201117 14:42:09.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.804" endtime="20201117 14:42:09.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.812" endtime="20201117 14:42:09.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.507" endtime="20201117 14:42:09.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.506" endtime="20201117 14:42:09.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.819" level="INFO">${RESULT} = [{'time': 0.021449778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2333999999998855e-05, 'source_diff': 2.2333999999998855e-05}, {'time': 0.021473764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:09.815" endtime="20201117 14:42:09.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.832" level="INFO">${ACCURACY} = {'source_diff': [2.2333999999998855e-05, 2.1805999999999215e-05, 2.1971999999998576e-05, 2.169499999999866e-05, 2.1999999999997716e-05, 2.265300000000095e-05, 2.2028000000000325e-05, 2.266700000000052...</msg>
<status status="PASS" starttime="20201117 14:42:09.820" endtime="20201117 14:42:09.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.837" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.836" endtime="20201117 14:42:09.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.840" level="INFO">VALUE: [2.2333999999998855e-05, 2.1805999999999215e-05, 2.1971999999998576e-05, 2.169499999999866e-05, 2.1999999999997716e-05, 2.265300000000095e-05, 2.2028000000000325e-05, 2.266700000000052e-05, 2.1805999999999215e-05, 2.184700000000192e-05, 2.261099999999877e-05, 2.191700000000324e-05, 2.265300000000095e-05, 2.187499999999759e-05, 2.2597999999998675e-05, 2.1915999999996827e-05, 2.1833999999998355e-05, 2.187499999999759e-05, 2.2555999999999965e-05, 2.2069999999999035e-05, 2.188900000000063e-05, 2.2651999999998007e-05, 2.1833999999998355e-05, 2.17770000000006e-05, 2.1929999999999866e-05, 2.269499999999966e-05, 2.2707999999999756e-05, 2.19030000000002e-05, 2.2041999999999895e-05, 2.2014000000000755e-05, 2.1985999999998146e-05, 2.262499999999834e-05, 2.186099999999802e-05, 2.262499999999834e-05, 2.1985999999998146e-05, 2.1929999999999866e-05, 2.179100000000017e-05, 2.2680000000000616e-05, 2.205499999999999e-05, 2.1778000000000075e-05, 2.180499999999974e-05, 2.2040999999996952e-05, 2.256900000000006e-05, 2.180499999999974e-05, 2.187499999999759e-05, 2.180499999999974e-05, 2.2680000000000616e-05, 2.2707999999999756e-05, 2.184699999999845e-05, 2.179100000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.838" endtime="20201117 14:42:09.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.833" endtime="20201117 14:42:09.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.843" endtime="20201117 14:42:09.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.846" endtime="20201117 14:42:09.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.844" endtime="20201117 14:42:09.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.841" endtime="20201117 14:42:09.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.476" endtime="20201117 14:42:09.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.082" endtime="20201117 14:42:09.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.081" endtime="20201117 14:42:09.867"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.869" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.877" endtime="20201117 14:42:09.892"></status>
</kw>
<msg timestamp="20201117 14:42:09.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.876" endtime="20201117 14:42:09.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.894" endtime="20201117 14:42:09.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.896" endtime="20201117 14:42:09.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.873" endtime="20201117 14:42:09.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.871" endtime="20201117 14:42:09.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.905" endtime="20201117 14:42:10.193"></status>
</kw>
<msg timestamp="20201117 14:42:10.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023965694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02398775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:09.903" endtime="20201117 14:42:10.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023965694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02398775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:10.197" endtime="20201117 14:42:10.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.205" endtime="20201117 14:42:10.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.901" endtime="20201117 14:42:10.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.899" endtime="20201117 14:42:10.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.212" level="INFO">${RESULT} = [{'time': 0.02398775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2055999999999465e-05, 'source_diff': 2.2055999999999465e-05}, {'time': 0.024011736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:10.209" endtime="20201117 14:42:10.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.226" level="INFO">${ACCURACY} = {'source_diff': [2.2055999999999465e-05, 2.237499999999809e-05, 2.266700000000052e-05, 2.2041999999999895e-05, 2.1985999999998146e-05, 2.1792000000003114e-05, 2.268100000000009e-05, 2.187500000000106e...</msg>
<status status="PASS" starttime="20201117 14:42:10.213" endtime="20201117 14:42:10.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.230" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.229" endtime="20201117 14:42:10.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.233" level="INFO">VALUE: [2.2055999999999465e-05, 2.237499999999809e-05, 2.266700000000052e-05, 2.2041999999999895e-05, 2.1985999999998146e-05, 2.1792000000003114e-05, 2.268100000000009e-05, 2.187500000000106e-05, 2.213899999999741e-05, 2.1944000000002906e-05, 2.2056000000002934e-05, 2.1958000000002476e-05, 2.2055999999999465e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.211099999999827e-05, 2.197300000000152e-05, 2.2028000000000325e-05, 2.1805999999999215e-05, 2.184700000000192e-05, 2.1792000000003114e-05, 2.184699999999845e-05, 2.258299999999963e-05, 2.25969999999992e-05, 2.187500000000106e-05, 2.1778000000000075e-05, 2.2764000000001505e-05, 2.1943999999999436e-05, 2.193099999999934e-05, 2.193100000000281e-05, 2.269499999999966e-05, 2.2542000000000395e-05, 2.1985999999998146e-05, 2.1833999999998355e-05, 2.2694000000000186e-05, 2.2569999999999535e-05, 2.20969999999987e-05, 2.191699999999977e-05, 2.2069999999999035e-05, 2.1999999999997716e-05, 2.179100000000017e-05, 2.193100000000281e-05, 2.265299999999748e-05, 2.211100000000174e-05, 2.1862000000000964e-05, 2.187500000000106e-05, 2.194500000000238e-05, 2.2722000000002796e-05, 2.183300000000235e-05, 2.208299999999913e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.231" endtime="20201117 14:42:10.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.227" endtime="20201117 14:42:10.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.236" endtime="20201117 14:42:10.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.239" endtime="20201117 14:42:10.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.238" endtime="20201117 14:42:10.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.234" endtime="20201117 14:42:10.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.870" endtime="20201117 14:42:10.260"></status>
</kw>
<msg timestamp="20201117 14:42:10.260" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.268" endtime="20201117 14:42:10.283"></status>
</kw>
<msg timestamp="20201117 14:42:10.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.267" endtime="20201117 14:42:10.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.285" endtime="20201117 14:42:10.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.287" endtime="20201117 14:42:10.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.264" endtime="20201117 14:42:10.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.262" endtime="20201117 14:42:10.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.296" endtime="20201117 14:42:10.582"></status>
</kw>
<msg timestamp="20201117 14:42:10.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.295" endtime="20201117 14:42:10.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.586" endtime="20201117 14:42:10.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.595" endtime="20201117 14:42:10.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.292" endtime="20201117 14:42:10.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.291" endtime="20201117 14:42:10.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.602" level="INFO">${RESULT} = [{'time': 0.021702944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999998216e-05, 'source_diff': 2.2499999999998216e-05}, {'time': 0.021728028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:10.598" endtime="20201117 14:42:10.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.615" level="INFO">${ACCURACY} = {'source_diff': [2.2499999999998216e-05, 2.270899999999923e-05, 2.179100000000017e-05, 2.2637999999998437e-05, 2.205499999999999e-05, 2.1776999999997132e-05, 2.211100000000174e-05, 2.187500000000106e-...</msg>
<status status="PASS" starttime="20201117 14:42:10.602" endtime="20201117 14:42:10.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.619" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.618" endtime="20201117 14:42:10.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.622" level="INFO">VALUE: [2.2499999999998216e-05, 2.270899999999923e-05, 2.179100000000017e-05, 2.2637999999998437e-05, 2.205499999999999e-05, 2.1776999999997132e-05, 2.211100000000174e-05, 2.187500000000106e-05, 2.25830000000031e-05, 2.256900000000006e-05, 2.1902000000000726e-05, 2.263899999999791e-05, 2.19030000000002e-05, 2.191699999999977e-05, 2.265299999999748e-05, 2.258299999999963e-05, 2.2000000000001185e-05, 2.1957999999999006e-05, 2.1985999999998146e-05, 2.188899999999716e-05, 2.191699999999977e-05, 2.243099999999984e-05, 2.2721999999999326e-05, 2.263899999999791e-05, 2.191699999999977e-05, 2.1971999999998576e-05, 2.2735999999998896e-05, 2.241700000000027e-05, 2.2014000000000755e-05, 2.1957999999999006e-05, 2.265299999999748e-05, 2.206899999999956e-05, 2.191699999999977e-05, 2.193100000000281e-05, 2.191699999999977e-05, 2.1805999999999215e-05, 2.1805999999999215e-05, 2.268100000000009e-05, 2.211099999999827e-05, 2.1778000000000075e-05, 2.2180000000000116e-05, 2.184699999999845e-05, 2.2777999999997606e-05, 2.269499999999966e-05, 2.195900000000195e-05, 2.2333999999998855e-05, 2.2583999999999105e-05, 2.1834000000001824e-05, 2.2555999999999965e-05, 2.191699999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.620" endtime="20201117 14:42:10.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.616" endtime="20201117 14:42:10.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.625" endtime="20201117 14:42:10.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.628" endtime="20201117 14:42:10.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.627" endtime="20201117 14:42:10.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.623" endtime="20201117 14:42:10.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.261" endtime="20201117 14:42:10.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.868" endtime="20201117 14:42:10.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.867" endtime="20201117 14:42:10.650"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.652" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.660" endtime="20201117 14:42:10.675"></status>
</kw>
<msg timestamp="20201117 14:42:10.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.658" endtime="20201117 14:42:10.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.676" endtime="20201117 14:42:10.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.679" endtime="20201117 14:42:10.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.656" endtime="20201117 14:42:10.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.654" endtime="20201117 14:42:10.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.688" endtime="20201117 14:42:10.976"></status>
</kw>
<msg timestamp="20201117 14:42:10.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024139944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.687" endtime="20201117 14:42:10.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024139944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.980" endtime="20201117 14:42:10.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.988" endtime="20201117 14:42:10.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.684" endtime="20201117 14:42:10.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.682" endtime="20201117 14:42:10.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.995" level="INFO">${RESULT} = [{'time': 0.024139944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.206899999999956e-05, 'source_diff': 2.206899999999956e-05}, {'time': 0.024164986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.991" endtime="20201117 14:42:10.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.010" level="INFO">${ACCURACY} = {'source_diff': [2.206899999999956e-05, 2.262499999999834e-05, 2.181899999999931e-05, 2.201300000000128e-05, 2.20969999999987e-05, 2.184699999999845e-05, 2.183299999999888e-05, 2.179100000000017e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:10.996" endtime="20201117 14:42:11.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.014" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.013" endtime="20201117 14:42:11.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.016" level="INFO">VALUE: [2.206899999999956e-05, 2.262499999999834e-05, 2.181899999999931e-05, 2.201300000000128e-05, 2.20969999999987e-05, 2.184699999999845e-05, 2.183299999999888e-05, 2.179100000000017e-05, 2.2680000000000616e-05, 2.186099999999802e-05, 2.219499999999916e-05, 2.1944000000002906e-05, 2.2000000000001185e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.20969999999987e-05, 2.2707999999999756e-05, 2.263900000000138e-05, 2.261100000000224e-05, 2.20969999999987e-05, 2.1833999999998355e-05, 2.1929999999999866e-05, 2.254100000000092e-05, 2.1916000000000296e-05, 2.2750000000001935e-05, 2.1764000000000505e-05, 2.1929999999999866e-05, 2.263900000000138e-05, 2.19030000000002e-05, 2.2707999999999756e-05, 2.181900000000278e-05, 2.191699999999977e-05, 2.1972000000002045e-05, 2.2735999999998896e-05, 2.2000000000001185e-05, 2.2055999999999465e-05, 2.2027999999996856e-05, 2.2028000000000325e-05, 2.1971999999998576e-05, 2.262499999999834e-05, 2.1805999999999215e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.1985999999998146e-05, 2.2707999999999756e-05, 2.1999999999997716e-05, 2.2542000000000395e-05, 2.1791999999999645e-05, 2.1999999999997716e-05, 2.269499999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.015" endtime="20201117 14:42:11.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.011" endtime="20201117 14:42:11.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.020" endtime="20201117 14:42:11.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.023" endtime="20201117 14:42:11.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.021" endtime="20201117 14:42:11.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.018" endtime="20201117 14:42:11.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.652" endtime="20201117 14:42:11.044"></status>
</kw>
<msg timestamp="20201117 14:42:11.044" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.052" endtime="20201117 14:42:11.067"></status>
</kw>
<msg timestamp="20201117 14:42:11.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.050" endtime="20201117 14:42:11.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.069" endtime="20201117 14:42:11.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.071" endtime="20201117 14:42:11.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.048" endtime="20201117 14:42:11.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.046" endtime="20201117 14:42:11.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.080" endtime="20201117 14:42:11.367"></status>
</kw>
<msg timestamp="20201117 14:42:11.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.079" endtime="20201117 14:42:11.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.371" endtime="20201117 14:42:11.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.379" endtime="20201117 14:42:11.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.076" endtime="20201117 14:42:11.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.075" endtime="20201117 14:42:11.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.386" level="INFO">${RESULT} = [{'time': 0.021509403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.194499999999891e-05, 'source_diff': 2.194499999999891e-05}, {'time': 0.021534403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:11.383" endtime="20201117 14:42:11.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.399" level="INFO">${ACCURACY} = {'source_diff': [2.194499999999891e-05, 2.2735999999998896e-05, 2.1986000000001615e-05, 2.2000000000001185e-05, 2.193099999999934e-05, 2.184700000000192e-05, 2.263900000000138e-05, 2.262500000000181e-...</msg>
<status status="PASS" starttime="20201117 14:42:11.387" endtime="20201117 14:42:11.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.404" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.403" endtime="20201117 14:42:11.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.406" level="INFO">VALUE: [2.194499999999891e-05, 2.2735999999998896e-05, 2.1986000000001615e-05, 2.2000000000001185e-05, 2.193099999999934e-05, 2.184700000000192e-05, 2.263900000000138e-05, 2.262500000000181e-05, 2.194499999999891e-05, 2.1986000000001615e-05, 2.1805999999999215e-05, 2.1791999999999645e-05, 2.186099999999802e-05, 2.211099999999827e-05, 2.186100000000149e-05, 2.20830000000026e-05, 2.19030000000002e-05, 2.2612000000001714e-05, 2.1862000000000964e-05, 2.270899999999923e-05, 2.259700000000267e-05, 2.1901999999997257e-05, 2.2012999999997812e-05, 2.266699999999705e-05, 2.212499999999784e-05, 2.204100000000042e-05, 2.211099999999827e-05, 2.183300000000235e-05, 2.183300000000235e-05, 2.2707999999999756e-05, 2.25969999999992e-05, 2.2666000000001046e-05, 2.208299999999913e-05, 2.2694000000000186e-05, 2.263900000000138e-05, 2.258299999999963e-05, 2.183299999999888e-05, 2.205499999999999e-05, 2.256900000000006e-05, 2.2694000000000186e-05, 2.186100000000149e-05, 2.19030000000002e-05, 2.1958000000002476e-05, 2.183300000000235e-05, 2.211100000000174e-05, 2.187499999999759e-05, 2.20969999999987e-05, 2.1999999999997716e-05, 2.2694000000000186e-05, 2.193100000000281e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.405" endtime="20201117 14:42:11.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.400" endtime="20201117 14:42:11.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.409" endtime="20201117 14:42:11.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.413" endtime="20201117 14:42:11.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.411" endtime="20201117 14:42:11.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.408" endtime="20201117 14:42:11.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.044" endtime="20201117 14:42:11.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.651" endtime="20201117 14:42:11.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.650" endtime="20201117 14:42:11.434"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.436" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.445" endtime="20201117 14:42:11.459"></status>
</kw>
<msg timestamp="20201117 14:42:11.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.443" endtime="20201117 14:42:11.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.461" endtime="20201117 14:42:11.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.463" endtime="20201117 14:42:11.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.440" endtime="20201117 14:42:11.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.438" endtime="20201117 14:42:11.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.472" endtime="20201117 14:42:11.759"></status>
</kw>
<msg timestamp="20201117 14:42:11.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024332, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024354417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:11.471" endtime="20201117 14:42:11.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024332, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024354417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:11.763" endtime="20201117 14:42:11.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.771" endtime="20201117 14:42:11.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.468" endtime="20201117 14:42:11.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.466" endtime="20201117 14:42:11.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.778" level="INFO">${RESULT} = [{'time': 0.024354417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.241700000000027e-05, 'source_diff': 2.241700000000027e-05}, {'time': 0.024379472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:11.774" endtime="20201117 14:42:11.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.791" level="INFO">${ACCURACY} = {'source_diff': [2.241700000000027e-05, 2.2735999999998896e-05, 2.27090000000027e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.180499999999974e-05, 2.263899999999791e-05, 2.1985999999998146e-05...</msg>
<status status="PASS" starttime="20201117 14:42:11.779" endtime="20201117 14:42:11.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.796" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.795" endtime="20201117 14:42:11.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.798" level="INFO">VALUE: [2.241700000000027e-05, 2.2735999999998896e-05, 2.27090000000027e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.180499999999974e-05, 2.263899999999791e-05, 2.1985999999998146e-05, 2.261099999999877e-05, 2.2569999999999535e-05, 2.2014000000000755e-05, 2.265300000000095e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.2584000000002574e-05, 2.2041999999999895e-05, 2.1929999999999866e-05, 2.1929999999999866e-05, 2.204100000000042e-05, 2.202700000000085e-05, 2.2707999999999756e-05, 2.1971999999998576e-05, 2.1971999999998576e-05, 2.256900000000006e-05, 2.209700000000217e-05, 2.2652000000001477e-05, 2.2000000000001185e-05, 2.205499999999999e-05, 2.211099999999827e-05, 2.1943999999999436e-05, 2.262499999999834e-05, 2.212500000000131e-05, 2.2778000000001075e-05, 2.25969999999992e-05, 2.2084000000002074e-05, 2.1943999999999436e-05, 2.2000000000001185e-05, 2.2694000000000186e-05, 2.1971999999998576e-05, 2.258299999999963e-05, 2.212500000000131e-05, 2.2041999999999895e-05, 2.1778000000000075e-05, 2.205499999999999e-05, 2.265300000000095e-05, 2.1971999999998576e-05, 2.194499999999891e-05, 2.258299999999963e-05, 2.2555999999999965e-05, 2.188900000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.797" endtime="20201117 14:42:11.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.792" endtime="20201117 14:42:11.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.801" endtime="20201117 14:42:11.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.805" endtime="20201117 14:42:11.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.803" endtime="20201117 14:42:11.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.800" endtime="20201117 14:42:11.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.437" endtime="20201117 14:42:11.826"></status>
</kw>
<msg timestamp="20201117 14:42:11.826" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.834" endtime="20201117 14:42:11.849"></status>
</kw>
<msg timestamp="20201117 14:42:11.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.833" endtime="20201117 14:42:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.851" endtime="20201117 14:42:11.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.853" endtime="20201117 14:42:11.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.830" endtime="20201117 14:42:11.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.828" endtime="20201117 14:42:11.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.862" endtime="20201117 14:42:12.149"></status>
</kw>
<msg timestamp="20201117 14:42:12.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.860" endtime="20201117 14:42:12.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.153" endtime="20201117 14:42:12.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.162" endtime="20201117 14:42:12.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.858" endtime="20201117 14:42:12.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.856" endtime="20201117 14:42:12.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.168" level="INFO">${RESULT} = [{'time': 0.022165528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.265300000000095e-05, 'source_diff': 2.265300000000095e-05}, {'time': 0.022189514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.165" endtime="20201117 14:42:12.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.182" level="INFO">${ACCURACY} = {'source_diff': [2.265300000000095e-05, 2.1972000000002045e-05, 2.1791999999999645e-05, 2.25969999999992e-05, 2.261100000000224e-05, 2.211100000000174e-05, 2.1805999999999215e-05, 2.2041999999999895e-...</msg>
<status status="PASS" starttime="20201117 14:42:12.169" endtime="20201117 14:42:12.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.186" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.185" endtime="20201117 14:42:12.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.189" level="INFO">VALUE: [2.265300000000095e-05, 2.1972000000002045e-05, 2.1791999999999645e-05, 2.25969999999992e-05, 2.261100000000224e-05, 2.211100000000174e-05, 2.1805999999999215e-05, 2.2041999999999895e-05, 2.1847999999997925e-05, 2.2083999999998605e-05, 2.266700000000052e-05, 2.2026999999997382e-05, 2.1819999999998785e-05, 2.213899999999741e-05, 2.1999999999997716e-05, 2.213900000000088e-05, 2.1819999999998785e-05, 2.2070000000002504e-05, 2.256900000000006e-05, 2.1972000000002045e-05, 2.2611999999998245e-05, 2.205499999999999e-05, 2.1834000000001824e-05, 2.198700000000109e-05, 2.2527999999997356e-05, 2.2361999999997995e-05, 2.2749999999998466e-05, 2.211099999999827e-05, 2.2012999999997812e-05, 2.1693999999999186e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.1943999999999436e-05, 2.263900000000138e-05, 2.179100000000017e-05, 2.2666000000001046e-05, 2.2666000000001046e-05, 2.2513999999997786e-05, 2.255500000000049e-05, 2.204100000000042e-05, 2.2707999999999756e-05, 2.2000000000001185e-05, 2.1943999999999436e-05, 2.1929999999999866e-05, 2.19030000000002e-05, 2.215300000000045e-05, 2.188899999999716e-05, 2.212500000000131e-05, 2.1944000000002906e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.187" endtime="20201117 14:42:12.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.183" endtime="20201117 14:42:12.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.192" endtime="20201117 14:42:12.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.196" endtime="20201117 14:42:12.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.194" endtime="20201117 14:42:12.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.191" endtime="20201117 14:42:12.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.827" endtime="20201117 14:42:12.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.435" endtime="20201117 14:42:12.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.434" endtime="20201117 14:42:12.217"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.219" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.227" endtime="20201117 14:42:12.242"></status>
</kw>
<msg timestamp="20201117 14:42:12.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.226" endtime="20201117 14:42:12.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.244" endtime="20201117 14:42:12.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.246" endtime="20201117 14:42:12.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.223" endtime="20201117 14:42:12.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.221" endtime="20201117 14:42:12.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.255" endtime="20201117 14:42:12.542"></status>
</kw>
<msg timestamp="20201117 14:42:12.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024275028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024297431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.254" endtime="20201117 14:42:12.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024275028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024297431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.546" endtime="20201117 14:42:12.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.555" endtime="20201117 14:42:12.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.251" endtime="20201117 14:42:12.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.249" endtime="20201117 14:42:12.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.561" level="INFO">${RESULT} = [{'time': 0.024297431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.24030000000007e-05, 'source_diff': 2.24030000000007e-05}, {'time': 0.024321417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:12.558" endtime="20201117 14:42:12.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.576" level="INFO">${ACCURACY} = {'source_diff': [2.24030000000007e-05, 2.1848000000001394e-05, 2.263899999999791e-05, 2.213900000000088e-05, 2.2041999999999895e-05, 2.2000000000001185e-05, 2.1834000000001824e-05, 2.261100000000224e-...</msg>
<status status="PASS" starttime="20201117 14:42:12.562" endtime="20201117 14:42:12.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.581" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.580" endtime="20201117 14:42:12.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.583" level="INFO">VALUE: [2.24030000000007e-05, 2.1848000000001394e-05, 2.263899999999791e-05, 2.213900000000088e-05, 2.2041999999999895e-05, 2.2000000000001185e-05, 2.1834000000001824e-05, 2.261100000000224e-05, 2.198700000000109e-05, 2.1943999999999436e-05, 2.2598000000002144e-05, 2.263899999999791e-05, 2.1861999999997495e-05, 2.2041999999999895e-05, 2.193100000000281e-05, 2.2819999999999785e-05, 2.2680000000000616e-05, 2.2012999999997812e-05, 2.2680000000000616e-05, 2.20969999999987e-05, 2.180499999999974e-05, 2.211099999999827e-05, 2.1957999999999006e-05, 2.205499999999999e-05, 2.19030000000002e-05, 2.2721999999999326e-05, 2.2651999999998007e-05, 2.262499999999834e-05, 2.1693999999999186e-05, 2.258299999999963e-05, 2.205499999999999e-05, 2.204100000000042e-05, 2.1764000000000505e-05, 2.188899999999716e-05, 2.19030000000002e-05, 2.2528000000000825e-05, 2.1943999999999436e-05, 2.261099999999877e-05, 2.190299999999673e-05, 2.1986000000001615e-05, 2.263899999999791e-05, 2.1778000000000075e-05, 2.258299999999963e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.2027999999996856e-05, 2.2694000000000186e-05, 2.184699999999845e-05, 2.256900000000006e-05, 2.1764000000000505e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.582" endtime="20201117 14:42:12.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.577" endtime="20201117 14:42:12.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.587" endtime="20201117 14:42:12.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.590" endtime="20201117 14:42:12.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.589" endtime="20201117 14:42:12.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.585" endtime="20201117 14:42:12.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.220" endtime="20201117 14:42:12.611"></status>
</kw>
<msg timestamp="20201117 14:42:12.611" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.619" endtime="20201117 14:42:12.634"></status>
</kw>
<msg timestamp="20201117 14:42:12.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.618" endtime="20201117 14:42:12.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.636" endtime="20201117 14:42:12.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.638" endtime="20201117 14:42:12.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.615" endtime="20201117 14:42:12.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.613" endtime="20201117 14:42:12.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.647" endtime="20201117 14:42:12.934"></status>
</kw>
<msg timestamp="20201117 14:42:12.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.646" endtime="20201117 14:42:12.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.938" endtime="20201117 14:42:12.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.946" endtime="20201117 14:42:12.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.643" endtime="20201117 14:42:12.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.641" endtime="20201117 14:42:12.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.953" level="INFO">${RESULT} = [{'time': 0.021697194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2762999999998562e-05, 'source_diff': 2.2762999999998562e-05}, {'time': 0.02172125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:12.950" endtime="20201117 14:42:12.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.966" level="INFO">${ACCURACY} = {'source_diff': [2.2762999999998562e-05, 2.1791999999999645e-05, 2.261099999999877e-05, 2.205499999999999e-05, 2.1971999999998576e-05, 2.2680000000000616e-05, 2.258299999999963e-05, 2.206899999999956e...</msg>
<status status="PASS" starttime="20201117 14:42:12.954" endtime="20201117 14:42:12.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.971" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.970" endtime="20201117 14:42:12.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.973" level="INFO">VALUE: [2.2762999999998562e-05, 2.1791999999999645e-05, 2.261099999999877e-05, 2.205499999999999e-05, 2.1971999999998576e-05, 2.2680000000000616e-05, 2.258299999999963e-05, 2.206899999999956e-05, 2.1985999999998146e-05, 2.184699999999845e-05, 2.187500000000106e-05, 2.208299999999913e-05, 2.256900000000006e-05, 2.204100000000042e-05, 2.265300000000095e-05, 2.1916000000000296e-05, 2.211099999999827e-05, 2.2694000000000186e-05, 2.1929999999999866e-05, 2.183299999999888e-05, 2.1778000000000075e-05, 2.2680000000000616e-05, 2.2666000000001046e-05, 2.180499999999974e-05, 2.266700000000052e-05, 2.211100000000174e-05, 2.2014000000000755e-05, 2.2000000000001185e-05, 2.1750000000000935e-05, 2.256900000000006e-05, 2.2721999999999326e-05, 2.236099999999852e-05, 2.211099999999827e-05, 2.211099999999827e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.263900000000138e-05, 2.198700000000109e-05, 2.2707999999999756e-05, 2.2735999999998896e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.20969999999987e-05, 2.195899999999848e-05, 2.2055999999999465e-05, 2.1791999999999645e-05, 2.2069999999999035e-05, 2.188900000000063e-05, 2.1778000000000075e-05, 2.2555999999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.972" endtime="20201117 14:42:12.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.967" endtime="20201117 14:42:12.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.977" endtime="20201117 14:42:12.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.980" endtime="20201117 14:42:12.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.979" endtime="20201117 14:42:13.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.975" endtime="20201117 14:42:13.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.612" endtime="20201117 14:42:13.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.218" endtime="20201117 14:42:13.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.217" endtime="20201117 14:42:13.001"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.004" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.012" endtime="20201117 14:42:13.027"></status>
</kw>
<msg timestamp="20201117 14:42:13.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.010" endtime="20201117 14:42:13.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.028" endtime="20201117 14:42:13.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.031" endtime="20201117 14:42:13.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.008" endtime="20201117 14:42:13.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.005" endtime="20201117 14:42:13.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.040" endtime="20201117 14:42:13.328"></status>
</kw>
<msg timestamp="20201117 14:42:13.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024588542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.038" endtime="20201117 14:42:13.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024588542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.332" endtime="20201117 14:42:13.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.340" endtime="20201117 14:42:13.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.036" endtime="20201117 14:42:13.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.034" endtime="20201117 14:42:13.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.347" level="INFO">${RESULT} = [{'time': 0.024612319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3776999999999132e-05, 'source_diff': 2.3776999999999132e-05}, {'time': 0.024638319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:13.343" endtime="20201117 14:42:13.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.360" level="INFO">${ACCURACY} = {'source_diff': [2.3776999999999132e-05, 2.3540999999998452e-05, 2.308300000000013e-05, 2.279100000000117e-05, 2.3694000000001186e-05, 2.356900000000106e-05, 2.2916000000001296e-05, 2.284699999999945e...</msg>
<status status="PASS" starttime="20201117 14:42:13.348" endtime="20201117 14:42:13.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.365" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.364" endtime="20201117 14:42:13.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.368" level="INFO">VALUE: [2.3776999999999132e-05, 2.3540999999998452e-05, 2.308300000000013e-05, 2.279100000000117e-05, 2.3694000000001186e-05, 2.356900000000106e-05, 2.2916000000001296e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.3679999999998147e-05, 2.356900000000106e-05, 2.2915999999997827e-05, 2.3722000000000326e-05, 2.30969999999997e-05, 2.3820000000000785e-05, 2.280500000000074e-05, 2.3582999999997162e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.2764000000001505e-05, 2.363899999999891e-05, 2.362499999999934e-05, 2.3554999999998022e-05, 2.311099999999927e-05, 2.35970000000002e-05, 2.337500000000256e-05, 2.283299999999988e-05, 2.337499999999909e-05, 2.362499999999934e-05, 2.2833999999999355e-05, 2.30969999999997e-05, 2.294499999999991e-05, 2.297299999999905e-05, 2.2971999999999576e-05, 2.3735999999999896e-05, 2.2763999999998036e-05, 2.3028000000001325e-05, 2.2985999999999146e-05, 2.369500000000066e-05, 2.3735999999999896e-05, 2.35970000000002e-05, 2.3027999999997856e-05, 2.3041999999997426e-05, 2.283299999999988e-05, 2.3083999999999605e-05, 2.3098000000002644e-05, 2.361099999999977e-05, 2.30969999999997e-05, 2.294499999999991e-05, 2.3000000000002185e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.366" endtime="20201117 14:42:13.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.361" endtime="20201117 14:42:13.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.371" endtime="20201117 14:42:13.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.374" endtime="20201117 14:42:13.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.373" endtime="20201117 14:42:13.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.369" endtime="20201117 14:42:13.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.004" endtime="20201117 14:42:13.395"></status>
</kw>
<msg timestamp="20201117 14:42:13.395" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.403" endtime="20201117 14:42:13.418"></status>
</kw>
<msg timestamp="20201117 14:42:13.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.402" endtime="20201117 14:42:13.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.420" endtime="20201117 14:42:13.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.422" endtime="20201117 14:42:13.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.399" endtime="20201117 14:42:13.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.397" endtime="20201117 14:42:13.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.431" endtime="20201117 14:42:13.719"></status>
</kw>
<msg timestamp="20201117 14:42:13.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021488889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.430" endtime="20201117 14:42:13.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021488889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.723" endtime="20201117 14:42:13.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.732" endtime="20201117 14:42:13.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.427" endtime="20201117 14:42:13.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.425" endtime="20201117 14:42:13.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.738" level="INFO">${RESULT} = [{'time': 0.021512639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999999466e-05, 'source_diff': 2.3749999999999466e-05}, {'time': 0.021537639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:13.735" endtime="20201117 14:42:13.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.752" level="INFO">${ACCURACY} = {'source_diff': [2.3749999999999466e-05, 2.3000000000002185e-05, 2.293100000000034e-05, 2.3542000000001395e-05, 2.312499999999884e-05, 2.291700000000077e-05, 2.3014000000001755e-05, 2.311099999999927e...</msg>
<status status="PASS" starttime="20201117 14:42:13.739" endtime="20201117 14:42:13.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.757" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.756" endtime="20201117 14:42:13.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.759" level="INFO">VALUE: [2.3749999999999466e-05, 2.3000000000002185e-05, 2.293100000000034e-05, 2.3542000000001395e-05, 2.312499999999884e-05, 2.291700000000077e-05, 2.3014000000001755e-05, 2.311099999999927e-05, 2.365299999999848e-05, 2.287500000000206e-05, 2.298700000000209e-05, 2.287499999999859e-05, 2.370900000000023e-05, 2.366700000000152e-05, 2.288899999999816e-05, 2.2833999999999355e-05, 2.3083999999999605e-05, 2.3584000000000105e-05, 2.3070000000000035e-05, 2.35970000000002e-05, 2.373699999999937e-05, 2.2749999999998466e-05, 2.291700000000077e-05, 2.3651999999999007e-05, 2.3694000000001186e-05, 2.35970000000002e-05, 2.2901999999998257e-05, 2.3014000000001755e-05, 2.308300000000013e-05, 2.3068999999997092e-05, 2.3694000000001186e-05, 2.286100000000249e-05, 2.279100000000117e-05, 2.3068999999997092e-05, 2.286099999999902e-05, 2.3652000000002477e-05, 2.3735999999999896e-05, 2.365300000000195e-05, 2.361099999999977e-05, 2.280500000000074e-05, 2.306900000000056e-05, 2.2930000000000866e-05, 2.2778000000001075e-05, 2.3665999999998577e-05, 2.2735999999998896e-05, 2.3028000000001325e-05, 2.29030000000012e-05, 2.306900000000056e-05, 2.2985999999999146e-05, 2.3680000000001616e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.758" endtime="20201117 14:42:13.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.753" endtime="20201117 14:42:13.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.762" endtime="20201117 14:42:13.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.766" endtime="20201117 14:42:13.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.764" endtime="20201117 14:42:13.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.761" endtime="20201117 14:42:13.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.396" endtime="20201117 14:42:13.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.002" endtime="20201117 14:42:13.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.002" endtime="20201117 14:42:13.787"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.789" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.797" endtime="20201117 14:42:13.812"></status>
</kw>
<msg timestamp="20201117 14:42:13.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.796" endtime="20201117 14:42:13.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.814" endtime="20201117 14:42:13.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.816" endtime="20201117 14:42:13.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.793" endtime="20201117 14:42:13.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.791" endtime="20201117 14:42:13.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.825" endtime="20201117 14:42:14.113"></status>
</kw>
<msg timestamp="20201117 14:42:14.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024002792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024026722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.824" endtime="20201117 14:42:14.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024002792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024026722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.117" endtime="20201117 14:42:14.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.125" endtime="20201117 14:42:14.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.821" endtime="20201117 14:42:14.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.819" endtime="20201117 14:42:14.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.133" level="INFO">${RESULT} = [{'time': 0.024026722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3930000000001866e-05, 'source_diff': 2.3930000000001866e-05}, {'time': 0.024053736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:14.129" endtime="20201117 14:42:14.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.148" level="INFO">${ACCURACY} = {'source_diff': [2.3930000000001866e-05, 2.4707999999998287e-05, 2.3930000000001866e-05, 2.4041999999998426e-05, 2.462499999999687e-05, 2.3986000000000146e-05, 2.413899999999941e-05, 2.411100000000027...</msg>
<status status="PASS" starttime="20201117 14:42:14.134" endtime="20201117 14:42:14.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.152" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.152" endtime="20201117 14:42:14.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.155" level="INFO">VALUE: [2.3930000000001866e-05, 2.4707999999998287e-05, 2.3930000000001866e-05, 2.4041999999998426e-05, 2.462499999999687e-05, 2.3986000000000146e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.3791999999998176e-05, 2.4054999999998522e-05, 2.4707999999998287e-05, 2.391700000000177e-05, 2.468099999999862e-05, 2.390299999999873e-05, 2.412499999999984e-05, 2.468100000000209e-05, 2.411100000000027e-05, 2.4735999999997427e-05, 2.3806000000001215e-05, 2.390299999999873e-05, 2.39030000000022e-05, 2.383300000000088e-05, 2.386100000000002e-05, 2.3791999999998176e-05, 2.3778000000002075e-05, 2.4638000000000437e-05, 2.4665999999999577e-05, 2.4596999999997732e-05, 2.3820000000000785e-05, 2.388899999999916e-05, 2.3999999999999716e-05, 2.3820000000000785e-05, 2.4513999999999786e-05, 2.412499999999984e-05, 2.4777000000000132e-05, 2.3749999999999466e-05, 2.4056000000001465e-05, 2.39169999999983e-05, 2.388900000000263e-05, 2.3791999999998176e-05, 2.3834000000000355e-05, 2.388899999999916e-05, 2.4569999999998066e-05, 2.462500000000034e-05, 2.3763999999999036e-05, 2.468099999999862e-05, 2.4750000000000466e-05, 2.4013999999999286e-05, 2.391700000000177e-05, 2.466699999999905e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.154" endtime="20201117 14:42:14.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.149" endtime="20201117 14:42:14.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.158" endtime="20201117 14:42:14.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.162" endtime="20201117 14:42:14.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.160" endtime="20201117 14:42:14.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.156" endtime="20201117 14:42:14.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.790" endtime="20201117 14:42:14.183"></status>
</kw>
<msg timestamp="20201117 14:42:14.183" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.191" endtime="20201117 14:42:14.206"></status>
</kw>
<msg timestamp="20201117 14:42:14.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.189" endtime="20201117 14:42:14.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.207" endtime="20201117 14:42:14.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.210" endtime="20201117 14:42:14.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.187" endtime="20201117 14:42:14.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.185" endtime="20201117 14:42:14.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.219" endtime="20201117 14:42:14.505"></status>
</kw>
<msg timestamp="20201117 14:42:14.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.217" endtime="20201117 14:42:14.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021718764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.509" endtime="20201117 14:42:14.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.518" endtime="20201117 14:42:14.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.215" endtime="20201117 14:42:14.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.213" endtime="20201117 14:42:14.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.524" level="INFO">${RESULT} = [{'time': 0.021743417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.021769417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:14.521" endtime="20201117 14:42:14.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.538" level="INFO">${ACCURACY} = {'source_diff': [2.465299999999948e-05, 2.395900000000048e-05, 2.391700000000177e-05, 2.4790999999999702e-05, 2.395900000000048e-05, 2.388899999999916e-05, 2.4486000000000646e-05, 2.3847999999999925e-...</msg>
<status status="PASS" starttime="20201117 14:42:14.525" endtime="20201117 14:42:14.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.542" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.541" endtime="20201117 14:42:14.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.545" level="INFO">VALUE: [2.465299999999948e-05, 2.395900000000048e-05, 2.391700000000177e-05, 2.4790999999999702e-05, 2.395900000000048e-05, 2.388899999999916e-05, 2.4486000000000646e-05, 2.3847999999999925e-05, 2.468099999999862e-05, 2.469499999999819e-05, 2.387500000000306e-05, 2.413899999999941e-05, 2.466699999999905e-05, 2.394500000000091e-05, 2.4111999999999745e-05, 2.384700000000045e-05, 2.3916000000002297e-05, 2.393100000000134e-05, 2.463899999999991e-05, 2.4013999999999286e-05, 2.3818999999997842e-05, 2.4680000000002617e-05, 2.387499999999959e-05, 2.383300000000088e-05, 2.4665999999999577e-05, 2.383300000000088e-05, 2.3944000000001436e-05, 2.411100000000027e-05, 2.3944000000001436e-05, 2.462500000000034e-05, 2.4568999999998592e-05, 2.40970000000007e-05, 2.3901999999999257e-05, 2.4040999999998952e-05, 2.4736000000000896e-05, 2.379100000000217e-05, 2.39169999999983e-05, 2.3792000000001645e-05, 2.3915999999998827e-05, 2.388900000000263e-05, 2.4054999999998522e-05, 2.380500000000174e-05, 2.3999999999999716e-05, 2.4582999999998162e-05, 2.4070000000001035e-05, 2.391700000000177e-05, 2.4556000000001965e-05, 2.4750000000000466e-05, 2.4068999999998092e-05, 2.3972000000000576e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.543" endtime="20201117 14:42:14.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.539" endtime="20201117 14:42:14.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.548" endtime="20201117 14:42:14.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.551" endtime="20201117 14:42:14.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.550" endtime="20201117 14:42:14.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.546" endtime="20201117 14:42:14.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.183" endtime="20201117 14:42:14.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.788" endtime="20201117 14:42:14.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.787" endtime="20201117 14:42:14.572"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.575" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.583" endtime="20201117 14:42:14.597"></status>
</kw>
<msg timestamp="20201117 14:42:14.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.582" endtime="20201117 14:42:14.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.599" endtime="20201117 14:42:14.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.602" endtime="20201117 14:42:14.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.579" endtime="20201117 14:42:14.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.577" endtime="20201117 14:42:14.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.612" endtime="20201117 14:42:14.899"></status>
</kw>
<msg timestamp="20201117 14:42:14.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.611" endtime="20201117 14:42:14.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024461806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.903" endtime="20201117 14:42:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.911" endtime="20201117 14:42:14.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.608" endtime="20201117 14:42:14.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.606" endtime="20201117 14:42:14.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.918" level="INFO">${RESULT} = [{'time': 0.024461806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.547299999999808e-05, 'source_diff': 2.547299999999808e-05}, {'time': 0.024488792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:14.914" endtime="20201117 14:42:14.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.931" level="INFO">${ACCURACY} = {'source_diff': [2.547299999999808e-05, 2.512499999999737e-05, 2.5055999999998996e-05, 2.4929999999999397e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.5110999999997802e-05, 2.483300000000188...</msg>
<status status="PASS" starttime="20201117 14:42:14.919" endtime="20201117 14:42:14.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.936" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.935" endtime="20201117 14:42:14.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.938" level="INFO">VALUE: [2.547299999999808e-05, 2.512499999999737e-05, 2.5055999999998996e-05, 2.4929999999999397e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.5110999999997802e-05, 2.483300000000188e-05, 2.488900000000016e-05, 2.4986000000001146e-05, 2.4958000000002006e-05, 2.511100000000127e-05, 2.5000000000000716e-05, 2.569499999999919e-05, 2.4777999999999606e-05, 2.5110999999997802e-05, 2.57230000000018e-05, 2.5055999999998996e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.5569999999999066e-05, 2.5014000000000286e-05, 2.49169999999993e-05, 2.5000000000000716e-05, 2.5569999999999066e-05, 2.5610999999998302e-05, 2.540300000000023e-05, 2.562500000000134e-05, 2.487500000000059e-05, 2.5027999999999856e-05, 2.5097999999997705e-05, 2.486100000000102e-05, 2.566700000000005e-05, 2.5610999999998302e-05, 2.570899999999876e-05, 2.4806000000002215e-05, 2.4972000000001576e-05, 2.4763000000000562e-05, 2.5110999999997802e-05, 2.479100000000317e-05, 2.5541999999999926e-05, 2.5569999999999066e-05, 2.569499999999919e-05, 2.487500000000059e-05, 2.484700000000145e-05, 2.5652000000001007e-05, 2.561100000000177e-05, 2.49030000000032e-05, 2.4790999999999702e-05, 2.5096999999998232e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.937" endtime="20201117 14:42:14.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.932" endtime="20201117 14:42:14.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.941" endtime="20201117 14:42:14.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.945" endtime="20201117 14:42:14.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.943" endtime="20201117 14:42:14.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.940" endtime="20201117 14:42:14.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.575" endtime="20201117 14:42:14.965"></status>
</kw>
<msg timestamp="20201117 14:42:14.966" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.974" endtime="20201117 14:42:14.989"></status>
</kw>
<msg timestamp="20201117 14:42:14.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.972" endtime="20201117 14:42:14.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.991" endtime="20201117 14:42:14.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.993" endtime="20201117 14:42:14.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.970" endtime="20201117 14:42:14.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.968" endtime="20201117 14:42:14.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.002" endtime="20201117 14:42:15.288"></status>
</kw>
<msg timestamp="20201117 14:42:15.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.001" endtime="20201117 14:42:15.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.292" endtime="20201117 14:42:15.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.301" endtime="20201117 14:42:15.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.998" endtime="20201117 14:42:15.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.997" endtime="20201117 14:42:15.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.307" level="INFO">${RESULT} = [{'time': 0.021801806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5084000000001605e-05, 'source_diff': 2.5084000000001605e-05}, {'time': 0.021828792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:15.304" endtime="20201117 14:42:15.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.321" level="INFO">${ACCURACY} = {'source_diff': [2.5084000000001605e-05, 2.4834000000001355e-05, 2.4833999999997886e-05, 2.5027999999999856e-05, 2.569500000000266e-05, 2.5750000000001466e-05, 2.488900000000016e-05, 2.502799999999985...</msg>
<status status="PASS" starttime="20201117 14:42:15.308" endtime="20201117 14:42:15.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.325" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.324" endtime="20201117 14:42:15.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.328" level="INFO">VALUE: [2.5084000000001605e-05, 2.4834000000001355e-05, 2.4833999999997886e-05, 2.5027999999999856e-05, 2.569500000000266e-05, 2.5750000000001466e-05, 2.488900000000016e-05, 2.5027999999999856e-05, 2.5666000000000577e-05, 2.4722000000001326e-05, 2.5652000000001007e-05, 2.4929999999999397e-05, 2.5568999999999592e-05, 2.5624999999997872e-05, 2.5568999999999592e-05, 2.5500000000001216e-05, 2.5000000000000716e-05, 2.5721999999998857e-05, 2.4929999999999397e-05, 2.50970000000017e-05, 2.563900000000091e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.513899999999694e-05, 2.4972000000001576e-05, 2.565299999999701e-05, 2.490299999999973e-05, 2.4804999999999272e-05, 2.4777999999999606e-05, 2.513899999999694e-05, 2.536100000000152e-05, 2.5068999999999092e-05, 2.5068999999999092e-05, 2.565300000000048e-05, 2.4860999999997552e-05, 2.565300000000048e-05, 2.5680000000000147e-05, 2.5735999999998427e-05, 2.5624999999997872e-05, 2.4791999999999176e-05, 2.5041999999999426e-05, 2.4806000000002215e-05, 2.4972000000001576e-05, 2.4999999999997247e-05, 2.483300000000188e-05, 2.487500000000059e-05, 2.495899999999801e-05, 2.566700000000005e-05, 2.512500000000084e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.326" endtime="20201117 14:42:15.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.322" endtime="20201117 14:42:15.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.331" endtime="20201117 14:42:15.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.334" endtime="20201117 14:42:15.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.333" endtime="20201117 14:42:15.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.329" endtime="20201117 14:42:15.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.966" endtime="20201117 14:42:15.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.573" endtime="20201117 14:42:15.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.573" endtime="20201117 14:42:15.355"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.357" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.366" endtime="20201117 14:42:15.381"></status>
</kw>
<msg timestamp="20201117 14:42:15.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.365" endtime="20201117 14:42:15.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.383" endtime="20201117 14:42:15.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.385" endtime="20201117 14:42:15.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.362" endtime="20201117 14:42:15.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.360" endtime="20201117 14:42:15.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.394" endtime="20201117 14:42:15.680"></status>
</kw>
<msg timestamp="20201117 14:42:15.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024464097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.393" endtime="20201117 14:42:15.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024464097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.684" endtime="20201117 14:42:15.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.692" endtime="20201117 14:42:15.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.390" endtime="20201117 14:42:15.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.388" endtime="20201117 14:42:15.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.699" level="INFO">${RESULT} = [{'time': 0.024490667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6570000000000066e-05, 'source_diff': 2.6570000000000066e-05}, {'time': 0.024519653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:15.695" endtime="20201117 14:42:15.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.714" level="INFO">${ACCURACY} = {'source_diff': [2.6570000000000066e-05, 2.6556000000000496e-05, 2.6597999999999206e-05, 2.593099999999987e-05, 2.668100000000062e-05, 2.590300000000073e-05, 2.6014000000001286e-05, 2.5999999999998247...</msg>
<status status="PASS" starttime="20201117 14:42:15.700" endtime="20201117 14:42:15.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.718" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.717" endtime="20201117 14:42:15.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.721" level="INFO">VALUE: [2.6570000000000066e-05, 2.6556000000000496e-05, 2.6597999999999206e-05, 2.593099999999987e-05, 2.668100000000062e-05, 2.590300000000073e-05, 2.6014000000001286e-05, 2.5999999999998247e-05, 2.5874999999998122e-05, 2.6596999999999732e-05, 2.5792000000000176e-05, 2.572299999999833e-05, 2.5778000000000606e-05, 2.6069999999999566e-05, 2.6638999999998442e-05, 2.5847999999998456e-05, 2.5943999999999967e-05, 2.5832999999999412e-05, 2.6055000000000522e-05, 2.6666000000001577e-05, 2.6708000000000287e-05, 2.5818999999999842e-05, 2.5930000000000397e-05, 2.6027999999997387e-05, 2.6013999999997817e-05, 2.588900000000116e-05, 2.6721999999999857e-05, 2.6014000000001286e-05, 2.5957999999999537e-05, 2.5818999999999842e-05, 2.669500000000019e-05, 2.5790999999997233e-05, 2.6583000000000162e-05, 2.6569000000000592e-05, 2.6055999999999996e-05, 2.5943999999999967e-05, 2.6596999999999732e-05, 2.6569000000000592e-05, 2.615300000000098e-05, 2.611100000000227e-05, 2.5833999999998886e-05, 2.6596999999999732e-05, 2.6069999999999566e-05, 2.590299999999726e-05, 2.6096999999999232e-05, 2.5763999999997567e-05, 2.6596999999999732e-05, 2.5750000000001466e-05, 2.668099999999715e-05, 2.665299999999801e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.719" endtime="20201117 14:42:15.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.715" endtime="20201117 14:42:15.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.724" endtime="20201117 14:42:15.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.727" endtime="20201117 14:42:15.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.726" endtime="20201117 14:42:15.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.722" endtime="20201117 14:42:15.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.358" endtime="20201117 14:42:15.748"></status>
</kw>
<msg timestamp="20201117 14:42:15.749" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.757" endtime="20201117 14:42:15.772"></status>
</kw>
<msg timestamp="20201117 14:42:15.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.755" endtime="20201117 14:42:15.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.774" endtime="20201117 14:42:15.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.776" endtime="20201117 14:42:15.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.753" endtime="20201117 14:42:15.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.751" endtime="20201117 14:42:15.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.785" endtime="20201117 14:42:16.071"></status>
</kw>
<msg timestamp="20201117 14:42:16.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.783" endtime="20201117 14:42:16.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.075" endtime="20201117 14:42:16.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.083" endtime="20201117 14:42:16.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.781" endtime="20201117 14:42:16.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.779" endtime="20201117 14:42:16.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.090" level="INFO">${RESULT} = [{'time': 0.021930222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5860999999998552e-05, 'source_diff': 2.5860999999998552e-05}, {'time': 0.021959208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:16.087" endtime="20201117 14:42:16.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.103" level="INFO">${ACCURACY} = {'source_diff': [2.5860999999998552e-05, 2.6541000000001452e-05, 2.6679999999997678e-05, 2.6026999999997913e-05, 2.6749999999998997e-05, 2.6735999999999427e-05, 2.6679999999997678e-05, 2.6583000000000...</msg>
<status status="PASS" starttime="20201117 14:42:16.091" endtime="20201117 14:42:16.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.108" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.107" endtime="20201117 14:42:16.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.110" level="INFO">VALUE: [2.5860999999998552e-05, 2.6541000000001452e-05, 2.6679999999997678e-05, 2.6026999999997913e-05, 2.6749999999998997e-05, 2.6735999999999427e-05, 2.6679999999997678e-05, 2.6583000000000162e-05, 2.5818999999999842e-05, 2.6042000000000426e-05, 2.6596999999999732e-05, 2.5999999999998247e-05, 2.6027999999997387e-05, 2.593100000000334e-05, 2.613900000000141e-05, 2.590300000000073e-05, 2.5846999999998982e-05, 2.6555000000001022e-05, 2.5930000000000397e-05, 2.5957999999999537e-05, 2.665299999999801e-05, 2.6583000000000162e-05, 2.5957999999999537e-05, 2.669500000000019e-05, 2.588900000000116e-05, 2.584700000000245e-05, 2.587500000000159e-05, 2.5986000000002146e-05, 2.6556000000000496e-05, 2.6763999999998567e-05, 2.6570000000000066e-05, 2.5985999999998677e-05, 2.590300000000073e-05, 2.638899999999819e-05, 2.5805999999999746e-05, 2.5943999999999967e-05, 2.6570000000000066e-05, 2.6570000000000066e-05, 2.570899999999876e-05, 2.590299999999726e-05, 2.5819999999999316e-05, 2.6583999999999636e-05, 2.590300000000073e-05, 2.593099999999987e-05, 2.5764000000001036e-05, 2.5971999999999107e-05, 2.673700000000237e-05, 2.6124999999998372e-05, 2.6361999999998526e-05, 2.6013999999997817e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.109" endtime="20201117 14:42:16.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.104" endtime="20201117 14:42:16.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.114" endtime="20201117 14:42:16.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.117" endtime="20201117 14:42:16.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.116" endtime="20201117 14:42:16.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.112" endtime="20201117 14:42:16.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.749" endtime="20201117 14:42:16.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.356" endtime="20201117 14:42:16.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.355" endtime="20201117 14:42:16.138"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.141" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.149" endtime="20201117 14:42:16.164"></status>
</kw>
<msg timestamp="20201117 14:42:16.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.147" endtime="20201117 14:42:16.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.166" endtime="20201117 14:42:16.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.168" endtime="20201117 14:42:16.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.145" endtime="20201117 14:42:16.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.143" endtime="20201117 14:42:16.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.177" endtime="20201117 14:42:16.473"></status>
</kw>
<msg timestamp="20201117 14:42:16.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024035528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.176" endtime="20201117 14:42:16.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024035528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.477" endtime="20201117 14:42:16.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.485" endtime="20201117 14:42:16.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.173" endtime="20201117 14:42:16.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.171" endtime="20201117 14:42:16.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.492" level="INFO">${RESULT} = [{'time': 0.024062958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7429999999998428e-05, 'source_diff': 2.7429999999998428e-05}, {'time': 0.024091931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:16.489" endtime="20201117 14:42:16.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.505" level="INFO">${ACCURACY} = {'source_diff': [2.7429999999998428e-05, 2.695900000000001e-05, 2.7611000000000302e-05, 2.6874999999999122e-05, 2.7040999999998483e-05, 2.7694000000001717e-05, 2.6860999999999552e-05, 2.76940000000017...</msg>
<status status="PASS" starttime="20201117 14:42:16.493" endtime="20201117 14:42:16.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.510" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.509" endtime="20201117 14:42:16.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.513" level="INFO">VALUE: [2.7429999999998428e-05, 2.695900000000001e-05, 2.7611000000000302e-05, 2.6874999999999122e-05, 2.7040999999998483e-05, 2.7694000000001717e-05, 2.6860999999999552e-05, 2.7694000000001717e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.7736000000000427e-05, 2.6777999999998137e-05, 2.6958000000000537e-05, 2.7665999999999108e-05, 2.7041000000001952e-05, 2.690300000000173e-05, 2.772300000000033e-05, 2.737500000000309e-05, 2.6860999999999552e-05, 2.6999999999999247e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.7097000000000232e-05, 2.7124999999999372e-05, 2.7680000000002147e-05, 2.7110999999999802e-05, 2.7736000000000427e-05, 2.7749999999999997e-05, 2.6750000000002466e-05, 2.6833000000000412e-05, 2.7736000000000427e-05, 2.7082999999997193e-05, 2.6888999999998692e-05, 2.7749999999999997e-05, 2.7069000000001092e-05, 2.7736000000000427e-05, 2.7070000000000566e-05, 2.6888999999998692e-05, 2.688900000000216e-05, 2.6833999999999886e-05, 2.694500000000044e-05, 2.715300000000198e-05, 2.6791999999997707e-05, 2.687500000000259e-05, 2.6791999999997707e-05, 2.6778000000001606e-05, 2.6888999999998692e-05, 2.7611000000000302e-05, 2.7569999999997596e-05, 2.6749999999998997e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.511" endtime="20201117 14:42:16.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.506" endtime="20201117 14:42:16.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.516" endtime="20201117 14:42:16.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.519" endtime="20201117 14:42:16.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.518" endtime="20201117 14:42:16.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.514" endtime="20201117 14:42:16.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.141" endtime="20201117 14:42:16.540"></status>
</kw>
<msg timestamp="20201117 14:42:16.541" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.549" endtime="20201117 14:42:16.564"></status>
</kw>
<msg timestamp="20201117 14:42:16.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.548" endtime="20201117 14:42:16.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.566" endtime="20201117 14:42:16.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.569" endtime="20201117 14:42:16.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.545" endtime="20201117 14:42:16.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.543" endtime="20201117 14:42:16.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.578" endtime="20201117 14:42:16.865"></status>
</kw>
<msg timestamp="20201117 14:42:16.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.577" endtime="20201117 14:42:16.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.869" endtime="20201117 14:42:16.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.877" endtime="20201117 14:42:16.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.574" endtime="20201117 14:42:16.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.572" endtime="20201117 14:42:16.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.884" level="INFO">${RESULT} = [{'time': 0.022396583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7666000000002577e-05, 'source_diff': 2.7666000000002577e-05}, {'time': 0.022426583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:16.881" endtime="20201117 14:42:16.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.898" level="INFO">${ACCURACY} = {'source_diff': [2.7666000000002577e-05, 2.7651999999999538e-05, 2.6958000000000537e-05, 2.6915999999998358e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.6846999999999982e-05, 2.7110999999999...</msg>
<status status="PASS" starttime="20201117 14:42:16.885" endtime="20201117 14:42:16.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.903" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.902" endtime="20201117 14:42:16.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.905" level="INFO">VALUE: [2.7666000000002577e-05, 2.7651999999999538e-05, 2.6958000000000537e-05, 2.6915999999998358e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.6846999999999982e-05, 2.7110999999999802e-05, 2.7763999999999567e-05, 2.7528000000002356e-05, 2.688900000000216e-05, 2.6819000000000842e-05, 2.6790999999998233e-05, 2.6888999999998692e-05, 2.766700000000205e-05, 2.6888999999998692e-05, 2.7582999999997693e-05, 2.69170000000013e-05, 2.6860999999999552e-05, 2.766699999999858e-05, 2.7070000000000566e-05, 2.770900000000076e-05, 2.765300000000248e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.7082999999997193e-05, 2.7013999999998817e-05, 2.7597000000000732e-05, 2.695900000000001e-05, 2.693100000000087e-05, 2.7624999999999872e-05, 2.7542000000001926e-05, 2.77369999999999e-05, 2.7056000000000996e-05, 2.694499999999697e-05, 2.697299999999958e-05, 2.7361000000000052e-05, 2.772300000000033e-05, 2.6792000000001176e-05, 2.6860999999999552e-05, 2.7584000000000636e-05, 2.6833999999999886e-05, 2.6860999999999552e-05, 2.7638999999999442e-05, 2.6749999999998997e-05, 2.6848000000002925e-05, 2.7679999999998678e-05, 2.6862000000002495e-05, 2.7137999999999468e-05, 2.7694000000001717e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.904" endtime="20201117 14:42:16.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.899" endtime="20201117 14:42:16.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.908" endtime="20201117 14:42:16.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.911" endtime="20201117 14:42:16.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.910" endtime="20201117 14:42:16.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.906" endtime="20201117 14:42:16.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.541" endtime="20201117 14:42:16.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.140" endtime="20201117 14:42:16.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.139" endtime="20201117 14:42:16.933"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.935" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.943" endtime="20201117 14:42:16.958"></status>
</kw>
<msg timestamp="20201117 14:42:16.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.942" endtime="20201117 14:42:16.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.960" endtime="20201117 14:42:16.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.962" endtime="20201117 14:42:16.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.939" endtime="20201117 14:42:16.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.937" endtime="20201117 14:42:16.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.971" endtime="20201117 14:42:17.260"></status>
</kw>
<msg timestamp="20201117 14:42:17.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024019819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.970" endtime="20201117 14:42:17.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024019819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.264" endtime="20201117 14:42:17.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.272" endtime="20201117 14:42:17.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.967" endtime="20201117 14:42:17.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.965" endtime="20201117 14:42:17.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.279" level="INFO">${RESULT} = [{'time': 0.024019819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8513000000000843e-05, 'source_diff': 2.8513000000000843e-05}, {'time': 0.024049819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:17.276" endtime="20201117 14:42:17.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.294" level="INFO">${ACCURACY} = {'source_diff': [2.8513000000000843e-05, 2.7776999999999663e-05, 2.8721999999998388e-05, 2.791699999999883e-05, 2.7972000000001107e-05, 2.7888999999999692e-05, 2.7847000000000982e-05, 2.86250000000008...</msg>
<status status="PASS" starttime="20201117 14:42:17.280" endtime="20201117 14:42:17.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.299" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.297" endtime="20201117 14:42:17.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.301" level="INFO">VALUE: [2.8513000000000843e-05, 2.7776999999999663e-05, 2.8721999999998388e-05, 2.791699999999883e-05, 2.7972000000001107e-05, 2.7888999999999692e-05, 2.7847000000000982e-05, 2.8625000000000872e-05, 2.8554999999999553e-05, 2.8096999999997763e-05, 2.8527999999999887e-05, 2.7791000000002702e-05, 2.8069999999998096e-05, 2.7804999999998803e-05, 2.8083000000001662e-05, 2.8639000000000442e-05, 2.7902999999999262e-05, 2.8000000000000247e-05, 2.7777999999999137e-05, 2.8013999999999817e-05, 2.7833000000001412e-05, 2.7861000000000552e-05, 2.8639000000000442e-05, 2.8693999999999248e-05, 2.8735999999997958e-05, 2.8749999999997528e-05, 2.8693999999999248e-05, 2.8013999999999817e-05, 2.7791999999998707e-05, 2.7820000000001316e-05, 2.8055000000002522e-05, 2.8583999999998166e-05, 2.868099999999915e-05, 2.8111000000000802e-05, 2.866700000000305e-05, 2.8639000000000442e-05, 2.797300000000058e-05, 2.868099999999915e-05, 2.8639000000000442e-05, 2.8042000000002426e-05, 2.7805999999998277e-05, 2.7763999999999567e-05, 2.8612000000000776e-05, 2.7820000000001316e-05, 2.872300000000133e-05, 2.795900000000101e-05, 2.7986000000000677e-05, 2.8541999999999457e-05, 2.7862000000000026e-05, 2.87370000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.300" endtime="20201117 14:42:17.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.295" endtime="20201117 14:42:17.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.304" endtime="20201117 14:42:17.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.307" endtime="20201117 14:42:17.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.306" endtime="20201117 14:42:17.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.302" endtime="20201117 14:42:17.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.935" endtime="20201117 14:42:17.328"></status>
</kw>
<msg timestamp="20201117 14:42:17.328" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.336" endtime="20201117 14:42:17.352"></status>
</kw>
<msg timestamp="20201117 14:42:17.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.335" endtime="20201117 14:42:17.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.354" endtime="20201117 14:42:17.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.356" endtime="20201117 14:42:17.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.332" endtime="20201117 14:42:17.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.330" endtime="20201117 14:42:17.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.365" endtime="20201117 14:42:17.650"></status>
</kw>
<msg timestamp="20201117 14:42:17.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:17.364" endtime="20201117 14:42:17.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:17.654" endtime="20201117 14:42:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.663" endtime="20201117 14:42:17.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.361" endtime="20201117 14:42:17.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.359" endtime="20201117 14:42:17.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.670" level="INFO">${RESULT} = [{'time': 0.021767, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8528000000003356e-05, 'source_diff': 2.8528000000003356e-05}, {'time': 0.021797028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:17.666" endtime="20201117 14:42:17.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.683" level="INFO">${ACCURACY} = {'source_diff': [2.8528000000003356e-05, 2.7972000000001107e-05, 2.7805999999998277e-05, 2.8375000000000622e-05, 2.8625000000000872e-05, 2.8625000000000872e-05, 2.8082999999998193e-05, 2.8735999999997...</msg>
<status status="PASS" starttime="20201117 14:42:17.671" endtime="20201117 14:42:17.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.688" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.687" endtime="20201117 14:42:17.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.690" level="INFO">VALUE: [2.8528000000003356e-05, 2.7972000000001107e-05, 2.7805999999998277e-05, 2.8375000000000622e-05, 2.8625000000000872e-05, 2.8625000000000872e-05, 2.8082999999998193e-05, 2.8735999999997958e-05, 2.790300000000273e-05, 2.8541999999999457e-05, 2.7888999999999692e-05, 2.8125000000000372e-05, 2.8611000000001302e-05, 2.7972000000001107e-05, 2.8055999999998527e-05, 2.8000000000000247e-05, 2.7791999999998707e-05, 2.8124999999996902e-05, 2.7833000000001412e-05, 2.8027999999999387e-05, 2.7986000000000677e-05, 2.8750000000000997e-05, 2.8570000000002066e-05, 2.8389000000000192e-05, 2.7972000000001107e-05, 2.8598000000001206e-05, 2.8112000000000276e-05, 2.8639000000000442e-05, 2.8693999999999248e-05, 2.7833999999997416e-05, 2.7763999999999567e-05, 2.7943999999998498e-05, 2.7915999999999358e-05, 2.8000000000000247e-05, 2.8097000000001232e-05, 2.8625000000000872e-05, 2.8735999999997958e-05, 2.8026999999999913e-05, 2.8568999999999123e-05, 2.7847000000000982e-05, 2.8110999999997333e-05, 2.8125000000000372e-05, 2.8568999999999123e-05, 2.7999999999996777e-05, 2.8054999999999053e-05, 2.7790999999999233e-05, 2.8084000000001136e-05, 2.7833000000001412e-05, 2.8736000000001427e-05, 2.8653000000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.689" endtime="20201117 14:42:17.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.684" endtime="20201117 14:42:17.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.693" endtime="20201117 14:42:17.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.697" endtime="20201117 14:42:17.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.695" endtime="20201117 14:42:17.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.692" endtime="20201117 14:42:17.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.329" endtime="20201117 14:42:17.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.934" endtime="20201117 14:42:17.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.933" endtime="20201117 14:42:17.718"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.720" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.728" endtime="20201117 14:42:17.743"></status>
</kw>
<msg timestamp="20201117 14:42:17.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.727" endtime="20201117 14:42:17.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.745" endtime="20201117 14:42:17.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.747" endtime="20201117 14:42:17.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.724" endtime="20201117 14:42:17.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.722" endtime="20201117 14:42:17.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.757" endtime="20201117 14:42:18.044"></status>
</kw>
<msg timestamp="20201117 14:42:18.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024166583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024195819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.755" endtime="20201117 14:42:18.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024166583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024195819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.048" endtime="20201117 14:42:18.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.056" endtime="20201117 14:42:18.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.753" endtime="20201117 14:42:18.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.750" endtime="20201117 14:42:18.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.063" level="INFO">${RESULT} = [{'time': 0.024195819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9236000000001927e-05, 'source_diff': 2.9236000000001927e-05}, {'time': 0.024226806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.060" endtime="20201117 14:42:18.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.076" level="INFO">${ACCURACY} = {'source_diff': [2.9236000000001927e-05, 2.8889000000000692e-05, 2.9013000000001343e-05, 2.9028000000000387e-05, 2.8929999999999928e-05, 2.9028000000000387e-05, 2.9735999999998958e-05, 2.9082999999999...</msg>
<status status="PASS" starttime="20201117 14:42:18.064" endtime="20201117 14:42:18.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.081" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.080" endtime="20201117 14:42:18.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.083" level="INFO">VALUE: [2.9236000000001927e-05, 2.8889000000000692e-05, 2.9013000000001343e-05, 2.9028000000000387e-05, 2.8929999999999928e-05, 2.9028000000000387e-05, 2.9735999999998958e-05, 2.9082999999999193e-05, 2.8902000000000788e-05, 2.9514000000001317e-05, 2.9569000000000123e-05, 2.8777000000000663e-05, 2.9625000000001872e-05, 2.965199999999807e-05, 2.9694000000000248e-05, 2.9541000000000983e-05, 2.9082999999999193e-05, 2.8804999999999803e-05, 2.8791999999999707e-05, 2.9124999999997903e-05, 2.8889000000000692e-05, 2.9013999999997347e-05, 2.9111000000001802e-05, 2.966599999999764e-05, 2.9596999999999263e-05, 2.8999999999997778e-05, 2.9721999999999388e-05, 2.9096999999998763e-05, 2.9055000000000053e-05, 2.8860999999998083e-05, 2.8805999999999277e-05, 2.8749999999997528e-05, 2.8833000000002412e-05, 2.9014000000000817e-05, 2.8972000000002107e-05, 2.8778000000000137e-05, 2.894499999999897e-05, 2.9556000000000027e-05, 2.8986000000001677e-05, 2.8903000000000262e-05, 2.8916999999999832e-05, 2.89309999999994e-05, 2.9681000000000152e-05, 2.8750000000000997e-05, 2.9583999999999167e-05, 2.8847000000001982e-05, 2.9014000000000817e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9556000000000027e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.082" endtime="20201117 14:42:18.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.077" endtime="20201117 14:42:18.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.086" endtime="20201117 14:42:18.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.090" endtime="20201117 14:42:18.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.088" endtime="20201117 14:42:18.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.085" endtime="20201117 14:42:18.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.721" endtime="20201117 14:42:18.111"></status>
</kw>
<msg timestamp="20201117 14:42:18.111" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.119" endtime="20201117 14:42:18.134"></status>
</kw>
<msg timestamp="20201117 14:42:18.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.117" endtime="20201117 14:42:18.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.136" endtime="20201117 14:42:18.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.139" endtime="20201117 14:42:18.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.115" endtime="20201117 14:42:18.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.113" endtime="20201117 14:42:18.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.147" endtime="20201117 14:42:18.433"></status>
</kw>
<msg timestamp="20201117 14:42:18.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.146" endtime="20201117 14:42:18.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.437" endtime="20201117 14:42:18.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.445" endtime="20201117 14:42:18.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.143" endtime="20201117 14:42:18.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.142" endtime="20201117 14:42:18.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.452" level="INFO">${RESULT} = [{'time': 0.021689583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9318999999999873e-05, 'source_diff': 2.9318999999999873e-05}, {'time': 0.021720569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.449" endtime="20201117 14:42:18.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.465" level="INFO">${ACCURACY} = {'source_diff': [2.9318999999999873e-05, 2.8943999999999498e-05, 2.9707999999999818e-05, 2.8902999999996792e-05, 2.965199999999807e-05, 2.9625000000001872e-05, 2.9138999999997472e-05, 2.88750000000011...</msg>
<status status="PASS" starttime="20201117 14:42:18.453" endtime="20201117 14:42:18.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.470" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.469" endtime="20201117 14:42:18.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.473" level="INFO">VALUE: [2.9318999999999873e-05, 2.8943999999999498e-05, 2.9707999999999818e-05, 2.8902999999996792e-05, 2.965199999999807e-05, 2.9625000000001872e-05, 2.9138999999997472e-05, 2.8875000000001122e-05, 2.9027000000000913e-05, 2.8943999999999498e-05, 2.8778000000000137e-05, 2.8943999999999498e-05, 2.9110999999998333e-05, 2.9028000000000387e-05, 2.9028000000000387e-05, 2.9083000000002662e-05, 2.8971999999998638e-05, 2.9375000000001622e-05, 2.9653000000001012e-05, 2.9749999999998528e-05, 2.8889000000000692e-05, 2.8804999999999803e-05, 2.8943999999999498e-05, 2.8764000000000567e-05, 2.9000000000001247e-05, 2.9639000000001442e-05, 2.9041999999999957e-05, 2.9624999999998403e-05, 2.9652999999997542e-05, 2.9569999999999597e-05, 2.8846999999998513e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9082999999999193e-05, 2.8985999999998208e-05, 2.9028000000000387e-05, 2.9625000000001872e-05, 2.9069999999999097e-05, 2.9055000000000053e-05, 2.9388999999997723e-05, 2.8791999999999707e-05, 2.9653000000001012e-05, 2.868099999999915e-05, 2.9028000000000387e-05, 2.8847999999997986e-05, 2.969499999999972e-05, 2.969499999999972e-05, 2.8848000000001456e-05, 2.8916000000000358e-05, 2.97370000000019e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.471" endtime="20201117 14:42:18.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.466" endtime="20201117 14:42:18.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.476" endtime="20201117 14:42:18.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.479" endtime="20201117 14:42:18.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.478" endtime="20201117 14:42:18.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.474" endtime="20201117 14:42:18.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.111" endtime="20201117 14:42:18.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.719" endtime="20201117 14:42:18.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.718" endtime="20201117 14:42:18.500"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.503" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.511" endtime="20201117 14:42:18.527"></status>
</kw>
<msg timestamp="20201117 14:42:18.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.510" endtime="20201117 14:42:18.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.528" endtime="20201117 14:42:18.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.531" endtime="20201117 14:42:18.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.507" endtime="20201117 14:42:18.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.505" endtime="20201117 14:42:18.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.540" endtime="20201117 14:42:18.825"></status>
</kw>
<msg timestamp="20201117 14:42:18.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024591028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.538" endtime="20201117 14:42:18.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024591028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.829" endtime="20201117 14:42:18.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.837" endtime="20201117 14:42:18.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.535" endtime="20201117 14:42:18.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.534" endtime="20201117 14:42:18.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.844" level="INFO">${RESULT} = [{'time': 0.024591028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9861000000002552e-05, 'source_diff': 2.9861000000002552e-05}, {'time': 0.024623028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.840" endtime="20201117 14:42:18.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.859" level="INFO">${ACCURACY} = {'source_diff': [2.9861000000002552e-05, 2.9931000000000402e-05, 2.9874999999998653e-05, 2.994499999999997e-05, 2.997299999999911e-05, 3.07370000000029e-05, 2.9819999999999847e-05, 3.0584000000000167e...</msg>
<status status="PASS" starttime="20201117 14:42:18.845" endtime="20201117 14:42:18.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.863" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.862" endtime="20201117 14:42:18.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.866" level="INFO">VALUE: [2.9861000000002552e-05, 2.9931000000000402e-05, 2.9874999999998653e-05, 2.994499999999997e-05, 2.997299999999911e-05, 3.07370000000029e-05, 2.9819999999999847e-05, 3.0584000000000167e-05, 3.068099999999768e-05, 3.0097999999999236e-05, 3.0138999999998473e-05, 3.073599999999996e-05, 3.063899999999897e-05, 2.9903000000001262e-05, 2.998699999999868e-05, 3.066700000000158e-05, 3.0540999999998514e-05, 2.9832999999999943e-05, 2.9985999999999208e-05, 2.9986000000002677e-05, 2.9958000000000068e-05, 2.9776999999998194e-05, 3.061099999999983e-05, 3.061099999999983e-05, 3.058300000000069e-05, 2.9930000000000928e-05, 3.070800000000082e-05, 2.9999999999998778e-05, 3.0582999999997224e-05, 3.069399999999778e-05, 2.9846999999999513e-05, 3.069399999999778e-05, 2.9902999999997792e-05, 2.9999999999998778e-05, 2.9903000000001262e-05, 3.06249999999994e-05, 2.9917000000000832e-05, 2.9889000000001692e-05, 2.9832999999999943e-05, 3.0027999999997917e-05, 3.068100000000115e-05, 3.0028000000001387e-05, 2.9819999999999847e-05, 3.066700000000158e-05, 3.068099999999768e-05, 3.061099999999983e-05, 2.9819999999999847e-05, 2.9875000000002122e-05, 2.9846999999999513e-05, 2.9833999999999417e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.864" endtime="20201117 14:42:18.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.860" endtime="20201117 14:42:18.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.869" endtime="20201117 14:42:18.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.872" endtime="20201117 14:42:18.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.871" endtime="20201117 14:42:18.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.867" endtime="20201117 14:42:18.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.503" endtime="20201117 14:42:18.893"></status>
</kw>
<msg timestamp="20201117 14:42:18.894" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.902" endtime="20201117 14:42:18.917"></status>
</kw>
<msg timestamp="20201117 14:42:18.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.900" endtime="20201117 14:42:18.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.919" endtime="20201117 14:42:18.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.921" endtime="20201117 14:42:18.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.898" endtime="20201117 14:42:18.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.895" endtime="20201117 14:42:18.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.930" endtime="20201117 14:42:19.216"></status>
</kw>
<msg timestamp="20201117 14:42:19.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.929" endtime="20201117 14:42:19.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.220" endtime="20201117 14:42:19.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.228" endtime="20201117 14:42:19.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.926" endtime="20201117 14:42:19.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.924" endtime="20201117 14:42:19.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.235" level="INFO">${RESULT} = [{'time': 0.021719597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0014000000001817e-05, 'source_diff': 3.0014000000001817e-05}, {'time': 0.021752611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:19.231" endtime="20201117 14:42:19.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.249" level="INFO">${ACCURACY} = {'source_diff': [3.0014000000001817e-05, 3.068000000000168e-05, 3.055500000000155e-05, 3.0083000000000193e-05, 3.066700000000158e-05, 2.9902999999997792e-05, 3.066700000000158e-05, 2.9818999999996904e...</msg>
<status status="PASS" starttime="20201117 14:42:19.236" endtime="20201117 14:42:19.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.253" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.252" endtime="20201117 14:42:19.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.256" level="INFO">VALUE: [3.0014000000001817e-05, 3.068000000000168e-05, 3.055500000000155e-05, 3.0083000000000193e-05, 3.066700000000158e-05, 2.9902999999997792e-05, 3.066700000000158e-05, 2.9818999999996904e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9917000000000832e-05, 3.058300000000069e-05, 2.9846999999999513e-05, 3.0124999999998903e-05, 2.994499999999997e-05, 2.9916999999997362e-05, 2.9986000000002677e-05, 3.069500000000072e-05, 3.0139000000001942e-05, 3.061099999999983e-05, 3.066700000000158e-05, 2.9832999999999943e-05, 2.9846999999999513e-05, 2.9819999999999847e-05, 2.9819000000000373e-05, 3.0070000000000097e-05, 3.069500000000072e-05, 3.0014000000001817e-05, 2.9903000000001262e-05, 3.066699999999811e-05, 3.0070000000000097e-05, 3.068000000000168e-05, 2.9819999999999847e-05, 2.9903000000001262e-05, 3.0000000000002247e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.0027000000001913e-05, 2.9819000000000373e-05, 3.054200000000146e-05, 3.0083000000000193e-05, 2.9986000000002677e-05, 2.9776999999998194e-05, 3.068000000000168e-05, 3.069500000000072e-05, 3.059700000000026e-05, 3.0012999999998874e-05, 2.9958000000000068e-05, 3.0026999999998444e-05, 2.9777000000001663e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.254" endtime="20201117 14:42:19.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.250" endtime="20201117 14:42:19.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.265" endtime="20201117 14:42:19.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.268" endtime="20201117 14:42:19.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.267" endtime="20201117 14:42:19.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.263" endtime="20201117 14:42:19.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.894" endtime="20201117 14:42:19.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.501" endtime="20201117 14:42:19.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.501" endtime="20201117 14:42:19.289"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.292" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.300" endtime="20201117 14:42:19.315"></status>
</kw>
<msg timestamp="20201117 14:42:19.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.298" endtime="20201117 14:42:19.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.316" endtime="20201117 14:42:19.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.319" endtime="20201117 14:42:19.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.296" endtime="20201117 14:42:19.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.294" endtime="20201117 14:42:19.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.328" endtime="20201117 14:42:19.614"></status>
</kw>
<msg timestamp="20201117 14:42:19.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024180042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024211417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.326" endtime="20201117 14:42:19.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024180042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024211417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.618" endtime="20201117 14:42:19.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.626" endtime="20201117 14:42:19.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.324" endtime="20201117 14:42:19.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.322" endtime="20201117 14:42:19.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.633" level="INFO">${RESULT} = [{'time': 0.024211417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.137500000000015e-05, 'source_diff': 3.137500000000015e-05}, {'time': 0.024245417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:19.630" endtime="20201117 14:42:19.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.646" level="INFO">${ACCURACY} = {'source_diff': [3.137500000000015e-05, 3.1610999999997363e-05, 3.091699999999836e-05, 3.15839999999977e-05, 3.159700000000126e-05, 3.097200000000064e-05, 3.099999999999978e-05, 3.165200000000007e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:19.634" endtime="20201117 14:42:19.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.651" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.650" endtime="20201117 14:42:19.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.654" level="INFO">VALUE: [3.137500000000015e-05, 3.1610999999997363e-05, 3.091699999999836e-05, 3.15839999999977e-05, 3.159700000000126e-05, 3.097200000000064e-05, 3.099999999999978e-05, 3.165200000000007e-05, 3.093099999999793e-05, 3.1596999999997794e-05, 3.105500000000205e-05, 3.1582999999998224e-05, 3.093000000000193e-05, 3.0804999999998334e-05, 3.166599999999964e-05, 3.090299999999879e-05, 3.170799999999835e-05, 3.102700000000291e-05, 3.156900000000212e-05, 3.166599999999964e-05, 3.175000000000053e-05, 3.099999999999978e-05, 3.1568999999998654e-05, 3.169500000000172e-05, 3.104100000000248e-05, 3.077799999999867e-05, 3.099999999999978e-05, 3.102799999999892e-05, 3.083400000000042e-05, 3.161100000000083e-05, 3.091699999999836e-05, 3.11249999999999e-05, 3.0832999999997474e-05, 3.09310000000014e-05, 3.137500000000015e-05, 3.165300000000301e-05, 3.087499999999965e-05, 3.102800000000239e-05, 3.099999999999978e-05, 3.111100000000033e-05, 3.168099999999868e-05, 3.097200000000064e-05, 3.087499999999965e-05, 3.163899999999997e-05, 3.102800000000239e-05, 3.15700000000016e-05, 3.161100000000083e-05, 3.104200000000196e-05, 3.093099999999793e-05, 3.091700000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.652" endtime="20201117 14:42:19.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.647" endtime="20201117 14:42:19.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.657" endtime="20201117 14:42:19.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.660" endtime="20201117 14:42:19.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.659" endtime="20201117 14:42:19.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.655" endtime="20201117 14:42:19.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.292" endtime="20201117 14:42:19.681"></status>
</kw>
<msg timestamp="20201117 14:42:19.681" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.690" endtime="20201117 14:42:19.705"></status>
</kw>
<msg timestamp="20201117 14:42:19.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.688" endtime="20201117 14:42:19.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.706" endtime="20201117 14:42:19.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.709" endtime="20201117 14:42:19.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.685" endtime="20201117 14:42:19.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.683" endtime="20201117 14:42:19.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.718" endtime="20201117 14:42:20.004"></status>
</kw>
<msg timestamp="20201117 14:42:20.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021623306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.716" endtime="20201117 14:42:20.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021623306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.008" endtime="20201117 14:42:20.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.016" endtime="20201117 14:42:20.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.714" endtime="20201117 14:42:20.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.712" endtime="20201117 14:42:20.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.023" level="INFO">${RESULT} = [{'time': 0.021654181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.087500000000312e-05, 'source_diff': 3.087500000000312e-05}, {'time': 0.021687167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.019" endtime="20201117 14:42:20.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.036" level="INFO">${ACCURACY} = {'source_diff': [3.087500000000312e-05, 3.0847999999999987e-05, 3.083400000000042e-05, 3.172300000000086e-05, 3.0804999999998334e-05, 3.102800000000239e-05, 3.091699999999836e-05, 3.082000000000085e-0...</msg>
<status status="PASS" starttime="20201117 14:42:20.024" endtime="20201117 14:42:20.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.041" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.040" endtime="20201117 14:42:20.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.043" level="INFO">VALUE: [3.087500000000312e-05, 3.0847999999999987e-05, 3.083400000000042e-05, 3.172300000000086e-05, 3.0804999999998334e-05, 3.102800000000239e-05, 3.091699999999836e-05, 3.082000000000085e-05, 3.0776999999999194e-05, 3.093000000000193e-05, 3.084700000000051e-05, 3.1596999999997794e-05, 3.136100000000058e-05, 3.1096999999997293e-05, 3.1040999999999014e-05, 3.1596999999997794e-05, 3.081900000000137e-05, 3.083300000000094e-05, 3.163899999999997e-05, 3.106900000000162e-05, 3.100000000000325e-05, 3.111100000000033e-05, 3.166699999999911e-05, 3.163899999999997e-05, 3.179199999999924e-05, 3.1068999999998154e-05, 3.1610999999997363e-05, 3.136100000000058e-05, 3.1082999999997724e-05, 3.095800000000107e-05, 3.092999999999846e-05, 3.172200000000139e-05, 3.084700000000051e-05, 3.077800000000214e-05, 3.158300000000169e-05, 3.09579999999976e-05, 3.109700000000076e-05, 3.168099999999868e-05, 3.095900000000054e-05, 3.168100000000215e-05, 3.17640000000001e-05, 3.173599999999749e-05, 3.080600000000128e-05, 3.166699999999911e-05, 3.16250000000004e-05, 3.086100000000008e-05, 3.077799999999867e-05, 3.174999999999706e-05, 3.1098000000000237e-05, 3.175000000000053e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.042" endtime="20201117 14:42:20.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.037" endtime="20201117 14:42:20.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.046" endtime="20201117 14:42:20.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.050" endtime="20201117 14:42:20.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.048" endtime="20201117 14:42:20.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.045" endtime="20201117 14:42:20.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.682" endtime="20201117 14:42:20.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.290" endtime="20201117 14:42:20.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.290" endtime="20201117 14:42:20.071"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.073" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.082" endtime="20201117 14:42:20.096"></status>
</kw>
<msg timestamp="20201117 14:42:20.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.080" endtime="20201117 14:42:20.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.098" endtime="20201117 14:42:20.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.100" endtime="20201117 14:42:20.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.077" endtime="20201117 14:42:20.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.075" endtime="20201117 14:42:20.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.109" endtime="20201117 14:42:20.396"></status>
</kw>
<msg timestamp="20201117 14:42:20.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02414975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024182444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:20.108" endtime="20201117 14:42:20.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02414975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024182444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:20.400" endtime="20201117 14:42:20.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.408" endtime="20201117 14:42:20.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.105" endtime="20201117 14:42:20.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.104" endtime="20201117 14:42:20.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.415" level="INFO">${RESULT} = [{'time': 0.024182444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.269399999999978e-05, 'source_diff': 3.269399999999978e-05}, {'time': 0.024216444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.412" endtime="20201117 14:42:20.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.430" level="INFO">${ACCURACY} = {'source_diff': [3.269399999999978e-05, 3.1832999999998474e-05, 3.266600000000064e-05, 3.1777000000000194e-05, 3.2596999999998794e-05, 3.1777000000000194e-05, 3.176399999999663e-05, 3.275000000000153e...</msg>
<status status="PASS" starttime="20201117 14:42:20.416" endtime="20201117 14:42:20.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.435" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.434" endtime="20201117 14:42:20.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.437" level="INFO">VALUE: [3.269399999999978e-05, 3.1832999999998474e-05, 3.266600000000064e-05, 3.1777000000000194e-05, 3.2596999999998794e-05, 3.1777000000000194e-05, 3.176399999999663e-05, 3.275000000000153e-05, 3.238900000000072e-05, 3.198600000000121e-05, 3.2041000000000014e-05, 3.2096999999998294e-05, 3.186100000000108e-05, 3.272200000000239e-05, 3.270799999999935e-05, 3.18050000000028e-05, 3.180599999999881e-05, 3.193099999999893e-05, 3.2096999999998294e-05, 3.197199999999817e-05, 3.26250000000014e-05, 3.2582999999999224e-05, 3.215300000000004e-05, 3.194399999999903e-05, 3.184700000000151e-05, 3.183399999999795e-05, 3.17640000000001e-05, 3.191699999999936e-05, 3.272200000000239e-05, 3.17640000000001e-05, 3.177799999999967e-05, 3.259799999999827e-05, 3.266700000000011e-05, 3.256999999999913e-05, 3.180599999999881e-05, 3.197299999999764e-05, 3.17640000000001e-05, 3.20700000000021e-05, 3.183399999999795e-05, 3.266600000000064e-05, 3.191699999999936e-05, 3.1804999999999334e-05, 3.259799999999827e-05, 3.182000000000185e-05, 3.183400000000142e-05, 3.263900000000097e-05, 3.209700000000176e-05, 3.1790999999999764e-05, 3.197199999999817e-05, 3.186100000000108e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.436" endtime="20201117 14:42:20.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.431" endtime="20201117 14:42:20.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.440" endtime="20201117 14:42:20.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.444" endtime="20201117 14:42:20.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.442" endtime="20201117 14:42:20.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.439" endtime="20201117 14:42:20.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.074" endtime="20201117 14:42:20.464"></status>
</kw>
<msg timestamp="20201117 14:42:20.464" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.473" endtime="20201117 14:42:20.488"></status>
</kw>
<msg timestamp="20201117 14:42:20.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.471" endtime="20201117 14:42:20.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.489" endtime="20201117 14:42:20.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.492" endtime="20201117 14:42:20.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.468" endtime="20201117 14:42:20.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.466" endtime="20201117 14:42:20.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.501" endtime="20201117 14:42:20.786"></status>
</kw>
<msg timestamp="20201117 14:42:20.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.499" endtime="20201117 14:42:20.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.791" endtime="20201117 14:42:20.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.799" endtime="20201117 14:42:20.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.497" endtime="20201117 14:42:20.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.495" endtime="20201117 14:42:20.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.806" level="INFO">${RESULT} = [{'time': 0.021683139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.254199999999999e-05, 'source_diff': 3.254199999999999e-05}, {'time': 0.021718125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.803" endtime="20201117 14:42:20.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.819" level="INFO">${ACCURACY} = {'source_diff': [3.254199999999999e-05, 3.275000000000153e-05, 3.265300000000054e-05, 3.273600000000196e-05, 3.200000000000078e-05, 3.204199999999949e-05, 3.1846999999998044e-05, 3.2790999999997295e-0...</msg>
<status status="PASS" starttime="20201117 14:42:20.807" endtime="20201117 14:42:20.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.824" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.823" endtime="20201117 14:42:20.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.826" level="INFO">VALUE: [3.254199999999999e-05, 3.275000000000153e-05, 3.265300000000054e-05, 3.273600000000196e-05, 3.200000000000078e-05, 3.204199999999949e-05, 3.1846999999998044e-05, 3.2790999999997295e-05, 3.2096999999998294e-05, 3.201399999999688e-05, 3.173600000000096e-05, 3.272300000000186e-05, 3.182000000000185e-05, 3.179199999999924e-05, 3.2596999999998794e-05, 3.180599999999881e-05, 3.184800000000099e-05, 3.188900000000022e-05, 3.208400000000167e-05, 3.25839999999987e-05, 3.276399999999763e-05, 3.26250000000014e-05, 3.202799999999992e-05, 3.263900000000097e-05, 3.2068999999999154e-05, 3.254199999999999e-05, 3.194399999999903e-05, 3.180599999999881e-05, 3.1790999999999764e-05, 3.183300000000194e-05, 3.26250000000014e-05, 3.183300000000194e-05, 3.272200000000239e-05, 3.2082999999998724e-05, 3.2624999999997933e-05, 3.1846999999998044e-05, 3.269399999999978e-05, 3.2054999999999584e-05, 3.266700000000011e-05, 3.190299999999979e-05, 3.272200000000239e-05, 3.26250000000014e-05, 3.2582999999999224e-05, 3.272199999999892e-05, 3.190300000000326e-05, 3.200000000000078e-05, 3.263900000000097e-05, 3.215300000000004e-05, 3.26250000000014e-05, 3.2582999999999224e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.825" endtime="20201117 14:42:20.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.820" endtime="20201117 14:42:20.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.829" endtime="20201117 14:42:20.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.833" endtime="20201117 14:42:20.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.831" endtime="20201117 14:42:20.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.828" endtime="20201117 14:42:20.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.465" endtime="20201117 14:42:20.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.072" endtime="20201117 14:42:20.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.071" endtime="20201117 14:42:20.854"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.856" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.865" endtime="20201117 14:42:20.880"></status>
</kw>
<msg timestamp="20201117 14:42:20.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.863" endtime="20201117 14:42:20.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.882" endtime="20201117 14:42:20.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.884" endtime="20201117 14:42:20.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.861" endtime="20201117 14:42:20.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.858" endtime="20201117 14:42:20.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.894" endtime="20201117 14:42:21.180"></status>
</kw>
<msg timestamp="20201117 14:42:21.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024681069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024714514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.892" endtime="20201117 14:42:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024681069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024714514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.184" endtime="20201117 14:42:21.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.192" endtime="20201117 14:42:21.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.889" endtime="20201117 14:42:21.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.887" endtime="20201117 14:42:21.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.199" level="INFO">${RESULT} = [{'time': 0.024714514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3445e-05, 'source_diff': 3.3445e-05}, {'time': 0.024749528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.288900000000122e-...</msg>
<status status="PASS" starttime="20201117 14:42:21.196" endtime="20201117 14:42:21.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.213" level="INFO">${ACCURACY} = {'source_diff': [3.3445e-05, 3.288900000000122e-05, 3.291700000000036e-05, 3.3138999999998e-05, 3.297199999999917e-05, 3.298700000000168e-05, 3.365299999999807e-05, 3.288899999999775e-05, 3.3514000000...</msg>
<status status="PASS" starttime="20201117 14:42:21.200" endtime="20201117 14:42:21.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.217" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.216" endtime="20201117 14:42:21.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.219" level="INFO">VALUE: [3.3445e-05, 3.288900000000122e-05, 3.291700000000036e-05, 3.3138999999998e-05, 3.297199999999917e-05, 3.298700000000168e-05, 3.365299999999807e-05, 3.288899999999775e-05, 3.351400000000185e-05, 3.287500000000165e-05, 3.280599999999981e-05, 3.280599999999981e-05, 3.366699999999764e-05, 3.368100000000068e-05, 3.3096999999999294e-05, 3.281999999999938e-05, 3.281999999999938e-05, 3.280599999999981e-05, 3.309800000000224e-05, 3.373599999999949e-05, 3.2791000000000764e-05, 3.363900000000197e-05, 3.287500000000165e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.372199999999992e-05, 3.3568999999997184e-05, 3.376399999999863e-05, 3.293000000000046e-05, 3.2818999999999904e-05, 3.3624999999998934e-05, 3.288899999999775e-05, 3.276399999999763e-05, 3.301399999999788e-05, 3.2832999999999474e-05, 3.373599999999949e-05, 3.29449999999995e-05, 3.3568999999997184e-05, 3.3610999999999364e-05, 3.3082999999999724e-05, 3.3374999999998683e-05, 3.297199999999917e-05, 3.29579999999996e-05, 3.372199999999992e-05, 3.376399999999863e-05, 3.290300000000079e-05, 3.372199999999992e-05, 3.304200000000049e-05, 3.298600000000221e-05, 3.357000000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.218" endtime="20201117 14:42:21.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.213" endtime="20201117 14:42:21.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.223" endtime="20201117 14:42:21.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.226" endtime="20201117 14:42:21.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.224" endtime="20201117 14:42:21.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.221" endtime="20201117 14:42:21.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.857" endtime="20201117 14:42:21.247"></status>
</kw>
<msg timestamp="20201117 14:42:21.247" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.255" endtime="20201117 14:42:21.272"></status>
</kw>
<msg timestamp="20201117 14:42:21.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.254" endtime="20201117 14:42:21.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.273" endtime="20201117 14:42:21.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.276" endtime="20201117 14:42:21.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.251" endtime="20201117 14:42:21.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.249" endtime="20201117 14:42:21.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.286" endtime="20201117 14:42:21.572"></status>
</kw>
<msg timestamp="20201117 14:42:21.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.284" endtime="20201117 14:42:21.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.576" endtime="20201117 14:42:21.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.584" endtime="20201117 14:42:21.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.282" endtime="20201117 14:42:21.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.280" endtime="20201117 14:42:21.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.591" level="INFO">${RESULT} = [{'time': 0.021927903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.372199999999992e-05, 'source_diff': 3.372199999999992e-05}, {'time': 0.021962917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.587" endtime="20201117 14:42:21.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.604" level="INFO">${ACCURACY} = {'source_diff': [3.372199999999992e-05, 3.293099999999993e-05, 3.291700000000036e-05, 3.295899999999907e-05, 3.280599999999981e-05, 3.293099999999993e-05, 3.304200000000049e-05, 3.301400000000135e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:21.592" endtime="20201117 14:42:21.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.609" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.608" endtime="20201117 14:42:21.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.611" level="INFO">VALUE: [3.372199999999992e-05, 3.293099999999993e-05, 3.291700000000036e-05, 3.295899999999907e-05, 3.280599999999981e-05, 3.293099999999993e-05, 3.304200000000049e-05, 3.301400000000135e-05, 3.311100000000233e-05, 3.297300000000211e-05, 3.283400000000242e-05, 3.366599999999817e-05, 3.301399999999788e-05, 3.359799999999927e-05, 3.284800000000199e-05, 3.291700000000036e-05, 3.29579999999996e-05, 3.288900000000122e-05, 3.363900000000197e-05, 3.3596999999999794e-05, 3.373600000000296e-05, 3.369399999999731e-05, 3.366600000000164e-05, 3.293000000000046e-05, 3.37640000000021e-05, 3.293000000000046e-05, 3.3138999999998e-05, 3.3583000000000224e-05, 3.3069000000000154e-05, 3.290300000000079e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.279200000000024e-05, 3.301400000000135e-05, 3.288900000000122e-05, 3.288900000000122e-05, 3.279200000000024e-05, 3.284700000000251e-05, 3.291700000000036e-05, 3.2846999999999044e-05, 3.357000000000013e-05, 3.365300000000154e-05, 3.287500000000165e-05, 3.298600000000221e-05, 3.366699999999764e-05, 3.291700000000036e-05, 3.302800000000092e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3610999999999364e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.610" endtime="20201117 14:42:21.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.605" endtime="20201117 14:42:21.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.614" endtime="20201117 14:42:21.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.617" endtime="20201117 14:42:21.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.616" endtime="20201117 14:42:21.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.613" endtime="20201117 14:42:21.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.247" endtime="20201117 14:42:21.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.855" endtime="20201117 14:42:21.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.854" endtime="20201117 14:42:21.639"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.641" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.649" endtime="20201117 14:42:21.666"></status>
</kw>
<msg timestamp="20201117 14:42:21.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.648" endtime="20201117 14:42:21.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.667" endtime="20201117 14:42:21.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.670" endtime="20201117 14:42:21.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.645" endtime="20201117 14:42:21.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.643" endtime="20201117 14:42:21.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.679" endtime="20201117 14:42:21.965"></status>
</kw>
<msg timestamp="20201117 14:42:21.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024599042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024633014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.677" endtime="20201117 14:42:21.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024599042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024633014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.969" endtime="20201117 14:42:21.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.977" endtime="20201117 14:42:21.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.675" endtime="20201117 14:42:21.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.673" endtime="20201117 14:42:21.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.984" level="INFO">${RESULT} = [{'time': 0.024633014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.397200000000017e-05, 'source_diff': 3.397200000000017e-05}, {'time': 0.024670028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.981" endtime="20201117 14:42:21.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.999" level="INFO">${ACCURACY} = {'source_diff': [3.397200000000017e-05, 3.473600000000049e-05, 3.381999999999691e-05, 3.4652999999999073e-05, 3.455599999999809e-05, 3.4611000000000364e-05, 3.394399999999756e-05, 3.383399999999995e-0...</msg>
<status status="PASS" starttime="20201117 14:42:21.985" endtime="20201117 14:42:21.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.003" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.002" endtime="20201117 14:42:22.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.006" level="INFO">VALUE: [3.397200000000017e-05, 3.473600000000049e-05, 3.381999999999691e-05, 3.4652999999999073e-05, 3.455599999999809e-05, 3.4611000000000364e-05, 3.394399999999756e-05, 3.383399999999995e-05, 3.393099999999746e-05, 3.398599999999974e-05, 3.470900000000082e-05, 3.45840000000007e-05, 3.383400000000342e-05, 3.459800000000027e-05, 3.469499999999778e-05, 3.4012999999999405e-05, 3.398700000000268e-05, 3.4624999999999934e-05, 3.382000000000038e-05, 3.390299999999832e-05, 3.3847000000000044e-05, 3.397200000000017e-05, 3.393000000000146e-05, 3.413900000000247e-05, 3.395799999999713e-05, 3.401399999999888e-05, 3.391700000000136e-05, 3.4554999999998615e-05, 3.4582999999997754e-05, 3.4638999999999504e-05, 3.3888999999998753e-05, 3.413900000000247e-05, 3.4582999999997754e-05, 3.4597000000000794e-05, 3.4652999999999073e-05, 3.3819000000000904e-05, 3.402799999999845e-05, 3.473600000000049e-05, 3.379199999999777e-05, 3.4083000000000724e-05, 3.47779999999992e-05, 3.4763000000000155e-05, 3.455600000000156e-05, 3.394400000000103e-05, 3.4583000000001224e-05, 3.393100000000093e-05, 3.4652999999999073e-05, 3.39580000000006e-05, 3.413799999999953e-05, 3.393100000000093e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.005" endtime="20201117 14:42:22.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.000" endtime="20201117 14:42:22.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.009" endtime="20201117 14:42:22.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.012" endtime="20201117 14:42:22.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.011" endtime="20201117 14:42:22.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.007" endtime="20201117 14:42:22.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.642" endtime="20201117 14:42:22.033"></status>
</kw>
<msg timestamp="20201117 14:42:22.034" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.042" endtime="20201117 14:42:22.058"></status>
</kw>
<msg timestamp="20201117 14:42:22.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.041" endtime="20201117 14:42:22.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.060" endtime="20201117 14:42:22.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.062" endtime="20201117 14:42:22.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.038" endtime="20201117 14:42:22.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.036" endtime="20201117 14:42:22.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.071" endtime="20201117 14:42:22.358"></status>
</kw>
<msg timestamp="20201117 14:42:22.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.070" endtime="20201117 14:42:22.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.362" endtime="20201117 14:42:22.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.370" endtime="20201117 14:42:22.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.067" endtime="20201117 14:42:22.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.065" endtime="20201117 14:42:22.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.377" level="INFO">${RESULT} = [{'time': 0.022511361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4069000000001154e-05, 'source_diff': 3.4069000000001154e-05}, {'time': 0.022547306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:22.374" endtime="20201117 14:42:22.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.390" level="INFO">${ACCURACY} = {'source_diff': [3.4069000000001154e-05, 3.405600000000106e-05, 3.405600000000106e-05, 3.461199999999984e-05, 3.397299999999964e-05, 3.37779999999982e-05, 3.383399999999995e-05, 3.4638999999999504e-05...</msg>
<status status="PASS" starttime="20201117 14:42:22.378" endtime="20201117 14:42:22.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.395" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.394" endtime="20201117 14:42:22.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.397" level="INFO">VALUE: [3.4069000000001154e-05, 3.405600000000106e-05, 3.405600000000106e-05, 3.461199999999984e-05, 3.397299999999964e-05, 3.37779999999982e-05, 3.383399999999995e-05, 3.4638999999999504e-05, 3.466600000000264e-05, 3.4110999999999864e-05, 3.4083000000000724e-05, 3.4068999999997684e-05, 3.4097000000000294e-05, 3.472200000000092e-05, 3.4624999999999934e-05, 3.4582999999997754e-05, 3.399999999999931e-05, 3.399999999999931e-05, 3.39580000000006e-05, 3.476399999999963e-05, 3.3860999999999614e-05, 3.39580000000006e-05, 3.4110999999999864e-05, 3.4652999999999073e-05, 3.397200000000017e-05, 3.4555000000002084e-05, 3.391699999999789e-05, 3.4652999999999073e-05, 3.455599999999809e-05, 3.391700000000136e-05, 3.473600000000049e-05, 3.466700000000211e-05, 3.472200000000092e-05, 3.400000000000278e-05, 3.4583000000001224e-05, 3.4110999999999864e-05, 3.382000000000038e-05, 3.4124999999999434e-05, 3.404200000000149e-05, 3.455600000000156e-05, 3.456999999999766e-05, 3.404200000000149e-05, 3.379199999999777e-05, 3.393100000000093e-05, 3.4124999999999434e-05, 3.395900000000007e-05, 3.395900000000007e-05, 3.393100000000093e-05, 3.382000000000038e-05, 3.466700000000211e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.396" endtime="20201117 14:42:22.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.391" endtime="20201117 14:42:22.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.401" endtime="20201117 14:42:22.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.404" endtime="20201117 14:42:22.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.403" endtime="20201117 14:42:22.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.399" endtime="20201117 14:42:22.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.034" endtime="20201117 14:42:22.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.640" endtime="20201117 14:42:22.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.639" endtime="20201117 14:42:22.425"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.428" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.436" endtime="20201117 14:42:22.451"></status>
</kw>
<msg timestamp="20201117 14:42:22.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.434" endtime="20201117 14:42:22.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.453" endtime="20201117 14:42:22.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.455" endtime="20201117 14:42:22.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.432" endtime="20201117 14:42:22.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.430" endtime="20201117 14:42:22.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.464" endtime="20201117 14:42:22.751"></status>
</kw>
<msg timestamp="20201117 14:42:22.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024127889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.463" endtime="20201117 14:42:22.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024127889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.755" endtime="20201117 14:42:22.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.763" endtime="20201117 14:42:22.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.460" endtime="20201117 14:42:22.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.458" endtime="20201117 14:42:22.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.770" level="INFO">${RESULT} = [{'time': 0.024127889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.501399999999988e-05, 'source_diff': 3.501399999999988e-05}, {'time': 0.024165889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:22.767" endtime="20201117 14:42:22.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.784" level="INFO">${ACCURACY} = {'source_diff': [3.501399999999988e-05, 3.570799999999888e-05, 3.4818999999998435e-05, 3.475000000000006e-05, 3.570799999999888e-05, 3.5611000000001364e-05, 3.556999999999866e-05, 3.505599999999859e-0...</msg>
<status status="PASS" starttime="20201117 14:42:22.771" endtime="20201117 14:42:22.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.788" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.787" endtime="20201117 14:42:22.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.791" level="INFO">VALUE: [3.501399999999988e-05, 3.570799999999888e-05, 3.4818999999998435e-05, 3.475000000000006e-05, 3.570799999999888e-05, 3.5611000000001364e-05, 3.556999999999866e-05, 3.505599999999859e-05, 3.491700000000236e-05, 3.500000000000031e-05, 3.5611000000001364e-05, 3.501399999999988e-05, 3.479200000000224e-05, 3.50840000000012e-05, 3.5610999999997894e-05, 3.572299999999792e-05, 3.484800000000052e-05, 3.5125000000000434e-05, 3.558399999999823e-05, 3.49450000000015e-05, 3.5624999999997464e-05, 3.555600000000256e-05, 3.4846999999997574e-05, 3.558399999999823e-05, 3.501399999999988e-05, 3.556999999999866e-05, 3.536200000000059e-05, 3.5026999999999975e-05, 3.5568999999999185e-05, 3.5069000000002154e-05, 3.4804999999998865e-05, 3.5096999999997824e-05, 3.498600000000074e-05, 3.5555000000003084e-05, 3.5111000000000864e-05, 3.5597000000001794e-05, 3.5097000000001294e-05, 3.4804999999998865e-05, 3.5611000000001364e-05, 3.4888999999999754e-05, 3.4860999999997144e-05, 3.4790999999999295e-05, 3.570799999999888e-05, 3.4902999999999323e-05, 3.4819000000001904e-05, 3.4861000000000614e-05, 3.4860999999997144e-05, 3.5582999999998755e-05, 3.4819000000001904e-05, 3.502799999999945e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.789" endtime="20201117 14:42:22.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.784" endtime="20201117 14:42:22.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.794" endtime="20201117 14:42:22.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.797" endtime="20201117 14:42:22.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.796" endtime="20201117 14:42:22.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.792" endtime="20201117 14:42:22.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.428" endtime="20201117 14:42:22.818"></status>
</kw>
<msg timestamp="20201117 14:42:22.818" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.826" endtime="20201117 14:42:22.841"></status>
</kw>
<msg timestamp="20201117 14:42:22.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.825" endtime="20201117 14:42:22.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.843" endtime="20201117 14:42:22.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.845" endtime="20201117 14:42:22.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.822" endtime="20201117 14:42:22.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.820" endtime="20201117 14:42:22.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.854" endtime="20201117 14:42:23.141"></status>
</kw>
<msg timestamp="20201117 14:42:23.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.853" endtime="20201117 14:42:23.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.145" endtime="20201117 14:42:23.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.153" endtime="20201117 14:42:23.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.850" endtime="20201117 14:42:23.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.849" endtime="20201117 14:42:23.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.160" level="INFO">${RESULT} = [{'time': 0.021744639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5596999999998324e-05, 'source_diff': 3.5596999999998324e-05}, {'time': 0.021782639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:23.157" endtime="20201117 14:42:23.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.174" level="INFO">${ACCURACY} = {'source_diff': [3.5596999999998324e-05, 3.556999999999866e-05, 3.493099999999846e-05, 3.505599999999859e-05, 3.515199999999663e-05, 3.483400000000095e-05, 3.567999999999974e-05, 3.475000000000006e-05...</msg>
<status status="PASS" starttime="20201117 14:42:23.161" endtime="20201117 14:42:23.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.178" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.177" endtime="20201117 14:42:23.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.181" level="INFO">VALUE: [3.5596999999998324e-05, 3.556999999999866e-05, 3.493099999999846e-05, 3.505599999999859e-05, 3.515199999999663e-05, 3.483400000000095e-05, 3.567999999999974e-05, 3.475000000000006e-05, 3.569400000000278e-05, 3.4819000000001904e-05, 3.4902999999999323e-05, 3.47779999999992e-05, 3.5083000000001724e-05, 3.47779999999992e-05, 3.480599999999834e-05, 3.554199999999952e-05, 3.490300000000279e-05, 3.55840000000017e-05, 3.572300000000139e-05, 3.470900000000082e-05, 3.570899999999835e-05, 3.491599999999942e-05, 3.572200000000192e-05, 3.4833000000001474e-05, 3.475000000000006e-05, 3.563799999999756e-05, 3.491599999999942e-05, 3.5097000000001294e-05, 3.566700000000311e-05, 3.5110999999997394e-05, 3.4847000000001044e-05, 3.4888999999999754e-05, 3.4902999999999323e-05, 3.5082999999998254e-05, 3.570799999999888e-05, 3.500000000000031e-05, 3.572200000000192e-05, 3.4833000000001474e-05, 3.5068999999998685e-05, 3.494400000000203e-05, 3.5554999999999615e-05, 3.5097000000001294e-05, 3.569499999999878e-05, 3.5625000000000934e-05, 3.575000000000106e-05, 3.570799999999888e-05, 3.479199999999877e-05, 3.576400000000063e-05, 3.4902999999999323e-05, 3.4875000000000184e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.179" endtime="20201117 14:42:23.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.174" endtime="20201117 14:42:23.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.184" endtime="20201117 14:42:23.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.188" endtime="20201117 14:42:23.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.186" endtime="20201117 14:42:23.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.182" endtime="20201117 14:42:23.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.819" endtime="20201117 14:42:23.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.426" endtime="20201117 14:42:23.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.426" endtime="20201117 14:42:23.209"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.211" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.219" endtime="20201117 14:42:23.234"></status>
</kw>
<msg timestamp="20201117 14:42:23.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.218" endtime="20201117 14:42:23.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.236" endtime="20201117 14:42:23.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.238" endtime="20201117 14:42:23.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.215" endtime="20201117 14:42:23.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.213" endtime="20201117 14:42:23.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.247" endtime="20201117 14:42:23.534"></status>
</kw>
<msg timestamp="20201117 14:42:23.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02410525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:23.246" endtime="20201117 14:42:23.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02410525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:23.538" endtime="20201117 14:42:23.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.546" endtime="20201117 14:42:23.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.243" endtime="20201117 14:42:23.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.241" endtime="20201117 14:42:23.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.553" level="INFO">${RESULT} = [{'time': 0.024141083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5832999999999005e-05, 'source_diff': 3.5832999999999005e-05}, {'time': 0.024180097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:23.549" endtime="20201117 14:42:23.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.567" level="INFO">${ACCURACY} = {'source_diff': [3.5832999999999005e-05, 3.6625000000001934e-05, 3.574999999999759e-05, 3.5889000000000754e-05, 3.5861000000001614e-05, 3.5791000000000295e-05, 3.600000000000131e-05, 3.584699999999857...</msg>
<status status="PASS" starttime="20201117 14:42:23.553" endtime="20201117 14:42:23.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.572" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.571" endtime="20201117 14:42:23.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.575" level="INFO">VALUE: [3.5832999999999005e-05, 3.6625000000001934e-05, 3.574999999999759e-05, 3.5889000000000754e-05, 3.5861000000001614e-05, 3.5791000000000295e-05, 3.600000000000131e-05, 3.5846999999998574e-05, 3.6110999999998394e-05, 3.598599999999827e-05, 3.5875000000001184e-05, 3.6624999999998464e-05, 3.6625000000001934e-05, 3.604200000000002e-05, 3.57780000000002e-05, 3.5875000000001184e-05, 3.567999999999974e-05, 3.598700000000121e-05, 3.6569000000000185e-05, 3.6125000000001434e-05, 3.6139000000001004e-05, 3.581999999999891e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.598599999999827e-05, 3.5860999999998144e-05, 3.5832999999999005e-05, 3.602800000000045e-05, 3.575000000000106e-05, 3.5916999999999893e-05, 3.582000000000238e-05, 3.57780000000002e-05, 3.594499999999903e-05, 3.656999999999966e-05, 3.605599999999959e-05, 3.607000000000263e-05, 3.656999999999966e-05, 3.582000000000238e-05, 3.670899999999935e-05, 3.656999999999966e-05, 3.658399999999923e-05, 3.6111000000001864e-05, 3.599999999999784e-05, 3.6013000000001405e-05, 3.6082999999999255e-05, 3.59719999999987e-05, 3.574999999999759e-05, 3.6667000000000644e-05, 3.5846999999998574e-05, 3.575000000000106e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.573" endtime="20201117 14:42:23.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.568" endtime="20201117 14:42:23.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.578" endtime="20201117 14:42:23.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.581" endtime="20201117 14:42:23.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.580" endtime="20201117 14:42:23.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.576" endtime="20201117 14:42:23.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.212" endtime="20201117 14:42:23.602"></status>
</kw>
<msg timestamp="20201117 14:42:23.602" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.610" endtime="20201117 14:42:23.625"></status>
</kw>
<msg timestamp="20201117 14:42:23.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.609" endtime="20201117 14:42:23.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.627" endtime="20201117 14:42:23.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.629" endtime="20201117 14:42:23.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.606" endtime="20201117 14:42:23.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.604" endtime="20201117 14:42:23.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.639" endtime="20201117 14:42:23.926"></status>
</kw>
<msg timestamp="20201117 14:42:23.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.637" endtime="20201117 14:42:23.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.930" endtime="20201117 14:42:23.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.938" endtime="20201117 14:42:23.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.634" endtime="20201117 14:42:23.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.633" endtime="20201117 14:42:23.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.945" level="INFO">${RESULT} = [{'time': 0.021679958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.624999999999809e-05, 'source_diff': 3.624999999999809e-05}, {'time': 0.021717958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.942" endtime="20201117 14:42:23.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.958" level="INFO">${ACCURACY} = {'source_diff': [3.624999999999809e-05, 3.592999999999999e-05, 3.5818999999999435e-05, 3.6569000000000185e-05, 3.598599999999827e-05, 3.57780000000002e-05, 3.577799999999673e-05, 3.6082999999999255e-0...</msg>
<status status="PASS" starttime="20201117 14:42:23.946" endtime="20201117 14:42:23.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.963" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.962" endtime="20201117 14:42:23.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.966" level="INFO">VALUE: [3.624999999999809e-05, 3.592999999999999e-05, 3.5818999999999435e-05, 3.6569000000000185e-05, 3.598599999999827e-05, 3.57780000000002e-05, 3.577799999999673e-05, 3.6082999999999255e-05, 3.6624999999998464e-05, 3.576400000000063e-05, 3.579199999999977e-05, 3.6096999999998824e-05, 3.59589999999986e-05, 3.5889000000000754e-05, 3.576400000000063e-05, 3.6610999999998894e-05, 3.6652999999997604e-05, 3.6138999999997534e-05, 3.5903000000000324e-05, 3.59719999999987e-05, 3.6652999999997604e-05, 3.6610999999998894e-05, 3.5875000000001184e-05, 3.57780000000002e-05, 3.608399999999873e-05, 3.5805000000003334e-05, 3.618000000000024e-05, 3.59580000000026e-05, 3.573599999999802e-05, 3.6624999999998464e-05, 3.6624999999998464e-05, 3.5916999999999893e-05, 3.602800000000045e-05, 3.5874999999997714e-05, 3.674999999999859e-05, 3.669400000000031e-05, 3.6569000000000185e-05, 3.5818999999999435e-05, 3.6652999999997604e-05, 3.6582999999999755e-05, 3.673599999999902e-05, 3.6625000000001934e-05, 3.672199999999945e-05, 3.6624999999998464e-05, 3.59719999999987e-05, 3.620899999999885e-05, 3.6638999999998034e-05, 3.651400000000138e-05, 3.576400000000063e-05, 3.675000000000206e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.964" endtime="20201117 14:42:23.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.960" endtime="20201117 14:42:23.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.969" endtime="20201117 14:42:23.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.972" endtime="20201117 14:42:23.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.971" endtime="20201117 14:42:23.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.967" endtime="20201117 14:42:23.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.603" endtime="20201117 14:42:23.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.210" endtime="20201117 14:42:23.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.209" endtime="20201117 14:42:23.993"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.996" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.004" endtime="20201117 14:42:24.020"></status>
</kw>
<msg timestamp="20201117 14:42:24.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.002" endtime="20201117 14:42:24.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.021" endtime="20201117 14:42:24.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.023" endtime="20201117 14:42:24.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.000" endtime="20201117 14:42:24.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.997" endtime="20201117 14:42:24.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.032" endtime="20201117 14:42:24.319"></status>
</kw>
<msg timestamp="20201117 14:42:24.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024015458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.031" endtime="20201117 14:42:24.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024015458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.323" endtime="20201117 14:42:24.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.331" endtime="20201117 14:42:24.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.028" endtime="20201117 14:42:24.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.027" endtime="20201117 14:42:24.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.342" level="INFO">${RESULT} = [{'time': 0.024052583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7124999999998964e-05, 'source_diff': 3.7124999999998964e-05}, {'time': 0.024091597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:24.339" endtime="20201117 14:42:24.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.356" level="INFO">${ACCURACY} = {'source_diff': [3.7124999999998964e-05, 3.702799999999798e-05, 3.673599999999902e-05, 3.6819000000000435e-05, 3.773600000000002e-05, 3.772200000000045e-05, 3.7666999999998174e-05, 3.6874999999998714e...</msg>
<status status="PASS" starttime="20201117 14:42:24.343" endtime="20201117 14:42:24.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.360" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.359" endtime="20201117 14:42:24.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.363" level="INFO">VALUE: [3.7124999999998964e-05, 3.702799999999798e-05, 3.673599999999902e-05, 3.6819000000000435e-05, 3.773600000000002e-05, 3.772200000000045e-05, 3.7666999999998174e-05, 3.6874999999998714e-05, 3.7681000000001214e-05, 3.6874999999998714e-05, 3.6889000000001754e-05, 3.767999999999827e-05, 3.7667000000001644e-05, 3.7569000000001185e-05, 3.6860999999999144e-05, 3.7624999999999464e-05, 3.702800000000145e-05, 3.7083000000000255e-05, 3.709800000000277e-05, 3.7040999999998075e-05, 3.6917000000000894e-05, 3.695900000000307e-05, 3.7360999999999644e-05, 3.704199999999755e-05, 3.683399999999948e-05, 3.7111000000002864e-05, 3.67919999999973e-05, 3.69589999999996e-05, 3.7624999999999464e-05, 3.7652999999998604e-05, 3.683399999999948e-05, 3.707000000000016e-05, 3.7638999999999034e-05, 3.711199999999887e-05, 3.7027000000001975e-05, 3.705600000000059e-05, 3.7569000000001185e-05, 3.76659999999987e-05, 3.7083000000000255e-05, 3.6833000000000005e-05, 3.673600000000249e-05, 3.694400000000056e-05, 3.6833000000000005e-05, 3.7096999999999825e-05, 3.7569000000001185e-05, 3.6776999999998256e-05, 3.7083000000000255e-05, 3.681999999999991e-05, 3.702799999999798e-05, 3.7568999999997715e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.362" endtime="20201117 14:42:24.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.357" endtime="20201117 14:42:24.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.366" endtime="20201117 14:42:24.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.369" endtime="20201117 14:42:24.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.368" endtime="20201117 14:42:24.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.364" endtime="20201117 14:42:24.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.996" endtime="20201117 14:42:24.390"></status>
</kw>
<msg timestamp="20201117 14:42:24.390" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.399" endtime="20201117 14:42:24.414"></status>
</kw>
<msg timestamp="20201117 14:42:24.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.397" endtime="20201117 14:42:24.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.415" endtime="20201117 14:42:24.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.418" endtime="20201117 14:42:24.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.395" endtime="20201117 14:42:24.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.392" endtime="20201117 14:42:24.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.426" endtime="20201117 14:42:24.713"></status>
</kw>
<msg timestamp="20201117 14:42:24.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.425" endtime="20201117 14:42:24.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.717" endtime="20201117 14:42:24.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.726" endtime="20201117 14:42:24.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.422" endtime="20201117 14:42:24.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.421" endtime="20201117 14:42:24.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.733" level="INFO">${RESULT} = [{'time': 0.021803403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.754199999999805e-05, 'source_diff': 3.754199999999805e-05}, {'time': 0.021842444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.729" endtime="20201117 14:42:24.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.746" level="INFO">${ACCURACY} = {'source_diff': [3.754199999999805e-05, 3.715199999999863e-05, 3.718000000000124e-05, 3.776399999999916e-05, 3.704200000000102e-05, 3.701400000000188e-05, 3.772200000000045e-05, 3.6846999999999575e-05...</msg>
<status status="PASS" starttime="20201117 14:42:24.734" endtime="20201117 14:42:24.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.751" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.750" endtime="20201117 14:42:24.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.753" level="INFO">VALUE: [3.754199999999805e-05, 3.715199999999863e-05, 3.718000000000124e-05, 3.776399999999916e-05, 3.704200000000102e-05, 3.701400000000188e-05, 3.772200000000045e-05, 3.6846999999999575e-05, 3.683399999999948e-05, 3.6917000000000894e-05, 3.6888999999998284e-05, 3.679200000000077e-05, 3.705600000000059e-05, 3.6889000000001754e-05, 3.75979999999998e-05, 3.697299999999917e-05, 3.7653000000002074e-05, 3.7012999999998936e-05, 3.7083000000000255e-05, 3.7083000000000255e-05, 3.6888999999998284e-05, 3.7597000000000325e-05, 3.772200000000045e-05, 3.694399999999709e-05, 3.7026999999998506e-05, 3.6819000000000435e-05, 3.701400000000188e-05, 3.6874999999998714e-05, 3.7583000000000755e-05, 3.768000000000174e-05, 3.7610999999999895e-05, 3.772199999999698e-05, 3.7555000000001615e-05, 3.707000000000016e-05, 3.7597000000000325e-05, 3.7124999999998964e-05, 3.693000000000099e-05, 3.7610999999999895e-05, 3.772200000000045e-05, 3.701400000000188e-05, 3.701400000000188e-05, 3.774999999999959e-05, 3.774999999999959e-05, 3.6903000000001324e-05, 3.6874999999998714e-05, 3.7375000000002684e-05, 3.705600000000059e-05, 3.7096999999999825e-05, 3.680600000000034e-05, 3.772200000000045e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.752" endtime="20201117 14:42:24.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.747" endtime="20201117 14:42:24.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.756" endtime="20201117 14:42:24.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.760" endtime="20201117 14:42:24.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.758" endtime="20201117 14:42:24.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.755" endtime="20201117 14:42:24.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.391" endtime="20201117 14:42:24.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.994" endtime="20201117 14:42:24.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.994" endtime="20201117 14:42:24.781"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.783" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.791" endtime="20201117 14:42:24.808"></status>
</kw>
<msg timestamp="20201117 14:42:24.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.790" endtime="20201117 14:42:24.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.809" endtime="20201117 14:42:24.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.812" endtime="20201117 14:42:24.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.787" endtime="20201117 14:42:24.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.785" endtime="20201117 14:42:24.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.821" endtime="20201117 14:42:25.108"></status>
</kw>
<msg timestamp="20201117 14:42:25.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.819" endtime="20201117 14:42:25.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024184917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.112" endtime="20201117 14:42:25.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.120" endtime="20201117 14:42:25.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.817" endtime="20201117 14:42:25.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.815" endtime="20201117 14:42:25.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.127" level="INFO">${RESULT} = [{'time': 0.024223333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.841599999999945e-05, 'source_diff': 3.841599999999945e-05}, {'time': 0.024263319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.124" endtime="20201117 14:42:25.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.142" level="INFO">${ACCURACY} = {'source_diff': [3.841599999999945e-05, 3.7874999999999714e-05, 3.794400000000156e-05, 3.86659999999997e-05, 3.8666999999999174e-05, 3.7874999999999714e-05, 3.7804999999998395e-05, 3.805599999999812e-...</msg>
<status status="PASS" starttime="20201117 14:42:25.128" endtime="20201117 14:42:25.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.146" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.145" endtime="20201117 14:42:25.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.149" level="INFO">VALUE: [3.841599999999945e-05, 3.7874999999999714e-05, 3.794400000000156e-05, 3.86659999999997e-05, 3.8666999999999174e-05, 3.7874999999999714e-05, 3.7804999999998395e-05, 3.805599999999812e-05, 3.794399999999809e-05, 3.870800000000188e-05, 3.780599999999787e-05, 3.782000000000091e-05, 3.869400000000231e-05, 3.876400000000016e-05, 3.7874999999999714e-05, 3.798600000000027e-05, 3.872199999999798e-05, 3.8124999999999964e-05, 3.777799999999873e-05, 3.8596999999997855e-05, 3.801399999999941e-05, 3.776399999999916e-05, 3.857000000000166e-05, 3.7833000000001005e-05, 3.801399999999941e-05, 3.7931000000001464e-05, 3.797300000000017e-05, 3.777799999999873e-05, 3.8652999999999604e-05, 3.7917000000001894e-05, 3.773600000000002e-05, 3.808400000000073e-05, 3.8111000000000395e-05, 3.874999999999712e-05, 3.811199999999987e-05, 3.7846999999997105e-05, 3.8124999999999964e-05, 3.8540999999999576e-05, 3.8666999999999174e-05, 3.854200000000252e-05, 3.865200000000013e-05, 3.8597000000001325e-05, 3.7846999999997105e-05, 3.7805000000001865e-05, 3.865200000000013e-05, 3.799999999999984e-05, 3.8625000000000465e-05, 3.8040999999999076e-05, 3.870800000000188e-05, 3.804199999999855e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.147" endtime="20201117 14:42:25.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.143" endtime="20201117 14:42:25.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.152" endtime="20201117 14:42:25.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.155" endtime="20201117 14:42:25.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.154" endtime="20201117 14:42:25.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.150" endtime="20201117 14:42:25.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.784" endtime="20201117 14:42:25.176"></status>
</kw>
<msg timestamp="20201117 14:42:25.176" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.184" endtime="20201117 14:42:25.200"></status>
</kw>
<msg timestamp="20201117 14:42:25.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.183" endtime="20201117 14:42:25.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.202" endtime="20201117 14:42:25.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.205" endtime="20201117 14:42:25.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.180" endtime="20201117 14:42:25.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.178" endtime="20201117 14:42:25.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.214" endtime="20201117 14:42:25.501"></status>
</kw>
<msg timestamp="20201117 14:42:25.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.212" endtime="20201117 14:42:25.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.505" endtime="20201117 14:42:25.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.513" endtime="20201117 14:42:25.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.210" endtime="20201117 14:42:25.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.208" endtime="20201117 14:42:25.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.520" level="INFO">${RESULT} = [{'time': 0.021772792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8209000000000853e-05, 'source_diff': 3.8209000000000853e-05}, {'time': 0.021812792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:25.517" endtime="20201117 14:42:25.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.533" level="INFO">${ACCURACY} = {'source_diff': [3.8209000000000853e-05, 3.799999999999984e-05, 3.808400000000073e-05, 3.801399999999941e-05, 3.7916999999998424e-05, 3.873599999999755e-05, 3.799999999999984e-05, 3.799999999999984e-0...</msg>
<status status="PASS" starttime="20201117 14:42:25.521" endtime="20201117 14:42:25.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.538" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.537" endtime="20201117 14:42:25.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.540" level="INFO">VALUE: [3.8209000000000853e-05, 3.799999999999984e-05, 3.808400000000073e-05, 3.801399999999941e-05, 3.7916999999998424e-05, 3.873599999999755e-05, 3.799999999999984e-05, 3.799999999999984e-05, 3.8111000000000395e-05, 3.874999999999712e-05, 3.8040999999999076e-05, 3.7819000000001435e-05, 3.8611000000000895e-05, 3.8083000000001255e-05, 3.8568999999998715e-05, 3.876400000000016e-05, 3.8554999999999146e-05, 3.8097000000000825e-05, 3.7847000000000575e-05, 3.8597000000001325e-05, 3.875000000000059e-05, 3.8652999999999604e-05, 3.799999999999984e-05, 3.7805000000001865e-05, 3.7832999999997535e-05, 3.872200000000145e-05, 3.7833000000001005e-05, 3.7819000000001435e-05, 3.7888999999999284e-05, 3.7833000000001005e-05, 3.780600000000134e-05, 3.77919999999983e-05, 3.876400000000016e-05, 3.7874999999999714e-05, 3.851399999999991e-05, 3.857000000000166e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.873599999999755e-05, 3.85980000000008e-05, 3.777799999999873e-05, 3.776399999999916e-05, 3.80980000000003e-05, 3.85980000000008e-05, 3.7874999999999714e-05, 3.783400000000048e-05, 3.849999999999687e-05, 3.86659999999997e-05, 3.804200000000202e-05, 3.7931000000001464e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.539" endtime="20201117 14:42:25.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.534" endtime="20201117 14:42:25.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.544" endtime="20201117 14:42:25.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.547" endtime="20201117 14:42:25.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.545" endtime="20201117 14:42:25.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.542" endtime="20201117 14:42:25.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.177" endtime="20201117 14:42:25.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.782" endtime="20201117 14:42:25.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.781" endtime="20201117 14:42:25.568"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.570" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.579" endtime="20201117 14:42:25.595"></status>
</kw>
<msg timestamp="20201117 14:42:25.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.577" endtime="20201117 14:42:25.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.597" endtime="20201117 14:42:25.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.599" endtime="20201117 14:42:25.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.575" endtime="20201117 14:42:25.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.572" endtime="20201117 14:42:25.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.608" endtime="20201117 14:42:25.895"></status>
</kw>
<msg timestamp="20201117 14:42:25.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02469775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:25.607" endtime="20201117 14:42:25.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02469775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:25.899" endtime="20201117 14:42:25.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.907" endtime="20201117 14:42:25.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.604" endtime="20201117 14:42:25.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.603" endtime="20201117 14:42:25.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.914" level="INFO">${RESULT} = [{'time': 0.024736694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.894399999999909e-05, 'source_diff': 3.894399999999909e-05}, {'time': 0.024778681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.910" endtime="20201117 14:42:25.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.927" level="INFO">${ACCURACY} = {'source_diff': [3.894399999999909e-05, 3.9667000000000174e-05, 3.901400000000041e-05, 3.9694999999999314e-05, 3.880599999999887e-05, 3.9582999999999285e-05, 3.8790999999999826e-05, 3.898600000000127e...</msg>
<status status="PASS" starttime="20201117 14:42:25.915" endtime="20201117 14:42:25.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.932" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.931" endtime="20201117 14:42:25.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.934" level="INFO">VALUE: [3.894399999999909e-05, 3.9667000000000174e-05, 3.901400000000041e-05, 3.9694999999999314e-05, 3.880599999999887e-05, 3.9582999999999285e-05, 3.8790999999999826e-05, 3.898600000000127e-05, 3.893000000000299e-05, 3.877799999999973e-05, 3.900000000000084e-05, 3.8861000000001145e-05, 3.963800000000156e-05, 3.8889000000000284e-05, 3.976399999999769e-05, 3.895799999999866e-05, 3.8889000000000284e-05, 3.972199999999898e-05, 3.901400000000041e-05, 3.904199999999955e-05, 3.9054999999999646e-05, 3.9596999999998855e-05, 3.951400000000091e-05, 3.9374999999997745e-05, 3.9096999999998355e-05, 3.901400000000041e-05, 3.89720000000017e-05, 3.8804999999999396e-05, 3.894399999999909e-05, 3.8930999999998994e-05, 3.9680999999999744e-05, 3.952800000000048e-05, 3.8930999999998994e-05, 3.9791000000000826e-05, 3.8889000000000284e-05, 3.8889000000000284e-05, 3.9375000000001215e-05, 3.8916999999999424e-05, 3.90980000000013e-05, 3.877799999999973e-05, 3.908400000000173e-05, 3.8902999999999854e-05, 3.973599999999855e-05, 3.908399999999826e-05, 3.9124999999997495e-05, 3.9624999999997995e-05, 3.876399999999669e-05, 3.905599999999912e-05, 3.9611000000001895e-05, 3.955600000000309e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.933" endtime="20201117 14:42:25.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.928" endtime="20201117 14:42:25.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.937" endtime="20201117 14:42:25.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.941" endtime="20201117 14:42:25.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.939" endtime="20201117 14:42:25.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.935" endtime="20201117 14:42:25.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.571" endtime="20201117 14:42:25.962"></status>
</kw>
<msg timestamp="20201117 14:42:25.962" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.970" endtime="20201117 14:42:25.986"></status>
</kw>
<msg timestamp="20201117 14:42:25.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.968" endtime="20201117 14:42:25.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.987" endtime="20201117 14:42:25.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.990" endtime="20201117 14:42:25.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.966" endtime="20201117 14:42:25.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.964" endtime="20201117 14:42:25.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.999" endtime="20201117 14:42:26.286"></status>
</kw>
<msg timestamp="20201117 14:42:26.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.997" endtime="20201117 14:42:26.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.290" endtime="20201117 14:42:26.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.298" endtime="20201117 14:42:26.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.995" endtime="20201117 14:42:26.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.993" endtime="20201117 14:42:26.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.305" level="INFO">${RESULT} = [{'time': 0.021719528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.922199999999848e-05, 'source_diff': 3.922199999999848e-05}, {'time': 0.021760528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:26.302" endtime="20201117 14:42:26.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.318" level="INFO">${ACCURACY} = {'source_diff': [3.922199999999848e-05, 3.880600000000234e-05, 3.975000000000159e-05, 3.965200000000113e-05, 3.9666999999996705e-05, 3.973599999999855e-05, 3.898600000000127e-05, 3.96660000000007e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:26.306" endtime="20201117 14:42:26.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.323" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.322" endtime="20201117 14:42:26.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.325" level="INFO">VALUE: [3.922199999999848e-05, 3.880600000000234e-05, 3.975000000000159e-05, 3.965200000000113e-05, 3.9666999999996705e-05, 3.973599999999855e-05, 3.898600000000127e-05, 3.96660000000007e-05, 3.9083000000002255e-05, 3.883400000000148e-05, 3.897300000000117e-05, 3.89859999999978e-05, 3.969399999999984e-05, 3.9582999999999285e-05, 3.8818999999998965e-05, 3.892999999999952e-05, 3.8889000000000284e-05, 3.9625000000001465e-05, 3.96799999999968e-05, 3.9582999999999285e-05, 3.892999999999952e-05, 3.975000000000159e-05, 3.876400000000016e-05, 3.9597000000002325e-05, 3.902799999999998e-05, 3.9096999999998355e-05, 3.876400000000016e-05, 3.8902999999999854e-05, 3.877799999999973e-05, 3.8861000000001145e-05, 3.9667000000000174e-05, 3.8930999999998994e-05, 3.9667000000000174e-05, 3.897300000000117e-05, 3.956999999999919e-05, 3.895800000000213e-05, 3.974999999999812e-05, 3.897199999999823e-05, 3.972199999999898e-05, 3.9653000000000604e-05, 3.9722999999998454e-05, 3.956999999999919e-05, 3.908399999999826e-05, 3.8889000000000284e-05, 3.908400000000173e-05, 3.9361000000001645e-05, 3.8889000000000284e-05, 3.9708999999998884e-05, 3.909799999999783e-05, 3.8874999999997245e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.324" endtime="20201117 14:42:26.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.319" endtime="20201117 14:42:26.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.329" endtime="20201117 14:42:26.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.332" endtime="20201117 14:42:26.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.331" endtime="20201117 14:42:26.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.327" endtime="20201117 14:42:26.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.963" endtime="20201117 14:42:26.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.569" endtime="20201117 14:42:26.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.568" endtime="20201117 14:42:26.354"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.356" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.364" endtime="20201117 14:42:26.380"></status>
</kw>
<msg timestamp="20201117 14:42:26.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.363" endtime="20201117 14:42:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.381" endtime="20201117 14:42:26.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.384" endtime="20201117 14:42:26.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.360" endtime="20201117 14:42:26.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.358" endtime="20201117 14:42:26.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.393" endtime="20201117 14:42:26.679"></status>
</kw>
<msg timestamp="20201117 14:42:26.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0243255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02436575, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:26.391" endtime="20201117 14:42:26.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0243255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02436575, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:26.683" endtime="20201117 14:42:26.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.691" endtime="20201117 14:42:26.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.389" endtime="20201117 14:42:26.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.387" endtime="20201117 14:42:26.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.698" level="INFO">${RESULT} = [{'time': 0.02436575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.024999999999862e-05, 'source_diff': 4.024999999999862e-05}, {'time': 0.024408764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:26.694" endtime="20201117 14:42:26.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.713" level="INFO">${ACCURACY} = {'source_diff': [4.024999999999862e-05, 4.0596999999999855e-05, 4.0069000000000216e-05, 3.9846999999999105e-05, 3.9832999999999535e-05, 3.9930999999999994e-05, 4.0638999999998565e-05, 4.00140000000014...</msg>
<status status="PASS" starttime="20201117 14:42:26.699" endtime="20201117 14:42:26.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.717" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.716" endtime="20201117 14:42:26.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.720" level="INFO">VALUE: [4.024999999999862e-05, 4.0596999999999855e-05, 4.0069000000000216e-05, 3.9846999999999105e-05, 3.9832999999999535e-05, 3.9930999999999994e-05, 4.0638999999998565e-05, 4.001400000000141e-05, 4.076399999999869e-05, 3.9930999999999994e-05, 4.005600000000012e-05, 3.980599999999987e-05, 4.008400000000273e-05, 3.97920000000003e-05, 3.984800000000205e-05, 4.055600000000062e-05, 4.000000000000184e-05, 4.0374999999998745e-05, 4.005600000000012e-05, 4.06119999999989e-05, 3.972199999999898e-05, 4.068000000000127e-05, 3.988800000000181e-05, 3.9791000000000826e-05, 4.065199999999866e-05, 4.0652999999998135e-05, 4.074999999999912e-05, 3.99720000000027e-05, 4.074999999999912e-05, 4.0069000000000216e-05, 3.9860999999998675e-05, 4.002800000000098e-05, 3.9846999999999105e-05, 3.976400000000116e-05, 4.0554999999997676e-05, 3.997199999999923e-05, 3.995799999999966e-05, 4.047199999999973e-05, 3.994400000000009e-05, 4.055599999999715e-05, 3.974999999999812e-05, 4.004199999999708e-05, 3.9945000000003034e-05, 4.002799999999751e-05, 3.9846999999999105e-05, 3.997199999999923e-05, 4.001399999999794e-05, 4.075000000000259e-05, 4.055600000000062e-05, 4.0124999999998495e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.718" endtime="20201117 14:42:26.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.714" endtime="20201117 14:42:26.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.723" endtime="20201117 14:42:26.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.727" endtime="20201117 14:42:26.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.725" endtime="20201117 14:42:26.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.722" endtime="20201117 14:42:26.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.357" endtime="20201117 14:42:26.747"></status>
</kw>
<msg timestamp="20201117 14:42:26.747" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.756" endtime="20201117 14:42:26.772"></status>
</kw>
<msg timestamp="20201117 14:42:26.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.754" endtime="20201117 14:42:26.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.774" endtime="20201117 14:42:26.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.776" endtime="20201117 14:42:26.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.752" endtime="20201117 14:42:26.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.750" endtime="20201117 14:42:26.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.785" endtime="20201117 14:42:27.072"></status>
</kw>
<msg timestamp="20201117 14:42:27.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.784" endtime="20201117 14:42:27.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.077" endtime="20201117 14:42:27.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.085" endtime="20201117 14:42:27.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.781" endtime="20201117 14:42:27.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.779" endtime="20201117 14:42:27.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.092" level="INFO">${RESULT} = [{'time': 0.021567861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.043000000000102e-05, 'source_diff': 4.043000000000102e-05}, {'time': 0.021609847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.088" endtime="20201117 14:42:27.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.105" level="INFO">${ACCURACY} = {'source_diff': [4.043000000000102e-05, 4.0055000000000646e-05, 4.0082999999999785e-05, 3.9790999999997356e-05, 3.991599999999748e-05, 3.9902999999997385e-05, 4.0055000000000646e-05, 4.068100000000074...</msg>
<status status="PASS" starttime="20201117 14:42:27.093" endtime="20201117 14:42:27.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.110" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.109" endtime="20201117 14:42:27.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.113" level="INFO">VALUE: [4.043000000000102e-05, 4.0055000000000646e-05, 4.0082999999999785e-05, 3.9790999999997356e-05, 3.991599999999748e-05, 3.9902999999997385e-05, 4.0055000000000646e-05, 4.0681000000000744e-05, 4.0097000000002825e-05, 3.9875000000001715e-05, 3.9930999999999994e-05, 4.0681000000000744e-05, 3.976399999999769e-05, 4.0639000000002035e-05, 4.005600000000012e-05, 4.055599999999715e-05, 3.981999999999944e-05, 3.9930999999999994e-05, 4.0625000000002465e-05, 4.007000000000316e-05, 3.998600000000227e-05, 3.9874999999998245e-05, 4.058399999999976e-05, 3.981999999999944e-05, 3.997199999999923e-05, 4.0653000000001605e-05, 3.984800000000205e-05, 4.055600000000062e-05, 3.992999999999705e-05, 3.9805000000000396e-05, 3.995799999999966e-05, 3.984800000000205e-05, 3.9832999999999535e-05, 4.0347000000003075e-05, 4.0082999999999785e-05, 4.069400000000084e-05, 3.9875000000001715e-05, 4.0096999999999355e-05, 4.0096999999999355e-05, 4.0624999999998995e-05, 3.999999999999837e-05, 4.0583000000000286e-05, 4.076400000000216e-05, 3.999999999999837e-05, 4.075000000000259e-05, 3.9805000000000396e-05, 4.070800000000041e-05, 4.0082999999999785e-05, 3.99720000000027e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.111" endtime="20201117 14:42:27.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.107" endtime="20201117 14:42:27.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.116" endtime="20201117 14:42:27.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.119" endtime="20201117 14:42:27.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.118" endtime="20201117 14:42:27.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.114" endtime="20201117 14:42:27.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.748" endtime="20201117 14:42:27.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.355" endtime="20201117 14:42:27.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.354" endtime="20201117 14:42:27.140"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.143" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.151" endtime="20201117 14:42:27.167"></status>
</kw>
<msg timestamp="20201117 14:42:27.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.149" endtime="20201117 14:42:27.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.168" endtime="20201117 14:42:27.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.171" endtime="20201117 14:42:27.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.147" endtime="20201117 14:42:27.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.144" endtime="20201117 14:42:27.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.180" endtime="20201117 14:42:27.466"></status>
</kw>
<msg timestamp="20201117 14:42:27.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024412708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.178" endtime="20201117 14:42:27.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024412708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024454028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.470" endtime="20201117 14:42:27.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.478" endtime="20201117 14:42:27.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.176" endtime="20201117 14:42:27.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.174" endtime="20201117 14:42:27.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.486" level="INFO">${RESULT} = [{'time': 0.024454028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.131999999999747e-05, 'source_diff': 4.131999999999747e-05}, {'time': 0.024498014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.482" endtime="20201117 14:42:27.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.499" level="INFO">${ACCURACY} = {'source_diff': [4.131999999999747e-05, 4.1666999999998705e-05, 4.097200000000023e-05, 4.083400000000001e-05, 4.175000000000012e-05, 4.107000000000069e-05, 4.0945000000000564e-05, 4.0902999999998385e-...</msg>
<status status="PASS" starttime="20201117 14:42:27.487" endtime="20201117 14:42:27.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.503" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.502" endtime="20201117 14:42:27.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.506" level="INFO">VALUE: [4.131999999999747e-05, 4.1666999999998705e-05, 4.097200000000023e-05, 4.083400000000001e-05, 4.175000000000012e-05, 4.107000000000069e-05, 4.0945000000000564e-05, 4.0902999999998385e-05, 4.0917000000001424e-05, 4.086199999999915e-05, 4.159800000000033e-05, 4.172199999999751e-05, 4.1624999999999995e-05, 4.1695000000001314e-05, 4.091599999999848e-05, 4.1583000000001286e-05, 4.1054999999998176e-05, 4.1610999999996956e-05, 4.0790999999998356e-05, 4.170799999999794e-05, 4.076399999999869e-05, 4.1597000000000856e-05, 4.107000000000069e-05, 4.1568999999998246e-05, 4.175000000000012e-05, 4.097199999999676e-05, 4.094400000000109e-05, 4.094400000000109e-05, 4.102799999999851e-05, 4.1361000000000175e-05, 4.1597000000000856e-05, 4.1388999999999315e-05, 4.105600000000112e-05, 4.1083000000000786e-05, 4.09859999999998e-05, 4.1681000000001744e-05, 4.1597000000000856e-05, 4.072199999999998e-05, 4.1110999999999925e-05, 4.170800000000141e-05, 4.105600000000112e-05, 4.101399999999894e-05, 4.108400000000026e-05, 4.0875000000002715e-05, 4.0931000000000994e-05, 4.0860999999999675e-05, 4.1110999999999925e-05, 4.099999999999937e-05, 4.154200000000205e-05, 4.0931000000000994e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.505" endtime="20201117 14:42:27.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.500" endtime="20201117 14:42:27.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.509" endtime="20201117 14:42:27.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.513" endtime="20201117 14:42:27.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.511" endtime="20201117 14:42:27.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.507" endtime="20201117 14:42:27.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.143" endtime="20201117 14:42:27.533"></status>
</kw>
<msg timestamp="20201117 14:42:27.533" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.542" endtime="20201117 14:42:27.558"></status>
</kw>
<msg timestamp="20201117 14:42:27.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.540" endtime="20201117 14:42:27.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.560" endtime="20201117 14:42:27.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.562" endtime="20201117 14:42:27.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.537" endtime="20201117 14:42:27.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.535" endtime="20201117 14:42:27.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.571" endtime="20201117 14:42:27.856"></status>
</kw>
<msg timestamp="20201117 14:42:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.570" endtime="20201117 14:42:27.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.861" endtime="20201117 14:42:27.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.869" endtime="20201117 14:42:27.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.567" endtime="20201117 14:42:27.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.565" endtime="20201117 14:42:27.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.876" level="INFO">${RESULT} = [{'time': 0.021674208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.094400000000109e-05, 'source_diff': 4.094400000000109e-05}, {'time': 0.021718222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.873" endtime="20201117 14:42:27.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.889" level="INFO">${ACCURACY} = {'source_diff': [4.094400000000109e-05, 4.166599999999923e-05, 4.175000000000012e-05, 4.1611000000000425e-05, 4.0805000000001396e-05, 4.095800000000066e-05, 4.1055000000001646e-05, 4.1375000000003215e...</msg>
<status status="PASS" starttime="20201117 14:42:27.877" endtime="20201117 14:42:27.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.894" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.893" endtime="20201117 14:42:27.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.896" level="INFO">VALUE: [4.094400000000109e-05, 4.166599999999923e-05, 4.175000000000012e-05, 4.1611000000000425e-05, 4.0805000000001396e-05, 4.095800000000066e-05, 4.1055000000001646e-05, 4.1375000000003215e-05, 4.0888999999998815e-05, 4.1110999999999925e-05, 4.1068999999997746e-05, 4.076399999999869e-05, 4.1083000000000786e-05, 4.1638999999999565e-05, 4.09859999999998e-05, 4.157000000000119e-05, 4.1610999999996956e-05, 4.145800000000116e-05, 4.170799999999794e-05, 4.132000000000094e-05, 4.0945000000000564e-05, 4.133400000000051e-05, 4.082000000000044e-05, 4.0860999999999675e-05, 4.158400000000076e-05, 4.081999999999697e-05, 4.130600000000137e-05, 4.0917000000001424e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.168000000000227e-05, 4.108400000000026e-05, 4.1374999999999745e-05, 4.170799999999794e-05, 4.1012999999999467e-05, 4.17920000000023e-05, 4.074999999999912e-05, 4.0762999999999217e-05, 4.176400000000316e-05, 4.1069000000001216e-05, 4.0833000000000536e-05, 4.1624999999999995e-05, 4.172200000000098e-05, 4.104200000000155e-05, 4.09859999999998e-05, 4.076400000000216e-05, 4.101399999999894e-05, 4.07920000000013e-05, 4.1638999999999565e-05, 4.097200000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.895" endtime="20201117 14:42:27.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.890" endtime="20201117 14:42:27.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.899" endtime="20201117 14:42:27.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.903" endtime="20201117 14:42:27.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.901" endtime="20201117 14:42:27.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.898" endtime="20201117 14:42:27.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.534" endtime="20201117 14:42:27.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.141" endtime="20201117 14:42:27.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.141" endtime="20201117 14:42:27.924"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.926" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.934" endtime="20201117 14:42:27.950"></status>
</kw>
<msg timestamp="20201117 14:42:27.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.933" endtime="20201117 14:42:27.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.952" endtime="20201117 14:42:27.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.954" endtime="20201117 14:42:27.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.930" endtime="20201117 14:42:27.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.928" endtime="20201117 14:42:27.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.963" endtime="20201117 14:42:28.250"></status>
</kw>
<msg timestamp="20201117 14:42:28.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024180389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.962" endtime="20201117 14:42:28.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024180389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024223139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.254" endtime="20201117 14:42:28.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.263" endtime="20201117 14:42:28.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.959" endtime="20201117 14:42:28.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.957" endtime="20201117 14:42:28.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.269" level="INFO">${RESULT} = [{'time': 0.024223139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.275000000000112e-05, 'source_diff': 4.275000000000112e-05}, {'time': 0.024267069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.266" endtime="20201117 14:42:28.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.284" level="INFO">${ACCURACY} = {'source_diff': [4.275000000000112e-05, 4.2096999999997886e-05, 4.19860000000008e-05, 4.272200000000198e-05, 4.176300000000022e-05, 4.201399999999994e-05, 4.2069000000002216e-05, 4.201399999999994e-05...</msg>
<status status="PASS" starttime="20201117 14:42:28.270" endtime="20201117 14:42:28.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.289" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.288" endtime="20201117 14:42:28.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.291" level="INFO">VALUE: [4.275000000000112e-05, 4.2096999999997886e-05, 4.19860000000008e-05, 4.272200000000198e-05, 4.176300000000022e-05, 4.201399999999994e-05, 4.2069000000002216e-05, 4.201399999999994e-05, 4.182000000000144e-05, 4.2069000000002216e-05, 4.2639000000000565e-05, 4.2582999999998816e-05, 4.201399999999994e-05, 4.2541000000000107e-05, 4.1861000000000675e-05, 4.194399999999862e-05, 4.177799999999926e-05, 4.1819000000001966e-05, 4.2416999999999455e-05, 4.2694999999998845e-05, 4.1832999999998066e-05, 4.2069000000002216e-05, 4.2666999999999705e-05, 4.270799999999894e-05, 4.177799999999926e-05, 4.202800000000298e-05, 4.2361000000001175e-05, 4.272199999999851e-05, 4.1930999999998525e-05, 4.2610999999997956e-05, 4.258399999999829e-05, 4.2695000000002314e-05, 4.2709000000001884e-05, 4.200000000000037e-05, 4.181999999999797e-05, 4.182000000000144e-05, 4.263800000000109e-05, 4.1973000000000704e-05, 4.192999999999905e-05, 4.1903000000002855e-05, 4.26799999999998e-05, 4.201300000000047e-05, 4.26799999999998e-05, 4.266600000000023e-05, 4.272199999999851e-05, 4.2653000000000135e-05, 4.200000000000037e-05, 4.19860000000008e-05, 4.2652999999996666e-05, 4.2068999999998746e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.290" endtime="20201117 14:42:28.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.285" endtime="20201117 14:42:28.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.294" endtime="20201117 14:42:28.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.297" endtime="20201117 14:42:28.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.296" endtime="20201117 14:42:28.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.293" endtime="20201117 14:42:28.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.927" endtime="20201117 14:42:28.318"></status>
</kw>
<msg timestamp="20201117 14:42:28.318" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.326" endtime="20201117 14:42:28.342"></status>
</kw>
<msg timestamp="20201117 14:42:28.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.325" endtime="20201117 14:42:28.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.343" endtime="20201117 14:42:28.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.346" endtime="20201117 14:42:28.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.322" endtime="20201117 14:42:28.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.320" endtime="20201117 14:42:28.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.355" endtime="20201117 14:42:28.642"></status>
</kw>
<msg timestamp="20201117 14:42:28.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.354" endtime="20201117 14:42:28.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.646" endtime="20201117 14:42:28.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.654" endtime="20201117 14:42:28.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.351" endtime="20201117 14:42:28.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.349" endtime="20201117 14:42:28.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.661" level="INFO">${RESULT} = [{'time': 0.021622056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2389000000000315e-05, 'source_diff': 4.2389000000000315e-05}, {'time': 0.021666083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:28.657" endtime="20201117 14:42:28.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.674" level="INFO">${ACCURACY} = {'source_diff': [4.2389000000000315e-05, 4.2040999999999606e-05, 4.1972999999997235e-05, 4.202799999999951e-05, 4.1902999999999385e-05, 4.266600000000023e-05, 4.177799999999926e-05, 4.207000000000169e...</msg>
<status status="PASS" starttime="20201117 14:42:28.662" endtime="20201117 14:42:28.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.679" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.678" endtime="20201117 14:42:28.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.681" level="INFO">VALUE: [4.2389000000000315e-05, 4.2040999999999606e-05, 4.1972999999997235e-05, 4.202799999999951e-05, 4.1902999999999385e-05, 4.266600000000023e-05, 4.177799999999926e-05, 4.207000000000169e-05, 4.1861000000000675e-05, 4.1860999999997206e-05, 4.2054999999999176e-05, 4.194399999999862e-05, 4.2610999999997956e-05, 4.2068999999998746e-05, 4.1833000000001536e-05, 4.2583000000002286e-05, 4.2554999999999676e-05, 4.269399999999937e-05, 4.273600000000155e-05, 4.2625000000000995e-05, 4.183400000000101e-05, 4.1875000000000245e-05, 4.1818999999998496e-05, 4.200000000000037e-05, 4.2666999999999705e-05, 4.1902999999999385e-05, 4.273600000000155e-05, 4.2639000000000565e-05, 4.255599999999915e-05, 4.207000000000169e-05, 4.195800000000166e-05, 4.1846999999997636e-05, 4.2694999999998845e-05, 4.2375000000000745e-05, 4.2082999999998316e-05, 4.2653000000000135e-05, 4.254199999999958e-05, 4.1916999999998955e-05, 4.258399999999829e-05, 4.2694999999998845e-05, 4.1888999999999815e-05, 4.182000000000144e-05, 4.1846999999997636e-05, 4.2166999999999205e-05, 4.269399999999937e-05, 4.1888999999999815e-05, 4.266600000000023e-05, 4.2110999999997456e-05, 4.269399999999937e-05, 4.266600000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.680" endtime="20201117 14:42:28.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.675" endtime="20201117 14:42:28.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.684" endtime="20201117 14:42:28.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.688" endtime="20201117 14:42:28.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.686" endtime="20201117 14:42:28.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.683" endtime="20201117 14:42:28.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.319" endtime="20201117 14:42:28.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.925" endtime="20201117 14:42:28.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.924" endtime="20201117 14:42:28.709"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.711" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.720" endtime="20201117 14:42:28.736"></status>
</kw>
<msg timestamp="20201117 14:42:28.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.718" endtime="20201117 14:42:28.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.737" endtime="20201117 14:42:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.740" endtime="20201117 14:42:28.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.715" endtime="20201117 14:42:28.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.713" endtime="20201117 14:42:28.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.749" endtime="20201117 14:42:29.036"></status>
</kw>
<msg timestamp="20201117 14:42:29.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.747" endtime="20201117 14:42:29.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.040" endtime="20201117 14:42:29.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.048" endtime="20201117 14:42:29.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.745" endtime="20201117 14:42:29.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.743" endtime="20201117 14:42:29.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.055" level="INFO">${RESULT} = [{'time': 0.024956486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.376399999999822e-05, 'source_diff': 4.376399999999822e-05}, {'time': 0.025001486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:29.051" endtime="20201117 14:42:29.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.068" level="INFO">${ACCURACY} = {'source_diff': [4.376399999999822e-05, 4.2875000000001245e-05, 4.3624999999998526e-05, 4.286199999999768e-05, 4.2889000000000815e-05, 4.298599999999833e-05, 4.3082999999999316e-05, 4.3667000000000705...</msg>
<status status="PASS" starttime="20201117 14:42:29.056" endtime="20201117 14:42:29.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.073" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.072" endtime="20201117 14:42:29.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.075" level="INFO">VALUE: [4.376399999999822e-05, 4.2875000000001245e-05, 4.3624999999998526e-05, 4.286199999999768e-05, 4.2889000000000815e-05, 4.298599999999833e-05, 4.3082999999999316e-05, 4.3667000000000705e-05, 4.304200000000008e-05, 4.279099999999689e-05, 4.3681000000000275e-05, 4.3681000000000275e-05, 4.284800000000158e-05, 4.308400000000226e-05, 4.3652999999997666e-05, 4.29999999999979e-05, 4.308400000000226e-05, 4.3667000000000705e-05, 4.284799999999811e-05, 4.276399999999722e-05, 4.2888999999997346e-05, 4.374999999999865e-05, 4.2986999999997805e-05, 4.3110999999998456e-05, 4.288799999999787e-05, 4.36800000000008e-05, 4.3555000000000677e-05, 4.370799999999994e-05, 4.301400000000094e-05, 4.3624999999998526e-05, 4.3167000000000205e-05, 4.301400000000094e-05, 4.2819000000002966e-05, 4.355499999999721e-05, 4.3082999999999316e-05, 4.2889000000000815e-05, 4.370799999999994e-05, 4.279199999999983e-05, 4.2860999999998206e-05, 4.3110999999998456e-05, 4.3652999999997666e-05, 4.274999999999765e-05, 4.28059999999994e-05, 4.3681000000000275e-05, 4.3610999999998956e-05, 4.369400000000037e-05, 4.2833000000002536e-05, 4.297200000000223e-05, 4.309800000000183e-05, 4.300000000000137e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.074" endtime="20201117 14:42:29.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.069" endtime="20201117 14:42:29.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.078" endtime="20201117 14:42:29.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.082" endtime="20201117 14:42:29.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.080" endtime="20201117 14:42:29.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.077" endtime="20201117 14:42:29.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.712" endtime="20201117 14:42:29.103"></status>
</kw>
<msg timestamp="20201117 14:42:29.103" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.111" endtime="20201117 14:42:29.129"></status>
</kw>
<msg timestamp="20201117 14:42:29.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.110" endtime="20201117 14:42:29.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.130" endtime="20201117 14:42:29.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.133" endtime="20201117 14:42:29.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.107" endtime="20201117 14:42:29.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.105" endtime="20201117 14:42:29.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.142" endtime="20201117 14:42:29.428"></status>
</kw>
<msg timestamp="20201117 14:42:29.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02245825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02250125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:29.140" endtime="20201117 14:42:29.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02245825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02250125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:29.432" endtime="20201117 14:42:29.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.440" endtime="20201117 14:42:29.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.138" endtime="20201117 14:42:29.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.136" endtime="20201117 14:42:29.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.447" level="INFO">${RESULT} = [{'time': 0.02250125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.300000000000137e-05, 'source_diff': 4.300000000000137e-05}, {'time': 0.022546292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:29.444" endtime="20201117 14:42:29.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.460" level="INFO">${ACCURACY} = {'source_diff': [4.300000000000137e-05, 4.298599999999833e-05, 4.3625000000001996e-05, 4.2903000000000385e-05, 4.2875000000001245e-05, 4.281999999999897e-05, 4.276400000000069e-05, 4.2903000000000385e...</msg>
<status status="PASS" starttime="20201117 14:42:29.448" endtime="20201117 14:42:29.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.465" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.464" endtime="20201117 14:42:29.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.467" level="INFO">VALUE: [4.300000000000137e-05, 4.298599999999833e-05, 4.3625000000001996e-05, 4.2903000000000385e-05, 4.2875000000001245e-05, 4.281999999999897e-05, 4.276400000000069e-05, 4.2903000000000385e-05, 4.3667000000000705e-05, 4.281999999999897e-05, 4.358400000000276e-05, 4.3389000000001315e-05, 4.29860000000018e-05, 4.3111000000001926e-05, 4.2930999999999525e-05, 4.309800000000183e-05, 4.2903000000000385e-05, 4.358399999999929e-05, 4.304200000000008e-05, 4.3680999999996806e-05, 4.283400000000201e-05, 4.275000000000112e-05, 4.301300000000147e-05, 4.2875000000001245e-05, 4.367999999999733e-05, 4.288799999999787e-05, 4.369400000000037e-05, 4.2818999999999496e-05, 4.3569000000000246e-05, 4.277700000000079e-05, 4.297199999999876e-05, 4.3610999999998956e-05, 4.297199999999876e-05, 4.2874999999997776e-05, 4.3569000000000246e-05, 4.294399999999962e-05, 4.301400000000094e-05, 4.301400000000094e-05, 4.283399999999854e-05, 4.28059999999994e-05, 4.291600000000048e-05, 4.2930999999999525e-05, 4.3096999999998886e-05, 4.3667000000000705e-05, 4.2944999999999095e-05, 4.370799999999994e-05, 4.3639000000001565e-05, 4.358399999999929e-05, 4.295799999999919e-05, 4.3055000000000176e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.466" endtime="20201117 14:42:29.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.461" endtime="20201117 14:42:29.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.474" endtime="20201117 14:42:29.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.478" endtime="20201117 14:42:29.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.476" endtime="20201117 14:42:29.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.473" endtime="20201117 14:42:29.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.104" endtime="20201117 14:42:29.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.710" endtime="20201117 14:42:29.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.709" endtime="20201117 14:42:29.499"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.501" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.510" endtime="20201117 14:42:29.526"></status>
</kw>
<msg timestamp="20201117 14:42:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.508" endtime="20201117 14:42:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.528" endtime="20201117 14:42:29.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.530" endtime="20201117 14:42:29.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.505" endtime="20201117 14:42:29.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.503" endtime="20201117 14:42:29.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.539" endtime="20201117 14:42:29.826"></status>
</kw>
<msg timestamp="20201117 14:42:29.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024276583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.538" endtime="20201117 14:42:29.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024276583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024320542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.830" endtime="20201117 14:42:29.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.838" endtime="20201117 14:42:29.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.535" endtime="20201117 14:42:29.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.534" endtime="20201117 14:42:29.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.845" level="INFO">${RESULT} = [{'time': 0.024320542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3958999999999665e-05, 'source_diff': 4.3958999999999665e-05}, {'time': 0.024366556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:29.842" endtime="20201117 14:42:29.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.860" level="INFO">${ACCURACY} = {'source_diff': [4.3958999999999665e-05, 4.404200000000108e-05, 4.4610999999999956e-05, 4.407000000000022e-05, 4.455600000000115e-05, 4.4653000000002135e-05, 4.402799999999804e-05, 4.4374999999999276e...</msg>
<status status="PASS" starttime="20201117 14:42:29.846" endtime="20201117 14:42:29.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.865" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.864" endtime="20201117 14:42:29.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.867" level="INFO">VALUE: [4.3958999999999665e-05, 4.404200000000108e-05, 4.4610999999999956e-05, 4.407000000000022e-05, 4.455600000000115e-05, 4.4653000000002135e-05, 4.402799999999804e-05, 4.4374999999999276e-05, 4.441599999999851e-05, 4.467999999999833e-05, 4.400000000000237e-05, 4.459799999999986e-05, 4.390200000000191e-05, 4.402699999999857e-05, 4.452700000000254e-05, 4.388799999999887e-05, 4.465199999999919e-05, 4.3860999999999206e-05, 4.395800000000019e-05, 4.377699999999832e-05, 4.474999999999965e-05, 4.3889000000001815e-05, 4.4555000000001677e-05, 4.377800000000126e-05, 4.381999999999997e-05, 4.4610999999999956e-05, 4.4374999999999276e-05, 4.470799999999747e-05, 4.3931000000000525e-05, 4.4610999999999956e-05, 4.3874999999998776e-05, 4.4569000000001247e-05, 4.3846999999999636e-05, 4.384799999999911e-05, 4.4597000000000386e-05, 4.3945000000000095e-05, 4.4374999999999276e-05, 4.4695000000000845e-05, 4.4624999999999526e-05, 4.404200000000108e-05, 4.457000000000072e-05, 4.404199999999761e-05, 4.465199999999919e-05, 4.459799999999986e-05, 4.39999999999989e-05, 4.400000000000237e-05, 4.3737000000002024e-05, 4.402800000000151e-05, 4.3903000000001385e-05, 4.377700000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.866" endtime="20201117 14:42:29.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.861" endtime="20201117 14:42:29.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.871" endtime="20201117 14:42:29.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.874" endtime="20201117 14:42:29.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.872" endtime="20201117 14:42:29.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.869" endtime="20201117 14:42:29.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.502" endtime="20201117 14:42:29.895"></status>
</kw>
<msg timestamp="20201117 14:42:29.895" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.903" endtime="20201117 14:42:29.919"></status>
</kw>
<msg timestamp="20201117 14:42:29.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.902" endtime="20201117 14:42:29.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.920" endtime="20201117 14:42:29.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.923" endtime="20201117 14:42:29.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.899" endtime="20201117 14:42:29.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.897" endtime="20201117 14:42:29.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.932" endtime="20201117 14:42:30.218"></status>
</kw>
<msg timestamp="20201117 14:42:30.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.930" endtime="20201117 14:42:30.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.222" endtime="20201117 14:42:30.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.230" endtime="20201117 14:42:30.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.928" endtime="20201117 14:42:30.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.926" endtime="20201117 14:42:30.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.237" level="INFO">${RESULT} = [{'time': 0.021694722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4583000000000816e-05, 'source_diff': 4.4583000000000816e-05}, {'time': 0.021740722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:30.233" endtime="20201117 14:42:30.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.250" level="INFO">${ACCURACY} = {'source_diff': [4.4583000000000816e-05, 4.376400000000169e-05, 4.467999999999833e-05, 4.4638999999999096e-05, 4.4666999999998236e-05, 4.4110999999999456e-05, 4.4639000000002566e-05, 4.390300000000138...</msg>
<status status="PASS" starttime="20201117 14:42:30.238" endtime="20201117 14:42:30.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.255" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.254" endtime="20201117 14:42:30.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.257" level="INFO">VALUE: [4.4583000000000816e-05, 4.376400000000169e-05, 4.467999999999833e-05, 4.4638999999999096e-05, 4.4666999999998236e-05, 4.4110999999999456e-05, 4.4639000000002566e-05, 4.3903000000001385e-05, 4.4653000000002135e-05, 4.4652999999998666e-05, 4.4653000000002135e-05, 4.3846999999999636e-05, 4.4610999999999956e-05, 4.416599999999826e-05, 4.3931000000000525e-05, 4.4680999999997806e-05, 4.3903000000001385e-05, 4.469400000000137e-05, 4.401399999999847e-05, 4.408399999999979e-05, 4.4069000000000746e-05, 4.457000000000072e-05, 4.379200000000083e-05, 4.4694999999997376e-05, 4.473600000000008e-05, 4.4666999999998236e-05, 4.4722999999999985e-05, 4.406899999999728e-05, 4.379099999999789e-05, 4.402699999999857e-05, 4.456899999999778e-05, 4.46939999999979e-05, 4.465199999999919e-05, 4.3846999999999636e-05, 4.376400000000169e-05, 4.376400000000169e-05, 4.3903000000001385e-05, 4.401399999999847e-05, 4.473600000000008e-05, 4.377800000000126e-05, 4.376399999999822e-05, 4.401399999999847e-05, 4.400000000000237e-05, 4.400000000000237e-05, 4.376399999999822e-05, 4.3846999999999636e-05, 4.4569000000001247e-05, 4.452799999999854e-05, 4.377800000000126e-05, 4.4138999999998596e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.256" endtime="20201117 14:42:30.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.252" endtime="20201117 14:42:30.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.261" endtime="20201117 14:42:30.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.264" endtime="20201117 14:42:30.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.262" endtime="20201117 14:42:30.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.259" endtime="20201117 14:42:30.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.895" endtime="20201117 14:42:30.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.500" endtime="20201117 14:42:30.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.499" endtime="20201117 14:42:30.285"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.287" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.296" endtime="20201117 14:42:30.312"></status>
</kw>
<msg timestamp="20201117 14:42:30.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.294" endtime="20201117 14:42:30.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.313" endtime="20201117 14:42:30.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.316" endtime="20201117 14:42:30.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.292" endtime="20201117 14:42:30.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.289" endtime="20201117 14:42:30.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.324" endtime="20201117 14:42:30.612"></status>
</kw>
<msg timestamp="20201117 14:42:30.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024069236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.323" endtime="20201117 14:42:30.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024069236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.616" endtime="20201117 14:42:30.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.624" endtime="20201117 14:42:30.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.320" endtime="20201117 14:42:30.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.319" endtime="20201117 14:42:30.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.631" level="INFO">${RESULT} = [{'time': 0.024114569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.53329999999981e-05, 'source_diff': 4.53329999999981e-05}, {'time': 0.024162556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:30.628" endtime="20201117 14:42:30.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.645" level="INFO">${ACCURACY} = {'source_diff': [4.53329999999981e-05, 4.5653000000003136e-05, 4.554200000000258e-05, 4.476399999999922e-05, 4.4959000000000665e-05, 4.477799999999879e-05, 4.566599999999976e-05, 4.5125000000000026e-0...</msg>
<status status="PASS" starttime="20201117 14:42:30.632" endtime="20201117 14:42:30.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.649" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.648" endtime="20201117 14:42:30.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.652" level="INFO">VALUE: [4.53329999999981e-05, 4.5653000000003136e-05, 4.554200000000258e-05, 4.476399999999922e-05, 4.4959000000000665e-05, 4.477799999999879e-05, 4.566599999999976e-05, 4.5125000000000026e-05, 4.481899999999803e-05, 4.559699999999792e-05, 4.572200000000151e-05, 4.5125000000000026e-05, 4.555499999999921e-05, 4.505500000000218e-05, 4.562499999999706e-05, 4.4902999999998916e-05, 4.567999999999933e-05, 4.5652999999999666e-05, 4.5597000000001386e-05, 4.500000000000337e-05, 4.569400000000237e-05, 4.4861000000000206e-05, 4.5680999999998806e-05, 4.5069000000001747e-05, 4.505599999999818e-05, 4.570799999999847e-05, 4.572200000000151e-05, 4.5097000000000886e-05, 4.501400000000294e-05, 4.505600000000165e-05, 4.5694999999998376e-05, 4.556999999999825e-05, 4.557000000000172e-05, 4.49999999999999e-05, 4.5652999999999666e-05, 4.5681000000002275e-05, 4.4945000000001095e-05, 4.48060000000014e-05, 4.572200000000151e-05, 4.49999999999999e-05, 4.4902999999998916e-05, 4.5097000000000886e-05, 4.4888999999999346e-05, 4.504099999999914e-05, 4.474999999999965e-05, 4.5097000000000886e-05, 4.481899999999803e-05, 4.5625000000000526e-05, 4.569400000000237e-05, 4.559699999999792e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.650" endtime="20201117 14:42:30.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.646" endtime="20201117 14:42:30.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.655" endtime="20201117 14:42:30.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.658" endtime="20201117 14:42:30.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.657" endtime="20201117 14:42:30.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.653" endtime="20201117 14:42:30.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.288" endtime="20201117 14:42:30.679"></status>
</kw>
<msg timestamp="20201117 14:42:30.679" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.687" endtime="20201117 14:42:30.704"></status>
</kw>
<msg timestamp="20201117 14:42:30.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.686" endtime="20201117 14:42:30.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.705" endtime="20201117 14:42:30.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.708" endtime="20201117 14:42:30.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.683" endtime="20201117 14:42:30.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.681" endtime="20201117 14:42:30.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.717" endtime="20201117 14:42:31.002"></status>
</kw>
<msg timestamp="20201117 14:42:31.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.715" endtime="20201117 14:42:31.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.007" endtime="20201117 14:42:31.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.015" endtime="20201117 14:42:31.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.713" endtime="20201117 14:42:31.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.711" endtime="20201117 14:42:31.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.022" level="INFO">${RESULT} = [{'time': 0.021910319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5375000000000276e-05, 'source_diff': 4.5375000000000276e-05}, {'time': 0.021957292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:31.018" endtime="20201117 14:42:31.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.035" level="INFO">${ACCURACY} = {'source_diff': [4.5375000000000276e-05, 4.5111000000000456e-05, 4.4861000000000206e-05, 4.576400000000022e-05, 4.495799999999772e-05, 4.4973000000000235e-05, 4.4973000000000235e-05, 4.505600000000165...</msg>
<status status="PASS" starttime="20201117 14:42:31.023" endtime="20201117 14:42:31.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.040" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.039" endtime="20201117 14:42:31.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.042" level="INFO">VALUE: [4.5375000000000276e-05, 4.5111000000000456e-05, 4.4861000000000206e-05, 4.576400000000022e-05, 4.495799999999772e-05, 4.4973000000000235e-05, 4.4973000000000235e-05, 4.505600000000165e-05, 4.507000000000122e-05, 4.504200000000208e-05, 4.4902999999998916e-05, 4.575000000000065e-05, 4.479100000000236e-05, 4.506899999999828e-05, 4.480499999999846e-05, 4.4861000000000206e-05, 4.572199999999804e-05, 4.555499999999921e-05, 4.56800000000028e-05, 4.4874999999999776e-05, 4.4945000000001095e-05, 4.566599999999976e-05, 4.574999999999718e-05, 4.492999999999858e-05, 4.5569000000002247e-05, 4.474999999999965e-05, 4.494400000000162e-05, 4.502799999999904e-05, 4.498600000000033e-05, 4.5681000000002275e-05, 4.4861000000000206e-05, 4.558299999999835e-05, 4.5695000000001845e-05, 4.5611000000000956e-05, 4.5139000000003066e-05, 4.476399999999922e-05, 4.4709000000000415e-05, 4.562499999999706e-05, 4.4973000000000235e-05, 4.5680999999998806e-05, 4.495800000000119e-05, 4.504199999999861e-05, 4.4861000000000206e-05, 4.5652999999999666e-05, 4.555499999999921e-05, 4.481899999999803e-05, 4.555600000000215e-05, 4.504200000000208e-05, 4.536099999999724e-05, 4.5083000000001316e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.041" endtime="20201117 14:42:31.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.036" endtime="20201117 14:42:31.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.045" endtime="20201117 14:42:31.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.049" endtime="20201117 14:42:31.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.047" endtime="20201117 14:42:31.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.044" endtime="20201117 14:42:31.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.680" endtime="20201117 14:42:31.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.286" endtime="20201117 14:42:31.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.285" endtime="20201117 14:42:31.070"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.072" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.080" endtime="20201117 14:42:31.097"></status>
</kw>
<msg timestamp="20201117 14:42:31.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.079" endtime="20201117 14:42:31.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.099" endtime="20201117 14:42:31.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.101" endtime="20201117 14:42:31.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.076" endtime="20201117 14:42:31.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.074" endtime="20201117 14:42:31.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.110" endtime="20201117 14:42:31.396"></status>
</kw>
<msg timestamp="20201117 14:42:31.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.109" endtime="20201117 14:42:31.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.400" endtime="20201117 14:42:31.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.408" endtime="20201117 14:42:31.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.106" endtime="20201117 14:42:31.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.104" endtime="20201117 14:42:31.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.416" level="INFO">${RESULT} = [{'time': 0.024535014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.627800000000029e-05, 'source_diff': 4.627800000000029e-05}, {'time': 0.024582944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.412" endtime="20201117 14:42:31.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.431" level="INFO">${ACCURACY} = {'source_diff': [4.627800000000029e-05, 4.599999999999743e-05, 4.598600000000133e-05, 4.673600000000208e-05, 4.602700000000057e-05, 4.597200000000176e-05, 4.601400000000047e-05, 4.591600000000001e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:31.417" endtime="20201117 14:42:31.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.435" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.434" endtime="20201117 14:42:31.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.438" level="INFO">VALUE: [4.627800000000029e-05, 4.599999999999743e-05, 4.598600000000133e-05, 4.673600000000208e-05, 4.602700000000057e-05, 4.597200000000176e-05, 4.601400000000047e-05, 4.591600000000001e-05, 4.659699999999892e-05, 4.594399999999915e-05, 4.599999999999743e-05, 4.594399999999915e-05, 4.6389000000000846e-05, 4.6611000000001956e-05, 4.5875000000000776e-05, 4.661099999999849e-05, 4.609699999999842e-05, 4.581899999999903e-05, 4.584699999999817e-05, 4.5875000000000776e-05, 4.6125000000001026e-05, 4.6653000000000666e-05, 4.5861000000001206e-05, 4.602800000000004e-05, 4.673599999999861e-05, 4.58199999999985e-05, 4.6680999999999806e-05, 4.6694999999999376e-05, 4.595800000000219e-05, 4.611099999999799e-05, 4.665199999999772e-05, 4.6667000000000236e-05, 4.6736999999998086e-05, 4.6639000000001096e-05, 4.63879999999979e-05, 4.591600000000001e-05, 4.604100000000014e-05, 4.662499999999806e-05, 4.606899999999928e-05, 4.594399999999915e-05, 4.5889000000000346e-05, 4.604100000000014e-05, 4.670799999999947e-05, 4.6013999999997e-05, 4.577799999999979e-05, 4.6083000000002317e-05, 4.5916999999999486e-05, 4.5861000000001206e-05, 4.612499999999756e-05, 4.606899999999928e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.436" endtime="20201117 14:42:31.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.432" endtime="20201117 14:42:31.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.441" endtime="20201117 14:42:31.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.444" endtime="20201117 14:42:31.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.443" endtime="20201117 14:42:31.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.439" endtime="20201117 14:42:31.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.073" endtime="20201117 14:42:31.465"></status>
</kw>
<msg timestamp="20201117 14:42:31.465" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.473" endtime="20201117 14:42:31.490"></status>
</kw>
<msg timestamp="20201117 14:42:31.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.472" endtime="20201117 14:42:31.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.491" endtime="20201117 14:42:31.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.494" endtime="20201117 14:42:31.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.469" endtime="20201117 14:42:31.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.467" endtime="20201117 14:42:31.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.503" endtime="20201117 14:42:31.790"></status>
</kw>
<msg timestamp="20201117 14:42:31.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.502" endtime="20201117 14:42:31.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.794" endtime="20201117 14:42:31.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.802" endtime="20201117 14:42:31.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.499" endtime="20201117 14:42:31.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.498" endtime="20201117 14:42:31.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.809" level="INFO">${RESULT} = [{'time': 0.021772278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6180999999999306e-05, 'source_diff': 4.6180999999999306e-05}, {'time': 0.02182025, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:31.806" endtime="20201117 14:42:31.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.822" level="INFO">${ACCURACY} = {'source_diff': [4.6180999999999306e-05, 4.609699999999842e-05, 4.6667000000000236e-05, 4.661099999999849e-05, 4.6667000000000236e-05, 4.604199999999961e-05, 4.676299999999828e-05, 4.579199999999936e-...</msg>
<status status="PASS" starttime="20201117 14:42:31.810" endtime="20201117 14:42:31.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.827" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.826" endtime="20201117 14:42:31.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.829" level="INFO">VALUE: [4.6180999999999306e-05, 4.609699999999842e-05, 4.6667000000000236e-05, 4.661099999999849e-05, 4.6667000000000236e-05, 4.604199999999961e-05, 4.676299999999828e-05, 4.579199999999936e-05, 4.580599999999893e-05, 4.66529999999972e-05, 4.597199999999829e-05, 4.6680999999999806e-05, 4.659799999999839e-05, 4.6139000000000596e-05, 4.58060000000024e-05, 4.6639000000001096e-05, 4.576400000000022e-05, 4.666600000000076e-05, 4.5875000000000776e-05, 4.666600000000076e-05, 4.675000000000165e-05, 4.577700000000032e-05, 4.595799999999872e-05, 4.598600000000133e-05, 4.5973000000001235e-05, 4.656899999999978e-05, 4.658299999999935e-05, 4.651400000000097e-05, 4.658299999999935e-05, 4.659699999999892e-05, 4.6625000000001526e-05, 4.666600000000076e-05, 4.673600000000208e-05, 4.670799999999947e-05, 4.654199999999664e-05, 4.6125000000001026e-05, 4.6097000000001886e-05, 4.5902999999999916e-05, 4.601400000000047e-05, 4.608299999999885e-05, 4.605600000000265e-05, 4.60000000000009e-05, 4.5889000000000346e-05, 4.672199999999904e-05, 4.5889000000000346e-05, 4.609699999999842e-05, 4.586099999999774e-05, 4.66529999999972e-05, 4.658399999999882e-05, 4.6125000000001026e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.828" endtime="20201117 14:42:31.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.823" endtime="20201117 14:42:31.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.832" endtime="20201117 14:42:31.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.836" endtime="20201117 14:42:31.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.834" endtime="20201117 14:42:31.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.831" endtime="20201117 14:42:31.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.466" endtime="20201117 14:42:31.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.071" endtime="20201117 14:42:31.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.070" endtime="20201117 14:42:31.857"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.859" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.868" endtime="20201117 14:42:31.884"></status>
</kw>
<msg timestamp="20201117 14:42:31.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.866" endtime="20201117 14:42:31.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.885" endtime="20201117 14:42:31.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.887" endtime="20201117 14:42:31.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.863" endtime="20201117 14:42:31.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.861" endtime="20201117 14:42:31.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.896" endtime="20201117 14:42:32.183"></status>
</kw>
<msg timestamp="20201117 14:42:32.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.895" endtime="20201117 14:42:32.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.187" endtime="20201117 14:42:32.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.195" endtime="20201117 14:42:32.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.892" endtime="20201117 14:42:32.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.891" endtime="20201117 14:42:32.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.202" level="INFO">${RESULT} = [{'time': 0.024660417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709799999999889e-05, 'source_diff': 4.709799999999889e-05}, {'time': 0.024709403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:32.198" endtime="20201117 14:42:32.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.215" level="INFO">${ACCURACY} = {'source_diff': [4.709799999999889e-05, 4.697200000000276e-05, 4.676399999999775e-05, 4.773599999999961e-05, 4.6722999999998516e-05, 4.7695000000000376e-05, 4.6931000000000056e-05, 4.691600000000101e-...</msg>
<status status="PASS" starttime="20201117 14:42:32.203" endtime="20201117 14:42:32.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.220" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.219" endtime="20201117 14:42:32.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.222" level="INFO">VALUE: [4.709799999999889e-05, 4.697200000000276e-05, 4.676399999999775e-05, 4.773599999999961e-05, 4.6722999999998516e-05, 4.7695000000000376e-05, 4.6931000000000056e-05, 4.691600000000101e-05, 4.68329999999996e-05, 4.704200000000061e-05, 4.7681000000000806e-05, 4.705600000000018e-05, 4.766600000000176e-05, 4.697199999999929e-05, 4.68329999999996e-05, 4.758300000000035e-05, 4.677800000000079e-05, 4.7097000000002887e-05, 4.694400000000015e-05, 4.697199999999929e-05, 4.693000000000058e-05, 4.704200000000061e-05, 4.680500000000046e-05, 4.6889000000001346e-05, 4.673599999999861e-05, 4.705500000000071e-05, 4.7667000000001236e-05, 4.713800000000212e-05, 4.698599999999886e-05, 4.6903000000000916e-05, 4.706900000000028e-05, 4.7013999999998e-05, 4.701400000000147e-05, 4.698600000000233e-05, 4.6903000000000916e-05, 4.766699999999777e-05, 4.676399999999775e-05, 4.704200000000061e-05, 4.6917000000000486e-05, 4.6972999999998766e-05, 4.779100000000189e-05, 4.7139000000001596e-05, 4.706999999999975e-05, 4.690299999999745e-05, 4.6986999999998336e-05, 4.6958999999999196e-05, 4.706900000000028e-05, 4.694400000000015e-05, 4.767999999999786e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.221" endtime="20201117 14:42:32.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.216" endtime="20201117 14:42:32.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.225" endtime="20201117 14:42:32.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.228" endtime="20201117 14:42:32.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.227" endtime="20201117 14:42:32.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.223" endtime="20201117 14:42:32.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.860" endtime="20201117 14:42:32.250"></status>
</kw>
<msg timestamp="20201117 14:42:32.250" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.258" endtime="20201117 14:42:32.273"></status>
</kw>
<msg timestamp="20201117 14:42:32.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.256" endtime="20201117 14:42:32.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.275" endtime="20201117 14:42:32.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.278" endtime="20201117 14:42:32.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.254" endtime="20201117 14:42:32.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.252" endtime="20201117 14:42:32.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.287" endtime="20201117 14:42:32.575"></status>
</kw>
<msg timestamp="20201117 14:42:32.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.285" endtime="20201117 14:42:32.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.579" endtime="20201117 14:42:32.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.587" endtime="20201117 14:42:32.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.283" endtime="20201117 14:42:32.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.281" endtime="20201117 14:42:32.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.594" level="INFO">${RESULT} = [{'time': 0.022179986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.769399999999743e-05, 'source_diff': 4.769399999999743e-05}, {'time': 0.022229, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:32.590" endtime="20201117 14:42:32.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.607" level="INFO">${ACCURACY} = {'source_diff': [4.769399999999743e-05, 4.686099999999874e-05, 4.762499999999906e-05, 4.7611000000002957e-05, 4.690299999999745e-05, 4.6889000000001346e-05, 4.770800000000047e-05, 4.7667000000001236e-...</msg>
<status status="PASS" starttime="20201117 14:42:32.594" endtime="20201117 14:42:32.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.612" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.610" endtime="20201117 14:42:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.614" level="INFO">VALUE: [4.769399999999743e-05, 4.686099999999874e-05, 4.762499999999906e-05, 4.7611000000002957e-05, 4.690299999999745e-05, 4.6889000000001346e-05, 4.770800000000047e-05, 4.7667000000001236e-05, 4.6861000000002206e-05, 4.687499999999831e-05, 4.7667000000001236e-05, 4.761199999999896e-05, 4.704200000000061e-05, 4.706999999999975e-05, 4.676399999999775e-05, 4.6736999999998086e-05, 4.676400000000122e-05, 4.702800000000104e-05, 4.684799999999864e-05, 4.759800000000286e-05, 4.677699999999785e-05, 4.699999999999843e-05, 4.749999999999893e-05, 4.762499999999906e-05, 4.698599999999886e-05, 4.698599999999886e-05, 4.688899999999788e-05, 4.758300000000035e-05, 4.763899999999863e-05, 4.681900000000003e-05, 4.7153000000001166e-05, 4.697199999999929e-05, 4.708299999999985e-05, 4.699999999999843e-05, 4.756900000000078e-05, 4.7111000000002456e-05, 4.697199999999929e-05, 4.705600000000018e-05, 4.674999999999818e-05, 4.773599999999961e-05, 4.704200000000061e-05, 4.7681000000000806e-05, 4.758399999999982e-05, 4.6944999999999626e-05, 4.7111000000002456e-05, 4.752800000000154e-05, 4.704199999999714e-05, 4.7667000000001236e-05, 4.6903000000000916e-05, 4.679200000000036e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.613" endtime="20201117 14:42:32.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.608" endtime="20201117 14:42:32.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.617" endtime="20201117 14:42:32.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.621" endtime="20201117 14:42:32.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.619" endtime="20201117 14:42:32.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.616" endtime="20201117 14:42:32.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.251" endtime="20201117 14:42:32.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.858" endtime="20201117 14:42:32.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.857" endtime="20201117 14:42:32.642"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.644" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.652" endtime="20201117 14:42:32.669"></status>
</kw>
<msg timestamp="20201117 14:42:32.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.651" endtime="20201117 14:42:32.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.670" endtime="20201117 14:42:32.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.673" endtime="20201117 14:42:32.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.648" endtime="20201117 14:42:32.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.646" endtime="20201117 14:42:32.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.682" endtime="20201117 14:42:32.969"></status>
</kw>
<msg timestamp="20201117 14:42:32.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024104167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024152708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.680" endtime="20201117 14:42:32.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024104167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024152708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.973" endtime="20201117 14:42:32.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.981" endtime="20201117 14:42:32.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.678" endtime="20201117 14:42:32.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.676" endtime="20201117 14:42:32.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.988" level="INFO">${RESULT} = [{'time': 0.024152708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.854099999999917e-05, 'source_diff': 4.854099999999917e-05}, {'time': 0.024202708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:32.984" endtime="20201117 14:42:32.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.003" level="INFO">${ACCURACY} = {'source_diff': [4.854099999999917e-05, 4.797200000000029e-05, 4.805500000000171e-05, 4.873600000000061e-05, 4.781900000000103e-05, 4.863899999999963e-05, 4.8013999999999e-05, 4.866699999999877e-05, 4...</msg>
<status status="PASS" starttime="20201117 14:42:32.989" endtime="20201117 14:42:33.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.007" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.006" endtime="20201117 14:42:33.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.010" level="INFO">VALUE: [4.854099999999917e-05, 4.797200000000029e-05, 4.805500000000171e-05, 4.873600000000061e-05, 4.781900000000103e-05, 4.863899999999963e-05, 4.8013999999999e-05, 4.866699999999877e-05, 4.7945000000000626e-05, 4.795800000000072e-05, 4.791600000000201e-05, 4.872200000000104e-05, 4.779200000000136e-05, 4.78330000000006e-05, 4.8681000000001806e-05, 4.837499999999981e-05, 4.780600000000093e-05, 4.783299999999713e-05, 4.838899999999938e-05, 4.858400000000082e-05, 4.861100000000049e-05, 4.786099999999974e-05, 4.837499999999981e-05, 4.776400000000222e-05, 4.837499999999981e-05, 4.78330000000006e-05, 4.777799999999832e-05, 4.879099999999942e-05, 4.797200000000029e-05, 4.805600000000118e-05, 4.837499999999981e-05, 4.799999999999943e-05, 4.865199999999972e-05, 4.863899999999963e-05, 4.867999999999886e-05, 4.7875000000002776e-05, 4.862500000000006e-05, 4.797200000000029e-05, 4.809700000000042e-05, 4.805599999999771e-05, 4.805500000000171e-05, 4.852799999999907e-05, 4.795800000000072e-05, 4.805499999999824e-05, 4.7917000000001486e-05, 4.8695000000001376e-05, 4.813899999999913e-05, 4.863899999999963e-05, 4.8707999999998e-05, 4.774999999999918e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.008" endtime="20201117 14:42:33.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.004" endtime="20201117 14:42:33.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.013" endtime="20201117 14:42:33.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.017" endtime="20201117 14:42:33.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.015" endtime="20201117 14:42:33.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.012" endtime="20201117 14:42:33.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.645" endtime="20201117 14:42:33.037"></status>
</kw>
<msg timestamp="20201117 14:42:33.037" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.046" endtime="20201117 14:42:33.062"></status>
</kw>
<msg timestamp="20201117 14:42:33.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.044" endtime="20201117 14:42:33.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.064" endtime="20201117 14:42:33.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.066" endtime="20201117 14:42:33.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.042" endtime="20201117 14:42:33.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.040" endtime="20201117 14:42:33.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.075" endtime="20201117 14:42:33.362"></status>
</kw>
<msg timestamp="20201117 14:42:33.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.074" endtime="20201117 14:42:33.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.366" endtime="20201117 14:42:33.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.374" endtime="20201117 14:42:33.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.071" endtime="20201117 14:42:33.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.070" endtime="20201117 14:42:33.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.381" level="INFO">${RESULT} = [{'time': 0.021557528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.799999999999943e-05, 'source_diff': 4.799999999999943e-05}, {'time': 0.021607542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.377" endtime="20201117 14:42:33.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.394" level="INFO">${ACCURACY} = {'source_diff': [4.799999999999943e-05, 4.805600000000118e-05, 4.784700000000017e-05, 4.838899999999938e-05, 4.858399999999735e-05, 4.784799999999964e-05, 4.8707999999998e-05, 4.788899999999888e-05, 4...</msg>
<status status="PASS" starttime="20201117 14:42:33.382" endtime="20201117 14:42:33.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.398" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.397" endtime="20201117 14:42:33.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.401" level="INFO">VALUE: [4.799999999999943e-05, 4.805600000000118e-05, 4.784700000000017e-05, 4.838899999999938e-05, 4.858399999999735e-05, 4.784799999999964e-05, 4.8707999999998e-05, 4.788899999999888e-05, 4.866699999999877e-05, 4.8695000000001376e-05, 4.809700000000042e-05, 4.859699999999745e-05, 4.858300000000135e-05, 4.804099999999867e-05, 4.80269999999991e-05, 4.779100000000189e-05, 4.783400000000007e-05, 4.779100000000189e-05, 4.856899999999831e-05, 4.798599999999986e-05, 4.780600000000093e-05, 4.808300000000085e-05, 4.798599999999986e-05, 4.804199999999814e-05, 4.859700000000092e-05, 4.866699999999877e-05, 4.805600000000118e-05, 4.8013999999999e-05, 4.78200000000005e-05, 4.797199999999682e-05, 4.802799999999857e-05, 4.779200000000136e-05, 4.779199999999789e-05, 4.865199999999972e-05, 4.78200000000005e-05, 4.858400000000082e-05, 4.798599999999986e-05, 4.813799999999965e-05, 4.856899999999831e-05, 4.779200000000136e-05, 4.858400000000082e-05, 4.873599999999714e-05, 4.7959000000000196e-05, 4.8707999999998e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.859700000000092e-05, 4.786099999999974e-05, 4.808300000000085e-05, 4.784700000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.400" endtime="20201117 14:42:33.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.395" endtime="20201117 14:42:33.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.404" endtime="20201117 14:42:33.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.408" endtime="20201117 14:42:33.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.406" endtime="20201117 14:42:33.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.403" endtime="20201117 14:42:33.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.038" endtime="20201117 14:42:33.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.643" endtime="20201117 14:42:33.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.642" endtime="20201117 14:42:33.429"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.431" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.439" endtime="20201117 14:42:33.456"></status>
</kw>
<msg timestamp="20201117 14:42:33.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.438" endtime="20201117 14:42:33.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.458" endtime="20201117 14:42:33.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.460" endtime="20201117 14:42:33.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.435" endtime="20201117 14:42:33.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.433" endtime="20201117 14:42:33.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.469" endtime="20201117 14:42:33.756"></status>
</kw>
<msg timestamp="20201117 14:42:33.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.468" endtime="20201117 14:42:33.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024348375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.760" endtime="20201117 14:42:33.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.768" endtime="20201117 14:42:33.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.465" endtime="20201117 14:42:33.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.464" endtime="20201117 14:42:33.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.775" level="INFO">${RESULT} = [{'time': 0.024348375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.955599999999921e-05, 'source_diff': 4.955599999999921e-05}, {'time': 0.024400389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.772" endtime="20201117 14:42:33.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.788" level="INFO">${ACCURACY} = {'source_diff': [4.955599999999921e-05, 4.9695000000002376e-05, 4.879199999999889e-05, 4.894499999999816e-05, 4.893099999999859e-05, 4.974999999999771e-05, 4.88200000000015e-05, 4.893099999999859e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:33.776" endtime="20201117 14:42:33.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.793" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.792" endtime="20201117 14:42:33.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.796" level="INFO">VALUE: [4.955599999999921e-05, 4.9695000000002376e-05, 4.879199999999889e-05, 4.894499999999816e-05, 4.893099999999859e-05, 4.974999999999771e-05, 4.88200000000015e-05, 4.893099999999859e-05, 4.886100000000074e-05, 4.955600000000268e-05, 4.909700000000142e-05, 4.966699999999977e-05, 4.881999999999803e-05, 4.8973000000000766e-05, 4.8959000000001196e-05, 4.975000000000118e-05, 4.902799999999957e-05, 4.966699999999977e-05, 4.962500000000106e-05, 4.91529999999997e-05, 4.892999999999911e-05, 4.9638000000001153e-05, 4.894399999999868e-05, 4.963900000000063e-05, 4.893000000000258e-05, 4.880499999999899e-05, 4.894399999999868e-05, 4.958299999999888e-05, 4.955499999999974e-05, 4.888899999999988e-05, 4.907000000000175e-05, 4.884800000000064e-05, 4.906900000000228e-05, 4.9707999999999e-05, 4.88469999999977e-05, 4.96530000000002e-05, 4.963900000000063e-05, 4.905600000000218e-05, 4.8973000000000766e-05, 4.897199999999782e-05, 4.900000000000043e-05, 4.966699999999977e-05, 4.9014e-05, 4.96530000000002e-05, 4.883299999999813e-05, 4.8695000000001376e-05, 4.9723000000001516e-05, 4.962500000000106e-05, 4.911100000000099e-05, 4.88339999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.794" endtime="20201117 14:42:33.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.789" endtime="20201117 14:42:33.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.799" endtime="20201117 14:42:33.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.802" endtime="20201117 14:42:33.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.801" endtime="20201117 14:42:33.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.797" endtime="20201117 14:42:33.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.432" endtime="20201117 14:42:33.823"></status>
</kw>
<msg timestamp="20201117 14:42:33.823" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.831" endtime="20201117 14:42:33.848"></status>
</kw>
<msg timestamp="20201117 14:42:33.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.830" endtime="20201117 14:42:33.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.850" endtime="20201117 14:42:33.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.852" endtime="20201117 14:42:33.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.827" endtime="20201117 14:42:33.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.825" endtime="20201117 14:42:33.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.861" endtime="20201117 14:42:34.148"></status>
</kw>
<msg timestamp="20201117 14:42:34.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.860" endtime="20201117 14:42:34.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.152" endtime="20201117 14:42:34.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.160" endtime="20201117 14:42:34.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.857" endtime="20201117 14:42:34.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.856" endtime="20201117 14:42:34.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.167" level="INFO">${RESULT} = [{'time': 0.021618375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.956899999999931e-05, 'source_diff': 4.956899999999931e-05}, {'time': 0.021670403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:34.163" endtime="20201117 14:42:34.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.180" level="INFO">${ACCURACY} = {'source_diff': [4.956899999999931e-05, 4.9681000000002806e-05, 4.887500000000031e-05, 4.891699999999902e-05, 4.912500000000056e-05, 4.88200000000015e-05, 4.909700000000142e-05, 4.96530000000002e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:34.167" endtime="20201117 14:42:34.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.185" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.184" endtime="20201117 14:42:34.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.187" level="INFO">VALUE: [4.956899999999931e-05, 4.9681000000002806e-05, 4.887500000000031e-05, 4.891699999999902e-05, 4.912500000000056e-05, 4.88200000000015e-05, 4.909700000000142e-05, 4.96530000000002e-05, 4.898599999999739e-05, 4.912500000000056e-05, 4.877799999999932e-05, 4.874999999999671e-05, 4.8931000000002056e-05, 4.877799999999932e-05, 4.911099999999752e-05, 4.887500000000031e-05, 4.880499999999899e-05, 4.9737000000001086e-05, 4.898599999999739e-05, 4.8945000000001626e-05, 4.96530000000002e-05, 4.9014e-05, 4.911100000000099e-05, 4.956899999999931e-05, 4.959699999999845e-05, 4.900000000000043e-05, 4.906899999999881e-05, 4.897199999999782e-05, 4.898600000000086e-05, 4.963900000000063e-05, 4.905499999999924e-05, 4.969399999999943e-05, 4.892999999999911e-05, 4.908300000000185e-05, 4.8931000000002056e-05, 4.959699999999845e-05, 4.908400000000132e-05, 4.891699999999902e-05, 4.969399999999943e-05, 4.894499999999816e-05, 4.905600000000218e-05, 4.891699999999902e-05, 4.891699999999902e-05, 4.8945000000001626e-05, 4.898600000000086e-05, 4.898599999999739e-05, 4.888899999999988e-05, 4.887500000000031e-05, 4.88469999999977e-05, 4.8903000000002916e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.186" endtime="20201117 14:42:34.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.181" endtime="20201117 14:42:34.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.190" endtime="20201117 14:42:34.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.194" endtime="20201117 14:42:34.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.192" endtime="20201117 14:42:34.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.189" endtime="20201117 14:42:34.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.824" endtime="20201117 14:42:34.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.430" endtime="20201117 14:42:34.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.429" endtime="20201117 14:42:34.215"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.217" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.225" endtime="20201117 14:42:34.242"></status>
</kw>
<msg timestamp="20201117 14:42:34.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.224" endtime="20201117 14:42:34.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.243" endtime="20201117 14:42:34.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.246" endtime="20201117 14:42:34.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.221" endtime="20201117 14:42:34.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.219" endtime="20201117 14:42:34.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.255" endtime="20201117 14:42:34.542"></status>
</kw>
<msg timestamp="20201117 14:42:34.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024023361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024073583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.253" endtime="20201117 14:42:34.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024023361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024073583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.546" endtime="20201117 14:42:34.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.554" endtime="20201117 14:42:34.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.250" endtime="20201117 14:42:34.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.249" endtime="20201117 14:42:34.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.562" level="INFO">${RESULT} = [{'time': 0.024073583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.022199999999907e-05, 'source_diff': 5.022199999999907e-05}, {'time': 0.024125583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:34.558" endtime="20201117 14:42:34.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.576" level="INFO">${ACCURACY} = {'source_diff': [5.022199999999907e-05, 4.977699999999738e-05, 5.069400000000043e-05, 4.98469999999987e-05, 5.0708e-05, 5.06530000000012e-05, 5.05409999999977e-05, 5.009799999999842e-05, 4.97780000000...</msg>
<status status="PASS" starttime="20201117 14:42:34.563" endtime="20201117 14:42:34.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.581" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.580" endtime="20201117 14:42:34.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.584" level="INFO">VALUE: [5.022199999999907e-05, 4.977699999999738e-05, 5.069400000000043e-05, 4.98469999999987e-05, 5.0708e-05, 5.06530000000012e-05, 5.05409999999977e-05, 5.009799999999842e-05, 4.977800000000032e-05, 4.998599999999839e-05, 4.984700000000217e-05, 4.977800000000032e-05, 5.05279999999976e-05, 4.998599999999839e-05, 4.993099999999959e-05, 4.979199999999989e-05, 4.984700000000217e-05, 5.074999999999871e-05, 4.986099999999827e-05, 5.006999999999928e-05, 5.009699999999895e-05, 5.073599999999914e-05, 4.991700000000002e-05, 5.061099999999902e-05, 5.059800000000239e-05, 5.0709000000002946e-05, 5.002800000000057e-05, 5.011100000000199e-05, 4.988900000000088e-05, 5.074999999999871e-05, 4.977700000000085e-05, 4.990300000000045e-05, 5.062499999999859e-05, 4.998599999999839e-05, 5.058299999999988e-05, 4.998600000000186e-05, 4.976400000000075e-05, 5.063900000000163e-05, 4.987500000000131e-05, 5.0679999999997394e-05, 4.988900000000088e-05, 4.988900000000088e-05, 5.000000000000143e-05, 4.999999999999796e-05, 5.081900000000056e-05, 5.012500000000156e-05, 5.070899999999948e-05, 4.9973000000001766e-05, 5.06669999999973e-05, 4.999999999999796e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.582" endtime="20201117 14:42:34.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.577" endtime="20201117 14:42:34.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.587" endtime="20201117 14:42:34.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.590" endtime="20201117 14:42:34.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.589" endtime="20201117 14:42:34.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.585" endtime="20201117 14:42:34.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.218" endtime="20201117 14:42:34.611"></status>
</kw>
<msg timestamp="20201117 14:42:34.611" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.619" endtime="20201117 14:42:34.635"></status>
</kw>
<msg timestamp="20201117 14:42:34.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.618" endtime="20201117 14:42:34.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.637" endtime="20201117 14:42:34.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.639" endtime="20201117 14:42:34.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.615" endtime="20201117 14:42:34.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.613" endtime="20201117 14:42:34.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.648" endtime="20201117 14:42:34.935"></status>
</kw>
<msg timestamp="20201117 14:42:34.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.647" endtime="20201117 14:42:34.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.939" endtime="20201117 14:42:34.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.948" endtime="20201117 14:42:34.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.644" endtime="20201117 14:42:34.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.643" endtime="20201117 14:42:34.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.955" level="INFO">${RESULT} = [{'time': 0.021552917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.069499999999991e-05, 'source_diff': 5.069499999999991e-05}, {'time': 0.021604903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:34.951" endtime="20201117 14:42:34.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.968" level="INFO">${ACCURACY} = {'source_diff': [5.069499999999991e-05, 4.991700000000002e-05, 5.061099999999902e-05, 5.011099999999852e-05, 5.004100000000067e-05, 4.983299999999913e-05, 4.994499999999916e-05, 4.979199999999989e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:34.956" endtime="20201117 14:42:34.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.973" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.972" endtime="20201117 14:42:34.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.975" level="INFO">VALUE: [5.069499999999991e-05, 4.991700000000002e-05, 5.061099999999902e-05, 5.011099999999852e-05, 5.004100000000067e-05, 4.983299999999913e-05, 4.994499999999916e-05, 4.979199999999989e-05, 5.011200000000146e-05, 5.005500000000024e-05, 5.0138000000001653e-05, 4.980499999999999e-05, 4.994399999999968e-05, 4.98330000000026e-05, 5.073599999999914e-05, 5.016700000000027e-05, 5.080600000000046e-05, 4.983299999999913e-05, 4.974999999999771e-05, 4.986100000000174e-05, 5.011099999999852e-05, 5.00279999999971e-05, 5.0014000000001e-05, 5.013900000000113e-05, 5.063899999999816e-05, 5.074999999999871e-05, 4.980599999999946e-05, 5.058299999999988e-05, 5.068100000000034e-05, 4.991600000000054e-05, 5.007000000000275e-05, 4.987500000000131e-05, 4.986100000000174e-05, 4.988899999999741e-05, 5.002800000000057e-05, 4.9959000000002196e-05, 5.011099999999852e-05, 4.990300000000045e-05, 5.055600000000021e-05, 4.986100000000174e-05, 4.993099999999959e-05, 5.008399999999885e-05, 4.984700000000217e-05, 5.068000000000086e-05, 5.01530000000007e-05, 5.073599999999914e-05, 5.074999999999871e-05, 5.054100000000117e-05, 5.059699999999945e-05, 4.98330000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.974" endtime="20201117 14:42:34.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.969" endtime="20201117 14:42:34.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.978" endtime="20201117 14:42:34.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.982" endtime="20201117 14:42:35.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.980" endtime="20201117 14:42:35.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.977" endtime="20201117 14:42:35.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.612" endtime="20201117 14:42:35.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.216" endtime="20201117 14:42:35.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.215" endtime="20201117 14:42:35.003"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.005" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.013" endtime="20201117 14:42:35.030"></status>
</kw>
<msg timestamp="20201117 14:42:35.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.012" endtime="20201117 14:42:35.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.031" endtime="20201117 14:42:35.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.034" endtime="20201117 14:42:35.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.009" endtime="20201117 14:42:35.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.007" endtime="20201117 14:42:35.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.043" endtime="20201117 14:42:35.330"></status>
</kw>
<msg timestamp="20201117 14:42:35.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024115806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.042" endtime="20201117 14:42:35.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024115806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.334" endtime="20201117 14:42:35.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.342" endtime="20201117 14:42:35.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.039" endtime="20201117 14:42:35.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.037" endtime="20201117 14:42:35.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.349" level="INFO">${RESULT} = [{'time': 0.024167472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1665999999998824e-05, 'source_diff': 5.1665999999998824e-05}, {'time': 0.024220472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:35.346" endtime="20201117 14:42:35.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.363" level="INFO">${ACCURACY} = {'source_diff': [5.1665999999998824e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.162499999999959e-05, 5.162499999999959e-05, 5.087500000000231e-05, 5.090299999999798e-05, 5.099999999999896e-05...</msg>
<status status="PASS" starttime="20201117 14:42:35.350" endtime="20201117 14:42:35.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.367" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.366" endtime="20201117 14:42:35.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.370" level="INFO">VALUE: [5.1665999999998824e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.162499999999959e-05, 5.162499999999959e-05, 5.087500000000231e-05, 5.090299999999798e-05, 5.099999999999896e-05, 5.088900000000188e-05, 5.155599999999774e-05, 5.080600000000046e-05, 5.094500000000016e-05, 5.174999999999971e-05, 5.172300000000005e-05, 5.168099999999787e-05, 5.115299999999823e-05, 5.173600000000014e-05, 5.170900000000048e-05, 5.108300000000038e-05, 5.168100000000134e-05, 5.088900000000188e-05, 5.163899999999916e-05, 5.102699999999863e-05, 5.161200000000296e-05, 5.137499999999934e-05, 5.174999999999971e-05, 5.099999999999896e-05, 5.094400000000068e-05, 5.099999999999896e-05, 5.152699999999913e-05, 5.162499999999959e-05, 5.083300000000013e-05, 5.08469999999997e-05, 5.161100000000002e-05, 5.087500000000231e-05, 5.095800000000025e-05, 5.158300000000088e-05, 5.1693999999997964e-05, 5.080600000000046e-05, 5.161100000000002e-05, 5.166700000000177e-05, 5.083300000000013e-05, 5.1014000000002e-05, 5.083300000000013e-05, 5.108399999999985e-05, 5.107000000000028e-05, 5.159700000000045e-05, 5.169500000000091e-05, 5.169499999999744e-05, 5.084799999999917e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.368" endtime="20201117 14:42:35.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.364" endtime="20201117 14:42:35.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.373" endtime="20201117 14:42:35.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.376" endtime="20201117 14:42:35.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.374" endtime="20201117 14:42:35.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.371" endtime="20201117 14:42:35.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.006" endtime="20201117 14:42:35.397"></status>
</kw>
<msg timestamp="20201117 14:42:35.397" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.405" endtime="20201117 14:42:35.421"></status>
</kw>
<msg timestamp="20201117 14:42:35.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.404" endtime="20201117 14:42:35.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.423" endtime="20201117 14:42:35.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.426" endtime="20201117 14:42:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.401" endtime="20201117 14:42:35.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.399" endtime="20201117 14:42:35.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.435" endtime="20201117 14:42:35.722"></status>
</kw>
<msg timestamp="20201117 14:42:35.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.433" endtime="20201117 14:42:35.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.726" endtime="20201117 14:42:35.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.734" endtime="20201117 14:42:35.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.431" endtime="20201117 14:42:35.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.429" endtime="20201117 14:42:35.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.741" level="INFO">${RESULT} = [{'time': 0.022123806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.137499999999934e-05, 'source_diff': 5.137499999999934e-05}, {'time': 0.022177806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:35.738" endtime="20201117 14:42:35.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.754" level="INFO">${ACCURACY} = {'source_diff': [5.137499999999934e-05, 5.16530000000022e-05, 5.080499999999752e-05, 5.095800000000025e-05, 5.169500000000091e-05, 5.080499999999752e-05, 5.158300000000088e-05, 5.074999999999871e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:35.742" endtime="20201117 14:42:35.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.759" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.758" endtime="20201117 14:42:35.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.761" level="INFO">VALUE: [5.137499999999934e-05, 5.16530000000022e-05, 5.080499999999752e-05, 5.095800000000025e-05, 5.169500000000091e-05, 5.080499999999752e-05, 5.158300000000088e-05, 5.074999999999871e-05, 5.097199999999982e-05, 5.162499999999959e-05, 5.169400000000143e-05, 5.086099999999927e-05, 5.159699999999698e-05, 5.1708000000001e-05, 5.159700000000045e-05, 5.158300000000088e-05, 5.0901999999998504e-05, 5.098599999999939e-05, 5.098599999999939e-05, 5.107000000000028e-05, 5.084700000000317e-05, 5.168100000000134e-05, 5.112499999999909e-05, 5.076400000000175e-05, 5.093100000000059e-05, 5.082000000000003e-05, 5.09729999999993e-05, 5.159699999999698e-05, 5.08339999999996e-05, 5.093100000000059e-05, 5.16669999999983e-05, 5.161100000000002e-05, 5.086099999999927e-05, 5.111199999999899e-05, 5.073599999999914e-05, 5.165299999999873e-05, 5.168000000000186e-05, 5.1707999999997534e-05, 5.158300000000088e-05, 5.104100000000167e-05, 5.161100000000002e-05, 5.161100000000002e-05, 5.162499999999959e-05, 5.1679999999998394e-05, 5.0915999999998074e-05, 5.083300000000013e-05, 5.106900000000081e-05, 5.091699999999755e-05, 5.083300000000013e-05, 5.169400000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.760" endtime="20201117 14:42:35.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.755" endtime="20201117 14:42:35.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.764" endtime="20201117 14:42:35.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.768" endtime="20201117 14:42:35.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.766" endtime="20201117 14:42:35.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.763" endtime="20201117 14:42:35.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.397" endtime="20201117 14:42:35.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.004" endtime="20201117 14:42:35.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.003" endtime="20201117 14:42:35.789"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.791" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.800" endtime="20201117 14:42:35.817"></status>
</kw>
<msg timestamp="20201117 14:42:35.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.798" endtime="20201117 14:42:35.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.818" endtime="20201117 14:42:35.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.821" endtime="20201117 14:42:35.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.795" endtime="20201117 14:42:35.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.793" endtime="20201117 14:42:35.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.830" endtime="20201117 14:42:36.115"></status>
</kw>
<msg timestamp="20201117 14:42:36.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024524778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024576889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.828" endtime="20201117 14:42:36.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024524778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024576889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.119" endtime="20201117 14:42:36.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.127" endtime="20201117 14:42:36.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.825" endtime="20201117 14:42:36.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.824" endtime="20201117 14:42:36.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.134" level="INFO">${RESULT} = [{'time': 0.024576889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.211100000000052e-05, 'source_diff': 5.211100000000052e-05}, {'time': 0.024630889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:36.131" endtime="20201117 14:42:36.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.149" level="INFO">${ACCURACY} = {'source_diff': [5.211100000000052e-05, 5.199999999999996e-05, 5.179200000000189e-05, 5.204199999999867e-05, 5.201399999999953e-05, 5.268100000000234e-05, 5.180600000000146e-05, 5.177800000000232e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:36.135" endtime="20201117 14:42:36.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.154" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.153" endtime="20201117 14:42:36.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.157" level="INFO">VALUE: [5.211100000000052e-05, 5.199999999999996e-05, 5.179200000000189e-05, 5.204199999999867e-05, 5.201399999999953e-05, 5.268100000000234e-05, 5.180600000000146e-05, 5.177800000000232e-05, 5.180600000000146e-05, 5.208400000000085e-05, 5.193099999999812e-05, 5.2707999999998534e-05, 5.26669999999993e-05, 5.259799999999745e-05, 5.212500000000009e-05, 5.208399999999738e-05, 5.190299999999898e-05, 5.202699999999963e-05, 5.179099999999895e-05, 5.272200000000157e-05, 5.183300000000113e-05, 5.198600000000039e-05, 5.259700000000145e-05, 5.275000000000071e-05, 5.195800000000125e-05, 5.263900000000016e-05, 5.273600000000114e-05, 5.208299999999791e-05, 5.204199999999867e-05, 5.237499999999687e-05, 5.258300000000188e-05, 5.198600000000039e-05, 5.183300000000113e-05, 5.206900000000181e-05, 5.2721999999998104e-05, 5.188899999999941e-05, 5.195800000000125e-05, 5.176400000000275e-05, 5.197200000000082e-05, 5.204200000000214e-05, 5.202699999999963e-05, 5.191700000000202e-05, 5.187499999999984e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.194400000000168e-05, 5.261100000000102e-05, 5.261200000000049e-05, 5.201399999999953e-05, 5.195800000000125e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.155" endtime="20201117 14:42:36.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.150" endtime="20201117 14:42:36.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.160" endtime="20201117 14:42:36.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.163" endtime="20201117 14:42:36.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.162" endtime="20201117 14:42:36.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.158" endtime="20201117 14:42:36.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.792" endtime="20201117 14:42:36.184"></status>
</kw>
<msg timestamp="20201117 14:42:36.184" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.193" endtime="20201117 14:42:36.209"></status>
</kw>
<msg timestamp="20201117 14:42:36.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.191" endtime="20201117 14:42:36.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.211" endtime="20201117 14:42:36.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.213" endtime="20201117 14:42:36.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.189" endtime="20201117 14:42:36.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.187" endtime="20201117 14:42:36.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.222" endtime="20201117 14:42:36.509"></status>
</kw>
<msg timestamp="20201117 14:42:36.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.220" endtime="20201117 14:42:36.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.514" endtime="20201117 14:42:36.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.522" endtime="20201117 14:42:36.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.218" endtime="20201117 14:42:36.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.216" endtime="20201117 14:42:36.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.529" level="INFO">${RESULT} = [{'time': 0.022034694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1901999999999504e-05, 'source_diff': 5.1901999999999504e-05}, {'time': 0.022088708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:36.525" endtime="20201117 14:42:36.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.542" level="INFO">${ACCURACY} = {'source_diff': [5.1901999999999504e-05, 5.1957999999997784e-05, 5.1916000000002543e-05, 5.256899999999884e-05, 5.188899999999941e-05, 5.197200000000082e-05, 5.238899999999991e-05, 5.262500000000059e-...</msg>
<status status="PASS" starttime="20201117 14:42:36.530" endtime="20201117 14:42:36.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.546" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.545" endtime="20201117 14:42:36.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.549" level="INFO">VALUE: [5.1901999999999504e-05, 5.1957999999997784e-05, 5.1916000000002543e-05, 5.256899999999884e-05, 5.188899999999941e-05, 5.197200000000082e-05, 5.238899999999991e-05, 5.262500000000059e-05, 5.256900000000231e-05, 5.190299999999898e-05, 5.205500000000224e-05, 5.263900000000016e-05, 5.186100000000027e-05, 5.2708000000002e-05, 5.259700000000145e-05, 5.208399999999738e-05, 5.180600000000146e-05, 5.190299999999898e-05, 5.269499999999844e-05, 5.191700000000202e-05, 5.209700000000095e-05, 5.263900000000016e-05, 5.193099999999812e-05, 5.262500000000059e-05, 5.202800000000257e-05, 5.272300000000105e-05, 5.188899999999941e-05, 5.18340000000006e-05, 5.209800000000042e-05, 5.199999999999996e-05, 5.205499999999877e-05, 5.177699999999938e-05, 5.195800000000125e-05, 5.1887999999999934e-05, 5.261100000000102e-05, 5.202699999999963e-05, 5.205500000000224e-05, 5.26669999999993e-05, 5.179099999999895e-05, 5.190300000000245e-05, 5.1915999999999074e-05, 5.268100000000234e-05, 5.2707999999998534e-05, 5.258300000000188e-05, 5.273600000000114e-05, 5.2679999999999394e-05, 5.187499999999984e-05, 5.255600000000221e-05, 5.263900000000016e-05, 5.2166000000002793e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.547" endtime="20201117 14:42:36.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.543" endtime="20201117 14:42:36.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.552" endtime="20201117 14:42:36.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.556" endtime="20201117 14:42:36.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.554" endtime="20201117 14:42:36.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.550" endtime="20201117 14:42:36.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.185" endtime="20201117 14:42:36.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.790" endtime="20201117 14:42:36.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.789" endtime="20201117 14:42:36.577"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.579" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.587" endtime="20201117 14:42:36.605"></status>
</kw>
<msg timestamp="20201117 14:42:36.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.586" endtime="20201117 14:42:36.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.607" endtime="20201117 14:42:36.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.609" endtime="20201117 14:42:36.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.583" endtime="20201117 14:42:36.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.581" endtime="20201117 14:42:36.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.618" endtime="20201117 14:42:36.905"></status>
</kw>
<msg timestamp="20201117 14:42:36.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023940139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023993792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.617" endtime="20201117 14:42:36.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023940139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023993792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.909" endtime="20201117 14:42:36.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.917" endtime="20201117 14:42:36.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.614" endtime="20201117 14:42:36.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.612" endtime="20201117 14:42:36.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.924" level="INFO">${RESULT} = [{'time': 0.023993792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.365300000000073e-05, 'source_diff': 5.365300000000073e-05}, {'time': 0.024048792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:36.921" endtime="20201117 14:42:36.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.937" level="INFO">${ACCURACY} = {'source_diff': [5.365300000000073e-05, 5.281999999999856e-05, 5.348600000000189e-05, 5.291699999999955e-05, 5.281999999999856e-05, 5.3707999999999534e-05, 5.301400000000053e-05, 5.290299999999998e-05...</msg>
<status status="PASS" starttime="20201117 14:42:36.925" endtime="20201117 14:42:36.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.942" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.941" endtime="20201117 14:42:36.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.944" level="INFO">VALUE: [5.365300000000073e-05, 5.281999999999856e-05, 5.348600000000189e-05, 5.291699999999955e-05, 5.281999999999856e-05, 5.3707999999999534e-05, 5.301400000000053e-05, 5.290299999999998e-05, 5.272200000000157e-05, 5.2943999999999214e-05, 5.356999999999931e-05, 5.312500000000109e-05, 5.305499999999977e-05, 5.2943999999999214e-05, 5.2971999999998354e-05, 5.283300000000213e-05, 5.362500000000159e-05, 5.286100000000127e-05, 5.3680000000000394e-05, 5.275000000000071e-05, 5.298600000000139e-05, 5.311099999999805e-05, 5.368099999999987e-05, 5.309699999999848e-05, 5.355599999999974e-05, 5.3707999999999534e-05, 5.362500000000159e-05, 5.361099999999855e-05, 5.361100000000202e-05, 5.362500000000159e-05, 5.286100000000127e-05, 5.354200000000017e-05, 5.305599999999924e-05, 5.28340000000016e-05, 5.288900000000041e-05, 5.288900000000041e-05, 5.297299999999783e-05, 5.295900000000173e-05, 5.30280000000001e-05, 5.301400000000053e-05, 5.283399999999813e-05, 5.358299999999941e-05, 5.280499999999952e-05, 5.301299999999759e-05, 5.355500000000027e-05, 5.3735999999998674e-05, 5.290299999999998e-05, 5.297200000000182e-05, 5.2902000000000504e-05, 5.286100000000127e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.943" endtime="20201117 14:42:36.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.938" endtime="20201117 14:42:36.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.948" endtime="20201117 14:42:36.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.951" endtime="20201117 14:42:36.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.950" endtime="20201117 14:42:36.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.946" endtime="20201117 14:42:36.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.580" endtime="20201117 14:42:36.972"></status>
</kw>
<msg timestamp="20201117 14:42:36.972" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.980" endtime="20201117 14:42:36.997"></status>
</kw>
<msg timestamp="20201117 14:42:36.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.979" endtime="20201117 14:42:36.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.999" endtime="20201117 14:42:37.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.001" endtime="20201117 14:42:37.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.976" endtime="20201117 14:42:37.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.974" endtime="20201117 14:42:37.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.010" endtime="20201117 14:42:37.297"></status>
</kw>
<msg timestamp="20201117 14:42:37.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.008" endtime="20201117 14:42:37.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.301" endtime="20201117 14:42:37.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.309" endtime="20201117 14:42:37.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.006" endtime="20201117 14:42:37.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.004" endtime="20201117 14:42:37.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.315" level="INFO">${RESULT} = [{'time': 0.021664236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.281899999999909e-05, 'source_diff': 5.281899999999909e-05}, {'time': 0.02171925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:37.312" endtime="20201117 14:42:37.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.329" level="INFO">${ACCURACY} = {'source_diff': [5.281899999999909e-05, 5.2999999999997494e-05, 5.356899999999984e-05, 5.2957999999998784e-05, 5.284699999999823e-05, 5.312500000000109e-05, 5.363899999999769e-05, 5.298600000000139e-0...</msg>
<status status="PASS" starttime="20201117 14:42:37.316" endtime="20201117 14:42:37.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.333" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.332" endtime="20201117 14:42:37.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.336" level="INFO">VALUE: [5.281899999999909e-05, 5.2999999999997494e-05, 5.356899999999984e-05, 5.2957999999998784e-05, 5.284699999999823e-05, 5.312500000000109e-05, 5.363899999999769e-05, 5.298600000000139e-05, 5.355599999999974e-05, 5.30280000000001e-05, 5.372200000000257e-05, 5.298600000000139e-05, 5.286100000000127e-05, 5.359699999999898e-05, 5.356999999999931e-05, 5.369499999999944e-05, 5.372300000000205e-05, 5.370899999999901e-05, 5.291699999999955e-05, 5.337500000000134e-05, 5.286100000000127e-05, 5.287500000000084e-05, 5.376400000000128e-05, 5.359699999999898e-05, 5.2916000000000074e-05, 5.283299999999866e-05, 5.311099999999805e-05, 5.281900000000256e-05, 5.279099999999995e-05, 5.309700000000195e-05, 5.3693999999999964e-05, 5.312500000000109e-05, 5.362500000000159e-05, 5.277799999999985e-05, 5.287500000000084e-05, 5.281899999999909e-05, 5.28470000000017e-05, 5.286100000000127e-05, 5.365300000000073e-05, 5.290299999999998e-05, 5.290299999999998e-05, 5.309699999999848e-05, 5.2929999999999644e-05, 5.362499999999812e-05, 5.295900000000173e-05, 5.370899999999901e-05, 5.383299999999966e-05, 5.356999999999931e-05, 5.291699999999955e-05, 5.355500000000027e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.334" endtime="20201117 14:42:37.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.330" endtime="20201117 14:42:37.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.339" endtime="20201117 14:42:37.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.343" endtime="20201117 14:42:37.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.341" endtime="20201117 14:42:37.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.338" endtime="20201117 14:42:37.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.973" endtime="20201117 14:42:37.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.578" endtime="20201117 14:42:37.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.577" endtime="20201117 14:42:37.364"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.366" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.374" endtime="20201117 14:42:37.391"></status>
</kw>
<msg timestamp="20201117 14:42:37.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.373" endtime="20201117 14:42:37.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.392" endtime="20201117 14:42:37.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.395" endtime="20201117 14:42:37.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.370" endtime="20201117 14:42:37.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.368" endtime="20201117 14:42:37.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.404" endtime="20201117 14:42:37.691"></status>
</kw>
<msg timestamp="20201117 14:42:37.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024180417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.402" endtime="20201117 14:42:37.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024180417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.695" endtime="20201117 14:42:37.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.703" endtime="20201117 14:42:37.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.400" endtime="20201117 14:42:37.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.398" endtime="20201117 14:42:37.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.710" level="INFO">${RESULT} = [{'time': 0.024180417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4485999999999424e-05, 'source_diff': 5.4485999999999424e-05}, {'time': 0.024236417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:37.706" endtime="20201117 14:42:37.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.725" level="INFO">${ACCURACY} = {'source_diff': [5.4485999999999424e-05, 5.411099999999905e-05, 5.461099999999955e-05, 5.458399999999988e-05, 5.456900000000084e-05, 5.463899999999869e-05, 5.458399999999988e-05, 5.413900000000166e-05...</msg>
<status status="PASS" starttime="20201117 14:42:37.711" endtime="20201117 14:42:37.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.729" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.728" endtime="20201117 14:42:37.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.732" level="INFO">VALUE: [5.4485999999999424e-05, 5.411099999999905e-05, 5.461099999999955e-05, 5.458399999999988e-05, 5.456900000000084e-05, 5.463899999999869e-05, 5.458399999999988e-05, 5.413900000000166e-05, 5.402700000000163e-05, 5.3957999999999784e-05, 5.4722000000000104e-05, 5.4722000000000104e-05, 5.462499999999912e-05, 5.4651999999998785e-05, 5.3957999999999784e-05, 5.3707999999999534e-05, 5.465300000000173e-05, 5.459699999999998e-05, 5.388900000000141e-05, 5.3944000000000214e-05, 5.388900000000141e-05, 5.45549999999978e-05, 5.465299999999826e-05, 5.462500000000259e-05, 5.459699999999998e-05, 5.4735999999999674e-05, 5.46809999999974e-05, 5.3763999999997814e-05, 5.3985999999998924e-05, 5.461099999999955e-05, 5.4735999999999674e-05, 5.388899999999794e-05, 5.3763999999997814e-05, 5.387499999999837e-05, 5.457000000000031e-05, 5.455599999999727e-05, 5.3999999999998494e-05, 5.381999999999956e-05, 5.3888000000001934e-05, 5.3957999999999784e-05, 5.4722000000000104e-05, 5.4708000000000534e-05, 5.409699999999948e-05, 5.390300000000098e-05, 5.401400000000153e-05, 5.394499999999969e-05, 5.4708000000000534e-05, 5.412499999999862e-05, 5.386100000000227e-05, 5.461099999999955e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.730" endtime="20201117 14:42:37.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.726" endtime="20201117 14:42:37.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.735" endtime="20201117 14:42:37.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.739" endtime="20201117 14:42:37.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.737" endtime="20201117 14:42:37.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.734" endtime="20201117 14:42:37.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.367" endtime="20201117 14:42:37.759"></status>
</kw>
<msg timestamp="20201117 14:42:37.760" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.768" endtime="20201117 14:42:37.785"></status>
</kw>
<msg timestamp="20201117 14:42:37.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.766" endtime="20201117 14:42:37.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.786" endtime="20201117 14:42:37.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.789" endtime="20201117 14:42:37.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.764" endtime="20201117 14:42:37.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.762" endtime="20201117 14:42:37.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.798" endtime="20201117 14:42:38.085"></status>
</kw>
<msg timestamp="20201117 14:42:38.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.796" endtime="20201117 14:42:38.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.089" endtime="20201117 14:42:38.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.097" endtime="20201117 14:42:38.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.794" endtime="20201117 14:42:38.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.792" endtime="20201117 14:42:38.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.104" level="INFO">${RESULT} = [{'time': 0.022018292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.397299999999883e-05, 'source_diff': 5.397299999999883e-05}, {'time': 0.022074292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:38.101" endtime="20201117 14:42:38.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.117" level="INFO">${ACCURACY} = {'source_diff': [5.397299999999883e-05, 5.388899999999794e-05, 5.387499999999837e-05, 5.394499999999969e-05, 5.470900000000001e-05, 5.38340000000026e-05, 5.40549999999973e-05, 5.461099999999955e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:42:38.105" endtime="20201117 14:42:38.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.122" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.121" endtime="20201117 14:42:38.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.125" level="INFO">VALUE: [5.397299999999883e-05, 5.388899999999794e-05, 5.387499999999837e-05, 5.394499999999969e-05, 5.470900000000001e-05, 5.38340000000026e-05, 5.40549999999973e-05, 5.461099999999955e-05, 5.461099999999955e-05, 5.398600000000239e-05, 5.408299999999991e-05, 5.387499999999837e-05, 5.458300000000041e-05, 5.4722000000000104e-05, 5.412500000000209e-05, 5.3763999999997814e-05, 5.405599999999677e-05, 5.409699999999948e-05, 5.3971999999999354e-05, 5.376400000000128e-05, 5.377800000000085e-05, 5.408299999999991e-05, 5.3957999999999784e-05, 5.4666000000001824e-05, 5.408399999999938e-05, 5.463900000000216e-05, 5.415300000000123e-05, 5.383399999999913e-05, 5.388899999999794e-05, 5.40419999999972e-05, 5.40280000000011e-05, 5.3749999999998244e-05, 5.458399999999988e-05, 5.4749999999999244e-05, 5.4722000000000104e-05, 5.456999999999684e-05, 5.394499999999969e-05, 5.4722000000000104e-05, 5.437500000000234e-05, 5.456900000000084e-05, 5.461099999999955e-05, 5.463900000000216e-05, 5.4651999999998785e-05, 5.405600000000024e-05, 5.3971999999999354e-05, 5.4721999999996634e-05, 5.383299999999966e-05, 5.40419999999972e-05, 5.459699999999998e-05, 5.469500000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.123" endtime="20201117 14:42:38.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.119" endtime="20201117 14:42:38.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.128" endtime="20201117 14:42:38.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.131" endtime="20201117 14:42:38.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.130" endtime="20201117 14:42:38.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.126" endtime="20201117 14:42:38.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.760" endtime="20201117 14:42:38.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.365" endtime="20201117 14:42:38.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.364" endtime="20201117 14:42:38.152"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.155" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.163" endtime="20201117 14:42:38.179"></status>
</kw>
<msg timestamp="20201117 14:42:38.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.161" endtime="20201117 14:42:38.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.181" endtime="20201117 14:42:38.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.183" endtime="20201117 14:42:38.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.159" endtime="20201117 14:42:38.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.156" endtime="20201117 14:42:38.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.192" endtime="20201117 14:42:38.479"></status>
</kw>
<msg timestamp="20201117 14:42:38.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023883042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023938806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.191" endtime="20201117 14:42:38.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023883042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023938806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.483" endtime="20201117 14:42:38.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.491" endtime="20201117 14:42:38.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.188" endtime="20201117 14:42:38.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.186" endtime="20201117 14:42:38.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.498" level="INFO">${RESULT} = [{'time': 0.023938806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5763999999999814e-05, 'source_diff': 5.5763999999999814e-05}, {'time': 0.023995792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:38.495" endtime="20201117 14:42:38.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.512" level="INFO">${ACCURACY} = {'source_diff': [5.5763999999999814e-05, 5.497299999999983e-05, 5.497299999999983e-05, 5.4902000000002504e-05, 5.48609999999998e-05, 5.495900000000026e-05, 5.509799999999995e-05, 5.4957999999997315e-0...</msg>
<status status="PASS" starttime="20201117 14:42:38.499" endtime="20201117 14:42:38.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.517" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.515" endtime="20201117 14:42:38.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.519" level="INFO">VALUE: [5.5763999999999814e-05, 5.497299999999983e-05, 5.497299999999983e-05, 5.4902000000002504e-05, 5.48609999999998e-05, 5.495900000000026e-05, 5.509799999999995e-05, 5.4957999999997315e-05, 5.506900000000134e-05, 5.508300000000091e-05, 5.483300000000066e-05, 5.508299999999744e-05, 5.481900000000109e-05, 5.563900000000316e-05, 5.56670000000023e-05, 5.508300000000091e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.4972000000000354e-05, 5.490299999999851e-05, 5.509700000000048e-05, 5.4791999999997953e-05, 5.568100000000187e-05, 5.4999999999999494e-05, 5.511100000000005e-05, 5.5750000000000244e-05, 5.48609999999998e-05, 5.56809999999984e-05, 5.480600000000099e-05, 5.5013999999999064e-05, 5.558400000000088e-05, 5.4749999999999244e-05, 5.4999999999999494e-05, 5.473699999999915e-05, 5.559800000000045e-05, 5.5736000000000674e-05, 5.4749999999999244e-05, 5.5694000000001964e-05, 5.561100000000055e-05, 5.509700000000048e-05, 5.479099999999848e-05, 5.561100000000055e-05, 5.4763999999998814e-05, 5.5666000000002824e-05, 5.5722000000001104e-05, 5.4763999999998814e-05, 5.506899999999787e-05, 5.561100000000055e-05, 5.562500000000012e-05, 5.4971999999996884e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.518" endtime="20201117 14:42:38.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.513" endtime="20201117 14:42:38.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.523" endtime="20201117 14:42:38.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.527" endtime="20201117 14:42:38.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.525" endtime="20201117 14:42:38.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.521" endtime="20201117 14:42:38.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.155" endtime="20201117 14:42:38.548"></status>
</kw>
<msg timestamp="20201117 14:42:38.548" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.556" endtime="20201117 14:42:38.573"></status>
</kw>
<msg timestamp="20201117 14:42:38.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.554" endtime="20201117 14:42:38.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.574" endtime="20201117 14:42:38.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.577" endtime="20201117 14:42:38.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.552" endtime="20201117 14:42:38.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.550" endtime="20201117 14:42:38.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.586" endtime="20201117 14:42:38.871"></status>
</kw>
<msg timestamp="20201117 14:42:38.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02189975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:38.584" endtime="20201117 14:42:38.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02189975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:38.875" endtime="20201117 14:42:38.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.884" endtime="20201117 14:42:38.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.582" endtime="20201117 14:42:38.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.580" endtime="20201117 14:42:38.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.891" level="INFO">${RESULT} = [{'time': 0.02189975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5541999999998704e-05, 'source_diff': 5.5541999999998704e-05}, {'time': 0.021956792, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:38.887" endtime="20201117 14:42:38.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.904" level="INFO">${ACCURACY} = {'source_diff': [5.5541999999998704e-05, 5.513899999999919e-05, 5.507000000000081e-05, 5.4999999999999494e-05, 5.5555999999998273e-05, 5.491700000000155e-05, 5.511100000000005e-05, 5.565299999999926e-...</msg>
<status status="PASS" starttime="20201117 14:42:38.892" endtime="20201117 14:42:38.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.909" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.908" endtime="20201117 14:42:38.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.911" level="INFO">VALUE: [5.5541999999998704e-05, 5.513899999999919e-05, 5.507000000000081e-05, 5.4999999999999494e-05, 5.5555999999998273e-05, 5.491700000000155e-05, 5.511100000000005e-05, 5.565299999999926e-05, 5.4971999999996884e-05, 5.495900000000026e-05, 5.483400000000013e-05, 5.559800000000045e-05, 5.487499999999937e-05, 5.4999999999999494e-05, 5.488900000000241e-05, 5.579099999999948e-05, 5.486199999999927e-05, 5.500000000000296e-05, 5.4985999999999924e-05, 5.488900000000241e-05, 5.484700000000023e-05, 5.512499999999962e-05, 5.5693999999998495e-05, 5.5707999999998065e-05, 5.48609999999998e-05, 5.566699999999883e-05, 5.562500000000012e-05, 5.5013999999999064e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.504200000000167e-05, 5.4999999999999494e-05, 5.4944000000001214e-05, 5.48609999999998e-05, 5.490299999999851e-05, 5.505600000000124e-05, 5.566699999999883e-05, 5.490299999999851e-05, 5.48479999999997e-05, 5.557000000000131e-05, 5.494499999999722e-05, 5.565299999999926e-05, 5.506999999999734e-05, 5.493100000000112e-05, 5.5651999999999785e-05, 5.502699999999916e-05, 5.511100000000005e-05, 5.558400000000088e-05, 5.4930000000001644e-05, 5.481900000000109e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.910" endtime="20201117 14:42:38.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.905" endtime="20201117 14:42:38.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.914" endtime="20201117 14:42:38.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.918" endtime="20201117 14:42:38.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.916" endtime="20201117 14:42:38.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.913" endtime="20201117 14:42:38.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.549" endtime="20201117 14:42:38.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.153" endtime="20201117 14:42:38.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.153" endtime="20201117 14:42:38.939"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.941" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.949" endtime="20201117 14:42:38.966"></status>
</kw>
<msg timestamp="20201117 14:42:38.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.947" endtime="20201117 14:42:38.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.967" endtime="20201117 14:42:38.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.970" endtime="20201117 14:42:38.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.945" endtime="20201117 14:42:38.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.943" endtime="20201117 14:42:38.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.979" endtime="20201117 14:42:39.266"></status>
</kw>
<msg timestamp="20201117 14:42:39.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024024625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024081292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.978" endtime="20201117 14:42:39.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024024625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024081292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.270" endtime="20201117 14:42:39.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.279" endtime="20201117 14:42:39.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.975" endtime="20201117 14:42:39.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.973" endtime="20201117 14:42:39.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.285" level="INFO">${RESULT} = [{'time': 0.024081292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666699999999983e-05, 'source_diff': 5.666699999999983e-05}, {'time': 0.024140292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.282" endtime="20201117 14:42:39.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.300" level="INFO">${ACCURACY} = {'source_diff': [5.666699999999983e-05, 5.6541999999999704e-05, 5.606999999999834e-05, 5.609700000000148e-05, 5.6651999999997316e-05, 5.656899999999937e-05, 5.6708000000002534e-05, 5.606899999999887e-...</msg>
<status status="PASS" starttime="20201117 14:42:39.286" endtime="20201117 14:42:39.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.305" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.304" endtime="20201117 14:42:39.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.307" level="INFO">VALUE: [5.666699999999983e-05, 5.6541999999999704e-05, 5.606999999999834e-05, 5.609700000000148e-05, 5.6651999999997316e-05, 5.656899999999937e-05, 5.6708000000002534e-05, 5.606899999999887e-05, 5.606899999999887e-05, 5.5929999999999175e-05, 5.652699999999719e-05, 5.6027999999999634e-05, 5.580499999999905e-05, 5.6749999999997774e-05, 5.607000000000181e-05, 5.665300000000026e-05, 5.583300000000166e-05, 5.6708000000002534e-05, 5.6736000000001674e-05, 5.590299999999951e-05, 5.593100000000212e-05, 5.663900000000069e-05, 5.5958000000001784e-05, 5.665300000000026e-05, 5.670899999999854e-05, 5.6764000000000814e-05, 5.662500000000112e-05, 5.666699999999983e-05, 5.594499999999822e-05, 5.590300000000298e-05, 5.672300000000158e-05, 5.597300000000083e-05, 5.5943999999998745e-05, 5.583400000000113e-05, 5.591699999999908e-05, 5.662500000000112e-05, 5.5707999999998065e-05, 5.658299999999894e-05, 5.588899999999994e-05, 5.587500000000037e-05, 5.581899999999862e-05, 5.666699999999983e-05, 5.6514000000000564e-05, 5.583299999999819e-05, 5.662500000000112e-05, 5.584700000000123e-05, 5.6014000000000064e-05, 5.579200000000242e-05, 5.5958000000001784e-05, 5.6679999999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.306" endtime="20201117 14:42:39.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.301" endtime="20201117 14:42:39.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.310" endtime="20201117 14:42:39.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.314" endtime="20201117 14:42:39.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.312" endtime="20201117 14:42:39.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.309" endtime="20201117 14:42:39.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.942" endtime="20201117 14:42:39.334"></status>
</kw>
<msg timestamp="20201117 14:42:39.335" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.343" endtime="20201117 14:42:39.360"></status>
</kw>
<msg timestamp="20201117 14:42:39.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.341" endtime="20201117 14:42:39.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.361" endtime="20201117 14:42:39.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.364" endtime="20201117 14:42:39.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.339" endtime="20201117 14:42:39.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.337" endtime="20201117 14:42:39.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.373" endtime="20201117 14:42:39.660"></status>
</kw>
<msg timestamp="20201117 14:42:39.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.371" endtime="20201117 14:42:39.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.664" endtime="20201117 14:42:39.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.672" endtime="20201117 14:42:39.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.369" endtime="20201117 14:42:39.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.367" endtime="20201117 14:42:39.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.679" level="INFO">${RESULT} = [{'time': 0.021705542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.657000000000231e-05, 'source_diff': 5.657000000000231e-05}, {'time': 0.021763486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.675" endtime="20201117 14:42:39.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.692" level="INFO">${ACCURACY} = {'source_diff': [5.657000000000231e-05, 5.591699999999908e-05, 5.590299999999951e-05, 5.5777999999999384e-05, 5.5791999999998954e-05, 5.6721999999998635e-05, 5.579200000000242e-05, 5.593099999999865e-...</msg>
<status status="PASS" starttime="20201117 14:42:39.680" endtime="20201117 14:42:39.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.697" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.696" endtime="20201117 14:42:39.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.699" level="INFO">VALUE: [5.657000000000231e-05, 5.591699999999908e-05, 5.590299999999951e-05, 5.5777999999999384e-05, 5.5791999999998954e-05, 5.6721999999998635e-05, 5.579200000000242e-05, 5.593099999999865e-05, 5.5888000000000465e-05, 5.666699999999983e-05, 5.58610000000008e-05, 5.588899999999994e-05, 5.594499999999822e-05, 5.587500000000037e-05, 5.670900000000201e-05, 5.58480000000007e-05, 5.588899999999994e-05, 5.5750000000000244e-05, 5.669500000000244e-05, 5.669500000000244e-05, 5.595900000000126e-05, 5.5971999999997885e-05, 5.6027999999999634e-05, 5.580500000000252e-05, 5.612500000000062e-05, 5.6735999999998205e-05, 5.6000000000000494e-05, 5.666699999999983e-05, 5.590299999999951e-05, 5.5929999999999175e-05, 5.581899999999862e-05, 5.581900000000209e-05, 5.591699999999908e-05, 5.584699999999776e-05, 5.669500000000244e-05, 5.587500000000037e-05, 5.5750000000000244e-05, 5.666699999999983e-05, 5.6735999999998205e-05, 5.611099999999758e-05, 5.593099999999865e-05, 5.584700000000123e-05, 5.661099999999808e-05, 5.662500000000112e-05, 5.659799999999798e-05, 5.593099999999865e-05, 5.583400000000113e-05, 5.5957999999998315e-05, 5.580499999999905e-05, 5.661199999999755e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.698" endtime="20201117 14:42:39.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.693" endtime="20201117 14:42:39.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.702" endtime="20201117 14:42:39.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.706" endtime="20201117 14:42:39.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.704" endtime="20201117 14:42:39.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.701" endtime="20201117 14:42:39.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.335" endtime="20201117 14:42:39.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.940" endtime="20201117 14:42:39.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.939" endtime="20201117 14:42:39.727"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.729" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.738" endtime="20201117 14:42:39.754"></status>
</kw>
<msg timestamp="20201117 14:42:39.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.736" endtime="20201117 14:42:39.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.756" endtime="20201117 14:42:39.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.758" endtime="20201117 14:42:39.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.733" endtime="20201117 14:42:39.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.731" endtime="20201117 14:42:39.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.767" endtime="20201117 14:42:40.054"></status>
</kw>
<msg timestamp="20201117 14:42:40.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.765" endtime="20201117 14:42:40.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.058" endtime="20201117 14:42:40.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.066" endtime="20201117 14:42:40.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.763" endtime="20201117 14:42:40.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.761" endtime="20201117 14:42:40.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.073" level="INFO">${RESULT} = [{'time': 0.024919444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680500000000005e-05, 'source_diff': 5.680500000000005e-05}, {'time': 0.024978417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:40.070" endtime="20201117 14:42:40.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.086" level="INFO">${ACCURACY} = {'source_diff': [5.680500000000005e-05, 5.688900000000094e-05, 5.772299999999911e-05, 5.7028000000000634e-05, 5.6819999999999093e-05, 5.697299999999836e-05, 5.670899999999854e-05, 5.701300000000159e-0...</msg>
<status status="PASS" starttime="20201117 14:42:40.074" endtime="20201117 14:42:40.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.091" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.090" endtime="20201117 14:42:40.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.093" level="INFO">VALUE: [5.680500000000005e-05, 5.688900000000094e-05, 5.772299999999911e-05, 5.7028000000000634e-05, 5.6819999999999093e-05, 5.697299999999836e-05, 5.670899999999854e-05, 5.701300000000159e-05, 5.683299999999919e-05, 5.75550000000008e-05, 5.681899999999962e-05, 5.7680000000000925e-05, 5.759699999999951e-05, 5.7708000000000065e-05, 5.6985999999998455e-05, 5.6930000000000175e-05, 5.769499999999997e-05, 5.6791999999999954e-05, 5.7000000000001494e-05, 5.68610000000018e-05, 5.715300000000076e-05, 5.6778000000000384e-05, 5.6985999999998455e-05, 5.708299999999944e-05, 5.6805999999999524e-05, 5.691700000000008e-05, 5.688900000000094e-05, 5.713899999999772e-05, 5.6999999999998024e-05, 5.7083999999998913e-05, 5.765300000000126e-05, 5.7055999999999774e-05, 5.766700000000083e-05, 5.7055999999999774e-05, 5.690300000000051e-05, 5.704100000000073e-05, 5.7042000000000204e-05, 5.6943999999999745e-05, 5.7736000000002674e-05, 5.762500000000212e-05, 5.71809999999999e-05, 5.6999999999998024e-05, 5.738899999999797e-05, 5.765300000000126e-05, 5.756900000000037e-05, 5.6985999999998455e-05, 5.766700000000083e-05, 5.6972000000002354e-05, 5.7764000000001814e-05, 5.6791999999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.092" endtime="20201117 14:42:40.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.087" endtime="20201117 14:42:40.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.096" endtime="20201117 14:42:40.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.100" endtime="20201117 14:42:40.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.098" endtime="20201117 14:42:40.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.095" endtime="20201117 14:42:40.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.730" endtime="20201117 14:42:40.121"></status>
</kw>
<msg timestamp="20201117 14:42:40.121" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.130" endtime="20201117 14:42:40.146"></status>
</kw>
<msg timestamp="20201117 14:42:40.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.128" endtime="20201117 14:42:40.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.148" endtime="20201117 14:42:40.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.150" endtime="20201117 14:42:40.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.125" endtime="20201117 14:42:40.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.123" endtime="20201117 14:42:40.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.159" endtime="20201117 14:42:40.445"></status>
</kw>
<msg timestamp="20201117 14:42:40.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.158" endtime="20201117 14:42:40.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.450" endtime="20201117 14:42:40.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.458" endtime="20201117 14:42:40.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.155" endtime="20201117 14:42:40.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.153" endtime="20201117 14:42:40.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.465" level="INFO">${RESULT} = [{'time': 0.022230097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.704100000000073e-05, 'source_diff': 5.704100000000073e-05}, {'time': 0.022290111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:40.461" endtime="20201117 14:42:40.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.478" level="INFO">${ACCURACY} = {'source_diff': [5.704100000000073e-05, 5.7680000000000925e-05, 5.704099999999726e-05, 5.711100000000205e-05, 5.740300000000101e-05, 5.7028000000000634e-05, 5.6986000000001924e-05, 5.765299999999779e-...</msg>
<status status="PASS" starttime="20201117 14:42:40.466" endtime="20201117 14:42:40.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.483" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.482" endtime="20201117 14:42:40.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.485" level="INFO">VALUE: [5.704100000000073e-05, 5.7680000000000925e-05, 5.704099999999726e-05, 5.711100000000205e-05, 5.740300000000101e-05, 5.7028000000000634e-05, 5.6986000000001924e-05, 5.765299999999779e-05, 5.7055999999999774e-05, 5.762499999999865e-05, 5.7028000000000634e-05, 5.713899999999772e-05, 5.759699999999951e-05, 5.690300000000051e-05, 5.6791999999999954e-05, 5.7735999999999205e-05, 5.6972000000002354e-05, 5.69870000000014e-05, 5.7556000000000274e-05, 5.7000000000001494e-05, 5.6736000000001674e-05, 5.7028000000000634e-05, 5.6764000000000814e-05, 5.761099999999908e-05, 5.759699999999951e-05, 5.679100000000048e-05, 5.7694000000000495e-05, 5.7750000000002244e-05, 5.762499999999865e-05, 5.677699999999744e-05, 5.6972000000002354e-05, 5.6915999999997136e-05, 5.7721999999999635e-05, 5.6749999999997774e-05, 5.6764000000000814e-05, 5.684699999999876e-05, 5.762499999999865e-05, 5.6999999999998024e-05, 5.709699999999901e-05, 5.763900000000169e-05, 5.6764000000000814e-05, 5.6887999999997996e-05, 5.684699999999876e-05, 5.765300000000126e-05, 5.708400000000238e-05, 5.706899999999987e-05, 5.712500000000162e-05, 5.7652000000001785e-05, 5.769499999999997e-05, 5.6791999999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.484" endtime="20201117 14:42:40.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.479" endtime="20201117 14:42:40.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.489" endtime="20201117 14:42:40.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.492" endtime="20201117 14:42:40.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.491" endtime="20201117 14:42:40.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.487" endtime="20201117 14:42:40.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.122" endtime="20201117 14:42:40.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.728" endtime="20201117 14:42:40.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.727" endtime="20201117 14:42:40.513"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.515" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.524" endtime="20201117 14:42:40.541"></status>
</kw>
<msg timestamp="20201117 14:42:40.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.522" endtime="20201117 14:42:40.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.542" endtime="20201117 14:42:40.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.545" endtime="20201117 14:42:40.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.519" endtime="20201117 14:42:40.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.517" endtime="20201117 14:42:40.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.555" endtime="20201117 14:42:40.841"></status>
</kw>
<msg timestamp="20201117 14:42:40.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.553" endtime="20201117 14:42:40.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.846" endtime="20201117 14:42:40.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.854" endtime="20201117 14:42:40.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.550" endtime="20201117 14:42:40.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.548" endtime="20201117 14:42:40.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.860" level="INFO">${RESULT} = [{'time': 0.024356264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8569999999997374e-05, 'source_diff': 5.8569999999997374e-05}, {'time': 0.024416264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:40.857" endtime="20201117 14:42:40.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.875" level="INFO">${ACCURACY} = {'source_diff': [5.8569999999997374e-05, 5.8056000000000774e-05, 5.8569999999997374e-05, 5.8763999999999345e-05, 5.86949999999975e-05, 5.811099999999958e-05, 5.859699999999704e-05, 5.812499999999915e-...</msg>
<status status="PASS" starttime="20201117 14:42:40.861" endtime="20201117 14:42:40.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.880" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.879" endtime="20201117 14:42:40.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.882" level="INFO">VALUE: [5.8569999999997374e-05, 5.8056000000000774e-05, 5.8569999999997374e-05, 5.8763999999999345e-05, 5.86949999999975e-05, 5.811099999999958e-05, 5.859699999999704e-05, 5.812499999999915e-05, 5.7985999999999455e-05, 5.7820000000000094e-05, 5.793100000000065e-05, 5.812500000000262e-05, 5.873699999999968e-05, 5.7999999999999025e-05, 5.777699999999844e-05, 5.812499999999915e-05, 5.786099999999933e-05, 5.859700000000051e-05, 5.8736000000000205e-05, 5.7985999999999455e-05, 5.861100000000008e-05, 5.8693999999998026e-05, 5.809700000000001e-05, 5.7778000000001384e-05, 5.78749999999989e-05, 5.856900000000137e-05, 5.790300000000151e-05, 5.7777999999997914e-05, 5.7999999999999025e-05, 5.7971999999999885e-05, 5.790300000000151e-05, 5.794500000000022e-05, 5.8027999999998164e-05, 5.863900000000269e-05, 5.78749999999989e-05, 5.869500000000097e-05, 5.8541999999998234e-05, 5.866700000000183e-05, 5.869500000000097e-05, 5.804100000000173e-05, 5.8651999999999316e-05, 5.78749999999989e-05, 5.783300000000019e-05, 5.80689999999974e-05, 5.776299999999887e-05, 5.783300000000019e-05, 5.7930000000001175e-05, 5.781899999999715e-05, 5.780500000000105e-05, 5.85689999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.881" endtime="20201117 14:42:40.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.876" endtime="20201117 14:42:40.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.886" endtime="20201117 14:42:40.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.889" endtime="20201117 14:42:40.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.888" endtime="20201117 14:42:40.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.884" endtime="20201117 14:42:40.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.516" endtime="20201117 14:42:40.910"></status>
</kw>
<msg timestamp="20201117 14:42:40.910" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.918" endtime="20201117 14:42:40.935"></status>
</kw>
<msg timestamp="20201117 14:42:40.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.917" endtime="20201117 14:42:40.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.937" endtime="20201117 14:42:40.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.939" endtime="20201117 14:42:40.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.914" endtime="20201117 14:42:40.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.912" endtime="20201117 14:42:40.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.948" endtime="20201117 14:42:41.235"></status>
</kw>
<msg timestamp="20201117 14:42:41.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.947" endtime="20201117 14:42:41.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.239" endtime="20201117 14:42:41.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.247" endtime="20201117 14:42:41.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.944" endtime="20201117 14:42:41.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.942" endtime="20201117 14:42:41.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.254" level="INFO">${RESULT} = [{'time': 0.021573681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8083999999999913e-05, 'source_diff': 5.8083999999999913e-05}, {'time': 0.021634694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:41.251" endtime="20201117 14:42:41.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.267" level="INFO">${ACCURACY} = {'source_diff': [5.8083999999999913e-05, 5.862499999999965e-05, 5.8014000000002064e-05, 5.8694000000001495e-05, 5.8722000000000635e-05, 5.8736000000000205e-05, 5.783300000000019e-05, 5.790200000000203...</msg>
<status status="PASS" starttime="20201117 14:42:41.255" endtime="20201117 14:42:41.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.272" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.271" endtime="20201117 14:42:41.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.275" level="INFO">VALUE: [5.8083999999999913e-05, 5.862499999999965e-05, 5.8014000000002064e-05, 5.8694000000001495e-05, 5.8722000000000635e-05, 5.8736000000000205e-05, 5.783300000000019e-05, 5.7902000000002035e-05, 5.788899999999847e-05, 5.7944000000000745e-05, 5.790300000000151e-05, 5.8707999999997595e-05, 5.8763999999999345e-05, 5.855499999999833e-05, 5.861100000000008e-05, 5.8583999999996944e-05, 5.7999999999999025e-05, 5.790300000000151e-05, 5.7820000000000094e-05, 5.862499999999965e-05, 5.787500000000237e-05, 5.7721999999999635e-05, 5.8013999999998594e-05, 5.865300000000226e-05, 5.784799999999923e-05, 5.811099999999958e-05, 5.8749999999999775e-05, 5.812499999999915e-05, 5.869500000000097e-05, 5.795899999999979e-05, 5.872300000000011e-05, 5.7750000000002244e-05, 5.804099999999826e-05, 5.802699999999869e-05, 5.78749999999989e-05, 5.7901999999998566e-05, 5.783300000000019e-05, 5.8014000000002064e-05, 5.784699999999976e-05, 5.788899999999847e-05, 5.815300000000176e-05, 5.8764000000002814e-05, 5.7971999999999885e-05, 5.790299999999804e-05, 5.863899999999922e-05, 5.8055999999997304e-05, 5.7749999999998775e-05, 5.7999999999999025e-05, 5.787500000000237e-05, 5.8013999999998594e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.273" endtime="20201117 14:42:41.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.269" endtime="20201117 14:42:41.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.278" endtime="20201117 14:42:41.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.281" endtime="20201117 14:42:41.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.280" endtime="20201117 14:42:41.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.276" endtime="20201117 14:42:41.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.911" endtime="20201117 14:42:41.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.514" endtime="20201117 14:42:41.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.513" endtime="20201117 14:42:41.302"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.304" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.313" endtime="20201117 14:42:41.330"></status>
</kw>
<msg timestamp="20201117 14:42:41.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.311" endtime="20201117 14:42:41.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.332" endtime="20201117 14:42:41.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.334" endtime="20201117 14:42:41.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.309" endtime="20201117 14:42:41.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.306" endtime="20201117 14:42:41.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.343" endtime="20201117 14:42:41.630"></status>
</kw>
<msg timestamp="20201117 14:42:41.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.341" endtime="20201117 14:42:41.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.634" endtime="20201117 14:42:41.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.643" endtime="20201117 14:42:41.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.339" endtime="20201117 14:42:41.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.337" endtime="20201117 14:42:41.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.650" level="INFO">${RESULT} = [{'time': 0.024187194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.912500000000015e-05, 'source_diff': 5.912500000000015e-05}, {'time': 0.024249194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.646" endtime="20201117 14:42:41.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.663" level="INFO">${ACCURACY} = {'source_diff': [5.912500000000015e-05, 5.9638000000000746e-05, 5.904099999999926e-05, 5.880500000000205e-05, 5.9722000000001635e-05, 5.9000000000000025e-05, 5.909700000000101e-05, 5.884700000000076e-...</msg>
<status status="PASS" starttime="20201117 14:42:41.651" endtime="20201117 14:42:41.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.668" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.667" endtime="20201117 14:42:41.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.670" level="INFO">VALUE: [5.912500000000015e-05, 5.9638000000000746e-05, 5.904099999999926e-05, 5.880500000000205e-05, 5.9722000000001635e-05, 5.9000000000000025e-05, 5.909700000000101e-05, 5.884700000000076e-05, 5.95689999999989e-05, 5.9028000000002634e-05, 5.8986000000000455e-05, 5.881899999999815e-05, 5.890299999999904e-05, 5.9000000000000025e-05, 5.911100000000058e-05, 5.908299999999797e-05, 5.963900000000022e-05, 5.9027999999999164e-05, 5.9764000000000345e-05, 5.961099999999761e-05, 5.8986000000000455e-05, 5.894499999999775e-05, 5.8763999999999345e-05, 5.8791999999998484e-05, 5.962499999999718e-05, 5.897300000000036e-05, 5.8791999999998484e-05, 5.879100000000248e-05, 5.9679999999999456e-05, 5.9693999999999026e-05, 5.880499999999858e-05, 5.8972000000000885e-05, 5.958300000000194e-05, 5.965299999999979e-05, 5.890300000000251e-05, 5.961100000000108e-05, 5.9013999999999595e-05, 5.891699999999861e-05, 5.893099999999818e-05, 5.8944000000001745e-05, 5.888899999999947e-05, 5.897300000000036e-05, 5.8791999999998484e-05, 5.966699999999936e-05, 5.966699999999936e-05, 5.963900000000022e-05, 5.8722000000000635e-05, 5.9179999999998956e-05, 5.9084000000000914e-05, 5.8791999999998484e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.669" endtime="20201117 14:42:41.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.664" endtime="20201117 14:42:41.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.673" endtime="20201117 14:42:41.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.677" endtime="20201117 14:42:41.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.675" endtime="20201117 14:42:41.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.672" endtime="20201117 14:42:41.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.305" endtime="20201117 14:42:41.697"></status>
</kw>
<msg timestamp="20201117 14:42:41.698" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.706" endtime="20201117 14:42:41.723"></status>
</kw>
<msg timestamp="20201117 14:42:41.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.704" endtime="20201117 14:42:41.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.724" endtime="20201117 14:42:41.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.727" endtime="20201117 14:42:41.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.702" endtime="20201117 14:42:41.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.700" endtime="20201117 14:42:41.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.736" endtime="20201117 14:42:42.022"></status>
</kw>
<msg timestamp="20201117 14:42:42.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.734" endtime="20201117 14:42:42.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.026" endtime="20201117 14:42:42.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.035" endtime="20201117 14:42:42.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.732" endtime="20201117 14:42:42.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.730" endtime="20201117 14:42:42.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.041" level="INFO">${RESULT} = [{'time': 0.021776181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9347999999997264e-05, 'source_diff': 5.9347999999997264e-05}, {'time': 0.021837181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:42.038" endtime="20201117 14:42:42.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.055" level="INFO">${ACCURACY} = {'source_diff': [5.9347999999997264e-05, 5.88619999999998e-05, 5.9027999999999164e-05, 5.8887999999999996e-05, 5.8986000000000455e-05, 5.8958000000001315e-05, 5.877699999999944e-05, 5.9736000000001205...</msg>
<status status="PASS" starttime="20201117 14:42:42.042" endtime="20201117 14:42:42.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.059" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.058" endtime="20201117 14:42:42.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.062" level="INFO">VALUE: [5.9347999999997264e-05, 5.88619999999998e-05, 5.9027999999999164e-05, 5.8887999999999996e-05, 5.8986000000000455e-05, 5.8958000000001315e-05, 5.877699999999944e-05, 5.9736000000001205e-05, 5.9027999999999164e-05, 5.886100000000033e-05, 5.9707999999998596e-05, 5.95689999999989e-05, 5.906900000000187e-05, 5.9000000000000025e-05, 5.9694000000002495e-05, 5.891700000000208e-05, 5.963900000000022e-05, 5.9693999999999026e-05, 5.9000000000000025e-05, 5.9665999999999886e-05, 5.9041999999998734e-05, 5.9777999999999915e-05, 5.893100000000165e-05, 5.8902000000003035e-05, 5.891699999999861e-05, 5.9750000000000775e-05, 5.8806000000001524e-05, 5.8806000000001524e-05, 5.888899999999947e-05, 5.8972000000000885e-05, 5.898699999999993e-05, 5.9735999999997735e-05, 5.876299999999987e-05, 5.9665999999999886e-05, 5.9750000000000775e-05, 5.904100000000273e-05, 5.880499999999858e-05, 5.888900000000294e-05, 5.890299999999904e-05, 5.8792000000001954e-05, 5.8929999999998706e-05, 5.958299999999847e-05, 5.891699999999861e-05, 5.9013999999999595e-05, 5.9583999999997944e-05, 5.8986000000000455e-05, 5.9556000000002274e-05, 5.9069999999997874e-05, 5.941699999999911e-05, 5.8972000000000885e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.060" endtime="20201117 14:42:42.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.056" endtime="20201117 14:42:42.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.065" endtime="20201117 14:42:42.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.068" endtime="20201117 14:42:42.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.067" endtime="20201117 14:42:42.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.063" endtime="20201117 14:42:42.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.698" endtime="20201117 14:42:42.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.303" endtime="20201117 14:42:42.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.302" endtime="20201117 14:42:42.089"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.092" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.100" endtime="20201117 14:42:42.117"></status>
</kw>
<msg timestamp="20201117 14:42:42.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.098" endtime="20201117 14:42:42.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.119" endtime="20201117 14:42:42.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.121" endtime="20201117 14:42:42.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.096" endtime="20201117 14:42:42.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.094" endtime="20201117 14:42:42.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.131" endtime="20201117 14:42:42.416"></status>
</kw>
<msg timestamp="20201117 14:42:42.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024511931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:42.129" endtime="20201117 14:42:42.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024511931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:42.421" endtime="20201117 14:42:42.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.429" endtime="20201117 14:42:42.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.127" endtime="20201117 14:42:42.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.124" endtime="20201117 14:42:42.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.435" level="INFO">${RESULT} = [{'time': 0.024511931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.993099999999918e-05, 'source_diff': 5.993099999999918e-05}, {'time': 0.024574847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:42.432" endtime="20201117 14:42:42.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.450" level="INFO">${ACCURACY} = {'source_diff': [5.993099999999918e-05, 6.059699999999904e-05, 6.0764000000001345e-05, 5.9764000000000345e-05, 5.983299999999872e-05, 5.9999999999997555e-05, 6.0707999999999596e-05, 5.9805999999999054...</msg>
<status status="PASS" starttime="20201117 14:42:42.436" endtime="20201117 14:42:42.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.455" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.454" endtime="20201117 14:42:42.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.457" level="INFO">VALUE: [5.993099999999918e-05, 6.059699999999904e-05, 6.0764000000001345e-05, 5.9764000000000345e-05, 5.983299999999872e-05, 5.9999999999997555e-05, 6.0707999999999596e-05, 5.9805999999999054e-05, 6.0027999999996695e-05, 6.0528000000000665e-05, 6.061099999999861e-05, 6.079100000000101e-05, 6.063899999999775e-05, 6.0028000000000165e-05, 5.9848000000001234e-05, 5.995900000000179e-05, 6.0070000000002344e-05, 6.0000000000001025e-05, 5.9819999999998624e-05, 6.0083999999998444e-05, 5.9791999999999484e-05, 6.063799999999828e-05, 6.0680000000000456e-05, 6.062499999999818e-05, 5.9943999999999276e-05, 6.0652000000001316e-05, 6.05689999999999e-05, 6.0014000000000595e-05, 5.980499999999958e-05, 5.9735999999997735e-05, 5.9777999999999915e-05, 6.005499999999983e-05, 6.03750000000014e-05, 6.0444000000003245e-05, 6.008299999999897e-05, 6.0028000000000165e-05, 6.011100000000158e-05, 6.012500000000115e-05, 6.0000000000001025e-05, 5.9721999999998165e-05, 6.065300000000079e-05, 5.990300000000004e-05, 6.011099999999811e-05, 5.9847999999997764e-05, 6.0041999999999734e-05, 6.0112000000001053e-05, 6.0112000000001053e-05, 6.005499999999983e-05, 6.0680000000000456e-05, 6.00689999999994e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.456" endtime="20201117 14:42:42.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.451" endtime="20201117 14:42:42.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.460" endtime="20201117 14:42:42.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.464" endtime="20201117 14:42:42.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.462" endtime="20201117 14:42:42.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.459" endtime="20201117 14:42:42.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.092" endtime="20201117 14:42:42.484"></status>
</kw>
<msg timestamp="20201117 14:42:42.485" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.493" endtime="20201117 14:42:42.510"></status>
</kw>
<msg timestamp="20201117 14:42:42.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.491" endtime="20201117 14:42:42.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.512" endtime="20201117 14:42:42.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.515" endtime="20201117 14:42:42.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.489" endtime="20201117 14:42:42.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.486" endtime="20201117 14:42:42.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.524" endtime="20201117 14:42:42.810"></status>
</kw>
<msg timestamp="20201117 14:42:42.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.522" endtime="20201117 14:42:42.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.814" endtime="20201117 14:42:42.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.823" endtime="20201117 14:42:42.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.520" endtime="20201117 14:42:42.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.518" endtime="20201117 14:42:42.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.829" level="INFO">${RESULT} = [{'time': 0.022114403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9820000000002094e-05, 'source_diff': 5.9820000000002094e-05}, {'time': 0.022177417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:42.826" endtime="20201117 14:42:42.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.843" level="INFO">${ACCURACY} = {'source_diff': [5.9820000000002094e-05, 6.072300000000211e-05, 6.0000000000001025e-05, 5.9764000000000345e-05, 6.0584000000002414e-05, 5.9862000000000803e-05, 5.9791999999999484e-05, 5.99720000000018...</msg>
<status status="PASS" starttime="20201117 14:42:42.830" endtime="20201117 14:42:42.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.847" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.846" endtime="20201117 14:42:42.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.850" level="INFO">VALUE: [5.9820000000002094e-05, 6.072300000000211e-05, 6.0000000000001025e-05, 5.9764000000000345e-05, 6.0584000000002414e-05, 5.9862000000000803e-05, 5.9791999999999484e-05, 5.9972000000001885e-05, 5.993099999999918e-05, 6.0111999999997584e-05, 6.0056000000002774e-05, 5.9972000000001885e-05, 6.038900000000097e-05, 6.055500000000033e-05, 6.061100000000208e-05, 6.055500000000033e-05, 6.011100000000158e-05, 5.981899999999915e-05, 5.990300000000004e-05, 5.98750000000009e-05, 6.011099999999811e-05, 5.993100000000265e-05, 5.9943999999999276e-05, 6.011100000000158e-05, 6.062500000000165e-05, 5.9777999999999915e-05, 6.0055999999999304e-05, 6.0749999999998305e-05, 6.009699999999854e-05, 5.994500000000222e-05, 6.073699999999821e-05, 6.0055999999999304e-05, 6.013900000000072e-05, 6.0569999999999374e-05, 6.008299999999897e-05, 6.008299999999897e-05, 6.00689999999994e-05, 6.0028000000000165e-05, 6.0680000000000456e-05, 6.00689999999994e-05, 5.9986000000001455e-05, 5.983299999999872e-05, 5.9888999999997e-05, 6.013900000000072e-05, 6.005499999999983e-05, 5.980499999999958e-05, 5.986099999999786e-05, 6.012499999999768e-05, 6.0028000000000165e-05, 5.983300000000219e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.848" endtime="20201117 14:42:42.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.844" endtime="20201117 14:42:42.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.853" endtime="20201117 14:42:42.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.856" endtime="20201117 14:42:42.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.855" endtime="20201117 14:42:42.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.851" endtime="20201117 14:42:42.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.485" endtime="20201117 14:42:42.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.091" endtime="20201117 14:42:42.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.090" endtime="20201117 14:42:42.877"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.880" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.888" endtime="20201117 14:42:42.905"></status>
</kw>
<msg timestamp="20201117 14:42:42.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.887" endtime="20201117 14:42:42.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.907" endtime="20201117 14:42:42.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.909" endtime="20201117 14:42:42.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.884" endtime="20201117 14:42:42.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.882" endtime="20201117 14:42:42.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.918" endtime="20201117 14:42:43.205"></status>
</kw>
<msg timestamp="20201117 14:42:43.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024879431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.916" endtime="20201117 14:42:43.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024879431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.209" endtime="20201117 14:42:43.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.217" endtime="20201117 14:42:43.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.914" endtime="20201117 14:42:43.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.912" endtime="20201117 14:42:43.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.224" level="INFO">${RESULT} = [{'time': 0.024879431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0806000000000054e-05, 'source_diff': 6.0806000000000054e-05}, {'time': 0.024943431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:43.220" endtime="20201117 14:42:43.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.237" level="INFO">${ACCURACY} = {'source_diff': [6.0806000000000054e-05, 6.166699999999789e-05, 6.087499999999843e-05, 6.172299999999964e-05, 6.079100000000101e-05, 6.084700000000276e-05, 6.165300000000179e-05, 6.109699999999954e-05...</msg>
<status status="PASS" starttime="20201117 14:42:43.225" endtime="20201117 14:42:43.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.242" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.241" endtime="20201117 14:42:43.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.244" level="INFO">VALUE: [6.0806000000000054e-05, 6.166699999999789e-05, 6.087499999999843e-05, 6.172299999999964e-05, 6.079100000000101e-05, 6.084700000000276e-05, 6.165300000000179e-05, 6.109699999999954e-05, 6.1014000000001595e-05, 6.104100000000126e-05, 6.081900000000015e-05, 6.172200000000017e-05, 6.091700000000061e-05, 6.083299999999972e-05, 6.172200000000017e-05, 6.087499999999843e-05, 6.173599999999974e-05, 6.10690000000004e-05, 6.15279999999982e-05, 6.138900000000197e-05, 6.154200000000123e-05, 6.17080000000006e-05, 6.163899999999875e-05, 6.0763999999997875e-05, 6.179100000000201e-05, 6.0778000000000915e-05, 6.0888999999998e-05, 6.087499999999843e-05, 6.155500000000133e-05, 6.165299999999832e-05, 6.111099999999911e-05, 6.168000000000146e-05, 6.159700000000004e-05, 6.166599999999842e-05, 6.10690000000004e-05, 6.0764000000001345e-05, 6.0764000000001345e-05, 6.1000000000002025e-05, 6.111099999999911e-05, 6.084699999999929e-05, 6.0778000000000915e-05, 6.108299999999997e-05, 6.17080000000006e-05, 6.165300000000179e-05, 6.168100000000093e-05, 6.088900000000147e-05, 6.1000000000002025e-05, 6.166699999999789e-05, 6.16950000000005e-05, 6.090300000000104e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.243" endtime="20201117 14:42:43.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.238" endtime="20201117 14:42:43.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.247" endtime="20201117 14:42:43.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.251" endtime="20201117 14:42:43.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.249" endtime="20201117 14:42:43.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.246" endtime="20201117 14:42:43.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.880" endtime="20201117 14:42:43.272"></status>
</kw>
<msg timestamp="20201117 14:42:43.272" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.280" endtime="20201117 14:42:43.297"></status>
</kw>
<msg timestamp="20201117 14:42:43.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.279" endtime="20201117 14:42:43.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.299" endtime="20201117 14:42:43.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.301" endtime="20201117 14:42:43.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.276" endtime="20201117 14:42:43.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.274" endtime="20201117 14:42:43.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.310" endtime="20201117 14:42:43.597"></status>
</kw>
<msg timestamp="20201117 14:42:43.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.308" endtime="20201117 14:42:43.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.602" endtime="20201117 14:42:43.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.610" endtime="20201117 14:42:43.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.306" endtime="20201117 14:42:43.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.304" endtime="20201117 14:42:43.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.617" level="INFO">${RESULT} = [{'time': 0.022340444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.158300000000047e-05, 'source_diff': 6.158300000000047e-05}, {'time': 0.022404528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.613" endtime="20201117 14:42:43.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.630" level="INFO">${ACCURACY} = {'source_diff': [6.158300000000047e-05, 6.179200000000148e-05, 6.104099999999779e-05, 6.163900000000222e-05, 6.159700000000004e-05, 6.0986000000002455e-05, 6.109699999999954e-05, 6.0888999999998e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:43.618" endtime="20201117 14:42:43.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.634" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.633" endtime="20201117 14:42:43.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.637" level="INFO">VALUE: [6.158300000000047e-05, 6.179200000000148e-05, 6.104099999999779e-05, 6.163900000000222e-05, 6.159700000000004e-05, 6.0986000000002455e-05, 6.109699999999954e-05, 6.0888999999998e-05, 6.137499999999893e-05, 6.10690000000004e-05, 6.173599999999974e-05, 6.1013999999998125e-05, 6.108299999999997e-05, 6.109699999999954e-05, 6.161100000000308e-05, 6.173599999999974e-05, 6.17499999999993e-05, 6.093100000000018e-05, 6.0792000000000485e-05, 6.0971999999999416e-05, 6.140299999999807e-05, 6.0792000000000485e-05, 6.0819999999999624e-05, 6.1000000000002025e-05, 6.173700000000268e-05, 6.102699999999822e-05, 6.159700000000004e-05, 6.161099999999961e-05, 6.087499999999843e-05, 6.172200000000017e-05, 6.17080000000006e-05, 6.17499999999993e-05, 6.168000000000146e-05, 6.0999999999998555e-05, 6.0957999999999846e-05, 6.10690000000004e-05, 6.113899999999825e-05, 6.091700000000061e-05, 6.17080000000006e-05, 6.162499999999918e-05, 6.0777999999997445e-05, 6.090300000000104e-05, 6.0929999999997236e-05, 6.173599999999974e-05, 6.105500000000083e-05, 6.158399999999994e-05, 6.0833999999999194e-05, 6.0999999999998555e-05, 6.104200000000073e-05, 6.176399999999888e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.635" endtime="20201117 14:42:43.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.631" endtime="20201117 14:42:43.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.640" endtime="20201117 14:42:43.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.644" endtime="20201117 14:42:43.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.642" endtime="20201117 14:42:43.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.639" endtime="20201117 14:42:43.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.273" endtime="20201117 14:42:43.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.878" endtime="20201117 14:42:43.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.878" endtime="20201117 14:42:43.665"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.667" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.676" endtime="20201117 14:42:43.693"></status>
</kw>
<msg timestamp="20201117 14:42:43.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.674" endtime="20201117 14:42:43.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.694" endtime="20201117 14:42:43.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.697" endtime="20201117 14:42:43.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.671" endtime="20201117 14:42:43.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.669" endtime="20201117 14:42:43.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.706" endtime="20201117 14:42:43.993"></status>
</kw>
<msg timestamp="20201117 14:42:43.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024180306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.704" endtime="20201117 14:42:43.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024180306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.997" endtime="20201117 14:42:44.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.005" endtime="20201117 14:42:44.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.702" endtime="20201117 14:42:44.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.700" endtime="20201117 14:42:44.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.012" level="INFO">${RESULT} = [{'time': 0.024243056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.024307056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:44.008" endtime="20201117 14:42:44.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.027" level="INFO">${ACCURACY} = {'source_diff': [6.27500000000003e-05, 6.176399999999888e-05, 6.193099999999771e-05, 6.25560000000018e-05, 6.199999999999956e-05, 6.176399999999888e-05, 6.273600000000074e-05, 6.254099999999929e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:42:44.013" endtime="20201117 14:42:44.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.031" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.030" endtime="20201117 14:42:44.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.034" level="INFO">VALUE: [6.27500000000003e-05, 6.176399999999888e-05, 6.193099999999771e-05, 6.25560000000018e-05, 6.199999999999956e-05, 6.176399999999888e-05, 6.273600000000074e-05, 6.254099999999929e-05, 6.261100000000061e-05, 6.179099999999854e-05, 6.266700000000236e-05, 6.265299999999932e-05, 6.190300000000204e-05, 6.197200000000042e-05, 6.2582999999998e-05, 6.208300000000097e-05, 6.259699999999757e-05, 6.27500000000003e-05, 6.208400000000044e-05, 6.20560000000013e-05, 6.209699999999707e-05, 6.179199999999802e-05, 6.176400000000234e-05, 6.191699999999814e-05, 6.194500000000075e-05, 6.261200000000008e-05, 6.1888999999999e-05, 6.17629999999994e-05, 6.262500000000018e-05, 6.201399999999913e-05, 6.259699999999757e-05, 6.208300000000097e-05, 6.187499999999943e-05, 6.205499999999836e-05, 6.177800000000191e-05, 6.197200000000042e-05, 6.183300000000072e-05, 6.213899999999925e-05, 6.197200000000042e-05, 6.201399999999913e-05, 6.265299999999932e-05, 6.179200000000148e-05, 6.254199999999877e-05, 6.176400000000234e-05, 6.182000000000062e-05, 6.204200000000173e-05, 6.212500000000315e-05, 6.195800000000085e-05, 6.199999999999956e-05, 6.213899999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.032" endtime="20201117 14:42:44.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.027" endtime="20201117 14:42:44.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.037" endtime="20201117 14:42:44.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.040" endtime="20201117 14:42:44.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.039" endtime="20201117 14:42:44.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.035" endtime="20201117 14:42:44.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.668" endtime="20201117 14:42:44.061"></status>
</kw>
<msg timestamp="20201117 14:42:44.061" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.069" endtime="20201117 14:42:44.086"></status>
</kw>
<msg timestamp="20201117 14:42:44.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.068" endtime="20201117 14:42:44.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.088" endtime="20201117 14:42:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.090" endtime="20201117 14:42:44.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.065" endtime="20201117 14:42:44.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.063" endtime="20201117 14:42:44.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.099" endtime="20201117 14:42:44.386"></status>
</kw>
<msg timestamp="20201117 14:42:44.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021476597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.098" endtime="20201117 14:42:44.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021476597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.390" endtime="20201117 14:42:44.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.398" endtime="20201117 14:42:44.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.095" endtime="20201117 14:42:44.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.093" endtime="20201117 14:42:44.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.405" level="INFO">${RESULT} = [{'time': 0.021539375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277799999999945e-05, 'source_diff': 6.277799999999945e-05}, {'time': 0.021603403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:44.402" endtime="20201117 14:42:44.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.418" level="INFO">${ACCURACY} = {'source_diff': [6.277799999999945e-05, 6.187499999999943e-05, 6.269400000000203e-05, 6.211100000000011e-05, 6.201300000000312e-05, 6.186099999999986e-05, 6.27080000000016e-05, 6.184700000000029e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:44.406" endtime="20201117 14:42:44.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.423" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.422" endtime="20201117 14:42:44.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.425" level="INFO">VALUE: [6.277799999999945e-05, 6.187499999999943e-05, 6.269400000000203e-05, 6.211100000000011e-05, 6.201300000000312e-05, 6.186099999999986e-05, 6.27080000000016e-05, 6.184700000000029e-05, 6.272200000000117e-05, 6.193099999999771e-05, 6.177799999999845e-05, 6.268099999999846e-05, 6.208400000000044e-05, 6.177800000000191e-05, 6.182000000000062e-05, 6.198599999999999e-05, 6.191699999999814e-05, 6.211199999999958e-05, 6.273600000000074e-05, 6.198599999999999e-05, 6.19019999999991e-05, 6.202699999999922e-05, 6.273600000000074e-05, 6.202700000000269e-05, 6.259699999999757e-05, 6.262500000000018e-05, 6.191599999999867e-05, 6.175000000000277e-05, 6.272200000000117e-05, 6.211100000000011e-05, 6.205599999999784e-05, 6.176400000000234e-05, 6.205599999999784e-05, 6.18340000000002e-05, 6.25699999999979e-05, 6.263899999999975e-05, 6.27500000000003e-05, 6.18340000000002e-05, 6.191700000000161e-05, 6.262500000000018e-05, 6.208400000000044e-05, 6.263899999999975e-05, 6.193100000000118e-05, 6.188799999999953e-05, 6.20560000000013e-05, 6.255499999999886e-05, 6.181900000000115e-05, 6.199999999999956e-05, 6.176399999999888e-05, 6.263899999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.424" endtime="20201117 14:42:44.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.419" endtime="20201117 14:42:44.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.429" endtime="20201117 14:42:44.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.432" endtime="20201117 14:42:44.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.431" endtime="20201117 14:42:44.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.427" endtime="20201117 14:42:44.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.062" endtime="20201117 14:42:44.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.666" endtime="20201117 14:42:44.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.665" endtime="20201117 14:42:44.453"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.456" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.464" endtime="20201117 14:42:44.481"></status>
</kw>
<msg timestamp="20201117 14:42:44.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.462" endtime="20201117 14:42:44.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.482" endtime="20201117 14:42:44.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.485" endtime="20201117 14:42:44.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.460" endtime="20201117 14:42:44.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.458" endtime="20201117 14:42:44.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.494" endtime="20201117 14:42:44.780"></status>
</kw>
<msg timestamp="20201117 14:42:44.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024127986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024191292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.492" endtime="20201117 14:42:44.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024127986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024191292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.785" endtime="20201117 14:42:44.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.793" endtime="20201117 14:42:44.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.490" endtime="20201117 14:42:44.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.488" endtime="20201117 14:42:44.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.800" level="INFO">${RESULT} = [{'time': 0.024191292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.330599999999909e-05, 'source_diff': 6.330599999999909e-05}, {'time': 0.024256292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:44.796" endtime="20201117 14:42:44.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.813" level="INFO">${ACCURACY} = {'source_diff': [6.330599999999909e-05, 6.280599999999859e-05, 6.28340000000012e-05, 6.357000000000237e-05, 6.297300000000089e-05, 6.305599999999884e-05, 6.287500000000043e-05, 6.365199999999738e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:44.801" endtime="20201117 14:42:44.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.818" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.817" endtime="20201117 14:42:44.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.820" level="INFO">VALUE: [6.330599999999909e-05, 6.280599999999859e-05, 6.28340000000012e-05, 6.357000000000237e-05, 6.297300000000089e-05, 6.305599999999884e-05, 6.287500000000043e-05, 6.365199999999738e-05, 6.373600000000174e-05, 6.281899999999868e-05, 6.29020000000001e-05, 6.365300000000032e-05, 6.280500000000258e-05, 6.301400000000013e-05, 6.362500000000118e-05, 6.280499999999911e-05, 6.359699999999857e-05, 6.369499999999903e-05, 6.277799999999945e-05, 6.30690000000024e-05, 6.359700000000204e-05, 6.366699999999989e-05, 6.286100000000086e-05, 6.373600000000174e-05, 6.2889e-05, 6.37500000000013e-05, 6.361099999999814e-05, 6.30560000000023e-05, 6.36950000000025e-05, 6.301300000000065e-05, 6.373599999999827e-05, 6.277799999999945e-05, 6.280499999999911e-05, 6.309700000000154e-05, 6.273600000000074e-05, 6.370799999999913e-05, 6.3582999999999e-05, 6.283300000000172e-05, 6.311100000000111e-05, 6.301400000000013e-05, 6.363900000000075e-05, 6.3582999999999e-05, 6.304199999999927e-05, 6.298600000000099e-05, 6.300000000000056e-05, 6.291699999999914e-05, 6.301400000000013e-05, 6.287500000000043e-05, 6.276399999999988e-05, 6.273599999999727e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.819" endtime="20201117 14:42:44.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.814" endtime="20201117 14:42:44.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.824" endtime="20201117 14:42:44.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.827" endtime="20201117 14:42:44.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.825" endtime="20201117 14:42:44.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.822" endtime="20201117 14:42:44.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.456" endtime="20201117 14:42:44.848"></status>
</kw>
<msg timestamp="20201117 14:42:44.848" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.856" endtime="20201117 14:42:44.873"></status>
</kw>
<msg timestamp="20201117 14:42:44.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.854" endtime="20201117 14:42:44.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.875" endtime="20201117 14:42:44.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.877" endtime="20201117 14:42:44.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.852" endtime="20201117 14:42:44.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.850" endtime="20201117 14:42:44.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.886" endtime="20201117 14:42:45.172"></status>
</kw>
<msg timestamp="20201117 14:42:45.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.885" endtime="20201117 14:42:45.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.176" endtime="20201117 14:42:45.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.184" endtime="20201117 14:42:45.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.882" endtime="20201117 14:42:45.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.880" endtime="20201117 14:42:45.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.191" level="INFO">${RESULT} = [{'time': 0.021659347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.32219999999982e-05, 'source_diff': 6.32219999999982e-05}, {'time': 0.021724347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:45.188" endtime="20201117 14:42:45.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.204" level="INFO">${ACCURACY} = {'source_diff': [6.32219999999982e-05, 6.30690000000024e-05, 6.281900000000215e-05, 6.37639999999974e-05, 6.358300000000247e-05, 6.362500000000118e-05, 6.363900000000075e-05, 6.365300000000032e-05, 6....</msg>
<status status="PASS" starttime="20201117 14:42:45.192" endtime="20201117 14:42:45.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.209" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.208" endtime="20201117 14:42:45.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.212" level="INFO">VALUE: [6.32219999999982e-05, 6.30690000000024e-05, 6.281900000000215e-05, 6.37639999999974e-05, 6.358300000000247e-05, 6.362500000000118e-05, 6.363900000000075e-05, 6.365300000000032e-05, 6.298599999999752e-05, 6.37219999999987e-05, 6.308400000000144e-05, 6.30279999999997e-05, 6.277799999999945e-05, 6.37089999999986e-05, 6.30699999999984e-05, 6.286100000000086e-05, 6.30699999999984e-05, 6.290299999999957e-05, 6.297200000000142e-05, 6.279199999999902e-05, 6.301400000000013e-05, 6.37089999999986e-05, 6.365200000000085e-05, 6.281899999999868e-05, 6.361100000000161e-05, 6.277699999999997e-05, 6.370799999999913e-05, 6.30829999999985e-05, 6.295799999999838e-05, 6.302700000000022e-05, 6.302700000000022e-05, 6.280499999999911e-05, 6.311100000000111e-05, 6.365300000000032e-05, 6.369400000000303e-05, 6.297200000000142e-05, 6.312500000000068e-05, 6.374999999999784e-05, 6.355599999999934e-05, 6.373599999999827e-05, 6.363900000000075e-05, 6.298600000000099e-05, 6.366699999999989e-05, 6.362500000000118e-05, 6.290299999999957e-05, 6.379100000000054e-05, 6.291699999999914e-05, 6.309800000000101e-05, 6.35560000000028e-05, 6.284800000000076e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.210" endtime="20201117 14:42:45.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.205" endtime="20201117 14:42:45.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.215" endtime="20201117 14:42:45.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.218" endtime="20201117 14:42:45.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.217" endtime="20201117 14:42:45.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.213" endtime="20201117 14:42:45.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.849" endtime="20201117 14:42:45.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.454" endtime="20201117 14:42:45.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.454" endtime="20201117 14:42:45.239"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.242" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.250" endtime="20201117 14:42:45.266"></status>
</kw>
<msg timestamp="20201117 14:42:45.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.248" endtime="20201117 14:42:45.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.268" endtime="20201117 14:42:45.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.270" endtime="20201117 14:42:45.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.246" endtime="20201117 14:42:45.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.244" endtime="20201117 14:42:45.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.279" endtime="20201117 14:42:45.567"></status>
</kw>
<msg timestamp="20201117 14:42:45.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.278" endtime="20201117 14:42:45.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.571" endtime="20201117 14:42:45.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.579" endtime="20201117 14:42:45.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.275" endtime="20201117 14:42:45.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.273" endtime="20201117 14:42:45.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.586" level="INFO">${RESULT} = [{'time': 0.024107681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.437499999999846e-05, 'source_diff': 6.437499999999846e-05}, {'time': 0.024174639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.583" endtime="20201117 14:42:45.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.601" level="INFO">${ACCURACY} = {'source_diff': [6.437499999999846e-05, 6.468100000000046e-05, 6.394499999999928e-05, 6.393099999999971e-05, 6.380599999999959e-05, 6.377800000000045e-05, 6.412500000000168e-05, 6.469500000000003e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:45.587" endtime="20201117 14:42:45.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.605" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.604" endtime="20201117 14:42:45.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.608" level="INFO">VALUE: [6.437499999999846e-05, 6.468100000000046e-05, 6.394499999999928e-05, 6.393099999999971e-05, 6.380599999999959e-05, 6.377800000000045e-05, 6.412500000000168e-05, 6.469500000000003e-05, 6.409700000000254e-05, 6.382000000000262e-05, 6.47639999999984e-05, 6.459699999999957e-05, 6.472200000000317e-05, 6.47219999999997e-05, 6.393000000000024e-05, 6.37639999999974e-05, 6.470800000000013e-05, 6.40829999999995e-05, 6.379100000000054e-05, 6.40829999999995e-05, 6.376400000000088e-05, 6.395799999999938e-05, 6.377800000000045e-05, 6.395799999999938e-05, 6.474999999999884e-05, 6.386099999999839e-05, 6.436099999999889e-05, 6.386099999999839e-05, 6.386099999999839e-05, 6.381999999999916e-05, 6.395899999999885e-05, 6.455600000000034e-05, 6.461099999999914e-05, 6.461099999999914e-05, 6.395899999999885e-05, 6.468100000000046e-05, 6.465200000000185e-05, 6.384699999999882e-05, 6.381900000000315e-05, 6.397200000000242e-05, 6.4583e-05, 6.387499999999796e-05, 6.398600000000199e-05, 6.387499999999796e-05, 6.437499999999846e-05, 6.398600000000199e-05, 6.37639999999974e-05, 6.386100000000186e-05, 6.408399999999898e-05, 6.47639999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.606" endtime="20201117 14:42:45.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.602" endtime="20201117 14:42:45.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.611" endtime="20201117 14:42:45.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.614" endtime="20201117 14:42:45.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.613" endtime="20201117 14:42:45.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.609" endtime="20201117 14:42:45.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.242" endtime="20201117 14:42:45.635"></status>
</kw>
<msg timestamp="20201117 14:42:45.635" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.644" endtime="20201117 14:42:45.660"></status>
</kw>
<msg timestamp="20201117 14:42:45.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.642" endtime="20201117 14:42:45.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.662" endtime="20201117 14:42:45.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.664" endtime="20201117 14:42:45.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.640" endtime="20201117 14:42:45.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.637" endtime="20201117 14:42:45.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.673" endtime="20201117 14:42:45.959"></status>
</kw>
<msg timestamp="20201117 14:42:45.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.672" endtime="20201117 14:42:45.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.963" endtime="20201117 14:42:45.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.971" endtime="20201117 14:42:45.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.669" endtime="20201117 14:42:45.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.667" endtime="20201117 14:42:45.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.978" level="INFO">${RESULT} = [{'time': 0.021860667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.398600000000199e-05, 'source_diff': 6.398600000000199e-05}, {'time': 0.021926681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.975" endtime="20201117 14:42:45.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.992" level="INFO">${ACCURACY} = {'source_diff': [6.398600000000199e-05, 6.379200000000002e-05, 6.404200000000027e-05, 6.394499999999928e-05, 6.480600000000059e-05, 6.393099999999971e-05, 6.473599999999927e-05, 6.388799999999806e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:45.979" endtime="20201117 14:42:45.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.996" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.995" endtime="20201117 14:42:45.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.999" level="INFO">VALUE: [6.398600000000199e-05, 6.379200000000002e-05, 6.404200000000027e-05, 6.394499999999928e-05, 6.480600000000059e-05, 6.393099999999971e-05, 6.473599999999927e-05, 6.388799999999806e-05, 6.383299999999925e-05, 6.466600000000142e-05, 6.387499999999796e-05, 6.456900000000043e-05, 6.465300000000132e-05, 6.473599999999927e-05, 6.387499999999796e-05, 6.461099999999914e-05, 6.397199999999895e-05, 6.456900000000043e-05, 6.40280000000007e-05, 6.461100000000261e-05, 6.462499999999871e-05, 6.469500000000003e-05, 6.462500000000218e-05, 6.404200000000027e-05, 6.373600000000174e-05, 6.455600000000034e-05, 6.374999999999784e-05, 6.383399999999873e-05, 6.404200000000027e-05, 6.467999999999752e-05, 6.409799999999855e-05, 6.388899999999753e-05, 6.383299999999925e-05, 6.463800000000228e-05, 6.386100000000186e-05, 6.377800000000045e-05, 6.377700000000097e-05, 6.377800000000045e-05, 6.40829999999995e-05, 6.3889000000001e-05, 6.465199999999838e-05, 6.456899999999696e-05, 6.4583e-05, 6.402799999999723e-05, 6.384699999999882e-05, 6.47219999999997e-05, 6.391700000000014e-05, 6.383399999999873e-05, 6.411099999999864e-05, 6.461099999999914e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.997" endtime="20201117 14:42:45.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.993" endtime="20201117 14:42:45.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.002" endtime="20201117 14:42:46.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.005" endtime="20201117 14:42:46.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.004" endtime="20201117 14:42:46.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.000" endtime="20201117 14:42:46.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.636" endtime="20201117 14:42:46.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.240" endtime="20201117 14:42:46.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.240" endtime="20201117 14:42:46.026"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.028" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.037" endtime="20201117 14:42:46.053"></status>
</kw>
<msg timestamp="20201117 14:42:46.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.035" endtime="20201117 14:42:46.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.055" endtime="20201117 14:42:46.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.057" endtime="20201117 14:42:46.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.032" endtime="20201117 14:42:46.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.030" endtime="20201117 14:42:46.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.066" endtime="20201117 14:42:46.353"></status>
</kw>
<msg timestamp="20201117 14:42:46.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024038708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.065" endtime="20201117 14:42:46.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024038708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024104292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.357" endtime="20201117 14:42:46.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.366" endtime="20201117 14:42:46.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.062" endtime="20201117 14:42:46.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.060" endtime="20201117 14:42:46.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.372" level="INFO">${RESULT} = [{'time': 0.024104292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.558400000000048e-05, 'source_diff': 6.558400000000048e-05}, {'time': 0.024171292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.369" endtime="20201117 14:42:46.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.386" level="INFO">${ACCURACY} = {'source_diff': [6.558400000000048e-05, 6.493100000000071e-05, 6.4889000000002e-05, 6.49159999999982e-05, 6.479200000000102e-05, 6.505500000000136e-05, 6.569400000000156e-05, 6.573600000000027e-05, 6....</msg>
<status status="PASS" starttime="20201117 14:42:46.373" endtime="20201117 14:42:46.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.390" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.389" endtime="20201117 14:42:46.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.392" level="INFO">VALUE: [6.558400000000048e-05, 6.493100000000071e-05, 6.4889000000002e-05, 6.49159999999982e-05, 6.479200000000102e-05, 6.505500000000136e-05, 6.569400000000156e-05, 6.573600000000027e-05, 6.495799999999691e-05, 6.493000000000124e-05, 6.493000000000124e-05, 6.501400000000213e-05, 6.537499999999946e-05, 6.574999999999984e-05, 6.563899999999928e-05, 6.480500000000111e-05, 6.494500000000028e-05, 6.502799999999823e-05, 6.497199999999995e-05, 6.568100000000146e-05, 6.511099999999964e-05, 6.487499999999896e-05, 6.501400000000213e-05, 6.562499999999971e-05, 6.568000000000199e-05, 6.479199999999755e-05, 6.511099999999964e-05, 6.568100000000146e-05, 6.566700000000189e-05, 6.569499999999756e-05, 6.486099999999939e-05, 6.477700000000197e-05, 6.504099999999832e-05, 6.492999999999777e-05, 6.491600000000167e-05, 6.570799999999766e-05, 6.562499999999971e-05, 6.513900000000225e-05, 6.577799999999898e-05, 6.486099999999939e-05, 6.505499999999789e-05, 6.570800000000113e-05, 6.555599999999787e-05, 6.505500000000136e-05, 6.540300000000207e-05, 6.482000000000016e-05, 6.5583000000001e-05, 6.484699999999982e-05, 6.568100000000146e-05, 6.477800000000145e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.391" endtime="20201117 14:42:46.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.386" endtime="20201117 14:42:46.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.396" endtime="20201117 14:42:46.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.399" endtime="20201117 14:42:46.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.397" endtime="20201117 14:42:46.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.394" endtime="20201117 14:42:46.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.029" endtime="20201117 14:42:46.420"></status>
</kw>
<msg timestamp="20201117 14:42:46.420" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.428" endtime="20201117 14:42:46.445"></status>
</kw>
<msg timestamp="20201117 14:42:46.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.427" endtime="20201117 14:42:46.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.447" endtime="20201117 14:42:46.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.449" endtime="20201117 14:42:46.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.424" endtime="20201117 14:42:46.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.422" endtime="20201117 14:42:46.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.459" endtime="20201117 14:42:46.745"></status>
</kw>
<msg timestamp="20201117 14:42:46.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.457" endtime="20201117 14:42:46.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.749" endtime="20201117 14:42:46.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.757" endtime="20201117 14:42:46.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.454" endtime="20201117 14:42:46.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.453" endtime="20201117 14:42:46.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.764" level="INFO">${RESULT} = [{'time': 0.021619444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.565200000000285e-05, 'source_diff': 6.565200000000285e-05}, {'time': 0.021686486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.760" endtime="20201117 14:42:46.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.777" level="INFO">${ACCURACY} = {'source_diff': [6.565200000000285e-05, 6.497199999999995e-05, 6.47769999999985e-05, 6.484699999999982e-05, 6.497199999999995e-05, 6.502699999999875e-05, 6.488899999999853e-05, 6.509700000000007e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:46.765" endtime="20201117 14:42:46.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.782" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.780" endtime="20201117 14:42:46.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.784" level="INFO">VALUE: [6.565200000000285e-05, 6.497199999999995e-05, 6.47769999999985e-05, 6.484699999999982e-05, 6.497199999999995e-05, 6.502699999999875e-05, 6.488899999999853e-05, 6.509700000000007e-05, 6.570800000000113e-05, 6.570800000000113e-05, 6.573600000000027e-05, 6.4889000000002e-05, 6.511099999999964e-05, 6.495800000000038e-05, 6.559700000000057e-05, 6.574999999999984e-05, 6.479200000000102e-05, 6.53890000000025e-05, 6.562499999999971e-05, 6.482000000000016e-05, 6.511200000000258e-05, 6.494500000000028e-05, 6.512499999999921e-05, 6.57090000000006e-05, 6.493100000000071e-05, 6.566600000000242e-05, 6.505600000000084e-05, 6.481900000000068e-05, 6.573600000000027e-05, 6.486099999999939e-05, 6.486100000000286e-05, 6.57220000000007e-05, 6.566600000000242e-05, 6.506899999999746e-05, 6.488899999999853e-05, 6.491700000000114e-05, 6.57220000000007e-05, 6.555600000000134e-05, 6.498599999999952e-05, 6.494500000000028e-05, 6.569500000000103e-05, 6.561100000000014e-05, 6.551400000000263e-05, 6.516600000000192e-05, 6.50700000000004e-05, 6.570799999999766e-05, 6.506900000000093e-05, 6.497299999999942e-05, 6.505500000000136e-05, 6.495800000000038e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.783" endtime="20201117 14:42:46.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.778" endtime="20201117 14:42:46.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.787" endtime="20201117 14:42:46.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.790" endtime="20201117 14:42:46.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.789" endtime="20201117 14:42:46.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.785" endtime="20201117 14:42:46.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.421" endtime="20201117 14:42:46.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.027" endtime="20201117 14:42:46.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.026" endtime="20201117 14:42:46.812"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.814" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.822" endtime="20201117 14:42:46.840"></status>
</kw>
<msg timestamp="20201117 14:42:46.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.821" endtime="20201117 14:42:46.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.841" endtime="20201117 14:42:46.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.844" endtime="20201117 14:42:46.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.818" endtime="20201117 14:42:46.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.816" endtime="20201117 14:42:46.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.853" endtime="20201117 14:42:47.139"></status>
</kw>
<msg timestamp="20201117 14:42:47.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.851" endtime="20201117 14:42:47.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.144" endtime="20201117 14:42:47.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.152" endtime="20201117 14:42:47.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.849" endtime="20201117 14:42:47.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.847" endtime="20201117 14:42:47.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.158" level="INFO">${RESULT} = [{'time': 0.025010806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.632000000000166e-05, 'source_diff': 6.632000000000166e-05}, {'time': 0.025078792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.155" endtime="20201117 14:42:47.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.173" level="INFO">${ACCURACY} = {'source_diff': [6.632000000000166e-05, 6.609800000000055e-05, 6.586100000000039e-05, 6.65700000000019e-05, 6.591699999999867e-05, 6.595800000000138e-05, 6.600000000000009e-05, 6.675000000000084e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:47.159" endtime="20201117 14:42:47.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.178" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.177" endtime="20201117 14:42:47.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.180" level="INFO">VALUE: [6.632000000000166e-05, 6.609800000000055e-05, 6.586100000000039e-05, 6.65700000000019e-05, 6.591699999999867e-05, 6.595800000000138e-05, 6.600000000000009e-05, 6.675000000000084e-05, 6.666599999999995e-05, 6.669499999999856e-05, 6.659700000000157e-05, 6.592999999999877e-05, 6.587499999999996e-05, 6.67359999999978e-05, 6.613899999999978e-05, 6.65419999999993e-05, 6.675000000000084e-05, 6.59029999999991e-05, 6.60419999999988e-05, 6.612500000000021e-05, 6.673600000000127e-05, 6.65419999999993e-05, 6.600000000000009e-05, 6.608400000000098e-05, 6.593100000000171e-05, 6.611100000000064e-05, 6.661200000000062e-05, 6.663900000000028e-05, 6.590199999999963e-05, 6.600000000000009e-05, 6.60969999999976e-05, 6.586100000000039e-05, 6.590199999999963e-05, 6.669399999999909e-05, 6.598600000000052e-05, 6.663900000000028e-05, 6.601399999999966e-05, 6.604099999999932e-05, 6.588899999999953e-05, 6.60830000000015e-05, 6.608299999999803e-05, 6.634700000000132e-05, 6.650000000000059e-05, 6.612500000000021e-05, 6.583300000000125e-05, 6.580599999999812e-05, 6.663900000000028e-05, 6.579200000000202e-05, 6.588899999999953e-05, 6.595900000000085e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.179" endtime="20201117 14:42:47.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.174" endtime="20201117 14:42:47.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.183" endtime="20201117 14:42:47.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.186" endtime="20201117 14:42:47.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.185" endtime="20201117 14:42:47.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.182" endtime="20201117 14:42:47.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.815" endtime="20201117 14:42:47.207"></status>
</kw>
<msg timestamp="20201117 14:42:47.208" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.216" endtime="20201117 14:42:47.233"></status>
</kw>
<msg timestamp="20201117 14:42:47.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.214" endtime="20201117 14:42:47.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.235" endtime="20201117 14:42:47.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.237" endtime="20201117 14:42:47.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.212" endtime="20201117 14:42:47.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.210" endtime="20201117 14:42:47.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.246" endtime="20201117 14:42:47.533"></status>
</kw>
<msg timestamp="20201117 14:42:47.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.245" endtime="20201117 14:42:47.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.537" endtime="20201117 14:42:47.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.546" endtime="20201117 14:42:47.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.242" endtime="20201117 14:42:47.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.240" endtime="20201117 14:42:47.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.552" level="INFO">${RESULT} = [{'time': 0.022132806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.636200000000037e-05, 'source_diff': 6.636200000000037e-05}, {'time': 0.022200806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.549" endtime="20201117 14:42:47.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.566" level="INFO">${ACCURACY} = {'source_diff': [6.636200000000037e-05, 6.609800000000055e-05, 6.654099999999982e-05, 6.667999999999952e-05, 6.579100000000254e-05, 6.666599999999995e-05, 6.675000000000084e-05, 6.67359999999978e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:47.553" endtime="20201117 14:42:47.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.570" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.569" endtime="20201117 14:42:47.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.573" level="INFO">VALUE: [6.636200000000037e-05, 6.609800000000055e-05, 6.654099999999982e-05, 6.667999999999952e-05, 6.579100000000254e-05, 6.666599999999995e-05, 6.675000000000084e-05, 6.67359999999978e-05, 6.577800000000245e-05, 6.643100000000221e-05, 6.638900000000003e-05, 6.611099999999717e-05, 6.658299999999853e-05, 6.668099999999899e-05, 6.662499999999724e-05, 6.602799999999923e-05, 6.584700000000082e-05, 6.590300000000257e-05, 6.583400000000073e-05, 6.604200000000227e-05, 6.665299999999985e-05, 6.57090000000006e-05, 6.586100000000039e-05, 6.658400000000148e-05, 6.609800000000055e-05, 6.670899999999813e-05, 6.640200000000013e-05, 6.601399999999966e-05, 6.669399999999909e-05, 6.666599999999995e-05, 6.60830000000015e-05, 6.57639999999994e-05, 6.665300000000332e-05, 6.57639999999994e-05, 6.587499999999996e-05, 6.601399999999966e-05, 6.588899999999953e-05, 6.65419999999993e-05, 6.609700000000107e-05, 6.662500000000071e-05, 6.593099999999824e-05, 6.672199999999823e-05, 6.595900000000085e-05, 6.591700000000214e-05, 6.59029999999991e-05, 6.652799999999973e-05, 6.579200000000202e-05, 6.661100000000114e-05, 6.601399999999966e-05, 6.576400000000288e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.571" endtime="20201117 14:42:47.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.567" endtime="20201117 14:42:47.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.576" endtime="20201117 14:42:47.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.580" endtime="20201117 14:42:47.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.578" endtime="20201117 14:42:47.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.574" endtime="20201117 14:42:47.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.208" endtime="20201117 14:42:47.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.813" endtime="20201117 14:42:47.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.812" endtime="20201117 14:42:47.601"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.603" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.611" endtime="20201117 14:42:47.628"></status>
</kw>
<msg timestamp="20201117 14:42:47.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.610" endtime="20201117 14:42:47.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.630" endtime="20201117 14:42:47.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.632" endtime="20201117 14:42:47.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.607" endtime="20201117 14:42:47.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.605" endtime="20201117 14:42:47.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.641" endtime="20201117 14:42:47.929"></status>
</kw>
<msg timestamp="20201117 14:42:47.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023943972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.640" endtime="20201117 14:42:47.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023943972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.933" endtime="20201117 14:42:47.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.941" endtime="20201117 14:42:47.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.637" endtime="20201117 14:42:47.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.635" endtime="20201117 14:42:47.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.948" level="INFO">${RESULT} = [{'time': 0.023943972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694399999999934e-05, 'source_diff': 6.694399999999934e-05}, {'time': 0.024013972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.944" endtime="20201117 14:42:47.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.961" level="INFO">${ACCURACY} = {'source_diff': [6.694399999999934e-05, 6.766600000000095e-05, 6.695800000000238e-05, 6.683299999999878e-05, 6.701400000000066e-05, 6.698599999999805e-05, 6.75969999999991e-05, 6.702800000000023e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:47.949" endtime="20201117 14:42:47.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.966" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.964" endtime="20201117 14:42:47.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.968" level="INFO">VALUE: [6.694399999999934e-05, 6.766600000000095e-05, 6.695800000000238e-05, 6.683299999999878e-05, 6.701400000000066e-05, 6.698599999999805e-05, 6.75969999999991e-05, 6.702800000000023e-05, 6.677799999999998e-05, 6.686100000000139e-05, 6.677799999999998e-05, 6.77220000000027e-05, 6.70419999999998e-05, 6.694499999999881e-05, 6.718000000000002e-05, 6.68619999999974e-05, 6.677799999999998e-05, 6.712500000000121e-05, 6.700000000000109e-05, 6.702800000000023e-05, 6.701400000000066e-05, 6.755500000000039e-05, 6.765300000000085e-05, 6.762499999999824e-05, 6.709700000000207e-05, 6.681999999999869e-05, 6.680499999999964e-05, 6.77220000000027e-05, 6.683299999999878e-05, 6.691699999999967e-05, 6.755599999999987e-05, 6.697200000000195e-05, 6.759799999999858e-05, 6.701400000000066e-05, 6.767999999999705e-05, 6.775000000000184e-05, 6.711100000000164e-05, 6.7583999999999e-05, 6.697300000000142e-05, 6.694399999999934e-05, 6.705599999999937e-05, 6.673700000000074e-05, 6.712500000000121e-05, 6.77640000000014e-05, 6.77359999999988e-05, 6.687499999999749e-05, 6.690199999999716e-05, 6.761100000000214e-05, 6.679100000000007e-05, 6.765299999999738e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.967" endtime="20201117 14:42:47.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.962" endtime="20201117 14:42:47.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.972" endtime="20201117 14:42:47.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.975" endtime="20201117 14:42:47.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.973" endtime="20201117 14:42:47.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.970" endtime="20201117 14:42:47.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.604" endtime="20201117 14:42:47.996"></status>
</kw>
<msg timestamp="20201117 14:42:47.996" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.004" endtime="20201117 14:42:48.021"></status>
</kw>
<msg timestamp="20201117 14:42:48.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.003" endtime="20201117 14:42:48.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.023" endtime="20201117 14:42:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.025" endtime="20201117 14:42:48.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.000" endtime="20201117 14:42:48.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.998" endtime="20201117 14:42:48.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.034" endtime="20201117 14:42:48.319"></status>
</kw>
<msg timestamp="20201117 14:42:48.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.033" endtime="20201117 14:42:48.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.324" endtime="20201117 14:42:48.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.332" endtime="20201117 14:42:48.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.030" endtime="20201117 14:42:48.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.028" endtime="20201117 14:42:48.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.338" level="INFO">${RESULT} = [{'time': 0.021668597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.711100000000164e-05, 'source_diff': 6.711100000000164e-05}, {'time': 0.021737611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:48.335" endtime="20201117 14:42:48.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.352" level="INFO">${ACCURACY} = {'source_diff': [6.711100000000164e-05, 6.708299999999903e-05, 6.761100000000214e-05, 6.763900000000128e-05, 6.75420000000003e-05, 6.701399999999719e-05, 6.682000000000216e-05, 6.761099999999867e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:48.339" endtime="20201117 14:42:48.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.356" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.355" endtime="20201117 14:42:48.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.359" level="INFO">VALUE: [6.711100000000164e-05, 6.708299999999903e-05, 6.761100000000214e-05, 6.763900000000128e-05, 6.75420000000003e-05, 6.701399999999719e-05, 6.682000000000216e-05, 6.761099999999867e-05, 6.708400000000198e-05, 6.736100000000189e-05, 6.70839999999985e-05, 6.677799999999998e-05, 6.756999999999944e-05, 6.681999999999869e-05, 6.684799999999783e-05, 6.691699999999967e-05, 6.67640000000004e-05, 6.768000000000052e-05, 6.694399999999934e-05, 6.772199999999923e-05, 6.698600000000152e-05, 6.698600000000152e-05, 6.681899999999921e-05, 6.695799999999891e-05, 6.765299999999738e-05, 6.697199999999848e-05, 6.701400000000066e-05, 6.758299999999953e-05, 6.77359999999988e-05, 6.683299999999878e-05, 6.70419999999998e-05, 6.75420000000003e-05, 6.68480000000013e-05, 6.756999999999944e-05, 6.679100000000007e-05, 6.675000000000084e-05, 6.67640000000004e-05, 6.711100000000164e-05, 6.681999999999869e-05, 6.756999999999944e-05, 6.698700000000099e-05, 6.686200000000087e-05, 6.759799999999858e-05, 6.708299999999903e-05, 6.686099999999792e-05, 6.770799999999966e-05, 6.769400000000009e-05, 6.70969999999986e-05, 6.765200000000138e-05, 6.67640000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.357" endtime="20201117 14:42:48.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.353" endtime="20201117 14:42:48.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.362" endtime="20201117 14:42:48.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.365" endtime="20201117 14:42:48.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.364" endtime="20201117 14:42:48.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.361" endtime="20201117 14:42:48.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.996" endtime="20201117 14:42:48.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.602" endtime="20201117 14:42:48.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.601" endtime="20201117 14:42:48.387"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.389" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.397" endtime="20201117 14:42:48.415"></status>
</kw>
<msg timestamp="20201117 14:42:48.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.396" endtime="20201117 14:42:48.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.416" endtime="20201117 14:42:48.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.419" endtime="20201117 14:42:48.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.393" endtime="20201117 14:42:48.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.391" endtime="20201117 14:42:48.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.427" endtime="20201117 14:42:48.715"></status>
</kw>
<msg timestamp="20201117 14:42:48.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024346347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024414194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.426" endtime="20201117 14:42:48.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024346347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024414194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.719" endtime="20201117 14:42:48.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.727" endtime="20201117 14:42:48.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.423" endtime="20201117 14:42:48.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.422" endtime="20201117 14:42:48.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.734" level="INFO">${RESULT} = [{'time': 0.024414194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.784699999999935e-05, 'source_diff': 6.784699999999935e-05}, {'time': 0.024484208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:48.730" endtime="20201117 14:42:48.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.749" level="INFO">${ACCURACY} = {'source_diff': [6.784699999999935e-05, 6.794400000000034e-05, 6.779100000000107e-05, 6.865199999999891e-05, 6.780500000000064e-05, 6.811099999999917e-05, 6.781900000000021e-05, 6.872200000000023e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:48.734" endtime="20201117 14:42:48.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.753" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.752" endtime="20201117 14:42:48.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.756" level="INFO">VALUE: [6.784699999999935e-05, 6.794400000000034e-05, 6.779100000000107e-05, 6.865199999999891e-05, 6.780500000000064e-05, 6.811099999999917e-05, 6.781900000000021e-05, 6.872200000000023e-05, 6.879200000000155e-05, 6.794400000000034e-05, 6.79030000000011e-05, 6.809700000000307e-05, 6.862499999999924e-05, 6.802800000000123e-05, 6.812499999999874e-05, 6.777800000000098e-05, 6.80969999999996e-05, 6.852799999999826e-05, 6.87359999999998e-05, 6.862499999999924e-05, 6.777800000000098e-05, 6.794399999999687e-05, 6.809799999999908e-05, 6.777800000000098e-05, 6.857000000000044e-05, 6.809799999999908e-05, 6.779100000000107e-05, 6.784699999999935e-05, 6.858300000000053e-05, 6.806900000000046e-05, 6.802799999999776e-05, 6.786099999999892e-05, 6.837499999999899e-05, 6.872200000000023e-05, 6.805499999999742e-05, 6.863899999999881e-05, 6.812500000000221e-05, 6.802800000000123e-05, 6.795799999999991e-05, 6.861099999999967e-05, 6.797199999999948e-05, 6.79030000000011e-05, 6.868100000000099e-05, 6.79030000000011e-05, 6.794499999999981e-05, 6.804099999999785e-05, 6.798599999999905e-05, 6.85559999999974e-05, 6.87229999999997e-05, 6.804100000000132e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.754" endtime="20201117 14:42:48.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.750" endtime="20201117 14:42:48.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.759" endtime="20201117 14:42:48.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.763" endtime="20201117 14:42:48.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.761" endtime="20201117 14:42:48.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.757" endtime="20201117 14:42:48.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.390" endtime="20201117 14:42:48.783"></status>
</kw>
<msg timestamp="20201117 14:42:48.783" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.791" endtime="20201117 14:42:48.809"></status>
</kw>
<msg timestamp="20201117 14:42:48.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.790" endtime="20201117 14:42:48.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.811" endtime="20201117 14:42:48.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.813" endtime="20201117 14:42:48.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.787" endtime="20201117 14:42:48.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.785" endtime="20201117 14:42:48.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.822" endtime="20201117 14:42:49.108"></status>
</kw>
<msg timestamp="20201117 14:42:49.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021931292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.820" endtime="20201117 14:42:49.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021931292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.113" endtime="20201117 14:42:49.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.121" endtime="20201117 14:42:49.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.818" endtime="20201117 14:42:49.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.816" endtime="20201117 14:42:49.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.127" level="INFO">${RESULT} = [{'time': 0.021999833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.854099999999835e-05, 'source_diff': 6.854099999999835e-05}, {'time': 0.022070847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.124" endtime="20201117 14:42:49.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.141" level="INFO">${ACCURACY} = {'source_diff': [6.854099999999835e-05, 6.872200000000023e-05, 6.865199999999891e-05, 6.80969999999996e-05, 6.79160000000012e-05, 6.793000000000077e-05, 6.79030000000011e-05, 6.867999999999805e-05, 6....</msg>
<status status="PASS" starttime="20201117 14:42:49.128" endtime="20201117 14:42:49.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.145" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.144" endtime="20201117 14:42:49.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.148" level="INFO">VALUE: [6.854099999999835e-05, 6.872200000000023e-05, 6.865199999999891e-05, 6.80969999999996e-05, 6.79160000000012e-05, 6.793000000000077e-05, 6.79030000000011e-05, 6.867999999999805e-05, 6.791700000000067e-05, 6.862500000000271e-05, 6.79030000000011e-05, 6.865299999999838e-05, 6.801399999999819e-05, 6.77640000000014e-05, 6.862499999999924e-05, 6.870900000000013e-05, 6.784799999999883e-05, 6.866699999999795e-05, 6.869500000000056e-05, 6.8584e-05, 6.855600000000087e-05, 6.802800000000123e-05, 6.801300000000218e-05, 6.802700000000175e-05, 6.808300000000003e-05, 6.779100000000107e-05, 6.870800000000066e-05, 6.77640000000014e-05, 6.801400000000166e-05, 6.801400000000166e-05, 6.777799999999751e-05, 6.805499999999742e-05, 6.787499999999849e-05, 6.783400000000273e-05, 6.812499999999874e-05, 6.808300000000003e-05, 6.875000000000284e-05, 6.784699999999935e-05, 6.797299999999895e-05, 6.779200000000055e-05, 6.781900000000021e-05, 6.802800000000123e-05, 6.806999999999994e-05, 6.77359999999988e-05, 6.808300000000003e-05, 6.781900000000021e-05, 6.805500000000089e-05, 6.874999999999937e-05, 6.806900000000046e-05, 6.870800000000066e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.147" endtime="20201117 14:42:49.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.142" endtime="20201117 14:42:49.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.151" endtime="20201117 14:42:49.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.154" endtime="20201117 14:42:49.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.153" endtime="20201117 14:42:49.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.150" endtime="20201117 14:42:49.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.784" endtime="20201117 14:42:49.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.388" endtime="20201117 14:42:49.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.387" endtime="20201117 14:42:49.175"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.178" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.186" endtime="20201117 14:42:49.203"></status>
</kw>
<msg timestamp="20201117 14:42:49.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.184" endtime="20201117 14:42:49.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.205" endtime="20201117 14:42:49.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.207" endtime="20201117 14:42:49.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.182" endtime="20201117 14:42:49.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.180" endtime="20201117 14:42:49.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.216" endtime="20201117 14:42:49.503"></status>
</kw>
<msg timestamp="20201117 14:42:49.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024035583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.214" endtime="20201117 14:42:49.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024035583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.507" endtime="20201117 14:42:49.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.515" endtime="20201117 14:42:49.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.212" endtime="20201117 14:42:49.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.210" endtime="20201117 14:42:49.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.522" level="INFO">${RESULT} = [{'time': 0.024035583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930499999999867e-05, 'source_diff': 6.930499999999867e-05}, {'time': 0.024106583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.519" endtime="20201117 14:42:49.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.536" level="INFO">${ACCURACY} = {'source_diff': [6.930499999999867e-05, 6.879100000000207e-05, 6.969399999999862e-05, 6.883300000000078e-05, 6.966699999999895e-05, 6.908299999999756e-05, 6.898600000000005e-05, 6.911100000000017e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:49.523" endtime="20201117 14:42:49.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.540" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.539" endtime="20201117 14:42:49.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.543" level="INFO">VALUE: [6.930499999999867e-05, 6.879100000000207e-05, 6.969399999999862e-05, 6.883300000000078e-05, 6.966699999999895e-05, 6.908299999999756e-05, 6.898600000000005e-05, 6.911100000000017e-05, 6.899999999999962e-05, 6.976399999999994e-05, 6.961100000000067e-05, 6.90420000000018e-05, 6.894500000000081e-05, 6.884699999999688e-05, 6.880600000000112e-05, 6.902800000000223e-05, 6.894499999999734e-05, 6.966700000000242e-05, 6.888899999999906e-05, 6.901399999999919e-05, 6.965199999999991e-05, 6.919500000000106e-05, 6.884700000000035e-05, 6.959699999999763e-05, 6.972200000000123e-05, 6.87909999999986e-05, 6.898600000000005e-05, 6.972199999999776e-05, 6.877800000000198e-05, 6.95970000000011e-05, 6.880500000000164e-05, 6.937499999999999e-05, 6.96109999999972e-05, 6.961100000000067e-05, 6.898599999999658e-05, 6.963899999999981e-05, 6.89169999999982e-05, 6.96109999999972e-05, 6.89299999999983e-05, 6.87640000000024e-05, 6.904099999999885e-05, 6.891700000000167e-05, 6.883400000000026e-05, 6.972200000000123e-05, 6.891700000000167e-05, 6.90970000000006e-05, 6.883300000000078e-05, 6.968000000000252e-05, 6.967999999999905e-05, 6.898600000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.541" endtime="20201117 14:42:49.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.537" endtime="20201117 14:42:49.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.546" endtime="20201117 14:42:49.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.549" endtime="20201117 14:42:49.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.548" endtime="20201117 14:42:49.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.544" endtime="20201117 14:42:49.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.178" endtime="20201117 14:42:49.570"></status>
</kw>
<msg timestamp="20201117 14:42:49.570" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.578" endtime="20201117 14:42:49.596"></status>
</kw>
<msg timestamp="20201117 14:42:49.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.577" endtime="20201117 14:42:49.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.597" endtime="20201117 14:42:49.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.600" endtime="20201117 14:42:49.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.574" endtime="20201117 14:42:49.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.572" endtime="20201117 14:42:49.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.609" endtime="20201117 14:42:49.895"></status>
</kw>
<msg timestamp="20201117 14:42:49.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.607" endtime="20201117 14:42:49.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.899" endtime="20201117 14:42:49.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.912" endtime="20201117 14:42:49.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.605" endtime="20201117 14:42:49.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.603" endtime="20201117 14:42:49.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.918" level="INFO">${RESULT} = [{'time': 0.021944472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.919399999999812e-05, 'source_diff': 6.919399999999812e-05}, {'time': 0.022015444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.915" endtime="20201117 14:42:49.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.932" level="INFO">${ACCURACY} = {'source_diff': [6.919399999999812e-05, 6.906899999999799e-05, 6.965199999999991e-05, 6.963899999999981e-05, 6.884700000000035e-05, 6.907000000000094e-05, 6.967999999999905e-05, 6.961100000000067e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:49.919" endtime="20201117 14:42:49.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.936" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.935" endtime="20201117 14:42:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.939" level="INFO">VALUE: [6.919399999999812e-05, 6.906899999999799e-05, 6.965199999999991e-05, 6.963899999999981e-05, 6.884700000000035e-05, 6.907000000000094e-05, 6.967999999999905e-05, 6.961100000000067e-05, 6.962500000000024e-05, 6.888900000000253e-05, 6.95559999999984e-05, 6.968099999999852e-05, 6.961100000000067e-05, 6.899999999999962e-05, 6.972199999999776e-05, 6.884700000000035e-05, 6.90970000000006e-05, 6.9584000000001e-05, 6.895899999999691e-05, 6.907000000000094e-05, 6.95979999999971e-05, 6.970800000000166e-05, 6.881899999999774e-05, 6.901299999999971e-05, 6.87909999999986e-05, 6.970799999999819e-05, 6.965199999999991e-05, 6.967999999999905e-05, 6.890200000000263e-05, 6.898599999999658e-05, 6.897200000000048e-05, 6.876399999999894e-05, 6.891700000000167e-05, 6.97360000000008e-05, 6.904199999999833e-05, 6.87640000000024e-05, 6.955600000000187e-05, 6.898600000000005e-05, 6.97360000000008e-05, 6.877799999999851e-05, 6.96109999999972e-05, 6.937499999999999e-05, 6.95559999999984e-05, 6.97230000000007e-05, 6.95970000000011e-05, 6.965300000000285e-05, 6.886099999999992e-05, 6.909699999999713e-05, 6.90559999999979e-05, 6.969500000000156e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.937" endtime="20201117 14:42:49.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.933" endtime="20201117 14:42:49.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.942" endtime="20201117 14:42:49.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.945" endtime="20201117 14:42:49.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.944" endtime="20201117 14:42:49.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.940" endtime="20201117 14:42:49.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.571" endtime="20201117 14:42:49.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.177" endtime="20201117 14:42:49.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.176" endtime="20201117 14:42:49.966"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.969" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.977" endtime="20201117 14:42:49.993"></status>
</kw>
<msg timestamp="20201117 14:42:49.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.975" endtime="20201117 14:42:49.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.995" endtime="20201117 14:42:49.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.997" endtime="20201117 14:42:49.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.973" endtime="20201117 14:42:50.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.971" endtime="20201117 14:42:50.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.007" endtime="20201117 14:42:50.293"></status>
</kw>
<msg timestamp="20201117 14:42:50.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.005" endtime="20201117 14:42:50.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.297" endtime="20201117 14:42:50.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.305" endtime="20201117 14:42:50.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.002" endtime="20201117 14:42:50.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.001" endtime="20201117 14:42:50.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.312" level="INFO">${RESULT} = [{'time': 0.024190014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.981999999999822e-05, 'source_diff': 6.981999999999822e-05}, {'time': 0.024262028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.309" endtime="20201117 14:42:50.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.370" level="INFO">${ACCURACY} = {'source_diff': [6.981999999999822e-05, 7.007000000000194e-05, 7.052800000000026e-05, 7.062499999999777e-05, 6.991599999999973e-05, 7.006999999999847e-05, 6.980599999999865e-05, 6.984800000000083e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:50.313" endtime="20201117 14:42:50.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.374" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.373" endtime="20201117 14:42:50.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.377" level="INFO">VALUE: [6.981999999999822e-05, 7.007000000000194e-05, 7.052800000000026e-05, 7.062499999999777e-05, 6.991599999999973e-05, 7.006999999999847e-05, 6.980599999999865e-05, 6.984800000000083e-05, 7.057000000000244e-05, 6.977799999999951e-05, 6.983299999999831e-05, 6.979100000000307e-05, 7.054100000000035e-05, 6.987500000000049e-05, 7.061100000000167e-05, 7.065300000000038e-05, 6.99299999999993e-05, 7.05689999999995e-05, 7.072199999999876e-05, 7.036099999999795e-05, 7.055499999999992e-05, 7.011100000000117e-05, 6.977799999999951e-05, 7.059699999999863e-05, 7.070899999999866e-05, 7.06109999999982e-05, 7.072299999999823e-05, 7.054199999999983e-05, 6.998599999999758e-05, 6.977800000000298e-05, 7.013900000000031e-05, 6.981899999999874e-05, 7.075000000000137e-05, 6.979199999999908e-05, 6.977700000000003e-05, 6.97909999999996e-05, 6.990299999999963e-05, 6.980499999999917e-05, 6.984700000000135e-05, 6.991599999999973e-05, 6.970799999999819e-05, 7.06109999999982e-05, 7.070799999999919e-05, 6.979199999999908e-05, 6.976399999999994e-05, 7.05970000000021e-05, 7.009699999999813e-05, 6.999999999999715e-05, 6.990299999999963e-05, 7.012500000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.375" endtime="20201117 14:42:50.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.371" endtime="20201117 14:42:50.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.380" endtime="20201117 14:42:50.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.383" endtime="20201117 14:42:50.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.382" endtime="20201117 14:42:50.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.378" endtime="20201117 14:42:50.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.969" endtime="20201117 14:42:50.404"></status>
</kw>
<msg timestamp="20201117 14:42:50.404" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.412" endtime="20201117 14:42:50.430"></status>
</kw>
<msg timestamp="20201117 14:42:50.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.411" endtime="20201117 14:42:50.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.432" endtime="20201117 14:42:50.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.434" endtime="20201117 14:42:50.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.408" endtime="20201117 14:42:50.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.406" endtime="20201117 14:42:50.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.443" endtime="20201117 14:42:50.729"></status>
</kw>
<msg timestamp="20201117 14:42:50.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.442" endtime="20201117 14:42:50.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.733" endtime="20201117 14:42:50.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.741" endtime="20201117 14:42:50.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.439" endtime="20201117 14:42:50.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.438" endtime="20201117 14:42:50.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.748" level="INFO">${RESULT} = [{'time': 0.022133778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.056999999999897e-05, 'source_diff': 7.056999999999897e-05}, {'time': 0.022205778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.744" endtime="20201117 14:42:50.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.761" level="INFO">${ACCURACY} = {'source_diff': [7.056999999999897e-05, 7.036099999999795e-05, 7.076400000000094e-05, 6.984700000000135e-05, 6.979199999999908e-05, 6.987500000000049e-05, 7.049999999999765e-05, 7.000000000000062e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:50.749" endtime="20201117 14:42:50.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.766" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.765" endtime="20201117 14:42:50.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.768" level="INFO">VALUE: [7.056999999999897e-05, 7.036099999999795e-05, 7.076400000000094e-05, 6.984700000000135e-05, 6.979199999999908e-05, 6.987500000000049e-05, 7.049999999999765e-05, 7.000000000000062e-05, 7.012500000000074e-05, 7.075000000000137e-05, 6.97909999999996e-05, 6.987500000000049e-05, 6.977700000000003e-05, 6.988900000000006e-05, 7.070799999999919e-05, 7.004099999999985e-05, 6.976399999999994e-05, 6.980600000000212e-05, 6.995800000000191e-05, 7.005499999999942e-05, 7.066699999999995e-05, 7.007000000000194e-05, 7.066699999999995e-05, 7.069500000000256e-05, 7.061100000000167e-05, 7.07230000000017e-05, 6.988900000000006e-05, 7.068099999999952e-05, 6.977799999999951e-05, 6.990299999999963e-05, 6.988900000000006e-05, 7.05689999999995e-05, 6.97909999999996e-05, 6.99299999999993e-05, 7.069399999999962e-05, 7.005500000000289e-05, 7.004199999999933e-05, 6.995799999999844e-05, 6.99299999999993e-05, 7.062499999999777e-05, 6.994400000000234e-05, 7.065300000000038e-05, 6.995800000000191e-05, 7.000000000000062e-05, 7.012500000000074e-05, 7.000000000000062e-05, 6.998600000000105e-05, 7.008300000000203e-05, 6.976399999999994e-05, 6.979199999999908e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.767" endtime="20201117 14:42:50.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.762" endtime="20201117 14:42:50.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.771" endtime="20201117 14:42:50.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.774" endtime="20201117 14:42:50.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.773" endtime="20201117 14:42:50.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.770" endtime="20201117 14:42:50.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.405" endtime="20201117 14:42:50.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.967" endtime="20201117 14:42:50.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.967" endtime="20201117 14:42:50.795"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.798" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.807" endtime="20201117 14:42:50.825"></status>
</kw>
<msg timestamp="20201117 14:42:50.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.806" endtime="20201117 14:42:50.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.826" endtime="20201117 14:42:50.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.829" endtime="20201117 14:42:50.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.803" endtime="20201117 14:42:50.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.800" endtime="20201117 14:42:50.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.837" endtime="20201117 14:42:51.123"></status>
</kw>
<msg timestamp="20201117 14:42:51.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025385681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025457125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.836" endtime="20201117 14:42:51.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025385681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025457125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.127" endtime="20201117 14:42:51.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.135" endtime="20201117 14:42:51.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.833" endtime="20201117 14:42:51.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.832" endtime="20201117 14:42:51.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.141" level="INFO">${RESULT} = [{'time': 0.025457125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.144400000000037e-05, 'source_diff': 7.144400000000037e-05}, {'time': 0.025531139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.138" endtime="20201117 14:42:51.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.155" level="INFO">${ACCURACY} = {'source_diff': [7.144400000000037e-05, 7.169500000000009e-05, 7.09170000000002e-05, 7.166699999999748e-05, 7.172299999999923e-05, 7.152800000000126e-05, 7.083400000000226e-05, 7.111200000000165e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:51.142" endtime="20201117 14:42:51.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.160" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.158" endtime="20201117 14:42:51.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.162" level="INFO">VALUE: [7.144400000000037e-05, 7.169500000000009e-05, 7.09170000000002e-05, 7.166699999999748e-05, 7.172299999999923e-05, 7.152800000000126e-05, 7.083400000000226e-05, 7.111200000000165e-05, 7.079200000000008e-05, 7.163900000000181e-05, 7.169399999999715e-05, 7.161200000000215e-05, 7.109699999999913e-05, 7.165300000000138e-05, 7.168000000000105e-05, 7.168000000000105e-05, 7.17360000000028e-05, 7.075000000000137e-05, 7.10970000000026e-05, 7.170899999999966e-05, 7.095799999999944e-05, 7.09300000000003e-05, 7.116700000000045e-05, 7.091699999999673e-05, 7.165300000000138e-05, 7.09170000000002e-05, 7.11109999999987e-05, 7.162499999999877e-05, 7.097300000000195e-05, 7.159699999999963e-05, 7.176399999999847e-05, 7.165300000000138e-05, 7.094499999999934e-05, 7.07910000000006e-05, 7.168000000000105e-05, 7.105500000000042e-05, 7.162499999999877e-05, 7.16109999999992e-05, 7.094399999999987e-05, 7.081899999999974e-05, 7.088900000000106e-05, 7.15690000000005e-05, 7.163899999999834e-05, 7.112500000000174e-05, 7.11109999999987e-05, 7.104199999999686e-05, 7.16109999999992e-05, 7.084799999999836e-05, 7.166700000000095e-05, 7.161100000000267e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.161" endtime="20201117 14:42:51.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.156" endtime="20201117 14:42:51.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.165" endtime="20201117 14:42:51.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.168" endtime="20201117 14:42:51.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.167" endtime="20201117 14:42:51.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.163" endtime="20201117 14:42:51.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.798" endtime="20201117 14:42:51.189"></status>
</kw>
<msg timestamp="20201117 14:42:51.190" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.199" endtime="20201117 14:42:51.215"></status>
</kw>
<msg timestamp="20201117 14:42:51.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.197" endtime="20201117 14:42:51.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.217" endtime="20201117 14:42:51.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.219" endtime="20201117 14:42:51.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.194" endtime="20201117 14:42:51.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.192" endtime="20201117 14:42:51.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.228" endtime="20201117 14:42:51.513"></status>
</kw>
<msg timestamp="20201117 14:42:51.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.227" endtime="20201117 14:42:51.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.517" endtime="20201117 14:42:51.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.526" endtime="20201117 14:42:51.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.224" endtime="20201117 14:42:51.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.222" endtime="20201117 14:42:51.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.532" level="INFO">${RESULT} = [{'time': 0.022751861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.137500000000199e-05, 'source_diff': 7.137500000000199e-05}, {'time': 0.022825861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.529" endtime="20201117 14:42:51.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.546" level="INFO">${ACCURACY} = {'source_diff': [7.137500000000199e-05, 7.170800000000019e-05, 7.099999999999815e-05, 7.095899999999891e-05, 7.162499999999877e-05, 7.162500000000224e-05, 7.16109999999992e-05, 7.087499999999802e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:51.533" endtime="20201117 14:42:51.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.550" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.549" endtime="20201117 14:42:51.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.553" level="INFO">VALUE: [7.137500000000199e-05, 7.170800000000019e-05, 7.099999999999815e-05, 7.095899999999891e-05, 7.162499999999877e-05, 7.162500000000224e-05, 7.16109999999992e-05, 7.087499999999802e-05, 7.077799999999704e-05, 7.163899999999834e-05, 7.170800000000019e-05, 7.152800000000126e-05, 7.169500000000009e-05, 7.080500000000017e-05, 7.170800000000019e-05, 7.088800000000159e-05, 7.07910000000006e-05, 7.162499999999877e-05, 7.166599999999801e-05, 7.168000000000105e-05, 7.1069e-05, 7.101400000000119e-05, 7.159699999999963e-05, 7.165299999999791e-05, 7.170800000000019e-05, 7.090300000000063e-05, 7.099999999999815e-05, 7.102800000000076e-05, 7.176399999999847e-05, 7.168100000000052e-05, 7.162500000000224e-05, 7.156999999999997e-05, 7.112499999999827e-05, 7.162499999999877e-05, 7.152799999999779e-05, 7.081999999999922e-05, 7.109699999999913e-05, 7.111199999999818e-05, 7.111100000000217e-05, 7.105499999999695e-05, 7.163799999999887e-05, 7.094399999999987e-05, 7.082000000000269e-05, 7.17499999999989e-05, 7.101400000000119e-05, 7.084700000000235e-05, 7.079200000000008e-05, 7.079200000000008e-05, 7.175000000000237e-05, 7.100000000000162e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.551" endtime="20201117 14:42:51.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.547" endtime="20201117 14:42:51.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.556" endtime="20201117 14:42:51.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.560" endtime="20201117 14:42:51.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.558" endtime="20201117 14:42:51.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.554" endtime="20201117 14:42:51.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.190" endtime="20201117 14:42:51.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.797" endtime="20201117 14:42:51.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.796" endtime="20201117 14:42:51.581"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.583" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.591" endtime="20201117 14:42:51.609"></status>
</kw>
<msg timestamp="20201117 14:42:51.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.590" endtime="20201117 14:42:51.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.611" endtime="20201117 14:42:51.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.613" endtime="20201117 14:42:51.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.587" endtime="20201117 14:42:51.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.585" endtime="20201117 14:42:51.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.622" endtime="20201117 14:42:51.908"></status>
</kw>
<msg timestamp="20201117 14:42:51.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:51.621" endtime="20201117 14:42:51.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:51.912" endtime="20201117 14:42:51.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.920" endtime="20201117 14:42:51.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.618" endtime="20201117 14:42:51.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.616" endtime="20201117 14:42:51.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.927" level="INFO">${RESULT} = [{'time': 0.024894, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.187499999999902e-05, 'source_diff': 7.187499999999902e-05}, {'time': 0.024969014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:51.923" endtime="20201117 14:42:51.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.941" level="INFO">${ACCURACY} = {'source_diff': [7.187499999999902e-05, 7.259700000000063e-05, 7.209700000000013e-05, 7.268100000000152e-05, 7.183400000000326e-05, 7.195899999999991e-05, 7.186099999999945e-05, 7.201400000000219e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:51.928" endtime="20201117 14:42:51.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.946" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.945" endtime="20201117 14:42:51.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.948" level="INFO">VALUE: [7.187499999999902e-05, 7.259700000000063e-05, 7.209700000000013e-05, 7.268100000000152e-05, 7.183400000000326e-05, 7.195899999999991e-05, 7.186099999999945e-05, 7.201400000000219e-05, 7.265299999999891e-05, 7.197299999999948e-05, 7.180599999999718e-05, 7.194500000000034e-05, 7.209700000000013e-05, 7.215300000000188e-05, 7.191599999999826e-05, 7.259700000000063e-05, 7.2069000000001e-05, 7.266599999999901e-05, 7.272200000000076e-05, 7.269400000000162e-05, 7.202799999999829e-05, 7.187499999999902e-05, 7.198599999999958e-05, 7.26110000000002e-05, 7.187499999999902e-05, 7.272199999999729e-05, 7.266700000000195e-05, 7.211100000000317e-05, 7.191699999999773e-05, 7.198599999999958e-05, 7.272300000000023e-05, 7.209799999999961e-05, 7.269500000000109e-05, 7.207000000000047e-05, 7.259800000000011e-05, 7.276399999999947e-05, 7.201300000000271e-05, 7.201400000000219e-05, 7.204099999999838e-05, 7.169400000000062e-05, 7.269399999999815e-05, 7.198599999999958e-05, 7.257000000000097e-05, 7.265299999999891e-05, 7.25829999999976e-05, 7.266699999999848e-05, 7.198599999999958e-05, 7.194500000000034e-05, 7.186099999999945e-05, 7.266699999999848e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.947" endtime="20201117 14:42:51.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.942" endtime="20201117 14:42:51.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.952" endtime="20201117 14:42:51.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.955" endtime="20201117 14:42:51.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.953" endtime="20201117 14:42:51.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.950" endtime="20201117 14:42:51.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.584" endtime="20201117 14:42:51.976"></status>
</kw>
<msg timestamp="20201117 14:42:51.976" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.984" endtime="20201117 14:42:52.002"></status>
</kw>
<msg timestamp="20201117 14:42:52.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.982" endtime="20201117 14:42:52.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.003" endtime="20201117 14:42:52.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.006" endtime="20201117 14:42:52.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.980" endtime="20201117 14:42:52.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.978" endtime="20201117 14:42:52.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.015" endtime="20201117 14:42:52.301"></status>
</kw>
<msg timestamp="20201117 14:42:52.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.014" endtime="20201117 14:42:52.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.305" endtime="20201117 14:42:52.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.313" endtime="20201117 14:42:52.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.011" endtime="20201117 14:42:52.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.010" endtime="20201117 14:42:52.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.320" level="INFO">${RESULT} = [{'time': 0.021654097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.277799999999904e-05, 'source_diff': 7.277799999999904e-05}, {'time': 0.021728097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.316" endtime="20201117 14:42:52.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.333" level="INFO">${ACCURACY} = {'source_diff': [7.277799999999904e-05, 7.181899999999727e-05, 7.269399999999815e-05, 7.262499999999977e-05, 7.177799999999804e-05, 7.269400000000162e-05, 7.270800000000119e-05, 7.188900000000206e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:52.321" endtime="20201117 14:42:52.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.338" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.337" endtime="20201117 14:42:52.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.340" level="INFO">VALUE: [7.277799999999904e-05, 7.181899999999727e-05, 7.269399999999815e-05, 7.262499999999977e-05, 7.177799999999804e-05, 7.269400000000162e-05, 7.270800000000119e-05, 7.188900000000206e-05, 7.176399999999847e-05, 7.204199999999786e-05, 7.187499999999902e-05, 7.268099999999805e-05, 7.183399999999979e-05, 7.201400000000219e-05, 7.208300000000056e-05, 7.180600000000065e-05, 7.180600000000065e-05, 7.181900000000074e-05, 7.269399999999815e-05, 7.181900000000074e-05, 7.21109999999997e-05, 7.184699999999988e-05, 7.252800000000226e-05, 7.195800000000044e-05, 7.186099999999945e-05, 7.256899999999802e-05, 7.198599999999958e-05, 7.176400000000194e-05, 7.266700000000195e-05, 7.180600000000065e-05, 7.19170000000012e-05, 7.258400000000054e-05, 7.272300000000023e-05, 7.184699999999988e-05, 7.184799999999936e-05, 7.207000000000047e-05, 7.181999999999675e-05, 7.262499999999977e-05, 7.213799999999937e-05, 7.272300000000023e-05, 7.25829999999976e-05, 7.258300000000106e-05, 7.205499999999795e-05, 7.269400000000162e-05, 7.170800000000019e-05, 7.25690000000015e-05, 7.263899999999934e-05, 7.266700000000195e-05, 7.27499999999999e-05, 7.268100000000152e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.339" endtime="20201117 14:42:52.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.334" endtime="20201117 14:42:52.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.344" endtime="20201117 14:42:52.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.347" endtime="20201117 14:42:52.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.345" endtime="20201117 14:42:52.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.342" endtime="20201117 14:42:52.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.976" endtime="20201117 14:42:52.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.582" endtime="20201117 14:42:52.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.581" endtime="20201117 14:42:52.368"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.370" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.378" endtime="20201117 14:42:52.396"></status>
</kw>
<msg timestamp="20201117 14:42:52.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.377" endtime="20201117 14:42:52.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.397" endtime="20201117 14:42:52.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.400" endtime="20201117 14:42:52.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.374" endtime="20201117 14:42:52.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.372" endtime="20201117 14:42:52.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.409" endtime="20201117 14:42:52.695"></status>
</kw>
<msg timestamp="20201117 14:42:52.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02420075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:52.408" endtime="20201117 14:42:52.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02420075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:52.699" endtime="20201117 14:42:52.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.707" endtime="20201117 14:42:52.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.405" endtime="20201117 14:42:52.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.403" endtime="20201117 14:42:52.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.714" level="INFO">${RESULT} = [{'time': 0.024274278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.352799999999979e-05, 'source_diff': 7.352799999999979e-05}, {'time': 0.024349292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.711" endtime="20201117 14:42:52.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.728" level="INFO">${ACCURACY} = {'source_diff': [7.352799999999979e-05, 7.295900000000091e-05, 7.302799999999929e-05, 7.272300000000023e-05, 7.358399999999807e-05, 7.308400000000104e-05, 7.286199999999993e-05, 7.366699999999948e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:52.715" endtime="20201117 14:42:52.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.733" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.732" endtime="20201117 14:42:52.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.736" level="INFO">VALUE: [7.352799999999979e-05, 7.295900000000091e-05, 7.302799999999929e-05, 7.272300000000023e-05, 7.358399999999807e-05, 7.308400000000104e-05, 7.286199999999993e-05, 7.366699999999948e-05, 7.298600000000058e-05, 7.369399999999915e-05, 7.306899999999852e-05, 7.362500000000077e-05, 7.286100000000045e-05, 7.362500000000077e-05, 7.30829999999981e-05, 7.287500000000002e-05, 7.292999999999883e-05, 7.356899999999902e-05, 7.29439999999984e-05, 7.298600000000058e-05, 7.294500000000134e-05, 7.35699999999985e-05, 7.35829999999986e-05, 7.288899999999959e-05, 7.295900000000091e-05, 7.281999999999775e-05, 7.29170000000022e-05, 7.372300000000123e-05, 7.298700000000005e-05, 7.309699999999766e-05, 7.302799999999929e-05, 7.280500000000217e-05, 7.366600000000001e-05, 7.31110000000007e-05, 7.309699999999766e-05, 7.28049999999987e-05, 7.279199999999861e-05, 7.373600000000133e-05, 7.287500000000002e-05, 7.288899999999959e-05, 7.30560000000019e-05, 7.343100000000227e-05, 7.365299999999991e-05, 7.315299999999941e-05, 7.369500000000209e-05, 7.300000000000015e-05, 7.29170000000022e-05, 7.291699999999873e-05, 7.288899999999959e-05, 7.294499999999787e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.734" endtime="20201117 14:42:52.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.729" endtime="20201117 14:42:52.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.739" endtime="20201117 14:42:52.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.743" endtime="20201117 14:42:52.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.741" endtime="20201117 14:42:52.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.737" endtime="20201117 14:42:52.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.371" endtime="20201117 14:42:52.763"></status>
</kw>
<msg timestamp="20201117 14:42:52.763" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.772" endtime="20201117 14:42:52.789"></status>
</kw>
<msg timestamp="20201117 14:42:52.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.770" endtime="20201117 14:42:52.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.790" endtime="20201117 14:42:52.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.793" endtime="20201117 14:42:52.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.767" endtime="20201117 14:42:52.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.765" endtime="20201117 14:42:52.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.803" endtime="20201117 14:42:53.088"></status>
</kw>
<msg timestamp="20201117 14:42:53.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.801" endtime="20201117 14:42:53.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.093" endtime="20201117 14:42:53.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.101" endtime="20201117 14:42:53.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.798" endtime="20201117 14:42:53.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.797" endtime="20201117 14:42:53.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.107" level="INFO">${RESULT} = [{'time': 0.021732181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.301399999999972e-05, 'source_diff': 7.301399999999972e-05}, {'time': 0.021807222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.104" endtime="20201117 14:42:53.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.121" level="INFO">${ACCURACY} = {'source_diff': [7.301399999999972e-05, 7.290300000000263e-05, 7.369399999999915e-05, 7.294500000000134e-05, 7.372199999999829e-05, 7.35829999999986e-05, 7.35829999999986e-05, 7.295800000000144e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:53.108" endtime="20201117 14:42:53.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.126" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.125" endtime="20201117 14:42:53.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.128" level="INFO">VALUE: [7.301399999999972e-05, 7.290300000000263e-05, 7.369399999999915e-05, 7.294500000000134e-05, 7.372199999999829e-05, 7.35829999999986e-05, 7.35829999999986e-05, 7.295800000000144e-05, 7.27499999999999e-05, 7.304100000000285e-05, 7.372200000000176e-05, 7.359699999999816e-05, 7.284699999999741e-05, 7.374999999999743e-05, 7.357000000000197e-05, 7.297200000000101e-05, 7.3763999999997e-05, 7.312500000000027e-05, 7.304199999999886e-05, 7.3069999999998e-05, 7.297300000000048e-05, 7.300000000000015e-05, 7.358300000000206e-05, 7.359800000000111e-05, 7.280600000000165e-05, 7.304199999999886e-05, 7.305500000000242e-05, 7.300000000000015e-05, 7.287500000000002e-05, 7.36110000000012e-05, 7.272200000000076e-05, 7.3069000000002e-05, 7.369400000000262e-05, 7.36110000000012e-05, 7.281899999999827e-05, 7.305500000000242e-05, 7.276399999999947e-05, 7.297200000000101e-05, 7.291699999999873e-05, 7.372199999999829e-05, 7.370799999999872e-05, 7.286100000000045e-05, 7.286099999999698e-05, 7.287500000000002e-05, 7.277799999999904e-05, 7.308400000000104e-05, 7.36110000000012e-05, 7.294500000000134e-05, 7.295799999999797e-05, 7.337500000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.127" endtime="20201117 14:42:53.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.122" endtime="20201117 14:42:53.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.131" endtime="20201117 14:42:53.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.134" endtime="20201117 14:42:53.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.133" endtime="20201117 14:42:53.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.130" endtime="20201117 14:42:53.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.764" endtime="20201117 14:42:53.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.369" endtime="20201117 14:42:53.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.368" endtime="20201117 14:42:53.155"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.158" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.166" endtime="20201117 14:42:53.184"></status>
</kw>
<msg timestamp="20201117 14:42:53.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.164" endtime="20201117 14:42:53.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.186" endtime="20201117 14:42:53.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.188" endtime="20201117 14:42:53.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.162" endtime="20201117 14:42:53.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.160" endtime="20201117 14:42:53.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.197" endtime="20201117 14:42:53.483"></status>
</kw>
<msg timestamp="20201117 14:42:53.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024842764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024916528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.195" endtime="20201117 14:42:53.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024842764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024916528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.487" endtime="20201117 14:42:53.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.495" endtime="20201117 14:42:53.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.193" endtime="20201117 14:42:53.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.191" endtime="20201117 14:42:53.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.502" level="INFO">${RESULT} = [{'time': 0.024916528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.376400000000047e-05, 'source_diff': 7.376400000000047e-05}, {'time': 0.024992611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.499" endtime="20201117 14:42:53.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.517" level="INFO">${ACCURACY} = {'source_diff': [7.376400000000047e-05, 7.412500000000127e-05, 7.394499999999887e-05, 7.466700000000048e-05, 7.390300000000016e-05, 7.376299999999752e-05, 7.469400000000015e-05, 7.402800000000029e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:53.503" endtime="20201117 14:42:53.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.521" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.520" endtime="20201117 14:42:53.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.524" level="INFO">VALUE: [7.376400000000047e-05, 7.412500000000127e-05, 7.394499999999887e-05, 7.466700000000048e-05, 7.390300000000016e-05, 7.376299999999752e-05, 7.469400000000015e-05, 7.402800000000029e-05, 7.406899999999952e-05, 7.411099999999823e-05, 7.470799999999972e-05, 7.404099999999691e-05, 7.474999999999843e-05, 7.466700000000048e-05, 7.381899999999927e-05, 7.401399999999725e-05, 7.408300000000256e-05, 7.46249999999983e-05, 7.455599999999993e-05, 7.413900000000084e-05, 7.468100000000005e-05, 7.461099999999873e-05, 7.386099999999798e-05, 7.458399999999907e-05, 7.469499999999962e-05, 7.379199999999961e-05, 7.390199999999722e-05, 7.397199999999854e-05, 7.456900000000002e-05, 7.472199999999929e-05, 7.409699999999866e-05, 7.388899999999712e-05, 7.472199999999929e-05, 7.465300000000091e-05, 7.47500000000019e-05, 7.384699999999841e-05, 7.384699999999841e-05, 7.412500000000127e-05, 7.377800000000004e-05, 7.456900000000002e-05, 7.386099999999798e-05, 7.376400000000047e-05, 7.377800000000004e-05, 7.37500000000009e-05, 7.468100000000005e-05, 7.395900000000191e-05, 7.387500000000102e-05, 7.472300000000223e-05, 7.376400000000047e-05, 7.39309999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.522" endtime="20201117 14:42:53.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.518" endtime="20201117 14:42:53.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.527" endtime="20201117 14:42:53.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.530" endtime="20201117 14:42:53.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.529" endtime="20201117 14:42:53.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.525" endtime="20201117 14:42:53.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.159" endtime="20201117 14:42:53.551"></status>
</kw>
<msg timestamp="20201117 14:42:53.551" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.559" endtime="20201117 14:42:53.577"></status>
</kw>
<msg timestamp="20201117 14:42:53.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.558" endtime="20201117 14:42:53.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.579" endtime="20201117 14:42:53.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.581" endtime="20201117 14:42:53.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.555" endtime="20201117 14:42:53.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.553" endtime="20201117 14:42:53.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.591" endtime="20201117 14:42:53.875"></status>
</kw>
<msg timestamp="20201117 14:42:53.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.589" endtime="20201117 14:42:53.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.879" endtime="20201117 14:42:53.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.888" endtime="20201117 14:42:53.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.587" endtime="20201117 14:42:53.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.585" endtime="20201117 14:42:53.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.895" level="INFO">${RESULT} = [{'time': 0.021841861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.447199999999904e-05, 'source_diff': 7.447199999999904e-05}, {'time': 0.021918875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.891" endtime="20201117 14:42:53.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.908" level="INFO">${ACCURACY} = {'source_diff': [7.447199999999904e-05, 7.459699999999916e-05, 7.398600000000158e-05, 7.456900000000002e-05, 7.408300000000256e-05, 7.381999999999875e-05, 7.452800000000079e-05, 7.466700000000048e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:53.896" endtime="20201117 14:42:53.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.912" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.911" endtime="20201117 14:42:53.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.915" level="INFO">VALUE: [7.447199999999904e-05, 7.459699999999916e-05, 7.398600000000158e-05, 7.456900000000002e-05, 7.408300000000256e-05, 7.381999999999875e-05, 7.452800000000079e-05, 7.466700000000048e-05, 7.459699999999916e-05, 7.400000000000115e-05, 7.402800000000029e-05, 7.462500000000177e-05, 7.472300000000223e-05, 7.412500000000127e-05, 7.392999999999983e-05, 7.413800000000137e-05, 7.377700000000056e-05, 7.383299999999884e-05, 7.383299999999884e-05, 7.404100000000038e-05, 7.404099999999691e-05, 7.468000000000058e-05, 7.406899999999952e-05, 7.45829999999996e-05, 7.383299999999884e-05, 7.459699999999916e-05, 7.383300000000231e-05, 7.440300000000066e-05, 7.397200000000201e-05, 7.470799999999972e-05, 7.457000000000297e-05, 7.463899999999787e-05, 7.45699999999995e-05, 7.399999999999768e-05, 7.392999999999983e-05, 7.395800000000244e-05, 7.387500000000102e-05, 7.404100000000038e-05, 7.398600000000158e-05, 7.472200000000276e-05, 7.383299999999884e-05, 7.456900000000002e-05, 7.40829999999991e-05, 7.381899999999927e-05, 7.406899999999952e-05, 7.388899999999712e-05, 7.463899999999787e-05, 7.411099999999823e-05, 7.409699999999866e-05, 7.40560000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.914" endtime="20201117 14:42:53.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.909" endtime="20201117 14:42:53.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.918" endtime="20201117 14:42:53.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.921" endtime="20201117 14:42:53.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.920" endtime="20201117 14:42:53.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.916" endtime="20201117 14:42:53.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.552" endtime="20201117 14:42:53.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.157" endtime="20201117 14:42:53.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.156" endtime="20201117 14:42:53.943"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.945" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.953" endtime="20201117 14:42:53.971"></status>
</kw>
<msg timestamp="20201117 14:42:53.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.951" endtime="20201117 14:42:53.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.972" endtime="20201117 14:42:53.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.975" endtime="20201117 14:42:53.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.949" endtime="20201117 14:42:53.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.947" endtime="20201117 14:42:53.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.984" endtime="20201117 14:42:54.271"></status>
</kw>
<msg timestamp="20201117 14:42:54.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024015514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.983" endtime="20201117 14:42:54.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024015514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.275" endtime="20201117 14:42:54.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.283" endtime="20201117 14:42:54.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.980" endtime="20201117 14:42:54.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.978" endtime="20201117 14:42:54.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.290" level="INFO">${RESULT} = [{'time': 0.024015514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555600000000093e-05, 'source_diff': 7.555600000000093e-05}, {'time': 0.024093542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.286" endtime="20201117 14:42:54.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.303" level="INFO">${ACCURACY} = {'source_diff': [7.555600000000093e-05, 7.5763999999999e-05, 7.509699999999966e-05, 7.495799999999997e-05, 7.4763999999998e-05, 7.504200000000086e-05, 7.499999999999868e-05, 7.483299999999984e-05, 7.4...</msg>
<status status="PASS" starttime="20201117 14:42:54.291" endtime="20201117 14:42:54.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.308" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.307" endtime="20201117 14:42:54.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.310" level="INFO">VALUE: [7.555600000000093e-05, 7.5763999999999e-05, 7.509699999999966e-05, 7.495799999999997e-05, 7.4763999999998e-05, 7.504200000000086e-05, 7.499999999999868e-05, 7.483299999999984e-05, 7.495899999999944e-05, 7.477800000000104e-05, 7.56379999999994e-05, 7.561099999999973e-05, 7.563899999999887e-05, 7.477800000000104e-05, 7.477700000000156e-05, 7.555500000000145e-05, 7.473600000000233e-05, 7.504199999999739e-05, 7.481900000000027e-05, 7.561099999999973e-05, 7.574999999999943e-05, 7.504200000000086e-05, 7.55830000000006e-05, 7.499999999999868e-05, 7.484699999999941e-05, 7.497199999999954e-05, 7.570900000000019e-05, 7.480600000000018e-05, 7.508399999999957e-05, 7.487499999999855e-05, 7.499999999999868e-05, 7.491700000000073e-05, 7.562500000000277e-05, 7.47500000000019e-05, 7.563899999999887e-05, 7.495799999999997e-05, 7.481900000000027e-05, 7.498600000000258e-05, 7.4763999999998e-05, 7.499999999999868e-05, 7.49029999999977e-05, 7.572200000000029e-05, 7.500000000000215e-05, 7.491699999999726e-05, 7.563899999999887e-05, 7.574999999999943e-05, 7.511099999999923e-05, 7.488800000000212e-05, 7.499999999999868e-05, 7.565300000000191e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.309" endtime="20201117 14:42:54.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.304" endtime="20201117 14:42:54.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.313" endtime="20201117 14:42:54.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.317" endtime="20201117 14:42:54.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.315" endtime="20201117 14:42:54.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.312" endtime="20201117 14:42:54.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.945" endtime="20201117 14:42:54.338"></status>
</kw>
<msg timestamp="20201117 14:42:54.338" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.349" endtime="20201117 14:42:54.366"></status>
</kw>
<msg timestamp="20201117 14:42:54.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.347" endtime="20201117 14:42:54.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.368" endtime="20201117 14:42:54.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.371" endtime="20201117 14:42:54.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.343" endtime="20201117 14:42:54.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.341" endtime="20201117 14:42:54.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.381" endtime="20201117 14:42:54.666"></status>
</kw>
<msg timestamp="20201117 14:42:54.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024573736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024649042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.379" endtime="20201117 14:42:54.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024573736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024649042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.671" endtime="20201117 14:42:54.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.679" endtime="20201117 14:42:54.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.376" endtime="20201117 14:42:54.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.375" endtime="20201117 14:42:54.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.686" level="INFO">${RESULT} = [{'time': 0.024649042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.530600000000068e-05, 'source_diff': 7.530600000000068e-05}, {'time': 0.024726042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.682" endtime="20201117 14:42:54.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.699" level="INFO">${ACCURACY} = {'source_diff': [7.530600000000068e-05, 7.488900000000159e-05, 7.501400000000172e-05, 7.483400000000279e-05, 7.481900000000027e-05, 7.4763999999998e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:54.687" endtime="20201117 14:42:54.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.704" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.703" endtime="20201117 14:42:54.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.706" level="INFO">VALUE: [7.530600000000068e-05, 7.488900000000159e-05, 7.501400000000172e-05, 7.483400000000279e-05, 7.481900000000027e-05, 7.4763999999998e-05, 7.497199999999954e-05, 7.500000000000215e-05, 7.476400000000147e-05, 7.574999999999943e-05, 7.561099999999973e-05, 7.567999999999811e-05, 7.486099999999898e-05, 7.565299999999844e-05, 7.481900000000027e-05, 7.488900000000159e-05, 7.493099999999683e-05, 7.568100000000105e-05, 7.488900000000159e-05, 7.563900000000234e-05, 7.56249999999993e-05, 7.494499999999987e-05, 7.488900000000159e-05, 7.486100000000245e-05, 7.48050000000007e-05, 7.574999999999943e-05, 7.502800000000129e-05, 7.508399999999957e-05, 7.565199999999897e-05, 7.555500000000145e-05, 7.573599999999986e-05, 7.47769999999981e-05, 7.476400000000147e-05, 7.490300000000116e-05, 7.506900000000052e-05, 7.573599999999986e-05, 7.566699999999801e-05, 7.488900000000159e-05, 7.498600000000258e-05, 7.50830000000001e-05, 7.477799999999757e-05, 7.49310000000003e-05, 7.555600000000093e-05, 7.502800000000129e-05, 7.484699999999941e-05, 7.573599999999986e-05, 7.501400000000172e-05, 7.502800000000129e-05, 7.574999999999943e-05, 7.483299999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.705" endtime="20201117 14:42:54.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.700" endtime="20201117 14:42:54.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.709" endtime="20201117 14:42:54.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.713" endtime="20201117 14:42:54.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.711" endtime="20201117 14:42:54.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.707" endtime="20201117 14:42:54.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.339" endtime="20201117 14:42:54.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.944" endtime="20201117 14:42:54.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.943" endtime="20201117 14:42:54.734"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.736" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.746" endtime="20201117 14:42:54.765"></status>
</kw>
<msg timestamp="20201117 14:42:54.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.744" endtime="20201117 14:42:54.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.767" endtime="20201117 14:42:54.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.769" endtime="20201117 14:42:54.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.740" endtime="20201117 14:42:54.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.738" endtime="20201117 14:42:54.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.778" endtime="20201117 14:42:55.065"></status>
</kw>
<msg timestamp="20201117 14:42:55.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026888236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026964486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.777" endtime="20201117 14:42:55.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026888236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026964486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.070" endtime="20201117 14:42:55.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.078" endtime="20201117 14:42:55.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.774" endtime="20201117 14:42:55.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.772" endtime="20201117 14:42:55.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.085" level="INFO">${RESULT} = [{'time': 0.026964486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999999993e-05, 'source_diff': 7.624999999999993e-05}, {'time': 0.027043514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.081" endtime="20201117 14:42:55.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.099" level="INFO">${ACCURACY} = {'source_diff': [7.624999999999993e-05, 7.65700000000015e-05, 7.668100000000205e-05, 7.604200000000186e-05, 7.665299999999944e-05, 7.595900000000044e-05, 7.666700000000248e-05, 7.584700000000041e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:55.086" endtime="20201117 14:42:55.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.104" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.103" endtime="20201117 14:42:55.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.106" level="INFO">VALUE: [7.624999999999993e-05, 7.65700000000015e-05, 7.668100000000205e-05, 7.604200000000186e-05, 7.665299999999944e-05, 7.595900000000044e-05, 7.666700000000248e-05, 7.584700000000041e-05, 7.656999999999803e-05, 7.670900000000119e-05, 7.6764e-05, 7.604099999999892e-05, 7.613899999999937e-05, 7.57769999999991e-05, 7.666599999999954e-05, 7.580499999999823e-05, 7.5763999999999e-05, 7.58890000000026e-05, 7.598600000000011e-05, 7.655499999999898e-05, 7.5763999999999e-05, 7.592999999999836e-05, 7.597200000000054e-05, 7.65969999999977e-05, 7.609800000000014e-05, 7.611100000000023e-05, 7.604199999999839e-05, 7.59579999999975e-05, 7.598600000000011e-05, 7.584799999999989e-05, 7.591699999999826e-05, 7.661099999999726e-05, 7.605499999999848e-05, 7.666599999999954e-05, 7.608400000000057e-05, 7.58189999999978e-05, 7.609700000000066e-05, 7.586099999999998e-05, 7.663899999999987e-05, 7.604099999999892e-05, 7.586099999999998e-05, 7.579200000000161e-05, 7.613900000000284e-05, 7.611100000000023e-05, 7.594500000000087e-05, 7.595800000000097e-05, 7.656899999999855e-05, 7.609700000000066e-05, 7.574999999999943e-05, 7.601400000000272e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.105" endtime="20201117 14:42:55.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.100" endtime="20201117 14:42:55.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.109" endtime="20201117 14:42:55.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.113" endtime="20201117 14:42:55.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.111" endtime="20201117 14:42:55.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.108" endtime="20201117 14:42:55.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.736" endtime="20201117 14:42:55.138"></status>
</kw>
<msg timestamp="20201117 14:42:55.139" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.147" endtime="20201117 14:42:55.164"></status>
</kw>
<msg timestamp="20201117 14:42:55.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.145" endtime="20201117 14:42:55.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.165" endtime="20201117 14:42:55.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.168" endtime="20201117 14:42:55.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.143" endtime="20201117 14:42:55.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.141" endtime="20201117 14:42:55.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.177" endtime="20201117 14:42:55.463"></status>
</kw>
<msg timestamp="20201117 14:42:55.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026429125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026505514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.176" endtime="20201117 14:42:55.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026429125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026505514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.467" endtime="20201117 14:42:55.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.475" endtime="20201117 14:42:55.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.173" endtime="20201117 14:42:55.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.172" endtime="20201117 14:42:55.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.482" level="INFO">${RESULT} = [{'time': 0.026505514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.638899999999962e-05, 'source_diff': 7.638899999999962e-05}, {'time': 0.026583458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.479" endtime="20201117 14:42:55.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.495" level="INFO">${ACCURACY} = {'source_diff': [7.638899999999962e-05, 7.591600000000226e-05, 7.65969999999977e-05, 7.665299999999944e-05, 7.673600000000086e-05, 7.606899999999805e-05, 7.661100000000073e-05, 7.601399999999925e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:55.483" endtime="20201117 14:42:55.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.500" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.499" endtime="20201117 14:42:55.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.502" level="INFO">VALUE: [7.638899999999962e-05, 7.591600000000226e-05, 7.65969999999977e-05, 7.665299999999944e-05, 7.673600000000086e-05, 7.606899999999805e-05, 7.661100000000073e-05, 7.601399999999925e-05, 7.658400000000107e-05, 7.611100000000023e-05, 7.606999999999753e-05, 7.668100000000205e-05, 7.673600000000086e-05, 7.588799999999965e-05, 7.594500000000087e-05, 7.676300000000053e-05, 7.579199999999814e-05, 7.595900000000044e-05, 7.579199999999814e-05, 7.658299999999812e-05, 7.665299999999944e-05, 7.672200000000129e-05, 7.577800000000204e-05, 7.6764e-05, 7.5763999999999e-05, 7.655500000000245e-05, 7.655500000000245e-05, 7.665299999999944e-05, 7.605600000000143e-05, 7.59310000000013e-05, 7.670799999999825e-05, 7.598600000000011e-05, 7.611100000000023e-05, 7.591699999999826e-05, 7.663899999999987e-05, 7.658400000000107e-05, 7.637500000000005e-05, 7.5763999999999e-05, 7.57769999999991e-05, 7.605600000000143e-05, 7.65839999999976e-05, 7.670799999999825e-05, 7.599999999999968e-05, 7.656899999999855e-05, 7.611100000000023e-05, 7.599999999999968e-05, 7.661100000000073e-05, 7.604099999999892e-05, 7.604200000000186e-05, 7.586099999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.501" endtime="20201117 14:42:55.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.496" endtime="20201117 14:42:55.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.506" endtime="20201117 14:42:55.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.509" endtime="20201117 14:42:55.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.508" endtime="20201117 14:42:55.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.504" endtime="20201117 14:42:55.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.139" endtime="20201117 14:42:55.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.735" endtime="20201117 14:42:55.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.734" endtime="20201117 14:42:55.530"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.533" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.541" endtime="20201117 14:42:55.559"></status>
</kw>
<msg timestamp="20201117 14:42:55.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.539" endtime="20201117 14:42:55.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.561" endtime="20201117 14:42:55.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.564" endtime="20201117 14:42:55.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.537" endtime="20201117 14:42:55.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.535" endtime="20201117 14:42:55.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.573" endtime="20201117 14:42:55.859"></status>
</kw>
<msg timestamp="20201117 14:42:55.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024226819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.572" endtime="20201117 14:42:55.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024226819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.863" endtime="20201117 14:42:55.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.871" endtime="20201117 14:42:55.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.569" endtime="20201117 14:42:55.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.567" endtime="20201117 14:42:55.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.878" level="INFO">${RESULT} = [{'time': 0.024226819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.737500000000105e-05, 'source_diff': 7.737500000000105e-05}, {'time': 0.024305792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.874" endtime="20201117 14:42:55.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.891" level="INFO">${ACCURACY} = {'source_diff': [7.737500000000105e-05, 7.70839999999981e-05, 7.69440000000024e-05, 7.69440000000024e-05, 7.67770000000001e-05, 7.704099999999992e-05, 7.70969999999982e-05, 7.67770000000001e-05, 7.774...</msg>
<status status="PASS" starttime="20201117 14:42:55.879" endtime="20201117 14:42:55.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.896" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.895" endtime="20201117 14:42:55.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.898" level="INFO">VALUE: [7.737500000000105e-05, 7.70839999999981e-05, 7.69440000000024e-05, 7.69440000000024e-05, 7.67770000000001e-05, 7.704099999999992e-05, 7.70969999999982e-05, 7.67770000000001e-05, 7.774999999999796e-05, 7.697199999999807e-05, 7.766600000000054e-05, 7.773599999999839e-05, 7.706899999999905e-05, 7.684700000000141e-05, 7.688900000000012e-05, 7.712499999999733e-05, 7.69029999999997e-05, 7.683300000000184e-05, 7.680599999999871e-05, 7.687500000000055e-05, 7.774999999999796e-05, 7.713900000000037e-05, 7.736100000000148e-05, 7.697200000000154e-05, 7.69310000000023e-05, 7.704099999999992e-05, 7.681900000000227e-05, 7.776399999999753e-05, 7.705499999999949e-05, 7.769399999999968e-05, 7.702800000000329e-05, 7.698600000000111e-05, 7.76250000000013e-05, 7.705499999999949e-05, 7.770799999999925e-05, 7.680599999999871e-05, 7.679199999999914e-05, 7.765299999999697e-05, 7.686100000000098e-05, 7.695800000000197e-05, 7.684699999999794e-05, 7.770899999999872e-05, 7.686099999999751e-05, 7.713900000000037e-05, 7.692999999999936e-05, 7.701400000000025e-05, 7.71250000000008e-05, 7.692999999999936e-05, 7.772200000000229e-05, 7.704099999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.897" endtime="20201117 14:42:55.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.892" endtime="20201117 14:42:55.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.902" endtime="20201117 14:42:55.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.905" endtime="20201117 14:42:55.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.904" endtime="20201117 14:42:55.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.900" endtime="20201117 14:42:55.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.533" endtime="20201117 14:42:55.926"></status>
</kw>
<msg timestamp="20201117 14:42:55.926" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.934" endtime="20201117 14:42:55.952"></status>
</kw>
<msg timestamp="20201117 14:42:55.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.933" endtime="20201117 14:42:55.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.954" endtime="20201117 14:42:55.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.956" endtime="20201117 14:42:55.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.930" endtime="20201117 14:42:55.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.928" endtime="20201117 14:42:55.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.966" endtime="20201117 14:42:56.251"></status>
</kw>
<msg timestamp="20201117 14:42:56.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.964" endtime="20201117 14:42:56.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.255" endtime="20201117 14:42:56.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.264" endtime="20201117 14:42:56.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.962" endtime="20201117 14:42:56.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.960" endtime="20201117 14:42:56.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.270" level="INFO">${RESULT} = [{'time': 0.021784264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.71250000000008e-05, 'source_diff': 7.71250000000008e-05}, {'time': 0.021864208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:56.267" endtime="20201117 14:42:56.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.284" level="INFO">${ACCURACY} = {'source_diff': [7.71250000000008e-05, 7.768000000000011e-05, 7.765300000000044e-05, 7.75969999999987e-05, 7.708299999999862e-05, 7.679200000000261e-05, 7.69029999999997e-05, 7.756899999999955e-05, 7....</msg>
<status status="PASS" starttime="20201117 14:42:56.271" endtime="20201117 14:42:56.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.288" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.287" endtime="20201117 14:42:56.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.291" level="INFO">VALUE: [7.71250000000008e-05, 7.768000000000011e-05, 7.765300000000044e-05, 7.75969999999987e-05, 7.708299999999862e-05, 7.679200000000261e-05, 7.69029999999997e-05, 7.756899999999955e-05, 7.679199999999914e-05, 7.701400000000025e-05, 7.704199999999939e-05, 7.686100000000098e-05, 7.704200000000286e-05, 7.71250000000008e-05, 7.702799999999982e-05, 7.702799999999982e-05, 7.765300000000044e-05, 7.769399999999968e-05, 7.69449999999984e-05, 7.690200000000022e-05, 7.684699999999794e-05, 7.7764000000001e-05, 7.770799999999925e-05, 7.670799999999825e-05, 7.688900000000012e-05, 7.680599999999871e-05, 7.709700000000166e-05, 7.701400000000025e-05, 7.768099999999958e-05, 7.679200000000261e-05, 7.69029999999997e-05, 7.687500000000055e-05, 7.705599999999896e-05, 7.71250000000008e-05, 7.759700000000216e-05, 7.75700000000025e-05, 7.686100000000098e-05, 7.775000000000143e-05, 7.769499999999915e-05, 7.693099999999883e-05, 7.698599999999764e-05, 7.704199999999939e-05, 7.690200000000022e-05, 7.766600000000054e-05, 7.70969999999982e-05, 7.758299999999912e-05, 7.69029999999997e-05, 7.679199999999914e-05, 7.711100000000123e-05, 7.761100000000173e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.290" endtime="20201117 14:42:56.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.285" endtime="20201117 14:42:56.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.294" endtime="20201117 14:42:56.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.298" endtime="20201117 14:42:56.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.296" endtime="20201117 14:42:56.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.293" endtime="20201117 14:42:56.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.927" endtime="20201117 14:42:56.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.532" endtime="20201117 14:42:56.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.531" endtime="20201117 14:42:56.319"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.321" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.329" endtime="20201117 14:42:56.347"></status>
</kw>
<msg timestamp="20201117 14:42:56.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.328" endtime="20201117 14:42:56.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.349" endtime="20201117 14:42:56.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.351" endtime="20201117 14:42:56.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.325" endtime="20201117 14:42:56.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.323" endtime="20201117 14:42:56.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.360" endtime="20201117 14:42:56.646"></status>
</kw>
<msg timestamp="20201117 14:42:56.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.359" endtime="20201117 14:42:56.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.650" endtime="20201117 14:42:56.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.658" endtime="20201117 14:42:56.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.356" endtime="20201117 14:42:56.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.354" endtime="20201117 14:42:56.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.665" level="INFO">${RESULT} = [{'time': 0.024929208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.838900000000162e-05, 'source_diff': 7.838900000000162e-05}, {'time': 0.025009236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.661" endtime="20201117 14:42:56.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.679" level="INFO">${ACCURACY} = {'source_diff': [7.838900000000162e-05, 7.808299999999962e-05, 7.788900000000112e-05, 7.804200000000039e-05, 7.877800000000157e-05, 7.800000000000168e-05, 7.788899999999765e-05, 7.784699999999894e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:56.666" endtime="20201117 14:42:56.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.684" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.683" endtime="20201117 14:42:56.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.687" level="INFO">VALUE: [7.838900000000162e-05, 7.808299999999962e-05, 7.788900000000112e-05, 7.804200000000039e-05, 7.877800000000157e-05, 7.800000000000168e-05, 7.788899999999765e-05, 7.784699999999894e-05, 7.784699999999894e-05, 7.80969999999992e-05, 7.874999999999896e-05, 7.854200000000089e-05, 7.797200000000254e-05, 7.805599999999996e-05, 7.783400000000232e-05, 7.868099999999711e-05, 7.836099999999901e-05, 7.786199999999799e-05, 7.863799999999893e-05, 7.875000000000243e-05, 7.791600000000079e-05, 7.808299999999962e-05, 7.86250000000023e-05, 7.855500000000099e-05, 7.808299999999962e-05, 7.870800000000025e-05, 7.79579999999995e-05, 7.809700000000266e-05, 7.793099999999983e-05, 7.805599999999996e-05, 7.798600000000211e-05, 7.800000000000168e-05, 7.783300000000284e-05, 7.806999999999953e-05, 7.861099999999926e-05, 7.816600000000104e-05, 7.79449999999994e-05, 7.859799999999917e-05, 7.85839999999996e-05, 7.836200000000196e-05, 7.800000000000168e-05, 7.806900000000006e-05, 7.869400000000068e-05, 7.866600000000154e-05, 7.788900000000112e-05, 7.777800000000057e-05, 7.786100000000198e-05, 7.856900000000056e-05, 7.85969999999997e-05, 7.784699999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.685" endtime="20201117 14:42:56.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.680" endtime="20201117 14:42:56.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.690" endtime="20201117 14:42:56.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.693" endtime="20201117 14:42:56.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.692" endtime="20201117 14:42:56.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.688" endtime="20201117 14:42:56.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.322" endtime="20201117 14:42:56.714"></status>
</kw>
<msg timestamp="20201117 14:42:56.714" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.722" endtime="20201117 14:42:56.740"></status>
</kw>
<msg timestamp="20201117 14:42:56.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.721" endtime="20201117 14:42:56.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.741" endtime="20201117 14:42:56.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.744" endtime="20201117 14:42:56.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.718" endtime="20201117 14:42:56.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.716" endtime="20201117 14:42:56.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.754" endtime="20201117 14:42:57.040"></status>
</kw>
<msg timestamp="20201117 14:42:57.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021586125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.752" endtime="20201117 14:42:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021586125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.044" endtime="20201117 14:42:57.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.052" endtime="20201117 14:42:57.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.750" endtime="20201117 14:42:57.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.748" endtime="20201117 14:42:57.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.058" level="INFO">${RESULT} = [{'time': 0.021664653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.852799999999785e-05, 'source_diff': 7.852799999999785e-05}, {'time': 0.021744667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.055" endtime="20201117 14:42:57.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.072" level="INFO">${ACCURACY} = {'source_diff': [7.852799999999785e-05, 7.784799999999842e-05, 7.777800000000057e-05, 7.791599999999732e-05, 7.788899999999765e-05, 7.874999999999896e-05, 7.857000000000003e-05, 7.867999999999764e-05,...</msg>
<status status="PASS" starttime="20201117 14:42:57.059" endtime="20201117 14:42:57.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.077" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.076" endtime="20201117 14:42:57.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.079" level="INFO">VALUE: [7.852799999999785e-05, 7.784799999999842e-05, 7.777800000000057e-05, 7.791599999999732e-05, 7.788899999999765e-05, 7.874999999999896e-05, 7.857000000000003e-05, 7.867999999999764e-05, 7.78189999999998e-05, 7.862499999999883e-05, 7.801400000000125e-05, 7.786099999999851e-05, 7.808299999999962e-05, 7.7764000000001e-05, 7.869400000000068e-05, 7.804200000000039e-05, 7.873599999999939e-05, 7.802800000000082e-05, 7.857000000000003e-05, 7.861100000000273e-05, 7.780599999999971e-05, 7.869500000000015e-05, 7.87229999999993e-05, 7.815299999999747e-05, 7.873599999999939e-05, 7.80839999999991e-05, 7.801300000000178e-05, 7.779200000000014e-05, 7.805500000000049e-05, 7.788800000000165e-05, 7.869399999999721e-05, 7.799999999999821e-05, 7.85969999999997e-05, 7.788900000000112e-05, 7.85969999999997e-05, 7.806900000000006e-05, 7.780500000000024e-05, 7.802800000000082e-05, 7.869399999999721e-05, 7.800000000000168e-05, 7.86389999999984e-05, 7.781999999999928e-05, 7.85839999999996e-05, 7.804200000000039e-05, 7.800000000000168e-05, 7.859800000000264e-05, 7.781999999999928e-05, 7.79169999999968e-05, 7.855600000000046e-05, 7.808299999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.078" endtime="20201117 14:42:57.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.073" endtime="20201117 14:42:57.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.082" endtime="20201117 14:42:57.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.086" endtime="20201117 14:42:57.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.084" endtime="20201117 14:42:57.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.081" endtime="20201117 14:42:57.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.715" endtime="20201117 14:42:57.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.320" endtime="20201117 14:42:57.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.319" endtime="20201117 14:42:57.107"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.109" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.117" endtime="20201117 14:42:57.136"></status>
</kw>
<msg timestamp="20201117 14:42:57.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.116" endtime="20201117 14:42:57.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.137" endtime="20201117 14:42:57.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.140" endtime="20201117 14:42:57.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.113" endtime="20201117 14:42:57.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.111" endtime="20201117 14:42:57.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.149" endtime="20201117 14:42:57.435"></status>
</kw>
<msg timestamp="20201117 14:42:57.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02423075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:57.147" endtime="20201117 14:42:57.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02423075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:57.439" endtime="20201117 14:42:57.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.447" endtime="20201117 14:42:57.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.145" endtime="20201117 14:42:57.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.143" endtime="20201117 14:42:57.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.454" level="INFO">${RESULT} = [{'time': 0.02423075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.940299999999872e-05, 'source_diff': 7.940299999999872e-05}, {'time': 0.024311708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:57.451" endtime="20201117 14:42:57.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.468" level="INFO">${ACCURACY} = {'source_diff': [7.940299999999872e-05, 7.880500000000124e-05, 7.888899999999865e-05, 7.887499999999908e-05, 7.8764000000002e-05, 7.969499999999768e-05, 7.906900000000106e-05, 7.886099999999951e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:57.455" endtime="20201117 14:42:57.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.472" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.471" endtime="20201117 14:42:57.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.475" level="INFO">VALUE: [7.940299999999872e-05, 7.880500000000124e-05, 7.888899999999865e-05, 7.887499999999908e-05, 7.8764000000002e-05, 7.969499999999768e-05, 7.906900000000106e-05, 7.886099999999951e-05, 7.911099999999976e-05, 7.8764000000002e-05, 7.891700000000126e-05, 7.96519999999995e-05, 7.89030000000017e-05, 7.955599999999799e-05, 7.965300000000244e-05, 7.96389999999994e-05, 7.875000000000243e-05, 7.894399999999746e-05, 7.966599999999907e-05, 7.973600000000039e-05, 7.879100000000167e-05, 7.897200000000007e-05, 7.87909999999982e-05, 7.905500000000149e-05, 7.894400000000093e-05, 7.908299999999716e-05, 7.969400000000168e-05, 7.973600000000039e-05, 7.954200000000189e-05, 7.887500000000255e-05, 7.970900000000072e-05, 7.905599999999749e-05, 7.886099999999951e-05, 7.954200000000189e-05, 7.898599999999964e-05, 7.961100000000026e-05, 7.890299999999822e-05, 7.970800000000125e-05, 7.967999999999864e-05, 7.962499999999983e-05, 7.908299999999716e-05, 7.904099999999845e-05, 7.905500000000149e-05, 7.96519999999995e-05, 7.900000000000268e-05, 7.891599999999832e-05, 7.87779999999981e-05, 7.897200000000007e-05, 7.902800000000182e-05, 7.90970000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.473" endtime="20201117 14:42:57.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.469" endtime="20201117 14:42:57.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.478" endtime="20201117 14:42:57.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.481" endtime="20201117 14:42:57.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.480" endtime="20201117 14:42:57.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.476" endtime="20201117 14:42:57.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.110" endtime="20201117 14:42:57.502"></status>
</kw>
<msg timestamp="20201117 14:42:57.502" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.510" endtime="20201117 14:42:57.528"></status>
</kw>
<msg timestamp="20201117 14:42:57.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.509" endtime="20201117 14:42:57.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.529" endtime="20201117 14:42:57.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.532" endtime="20201117 14:42:57.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.506" endtime="20201117 14:42:57.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.504" endtime="20201117 14:42:57.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.542" endtime="20201117 14:42:57.827"></status>
</kw>
<msg timestamp="20201117 14:42:57.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.540" endtime="20201117 14:42:57.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.831" endtime="20201117 14:42:57.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.840" endtime="20201117 14:42:57.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.538" endtime="20201117 14:42:57.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.536" endtime="20201117 14:42:57.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.846" level="INFO">${RESULT} = [{'time': 0.021872889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.97779999999991e-05, 'source_diff': 7.97779999999991e-05}, {'time': 0.021954903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:57.843" endtime="20201117 14:42:57.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.860" level="INFO">${ACCURACY} = {'source_diff': [7.97779999999991e-05, 7.966700000000201e-05, 7.883300000000037e-05, 7.876399999999853e-05, 7.884699999999994e-05, 7.970900000000072e-05, 7.880600000000071e-05, 7.886199999999899e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:57.847" endtime="20201117 14:42:57.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.864" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.863" endtime="20201117 14:42:57.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.867" level="INFO">VALUE: [7.97779999999991e-05, 7.966700000000201e-05, 7.883300000000037e-05, 7.876399999999853e-05, 7.884699999999994e-05, 7.970900000000072e-05, 7.880600000000071e-05, 7.886199999999899e-05, 7.912499999999933e-05, 7.890200000000222e-05, 7.891599999999832e-05, 7.902699999999888e-05, 7.883300000000037e-05, 7.891599999999832e-05, 7.900000000000268e-05, 7.891700000000126e-05, 7.95970000000007e-05, 7.968000000000211e-05, 7.901399999999878e-05, 7.90970000000002e-05, 7.883300000000037e-05, 7.968099999999811e-05, 7.898599999999964e-05, 7.893100000000083e-05, 7.973600000000039e-05, 7.89450000000004e-05, 7.887500000000255e-05, 7.95970000000007e-05, 7.906900000000106e-05, 7.96519999999995e-05, 7.955599999999799e-05, 7.869400000000068e-05, 7.962499999999983e-05, 7.897200000000007e-05, 7.8764000000002e-05, 7.974999999999996e-05, 7.90970000000002e-05, 7.962499999999983e-05, 7.894400000000093e-05, 7.893100000000083e-05, 7.95970000000007e-05, 7.90970000000002e-05, 7.897200000000007e-05, 7.89169999999978e-05, 7.973600000000039e-05, 7.966699999999854e-05, 7.872199999999982e-05, 7.904200000000139e-05, 7.969500000000115e-05, 7.882000000000028e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.865" endtime="20201117 14:42:57.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.861" endtime="20201117 14:42:57.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.870" endtime="20201117 14:42:57.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.873" endtime="20201117 14:42:57.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.872" endtime="20201117 14:42:57.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.868" endtime="20201117 14:42:57.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.503" endtime="20201117 14:42:57.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.108" endtime="20201117 14:42:57.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.107" endtime="20201117 14:42:57.894"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.897" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.905" endtime="20201117 14:42:57.923"></status>
</kw>
<msg timestamp="20201117 14:42:57.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.903" endtime="20201117 14:42:57.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.924" endtime="20201117 14:42:57.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.927" endtime="20201117 14:42:57.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.901" endtime="20201117 14:42:57.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.899" endtime="20201117 14:42:57.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.936" endtime="20201117 14:42:58.221"></status>
</kw>
<msg timestamp="20201117 14:42:58.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024854583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024935319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.935" endtime="20201117 14:42:58.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024854583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024935319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.225" endtime="20201117 14:42:58.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.233" endtime="20201117 14:42:58.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.932" endtime="20201117 14:42:58.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.930" endtime="20201117 14:42:58.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.240" level="INFO">${RESULT} = [{'time': 0.024935319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.073600000000139e-05, 'source_diff': 8.073600000000139e-05}, {'time': 0.025017333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:58.237" endtime="20201117 14:42:58.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.255" level="INFO">${ACCURACY} = {'source_diff': [8.073600000000139e-05, 7.988899999999965e-05, 7.972200000000082e-05, 8.005499999999902e-05, 7.99030000000027e-05, 8.056900000000256e-05, 8.038900000000015e-05, 8.073600000000139e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:58.241" endtime="20201117 14:42:58.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.259" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.258" endtime="20201117 14:42:58.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.262" level="INFO">VALUE: [8.073600000000139e-05, 7.988899999999965e-05, 7.972200000000082e-05, 8.005499999999902e-05, 7.99030000000027e-05, 8.056900000000256e-05, 8.038900000000015e-05, 8.073600000000139e-05, 8.000000000000021e-05, 7.988899999999965e-05, 8.073599999999792e-05, 8.06109999999978e-05, 7.997200000000107e-05, 7.97779999999991e-05, 8.000000000000021e-05, 8.069500000000215e-05, 7.993100000000183e-05, 7.973699999999986e-05, 8.065299999999997e-05, 8.063800000000093e-05, 8.037500000000058e-05, 8.066699999999954e-05, 7.991600000000279e-05, 7.99580000000015e-05, 7.976399999999953e-05, 8.001399999999978e-05, 7.984699999999748e-05, 8.038900000000015e-05, 8.011100000000076e-05, 7.988899999999965e-05, 7.991700000000226e-05, 8.061100000000126e-05, 8.062500000000083e-05, 8.001400000000325e-05, 8.076400000000053e-05, 8.075000000000096e-05, 8.06390000000004e-05, 7.988899999999965e-05, 8.069499999999868e-05, 7.983300000000138e-05, 7.974999999999996e-05, 8.00970000000012e-05, 8.06520000000005e-05, 8.05970000000017e-05, 8.000000000000021e-05, 8.06390000000004e-05, 8.067999999999964e-05, 8.005599999999849e-05, 7.974999999999996e-05, 8.00970000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.260" endtime="20201117 14:42:58.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.255" endtime="20201117 14:42:58.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.265" endtime="20201117 14:42:58.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.268" endtime="20201117 14:42:58.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.266" endtime="20201117 14:42:58.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.263" endtime="20201117 14:42:58.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.897" endtime="20201117 14:42:58.289"></status>
</kw>
<msg timestamp="20201117 14:42:58.289" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.297" endtime="20201117 14:42:58.315"></status>
</kw>
<msg timestamp="20201117 14:42:58.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.295" endtime="20201117 14:42:58.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.316" endtime="20201117 14:42:58.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.319" endtime="20201117 14:42:58.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.293" endtime="20201117 14:42:58.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.291" endtime="20201117 14:42:58.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.329" endtime="20201117 14:42:58.615"></status>
</kw>
<msg timestamp="20201117 14:42:58.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:58.327" endtime="20201117 14:42:58.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:58.619" endtime="20201117 14:42:58.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.627" endtime="20201117 14:42:58.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.325" endtime="20201117 14:42:58.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.323" endtime="20201117 14:42:58.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.634" level="INFO">${RESULT} = [{'time': 0.0215655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.06390000000004e-05, 'source_diff': 8.06390000000004e-05}, {'time': 0.021647569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201117 14:42:58.630" endtime="20201117 14:42:58.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.647" level="INFO">${ACCURACY} = {'source_diff': [8.06390000000004e-05, 7.990199999999975e-05, 7.987500000000008e-05, 8.002799999999935e-05, 7.981999999999781e-05, 8.007000000000153e-05, 8.057000000000203e-05, 8.06390000000004e-05, 7...</msg>
<status status="PASS" starttime="20201117 14:42:58.635" endtime="20201117 14:42:58.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.652" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.651" endtime="20201117 14:42:58.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.654" level="INFO">VALUE: [8.06390000000004e-05, 7.990199999999975e-05, 7.987500000000008e-05, 8.002799999999935e-05, 7.981999999999781e-05, 8.007000000000153e-05, 8.057000000000203e-05, 8.06390000000004e-05, 7.986199999999999e-05, 8.063899999999694e-05, 8.069500000000215e-05, 8.075000000000096e-05, 7.98329999999979e-05, 7.994399999999846e-05, 7.984700000000094e-05, 7.97909999999992e-05, 7.988899999999965e-05, 7.980599999999824e-05, 7.992999999999889e-05, 7.984700000000094e-05, 7.988899999999965e-05, 8.004200000000239e-05, 7.97779999999991e-05, 8.01109999999973e-05, 8.05970000000017e-05, 7.976399999999953e-05, 7.988899999999965e-05, 7.997300000000054e-05, 8.038900000000015e-05, 8.005600000000196e-05, 8.068099999999911e-05, 8.072199999999835e-05, 7.988899999999965e-05, 8.070800000000225e-05, 8.00970000000012e-05, 7.97909999999992e-05, 8.037500000000058e-05, 8.061100000000126e-05, 7.98329999999979e-05, 8.066600000000007e-05, 7.980500000000224e-05, 8.065299999999997e-05, 8.012500000000033e-05, 7.998600000000064e-05, 8.072199999999835e-05, 7.976399999999953e-05, 8.038900000000015e-05, 7.997300000000054e-05, 7.99450000000014e-05, 8.069500000000215e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.653" endtime="20201117 14:42:58.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.648" endtime="20201117 14:42:58.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.657" endtime="20201117 14:42:58.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.661" endtime="20201117 14:42:58.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.659" endtime="20201117 14:42:58.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.656" endtime="20201117 14:42:58.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.290" endtime="20201117 14:42:58.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.895" endtime="20201117 14:42:58.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.895" endtime="20201117 14:42:58.682"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.684" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.692" endtime="20201117 14:42:58.710"></status>
</kw>
<msg timestamp="20201117 14:42:58.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.691" endtime="20201117 14:42:58.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.712" endtime="20201117 14:42:58.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.714" endtime="20201117 14:42:58.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.688" endtime="20201117 14:42:58.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.686" endtime="20201117 14:42:58.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.723" endtime="20201117 14:42:59.009"></status>
</kw>
<msg timestamp="20201117 14:42:59.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024461417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.721" endtime="20201117 14:42:59.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024461417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.013" endtime="20201117 14:42:59.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.021" endtime="20201117 14:42:59.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.719" endtime="20201117 14:42:59.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.717" endtime="20201117 14:42:59.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.028" level="INFO">${RESULT} = [{'time': 0.024542236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.081899999999934e-05, 'source_diff': 8.081899999999934e-05}, {'time': 0.024626236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.024" endtime="20201117 14:42:59.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.041" level="INFO">${ACCURACY} = {'source_diff': [8.081899999999934e-05, 8.155500000000052e-05, 8.169400000000021e-05, 8.072199999999835e-05, 8.104199999999992e-05, 8.173599999999892e-05, 8.07780000000001e-05, 8.083399999999838e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:59.029" endtime="20201117 14:42:59.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.046" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.045" endtime="20201117 14:42:59.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.048" level="INFO">VALUE: [8.081899999999934e-05, 8.155500000000052e-05, 8.169400000000021e-05, 8.072199999999835e-05, 8.104199999999992e-05, 8.173599999999892e-05, 8.07780000000001e-05, 8.083399999999838e-05, 8.180500000000077e-05, 8.087500000000108e-05, 8.15979999999987e-05, 8.098699999999764e-05, 8.080600000000271e-05, 8.16659999999976e-05, 8.111100000000177e-05, 8.084700000000195e-05, 8.083300000000238e-05, 8.08190000000028e-05, 8.09719999999986e-05, 8.168000000000064e-05, 8.086100000000151e-05, 8.162500000000183e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.081899999999934e-05, 8.155599999999999e-05, 8.084700000000195e-05, 8.16109999999988e-05, 8.098600000000164e-05, 8.162499999999837e-05, 8.105599999999949e-05, 8.099999999999774e-05, 8.083400000000185e-05, 8.174999999999849e-05, 8.109699999999873e-05, 8.10130000000013e-05, 8.100000000000121e-05, 8.081899999999934e-05, 8.101400000000078e-05, 8.084800000000142e-05, 8.09719999999986e-05, 8.098600000000164e-05, 8.083300000000238e-05, 8.156900000000009e-05, 8.165300000000097e-05, 8.154200000000042e-05, 8.086099999999805e-05, 8.095799999999903e-05, 8.093100000000283e-05, 8.092999999999989e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.047" endtime="20201117 14:42:59.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.042" endtime="20201117 14:42:59.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.051" endtime="20201117 14:42:59.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.055" endtime="20201117 14:42:59.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.053" endtime="20201117 14:42:59.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.050" endtime="20201117 14:42:59.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.685" endtime="20201117 14:42:59.076"></status>
</kw>
<msg timestamp="20201117 14:42:59.076" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.084" endtime="20201117 14:42:59.103"></status>
</kw>
<msg timestamp="20201117 14:42:59.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.083" endtime="20201117 14:42:59.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.104" endtime="20201117 14:42:59.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.107" endtime="20201117 14:42:59.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.080" endtime="20201117 14:42:59.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.078" endtime="20201117 14:42:59.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.116" endtime="20201117 14:42:59.403"></status>
</kw>
<msg timestamp="20201117 14:42:59.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.115" endtime="20201117 14:42:59.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.407" endtime="20201117 14:42:59.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.415" endtime="20201117 14:42:59.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.113" endtime="20201117 14:42:59.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.111" endtime="20201117 14:42:59.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.422" level="INFO">${RESULT} = [{'time': 0.022552569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.148600000000214e-05, 'source_diff': 8.148600000000214e-05}, {'time': 0.022636625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.419" endtime="20201117 14:42:59.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.435" level="INFO">${ACCURACY} = {'source_diff': [8.148600000000214e-05, 8.16109999999988e-05, 8.086100000000151e-05, 8.159699999999923e-05, 8.090300000000022e-05, 8.16109999999988e-05, 8.112500000000133e-05, 8.112500000000133e-05, 8...</msg>
<status status="PASS" starttime="20201117 14:42:59.423" endtime="20201117 14:42:59.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.440" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.439" endtime="20201117 14:42:59.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.442" level="INFO">VALUE: [8.148600000000214e-05, 8.16109999999988e-05, 8.086100000000151e-05, 8.159699999999923e-05, 8.090300000000022e-05, 8.16109999999988e-05, 8.112500000000133e-05, 8.112500000000133e-05, 8.102800000000035e-05, 8.100000000000121e-05, 8.101400000000078e-05, 8.09169999999998e-05, 8.094499999999893e-05, 8.168100000000011e-05, 8.09169999999998e-05, 8.16529999999975e-05, 8.094499999999893e-05, 8.109699999999873e-05, 8.138799999999821e-05, 8.09169999999998e-05, 8.09580000000025e-05, 8.084700000000195e-05, 8.086100000000151e-05, 8.16390000000014e-05, 8.16390000000014e-05, 8.167999999999717e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.07780000000001e-05, 8.07780000000001e-05, 8.112500000000133e-05, 8.099999999999774e-05, 8.152800000000085e-05, 8.11109999999983e-05, 8.168100000000011e-05, 8.079199999999967e-05, 8.099999999999774e-05, 8.083300000000238e-05, 8.170799999999978e-05, 8.162499999999837e-05, 8.166600000000107e-05, 8.087500000000108e-05, 8.161100000000227e-05, 8.136100000000202e-05, 8.165300000000097e-05, 8.083300000000238e-05, 8.097200000000207e-05, 8.104199999999992e-05, 8.090300000000022e-05, 8.169499999999968e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.441" endtime="20201117 14:42:59.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.436" endtime="20201117 14:42:59.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.446" endtime="20201117 14:42:59.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.449" endtime="20201117 14:42:59.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.448" endtime="20201117 14:42:59.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.444" endtime="20201117 14:42:59.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.076" endtime="20201117 14:42:59.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.683" endtime="20201117 14:42:59.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.682" endtime="20201117 14:42:59.470"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.473" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.481" endtime="20201117 14:42:59.500"></status>
</kw>
<msg timestamp="20201117 14:42:59.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.479" endtime="20201117 14:42:59.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.501" endtime="20201117 14:42:59.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.504" endtime="20201117 14:42:59.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.477" endtime="20201117 14:42:59.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.475" endtime="20201117 14:42:59.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.513" endtime="20201117 14:42:59.798"></status>
</kw>
<msg timestamp="20201117 14:42:59.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.511" endtime="20201117 14:42:59.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.803" endtime="20201117 14:42:59.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.811" endtime="20201117 14:42:59.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.509" endtime="20201117 14:42:59.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.507" endtime="20201117 14:42:59.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.817" level="INFO">${RESULT} = [{'time': 0.024931375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.248599999999967e-05, 'source_diff': 8.248599999999967e-05}, {'time': 0.025015403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.814" endtime="20201117 14:42:59.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.832" level="INFO">${ACCURACY} = {'source_diff': [8.248599999999967e-05, 8.188899999999819e-05, 8.181999999999981e-05, 8.269400000000121e-05, 8.263899999999894e-05, 8.262499999999937e-05, 8.19170000000008e-05, 8.193100000000036e-05, ...</msg>
<status status="PASS" starttime="20201117 14:42:59.818" endtime="20201117 14:42:59.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.837" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.836" endtime="20201117 14:42:59.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.840" level="INFO">VALUE: [8.248599999999967e-05, 8.188899999999819e-05, 8.181999999999981e-05, 8.269400000000121e-05, 8.263899999999894e-05, 8.262499999999937e-05, 8.19170000000008e-05, 8.193100000000036e-05, 8.177799999999763e-05, 8.262499999999937e-05, 8.276399999999906e-05, 8.273599999999992e-05, 8.17910000000012e-05, 8.269399999999774e-05, 8.204100000000145e-05, 8.181900000000034e-05, 8.200000000000221e-05, 8.262499999999937e-05, 8.218100000000061e-05, 8.269500000000068e-05, 8.269499999999722e-05, 8.273599999999992e-05, 8.19170000000008e-05, 8.205599999999702e-05, 8.191699999999733e-05, 8.207000000000006e-05, 8.190300000000122e-05, 8.199999999999874e-05, 8.193100000000036e-05, 8.263899999999894e-05, 8.26390000000024e-05, 8.169399999999674e-05, 8.195800000000003e-05, 8.269400000000121e-05, 8.26529999999985e-05, 8.181900000000034e-05, 8.201399999999831e-05, 8.176399999999806e-05, 8.19719999999996e-05, 8.255499999999805e-05, 8.180600000000024e-05, 8.269400000000121e-05, 8.195800000000003e-05, 8.213899999999844e-05, 8.19719999999996e-05, 8.212499999999887e-05, 8.204200000000092e-05, 8.266699999999808e-05, 8.208399999999963e-05, 8.187499999999862e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.838" endtime="20201117 14:42:59.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.833" endtime="20201117 14:42:59.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.844" endtime="20201117 14:42:59.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.847" endtime="20201117 14:42:59.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.845" endtime="20201117 14:42:59.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.842" endtime="20201117 14:42:59.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.473" endtime="20201117 14:42:59.867"></status>
</kw>
<msg timestamp="20201117 14:42:59.868" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.876" endtime="20201117 14:42:59.893"></status>
</kw>
<msg timestamp="20201117 14:42:59.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.874" endtime="20201117 14:42:59.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.895" endtime="20201117 14:42:59.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.897" endtime="20201117 14:42:59.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.872" endtime="20201117 14:42:59.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.870" endtime="20201117 14:42:59.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.907" endtime="20201117 14:43:00.192"></status>
</kw>
<msg timestamp="20201117 14:43:00.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.906" endtime="20201117 14:43:00.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.196" endtime="20201117 14:43:00.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.204" endtime="20201117 14:43:00.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.903" endtime="20201117 14:43:00.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.901" endtime="20201117 14:43:00.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.211" level="INFO">${RESULT} = [{'time': 0.021624125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.270800000000078e-05, 'source_diff': 8.270800000000078e-05}, {'time': 0.021709139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.208" endtime="20201117 14:43:00.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.225" level="INFO">${ACCURACY} = {'source_diff': [8.270800000000078e-05, 8.270799999999731e-05, 8.274999999999949e-05, 8.259700000000023e-05, 8.259700000000023e-05, 8.258400000000013e-05, 8.26109999999998e-05, 8.190300000000122e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:00.212" endtime="20201117 14:43:00.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.229" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.228" endtime="20201117 14:43:00.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.232" level="INFO">VALUE: [8.270800000000078e-05, 8.270799999999731e-05, 8.274999999999949e-05, 8.259700000000023e-05, 8.259700000000023e-05, 8.258400000000013e-05, 8.26109999999998e-05, 8.190300000000122e-05, 8.265199999999903e-05, 8.255600000000099e-05, 8.279200000000167e-05, 8.186099999999905e-05, 8.188899999999819e-05, 8.176400000000153e-05, 8.19719999999996e-05, 8.204100000000145e-05, 8.209699999999973e-05, 8.209699999999973e-05, 8.201399999999831e-05, 8.256900000000109e-05, 8.26529999999985e-05, 8.174999999999849e-05, 8.180600000000024e-05, 8.19719999999996e-05, 8.272299999999982e-05, 8.26109999999998e-05, 8.186100000000252e-05, 8.255599999999752e-05, 8.183399999999938e-05, 8.176400000000153e-05, 8.270800000000078e-05, 8.262499999999937e-05, 8.258299999999719e-05, 8.272200000000035e-05, 8.251400000000228e-05, 8.263899999999894e-05, 8.273599999999992e-05, 8.184699999999948e-05, 8.181899999999687e-05, 8.205600000000049e-05, 8.18329999999999e-05, 8.188900000000165e-05, 8.169499999999968e-05, 8.205600000000049e-05, 8.238899999999869e-05, 8.173599999999892e-05, 8.198599999999917e-05, 8.263899999999894e-05, 8.20970000000032e-05, 8.261199999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.230" endtime="20201117 14:43:00.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.226" endtime="20201117 14:43:00.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.239" endtime="20201117 14:43:00.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.242" endtime="20201117 14:43:00.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.241" endtime="20201117 14:43:00.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.237" endtime="20201117 14:43:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.868" endtime="20201117 14:43:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.472" endtime="20201117 14:43:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.471" endtime="20201117 14:43:00.263"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.266" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.274" endtime="20201117 14:43:00.291"></status>
</kw>
<msg timestamp="20201117 14:43:00.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.272" endtime="20201117 14:43:00.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.293" endtime="20201117 14:43:00.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.295" endtime="20201117 14:43:00.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.270" endtime="20201117 14:43:00.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.268" endtime="20201117 14:43:00.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.304" endtime="20201117 14:43:00.589"></status>
</kw>
<msg timestamp="20201117 14:43:00.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024405014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.303" endtime="20201117 14:43:00.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024405014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.594" endtime="20201117 14:43:00.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.602" endtime="20201117 14:43:00.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.300" endtime="20201117 14:43:00.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.299" endtime="20201117 14:43:00.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.608" level="INFO">${RESULT} = [{'time': 0.024488097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.308300000000116e-05, 'source_diff': 8.308300000000116e-05}, {'time': 0.024573097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.605" endtime="20201117 14:43:00.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.622" level="INFO">${ACCURACY} = {'source_diff': [8.308300000000116e-05, 8.291599999999885e-05, 8.308300000000116e-05, 8.337500000000012e-05, 8.366700000000254e-05, 8.369399999999874e-05, 8.301399999999931e-05, 8.287499999999962e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:00.609" endtime="20201117 14:43:00.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.626" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.625" endtime="20201117 14:43:00.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.629" level="INFO">VALUE: [8.308300000000116e-05, 8.291599999999885e-05, 8.308300000000116e-05, 8.337500000000012e-05, 8.366700000000254e-05, 8.369399999999874e-05, 8.301399999999931e-05, 8.287499999999962e-05, 8.284700000000048e-05, 8.373600000000092e-05, 8.354199999999895e-05, 8.279200000000167e-05, 8.291699999999833e-05, 8.305499999999855e-05, 8.291699999999833e-05, 8.276399999999906e-05, 8.286100000000005e-05, 8.294399999999799e-05, 8.365200000000003e-05, 8.277699999999916e-05, 8.291599999999885e-05, 8.281900000000134e-05, 8.305600000000149e-05, 8.29309999999979e-05, 8.284700000000048e-05, 8.27919999999982e-05, 8.359699999999776e-05, 8.372200000000135e-05, 8.308299999999769e-05, 8.30980000000002e-05, 8.286100000000005e-05, 8.366700000000254e-05, 8.27919999999982e-05, 8.356999999999809e-05, 8.356900000000209e-05, 8.369500000000168e-05, 8.302699999999941e-05, 8.306899999999812e-05, 8.297199999999713e-05, 8.369400000000221e-05, 8.373599999999745e-05, 8.309700000000073e-05, 8.362500000000037e-05, 8.294500000000093e-05, 8.372200000000135e-05, 8.27919999999982e-05, 8.319399999999824e-05, 8.287499999999962e-05, 8.301399999999931e-05, 8.304199999999845e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.627" endtime="20201117 14:43:00.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.623" endtime="20201117 14:43:00.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.632" endtime="20201117 14:43:00.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.636" endtime="20201117 14:43:00.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.634" endtime="20201117 14:43:00.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.631" endtime="20201117 14:43:00.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.266" endtime="20201117 14:43:00.656"></status>
</kw>
<msg timestamp="20201117 14:43:00.657" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.665" endtime="20201117 14:43:00.683"></status>
</kw>
<msg timestamp="20201117 14:43:00.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.663" endtime="20201117 14:43:00.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.684" endtime="20201117 14:43:00.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.687" endtime="20201117 14:43:00.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.661" endtime="20201117 14:43:00.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.659" endtime="20201117 14:43:00.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.697" endtime="20201117 14:43:00.983"></status>
</kw>
<msg timestamp="20201117 14:43:00.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021503125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.695" endtime="20201117 14:43:00.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021503125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.987" endtime="20201117 14:43:00.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.996" endtime="20201117 14:43:00.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.693" endtime="20201117 14:43:00.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.691" endtime="20201117 14:43:00.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.002" level="INFO">${RESULT} = [{'time': 0.021586208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.308299999999769e-05, 'source_diff': 8.308299999999769e-05}, {'time': 0.021671194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.999" endtime="20201117 14:43:01.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.016" level="INFO">${ACCURACY} = {'source_diff': [8.308299999999769e-05, 8.302700000000288e-05, 8.291599999999885e-05, 8.299999999999974e-05, 8.283299999999744e-05, 8.368000000000264e-05, 8.363899999999994e-05, 8.301400000000278e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:01.003" endtime="20201117 14:43:01.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.021" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.020" endtime="20201117 14:43:01.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.023" level="INFO">VALUE: [8.308299999999769e-05, 8.302700000000288e-05, 8.291599999999885e-05, 8.299999999999974e-05, 8.283299999999744e-05, 8.368000000000264e-05, 8.363899999999994e-05, 8.301400000000278e-05, 8.373600000000092e-05, 8.2846999999997e-05, 8.28330000000009e-05, 8.29309999999979e-05, 8.305600000000149e-05, 8.274999999999949e-05, 8.352799999999938e-05, 8.372300000000082e-05, 8.287500000000309e-05, 8.293100000000136e-05, 8.304100000000245e-05, 8.294500000000093e-05, 8.361099999999733e-05, 8.359700000000123e-05, 8.284700000000048e-05, 8.31110000000003e-05, 8.358299999999819e-05, 8.281899999999787e-05, 8.302799999999888e-05, 8.338899999999969e-05, 8.274999999999949e-05, 8.363899999999994e-05, 8.299999999999974e-05, 8.288900000000265e-05, 8.287499999999962e-05, 8.286100000000005e-05, 8.307000000000106e-05, 8.368100000000211e-05, 8.341599999999935e-05, 8.287500000000309e-05, 8.291699999999833e-05, 8.280500000000177e-05, 8.287499999999962e-05, 8.294400000000146e-05, 8.299999999999974e-05, 8.27780000000021e-05, 8.301399999999931e-05, 8.370800000000178e-05, 8.367999999999917e-05, 8.368099999999865e-05, 8.358299999999819e-05, 8.304200000000192e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.022" endtime="20201117 14:43:01.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.017" endtime="20201117 14:43:01.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.026" endtime="20201117 14:43:01.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.030" endtime="20201117 14:43:01.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.028" endtime="20201117 14:43:01.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.025" endtime="20201117 14:43:01.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.657" endtime="20201117 14:43:01.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.264" endtime="20201117 14:43:01.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.264" endtime="20201117 14:43:01.051"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.053" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.061" endtime="20201117 14:43:01.079"></status>
</kw>
<msg timestamp="20201117 14:43:01.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.060" endtime="20201117 14:43:01.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.081" endtime="20201117 14:43:01.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.083" endtime="20201117 14:43:01.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.057" endtime="20201117 14:43:01.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.055" endtime="20201117 14:43:01.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.092" endtime="20201117 14:43:01.379"></status>
</kw>
<msg timestamp="20201117 14:43:01.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024856542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024940528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.091" endtime="20201117 14:43:01.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024856542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024940528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.383" endtime="20201117 14:43:01.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.391" endtime="20201117 14:43:01.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.088" endtime="20201117 14:43:01.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.086" endtime="20201117 14:43:01.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.399" level="INFO">${RESULT} = [{'time': 0.024940528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.398600000000117e-05, 'source_diff': 8.398600000000117e-05}, {'time': 0.025027542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:01.395" endtime="20201117 14:43:01.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.413" level="INFO">${ACCURACY} = {'source_diff': [8.398600000000117e-05, 8.472299999999836e-05, 8.39859999999977e-05, 8.384799999999748e-05, 8.401400000000031e-05, 8.392999999999942e-05, 8.409799999999773e-05, 8.387499999999715e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:01.400" endtime="20201117 14:43:01.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.418" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.417" endtime="20201117 14:43:01.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.420" level="INFO">VALUE: [8.398600000000117e-05, 8.472299999999836e-05, 8.39859999999977e-05, 8.384799999999748e-05, 8.401400000000031e-05, 8.392999999999942e-05, 8.409799999999773e-05, 8.387499999999715e-05, 8.398600000000117e-05, 8.381899999999887e-05, 8.409699999999826e-05, 8.401399999999684e-05, 8.473600000000192e-05, 8.375000000000049e-05, 8.463900000000094e-05, 8.392999999999942e-05, 8.470799999999931e-05, 8.463900000000094e-05, 8.405599999999902e-05, 8.461099999999833e-05, 8.386099999999758e-05, 8.394500000000193e-05, 8.39309999999989e-05, 8.398700000000064e-05, 8.46119999999978e-05, 8.390299999999976e-05, 8.39170000000028e-05, 8.456900000000309e-05, 8.408300000000216e-05, 8.463900000000094e-05, 8.398600000000117e-05, 8.386099999999758e-05, 8.409700000000173e-05, 8.456899999999962e-05, 8.475000000000149e-05, 8.37919999999992e-05, 8.388800000000071e-05, 8.466700000000008e-05, 8.399999999999727e-05, 8.398600000000117e-05, 8.390200000000028e-05, 8.455599999999952e-05, 8.386100000000105e-05, 8.404199999999945e-05, 8.455599999999952e-05, 8.472200000000235e-05, 8.474999999999802e-05, 8.454100000000048e-05, 8.473599999999845e-05, 8.470799999999931e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.419" endtime="20201117 14:43:01.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.414" endtime="20201117 14:43:01.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.423" endtime="20201117 14:43:01.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.427" endtime="20201117 14:43:01.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.425" endtime="20201117 14:43:01.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.422" endtime="20201117 14:43:01.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.054" endtime="20201117 14:43:01.447"></status>
</kw>
<msg timestamp="20201117 14:43:01.447" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.455" endtime="20201117 14:43:01.474"></status>
</kw>
<msg timestamp="20201117 14:43:01.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.454" endtime="20201117 14:43:01.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.475" endtime="20201117 14:43:01.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.478" endtime="20201117 14:43:01.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.451" endtime="20201117 14:43:01.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.449" endtime="20201117 14:43:01.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.488" endtime="20201117 14:43:01.774"></status>
</kw>
<msg timestamp="20201117 14:43:01.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.486" endtime="20201117 14:43:01.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.778" endtime="20201117 14:43:01.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.786" endtime="20201117 14:43:01.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.484" endtime="20201117 14:43:01.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.482" endtime="20201117 14:43:01.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.793" level="INFO">${RESULT} = [{'time': 0.021771097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417999999999967e-05, 'source_diff': 8.417999999999967e-05}, {'time': 0.021858111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:01.790" endtime="20201117 14:43:01.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.807" level="INFO">${ACCURACY} = {'source_diff': [8.417999999999967e-05, 8.474999999999802e-05, 8.406899999999912e-05, 8.4153e-05, 8.387500000000062e-05, 8.380599999999877e-05, 8.474999999999802e-05, 8.459699999999876e-05, 8.45559999...</msg>
<status status="PASS" starttime="20201117 14:43:01.794" endtime="20201117 14:43:01.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.811" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.810" endtime="20201117 14:43:01.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.814" level="INFO">VALUE: [8.417999999999967e-05, 8.474999999999802e-05, 8.406899999999912e-05, 8.4153e-05, 8.387500000000062e-05, 8.380599999999877e-05, 8.474999999999802e-05, 8.459699999999876e-05, 8.455599999999952e-05, 8.394499999999847e-05, 8.401400000000031e-05, 8.401400000000031e-05, 8.469499999999922e-05, 8.463900000000094e-05, 8.402700000000041e-05, 8.401300000000084e-05, 8.401400000000031e-05, 8.470799999999931e-05, 8.387500000000062e-05, 8.470799999999931e-05, 8.38049999999993e-05, 8.402799999999988e-05, 8.377799999999963e-05, 8.394399999999899e-05, 8.37919999999992e-05, 8.468099999999965e-05, 8.38330000000019e-05, 8.379200000000267e-05, 8.39309999999989e-05, 8.46110000000018e-05, 8.434799999999798e-05, 8.404199999999945e-05, 8.473599999999845e-05, 8.469399999999974e-05, 8.399999999999727e-05, 8.388900000000019e-05, 8.470799999999931e-05, 8.455500000000005e-05, 8.409700000000173e-05, 8.3846999999998e-05, 8.456899999999962e-05, 8.469399999999974e-05, 8.406899999999912e-05, 8.398600000000117e-05, 8.473600000000192e-05, 8.395899999999804e-05, 8.46119999999978e-05, 8.455599999999952e-05, 8.473600000000192e-05, 8.402799999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.812" endtime="20201117 14:43:01.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.808" endtime="20201117 14:43:01.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.817" endtime="20201117 14:43:01.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.820" endtime="20201117 14:43:01.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.819" endtime="20201117 14:43:01.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.815" endtime="20201117 14:43:01.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.448" endtime="20201117 14:43:01.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.052" endtime="20201117 14:43:01.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.051" endtime="20201117 14:43:01.841"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.843" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.852" endtime="20201117 14:43:01.870"></status>
</kw>
<msg timestamp="20201117 14:43:01.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.850" endtime="20201117 14:43:01.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.872" endtime="20201117 14:43:01.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.875" endtime="20201117 14:43:01.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.847" endtime="20201117 14:43:01.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.845" endtime="20201117 14:43:01.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.884" endtime="20201117 14:43:02.169"></status>
</kw>
<msg timestamp="20201117 14:43:02.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024304611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.882" endtime="20201117 14:43:02.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024304611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.173" endtime="20201117 14:43:02.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.181" endtime="20201117 14:43:02.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.879" endtime="20201117 14:43:02.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.878" endtime="20201117 14:43:02.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.188" level="INFO">${RESULT} = [{'time': 0.024304611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.520799999999981e-05, 'source_diff': 8.520799999999981e-05}, {'time': 0.024392556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:02.184" endtime="20201117 14:43:02.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.201" level="INFO">${ACCURACY} = {'source_diff': [8.520799999999981e-05, 8.56119999999988e-05, 8.572199999999988e-05, 8.504100000000098e-05, 8.488900000000119e-05, 8.487500000000162e-05, 8.5153000000001e-05, 8.570800000000031e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:43:02.189" endtime="20201117 14:43:02.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.206" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.205" endtime="20201117 14:43:02.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.208" level="INFO">VALUE: [8.520799999999981e-05, 8.56119999999988e-05, 8.572199999999988e-05, 8.504100000000098e-05, 8.488900000000119e-05, 8.487500000000162e-05, 8.5153000000001e-05, 8.570800000000031e-05, 8.573599999999945e-05, 8.51249999999984e-05, 8.502800000000088e-05, 8.509699999999926e-05, 8.559699999999976e-05, 8.487500000000162e-05, 8.56669999999976e-05, 8.573599999999945e-05, 8.508399999999916e-05, 8.506999999999959e-05, 8.504200000000045e-05, 8.477800000000063e-05, 8.557000000000009e-05, 8.494399999999999e-05, 8.565199999999856e-05, 8.506900000000012e-05, 8.495799999999956e-05, 8.56530000000015e-05, 8.563900000000194e-05, 8.501400000000131e-05, 8.505600000000002e-05, 8.476399999999759e-05, 8.570800000000031e-05, 8.511099999999883e-05, 8.497199999999913e-05, 8.502799999999741e-05, 8.481999999999934e-05, 8.56530000000015e-05, 8.573600000000292e-05, 8.56249999999989e-05, 8.574999999999902e-05, 8.569400000000074e-05, 8.481999999999934e-05, 8.505499999999708e-05, 8.56660000000016e-05, 8.486099999999858e-05, 8.508299999999969e-05, 8.487500000000162e-05, 8.505500000000055e-05, 8.566700000000108e-05, 8.49309999999999e-05, 8.508299999999969e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.207" endtime="20201117 14:43:02.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.202" endtime="20201117 14:43:02.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.211" endtime="20201117 14:43:02.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.215" endtime="20201117 14:43:02.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.213" endtime="20201117 14:43:02.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.210" endtime="20201117 14:43:02.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.844" endtime="20201117 14:43:02.235"></status>
</kw>
<msg timestamp="20201117 14:43:02.235" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.244" endtime="20201117 14:43:02.261"></status>
</kw>
<msg timestamp="20201117 14:43:02.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.242" endtime="20201117 14:43:02.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.263" endtime="20201117 14:43:02.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.266" endtime="20201117 14:43:02.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.240" endtime="20201117 14:43:02.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.237" endtime="20201117 14:43:02.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.276" endtime="20201117 14:43:02.562"></status>
</kw>
<msg timestamp="20201117 14:43:02.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021553, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:02.274" endtime="20201117 14:43:02.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021553, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:02.566" endtime="20201117 14:43:02.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.574" endtime="20201117 14:43:02.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.272" endtime="20201117 14:43:02.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.270" endtime="20201117 14:43:02.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.581" level="INFO">${RESULT} = [{'time': 0.021553, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.538899999999822e-05, 'source_diff': 8.538899999999822e-05}, {'time': 0.021639986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:02.577" endtime="20201117 14:43:02.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.594" level="INFO">${ACCURACY} = {'source_diff': [8.538899999999822e-05, 8.490300000000076e-05, 8.506900000000012e-05, 8.515299999999754e-05, 8.56530000000015e-05, 8.574999999999902e-05, 8.494500000000293e-05, 8.476399999999759e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:02.582" endtime="20201117 14:43:02.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.599" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.598" endtime="20201117 14:43:02.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.601" level="INFO">VALUE: [8.538899999999822e-05, 8.490300000000076e-05, 8.506900000000012e-05, 8.515299999999754e-05, 8.56530000000015e-05, 8.574999999999902e-05, 8.494500000000293e-05, 8.476399999999759e-05, 8.49309999999999e-05, 8.56249999999989e-05, 8.481999999999934e-05, 8.51249999999984e-05, 8.569400000000074e-05, 8.487500000000162e-05, 8.501299999999837e-05, 8.552699999999844e-05, 8.483299999999944e-05, 8.508299999999969e-05, 8.561099999999933e-05, 8.493000000000042e-05, 8.495799999999956e-05, 8.488799999999824e-05, 8.502800000000088e-05, 8.49859999999987e-05, 8.56249999999989e-05, 8.47920000000002e-05, 8.481999999999934e-05, 8.566700000000108e-05, 8.566700000000108e-05, 8.576400000000206e-05, 8.570899999999979e-05, 8.502800000000088e-05, 8.49309999999999e-05, 8.558300000000019e-05, 8.506900000000012e-05, 8.565199999999856e-05, 8.490199999999781e-05, 8.569400000000074e-05, 8.505600000000002e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.512500000000187e-05, 8.570800000000031e-05, 8.495799999999956e-05, 8.487500000000162e-05, 8.502799999999741e-05, 8.565299999999804e-05, 8.491700000000033e-05, 8.49309999999999e-05, 8.502800000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.600" endtime="20201117 14:43:02.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.595" endtime="20201117 14:43:02.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.604" endtime="20201117 14:43:02.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.607" endtime="20201117 14:43:02.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.606" endtime="20201117 14:43:02.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.603" endtime="20201117 14:43:02.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.236" endtime="20201117 14:43:02.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.842" endtime="20201117 14:43:02.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.842" endtime="20201117 14:43:02.629"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.631" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.639" endtime="20201117 14:43:02.659"></status>
</kw>
<msg timestamp="20201117 14:43:02.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.638" endtime="20201117 14:43:02.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.660" endtime="20201117 14:43:02.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.663" endtime="20201117 14:43:02.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.635" endtime="20201117 14:43:02.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.633" endtime="20201117 14:43:02.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.671" endtime="20201117 14:43:02.957"></status>
</kw>
<msg timestamp="20201117 14:43:02.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025265208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025351556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.670" endtime="20201117 14:43:02.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025265208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025351556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.961" endtime="20201117 14:43:02.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.969" endtime="20201117 14:43:02.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.667" endtime="20201117 14:43:02.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.666" endtime="20201117 14:43:02.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.976" level="INFO">${RESULT} = [{'time': 0.025351556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.634799999999998e-05, 'source_diff': 8.634799999999998e-05}, {'time': 0.025440556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:02.973" endtime="20201117 14:43:02.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.991" level="INFO">${ACCURACY} = {'source_diff': [8.634799999999998e-05, 8.659800000000023e-05, 8.665199999999956e-05, 8.649999999999977e-05, 8.659700000000076e-05, 8.590199999999881e-05, 8.661100000000033e-05, 8.679199999999873e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:02.977" endtime="20201117 14:43:02.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.995" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.994" endtime="20201117 14:43:02.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.997" level="INFO">VALUE: [8.634799999999998e-05, 8.659800000000023e-05, 8.665199999999956e-05, 8.649999999999977e-05, 8.659700000000076e-05, 8.590199999999881e-05, 8.661100000000033e-05, 8.679199999999873e-05, 8.612500000000287e-05, 8.593000000000142e-05, 8.672200000000088e-05, 8.586099999999958e-05, 8.59859999999997e-05, 8.654199999999848e-05, 8.59859999999997e-05, 8.669499999999775e-05, 8.675000000000002e-05, 8.590300000000176e-05, 8.602800000000188e-05, 8.672300000000036e-05, 8.66669999999986e-05, 8.577700000000216e-05, 8.604099999999851e-05, 8.665199999999956e-05, 8.659700000000076e-05, 8.579100000000173e-05, 8.661100000000033e-05, 8.609700000000026e-05, 8.606900000000112e-05, 8.576400000000206e-05, 8.586099999999958e-05, 8.638900000000269e-05, 8.641700000000183e-05, 8.588900000000219e-05, 8.605600000000102e-05, 8.604199999999798e-05, 8.580600000000077e-05, 8.607000000000059e-05, 8.601399999999884e-05, 8.590199999999881e-05, 8.672199999999741e-05, 8.601399999999884e-05, 8.602700000000241e-05, 8.609700000000026e-05, 8.61249999999994e-05, 8.613899999999897e-05, 8.588899999999872e-05, 8.602800000000188e-05, 8.673600000000045e-05, 8.672200000000088e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.996" endtime="20201117 14:43:02.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.991" endtime="20201117 14:43:02.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.001" endtime="20201117 14:43:03.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.004" endtime="20201117 14:43:03.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.002" endtime="20201117 14:43:03.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.999" endtime="20201117 14:43:03.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.632" endtime="20201117 14:43:03.025"></status>
</kw>
<msg timestamp="20201117 14:43:03.025" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.033" endtime="20201117 14:43:03.051"></status>
</kw>
<msg timestamp="20201117 14:43:03.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.032" endtime="20201117 14:43:03.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.052" endtime="20201117 14:43:03.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.055" endtime="20201117 14:43:03.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.029" endtime="20201117 14:43:03.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.027" endtime="20201117 14:43:03.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.065" endtime="20201117 14:43:03.351"></status>
</kw>
<msg timestamp="20201117 14:43:03.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.063" endtime="20201117 14:43:03.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.355" endtime="20201117 14:43:03.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.363" endtime="20201117 14:43:03.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.061" endtime="20201117 14:43:03.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.059" endtime="20201117 14:43:03.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.370" level="INFO">${RESULT} = [{'time': 0.021985333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.627699999999919e-05, 'source_diff': 8.627699999999919e-05}, {'time': 0.022073333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.367" endtime="20201117 14:43:03.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.384" level="INFO">${ACCURACY} = {'source_diff': [8.627699999999919e-05, 8.609700000000026e-05, 8.613899999999897e-05, 8.675000000000002e-05, 8.604099999999851e-05, 8.595800000000056e-05, 8.663899999999947e-05, 8.672200000000088e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:03.371" endtime="20201117 14:43:03.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.388" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.387" endtime="20201117 14:43:03.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.390" level="INFO">VALUE: [8.627699999999919e-05, 8.609700000000026e-05, 8.613899999999897e-05, 8.675000000000002e-05, 8.604099999999851e-05, 8.595800000000056e-05, 8.663899999999947e-05, 8.672200000000088e-05, 8.586099999999958e-05, 8.675000000000002e-05, 8.59859999999997e-05, 8.576400000000206e-05, 8.590299999999829e-05, 8.668100000000165e-05, 8.672200000000088e-05, 8.590300000000176e-05, 8.576399999999859e-05, 8.680499999999883e-05, 8.602800000000188e-05, 8.574999999999902e-05, 8.677800000000263e-05, 8.58050000000013e-05, 8.659700000000076e-05, 8.611099999999983e-05, 8.661100000000033e-05, 8.63470000000005e-05, 8.675000000000002e-05, 8.609699999999679e-05, 8.666700000000208e-05, 8.580600000000077e-05, 8.595800000000056e-05, 8.577800000000163e-05, 8.59729999999996e-05, 8.5847e-05, 8.588899999999872e-05, 8.658399999999719e-05, 8.607000000000059e-05, 8.658399999999719e-05, 8.586199999999905e-05, 8.676400000000306e-05, 8.672200000000088e-05, 8.654099999999901e-05, 8.609700000000026e-05, 8.58050000000013e-05, 8.58189999999974e-05, 8.59310000000009e-05, 8.656899999999815e-05, 8.666700000000208e-05, 8.595800000000056e-05, 8.588899999999872e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.389" endtime="20201117 14:43:03.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.384" endtime="20201117 14:43:03.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.394" endtime="20201117 14:43:03.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.397" endtime="20201117 14:43:03.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.396" endtime="20201117 14:43:03.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.392" endtime="20201117 14:43:03.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.026" endtime="20201117 14:43:03.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.630" endtime="20201117 14:43:03.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.629" endtime="20201117 14:43:03.418"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.421" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.429" endtime="20201117 14:43:03.448"></status>
</kw>
<msg timestamp="20201117 14:43:03.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.427" endtime="20201117 14:43:03.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.449" endtime="20201117 14:43:03.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.452" endtime="20201117 14:43:03.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.425" endtime="20201117 14:43:03.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.423" endtime="20201117 14:43:03.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.461" endtime="20201117 14:43:03.746"></status>
</kw>
<msg timestamp="20201117 14:43:03.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024428458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:03.459" endtime="20201117 14:43:03.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024428458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:03.750" endtime="20201117 14:43:03.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.758" endtime="20201117 14:43:03.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.457" endtime="20201117 14:43:03.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.455" endtime="20201117 14:43:03.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.765" level="INFO">${RESULT} = [{'time': 0.024428458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.745799999999859e-05, 'source_diff': 8.745799999999859e-05}, {'time': 0.024517472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.761" endtime="20201117 14:43:03.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.778" level="INFO">${ACCURACY} = {'source_diff': [8.745799999999859e-05, 8.683299999999797e-05, 8.738900000000022e-05, 8.69860000000007e-05, 8.684699999999754e-05, 8.676399999999959e-05, 8.69860000000007e-05, 8.69310000000019e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:43:03.766" endtime="20201117 14:43:03.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.783" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.782" endtime="20201117 14:43:03.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.785" level="INFO">VALUE: [8.745799999999859e-05, 8.683299999999797e-05, 8.738900000000022e-05, 8.69860000000007e-05, 8.684699999999754e-05, 8.676399999999959e-05, 8.69860000000007e-05, 8.69310000000019e-05, 8.773600000000145e-05, 8.68059999999983e-05, 8.7638999999997e-05, 8.686100000000058e-05, 8.679199999999873e-05, 8.737500000000065e-05, 8.713899999999997e-05, 8.69999999999968e-05, 8.690199999999981e-05, 8.680499999999883e-05, 8.687500000000015e-05, 8.691599999999938e-05, 8.709699999999779e-05, 8.761100000000133e-05, 8.76250000000009e-05, 8.695899999999757e-05, 8.773600000000145e-05, 8.700000000000027e-05, 8.711100000000083e-05, 8.701399999999984e-05, 8.694500000000147e-05, 8.707000000000159e-05, 8.702799999999941e-05, 8.709700000000126e-05, 8.769499999999875e-05, 8.690299999999929e-05, 8.773700000000093e-05, 8.766600000000013e-05, 8.708300000000169e-05, 8.679099999999926e-05, 8.709700000000126e-05, 8.706899999999865e-05, 8.756899999999915e-05, 8.688899999999972e-05, 8.679099999999926e-05, 8.776400000000059e-05, 8.713899999999997e-05, 8.711099999999736e-05, 8.711099999999736e-05, 8.713899999999997e-05, 8.701399999999984e-05, 8.772199999999841e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.784" endtime="20201117 14:43:03.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.779" endtime="20201117 14:43:03.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.789" endtime="20201117 14:43:03.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.792" endtime="20201117 14:43:03.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.791" endtime="20201117 14:43:03.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.787" endtime="20201117 14:43:03.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.421" endtime="20201117 14:43:03.813"></status>
</kw>
<msg timestamp="20201117 14:43:03.813" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.821" endtime="20201117 14:43:03.839"></status>
</kw>
<msg timestamp="20201117 14:43:03.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.820" endtime="20201117 14:43:03.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.841" endtime="20201117 14:43:03.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.843" endtime="20201117 14:43:03.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.817" endtime="20201117 14:43:03.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.815" endtime="20201117 14:43:03.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.853" endtime="20201117 14:43:04.138"></status>
</kw>
<msg timestamp="20201117 14:43:04.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.852" endtime="20201117 14:43:04.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.143" endtime="20201117 14:43:04.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.151" endtime="20201117 14:43:04.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.849" endtime="20201117 14:43:04.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.847" endtime="20201117 14:43:04.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.157" level="INFO">${RESULT} = [{'time': 0.021675986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.720800000000181e-05, 'source_diff': 8.720800000000181e-05}, {'time': 0.021764958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.154" endtime="20201117 14:43:04.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.171" level="INFO">${ACCURACY} = {'source_diff': [8.720800000000181e-05, 8.687500000000015e-05, 8.706899999999865e-05, 8.758299999999872e-05, 8.701399999999984e-05, 8.688899999999972e-05, 8.713899999999997e-05, 8.775000000000102e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:04.158" endtime="20201117 14:43:04.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.175" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.174" endtime="20201117 14:43:04.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.178" level="INFO">VALUE: [8.720800000000181e-05, 8.687500000000015e-05, 8.706899999999865e-05, 8.758299999999872e-05, 8.701399999999984e-05, 8.688899999999972e-05, 8.713899999999997e-05, 8.775000000000102e-05, 8.688899999999972e-05, 8.698599999999723e-05, 8.695900000000104e-05, 8.683400000000091e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.768099999999918e-05, 8.776400000000059e-05, 8.773699999999746e-05, 8.761099999999786e-05, 8.711100000000083e-05, 8.683300000000144e-05, 8.700000000000027e-05, 8.737500000000065e-05, 8.766600000000013e-05, 8.68189999999984e-05, 8.692999999999895e-05, 8.688899999999972e-05, 8.691699999999886e-05, 8.709700000000126e-05, 8.676399999999959e-05, 8.6847000000001e-05, 8.709699999999779e-05, 8.759700000000176e-05, 8.690299999999929e-05, 8.69860000000007e-05, 8.759799999999776e-05, 8.708400000000116e-05, 8.769500000000222e-05, 8.715200000000006e-05, 8.676300000000012e-05, 8.769399999999927e-05, 8.681900000000187e-05, 8.756899999999915e-05, 8.770900000000179e-05, 8.695800000000156e-05, 8.705499999999908e-05, 8.683300000000144e-05, 8.676399999999959e-05, 8.698599999999723e-05, 8.756999999999862e-05, 8.677799999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.176" endtime="20201117 14:43:04.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.172" endtime="20201117 14:43:04.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.181" endtime="20201117 14:43:04.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.185" endtime="20201117 14:43:04.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.183" endtime="20201117 14:43:04.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.180" endtime="20201117 14:43:04.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.814" endtime="20201117 14:43:04.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.420" endtime="20201117 14:43:04.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.419" endtime="20201117 14:43:04.206"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.208" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.216" endtime="20201117 14:43:04.236"></status>
</kw>
<msg timestamp="20201117 14:43:04.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.215" endtime="20201117 14:43:04.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.237" endtime="20201117 14:43:04.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.240" endtime="20201117 14:43:04.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.212" endtime="20201117 14:43:04.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.210" endtime="20201117 14:43:04.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.249" endtime="20201117 14:43:04.534"></status>
</kw>
<msg timestamp="20201117 14:43:04.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.247" endtime="20201117 14:43:04.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.539" endtime="20201117 14:43:04.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.547" endtime="20201117 14:43:04.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.245" endtime="20201117 14:43:04.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.243" endtime="20201117 14:43:04.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.554" level="INFO">${RESULT} = [{'time': 0.025093403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.843099999999993e-05, 'source_diff': 8.843099999999993e-05}, {'time': 0.025183417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.550" endtime="20201117 14:43:04.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.568" level="INFO">${ACCURACY} = {'source_diff': [8.843099999999993e-05, 8.791699999999986e-05, 8.868100000000018e-05, 8.793099999999943e-05, 8.81120000000013e-05, 8.788900000000072e-05, 8.856900000000015e-05, 8.877799999999769e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:04.555" endtime="20201117 14:43:04.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.573" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.572" endtime="20201117 14:43:04.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.576" level="INFO">VALUE: [8.843099999999993e-05, 8.791699999999986e-05, 8.868100000000018e-05, 8.793099999999943e-05, 8.81120000000013e-05, 8.788900000000072e-05, 8.856900000000015e-05, 8.877799999999769e-05, 8.783299999999897e-05, 8.859700000000276e-05, 8.78189999999994e-05, 8.791600000000038e-05, 8.783299999999897e-05, 8.777800000000016e-05, 8.86670000000006e-05, 8.793099999999943e-05, 8.811099999999836e-05, 8.808399999999869e-05, 8.784699999999854e-05, 8.872199999999941e-05, 8.788899999999725e-05, 8.798599999999823e-05, 8.788900000000072e-05, 8.777800000000016e-05, 8.872199999999941e-05, 8.81250000000014e-05, 8.866599999999766e-05, 8.787500000000115e-05, 8.867999999999723e-05, 8.870799999999984e-05, 8.862499999999843e-05, 8.86800000000007e-05, 8.863900000000147e-05, 8.81250000000014e-05, 8.863900000000147e-05, 8.792999999999995e-05, 8.773600000000145e-05, 8.862499999999843e-05, 8.875000000000202e-05, 8.874999999999855e-05, 8.777799999999669e-05, 8.790200000000081e-05, 8.805600000000302e-05, 8.786100000000158e-05, 8.79860000000017e-05, 8.875000000000202e-05, 8.81670000000001e-05, 8.86800000000007e-05, 8.873599999999898e-05, 8.813900000000097e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.574" endtime="20201117 14:43:04.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.569" endtime="20201117 14:43:04.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.579" endtime="20201117 14:43:04.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.582" endtime="20201117 14:43:04.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.581" endtime="20201117 14:43:04.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.577" endtime="20201117 14:43:04.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.209" endtime="20201117 14:43:04.603"></status>
</kw>
<msg timestamp="20201117 14:43:04.603" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.611" endtime="20201117 14:43:04.629"></status>
</kw>
<msg timestamp="20201117 14:43:04.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.610" endtime="20201117 14:43:04.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.631" endtime="20201117 14:43:04.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.633" endtime="20201117 14:43:04.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.607" endtime="20201117 14:43:04.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.605" endtime="20201117 14:43:04.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.643" endtime="20201117 14:43:04.929"></status>
</kw>
<msg timestamp="20201117 14:43:04.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.642" endtime="20201117 14:43:04.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.933" endtime="20201117 14:43:04.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.941" endtime="20201117 14:43:04.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.639" endtime="20201117 14:43:04.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.637" endtime="20201117 14:43:04.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.948" level="INFO">${RESULT} = [{'time': 0.021756653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84860000000022e-05, 'source_diff': 8.84860000000022e-05}, {'time': 0.021846667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:04.945" endtime="20201117 14:43:04.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.961" level="INFO">${ACCURACY} = {'source_diff': [8.84860000000022e-05, 8.800000000000127e-05, 8.808399999999869e-05, 8.790199999999734e-05, 8.775000000000102e-05, 8.798599999999823e-05, 8.787499999999768e-05, 8.802700000000094e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:04.949" endtime="20201117 14:43:04.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.966" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.965" endtime="20201117 14:43:04.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.969" level="INFO">VALUE: [8.84860000000022e-05, 8.800000000000127e-05, 8.808399999999869e-05, 8.790199999999734e-05, 8.775000000000102e-05, 8.798599999999823e-05, 8.787499999999768e-05, 8.802700000000094e-05, 8.872200000000288e-05, 8.855500000000058e-05, 8.859699999999929e-05, 8.855500000000058e-05, 8.779100000000026e-05, 8.811100000000183e-05, 8.86670000000006e-05, 8.804199999999998e-05, 8.802800000000041e-05, 8.786099999999811e-05, 8.793099999999943e-05, 8.801399999999737e-05, 8.781999999999887e-05, 8.854200000000048e-05, 8.840300000000079e-05, 8.862499999999843e-05, 8.794399999999952e-05, 8.801400000000084e-05, 8.808299999999922e-05, 8.776299999999765e-05, 8.786099999999811e-05, 8.78189999999994e-05, 8.869400000000027e-05, 8.800000000000127e-05, 8.861100000000233e-05, 8.877800000000116e-05, 8.868100000000018e-05, 8.876299999999865e-05, 8.7944999999999e-05, 8.809699999999879e-05, 8.869499999999975e-05, 8.792999999999995e-05, 8.790299999999682e-05, 8.797299999999814e-05, 8.800000000000127e-05, 8.788900000000072e-05, 8.776400000000059e-05, 8.809700000000226e-05, 8.856900000000015e-05, 8.863900000000147e-05, 8.794399999999952e-05, 8.798599999999823e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.967" endtime="20201117 14:43:04.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.963" endtime="20201117 14:43:04.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.972" endtime="20201117 14:43:04.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.975" endtime="20201117 14:43:04.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.974" endtime="20201117 14:43:04.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.970" endtime="20201117 14:43:04.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.604" endtime="20201117 14:43:04.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.207" endtime="20201117 14:43:04.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.206" endtime="20201117 14:43:04.996"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.999" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.007" endtime="20201117 14:43:05.024"></status>
</kw>
<msg timestamp="20201117 14:43:05.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.005" endtime="20201117 14:43:05.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.026" endtime="20201117 14:43:05.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.028" endtime="20201117 14:43:05.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.003" endtime="20201117 14:43:05.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.001" endtime="20201117 14:43:05.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.037" endtime="20201117 14:43:05.322"></status>
</kw>
<msg timestamp="20201117 14:43:05.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023965889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.036" endtime="20201117 14:43:05.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023965889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.327" endtime="20201117 14:43:05.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.335" endtime="20201117 14:43:05.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.033" endtime="20201117 14:43:05.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.032" endtime="20201117 14:43:05.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.348" level="INFO">${RESULT} = [{'time': 0.024055097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.920800000000034e-05, 'source_diff': 8.920800000000034e-05}, {'time': 0.024147153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:05.345" endtime="20201117 14:43:05.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.362" level="INFO">${ACCURACY} = {'source_diff': [8.920800000000034e-05, 8.965300000000204e-05, 8.884699999999954e-05, 8.893000000000095e-05, 8.886100000000258e-05, 8.89860000000027e-05, 8.902799999999794e-05, 8.959700000000029e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:05.349" endtime="20201117 14:43:05.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.366" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.365" endtime="20201117 14:43:05.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.369" level="INFO">VALUE: [8.920800000000034e-05, 8.965300000000204e-05, 8.884699999999954e-05, 8.893000000000095e-05, 8.886100000000258e-05, 8.89860000000027e-05, 8.902799999999794e-05, 8.959700000000029e-05, 8.904200000000098e-05, 8.959700000000029e-05, 8.906900000000065e-05, 8.975000000000302e-05, 8.908400000000316e-05, 8.884799999999901e-05, 8.884699999999954e-05, 8.900000000000227e-05, 8.973599999999998e-05, 8.952700000000244e-05, 8.974999999999955e-05, 8.958300000000072e-05, 8.893000000000095e-05, 8.880500000000083e-05, 8.959699999999682e-05, 8.879200000000073e-05, 8.905600000000055e-05, 8.905600000000055e-05, 8.961099999999986e-05, 8.895899999999957e-05, 8.902800000000141e-05, 8.883299999999997e-05, 8.965299999999857e-05, 8.950000000000277e-05, 8.969400000000127e-05, 8.897299999999914e-05, 8.890200000000181e-05, 8.954099999999854e-05, 8.959700000000029e-05, 8.956899999999768e-05, 8.891700000000086e-05, 8.897199999999966e-05, 8.891600000000138e-05, 8.972199999999694e-05, 8.958300000000072e-05, 8.895800000000009e-05, 8.968099999999771e-05, 8.901399999999837e-05, 8.8945e-05, 8.96670000000016e-05, 8.972299999999989e-05, 8.96800000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.367" endtime="20201117 14:43:05.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.362" endtime="20201117 14:43:05.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.372" endtime="20201117 14:43:05.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.375" endtime="20201117 14:43:05.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.373" endtime="20201117 14:43:05.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.370" endtime="20201117 14:43:05.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.999" endtime="20201117 14:43:05.396"></status>
</kw>
<msg timestamp="20201117 14:43:05.396" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.404" endtime="20201117 14:43:05.422"></status>
</kw>
<msg timestamp="20201117 14:43:05.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.402" endtime="20201117 14:43:05.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.423" endtime="20201117 14:43:05.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.426" endtime="20201117 14:43:05.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.400" endtime="20201117 14:43:05.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.398" endtime="20201117 14:43:05.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.436" endtime="20201117 14:43:05.721"></status>
</kw>
<msg timestamp="20201117 14:43:05.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.434" endtime="20201117 14:43:05.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.725" endtime="20201117 14:43:05.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.733" endtime="20201117 14:43:05.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.432" endtime="20201117 14:43:05.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.430" endtime="20201117 14:43:05.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.740" level="INFO">${RESULT} = [{'time': 0.021618569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.941600000000188e-05, 'source_diff': 8.941600000000188e-05}, {'time': 0.021709569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:05.737" endtime="20201117 14:43:05.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.754" level="INFO">${ACCURACY} = {'source_diff': [8.941600000000188e-05, 8.89860000000027e-05, 8.965299999999857e-05, 8.911099999999936e-05, 8.969400000000127e-05, 8.912499999999893e-05, 8.9638999999999e-05, 8.902800000000141e-05, 8....</msg>
<status status="PASS" starttime="20201117 14:43:05.741" endtime="20201117 14:43:05.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.758" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.757" endtime="20201117 14:43:05.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.761" level="INFO">VALUE: [8.941600000000188e-05, 8.89860000000027e-05, 8.965299999999857e-05, 8.911099999999936e-05, 8.969400000000127e-05, 8.912499999999893e-05, 8.9638999999999e-05, 8.902800000000141e-05, 8.894400000000052e-05, 8.912499999999893e-05, 8.883299999999997e-05, 8.96670000000016e-05, 8.897199999999966e-05, 8.901399999999837e-05, 8.909699999999979e-05, 8.895899999999957e-05, 8.907000000000012e-05, 8.883299999999997e-05, 8.958300000000072e-05, 8.883299999999997e-05, 8.936099999999961e-05, 8.901400000000184e-05, 8.958300000000072e-05, 8.970899999999685e-05, 8.911100000000283e-05, 8.884699999999954e-05, 8.897199999999966e-05, 8.874999999999855e-05, 8.977800000000216e-05, 8.961099999999986e-05, 8.890300000000129e-05, 8.891700000000086e-05, 8.884700000000301e-05, 8.966699999999814e-05, 8.907000000000012e-05, 8.888800000000224e-05, 8.883400000000291e-05, 8.906899999999718e-05, 8.887499999999868e-05, 8.973599999999998e-05, 8.901400000000184e-05, 8.894399999999705e-05, 8.883299999999997e-05, 8.884699999999954e-05, 8.883299999999997e-05, 8.894400000000052e-05, 8.936099999999961e-05, 8.938899999999875e-05, 8.959700000000029e-05, 8.897200000000313e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.759" endtime="20201117 14:43:05.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.754" endtime="20201117 14:43:05.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.764" endtime="20201117 14:43:05.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.767" endtime="20201117 14:43:05.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.765" endtime="20201117 14:43:05.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.762" endtime="20201117 14:43:05.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.396" endtime="20201117 14:43:05.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.997" endtime="20201117 14:43:05.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.997" endtime="20201117 14:43:05.788"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.790" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.798" endtime="20201117 14:43:05.817"></status>
</kw>
<msg timestamp="20201117 14:43:05.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.797" endtime="20201117 14:43:05.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.819" endtime="20201117 14:43:05.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.821" endtime="20201117 14:43:05.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.794" endtime="20201117 14:43:05.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.792" endtime="20201117 14:43:05.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.831" endtime="20201117 14:43:06.117"></status>
</kw>
<msg timestamp="20201117 14:43:06.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024803514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.829" endtime="20201117 14:43:06.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024803514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.121" endtime="20201117 14:43:06.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.129" endtime="20201117 14:43:06.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.826" endtime="20201117 14:43:06.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.824" endtime="20201117 14:43:06.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.136" level="INFO">${RESULT} = [{'time': 0.024893569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.005500000000208e-05, 'source_diff': 9.005500000000208e-05}, {'time': 0.024985542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.132" endtime="20201117 14:43:06.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.150" level="INFO">${ACCURACY} = {'source_diff': [9.005500000000208e-05, 8.998600000000023e-05, 8.991700000000186e-05, 9.008400000000069e-05, 9.004100000000251e-05, 9.063800000000052e-05, 9.06939999999988e-05, 8.987499999999968e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:06.137" endtime="20201117 14:43:06.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.155" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.154" endtime="20201117 14:43:06.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.157" level="INFO">VALUE: [9.005500000000208e-05, 8.998600000000023e-05, 8.991700000000186e-05, 9.008400000000069e-05, 9.004100000000251e-05, 9.063800000000052e-05, 9.06939999999988e-05, 8.987499999999968e-05, 8.981899999999793e-05, 9.072199999999794e-05, 9.061100000000086e-05, 9.011100000000036e-05, 9.066699999999914e-05, 9.059700000000129e-05, 9.055599999999858e-05, 8.986100000000011e-05, 8.991699999999839e-05, 9.009700000000079e-05, 9.011100000000036e-05, 9.072300000000089e-05, 8.99999999999998e-05, 9.055599999999858e-05, 9.059700000000129e-05, 9.005600000000155e-05, 9.008299999999775e-05, 9.00129999999999e-05, 9.006899999999818e-05, 9.002699999999947e-05, 8.990300000000229e-05, 8.99999999999998e-05, 9.066699999999914e-05, 9.009700000000079e-05, 8.979200000000173e-05, 9.062500000000043e-05, 8.988899999999925e-05, 9.008400000000069e-05, 9.009799999999679e-05, 9.062500000000043e-05, 9.059800000000076e-05, 9.061200000000033e-05, 9.012499999999993e-05, 9.055600000000205e-05, 9.070799999999837e-05, 9.061099999999739e-05, 8.998600000000023e-05, 9.073600000000098e-05, 9.070799999999837e-05, 9.067999999999923e-05, 9.005499999999861e-05, 8.986100000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.156" endtime="20201117 14:43:06.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.151" endtime="20201117 14:43:06.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.160" endtime="20201117 14:43:06.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.164" endtime="20201117 14:43:06.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.162" endtime="20201117 14:43:06.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.159" endtime="20201117 14:43:06.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.791" endtime="20201117 14:43:06.184"></status>
</kw>
<msg timestamp="20201117 14:43:06.185" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.193" endtime="20201117 14:43:06.211"></status>
</kw>
<msg timestamp="20201117 14:43:06.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.191" endtime="20201117 14:43:06.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.212" endtime="20201117 14:43:06.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.215" endtime="20201117 14:43:06.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.189" endtime="20201117 14:43:06.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.187" endtime="20201117 14:43:06.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.225" endtime="20201117 14:43:06.510"></status>
</kw>
<msg timestamp="20201117 14:43:06.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.223" endtime="20201117 14:43:06.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.514" endtime="20201117 14:43:06.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.522" endtime="20201117 14:43:06.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.221" endtime="20201117 14:43:06.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.219" endtime="20201117 14:43:06.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.529" level="INFO">${RESULT} = [{'time': 0.021572611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.008299999999775e-05, 'source_diff': 9.008299999999775e-05}, {'time': 0.021664625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.525" endtime="20201117 14:43:06.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.542" level="INFO">${ACCURACY} = {'source_diff': [9.008299999999775e-05, 9.011100000000036e-05, 8.983300000000097e-05, 9.059700000000129e-05, 9.059699999999782e-05, 8.990300000000229e-05, 8.976399999999912e-05, 8.99999999999998e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:06.530" endtime="20201117 14:43:06.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.547" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.546" endtime="20201117 14:43:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.549" level="INFO">VALUE: [9.008299999999775e-05, 9.011100000000036e-05, 8.983300000000097e-05, 9.059700000000129e-05, 9.059699999999782e-05, 8.990300000000229e-05, 8.976399999999912e-05, 8.99999999999998e-05, 9.004199999999851e-05, 8.988899999999925e-05, 9.070900000000132e-05, 9.070899999999785e-05, 8.995800000000109e-05, 9.056900000000215e-05, 8.976399999999912e-05, 9.0639e-05, 9.008300000000122e-05, 8.980500000000183e-05, 8.987499999999968e-05, 9.062500000000043e-05, 9.005499999999861e-05, 8.993100000000143e-05, 8.994399999999805e-05, 9.011100000000036e-05, 9.0639e-05, 9.012499999999993e-05, 9.007000000000112e-05, 8.987499999999968e-05, 9.062500000000043e-05, 8.983400000000044e-05, 9.002799999999894e-05, 9.001399999999937e-05, 9.011100000000036e-05, 9.067999999999923e-05, 9.073599999999751e-05, 9.009700000000079e-05, 8.986100000000011e-05, 8.987499999999968e-05, 9.005600000000155e-05, 8.993099999999796e-05, 9.004200000000198e-05, 8.987499999999968e-05, 9.073599999999751e-05, 9.075000000000055e-05, 9.002699999999947e-05, 9.007000000000112e-05, 9.070900000000132e-05, 9.008300000000122e-05, 9.072200000000141e-05, 9.005499999999861e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.548" endtime="20201117 14:43:06.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.543" endtime="20201117 14:43:06.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.552" endtime="20201117 14:43:06.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.556" endtime="20201117 14:43:06.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.554" endtime="20201117 14:43:06.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.551" endtime="20201117 14:43:06.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.185" endtime="20201117 14:43:06.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.789" endtime="20201117 14:43:06.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.788" endtime="20201117 14:43:06.577"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.579" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.588" endtime="20201117 14:43:06.606"></status>
</kw>
<msg timestamp="20201117 14:43:06.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.586" endtime="20201117 14:43:06.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.607" endtime="20201117 14:43:06.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.610" endtime="20201117 14:43:06.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.583" endtime="20201117 14:43:06.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.581" endtime="20201117 14:43:06.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.619" endtime="20201117 14:43:06.905"></status>
</kw>
<msg timestamp="20201117 14:43:06.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.617" endtime="20201117 14:43:06.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.909" endtime="20201117 14:43:06.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.918" endtime="20201117 14:43:06.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.615" endtime="20201117 14:43:06.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.613" endtime="20201117 14:43:06.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.924" level="INFO">${RESULT} = [{'time': 0.024628069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.104100000000004e-05, 'source_diff': 9.104100000000004e-05}, {'time': 0.024721069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.921" endtime="20201117 14:43:06.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.938" level="INFO">${ACCURACY} = {'source_diff': [9.104100000000004e-05, 9.095799999999862e-05, 9.170799999999937e-05, 9.170799999999937e-05, 9.080500000000283e-05, 9.098600000000123e-05, 9.168000000000023e-05, 9.112500000000093e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:06.925" endtime="20201117 14:43:06.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.943" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.942" endtime="20201117 14:43:06.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.946" level="INFO">VALUE: [9.104100000000004e-05, 9.095799999999862e-05, 9.170799999999937e-05, 9.170799999999937e-05, 9.080500000000283e-05, 9.098600000000123e-05, 9.168000000000023e-05, 9.112500000000093e-05, 9.140299999999685e-05, 9.165300000000057e-05, 9.088900000000025e-05, 9.10000000000008e-05, 9.094499999999853e-05, 9.095900000000157e-05, 9.090299999999982e-05, 9.169499999999928e-05, 9.104199999999951e-05, 9.088900000000025e-05, 9.090299999999982e-05, 9.161199999999786e-05, 9.090200000000034e-05, 9.094400000000252e-05, 9.163799999999805e-05, 9.173600000000198e-05, 9.161099999999839e-05, 9.167999999999676e-05, 9.138900000000075e-05, 9.104199999999951e-05, 9.091699999999939e-05, 9.161099999999839e-05, 9.166700000000014e-05, 9.079200000000273e-05, 9.173599999999851e-05, 9.172199999999894e-05, 9.095900000000157e-05, 9.166700000000014e-05, 9.162499999999796e-05, 9.094400000000252e-05, 9.166600000000066e-05, 9.111100000000136e-05, 9.084700000000154e-05, 9.099999999999733e-05, 9.077700000000022e-05, 9.166600000000066e-05, 9.111100000000136e-05, 9.081899999999893e-05, 9.176400000000112e-05, 9.170799999999937e-05, 9.088900000000025e-05, 9.094499999999853e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.944" endtime="20201117 14:43:06.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.939" endtime="20201117 14:43:06.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.949" endtime="20201117 14:43:06.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.952" endtime="20201117 14:43:06.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.951" endtime="20201117 14:43:06.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.947" endtime="20201117 14:43:06.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.580" endtime="20201117 14:43:06.973"></status>
</kw>
<msg timestamp="20201117 14:43:06.974" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.982" endtime="20201117 14:43:07.001"></status>
</kw>
<msg timestamp="20201117 14:43:07.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.980" endtime="20201117 14:43:07.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.002" endtime="20201117 14:43:07.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.005" endtime="20201117 14:43:07.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.978" endtime="20201117 14:43:07.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.976" endtime="20201117 14:43:07.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.015" endtime="20201117 14:43:07.300"></status>
</kw>
<msg timestamp="20201117 14:43:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.013" endtime="20201117 14:43:07.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.304" endtime="20201117 14:43:07.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.313" endtime="20201117 14:43:07.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.011" endtime="20201117 14:43:07.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.009" endtime="20201117 14:43:07.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.319" level="INFO">${RESULT} = [{'time': 0.022365347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.104100000000004e-05, 'source_diff': 9.104100000000004e-05}, {'time': 0.022459306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.316" endtime="20201117 14:43:07.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.333" level="INFO">${ACCURACY} = {'source_diff': [9.104100000000004e-05, 9.174999999999808e-05, 9.105499999999961e-05, 9.101400000000037e-05, 9.097200000000166e-05, 9.101400000000037e-05, 9.076400000000012e-05, 9.087499999999721e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:07.320" endtime="20201117 14:43:07.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.337" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.336" endtime="20201117 14:43:07.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.340" level="INFO">VALUE: [9.104100000000004e-05, 9.174999999999808e-05, 9.105499999999961e-05, 9.101400000000037e-05, 9.097200000000166e-05, 9.101400000000037e-05, 9.076400000000012e-05, 9.087499999999721e-05, 9.077799999999969e-05, 9.095799999999862e-05, 9.094400000000252e-05, 9.169500000000275e-05, 9.077799999999969e-05, 9.079199999999926e-05, 9.109699999999832e-05, 9.095900000000157e-05, 9.112500000000093e-05, 9.079199999999926e-05, 9.099999999999733e-05, 9.111100000000136e-05, 9.091599999999991e-05, 9.079099999999979e-05, 9.101400000000037e-05, 9.088899999999678e-05, 9.161100000000186e-05, 9.109700000000179e-05, 9.088900000000025e-05, 9.083400000000144e-05, 9.134700000000204e-05, 9.087500000000068e-05, 9.108299999999875e-05, 9.173599999999851e-05, 9.1639000000001e-05, 9.173600000000198e-05, 9.109799999999779e-05, 9.086099999999764e-05, 9.10000000000008e-05, 9.172300000000189e-05, 9.08190000000024e-05, 9.16939999999998e-05, 9.111100000000136e-05, 9.075000000000055e-05, 9.086099999999764e-05, 9.086100000000111e-05, 9.105499999999961e-05, 9.079199999999926e-05, 9.161099999999839e-05, 9.159699999999882e-05, 9.168099999999971e-05, 9.093099999999896e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.338" endtime="20201117 14:43:07.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.334" endtime="20201117 14:43:07.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.343" endtime="20201117 14:43:07.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.347" endtime="20201117 14:43:07.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.345" endtime="20201117 14:43:07.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.341" endtime="20201117 14:43:07.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.974" endtime="20201117 14:43:07.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.578" endtime="20201117 14:43:07.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.577" endtime="20201117 14:43:07.368"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.370" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.378" endtime="20201117 14:43:07.397"></status>
</kw>
<msg timestamp="20201117 14:43:07.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.376" endtime="20201117 14:43:07.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.399" endtime="20201117 14:43:07.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.402" endtime="20201117 14:43:07.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.374" endtime="20201117 14:43:07.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.372" endtime="20201117 14:43:07.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.410" endtime="20201117 14:43:07.695"></status>
</kw>
<msg timestamp="20201117 14:43:07.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025009889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.409" endtime="20201117 14:43:07.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025009889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.699" endtime="20201117 14:43:07.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.707" endtime="20201117 14:43:07.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.406" endtime="20201117 14:43:07.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.405" endtime="20201117 14:43:07.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.714" level="INFO">${RESULT} = [{'time': 0.025102375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.248599999999926e-05, 'source_diff': 9.248599999999926e-05}, {'time': 0.025197375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.711" endtime="20201117 14:43:07.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.729" level="INFO">${ACCURACY} = {'source_diff': [9.248599999999926e-05, 9.265300000000157e-05, 9.193099999999996e-05, 9.268099999999724e-05, 9.274999999999908e-05, 9.208399999999922e-05, 9.19589999999991e-05, 9.265300000000157e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:07.715" endtime="20201117 14:43:07.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.733" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.732" endtime="20201117 14:43:07.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.736" level="INFO">VALUE: [9.248599999999926e-05, 9.265300000000157e-05, 9.193099999999996e-05, 9.268099999999724e-05, 9.274999999999908e-05, 9.208399999999922e-05, 9.19589999999991e-05, 9.265300000000157e-05, 9.273699999999899e-05, 9.174999999999808e-05, 9.262499999999896e-05, 9.209700000000279e-05, 9.208400000000269e-05, 9.190200000000134e-05, 9.197200000000266e-05, 9.211100000000236e-05, 9.265300000000157e-05, 9.263899999999853e-05, 9.258300000000025e-05, 9.190300000000082e-05, 9.244400000000055e-05, 9.204200000000051e-05, 9.206999999999965e-05, 9.179199999999679e-05, 9.184800000000201e-05, 9.209799999999879e-05, 9.187499999999821e-05, 9.243100000000046e-05, 9.199999999999833e-05, 9.262499999999896e-05, 9.211099999999889e-05, 9.258300000000025e-05, 9.262499999999896e-05, 9.188899999999778e-05, 9.181899999999993e-05, 9.193000000000048e-05, 9.268100000000071e-05, 9.211099999999889e-05, 9.211100000000236e-05, 9.212500000000193e-05, 9.175000000000155e-05, 9.259799999999929e-05, 9.258399999999972e-05, 9.187500000000168e-05, 9.211099999999889e-05, 9.190300000000082e-05, 9.261199999999886e-05, 9.274999999999908e-05, 9.211099999999889e-05, 9.198599999999876e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.734" endtime="20201117 14:43:07.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.730" endtime="20201117 14:43:07.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.739" endtime="20201117 14:43:07.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.743" endtime="20201117 14:43:07.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.741" endtime="20201117 14:43:07.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.738" endtime="20201117 14:43:07.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.371" endtime="20201117 14:43:07.763"></status>
</kw>
<msg timestamp="20201117 14:43:07.764" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.772" endtime="20201117 14:43:07.791"></status>
</kw>
<msg timestamp="20201117 14:43:07.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.770" endtime="20201117 14:43:07.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.792" endtime="20201117 14:43:07.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.794" endtime="20201117 14:43:07.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.768" endtime="20201117 14:43:07.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.766" endtime="20201117 14:43:07.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.804" endtime="20201117 14:43:08.090"></status>
</kw>
<msg timestamp="20201117 14:43:08.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.803" endtime="20201117 14:43:08.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.094" endtime="20201117 14:43:08.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.102" endtime="20201117 14:43:08.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.800" endtime="20201117 14:43:08.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.799" endtime="20201117 14:43:08.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.109" level="INFO">${RESULT} = [{'time': 0.021790347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.240300000000132e-05, 'source_diff': 9.240300000000132e-05}, {'time': 0.021884375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.105" endtime="20201117 14:43:08.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.122" level="INFO">${ACCURACY} = {'source_diff': [9.240300000000132e-05, 9.190300000000082e-05, 9.195799999999962e-05, 9.193100000000343e-05, 9.176399999999765e-05, 9.211099999999889e-05, 9.190299999999735e-05, 9.198599999999876e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:08.110" endtime="20201117 14:43:08.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.126" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.125" endtime="20201117 14:43:08.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.129" level="INFO">VALUE: [9.240300000000132e-05, 9.190300000000082e-05, 9.195799999999962e-05, 9.193100000000343e-05, 9.176399999999765e-05, 9.211099999999889e-05, 9.190299999999735e-05, 9.198599999999876e-05, 9.18199999999994e-05, 9.180599999999983e-05, 9.257000000000015e-05, 9.188900000000125e-05, 9.181899999999993e-05, 9.177700000000122e-05, 9.208299999999975e-05, 9.190200000000134e-05, 9.181899999999993e-05, 9.255499999999764e-05, 9.187499999999821e-05, 9.177800000000069e-05, 9.263899999999853e-05, 9.188900000000125e-05, 9.259699999999982e-05, 9.193099999999996e-05, 9.26529999999981e-05, 9.188900000000125e-05, 9.19589999999991e-05, 9.268000000000123e-05, 9.204200000000051e-05, 9.206999999999965e-05, 9.257000000000015e-05, 9.256900000000068e-05, 9.187499999999821e-05, 9.198599999999876e-05, 9.194400000000005e-05, 9.19719999999992e-05, 9.198600000000223e-05, 9.212499999999846e-05, 9.272199999999994e-05, 9.194400000000005e-05, 9.184699999999907e-05, 9.26529999999981e-05, 9.186099999999864e-05, 9.211099999999889e-05, 9.265300000000157e-05, 9.266699999999767e-05, 9.176399999999765e-05, 9.259799999999929e-05, 9.180599999999983e-05, 9.205600000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.127" endtime="20201117 14:43:08.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.123" endtime="20201117 14:43:08.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.132" endtime="20201117 14:43:08.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.136" endtime="20201117 14:43:08.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.134" endtime="20201117 14:43:08.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.131" endtime="20201117 14:43:08.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.764" endtime="20201117 14:43:08.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.369" endtime="20201117 14:43:08.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.368" endtime="20201117 14:43:08.157"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.159" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.167" endtime="20201117 14:43:08.186"></status>
</kw>
<msg timestamp="20201117 14:43:08.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.166" endtime="20201117 14:43:08.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.187" endtime="20201117 14:43:08.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.190" endtime="20201117 14:43:08.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.163" endtime="20201117 14:43:08.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.161" endtime="20201117 14:43:08.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.199" endtime="20201117 14:43:08.484"></status>
</kw>
<msg timestamp="20201117 14:43:08.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.197" endtime="20201117 14:43:08.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.488" endtime="20201117 14:43:08.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.496" endtime="20201117 14:43:08.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.195" endtime="20201117 14:43:08.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.193" endtime="20201117 14:43:08.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.503" level="INFO">${RESULT} = [{'time': 0.023845556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.35139999999994e-05, 'source_diff': 9.35139999999994e-05}, {'time': 0.023940514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:08.499" endtime="20201117 14:43:08.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.516" level="INFO">${ACCURACY} = {'source_diff': [9.35139999999994e-05, 9.288899999999878e-05, 9.362499999999996e-05, 9.369500000000128e-05, 9.363899999999953e-05, 9.311099999999989e-05, 9.29590000000001e-05, 9.29590000000001e-05, 9....</msg>
<status status="PASS" starttime="20201117 14:43:08.504" endtime="20201117 14:43:08.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.521" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.520" endtime="20201117 14:43:08.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.523" level="INFO">VALUE: [9.35139999999994e-05, 9.288899999999878e-05, 9.362499999999996e-05, 9.369500000000128e-05, 9.363899999999953e-05, 9.311099999999989e-05, 9.29590000000001e-05, 9.29590000000001e-05, 9.313799999999955e-05, 9.288900000000225e-05, 9.280499999999789e-05, 9.29720000000002e-05, 9.37079999999979e-05, 9.358300000000125e-05, 9.368099999999824e-05, 9.299999999999933e-05, 9.361100000000039e-05, 9.311099999999989e-05, 9.337499999999971e-05, 9.306900000000118e-05, 9.30139999999989e-05, 9.366699999999867e-05, 9.299999999999933e-05, 9.29590000000001e-05, 9.30139999999989e-05, 9.295800000000062e-05, 9.373699999999999e-05, 9.290300000000182e-05, 9.284700000000007e-05, 9.286099999999964e-05, 9.298599999999976e-05, 9.294500000000053e-05, 9.283299999999703e-05, 9.287499999999921e-05, 9.355499999999864e-05, 9.372200000000094e-05, 9.311099999999989e-05, 9.337499999999971e-05, 9.280600000000083e-05, 9.277799999999822e-05, 9.288899999999878e-05, 9.354199999999854e-05, 9.276399999999865e-05, 9.29720000000002e-05, 9.295799999999715e-05, 9.361100000000039e-05, 9.376400000000312e-05, 9.290200000000234e-05, 9.3026999999999e-05, 9.361100000000039e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.522" endtime="20201117 14:43:08.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.517" endtime="20201117 14:43:08.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.527" endtime="20201117 14:43:08.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.530" endtime="20201117 14:43:08.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.528" endtime="20201117 14:43:08.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.525" endtime="20201117 14:43:08.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.160" endtime="20201117 14:43:08.551"></status>
</kw>
<msg timestamp="20201117 14:43:08.551" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.559" endtime="20201117 14:43:08.577"></status>
</kw>
<msg timestamp="20201117 14:43:08.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.557" endtime="20201117 14:43:08.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.579" endtime="20201117 14:43:08.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.581" endtime="20201117 14:43:08.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.555" endtime="20201117 14:43:08.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.553" endtime="20201117 14:43:08.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.591" endtime="20201117 14:43:08.876"></status>
</kw>
<msg timestamp="20201117 14:43:08.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.589" endtime="20201117 14:43:08.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.881" endtime="20201117 14:43:08.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.889" endtime="20201117 14:43:08.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.587" endtime="20201117 14:43:08.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.585" endtime="20201117 14:43:08.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.896" level="INFO">${RESULT} = [{'time': 0.021619806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.349999999999983e-05, 'source_diff': 9.349999999999983e-05}, {'time': 0.02171475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:08.892" endtime="20201117 14:43:08.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.909" level="INFO">${ACCURACY} = {'source_diff': [9.349999999999983e-05, 9.308300000000075e-05, 9.299999999999933e-05, 9.361100000000039e-05, 9.361100000000039e-05, 9.375000000000008e-05, 9.309700000000032e-05, 9.284799999999954e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:08.897" endtime="20201117 14:43:08.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.914" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.913" endtime="20201117 14:43:08.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.916" level="INFO">VALUE: [9.349999999999983e-05, 9.308300000000075e-05, 9.299999999999933e-05, 9.361100000000039e-05, 9.361100000000039e-05, 9.375000000000008e-05, 9.309700000000032e-05, 9.284799999999954e-05, 9.287499999999921e-05, 9.284799999999954e-05, 9.28200000000004e-05, 9.375000000000008e-05, 9.375000000000008e-05, 9.301400000000237e-05, 9.276300000000265e-05, 9.279099999999832e-05, 9.370800000000137e-05, 9.37079999999979e-05, 9.372200000000094e-05, 9.284700000000007e-05, 9.363899999999953e-05, 9.288899999999878e-05, 9.276399999999865e-05, 9.279200000000126e-05, 9.286099999999964e-05, 9.287499999999921e-05, 9.291700000000139e-05, 9.36529999999991e-05, 9.36529999999991e-05, 9.279099999999832e-05, 9.279100000000179e-05, 9.372200000000094e-05, 9.362499999999996e-05, 9.306900000000118e-05, 9.359699999999735e-05, 9.308299999999728e-05, 9.298599999999976e-05, 9.286099999999964e-05, 9.294399999999758e-05, 9.354200000000201e-05, 9.370800000000137e-05, 9.309700000000032e-05, 9.299999999999933e-05, 9.284700000000007e-05, 9.376400000000312e-05, 9.280600000000083e-05, 9.276400000000212e-05, 9.284799999999954e-05, 9.372200000000094e-05, 9.356899999999821e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.915" endtime="20201117 14:43:08.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.910" endtime="20201117 14:43:08.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.919" endtime="20201117 14:43:08.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.923" endtime="20201117 14:43:08.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.921" endtime="20201117 14:43:08.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.918" endtime="20201117 14:43:08.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.552" endtime="20201117 14:43:08.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.158" endtime="20201117 14:43:08.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.157" endtime="20201117 14:43:08.944"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.946" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.954" endtime="20201117 14:43:08.974"></status>
</kw>
<msg timestamp="20201117 14:43:08.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.953" endtime="20201117 14:43:08.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.975" endtime="20201117 14:43:08.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.978" endtime="20201117 14:43:08.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.950" endtime="20201117 14:43:08.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.948" endtime="20201117 14:43:08.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.987" endtime="20201117 14:43:09.272"></status>
</kw>
<msg timestamp="20201117 14:43:09.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025346681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025440736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.985" endtime="20201117 14:43:09.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025346681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025440736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.276" endtime="20201117 14:43:09.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.284" endtime="20201117 14:43:09.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.983" endtime="20201117 14:43:09.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.981" endtime="20201117 14:43:09.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.292" level="INFO">${RESULT} = [{'time': 0.025440736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.405499999999914e-05, 'source_diff': 9.405499999999914e-05}, {'time': 0.025537736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.288" endtime="20201117 14:43:09.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.306" level="INFO">${ACCURACY} = {'source_diff': [9.405499999999914e-05, 9.462499999999749e-05, 9.409700000000132e-05, 9.461100000000139e-05, 9.397199999999772e-05, 9.47079999999989e-05, 9.461099999999792e-05, 9.404199999999904e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:09.293" endtime="20201117 14:43:09.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.311" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.310" endtime="20201117 14:43:09.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.313" level="INFO">VALUE: [9.405499999999914e-05, 9.462499999999749e-05, 9.409700000000132e-05, 9.461100000000139e-05, 9.397199999999772e-05, 9.47079999999989e-05, 9.461099999999792e-05, 9.404199999999904e-05, 9.376399999999965e-05, 9.472200000000194e-05, 9.398600000000076e-05, 9.386200000000011e-05, 9.400000000000033e-05, 9.405499999999914e-05, 9.461100000000139e-05, 9.40139999999999e-05, 9.386100000000064e-05, 9.381899999999846e-05, 9.380500000000236e-05, 9.386100000000064e-05, 9.452799999999997e-05, 9.377799999999922e-05, 9.461100000000139e-05, 9.454200000000301e-05, 9.387500000000021e-05, 9.474999999999761e-05, 9.417999999999926e-05, 9.386100000000064e-05, 9.377799999999922e-05, 9.391600000000291e-05, 9.473600000000151e-05, 9.387500000000021e-05, 9.46660000000002e-05, 9.459699999999835e-05, 9.469399999999933e-05, 9.469399999999933e-05, 9.387500000000021e-05, 9.459699999999835e-05, 9.462500000000096e-05, 9.408299999999828e-05, 9.461100000000139e-05, 9.461100000000139e-05, 9.411200000000036e-05, 9.466699999999967e-05, 9.39859999999973e-05, 9.391699999999892e-05, 9.461100000000139e-05, 9.469499999999881e-05, 9.381900000000193e-05, 9.394400000000205e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.312" endtime="20201117 14:43:09.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.307" endtime="20201117 14:43:09.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.316" endtime="20201117 14:43:09.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.320" endtime="20201117 14:43:09.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.318" endtime="20201117 14:43:09.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.315" endtime="20201117 14:43:09.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.947" endtime="20201117 14:43:09.340"></status>
</kw>
<msg timestamp="20201117 14:43:09.341" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.349" endtime="20201117 14:43:09.367"></status>
</kw>
<msg timestamp="20201117 14:43:09.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.347" endtime="20201117 14:43:09.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.368" endtime="20201117 14:43:09.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.371" endtime="20201117 14:43:09.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.345" endtime="20201117 14:43:09.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.343" endtime="20201117 14:43:09.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.381" endtime="20201117 14:43:09.666"></status>
</kw>
<msg timestamp="20201117 14:43:09.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.379" endtime="20201117 14:43:09.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.670" endtime="20201117 14:43:09.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.678" endtime="20201117 14:43:09.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.377" endtime="20201117 14:43:09.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.375" endtime="20201117 14:43:09.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.685" level="INFO">${RESULT} = [{'time': 0.021807903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.412500000000046e-05, 'source_diff': 9.412500000000046e-05}, {'time': 0.021904903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.682" endtime="20201117 14:43:09.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.699" level="INFO">${ACCURACY} = {'source_diff': [9.412500000000046e-05, 9.468099999999924e-05, 9.402799999999947e-05, 9.462500000000096e-05, 9.409699999999785e-05, 9.400000000000033e-05, 9.380600000000183e-05, 9.475000000000108e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:09.686" endtime="20201117 14:43:09.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.703" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.702" endtime="20201117 14:43:09.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.705" level="INFO">VALUE: [9.412500000000046e-05, 9.468099999999924e-05, 9.402799999999947e-05, 9.462500000000096e-05, 9.409699999999785e-05, 9.400000000000033e-05, 9.380600000000183e-05, 9.475000000000108e-05, 9.38880000000003e-05, 9.461099999999792e-05, 9.4027e-05, 9.458300000000225e-05, 9.390299999999935e-05, 9.387500000000021e-05, 9.454200000000301e-05, 9.406899999999871e-05, 9.412500000000046e-05, 9.390300000000282e-05, 9.462500000000096e-05, 9.459700000000182e-05, 9.41529999999996e-05, 9.388899999999978e-05, 9.46530000000001e-05, 9.462500000000096e-05, 9.411099999999742e-05, 9.458299999999878e-05, 9.395899999999763e-05, 9.395799999999815e-05, 9.381899999999846e-05, 9.39720000000012e-05, 9.390299999999935e-05, 9.472199999999847e-05, 9.462499999999749e-05, 9.409700000000132e-05, 9.377799999999922e-05, 9.393100000000196e-05, 9.466699999999967e-05, 9.39590000000011e-05, 9.405600000000208e-05, 9.462499999999749e-05, 9.377699999999975e-05, 9.412500000000046e-05, 9.469399999999933e-05, 9.375000000000008e-05, 9.388899999999978e-05, 9.406899999999871e-05, 9.463900000000053e-05, 9.411099999999742e-05, 9.466699999999967e-05, 9.376399999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.704" endtime="20201117 14:43:09.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.699" endtime="20201117 14:43:09.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.709" endtime="20201117 14:43:09.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.712" endtime="20201117 14:43:09.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.710" endtime="20201117 14:43:09.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.707" endtime="20201117 14:43:09.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.341" endtime="20201117 14:43:09.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.945" endtime="20201117 14:43:09.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.944" endtime="20201117 14:43:09.733"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.735" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.743" endtime="20201117 14:43:09.762"></status>
</kw>
<msg timestamp="20201117 14:43:09.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.742" endtime="20201117 14:43:09.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.763" endtime="20201117 14:43:09.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.766" endtime="20201117 14:43:09.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.739" endtime="20201117 14:43:09.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.737" endtime="20201117 14:43:09.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.775" endtime="20201117 14:43:10.067"></status>
</kw>
<msg timestamp="20201117 14:43:10.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024248931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.774" endtime="20201117 14:43:10.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024248931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.072" endtime="20201117 14:43:10.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.080" endtime="20201117 14:43:10.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.771" endtime="20201117 14:43:10.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.769" endtime="20201117 14:43:10.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.086" level="INFO">${RESULT} = [{'time': 0.024344486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555499999999717e-05, 'source_diff': 9.555499999999717e-05}, {'time': 0.024442472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.083" endtime="20201117 14:43:10.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.100" level="INFO">${ACCURACY} = {'source_diff': [9.555499999999717e-05, 9.574999999999861e-05, 9.561099999999892e-05, 9.568000000000076e-05, 9.480499999999989e-05, 9.494399999999958e-05, 9.481899999999946e-05, 9.568100000000024e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:10.087" endtime="20201117 14:43:10.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.105" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.104" endtime="20201117 14:43:10.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.107" level="INFO">VALUE: [9.555499999999717e-05, 9.574999999999861e-05, 9.561099999999892e-05, 9.568000000000076e-05, 9.480499999999989e-05, 9.494399999999958e-05, 9.481899999999946e-05, 9.568100000000024e-05, 9.556900000000021e-05, 9.566700000000067e-05, 9.505599999999961e-05, 9.566700000000067e-05, 9.512499999999799e-05, 9.507000000000265e-05, 9.558399999999925e-05, 9.574999999999861e-05, 9.501300000000143e-05, 9.480499999999989e-05, 9.561099999999892e-05, 9.5027000000001e-05, 9.497199999999872e-05, 9.490300000000035e-05, 9.491699999999992e-05, 9.505599999999961e-05, 9.495799999999915e-05, 9.573599999999904e-05, 9.488899999999731e-05, 9.486100000000164e-05, 9.495799999999915e-05, 9.500000000000133e-05, 9.479199999999979e-05, 9.480599999999936e-05, 9.580500000000089e-05, 9.494499999999906e-05, 9.497199999999872e-05, 9.568000000000076e-05, 9.505599999999961e-05, 9.50140000000009e-05, 9.493000000000001e-05, 9.555500000000064e-05, 9.48469999999986e-05, 9.575000000000208e-05, 9.558299999999978e-05, 9.477800000000022e-05, 9.513900000000103e-05, 9.559699999999935e-05, 9.568100000000024e-05, 9.511100000000189e-05, 9.508299999999928e-05, 9.50140000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.106" endtime="20201117 14:43:10.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.101" endtime="20201117 14:43:10.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.110" endtime="20201117 14:43:10.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.113" endtime="20201117 14:43:10.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.112" endtime="20201117 14:43:10.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.108" endtime="20201117 14:43:10.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.736" endtime="20201117 14:43:10.134"></status>
</kw>
<msg timestamp="20201117 14:43:10.134" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.143" endtime="20201117 14:43:10.161"></status>
</kw>
<msg timestamp="20201117 14:43:10.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.141" endtime="20201117 14:43:10.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.163" endtime="20201117 14:43:10.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.166" endtime="20201117 14:43:10.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.138" endtime="20201117 14:43:10.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.136" endtime="20201117 14:43:10.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.176" endtime="20201117 14:43:10.461"></status>
</kw>
<msg timestamp="20201117 14:43:10.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.174" endtime="20201117 14:43:10.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.465" endtime="20201117 14:43:10.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.473" endtime="20201117 14:43:10.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.172" endtime="20201117 14:43:10.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.170" endtime="20201117 14:43:10.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.480" level="INFO">${RESULT} = [{'time': 0.021758028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.520899999999888e-05, 'source_diff': 9.520899999999888e-05}, {'time': 0.021855042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.477" endtime="20201117 14:43:10.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.493" level="INFO">${ACCURACY} = {'source_diff': [9.520899999999888e-05, 9.494500000000253e-05, 9.577700000000175e-05, 9.573599999999904e-05, 9.501299999999796e-05, 9.494499999999906e-05, 9.569400000000033e-05, 9.512500000000146e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:10.481" endtime="20201117 14:43:10.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.498" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.497" endtime="20201117 14:43:10.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.500" level="INFO">VALUE: [9.520899999999888e-05, 9.494500000000253e-05, 9.577700000000175e-05, 9.573599999999904e-05, 9.501299999999796e-05, 9.494499999999906e-05, 9.569400000000033e-05, 9.512500000000146e-05, 9.480499999999989e-05, 9.506899999999971e-05, 9.483299999999903e-05, 9.490300000000035e-05, 9.502800000000047e-05, 9.556900000000021e-05, 9.566700000000067e-05, 9.570899999999938e-05, 9.477800000000022e-05, 9.49859999999983e-05, 9.573599999999904e-05, 9.488900000000078e-05, 9.508399999999875e-05, 9.487499999999774e-05, 9.501399999999743e-05, 9.486100000000164e-05, 9.511100000000189e-05, 9.484700000000207e-05, 9.495800000000262e-05, 9.491600000000044e-05, 9.562499999999849e-05, 9.513900000000103e-05, 9.568000000000076e-05, 9.495800000000262e-05, 9.559699999999935e-05, 9.49590000000021e-05, 9.573700000000199e-05, 9.570899999999938e-05, 9.48469999999986e-05, 9.499999999999786e-05, 9.491699999999992e-05, 9.573699999999852e-05, 9.470899999999838e-05, 9.49019999999974e-05, 9.555500000000064e-05, 9.559699999999935e-05, 9.488900000000078e-05, 9.490300000000035e-05, 9.491699999999992e-05, 9.481899999999946e-05, 9.558299999999978e-05, 9.480599999999936e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.499" endtime="20201117 14:43:10.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.494" endtime="20201117 14:43:10.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.503" endtime="20201117 14:43:10.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.507" endtime="20201117 14:43:10.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.505" endtime="20201117 14:43:10.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.502" endtime="20201117 14:43:10.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.135" endtime="20201117 14:43:10.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.734" endtime="20201117 14:43:10.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.733" endtime="20201117 14:43:10.528"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.530" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.560" endtime="20201117 14:43:10.580"></status>
</kw>
<msg timestamp="20201117 14:43:10.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.559" endtime="20201117 14:43:10.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.581" endtime="20201117 14:43:10.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.584" endtime="20201117 14:43:10.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.534" endtime="20201117 14:43:10.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.532" endtime="20201117 14:43:10.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.593" endtime="20201117 14:43:10.878"></status>
</kw>
<msg timestamp="20201117 14:43:10.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047000625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047097306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.591" endtime="20201117 14:43:10.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047000625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047097306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.882" endtime="20201117 14:43:10.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.891" endtime="20201117 14:43:10.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.589" endtime="20201117 14:43:10.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.587" endtime="20201117 14:43:10.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.897" level="INFO">${RESULT} = [{'time': 0.047097306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.668100000000124e-05, 'source_diff': 9.668100000000124e-05}, {'time': 0.047195306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.894" endtime="20201117 14:43:10.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.912" level="INFO">${ACCURACY} = {'source_diff': [9.668100000000124e-05, 9.586200000000211e-05, 9.66530000000021e-05, 9.577700000000522e-05, 9.580500000000436e-05, 9.674999999999961e-05, 9.63609999999962e-05, 9.659699999999688e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:43:10.898" endtime="20201117 14:43:10.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.916" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.915" endtime="20201117 14:43:10.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.919" level="INFO">VALUE: [9.668100000000124e-05, 9.586200000000211e-05, 9.66530000000021e-05, 9.577700000000522e-05, 9.580500000000436e-05, 9.674999999999961e-05, 9.63609999999962e-05, 9.659699999999688e-05, 9.59859999999993e-05, 9.6027999999998e-05, 9.595800000000015e-05, 9.569400000000033e-05, 9.587500000000221e-05, 9.611099999999595e-05, 9.590299999999441e-05, 9.597199999999972e-05, 9.581999999999646e-05, 9.58059999999969e-05, 9.594400000000058e-05, 9.586100000000264e-05, 9.665200000000262e-05, 9.655499999999817e-05, 9.669400000000133e-05, 9.591600000000144e-05, 9.584700000000307e-05, 9.606999999999671e-05, 9.668100000000124e-05, 9.597199999999972e-05, 9.640299999999491e-05, 9.587499999999527e-05, 9.58609999999957e-05, 9.59859999999993e-05, 9.662500000000296e-05, 9.612500000000246e-05, 9.580600000000383e-05, 9.66809999999943e-05, 9.587499999999527e-05, 9.595800000000015e-05, 9.581899999999699e-05, 9.574999999999861e-05, 9.590300000000135e-05, 9.67080000000009e-05, 9.594400000000058e-05, 9.593000000000101e-05, 9.601399999999843e-05, 9.665299999999516e-05, 9.668100000000124e-05, 9.668100000000124e-05, 9.611100000000289e-05, 9.602800000000494e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.917" endtime="20201117 14:43:10.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.913" endtime="20201117 14:43:10.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.922" endtime="20201117 14:43:10.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.925" endtime="20201117 14:43:10.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.924" endtime="20201117 14:43:10.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.920" endtime="20201117 14:43:10.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.531" endtime="20201117 14:43:10.946"></status>
</kw>
<msg timestamp="20201117 14:43:10.947" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.955" endtime="20201117 14:43:10.974"></status>
</kw>
<msg timestamp="20201117 14:43:10.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.953" endtime="20201117 14:43:10.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.975" endtime="20201117 14:43:10.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.978" endtime="20201117 14:43:10.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.951" endtime="20201117 14:43:10.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.949" endtime="20201117 14:43:10.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.988" endtime="20201117 14:43:11.283"></status>
</kw>
<msg timestamp="20201117 14:43:11.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.986" endtime="20201117 14:43:11.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.293" endtime="20201117 14:43:11.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.311" endtime="20201117 14:43:11.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.983" endtime="20201117 14:43:11.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.982" endtime="20201117 14:43:11.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.322" level="INFO">${RESULT} = [{'time': 0.022075597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.613899999999856e-05, 'source_diff': 9.613899999999856e-05}, {'time': 0.022173653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.317" endtime="20201117 14:43:11.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.336" level="INFO">${ACCURACY} = {'source_diff': [9.613899999999856e-05, 9.611100000000289e-05, 9.588900000000178e-05, 9.669399999999786e-05, 9.594400000000058e-05, 9.604200000000104e-05, 9.593100000000049e-05, 9.593100000000049e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:11.323" endtime="20201117 14:43:11.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.340" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.339" endtime="20201117 14:43:11.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.343" level="INFO">VALUE: [9.613899999999856e-05, 9.611100000000289e-05, 9.588900000000178e-05, 9.669399999999786e-05, 9.594400000000058e-05, 9.604200000000104e-05, 9.593100000000049e-05, 9.593100000000049e-05, 9.586100000000264e-05, 9.662499999999949e-05, 9.676400000000265e-05, 9.608399999999975e-05, 9.574999999999861e-05, 9.665200000000262e-05, 9.652699999999903e-05, 9.58469999999996e-05, 9.663900000000253e-05, 9.588899999999831e-05, 9.670900000000038e-05, 9.658299999999731e-05, 9.668099999999777e-05, 9.611099999999942e-05, 9.607000000000018e-05, 9.654199999999807e-05, 9.576400000000165e-05, 9.591700000000092e-05, 9.581999999999993e-05, 9.599999999999886e-05, 9.59859999999993e-05, 9.593100000000049e-05, 9.584800000000254e-05, 9.604100000000157e-05, 9.594399999999711e-05, 9.673600000000004e-05, 9.6721999999997e-05, 9.613900000000203e-05, 9.606900000000071e-05, 9.661099999999992e-05, 9.584700000000307e-05, 9.599999999999886e-05, 9.591700000000092e-05, 9.665299999999863e-05, 9.668099999999777e-05, 9.6721999999997e-05, 9.668100000000124e-05, 9.670899999999691e-05, 9.66669999999982e-05, 9.661200000000286e-05, 9.588799999999884e-05, 9.612499999999899e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.341" endtime="20201117 14:43:11.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.337" endtime="20201117 14:43:11.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.346" endtime="20201117 14:43:11.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.350" endtime="20201117 14:43:11.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.348" endtime="20201117 14:43:11.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.344" endtime="20201117 14:43:11.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.947" endtime="20201117 14:43:11.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.529" endtime="20201117 14:43:11.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.528" endtime="20201117 14:43:11.371"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.373" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.381" endtime="20201117 14:43:11.400"></status>
</kw>
<msg timestamp="20201117 14:43:11.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.380" endtime="20201117 14:43:11.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.402" endtime="20201117 14:43:11.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.404" endtime="20201117 14:43:11.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.377" endtime="20201117 14:43:11.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.375" endtime="20201117 14:43:11.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.413" endtime="20201117 14:43:11.698"></status>
</kw>
<msg timestamp="20201117 14:43:11.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023943444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024041069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.412" endtime="20201117 14:43:11.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023943444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024041069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.703" endtime="20201117 14:43:11.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.711" endtime="20201117 14:43:11.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.409" endtime="20201117 14:43:11.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.408" endtime="20201117 14:43:11.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.717" level="INFO">${RESULT} = [{'time': 0.024041069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.762500000000049e-05, 'source_diff': 9.762500000000049e-05}, {'time': 0.024140014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.714" endtime="20201117 14:43:11.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.731" level="INFO">${ACCURACY} = {'source_diff': [9.762500000000049e-05, 9.709700000000085e-05, 9.711100000000042e-05, 9.779199999999932e-05, 9.709800000000032e-05, 9.765200000000016e-05, 9.711100000000042e-05, 9.756899999999874e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:11.718" endtime="20201117 14:43:11.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.735" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.734" endtime="20201117 14:43:11.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.738" level="INFO">VALUE: [9.762500000000049e-05, 9.709700000000085e-05, 9.711100000000042e-05, 9.779199999999932e-05, 9.709800000000032e-05, 9.765200000000016e-05, 9.711100000000042e-05, 9.756899999999874e-05, 9.702699999999953e-05, 9.709700000000085e-05, 9.699999999999986e-05, 9.7027999999999e-05, 9.701399999999943e-05, 9.68059999999979e-05, 9.698599999999682e-05, 9.688899999999931e-05, 9.76669999999992e-05, 9.757000000000168e-05, 9.67080000000009e-05, 9.695799999999768e-05, 9.755600000000211e-05, 9.758400000000125e-05, 9.684800000000007e-05, 9.684800000000007e-05, 9.7027000000003e-05, 9.697200000000072e-05, 9.711099999999695e-05, 9.752700000000003e-05, 9.69730000000002e-05, 9.76660000000032e-05, 9.755499999999917e-05, 9.763900000000006e-05, 9.686100000000017e-05, 9.694500000000106e-05, 9.686100000000017e-05, 9.690299999999888e-05, 9.697200000000072e-05, 9.691699999999845e-05, 9.687499999999974e-05, 9.71660000000027e-05, 9.756899999999874e-05, 9.772300000000095e-05, 9.711100000000042e-05, 9.673600000000004e-05, 9.766599999999973e-05, 9.686100000000017e-05, 9.708300000000128e-05, 9.7721999999998e-05, 9.683300000000103e-05, 9.688899999999931e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.736" endtime="20201117 14:43:11.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.732" endtime="20201117 14:43:11.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.741" endtime="20201117 14:43:11.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.745" endtime="20201117 14:43:11.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.743" endtime="20201117 14:43:11.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.740" endtime="20201117 14:43:11.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.374" endtime="20201117 14:43:11.765"></status>
</kw>
<msg timestamp="20201117 14:43:11.765" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.774" endtime="20201117 14:43:11.793"></status>
</kw>
<msg timestamp="20201117 14:43:11.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.772" endtime="20201117 14:43:11.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.794" endtime="20201117 14:43:11.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.797" endtime="20201117 14:43:11.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.770" endtime="20201117 14:43:11.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.767" endtime="20201117 14:43:11.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.806" endtime="20201117 14:43:12.093"></status>
</kw>
<msg timestamp="20201117 14:43:12.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.805" endtime="20201117 14:43:12.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.097" endtime="20201117 14:43:12.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.105" endtime="20201117 14:43:12.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.802" endtime="20201117 14:43:12.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.801" endtime="20201117 14:43:12.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.112" level="INFO">${RESULT} = [{'time': 0.021638958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.769399999999887e-05, 'source_diff': 9.769399999999887e-05}, {'time': 0.021738958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.108" endtime="20201117 14:43:12.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.125" level="INFO">${ACCURACY} = {'source_diff': [9.769399999999887e-05, 9.775000000000061e-05, 9.706900000000171e-05, 9.737500000000024e-05, 9.688899999999931e-05, 9.777799999999975e-05, 9.76669999999992e-05, 9.673600000000004e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:12.113" endtime="20201117 14:43:12.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.130" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.129" endtime="20201117 14:43:12.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.132" level="INFO">VALUE: [9.769399999999887e-05, 9.775000000000061e-05, 9.706900000000171e-05, 9.737500000000024e-05, 9.688899999999931e-05, 9.777799999999975e-05, 9.76669999999992e-05, 9.673600000000004e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.765299999999963e-05, 9.705600000000161e-05, 9.712499999999999e-05, 9.761199999999692e-05, 9.682000000000093e-05, 9.712499999999999e-05, 9.706900000000171e-05, 9.694400000000158e-05, 9.683300000000103e-05, 9.7027999999999e-05, 9.705499999999867e-05, 9.763900000000006e-05, 9.713899999999956e-05, 9.709699999999738e-05, 9.763900000000006e-05, 9.688899999999931e-05, 9.763900000000006e-05, 9.776300000000071e-05, 9.694500000000106e-05, 9.705600000000161e-05, 9.69860000000003e-05, 9.774999999999714e-05, 9.759700000000135e-05, 9.77080000000019e-05, 9.759700000000135e-05, 9.776400000000018e-05, 9.769400000000233e-05, 9.676399999999918e-05, 9.765299999999963e-05, 9.763900000000006e-05, 9.769500000000181e-05, 9.694399999999812e-05, 9.774999999999714e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.762500000000049e-05, 9.68340000000005e-05, 9.770899999999791e-05, 9.762500000000049e-05, 9.69860000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.131" endtime="20201117 14:43:12.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.126" endtime="20201117 14:43:12.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.135" endtime="20201117 14:43:12.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.139" endtime="20201117 14:43:12.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.137" endtime="20201117 14:43:12.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.134" endtime="20201117 14:43:12.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.766" endtime="20201117 14:43:12.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.372" endtime="20201117 14:43:12.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.371" endtime="20201117 14:43:12.160"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.162" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.170" endtime="20201117 14:43:12.190"></status>
</kw>
<msg timestamp="20201117 14:43:12.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.169" endtime="20201117 14:43:12.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.192" endtime="20201117 14:43:12.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.194" endtime="20201117 14:43:12.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.166" endtime="20201117 14:43:12.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.164" endtime="20201117 14:43:12.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.203" endtime="20201117 14:43:12.490"></status>
</kw>
<msg timestamp="20201117 14:43:12.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.202" endtime="20201117 14:43:12.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024870528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.494" endtime="20201117 14:43:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.502" endtime="20201117 14:43:12.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.199" endtime="20201117 14:43:12.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.197" endtime="20201117 14:43:12.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.509" level="INFO">${RESULT} = [{'time': 0.024968514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.79860000000013e-05, 'source_diff': 9.79860000000013e-05}, {'time': 0.025068514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:12.505" endtime="20201117 14:43:12.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.523" level="INFO">${ACCURACY} = {'source_diff': [9.79860000000013e-05, 9.793099999999902e-05, 9.800000000000086e-05, 9.838899999999734e-05, 9.865300000000063e-05, 9.805600000000261e-05, 9.791699999999945e-05, 9.812500000000099e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:12.510" endtime="20201117 14:43:12.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.528" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.527" endtime="20201117 14:43:12.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.531" level="INFO">VALUE: [9.79860000000013e-05, 9.793099999999902e-05, 9.800000000000086e-05, 9.838899999999734e-05, 9.865300000000063e-05, 9.805600000000261e-05, 9.791699999999945e-05, 9.812500000000099e-05, 9.8028e-05, 9.856899999999974e-05, 9.856899999999974e-05, 9.797199999999825e-05, 9.8721999999999e-05, 9.780500000000289e-05, 9.79860000000013e-05, 9.859700000000235e-05, 9.776400000000018e-05, 9.805499999999967e-05, 9.784699999999813e-05, 9.863899999999759e-05, 9.793100000000249e-05, 9.809800000000132e-05, 9.801400000000043e-05, 9.862499999999802e-05, 9.873700000000152e-05, 9.794399999999912e-05, 9.788799999999737e-05, 9.776400000000018e-05, 9.815300000000013e-05, 9.809699999999838e-05, 9.862500000000149e-05, 9.78609999999977e-05, 9.862499999999802e-05, 9.811100000000142e-05, 9.811100000000142e-05, 9.777799999999975e-05, 9.863900000000106e-05, 9.777799999999975e-05, 9.787499999999727e-05, 9.787500000000074e-05, 9.793099999999902e-05, 9.856999999999921e-05, 9.790299999999988e-05, 9.861100000000192e-05, 9.859699999999888e-05, 9.873599999999857e-05, 9.777799999999975e-05, 9.790299999999988e-05, 9.801399999999696e-05, 9.805599999999914e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.529" endtime="20201117 14:43:12.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.524" endtime="20201117 14:43:12.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.534" endtime="20201117 14:43:12.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.537" endtime="20201117 14:43:12.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.536" endtime="20201117 14:43:12.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.532" endtime="20201117 14:43:12.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.163" endtime="20201117 14:43:12.558"></status>
</kw>
<msg timestamp="20201117 14:43:12.558" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.566" endtime="20201117 14:43:12.585"></status>
</kw>
<msg timestamp="20201117 14:43:12.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.565" endtime="20201117 14:43:12.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.586" endtime="20201117 14:43:12.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.589" endtime="20201117 14:43:12.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.562" endtime="20201117 14:43:12.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.560" endtime="20201117 14:43:12.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.599" endtime="20201117 14:43:12.884"></status>
</kw>
<msg timestamp="20201117 14:43:12.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.597" endtime="20201117 14:43:12.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021493778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.888" endtime="20201117 14:43:12.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.896" endtime="20201117 14:43:12.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.595" endtime="20201117 14:43:12.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.593" endtime="20201117 14:43:12.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.903" level="INFO">${RESULT} = [{'time': 0.021592264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.848599999999832e-05, 'source_diff': 9.848599999999832e-05}, {'time': 0.021693347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.900" endtime="20201117 14:43:12.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.916" level="INFO">${ACCURACY} = {'source_diff': [9.848599999999832e-05, 9.881899999999999e-05, 9.787500000000074e-05, 9.801399999999696e-05, 9.804200000000304e-05, 9.808400000000175e-05, 9.781999999999846e-05, 9.79869999999973e-05, ...</msg>
<status status="PASS" starttime="20201117 14:43:12.904" endtime="20201117 14:43:12.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.921" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.920" endtime="20201117 14:43:12.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.924" level="INFO">VALUE: [9.848599999999832e-05, 9.881899999999999e-05, 9.787500000000074e-05, 9.801399999999696e-05, 9.804200000000304e-05, 9.808400000000175e-05, 9.781999999999846e-05, 9.79869999999973e-05, 9.784699999999813e-05, 9.804199999999957e-05, 9.812500000000099e-05, 9.875000000000161e-05, 9.876400000000118e-05, 9.861100000000192e-05, 9.86670000000002e-05, 9.865300000000063e-05, 9.873600000000204e-05, 9.79860000000013e-05, 9.862500000000149e-05, 9.873599999999857e-05, 9.79860000000013e-05, 9.86670000000002e-05, 9.865300000000063e-05, 9.8028e-05, 9.773699999999705e-05, 9.809700000000185e-05, 9.79860000000013e-05, 9.801300000000096e-05, 9.858299999999931e-05, 9.86800000000003e-05, 9.80410000000001e-05, 9.865300000000063e-05, 9.784699999999813e-05, 9.781899999999899e-05, 9.804199999999957e-05, 9.859699999999888e-05, 9.801400000000043e-05, 9.858399999999878e-05, 9.784699999999813e-05, 9.872299999999848e-05, 9.794399999999912e-05, 9.873699999999805e-05, 9.874999999999814e-05, 9.805499999999967e-05, 9.777700000000028e-05, 9.779099999999985e-05, 9.863900000000106e-05, 9.794399999999912e-05, 9.79999999999974e-05, 9.863900000000106e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.922" endtime="20201117 14:43:12.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.918" endtime="20201117 14:43:12.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.927" endtime="20201117 14:43:12.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.930" endtime="20201117 14:43:12.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.929" endtime="20201117 14:43:12.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.925" endtime="20201117 14:43:12.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.559" endtime="20201117 14:43:12.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.161" endtime="20201117 14:43:12.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.160" endtime="20201117 14:43:12.951"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.953" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.961" endtime="20201117 14:43:12.980"></status>
</kw>
<msg timestamp="20201117 14:43:12.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.960" endtime="20201117 14:43:12.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.982" endtime="20201117 14:43:12.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.984" endtime="20201117 14:43:12.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.957" endtime="20201117 14:43:12.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.955" endtime="20201117 14:43:12.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.993" endtime="20201117 14:43:13.278"></status>
</kw>
<msg timestamp="20201117 14:43:13.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023882889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023982125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.992" endtime="20201117 14:43:13.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023882889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023982125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.282" endtime="20201117 14:43:13.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.290" endtime="20201117 14:43:13.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.989" endtime="20201117 14:43:13.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.987" endtime="20201117 14:43:13.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.297" level="INFO">${RESULT} = [{'time': 0.023982125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.923599999999907e-05, 'source_diff': 9.923599999999907e-05}, {'time': 0.024083139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:13.294" endtime="20201117 14:43:13.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.311" level="INFO">${ACCURACY} = {'source_diff': [9.923599999999907e-05, 9.906999999999971e-05, 9.895899999999916e-05, 9.891700000000045e-05, 9.894499999999959e-05, 9.893100000000002e-05, 9.963800000000259e-05, 9.959799999999935e-05,...</msg>
<status status="PASS" starttime="20201117 14:43:13.298" endtime="20201117 14:43:13.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.315" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.314" endtime="20201117 14:43:13.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.318" level="INFO">VALUE: [9.923599999999907e-05, 9.906999999999971e-05, 9.895899999999916e-05, 9.891700000000045e-05, 9.894499999999959e-05, 9.893100000000002e-05, 9.963800000000259e-05, 9.959799999999935e-05, 9.888900000000131e-05, 9.962500000000249e-05, 9.911100000000242e-05, 9.962499999999902e-05, 9.894400000000012e-05, 9.879100000000085e-05, 9.905600000000014e-05, 9.898599999999882e-05, 9.965300000000163e-05, 9.89860000000023e-05, 9.970800000000044e-05, 9.881999999999946e-05, 9.909699999999938e-05, 9.890300000000088e-05, 9.881999999999946e-05, 9.888900000000131e-05, 9.96670000000012e-05, 9.973599999999957e-05, 9.969500000000034e-05, 9.876300000000171e-05, 9.90410000000011e-05, 9.973599999999957e-05, 9.892999999999708e-05, 9.947199999999976e-05, 9.890300000000088e-05, 9.900000000000186e-05, 9.970800000000044e-05, 9.966699999999773e-05, 9.96670000000012e-05, 9.893100000000002e-05, 9.9722e-05, 9.969500000000034e-05, 9.959799999999935e-05, 9.962500000000249e-05, 9.897299999999873e-05, 9.879099999999738e-05, 9.905500000000067e-05, 9.881899999999999e-05, 9.893000000000055e-05, 9.974999999999914e-05, 9.95549999999977e-05, 9.961099999999945e-05]</msg>
<status status="PASS" starttime="20201117 14:43:13.316" endtime="20201117 14:43:13.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.312" endtime="20201117 14:43:13.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.321" endtime="20201117 14:43:13.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.324" endtime="20201117 14:43:13.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.323" endtime="20201117 14:43:13.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.319" endtime="20201117 14:43:13.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.954" endtime="20201117 14:43:13.345"></status>
</kw>
<msg timestamp="20201117 14:43:13.345" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.353" endtime="20201117 14:43:13.372"></status>
</kw>
<msg timestamp="20201117 14:43:13.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.352" endtime="20201117 14:43:13.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.374" endtime="20201117 14:43:13.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.376" endtime="20201117 14:43:13.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.349" endtime="20201117 14:43:13.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.347" endtime="20201117 14:43:13.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.386" endtime="20201117 14:43:13.672"></status>
</kw>
<msg timestamp="20201117 14:43:13.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.384" endtime="20201117 14:43:13.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.676" endtime="20201117 14:43:13.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.685" endtime="20201117 14:43:13.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.382" endtime="20201117 14:43:13.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.380" endtime="20201117 14:43:13.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.692" level="INFO">${RESULT} = [{'time': 0.021687264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.973599999999957e-05, 'source_diff': 9.973599999999957e-05}, {'time': 0.021789278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:13.688" endtime="20201117 14:43:13.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.705" level="INFO">${ACCURACY} = {'source_diff': [9.973599999999957e-05, 9.955599999999717e-05, 9.88059999999999e-05, 9.891699999999698e-05, 9.880500000000042e-05, 9.893100000000002e-05, 9.89869999999983e-05, 9.898599999999882e-05, 9...</msg>
<status status="PASS" starttime="20201117 14:43:13.693" endtime="20201117 14:43:13.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.710" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.709" endtime="20201117 14:43:13.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.712" level="INFO">VALUE: [9.973599999999957e-05, 9.955599999999717e-05, 9.88059999999999e-05, 9.891699999999698e-05, 9.880500000000042e-05, 9.893100000000002e-05, 9.89869999999983e-05, 9.898599999999882e-05, 9.963800000000259e-05, 9.895800000000315e-05, 9.965199999999869e-05, 9.962499999999902e-05, 9.895799999999969e-05, 9.906900000000024e-05, 9.895799999999969e-05, 9.895799999999969e-05, 9.972300000000295e-05, 9.909699999999938e-05, 9.976399999999871e-05, 9.88059999999999e-05, 9.900000000000186e-05, 9.915200000000166e-05, 9.887499999999827e-05, 9.973599999999957e-05, 9.976399999999871e-05, 9.959699999999988e-05, 9.900000000000186e-05, 9.958300000000031e-05, 9.974999999999914e-05, 9.897199999999926e-05, 9.969400000000087e-05, 9.956900000000074e-05, 9.96670000000012e-05, 9.893100000000002e-05, 9.891700000000045e-05, 9.887500000000174e-05, 9.965299999999816e-05, 9.897299999999873e-05, 9.904099999999763e-05, 9.891700000000045e-05, 9.913799999999862e-05, 9.970800000000044e-05, 9.886100000000217e-05, 9.965199999999869e-05, 9.880500000000042e-05, 9.898599999999882e-05, 9.890300000000088e-05, 9.905500000000067e-05, 9.979099999999838e-05, 9.872200000000247e-05]</msg>
<status status="PASS" starttime="20201117 14:43:13.711" endtime="20201117 14:43:13.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.706" endtime="20201117 14:43:13.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.715" endtime="20201117 14:43:13.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.719" endtime="20201117 14:43:13.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.717" endtime="20201117 14:43:13.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.714" endtime="20201117 14:43:13.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.346" endtime="20201117 14:43:13.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.952" endtime="20201117 14:43:13.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.951" endtime="20201117 14:43:13.740"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.742" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.750" endtime="20201117 14:43:13.770"></status>
</kw>
<msg timestamp="20201117 14:43:13.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.749" endtime="20201117 14:43:13.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.771" endtime="20201117 14:43:13.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.774" endtime="20201117 14:43:13.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.746" endtime="20201117 14:43:13.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.744" endtime="20201117 14:43:13.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.783" endtime="20201117 14:43:14.068"></status>
</kw>
<msg timestamp="20201117 14:43:14.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025176819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.782" endtime="20201117 14:43:14.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025176819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025276806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.072" endtime="20201117 14:43:14.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.080" endtime="20201117 14:43:14.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.779" endtime="20201117 14:43:14.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.777" endtime="20201117 14:43:14.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.087" level="INFO">${RESULT} = [{'time': 0.025276806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.99869999999993e-05, 'source_diff': 9.99869999999993e-05}, {'time': 0.025378792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:14.083" endtime="20201117 14:43:14.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.101" level="INFO">${ACCURACY} = {'source_diff': [9.99869999999993e-05, 9.983400000000003e-05, 9.994500000000059e-05, 0.0001006800000000023, 0.00010009799999999985, 0.00010063800000000012, 0.00010062500000000002, 0.000100526999999999...</msg>
<status status="PASS" starttime="20201117 14:43:14.088" endtime="20201117 14:43:14.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.106" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.105" endtime="20201117 14:43:14.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.108" level="INFO">VALUE: [9.99869999999993e-05, 9.983400000000003e-05, 9.994500000000059e-05, 0.0001006800000000023, 0.00010009799999999985, 0.00010063800000000012, 0.00010062500000000002, 0.00010052699999999956, 0.00010011099999999995, 0.00010012499999999952, 0.00010072199999999754, 9.99999999999994e-05, 9.983300000000056e-05, 0.00010069400000000187, 0.00010012500000000299, 9.99020000000024e-05, 0.000100722000000001, 0.00010057000000000121, 0.00010007000000000071, 0.00010073700000000005, 0.00010007000000000071, 0.0001005549999999987, 0.00010005500000000167, 0.0001006939999999984, 9.977700000000228e-05, 0.00010073600000000058, 0.00010009700000000038, 0.00010063899999999959, 0.00010059699999999741, 0.00010069400000000187, 9.998599999999983e-05, 9.993100000000102e-05, 0.00010069500000000134, 0.0001000419999999981, 0.00010068100000000177, 9.998599999999983e-05, 0.00010009799999999985, 0.00010001399999999896, 9.998599999999983e-05, 0.00010058299999999784, 9.983300000000056e-05, 9.981900000000099e-05, 9.984700000000013e-05, 0.00010008300000000081, 9.997200000000026e-05, 0.00010002799999999853, 0.00010006900000000124, 0.00010063899999999959, 9.970800000000044e-05, 0.00010058400000000078]</msg>
<status status="PASS" starttime="20201117 14:43:14.107" endtime="20201117 14:43:14.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.102" endtime="20201117 14:43:14.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.111" endtime="20201117 14:43:14.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.114" endtime="20201117 14:43:14.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.113" endtime="20201117 14:43:14.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.110" endtime="20201117 14:43:14.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.743" endtime="20201117 14:43:14.135"></status>
</kw>
<msg timestamp="20201117 14:43:14.135" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.144" endtime="20201117 14:43:14.163"></status>
</kw>
<msg timestamp="20201117 14:43:14.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.142" endtime="20201117 14:43:14.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.164" endtime="20201117 14:43:14.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.167" endtime="20201117 14:43:14.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.139" endtime="20201117 14:43:14.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.137" endtime="20201117 14:43:14.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.177" endtime="20201117 14:43:14.461"></status>
</kw>
<msg timestamp="20201117 14:43:14.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.175" endtime="20201117 14:43:14.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.465" endtime="20201117 14:43:14.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.473" endtime="20201117 14:43:14.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.173" endtime="20201117 14:43:14.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.171" endtime="20201117 14:43:14.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.480" level="INFO">${RESULT} = [{'time': 0.021797542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98060000000009e-05, 'source_diff': 9.98060000000009e-05}, {'time': 0.021899542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:14.477" endtime="20201117 14:43:14.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.493" level="INFO">${ACCURACY} = {'source_diff': [9.98060000000009e-05, 9.990300000000188e-05, 9.987499999999927e-05, 9.982000000000046e-05, 9.983300000000056e-05, 0.00010009699999999691, 0.00010009700000000038, 9.993000000000155e-05...</msg>
<status status="PASS" starttime="20201117 14:43:14.481" endtime="20201117 14:43:14.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.498" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.497" endtime="20201117 14:43:14.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.500" level="INFO">VALUE: [9.98060000000009e-05, 9.990300000000188e-05, 9.987499999999927e-05, 9.982000000000046e-05, 9.983300000000056e-05, 0.00010009699999999691, 0.00010009700000000038, 9.993000000000155e-05, 9.983299999999709e-05, 0.00010073600000000058, 0.00010001399999999896, 0.00010055600000000164, 0.00010005599999999767, 0.00010062500000000002, 0.00010056999999999774, 0.00010061099999999698, 9.992999999999808e-05, 9.990300000000188e-05, 0.00010012500000000299, 9.99159999999985e-05, 0.00010072199999999754, 9.983300000000056e-05, 0.00010058299999999784, 9.979099999999838e-05, 0.0001006939999999984, 9.979200000000132e-05, 0.00010001399999999896, 0.00010000000000000286, 0.00010058300000000131, 0.00010061100000000045, 0.00010062500000000002, 0.00010011099999999995, 9.979099999999838e-05, 9.995900000000016e-05, 0.00010068100000000177, 0.00010062500000000002, 0.00010066699999999873, 9.983300000000056e-05, 0.00010076399999999971, 0.00010012499999999952, 9.995800000000069e-05, 0.00010056899999999827, 0.00010009700000000038, 0.00010056899999999827, 0.00010002799999999853, 9.984700000000013e-05, 0.00010063800000000012, 0.00010069500000000134, 9.99999999999994e-05, 0.00010004200000000157]</msg>
<status status="PASS" starttime="20201117 14:43:14.499" endtime="20201117 14:43:14.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.494" endtime="20201117 14:43:14.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.503" endtime="20201117 14:43:14.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.507" endtime="20201117 14:43:14.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.505" endtime="20201117 14:43:14.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.502" endtime="20201117 14:43:14.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.136" endtime="20201117 14:43:14.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.741" endtime="20201117 14:43:14.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.740" endtime="20201117 14:43:14.528"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.530" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.539" endtime="20201117 14:43:14.558"></status>
</kw>
<msg timestamp="20201117 14:43:14.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.537" endtime="20201117 14:43:14.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.559" endtime="20201117 14:43:14.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.562" endtime="20201117 14:43:14.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.534" endtime="20201117 14:43:14.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.532" endtime="20201117 14:43:14.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.571" endtime="20201117 14:43:14.856"></status>
</kw>
<msg timestamp="20201117 14:43:14.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024545472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.569" endtime="20201117 14:43:14.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024545472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.860" endtime="20201117 14:43:14.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.868" endtime="20201117 14:43:14.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.567" endtime="20201117 14:43:14.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.565" endtime="20201117 14:43:14.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.875" level="INFO">${RESULT} = [{'time': 0.024647222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010175000000000115, 'source_diff': 0.00010175000000000115}, {'time': 0.024750222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:14.872" endtime="20201117 14:43:14.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.888" level="INFO">${ACCURACY} = {'source_diff': [0.00010175000000000115, 0.00010101399999999996, 0.00010165300000000016, 0.00010156900000000274, 0.00010090299999999941, 0.000101028000000003, 0.00010176300000000124, 0.000101708000000...</msg>
<status status="PASS" starttime="20201117 14:43:14.876" endtime="20201117 14:43:14.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.893" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.892" endtime="20201117 14:43:14.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.895" level="INFO">VALUE: [0.00010175000000000115, 0.00010101399999999996, 0.00010165300000000016, 0.00010156900000000274, 0.00010090299999999941, 0.000101028000000003, 0.00010176300000000124, 0.00010170800000000244, 0.00010172300000000148, 0.00010109800000000085, 0.00010099999999999693, 0.00010105600000000214, 0.00010112500000000052, 0.00010101399999999996, 0.00010165199999999722, 0.00010161100000000145, 0.00010087500000000027, 0.00010161100000000145, 0.00010101399999999996, 0.00010175000000000115, 0.00010159700000000188, 0.00010161100000000145, 0.00010166699999999973, 0.00010156999999999874, 0.00010170899999999844, 0.00010162500000000102, 0.00010093099999999855, 0.00010109800000000085, 0.00010080499999999895, 0.00010170799999999897, 0.00010109699999999791, 0.00010076399999999971, 0.00010097199999999779, 0.00010156899999999927, 0.00010097200000000126, 0.00010095799999999822, 0.00010161099999999798, 0.00010161099999999798, 0.00010094500000000159, 0.0001010419999999991, 0.00010111099999999748, 0.0001010000000000004, 0.00010080599999999842, 0.00010169499999999887, 0.00010165200000000069, 0.00010081900000000199, 0.00010077699999999981, 0.00010095799999999822, 0.00010170799999999897, 0.00010165299999999669]</msg>
<status status="PASS" starttime="20201117 14:43:14.894" endtime="20201117 14:43:14.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.889" endtime="20201117 14:43:14.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.898" endtime="20201117 14:43:14.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.901" endtime="20201117 14:43:14.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.900" endtime="20201117 14:43:14.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.896" endtime="20201117 14:43:14.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.531" endtime="20201117 14:43:14.923"></status>
</kw>
<msg timestamp="20201117 14:43:14.923" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.931" endtime="20201117 14:43:14.950"></status>
</kw>
<msg timestamp="20201117 14:43:14.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.930" endtime="20201117 14:43:14.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.952" endtime="20201117 14:43:14.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.954" endtime="20201117 14:43:14.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.927" endtime="20201117 14:43:14.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.925" endtime="20201117 14:43:14.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.964" endtime="20201117 14:43:15.250"></status>
</kw>
<msg timestamp="20201117 14:43:15.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022113069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.962" endtime="20201117 14:43:15.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022113069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.255" endtime="20201117 14:43:15.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.263" endtime="20201117 14:43:15.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.960" endtime="20201117 14:43:15.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.958" endtime="20201117 14:43:15.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.269" level="INFO">${RESULT} = [{'time': 0.022214681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010161200000000092, 'source_diff': 0.00010161200000000092}, {'time': 0.022317708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:15.266" endtime="20201117 14:43:15.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.282" level="INFO">${ACCURACY} = {'source_diff': [0.00010161200000000092, 0.00010112499999999705, 0.00010138800000000087, 0.00010162500000000102, 0.00010108299999999834, 0.00010176399999999725, 0.00010161100000000145, 0.0001016809999...</msg>
<status status="PASS" starttime="20201117 14:43:15.270" endtime="20201117 14:43:15.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.287" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.286" endtime="20201117 14:43:15.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.289" level="INFO">VALUE: [0.00010161200000000092, 0.00010112499999999705, 0.00010138800000000087, 0.00010162500000000102, 0.00010108299999999834, 0.00010176399999999725, 0.00010161100000000145, 0.0001016809999999993, 0.0001015549999999997, 0.0001010549999999992, 0.00010109699999999791, 0.0001008610000000007, 0.00010082000000000146, 0.00010156999999999874, 0.00010159799999999788, 0.0001016939999999994, 0.00010086200000000017, 0.00010173700000000105, 0.00010119500000000184, 0.00010161100000000145, 0.00010084699999999766, 0.00010088899999999984, 0.00010158300000000231, 0.00010156899999999927, 0.00010159699999999841, 0.00010084699999999766, 0.00010079200000000232, 0.00010097199999999779, 0.00010111099999999748, 0.00010175000000000115, 0.00010107000000000171, 0.00010106999999999824, 0.00010090299999999941, 0.00010165300000000016, 0.00010163900000000059, 0.00010111100000000095, 0.00010156899999999927, 0.0001010419999999991, 0.00010161100000000145, 0.00010101399999999996, 0.00010079200000000232, 0.00010080500000000242, 0.00010177800000000028, 0.00010159700000000188, 0.00010106999999999824, 0.00010108300000000181, 0.00010173600000000158, 0.00010166699999999973, 0.00010111199999999695, 0.00010102799999999953]</msg>
<status status="PASS" starttime="20201117 14:43:15.288" endtime="20201117 14:43:15.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.283" endtime="20201117 14:43:15.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.293" endtime="20201117 14:43:15.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.296" endtime="20201117 14:43:15.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.295" endtime="20201117 14:43:15.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.291" endtime="20201117 14:43:15.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.923" endtime="20201117 14:43:15.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.529" endtime="20201117 14:43:15.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.528" endtime="20201117 14:43:15.317"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.319" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.328" endtime="20201117 14:43:15.348"></status>
</kw>
<msg timestamp="20201117 14:43:15.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.326" endtime="20201117 14:43:15.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.349" endtime="20201117 14:43:15.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.352" endtime="20201117 14:43:15.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.323" endtime="20201117 14:43:15.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.321" endtime="20201117 14:43:15.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.361" endtime="20201117 14:43:15.646"></status>
</kw>
<msg timestamp="20201117 14:43:15.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02498575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025088458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:15.359" endtime="20201117 14:43:15.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02498575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025088458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:15.650" endtime="20201117 14:43:15.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.658" endtime="20201117 14:43:15.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.357" endtime="20201117 14:43:15.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.355" endtime="20201117 14:43:15.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.665" level="INFO">${RESULT} = [{'time': 0.025088458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010270799999999997, 'source_diff': 0.00010270799999999997}, {'time': 0.025193458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:15.661" endtime="20201117 14:43:15.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.679" level="INFO">${ACCURACY} = {'source_diff': [0.00010270799999999997, 0.00010263899999999812, 0.00010193099999999955, 0.0001020000000000014, 0.00010269499999999987, 0.00010195799999999922, 0.00010177800000000028, 0.00010212499999...</msg>
<status status="PASS" starttime="20201117 14:43:15.666" endtime="20201117 14:43:15.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.684" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.683" endtime="20201117 14:43:15.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.686" level="INFO">VALUE: [0.00010270799999999997, 0.00010263899999999812, 0.00010193099999999955, 0.0001020000000000014, 0.00010269499999999987, 0.00010195799999999922, 0.00010177800000000028, 0.00010212499999999805, 0.00010262500000000202, 0.00010194499999999912, 0.00010263899999999812, 0.00010191699999999998, 0.00010258399999999931, 0.0001020139999999975, 0.00010209799999999838, 0.00010194399999999965, 0.00010193000000000008, 0.0001018610000000017, 0.00010277800000000128, 0.00010213900000000109, 0.00010209799999999838, 0.00010177800000000028, 0.00010183299999999909, 0.00010193099999999955, 0.00010211099999999848, 0.00010193099999999955, 0.00010208399999999881, 0.00010272199999999954, 0.00010266700000000073, 0.0001020420000000001, 0.00010273700000000205, 0.00010183300000000256, 0.00010184700000000213, 0.00010255499999999723, 0.00010266599999999779, 0.00010179100000000038, 0.00010198600000000183, 0.00010191699999999998, 0.00010190300000000041, 0.00010265300000000116, 0.00010187500000000127, 0.00010182000000000246, 0.00010179199999999985, 0.00010263900000000159, 0.00010195900000000216, 0.00010212500000000152, 0.00010175000000000115, 0.00010272199999999954, 0.00010195799999999922, 0.00010265199999999822]</msg>
<status status="PASS" starttime="20201117 14:43:15.685" endtime="20201117 14:43:15.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.680" endtime="20201117 14:43:15.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.694" endtime="20201117 14:43:15.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.698" endtime="20201117 14:43:15.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.696" endtime="20201117 14:43:15.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.693" endtime="20201117 14:43:15.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.320" endtime="20201117 14:43:15.718"></status>
</kw>
<msg timestamp="20201117 14:43:15.719" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.727" endtime="20201117 14:43:15.746"></status>
</kw>
<msg timestamp="20201117 14:43:15.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.725" endtime="20201117 14:43:15.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.747" endtime="20201117 14:43:15.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.750" endtime="20201117 14:43:15.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.723" endtime="20201117 14:43:15.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.721" endtime="20201117 14:43:15.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.760" endtime="20201117 14:43:16.046"></status>
</kw>
<msg timestamp="20201117 14:43:16.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021937792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.758" endtime="20201117 14:43:16.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021937792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.050" endtime="20201117 14:43:16.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.058" endtime="20201117 14:43:16.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.756" endtime="20201117 14:43:16.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.754" endtime="20201117 14:43:16.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.065" level="INFO">${RESULT} = [{'time': 0.021937792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010275000000000215, 'source_diff': 0.00010275000000000215}, {'time': 0.022041806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:16.062" endtime="20201117 14:43:16.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.079" level="INFO">${ACCURACY} = {'source_diff': [0.00010275000000000215, 0.0001019870000000013, 0.00010181899999999952, 0.00010204100000000063, 0.00010263800000000212, 0.00010276400000000172, 0.00010266599999999779, 0.00010198599999...</msg>
<status status="PASS" starttime="20201117 14:43:16.066" endtime="20201117 14:43:16.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.084" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.082" endtime="20201117 14:43:16.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.086" level="INFO">VALUE: [0.00010275000000000215, 0.0001019870000000013, 0.00010181899999999952, 0.00010204100000000063, 0.00010263800000000212, 0.00010276400000000172, 0.00010266599999999779, 0.00010198599999999836, 0.00010190300000000041, 0.00010272199999999954, 0.00010266700000000073, 0.00010256900000000027, 0.00010201400000000097, 0.00010186099999999823, 0.00010180599999999942, 0.00010213899999999762, 0.00010183399999999856, 0.00010179199999999985, 0.00010255600000000017, 0.00010211099999999848, 0.00010190199999999747, 0.0001027359999999991, 0.00010252800000000103, 0.00010181899999999952, 0.00010280600000000042, 0.00010197200000000226, 0.00010208299999999934, 0.00010202699999999759, 0.00010179199999999985, 0.00010206999999999924, 0.00010206999999999924, 0.00010183399999999856, 0.00010195899999999869, 0.00010191699999999998, 0.00010181899999999952, 0.0001020550000000002, 0.00010198600000000183, 0.00010265199999999822, 0.00010243100000000005, 0.00010263899999999812, 0.00010190299999999694, 0.00010265299999999769, 0.00010184699999999866, 0.00010205599999999967, 0.00010183299999999909, 0.00010183300000000256, 0.00010259699999999941, 0.00010199999999999793, 0.00010272299999999901, 0.00010198699999999783]</msg>
<status status="PASS" starttime="20201117 14:43:16.085" endtime="20201117 14:43:16.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.080" endtime="20201117 14:43:16.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.089" endtime="20201117 14:43:16.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.092" endtime="20201117 14:43:16.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.091" endtime="20201117 14:43:16.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.087" endtime="20201117 14:43:16.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.719" endtime="20201117 14:43:16.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.318" endtime="20201117 14:43:16.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.317" endtime="20201117 14:43:16.114"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.116" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.124" endtime="20201117 14:43:16.143"></status>
</kw>
<msg timestamp="20201117 14:43:16.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.122" endtime="20201117 14:43:16.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.145" endtime="20201117 14:43:16.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.147" endtime="20201117 14:43:16.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.120" endtime="20201117 14:43:16.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.118" endtime="20201117 14:43:16.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.156" endtime="20201117 14:43:16.441"></status>
</kw>
<msg timestamp="20201117 14:43:16.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.155" endtime="20201117 14:43:16.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.446" endtime="20201117 14:43:16.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.454" endtime="20201117 14:43:16.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.152" endtime="20201117 14:43:16.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.150" endtime="20201117 14:43:16.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.461" level="INFO">${RESULT} = [{'time': 0.024095903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010376399999999925, 'source_diff': 0.00010376399999999925}, {'time': 0.024201889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:16.457" endtime="20201117 14:43:16.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.474" level="INFO">${ACCURACY} = {'source_diff': [0.00010376399999999925, 0.00010370800000000097, 0.00010368099999999783, 0.00010374999999999968, 0.00010307000000000024, 0.00010276399999999825, 0.00010302699999999859, 0.0001030690000...</msg>
<status status="PASS" starttime="20201117 14:43:16.462" endtime="20201117 14:43:16.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.478" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.477" endtime="20201117 14:43:16.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.481" level="INFO">VALUE: [0.00010376399999999925, 0.00010370800000000097, 0.00010368099999999783, 0.00010374999999999968, 0.00010307000000000024, 0.00010276399999999825, 0.00010302699999999859, 0.00010306900000000077, 0.0001028610000000027, 0.00010297199999999979, 0.00010290199999999847, 0.00010283300000000009, 0.00010293000000000108, 0.00010306900000000077, 0.00010302799999999807, 0.00010282, 0.0001030139999999985, 0.00010361099999999998, 0.00010363899999999912, 0.00010290300000000141, 0.00010365299999999869, 0.00010308300000000034, 0.00010365300000000216, 0.00010359799999999988, 0.0001030139999999985, 0.00010279100000000138, 0.00010362499999999955, 0.0001030550000000012, 0.00010363900000000259, 0.00010309700000000338, 0.00010283300000000009, 0.00010358400000000031, 0.00010358300000000084, 0.00010361199999999945, 0.00010370800000000097, 0.00010298599999999936, 0.0001030139999999985, 0.00010282, 0.00010376299999999977, 0.00010373699999999958, 0.00010298599999999936, 0.00010356900000000127, 0.00010362499999999955, 0.0001035550000000017, 0.00010293000000000108, 0.00010369399999999793, 0.00010356900000000127, 0.0001035689999999978, 0.00010284699999999966, 0.00010383300000000109]</msg>
<status status="PASS" starttime="20201117 14:43:16.479" endtime="20201117 14:43:16.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.475" endtime="20201117 14:43:16.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.484" endtime="20201117 14:43:16.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.487" endtime="20201117 14:43:16.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.486" endtime="20201117 14:43:16.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.482" endtime="20201117 14:43:16.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.116" endtime="20201117 14:43:16.508"></status>
</kw>
<msg timestamp="20201117 14:43:16.508" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.516" endtime="20201117 14:43:16.535"></status>
</kw>
<msg timestamp="20201117 14:43:16.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.515" endtime="20201117 14:43:16.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.537" endtime="20201117 14:43:16.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.539" endtime="20201117 14:43:16.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.512" endtime="20201117 14:43:16.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.510" endtime="20201117 14:43:16.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.549" endtime="20201117 14:43:16.834"></status>
</kw>
<msg timestamp="20201117 14:43:16.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:16.548" endtime="20201117 14:43:16.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:16.838" endtime="20201117 14:43:16.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.846" endtime="20201117 14:43:16.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.545" endtime="20201117 14:43:16.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.544" endtime="20201117 14:43:16.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.853" level="INFO">${RESULT} = [{'time': 0.021723292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030420000000011, 'source_diff': 0.0001030420000000011}, {'time': 0.021828306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.850" endtime="20201117 14:43:16.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.866" level="INFO">${ACCURACY} = {'source_diff': [0.0001030420000000011, 0.00010299999999999893, 0.00010282, 0.00010288800000000237, 0.00010362499999999955, 0.00010361099999999998, 0.00010361099999999998, 0.00010281900000000052, 0.00...</msg>
<status status="PASS" starttime="20201117 14:43:16.854" endtime="20201117 14:43:16.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.871" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.870" endtime="20201117 14:43:16.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.873" level="INFO">VALUE: [0.0001030420000000011, 0.00010299999999999893, 0.00010282, 0.00010288800000000237, 0.00010362499999999955, 0.00010361099999999998, 0.00010361099999999998, 0.00010281900000000052, 0.00010308300000000034, 0.00010305600000000067, 0.00010283300000000009, 0.00010276399999999825, 0.0001028749999999988, 0.00010308399999999981, 0.00010366699999999826, 0.00010299999999999893, 0.00010313799999999915, 0.00010366600000000226, 0.00010281900000000052, 0.00010283399999999956, 0.00010368000000000183, 0.00010297199999999979, 0.0001037360000000001, 0.0001037360000000001, 0.00010280500000000095, 0.00010302800000000154, 0.00010367999999999836, 0.00010286099999999923, 0.00010293100000000055, 0.0001037360000000001, 0.00010301400000000197, 0.00010276399999999825, 0.00010297199999999979, 0.00010338899999999887, 0.00010298600000000283, 0.00010299999999999893, 0.00010299999999999893, 0.00010279100000000138, 0.00010279100000000138, 0.00010294400000000065, 0.0001030139999999985, 0.00010304199999999764, 0.00010366700000000173, 0.00010365299999999869, 0.00010290300000000141, 0.00010313900000000209, 0.00010287500000000227, 0.00010369500000000087, 0.00010299999999999893, 0.00010368099999999783]</msg>
<status status="PASS" starttime="20201117 14:43:16.872" endtime="20201117 14:43:16.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.867" endtime="20201117 14:43:16.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.876" endtime="20201117 14:43:16.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.880" endtime="20201117 14:43:16.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.878" endtime="20201117 14:43:16.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.875" endtime="20201117 14:43:16.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.509" endtime="20201117 14:43:16.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.115" endtime="20201117 14:43:16.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.114" endtime="20201117 14:43:16.901"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.903" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.911" endtime="20201117 14:43:16.931"></status>
</kw>
<msg timestamp="20201117 14:43:16.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.910" endtime="20201117 14:43:16.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.933" endtime="20201117 14:43:16.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.935" endtime="20201117 14:43:16.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.907" endtime="20201117 14:43:16.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.905" endtime="20201117 14:43:16.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.945" endtime="20201117 14:43:17.231"></status>
</kw>
<msg timestamp="20201117 14:43:17.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025012944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.943" endtime="20201117 14:43:17.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025012944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.235" endtime="20201117 14:43:17.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.243" endtime="20201117 14:43:17.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.941" endtime="20201117 14:43:17.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.939" endtime="20201117 14:43:17.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.249" level="INFO">${RESULT} = [{'time': 0.025012944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001043880000000004, 'source_diff': 0.0001043880000000004}, {'time': 0.025118944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:17.246" endtime="20201117 14:43:17.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.264" level="INFO">${ACCURACY} = {'source_diff': [0.0001043880000000004, 0.00010379100000000238, 0.00010380499999999848, 0.00010472200000000154, 0.00010466699999999926, 0.00010455499999999923, 0.00010390300000000241, 0.00010383399999...</msg>
<status status="PASS" starttime="20201117 14:43:17.250" endtime="20201117 14:43:17.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.268" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.267" endtime="20201117 14:43:17.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.271" level="INFO">VALUE: [0.0001043880000000004, 0.00010379100000000238, 0.00010380499999999848, 0.00010472200000000154, 0.00010466699999999926, 0.00010455499999999923, 0.00010390300000000241, 0.0001038339999999971, 0.00010388900000000284, 0.00010470900000000144, 0.00010476400000000025, 0.00010458399999999785, 0.00010399999999999993, 0.00010384699999999719, 0.00010473700000000058, 0.00010379099999999891, 0.00010394399999999818, 0.0001043750000000003, 0.00010399999999999993, 0.00010463900000000012, 0.00010461099999999751, 0.00010377799999999882, 0.00010456900000000227, 0.00010383300000000109, 0.00010472199999999807, 0.00010409700000000091, 0.00010405600000000167, 0.00010452799999999957, 0.00010461100000000098, 0.00010391699999999851, 0.00010407000000000124, 0.0001045559999999987, 0.00010409699999999744, 0.00010413899999999962, 0.00010404199999999864, 0.00010408300000000134, 0.00010463900000000012, 0.00010376400000000272, 0.00010476400000000025, 0.00010379200000000185, 0.00010399999999999993, 0.00010379200000000185, 0.00010386100000000023, 0.00010438899999999987, 0.00010469500000000187, 0.00010404099999999916, 0.00010409800000000038, 0.00010463900000000012, 0.00010475000000000068, 0.0001040550000000022]</msg>
<status status="PASS" starttime="20201117 14:43:17.269" endtime="20201117 14:43:17.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.265" endtime="20201117 14:43:17.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.274" endtime="20201117 14:43:17.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.277" endtime="20201117 14:43:17.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.276" endtime="20201117 14:43:17.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.272" endtime="20201117 14:43:17.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.904" endtime="20201117 14:43:17.298"></status>
</kw>
<msg timestamp="20201117 14:43:17.298" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.306" endtime="20201117 14:43:17.325"></status>
</kw>
<msg timestamp="20201117 14:43:17.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.305" endtime="20201117 14:43:17.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.327" endtime="20201117 14:43:17.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.330" endtime="20201117 14:43:17.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.302" endtime="20201117 14:43:17.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.300" endtime="20201117 14:43:17.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.340" endtime="20201117 14:43:17.625"></status>
</kw>
<msg timestamp="20201117 14:43:17.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.338" endtime="20201117 14:43:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.629" endtime="20201117 14:43:17.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.637" endtime="20201117 14:43:17.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.336" endtime="20201117 14:43:17.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.334" endtime="20201117 14:43:17.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.644" level="INFO">${RESULT} = [{'time': 0.021575597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001040139999999995, 'source_diff': 0.0001040139999999995}, {'time': 0.021681556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:17.641" endtime="20201117 14:43:17.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.657" level="INFO">${ACCURACY} = {'source_diff': [0.0001040139999999995, 0.00010397300000000026, 0.00010401300000000002, 0.00010377700000000281, 0.00010467999999999936, 0.00010409700000000091, 0.00010397200000000079, 0.00010401399999...</msg>
<status status="PASS" starttime="20201117 14:43:17.645" endtime="20201117 14:43:17.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.662" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.661" endtime="20201117 14:43:17.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.664" level="INFO">VALUE: [0.0001040139999999995, 0.00010397300000000026, 0.00010401300000000002, 0.00010377700000000281, 0.00010467999999999936, 0.00010409700000000091, 0.00010397200000000079, 0.0001040139999999995, 0.00010402800000000254, 0.00010402799999999907, 0.00010470800000000197, 0.00010463900000000012, 0.00010458299999999837, 0.00010458299999999837, 0.00010386100000000023, 0.00010465299999999969, 0.00010461100000000098, 0.00010465299999999969, 0.00010465200000000022, 0.00010467999999999936, 0.00010470800000000197, 0.00010472200000000154, 0.00010458299999999837, 0.00010458300000000184, 0.0001040689999999983, 0.00010459699999999794, 0.00010384700000000066, 0.00010379199999999839, 0.00010466700000000273, 0.00010411100000000048, 0.00010458299999999837, 0.00010394500000000112, 0.00010462500000000055, 0.00010465299999999969, 0.00010379200000000185, 0.00010397300000000026, 0.0001038879999999999, 0.00010469399999999893, 0.00010377800000000229, 0.00010383300000000109, 0.00010397199999999732, 0.00010386100000000023, 0.0001045689999999988, 0.00010399999999999993, 0.00010397200000000079, 0.00010404199999999864, 0.00010458300000000184, 0.00010386100000000023, 0.00010390299999999894, 0.0001040420000000021]</msg>
<status status="PASS" starttime="20201117 14:43:17.663" endtime="20201117 14:43:17.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.658" endtime="20201117 14:43:17.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.667" endtime="20201117 14:43:17.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.670" endtime="20201117 14:43:17.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.669" endtime="20201117 14:43:17.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.666" endtime="20201117 14:43:17.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.299" endtime="20201117 14:43:17.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.902" endtime="20201117 14:43:17.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.901" endtime="20201117 14:43:17.692"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.694" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.702" endtime="20201117 14:43:17.722"></status>
</kw>
<msg timestamp="20201117 14:43:17.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.701" endtime="20201117 14:43:17.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.723" endtime="20201117 14:43:17.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.726" endtime="20201117 14:43:17.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.698" endtime="20201117 14:43:17.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.696" endtime="20201117 14:43:17.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.734" endtime="20201117 14:43:18.020"></status>
</kw>
<msg timestamp="20201117 14:43:18.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024543167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:17.733" endtime="20201117 14:43:18.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024543167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:18.024" endtime="20201117 14:43:18.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.032" endtime="20201117 14:43:18.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.731" endtime="20201117 14:43:18.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.729" endtime="20201117 14:43:18.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.039" level="INFO">${RESULT} = [{'time': 0.024543167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010516699999999976, 'source_diff': 0.00010516699999999976}, {'time': 0.024651167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:18.035" endtime="20201117 14:43:18.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.052" level="INFO">${ACCURACY} = {'source_diff': [0.00010516699999999976, 0.0001057360000000021, 0.00010573700000000158, 0.0001048880000000009, 0.00010504100000000016, 0.0001050140000000005, 0.0001057079999999995, 0.00010494399999999...</msg>
<status status="PASS" starttime="20201117 14:43:18.040" endtime="20201117 14:43:18.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.056" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.055" endtime="20201117 14:43:18.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.059" level="INFO">VALUE: [0.00010516699999999976, 0.0001057360000000021, 0.00010573700000000158, 0.0001048880000000009, 0.00010504100000000016, 0.0001050140000000005, 0.0001057079999999995, 0.00010494399999999918, 0.0001047499999999972, 0.00010509700000000191, 0.00010476400000000025, 0.00010477799999999982, 0.00010566700000000026, 0.0001056949999999994, 0.00010563900000000112, 0.00010500000000000093, 0.00010497299999999779, 0.00010475000000000068, 0.00010557000000000274, 0.0001057360000000021, 0.0001050140000000005, 0.00010559700000000241, 0.0001050140000000005, 0.00010576400000000125, 0.00010565300000000069, 0.00010511100000000148, 0.00010500000000000093, 0.00010554200000000014, 0.00010495799999999875, 0.00010558399999999885, 0.00010484699999999819, 0.00010515300000000019, 0.00010484800000000113, 0.0001055559999999997, 0.00010552800000000057, 0.0001050689999999993, 0.00010569399999999993, 0.00010508299999999887, 0.00010487499999999733, 0.00010563900000000112, 0.00010559699999999894, 0.00010512499999999758, 0.00010498600000000136, 0.00010479199999999939, 0.00010502800000000007, 0.00010483299999999862, 0.00010497300000000126, 0.00010480600000000242, 0.00010511100000000148, 0.00010572199999999907]</msg>
<status status="PASS" starttime="20201117 14:43:18.057" endtime="20201117 14:43:18.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.053" endtime="20201117 14:43:18.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.062" endtime="20201117 14:43:18.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.065" endtime="20201117 14:43:18.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.064" endtime="20201117 14:43:18.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.060" endtime="20201117 14:43:18.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.694" endtime="20201117 14:43:18.086"></status>
</kw>
<msg timestamp="20201117 14:43:18.087" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.096" endtime="20201117 14:43:18.115"></status>
</kw>
<msg timestamp="20201117 14:43:18.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.094" endtime="20201117 14:43:18.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.116" endtime="20201117 14:43:18.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.119" endtime="20201117 14:43:18.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.091" endtime="20201117 14:43:18.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.089" endtime="20201117 14:43:18.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.129" endtime="20201117 14:43:18.414"></status>
</kw>
<msg timestamp="20201117 14:43:18.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.127" endtime="20201117 14:43:18.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.419" endtime="20201117 14:43:18.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.427" endtime="20201117 14:43:18.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.125" endtime="20201117 14:43:18.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.123" endtime="20201117 14:43:18.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.433" level="INFO">${RESULT} = [{'time': 0.023243403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010491699999999951, 'source_diff': 0.00010491699999999951}, {'time': 0.023351431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:18.430" endtime="20201117 14:43:18.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.446" level="INFO">${ACCURACY} = {'source_diff': [0.00010491699999999951, 0.00010573699999999811, 0.00010506999999999878, 0.00010505499999999973, 0.00010476300000000077, 0.00010505499999999973, 0.00010484699999999819, 0.0001055410000...</msg>
<status status="PASS" starttime="20201117 14:43:18.434" endtime="20201117 14:43:18.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.451" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.450" endtime="20201117 14:43:18.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.453" level="INFO">VALUE: [0.00010491699999999951, 0.00010573699999999811, 0.00010506999999999878, 0.00010505499999999973, 0.00010476300000000077, 0.00010505499999999973, 0.00010484699999999819, 0.00010554100000000066, 0.00010499999999999746, 0.0001053750000000013, 0.00010477799999999982, 0.00010490299999999994, 0.00010499999999999746, 0.00010494500000000212, 0.00010494500000000212, 0.00010565300000000069, 0.00010576400000000125, 0.00010497300000000126, 0.00010509800000000138, 0.00010488900000000037, 0.00010573599999999864, 0.00010497199999999832, 0.00010572200000000254, 0.0001055689999999998, 0.00010561099999999851, 0.00010569399999999993, 0.0001050689999999993, 0.00010562499999999808, 0.00010494500000000212, 0.00010494500000000212, 0.00010563900000000112, 0.00010570900000000244, 0.00010479199999999939, 0.00010509800000000138, 0.00010491699999999951, 0.00010511199999999749, 0.00010558299999999937, 0.00010501299999999755, 0.00010476400000000025, 0.0001057360000000021, 0.00010505499999999973, 0.00010498599999999789, 0.00010504199999999964, 0.00010512500000000105, 0.00010480599999999896, 0.00010572200000000254, 0.00010477799999999982, 0.00010493099999999908, 0.00010566700000000026, 0.00010565300000000069]</msg>
<status status="PASS" starttime="20201117 14:43:18.452" endtime="20201117 14:43:18.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.447" endtime="20201117 14:43:18.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.457" endtime="20201117 14:43:18.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.460" endtime="20201117 14:43:18.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.459" endtime="20201117 14:43:18.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.455" endtime="20201117 14:43:18.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.087" endtime="20201117 14:43:18.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.693" endtime="20201117 14:43:18.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.692" endtime="20201117 14:43:18.481"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.483" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.492" endtime="20201117 14:43:18.512"></status>
</kw>
<msg timestamp="20201117 14:43:18.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.490" endtime="20201117 14:43:18.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.513" endtime="20201117 14:43:18.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.516" endtime="20201117 14:43:18.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.487" endtime="20201117 14:43:18.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.485" endtime="20201117 14:43:18.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.525" endtime="20201117 14:43:18.811"></status>
</kw>
<msg timestamp="20201117 14:43:18.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024915431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02502175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:18.523" endtime="20201117 14:43:18.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024915431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02502175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:18.815" endtime="20201117 14:43:18.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.823" endtime="20201117 14:43:18.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.521" endtime="20201117 14:43:18.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.519" endtime="20201117 14:43:18.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.829" level="INFO">${RESULT} = [{'time': 0.02502175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010631900000000055, 'source_diff': 0.00010631900000000055}, {'time': 0.025130819, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:43:18.826" endtime="20201117 14:43:18.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.844" level="INFO">${ACCURACY} = {'source_diff': [0.00010631900000000055, 0.00010679099999999844, 0.00010608299999999987, 0.00010581999999999953, 0.00010598600000000236, 0.00010588900000000137, 0.00010604100000000116, 0.0001060699999...</msg>
<status status="PASS" starttime="20201117 14:43:18.830" endtime="20201117 14:43:18.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.848" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.847" endtime="20201117 14:43:18.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.851" level="INFO">VALUE: [0.00010631900000000055, 0.00010679099999999844, 0.00010608299999999987, 0.00010581999999999953, 0.00010598600000000236, 0.00010588900000000137, 0.00010604100000000116, 0.00010606999999999978, 0.0001065560000000007, 0.00010597199999999932, 0.00010591600000000104, 0.00010609700000000291, 0.00010588900000000137, 0.00010584699999999919, 0.0001058750000000018, 0.00010662499999999908, 0.0001067080000000005, 0.00010663900000000212, 0.00010669400000000093, 0.00010637499999999883, 0.00010611099999999901, 0.00010598599999999889, 0.00010665300000000169, 0.0001060690000000003, 0.00010609700000000291, 0.00010584699999999919, 0.00010601399999999803, 0.00010608299999999987, 0.00010586099999999876, 0.00010591600000000104, 0.00010658300000000037, 0.00010666699999999779, 0.00010594399999999671, 0.00010673599999999964, 0.00010666700000000126, 0.00010673700000000258, 0.00010597199999999932, 0.00010577799999999735, 0.00010611099999999901, 0.00010637499999999883, 0.00010606999999999978, 0.00010583299999999962, 0.00010659699999999994, 0.00010598600000000236, 0.00010661099999999951, 0.00010668000000000136, 0.00010612500000000205, 0.0001067499999999992, 0.00010665300000000169, 0.00010581999999999953]</msg>
<status status="PASS" starttime="20201117 14:43:18.849" endtime="20201117 14:43:18.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.845" endtime="20201117 14:43:18.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.854" endtime="20201117 14:43:18.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.857" endtime="20201117 14:43:18.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.856" endtime="20201117 14:43:18.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.853" endtime="20201117 14:43:18.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.484" endtime="20201117 14:43:18.878"></status>
</kw>
<msg timestamp="20201117 14:43:18.878" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.887" endtime="20201117 14:43:18.906"></status>
</kw>
<msg timestamp="20201117 14:43:18.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.885" endtime="20201117 14:43:18.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.907" endtime="20201117 14:43:18.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.910" endtime="20201117 14:43:18.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.883" endtime="20201117 14:43:18.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.880" endtime="20201117 14:43:18.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.919" endtime="20201117 14:43:19.205"></status>
</kw>
<msg timestamp="20201117 14:43:19.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.918" endtime="20201117 14:43:19.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.209" endtime="20201117 14:43:19.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.217" endtime="20201117 14:43:19.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.915" endtime="20201117 14:43:19.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.914" endtime="20201117 14:43:19.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.224" level="INFO">${RESULT} = [{'time': 0.022018597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010619400000000043, 'source_diff': 0.00010619400000000043}, {'time': 0.022127611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.221" endtime="20201117 14:43:19.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.237" level="INFO">${ACCURACY} = {'source_diff': [0.00010619400000000043, 0.00010659699999999994, 0.00010654200000000114, 0.00010579200000000039, 0.00010662500000000255, 0.00010577800000000082, 0.00010598599999999889, 0.0001065560000...</msg>
<status status="PASS" starttime="20201117 14:43:19.225" endtime="20201117 14:43:19.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.242" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.241" endtime="20201117 14:43:19.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.244" level="INFO">VALUE: [0.00010619400000000043, 0.00010659699999999994, 0.00010654200000000114, 0.00010579200000000039, 0.00010662500000000255, 0.00010577800000000082, 0.00010598599999999889, 0.0001065560000000007, 0.0001060140000000015, 0.00010606999999999978, 0.00010602800000000107, 0.00010611200000000195, 0.00010665200000000222, 0.00010604099999999769, 0.00010590299999999747, 0.00010573599999999864, 0.00010658300000000037, 0.00010609699999999944, 0.0001060690000000003, 0.00010598599999999889, 0.00010586100000000223, 0.00010600000000000193, 0.00010594500000000312, 0.00010597199999999932, 0.00010658399999999985, 0.00010580599999999996, 0.00010595799999999975, 0.00010657000000000028, 0.00010672200000000007, 0.0001060690000000003, 0.00010584699999999919, 0.00010677800000000182, 0.00010598600000000236, 0.00010581900000000005, 0.00010661099999999951, 0.0001058889999999979, 0.00010673599999999964, 0.00010668099999999736, 0.00010613900000000162, 0.00010657000000000028, 0.00010636099999999926, 0.00010605500000000073, 0.00010584699999999919, 0.00010575000000000168, 0.00010665199999999875, 0.00010663899999999865, 0.00010594400000000018, 0.00010580500000000048, 0.00010656899999999733, 0.00010580599999999996]</msg>
<status status="PASS" starttime="20201117 14:43:19.243" endtime="20201117 14:43:19.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.239" endtime="20201117 14:43:19.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.248" endtime="20201117 14:43:19.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.251" endtime="20201117 14:43:19.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.250" endtime="20201117 14:43:19.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.246" endtime="20201117 14:43:19.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.879" endtime="20201117 14:43:19.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.482" endtime="20201117 14:43:19.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.481" endtime="20201117 14:43:19.272"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.274" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.283" endtime="20201117 14:43:19.302"></status>
</kw>
<msg timestamp="20201117 14:43:19.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.281" endtime="20201117 14:43:19.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.303" endtime="20201117 14:43:19.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.306" endtime="20201117 14:43:19.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.278" endtime="20201117 14:43:19.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.276" endtime="20201117 14:43:19.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.315" endtime="20201117 14:43:19.599"></status>
</kw>
<msg timestamp="20201117 14:43:19.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024088611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.313" endtime="20201117 14:43:19.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024088611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.603" endtime="20201117 14:43:19.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.611" endtime="20201117 14:43:19.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.311" endtime="20201117 14:43:19.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.309" endtime="20201117 14:43:19.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.618" level="INFO">${RESULT} = [{'time': 0.024088611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001075829999999979, 'source_diff': 0.0001075829999999979}, {'time': 0.024197639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:19.615" endtime="20201117 14:43:19.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.632" level="INFO">${ACCURACY} = {'source_diff': [0.0001075829999999979, 0.0001070279999999986, 0.00010697200000000032, 0.00010687499999999933, 0.00010692999999999814, 0.00010690299999999847, 0.00010695900000000022, 0.000106763999999...</msg>
<status status="PASS" starttime="20201117 14:43:19.619" endtime="20201117 14:43:19.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.636" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.635" endtime="20201117 14:43:19.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.638" level="INFO">VALUE: [0.0001075829999999979, 0.0001070279999999986, 0.00010697200000000032, 0.00010687499999999933, 0.00010692999999999814, 0.00010690299999999847, 0.00010695900000000022, 0.00010676399999999878, 0.00010687499999999933, 0.00010707000000000078, 0.00010733300000000112, 0.00010711100000000001, 0.00010695799999999728, 0.00010716700000000176, 0.00010708300000000087, 0.00010755500000000223, 0.00010761100000000051, 0.00010712499999999958, 0.00010690299999999847, 0.00010711100000000001, 0.00010761199999999999, 0.00010711100000000001, 0.00010711100000000001, 0.00010761199999999999, 0.00010713800000000315, 0.00010711100000000001, 0.00010773599999999717, 0.00010773600000000064, 0.00010686099999999976, 0.00010684700000000019, 0.00010698599999999989, 0.00010706899999999783, 0.00010698599999999989, 0.0001070690000000013, 0.00010763899999999965, 0.00010684799999999967, 0.00010681999999999706, 0.00010767999999999889, 0.0001068889999999989, 0.00010765299999999922, 0.00010699999999999946, 0.00010709700000000044, 0.00010699999999999946, 0.00010676399999999878, 0.00010769400000000193, 0.00010679099999999844, 0.00010694400000000118, 0.00010711100000000001, 0.00010701399999999903, 0.00010768100000000183]</msg>
<status status="PASS" starttime="20201117 14:43:19.637" endtime="20201117 14:43:19.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.633" endtime="20201117 14:43:19.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.642" endtime="20201117 14:43:19.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.645" endtime="20201117 14:43:19.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.643" endtime="20201117 14:43:19.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.640" endtime="20201117 14:43:19.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.275" endtime="20201117 14:43:19.666"></status>
</kw>
<msg timestamp="20201117 14:43:19.666" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.674" endtime="20201117 14:43:19.695"></status>
</kw>
<msg timestamp="20201117 14:43:19.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.672" endtime="20201117 14:43:19.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.696" endtime="20201117 14:43:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.699" endtime="20201117 14:43:19.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.670" endtime="20201117 14:43:19.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.668" endtime="20201117 14:43:19.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.708" endtime="20201117 14:43:19.994"></status>
</kw>
<msg timestamp="20201117 14:43:19.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021596069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.707" endtime="20201117 14:43:19.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021596069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.998" endtime="20201117 14:43:20.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.006" endtime="20201117 14:43:20.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.704" endtime="20201117 14:43:20.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.703" endtime="20201117 14:43:20.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.013" level="INFO">${RESULT} = [{'time': 0.021596069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010698599999999989, 'source_diff': 0.00010698599999999989}, {'time': 0.021706083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.010" endtime="20201117 14:43:20.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.026" level="INFO">${ACCURACY} = {'source_diff': [0.00010698599999999989, 0.00010762500000000008, 0.00010709700000000044, 0.00010704099999999869, 0.00010697200000000032, 0.0001070279999999986, 0.00010695800000000075, 0.00010769399999...</msg>
<status status="PASS" starttime="20201117 14:43:20.014" endtime="20201117 14:43:20.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.031" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.030" endtime="20201117 14:43:20.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.033" level="INFO">VALUE: [0.00010698599999999989, 0.00010762500000000008, 0.00010709700000000044, 0.00010704099999999869, 0.00010697200000000032, 0.0001070279999999986, 0.00010695800000000075, 0.00010769399999999846, 0.00010701399999999903, 0.00010679200000000139, 0.00010679199999999792, 0.00010761100000000051, 0.00010758400000000085, 0.00010700000000000293, 0.00010773700000000011, 0.00010679100000000191, 0.00010704200000000164, 0.00010758300000000137, 0.00010701399999999903, 0.00010766700000000226, 0.00010773600000000064, 0.00010681900000000105, 0.0001075690000000018, 0.0001068889999999989, 0.00010708300000000087, 0.00010752800000000257, 0.00010690299999999847, 0.00010761100000000051, 0.00010765299999999922, 0.00010697200000000032, 0.00010765299999999922, 0.00010691600000000204, 0.00010694400000000118, 0.00010681900000000105, 0.00010769399999999846, 0.00010693000000000161, 0.00010704199999999817, 0.00010704200000000164, 0.00010709700000000044, 0.00010698599999999989, 0.00010759700000000094, 0.00010693000000000161, 0.00010701399999999903, 0.00010687499999999933, 0.00010680599999999749, 0.00010684799999999967, 0.0001077080000000015, 0.00010694400000000118, 0.00010690300000000194, 0.0001075690000000018]</msg>
<status status="PASS" starttime="20201117 14:43:20.032" endtime="20201117 14:43:20.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.027" endtime="20201117 14:43:20.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.036" endtime="20201117 14:43:20.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.039" endtime="20201117 14:43:20.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.038" endtime="20201117 14:43:20.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.035" endtime="20201117 14:43:20.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.666" endtime="20201117 14:43:20.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.273" endtime="20201117 14:43:20.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.272" endtime="20201117 14:43:20.061"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.063" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.071" endtime="20201117 14:43:20.091"></status>
</kw>
<msg timestamp="20201117 14:43:20.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.069" endtime="20201117 14:43:20.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.093" endtime="20201117 14:43:20.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.095" endtime="20201117 14:43:20.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.067" endtime="20201117 14:43:20.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.065" endtime="20201117 14:43:20.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.104" endtime="20201117 14:43:20.390"></status>
</kw>
<msg timestamp="20201117 14:43:20.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024872486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.103" endtime="20201117 14:43:20.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024872486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.394" endtime="20201117 14:43:20.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.402" endtime="20201117 14:43:20.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.100" endtime="20201117 14:43:20.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.098" endtime="20201117 14:43:20.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.409" level="INFO">${RESULT} = [{'time': 0.024872486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010787500000000033, 'source_diff': 0.00010787500000000033}, {'time': 0.024983514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.405" endtime="20201117 14:43:20.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.423" level="INFO">${ACCURACY} = {'source_diff': [0.00010787500000000033, 0.0001085829999999989, 0.0001080279999999996, 0.00010805599999999874, 0.0001078889999999999, 0.00010874999999999774, 0.00010857000000000228, 0.0001087500000000...</msg>
<status status="PASS" starttime="20201117 14:43:20.410" endtime="20201117 14:43:20.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.428" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.427" endtime="20201117 14:43:20.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.430" level="INFO">VALUE: [0.00010787500000000033, 0.0001085829999999989, 0.0001080279999999996, 0.00010805599999999874, 0.0001078889999999999, 0.00010874999999999774, 0.00010857000000000228, 0.00010875000000000121, 0.00010870900000000197, 0.0001078340000000011, 0.0001085829999999989, 0.00010800000000000046, 0.00010866599999999685, 0.0001080829999999984, 0.0001080279999999996, 0.00010786100000000076, 0.00010873600000000164, 0.0001085560000000027, 0.00010872200000000207, 0.00010794499999999818, 0.00010777800000000282, 0.00010861100000000151, 0.0001078889999999999, 0.0001078479999999972, 0.00010777800000000282, 0.00010777699999999987, 0.00010786099999999729, 0.000107902, 0.00010808300000000187, 0.00010856899999999933, 0.00010777799999999935, 0.00010873599999999817, 0.0001080699999999983, 0.0001085699999999988, 0.0001085699999999988, 0.00010861099999999804, 0.00010809700000000144, 0.00010794500000000165, 0.00010865300000000022, 0.00010856899999999933, 0.00010786100000000076, 0.00010804100000000316, 0.00010872200000000207, 0.00010784700000000119, 0.00010797199999999785, 0.00010869399999999946, 0.00010809700000000144, 0.00010804199999999917, 0.00010800000000000046, 0.00010786100000000076]</msg>
<status status="PASS" starttime="20201117 14:43:20.429" endtime="20201117 14:43:20.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.424" endtime="20201117 14:43:20.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.433" endtime="20201117 14:43:20.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.437" endtime="20201117 14:43:20.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.435" endtime="20201117 14:43:20.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.432" endtime="20201117 14:43:20.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.064" endtime="20201117 14:43:20.457"></status>
</kw>
<msg timestamp="20201117 14:43:20.457" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.466" endtime="20201117 14:43:20.485"></status>
</kw>
<msg timestamp="20201117 14:43:20.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.464" endtime="20201117 14:43:20.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.486" endtime="20201117 14:43:20.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.489" endtime="20201117 14:43:20.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.462" endtime="20201117 14:43:20.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.459" endtime="20201117 14:43:20.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.499" endtime="20201117 14:43:20.785"></status>
</kw>
<msg timestamp="20201117 14:43:20.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:20.497" endtime="20201117 14:43:20.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:20.789" endtime="20201117 14:43:20.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.797" endtime="20201117 14:43:20.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.495" endtime="20201117 14:43:20.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.493" endtime="20201117 14:43:20.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.804" level="INFO">${RESULT} = [{'time': 0.021620472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010797200000000132, 'source_diff': 0.00010797200000000132}, {'time': 0.021730486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.800" endtime="20201117 14:43:20.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.817" level="INFO">${ACCURACY} = {'source_diff': [0.00010797200000000132, 0.00010812500000000058, 0.00010794500000000165, 0.00010863899999999718, 0.0001085280000000001, 0.00010797200000000132, 0.00010872200000000207, 0.00010801400000...</msg>
<status status="PASS" starttime="20201117 14:43:20.805" endtime="20201117 14:43:20.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.821" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.820" endtime="20201117 14:43:20.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.824" level="INFO">VALUE: [0.00010797200000000132, 0.00010812500000000058, 0.00010794500000000165, 0.00010863899999999718, 0.0001085280000000001, 0.00010797200000000132, 0.00010872200000000207, 0.00010801400000000003, 0.00010794500000000165, 0.00010804199999999917, 0.00010869499999999893, 0.00010783299999999815, 0.0001080690000000023, 0.00010870799999999903, 0.00010798600000000089, 0.00010806899999999883, 0.00010783399999999763, 0.00010794399999999871, 0.00010817999999999939, 0.00010777799999999935, 0.00010783299999999815, 0.0001085699999999988, 0.00010794500000000165, 0.00010804199999999917, 0.00010812499999999711, 0.00010791699999999904, 0.00010777799999999935, 0.00010873600000000164, 0.0001087219999999986, 0.00010786100000000076, 0.00010863900000000065, 0.00010879199999999992, 0.00010797200000000132, 0.00010792999999999914, 0.00010866699999999979, 0.00010872200000000207, 0.00010779199999999892, 0.0001078889999999999, 0.00010812500000000058, 0.00010807000000000178, 0.00010800000000000046, 0.0001085699999999988, 0.00010802700000000012, 0.00010802700000000012, 0.0001078889999999999, 0.00010858300000000237, 0.00010801400000000003, 0.00010866699999999979, 0.0001080829999999984, 0.00010866699999999979]</msg>
<status status="PASS" starttime="20201117 14:43:20.822" endtime="20201117 14:43:20.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.818" endtime="20201117 14:43:20.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.827" endtime="20201117 14:43:20.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.830" endtime="20201117 14:43:20.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.829" endtime="20201117 14:43:20.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.825" endtime="20201117 14:43:20.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.458" endtime="20201117 14:43:20.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.062" endtime="20201117 14:43:20.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.061" endtime="20201117 14:43:20.851"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.854" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.866" endtime="20201117 14:43:20.886"></status>
</kw>
<msg timestamp="20201117 14:43:20.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.864" endtime="20201117 14:43:20.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.887" endtime="20201117 14:43:20.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.890" endtime="20201117 14:43:20.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.862" endtime="20201117 14:43:20.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.856" endtime="20201117 14:43:20.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.899" endtime="20201117 14:43:21.185"></status>
</kw>
<msg timestamp="20201117 14:43:21.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028200083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028309778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.897" endtime="20201117 14:43:21.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028200083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028309778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.189" endtime="20201117 14:43:21.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.197" endtime="20201117 14:43:21.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.895" endtime="20201117 14:43:21.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.893" endtime="20201117 14:43:21.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.203" level="INFO">${RESULT} = [{'time': 0.028309778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010969499999999993, 'source_diff': 0.00010969499999999993}, {'time': 0.028420833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:21.200" endtime="20201117 14:43:21.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.217" level="INFO">${ACCURACY} = {'source_diff': [0.00010969499999999993, 0.00010909699999999897, 0.00010968100000000036, 0.0001095699999999998, 0.00010976400000000178, 0.00010963799999999871, 0.00010913900000000115, 0.00010909699999...</msg>
<status status="PASS" starttime="20201117 14:43:21.204" endtime="20201117 14:43:21.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.221" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.220" endtime="20201117 14:43:21.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.223" level="INFO">VALUE: [0.00010969499999999993, 0.00010909699999999897, 0.00010968100000000036, 0.0001095699999999998, 0.00010976400000000178, 0.00010963799999999871, 0.00010913900000000115, 0.00010909699999999897, 0.00010968000000000089, 0.00010944499999999968, 0.00010968000000000089, 0.00010956900000000033, 0.00010968100000000036, 0.00010895799999999928, 0.00010966700000000079, 0.00010883399999999863, 0.00010890300000000047, 0.0001097089999999995, 0.00010893099999999961, 0.00010895799999999928, 0.00010893099999999961, 0.00010893000000000014, 0.00010969399999999699, 0.00010973600000000264, 0.00010966700000000079, 0.00010880599999999949, 0.00010894399999999971, 0.00010887500000000133, 0.00010899999999999799, 0.00010876399999999731, 0.00010970800000000003, 0.00010893099999999961, 0.00010893099999999961, 0.00010902799999999713, 0.00010974999999999874, 0.00010966600000000132, 0.00010970800000000003, 0.00010879100000000391, 0.00010904100000000416, 0.00010876400000000425, 0.00010883300000000262, 0.00010902800000000407, 0.00010969400000000046, 0.0001088890000000009, 0.00010895899999999875, 0.00010902800000000407, 0.0001095560000000037, 0.00010968100000000036, 0.00010886100000000176, 0.00010890300000000047]</msg>
<status status="PASS" starttime="20201117 14:43:21.222" endtime="20201117 14:43:21.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.218" endtime="20201117 14:43:21.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.227" endtime="20201117 14:43:21.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.230" endtime="20201117 14:43:21.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.228" endtime="20201117 14:43:21.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.225" endtime="20201117 14:43:21.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.854" endtime="20201117 14:43:21.251"></status>
</kw>
<msg timestamp="20201117 14:43:21.251" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.259" endtime="20201117 14:43:21.279"></status>
</kw>
<msg timestamp="20201117 14:43:21.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.258" endtime="20201117 14:43:21.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.281" endtime="20201117 14:43:21.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.283" endtime="20201117 14:43:21.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.255" endtime="20201117 14:43:21.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.253" endtime="20201117 14:43:21.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.293" endtime="20201117 14:43:21.578"></status>
</kw>
<msg timestamp="20201117 14:43:21.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.292" endtime="20201117 14:43:21.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.583" endtime="20201117 14:43:21.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.591" endtime="20201117 14:43:21.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.289" endtime="20201117 14:43:21.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.287" endtime="20201117 14:43:21.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.597" level="INFO">${RESULT} = [{'time': 0.021973139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010904200000000017, 'source_diff': 0.00010904200000000017}, {'time': 0.022085139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:21.594" endtime="20201117 14:43:21.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.610" level="INFO">${ACCURACY} = {'source_diff': [0.00010904200000000017, 0.00010970800000000003, 0.00010937500000000183, 0.00010875000000000121, 0.00010908399999999888, 0.00010901399999999756, 0.0001097089999999995, 0.00010961100000...</msg>
<status status="PASS" starttime="20201117 14:43:21.598" endtime="20201117 14:43:21.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.615" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.614" endtime="20201117 14:43:21.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.617" level="INFO">VALUE: [0.00010904200000000017, 0.00010970800000000003, 0.00010937500000000183, 0.00010875000000000121, 0.00010908399999999888, 0.00010901399999999756, 0.0001097089999999995, 0.00010961100000000251, 0.00010872300000000154, 0.00010965199999999828, 0.00010895799999999928, 0.00010877700000000087, 0.00010965199999999828, 0.00010941700000000054, 0.00010966699999999732, 0.0001097219999999996, 0.00010893099999999961, 0.00010961099999999904, 0.00010897199999999885, 0.00010881999999999906, 0.00010954200000000067, 0.00010880599999999949, 0.00010965200000000175, 0.00010965299999999775, 0.00010956900000000033, 0.00010909699999999897, 0.00010962500000000208, 0.00010968000000000089, 0.00010901400000000103, 0.0001097219999999996, 0.00010883300000000262, 0.00010900000000000146, 0.00010877800000000035, 0.0001088890000000009, 0.00010973600000000264, 0.00010894499999999918, 0.00010884800000000167, 0.00010891700000000004, 0.00010883399999999863, 0.00010890300000000047, 0.00010876400000000078, 0.00010890300000000047, 0.0001088890000000009, 0.00010880600000000296, 0.00010881899999999958, 0.00010883300000000262, 0.00010893099999999961, 0.00010961099999999904, 0.00010891700000000004, 0.0001095699999999998]</msg>
<status status="PASS" starttime="20201117 14:43:21.616" endtime="20201117 14:43:21.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.611" endtime="20201117 14:43:21.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.621" endtime="20201117 14:43:21.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.624" endtime="20201117 14:43:21.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.623" endtime="20201117 14:43:21.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.619" endtime="20201117 14:43:21.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.252" endtime="20201117 14:43:21.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.852" endtime="20201117 14:43:21.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.852" endtime="20201117 14:43:21.645"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.648" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.656" endtime="20201117 14:43:21.676"></status>
</kw>
<msg timestamp="20201117 14:43:21.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.654" endtime="20201117 14:43:21.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.677" endtime="20201117 14:43:21.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.680" endtime="20201117 14:43:21.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.652" endtime="20201117 14:43:21.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.650" endtime="20201117 14:43:21.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.689" endtime="20201117 14:43:21.974"></status>
</kw>
<msg timestamp="20201117 14:43:21.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02484575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:21.687" endtime="20201117 14:43:21.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02484575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:21.978" endtime="20201117 14:43:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.986" endtime="20201117 14:43:21.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.685" endtime="20201117 14:43:21.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.683" endtime="20201117 14:43:21.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.993" level="INFO">${RESULT} = [{'time': 0.024956542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011079200000000192, 'source_diff': 0.00011079200000000192}, {'time': 0.025069569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:21.989" endtime="20201117 14:43:21.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.007" level="INFO">${ACCURACY} = {'source_diff': [0.00011079200000000192, 0.0001105549999999983, 0.0001100280000000016, 0.00010979199999999745, 0.00011004099999999822, 0.00010999999999999899, 0.00011004100000000169, 0.000110679999999...</msg>
<status status="PASS" starttime="20201117 14:43:21.994" endtime="20201117 14:43:22.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.012" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.011" endtime="20201117 14:43:22.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.015" level="INFO">VALUE: [0.00011079200000000192, 0.0001105549999999983, 0.0001100280000000016, 0.00010979199999999745, 0.00011004099999999822, 0.00010999999999999899, 0.00011004100000000169, 0.00011067999999999842, 0.00010998599999999942, 0.00010973599999999917, 0.00010998599999999942, 0.00010984699999999972, 0.00010983300000000015, 0.00010987499999999886, 0.00010986099999999929, 0.00011062499999999961, 0.0001107090000000005, 0.00011000000000000246, 0.0001100830000000004, 0.00011009699999999997, 0.00010998599999999942, 0.00011005500000000126, 0.00011009699999999997, 0.00010983300000000015, 0.00010997199999999985, 0.00010998599999999942, 0.0001098890000000019, 0.00011069500000000093, 0.000110596999999997, 0.0001105700000000008, 0.00010984699999999972, 0.00010997300000000279, 0.00010982000000000006, 0.00011040199999999903, 0.000109902000000002, 0.00011063900000000265, 0.00011055500000000176, 0.00011058299999999743, 0.00010970800000000003, 0.00011069400000000146, 0.00011052799999999863, 0.00010974999999999874, 0.00010977800000000135, 0.00011059700000000047, 0.00011017999999999792, 0.0001098890000000019, 0.00010986100000000276, 0.0001100419999999977, 0.00010977799999999788, 0.00011066600000000232]</msg>
<status status="PASS" starttime="20201117 14:43:22.013" endtime="20201117 14:43:22.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.008" endtime="20201117 14:43:22.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.018" endtime="20201117 14:43:22.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.021" endtime="20201117 14:43:22.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.020" endtime="20201117 14:43:22.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.016" endtime="20201117 14:43:22.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.648" endtime="20201117 14:43:22.042"></status>
</kw>
<msg timestamp="20201117 14:43:22.042" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.050" endtime="20201117 14:43:22.069"></status>
</kw>
<msg timestamp="20201117 14:43:22.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.049" endtime="20201117 14:43:22.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.071" endtime="20201117 14:43:22.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.073" endtime="20201117 14:43:22.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.046" endtime="20201117 14:43:22.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.044" endtime="20201117 14:43:22.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.083" endtime="20201117 14:43:22.368"></status>
</kw>
<msg timestamp="20201117 14:43:22.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.081" endtime="20201117 14:43:22.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.372" endtime="20201117 14:43:22.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.380" endtime="20201117 14:43:22.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.079" endtime="20201117 14:43:22.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.077" endtime="20201117 14:43:22.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.386" level="INFO">${RESULT} = [{'time': 0.021756653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011033400000000013, 'source_diff': 0.00011033400000000013}, {'time': 0.021868653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:22.383" endtime="20201117 14:43:22.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.400" level="INFO">${ACCURACY} = {'source_diff': [0.00011033400000000013, 0.00010987499999999886, 0.00011063899999999918, 0.00010982000000000006, 0.00010980500000000101, 0.0001107090000000005, 0.000109902000000002, 0.0001098049999999...</msg>
<status status="PASS" starttime="20201117 14:43:22.387" endtime="20201117 14:43:22.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.404" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.403" endtime="20201117 14:43:22.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.407" level="INFO">VALUE: [0.00011033400000000013, 0.00010987499999999886, 0.00011063899999999918, 0.00010982000000000006, 0.00010980500000000101, 0.0001107090000000005, 0.000109902000000002, 0.00010980499999999754, 0.00010997199999999985, 0.00011077799999999888, 0.00011005600000000074, 0.00011038899999999893, 0.0001105830000000009, 0.00010987500000000233, 0.00010994499999999671, 0.00010980600000000049, 0.00011011099999999954, 0.00011058399999999691, 0.00011061199999999952, 0.00010995800000000028, 0.00010991600000000157, 0.00011001399999999856, 0.00010976299999999883, 0.00010998599999999942, 0.00011001400000000203, 0.00010984699999999972, 0.00010984699999999972, 0.00011062499999999961, 0.00010977799999999788, 0.00011000000000000246, 0.00010977799999999788, 0.00010987499999999886, 0.00011011099999999954, 0.00010976399999999831, 0.00010972299999999907, 0.00011068100000000136, 0.00011062499999999961, 0.00010991600000000157, 0.0001100830000000004, 0.00010998599999999942, 0.00011004099999999822, 0.00010991700000000104, 0.00011001400000000203, 0.00010990300000000147, 0.00011001399999999856, 0.0001100419999999977, 0.00011068100000000136, 0.00011073699999999964, 0.00010980600000000049, 0.00010991700000000104]</msg>
<status status="PASS" starttime="20201117 14:43:22.405" endtime="20201117 14:43:22.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.401" endtime="20201117 14:43:22.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.410" endtime="20201117 14:43:22.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.413" endtime="20201117 14:43:22.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.412" endtime="20201117 14:43:22.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.408" endtime="20201117 14:43:22.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.043" endtime="20201117 14:43:22.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.646" endtime="20201117 14:43:22.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.646" endtime="20201117 14:43:22.434"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.437" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.445" endtime="20201117 14:43:22.464"></status>
</kw>
<msg timestamp="20201117 14:43:22.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.443" endtime="20201117 14:43:22.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.465" endtime="20201117 14:43:22.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.468" endtime="20201117 14:43:22.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.441" endtime="20201117 14:43:22.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.439" endtime="20201117 14:43:22.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.477" endtime="20201117 14:43:22.761"></status>
</kw>
<msg timestamp="20201117 14:43:22.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.475" endtime="20201117 14:43:22.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.765" endtime="20201117 14:43:22.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.773" endtime="20201117 14:43:22.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.473" endtime="20201117 14:43:22.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.471" endtime="20201117 14:43:22.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.780" level="INFO">${RESULT} = [{'time': 0.024034472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011143000000000264, 'source_diff': 0.00011143000000000264}, {'time': 0.024147444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:22.777" endtime="20201117 14:43:22.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.794" level="INFO">${ACCURACY} = {'source_diff': [0.00011143000000000264, 0.00011094400000000171, 0.00011081900000000158, 0.00011101399999999956, 0.00011079199999999845, 0.00011111100000000054, 0.000110902999999999, 0.000110888999999...</msg>
<status status="PASS" starttime="20201117 14:43:22.781" endtime="20201117 14:43:22.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.798" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.797" endtime="20201117 14:43:22.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.800" level="INFO">VALUE: [0.00011143000000000264, 0.00011094400000000171, 0.00011081900000000158, 0.00011101399999999956, 0.00011079199999999845, 0.00011111100000000054, 0.000110902999999999, 0.00011088899999999943, 0.00011156899999999886, 0.00011163900000000018, 0.00011109800000000045, 0.00011175000000000074, 0.00011170799999999856, 0.00011166700000000279, 0.00011090199999999953, 0.00011084699999999725, 0.0001110830000000014, 0.00011099999999999999, 0.00011099999999999999, 0.00011165299999999975, 0.00011098600000000042, 0.00011162500000000061, 0.00011173600000000117, 0.00011165299999999975, 0.00011159800000000095, 0.00011076399999999931, 0.00011112500000000011, 0.00011087499999999986, 0.0001117220000000016, 0.00011156999999999834, 0.00011094400000000171, 0.00011118100000000186, 0.00011137500000000036, 0.00011138899999999993, 0.00011165299999999975, 0.00011079200000000192, 0.00011091699999999857, 0.00011105600000000174, 0.00011108299999999793, 0.00011076399999999931, 0.0001110969999999975, 0.00011082000000000106, 0.00011109700000000097, 0.00011165200000000028, 0.00011169500000000193, 0.00011170799999999856, 0.00011090199999999953, 0.00011088899999999943, 0.00011101399999999956, 0.00011156900000000233]</msg>
<status status="PASS" starttime="20201117 14:43:22.799" endtime="20201117 14:43:22.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.794" endtime="20201117 14:43:22.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.804" endtime="20201117 14:43:22.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.807" endtime="20201117 14:43:22.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.805" endtime="20201117 14:43:22.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.802" endtime="20201117 14:43:22.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.437" endtime="20201117 14:43:22.827"></status>
</kw>
<msg timestamp="20201117 14:43:22.828" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.836" endtime="20201117 14:43:22.855"></status>
</kw>
<msg timestamp="20201117 14:43:22.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.834" endtime="20201117 14:43:22.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.857" endtime="20201117 14:43:22.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.859" endtime="20201117 14:43:22.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.832" endtime="20201117 14:43:22.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.830" endtime="20201117 14:43:22.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.869" endtime="20201117 14:43:23.155"></status>
</kw>
<msg timestamp="20201117 14:43:23.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.868" endtime="20201117 14:43:23.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021553389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.159" endtime="20201117 14:43:23.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.168" endtime="20201117 14:43:23.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.865" endtime="20201117 14:43:23.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.864" endtime="20201117 14:43:23.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.175" level="INFO">${RESULT} = [{'time': 0.021665083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011169400000000246, 'source_diff': 0.00011169400000000246}, {'time': 0.021779125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:23.172" endtime="20201117 14:43:23.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.189" level="INFO">${ACCURACY} = {'source_diff': [0.00011169400000000246, 0.00011163900000000018, 0.00011088899999999943, 0.00011169399999999899, 0.00011081900000000158, 0.00011102799999999913, 0.00011086100000000029, 0.0001108610000...</msg>
<status status="PASS" starttime="20201117 14:43:23.176" endtime="20201117 14:43:23.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.193" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.192" endtime="20201117 14:43:23.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.196" level="INFO">VALUE: [0.00011169400000000246, 0.00011163900000000018, 0.00011088899999999943, 0.00011169399999999899, 0.00011081900000000158, 0.00011102799999999913, 0.00011086100000000029, 0.00011086100000000029, 0.00011098600000000042, 0.00011083400000000063, 0.00011087499999999986, 0.00011176400000000031, 0.00011170899999999803, 0.00011083400000000063, 0.00011099999999999999, 0.00011109800000000045, 0.0001110549999999988, 0.00011161099999999757, 0.00011099999999999999, 0.00011077799999999888, 0.00011093000000000214, 0.00011156899999999886, 0.00011106899999999836, 0.00011076399999999931, 0.00011093100000000161, 0.00011091699999999857, 0.00011095900000000075, 0.0001110549999999988, 0.00011109799999999698, 0.00011166699999999932, 0.00011172300000000107, 0.0001109159999999991, 0.00011098600000000042, 0.00011095799999999781, 0.00011098600000000042, 0.00011088899999999943, 0.00011087499999999986, 0.00011175000000000074, 0.0001117359999999977, 0.00011097200000000085, 0.00011086100000000029, 0.00011097300000000032, 0.0001115419999999992, 0.00011088899999999943, 0.000110902999999999, 0.00011170899999999803, 0.00011095800000000128, 0.00011079099999999897, 0.00011102699999999965, 0.00011086100000000029]</msg>
<status status="PASS" starttime="20201117 14:43:23.194" endtime="20201117 14:43:23.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.190" endtime="20201117 14:43:23.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.199" endtime="20201117 14:43:23.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.202" endtime="20201117 14:43:23.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.201" endtime="20201117 14:43:23.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.197" endtime="20201117 14:43:23.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.828" endtime="20201117 14:43:23.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.435" endtime="20201117 14:43:23.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.435" endtime="20201117 14:43:23.223"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.225" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.234" endtime="20201117 14:43:23.254"></status>
</kw>
<msg timestamp="20201117 14:43:23.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.232" endtime="20201117 14:43:23.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.256" endtime="20201117 14:43:23.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.259" endtime="20201117 14:43:23.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.229" endtime="20201117 14:43:23.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.227" endtime="20201117 14:43:23.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.268" endtime="20201117 14:43:23.553"></status>
</kw>
<msg timestamp="20201117 14:43:23.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025169181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.267" endtime="20201117 14:43:23.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025169181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.557" endtime="20201117 14:43:23.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.565" endtime="20201117 14:43:23.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.264" endtime="20201117 14:43:23.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.262" endtime="20201117 14:43:23.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.572" level="INFO">${RESULT} = [{'time': 0.025281681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011250000000000149, 'source_diff': 0.00011250000000000149}, {'time': 0.025395667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:23.569" endtime="20201117 14:43:23.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.586" level="INFO">${ACCURACY} = {'source_diff': [0.00011250000000000149, 0.00011200000000000099, 0.00011186100000000129, 0.00011212499999999764, 0.00011261099999999857, 0.000112596999999999, 0.00011179099999999997, 0.000112666000000...</msg>
<status status="PASS" starttime="20201117 14:43:23.573" endtime="20201117 14:43:23.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.591" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.590" endtime="20201117 14:43:23.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.593" level="INFO">VALUE: [0.00011250000000000149, 0.00011200000000000099, 0.00011186100000000129, 0.00011212499999999764, 0.00011261099999999857, 0.000112596999999999, 0.00011179099999999997, 0.00011266600000000085, 0.00011204100000000022, 0.00011184700000000172, 0.00011183299999999868, 0.00011238900000000093, 0.00011176400000000031, 0.00011266600000000085, 0.00011262500000000161, 0.0001120969999999985, 0.00011211099999999807, 0.00011213900000000068, 0.00011262500000000161, 0.0001120969999999985, 0.0001118480000000012, 0.00011204100000000022, 0.00011262500000000161, 0.00011262500000000161, 0.00011272199999999913, 0.00011272199999999913, 0.00011265300000000075, 0.00011181899999999911, 0.000111903, 0.00011258299999999943, 0.00011258399999999891, 0.00011187499999999739, 0.00011198599999999795, 0.00011194500000000218, 0.0001127090000000025, 0.00011259799999999848, 0.00011211099999999807, 0.000112596999999999, 0.00011266599999999738, 0.00011202800000000013, 0.00011176400000000031, 0.00011177799999999988, 0.0001127359999999987, 0.00011186100000000129, 0.00011212499999999764, 0.0001120700000000023, 0.00011184700000000172, 0.00011258400000000238, 0.00011272300000000207, 0.0001119160000000001]</msg>
<status status="PASS" starttime="20201117 14:43:23.592" endtime="20201117 14:43:23.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.587" endtime="20201117 14:43:23.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.596" endtime="20201117 14:43:23.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.600" endtime="20201117 14:43:23.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.598" endtime="20201117 14:43:23.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.595" endtime="20201117 14:43:23.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.226" endtime="20201117 14:43:23.620"></status>
</kw>
<msg timestamp="20201117 14:43:23.621" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.629" endtime="20201117 14:43:23.649"></status>
</kw>
<msg timestamp="20201117 14:43:23.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.627" endtime="20201117 14:43:23.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.650" endtime="20201117 14:43:23.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.653" endtime="20201117 14:43:23.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.625" endtime="20201117 14:43:23.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.623" endtime="20201117 14:43:23.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.663" endtime="20201117 14:43:23.950"></status>
</kw>
<msg timestamp="20201117 14:43:23.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02178225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:23.661" endtime="20201117 14:43:23.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02178225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:23.954" endtime="20201117 14:43:23.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.962" endtime="20201117 14:43:23.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.659" endtime="20201117 14:43:23.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.657" endtime="20201117 14:43:23.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.968" level="INFO">${RESULT} = [{'time': 0.02178225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011236099999999832, 'source_diff': 0.00011236099999999832}, {'time': 0.021897236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:43:23.965" endtime="20201117 14:43:23.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.982" level="INFO">${ACCURACY} = {'source_diff': [0.00011236099999999832, 0.00011270799999999956, 0.00011201400000000056, 0.00011194499999999871, 0.0001120830000000024, 0.00011184700000000172, 0.00011208399999999841, 0.00011204199999...</msg>
<status status="PASS" starttime="20201117 14:43:23.969" endtime="20201117 14:43:23.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.986" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.985" endtime="20201117 14:43:23.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.988" level="INFO">VALUE: [0.00011236099999999832, 0.00011270799999999956, 0.00011201400000000056, 0.00011194499999999871, 0.0001120830000000024, 0.00011184700000000172, 0.00011208399999999841, 0.0001120419999999997, 0.00011268000000000042, 0.0001120549999999998, 0.00011274999999999827, 0.00011212499999999764, 0.00011201400000000056, 0.00011205599999999927, 0.00011188900000000043, 0.00011194399999999924, 0.00011194500000000218, 0.00011198600000000142, 0.00011263899999999771, 0.00011266699999999685, 0.00011193100000000261, 0.00011272300000000207, 0.00011183400000000163, 0.00011188800000000096, 0.00011186099999999782, 0.00011194399999999924, 0.00011261099999999857, 0.00011186100000000129, 0.00011266700000000032, 0.0001127359999999987, 0.00011181900000000258, 0.00011183299999999868, 0.0001127220000000026, 0.00011208399999999841, 0.00011266700000000032, 0.00011202800000000013, 0.00011266700000000032, 0.00011262500000000161, 0.00011180499999999954, 0.00011201400000000056, 0.00011266600000000085, 0.00011263900000000118, 0.00011263900000000118, 0.00011270799999999956, 0.00011184700000000172, 0.00011261099999999857, 0.00011268099999999989, 0.00011263900000000118, 0.00011177799999999988, 0.00011180599999999902]</msg>
<status status="PASS" starttime="20201117 14:43:23.987" endtime="20201117 14:43:23.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.982" endtime="20201117 14:43:23.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.992" endtime="20201117 14:43:23.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.995" endtime="20201117 14:43:24.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.993" endtime="20201117 14:43:24.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.990" endtime="20201117 14:43:24.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.621" endtime="20201117 14:43:24.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.224" endtime="20201117 14:43:24.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.223" endtime="20201117 14:43:24.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.167" endtime="20201117 14:43:24.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.021" endtime="20201117 14:43:24.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.019" endtime="20201117 14:43:24.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.018" endtime="20201117 14:43:24.042"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:42:05.096" endtime="20201117 14:43:24.042" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:44.485" endtime="20201117 14:43:24.047"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:40:42.360" endtime="20201117 14:43:24.061"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
