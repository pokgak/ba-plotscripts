<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:40:42.132" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:42.689" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:42.697" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:43.664" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:42.687" endtime="20201117 14:40:43.664"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:43.667" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:43.665" endtime="20201117 14:40:43.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:42.686" endtime="20201117 14:40:43.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:43.670" endtime="20201117 14:40:43.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.668" endtime="20201117 14:40:43.853"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:43.866" endtime="20201117 14:40:43.888"></status>
</kw>
<msg timestamp="20201117 14:40:43.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:43.864" endtime="20201117 14:40:43.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:43.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:43.890" endtime="20201117 14:40:43.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:43.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:43.892" endtime="20201117 14:40:43.895"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:43.862" endtime="20201117 14:40:43.895"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:43.860" endtime="20201117 14:40:43.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.858" endtime="20201117 14:40:43.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:43.900" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:43.899" endtime="20201117 14:40:43.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.897" endtime="20201117 14:40:43.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.858" endtime="20201117 14:40:43.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.857" endtime="20201117 14:40:43.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:43.902" endtime="20201117 14:40:43.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.855" endtime="20201117 14:40:43.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:43.904" endtime="20201117 14:40:43.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.854" endtime="20201117 14:40:43.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:42.684" endtime="20201117 14:40:43.907"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:43.913" endtime="20201117 14:40:43.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.912" endtime="20201117 14:40:43.933"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:43.948" endtime="20201117 14:40:43.964"></status>
</kw>
<msg timestamp="20201117 14:40:43.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:43.945" endtime="20201117 14:40:43.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:43.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:43.966" endtime="20201117 14:40:43.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:43.970" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:43.968" endtime="20201117 14:40:43.970"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:43.942" endtime="20201117 14:40:43.971"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:43.940" endtime="20201117 14:40:43.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.938" endtime="20201117 14:40:43.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:43.975" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:43.975" endtime="20201117 14:40:43.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.973" endtime="20201117 14:40:43.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.937" endtime="20201117 14:40:43.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.937" endtime="20201117 14:40:43.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:43.977" endtime="20201117 14:40:43.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.935" endtime="20201117 14:40:43.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.934" endtime="20201117 14:40:43.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.910" endtime="20201117 14:40:43.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:43.987" endtime="20201117 14:40:43.999"></status>
</kw>
<msg timestamp="20201117 14:40:44.000" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:43.985" endtime="20201117 14:40:44.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.002" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.001" endtime="20201117 14:40:44.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.003" endtime="20201117 14:40:44.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.983" endtime="20201117 14:40:44.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.981" endtime="20201117 14:40:44.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.010" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:40:44.009" endtime="20201117 14:40:44.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.012" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:40:44.011" endtime="20201117 14:40:44.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.007" endtime="20201117 14:40:44.013"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:43.907" endtime="20201117 14:40:44.014" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:42.241" endtime="20201117 14:40:44.017"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.071" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:44.079" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:45.161" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:44.070" endtime="20201117 14:40:45.162"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.164" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:45.163" endtime="20201117 14:40:45.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.069" endtime="20201117 14:40:45.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.167" endtime="20201117 14:40:45.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.166" endtime="20201117 14:40:45.387"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.400" endtime="20201117 14:40:45.419"></status>
</kw>
<msg timestamp="20201117 14:40:45.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.398" endtime="20201117 14:40:45.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.422" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.421" endtime="20201117 14:40:45.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.426" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:45.424" endtime="20201117 14:40:45.426"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.396" endtime="20201117 14:40:45.426"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.394" endtime="20201117 14:40:45.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.392" endtime="20201117 14:40:45.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:45.431" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:45.430" endtime="20201117 14:40:45.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.428" endtime="20201117 14:40:45.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.391" endtime="20201117 14:40:45.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.391" endtime="20201117 14:40:45.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.433" endtime="20201117 14:40:45.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.390" endtime="20201117 14:40:45.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.435" endtime="20201117 14:40:45.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.388" endtime="20201117 14:40:45.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.067" endtime="20201117 14:40:45.438"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.444" endtime="20201117 14:40:45.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.442" endtime="20201117 14:40:45.465"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.478" endtime="20201117 14:40:45.495"></status>
</kw>
<msg timestamp="20201117 14:40:45.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.476" endtime="20201117 14:40:45.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.497" endtime="20201117 14:40:45.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:45.500" endtime="20201117 14:40:45.502"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.474" endtime="20201117 14:40:45.503"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.471" endtime="20201117 14:40:45.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.470" endtime="20201117 14:40:45.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:45.507" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:45.506" endtime="20201117 14:40:45.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.504" endtime="20201117 14:40:45.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.469" endtime="20201117 14:40:45.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.468" endtime="20201117 14:40:45.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.509" endtime="20201117 14:40:45.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.467" endtime="20201117 14:40:45.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.465" endtime="20201117 14:40:45.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.441" endtime="20201117 14:40:45.511"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.515" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.524" endtime="20201117 14:40:45.542"></status>
</kw>
<msg timestamp="20201117 14:40:45.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.522" endtime="20201117 14:40:45.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.544" endtime="20201117 14:40:45.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.546" endtime="20201117 14:40:45.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.519" endtime="20201117 14:40:45.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.517" endtime="20201117 14:40:45.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.555" endtime="20201117 14:40:45.844"></status>
</kw>
<msg timestamp="20201117 14:40:45.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06993575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:45.553" endtime="20201117 14:40:45.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06993575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:45.849" endtime="20201117 14:40:45.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.857" endtime="20201117 14:40:45.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.551" endtime="20201117 14:40:45.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.549" endtime="20201117 14:40:45.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:45.864" level="INFO">${RESULT} = [{'time': 0.06993575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.736100000000352e-05, 'source_diff': 2.736100000000352e-05}, {'time': 0.069965014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:40:45.860" endtime="20201117 14:40:45.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:45.877" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:45.865" endtime="20201117 14:40:45.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.882" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:45.881" endtime="20201117 14:40:45.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.884" level="INFO">VALUE: [2.736100000000352e-05, 1.3583000000011447e-05, 1.4166999999995489e-05, 1.4097000000004578e-05, 1.3570000000004412e-05, 1.3917000000002178e-05, 1.4097000000004578e-05, 1.3902999999995669e-05, 1.3653000000002358e-05, 1.3972000000000984e-05, 1.4361000000004398e-05, 1.408400000001142e-05, 1.4263999999999943e-05, 1.3889000000003038e-05, 1.4138999999996349e-05, 1.3987000000006966e-05, 1.4402999999996169e-05, 1.4486999999993588e-05, 1.3888000000003564e-05, 1.4180000000002524e-05, 1.3973000000000457e-05, 1.434699999999789e-05, 1.3709000000000637e-05, 1.4042000000005772e-05, 1.436099999999052e-05, 1.4347000000011767e-05, 1.3777999999992074e-05, 1.402699999999979e-05, 1.3833000000004758e-05, 1.3777000000006479e-05, 1.3929999999995335e-05, 1.4208000000001664e-05, 1.4221999999994295e-05, 1.3625000000003218e-05, 1.4207999999987786e-05, 1.3722000000007673e-05, 1.4041000000006298e-05, 1.3541000000005798e-05, 1.42769999999931e-05, 1.4139000000010227e-05, 1.3736000000000304e-05, 1.4166999999995489e-05, 1.3625000000003218e-05, 1.4250000000007312e-05, 1.4000000000000123e-05, 1.4402999999996169e-05, 1.4375000000010907e-05, 1.4306000000005592e-05, 1.4139000000010227e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201117 14:40:45.883" endtime="20201117 14:40:45.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.878" endtime="20201117 14:40:45.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.887" endtime="20201117 14:40:45.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.891" endtime="20201117 14:40:45.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.889" endtime="20201117 14:40:45.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.886" endtime="20201117 14:40:45.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.516" endtime="20201117 14:40:45.911"></status>
</kw>
<msg timestamp="20201117 14:40:45.912" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.920" endtime="20201117 14:40:45.938"></status>
</kw>
<msg timestamp="20201117 14:40:45.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.918" endtime="20201117 14:40:45.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.940" endtime="20201117 14:40:45.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.942" endtime="20201117 14:40:45.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.916" endtime="20201117 14:40:45.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.914" endtime="20201117 14:40:45.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.951" endtime="20201117 14:40:46.236"></status>
</kw>
<msg timestamp="20201117 14:40:46.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:45.950" endtime="20201117 14:40:46.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.240" endtime="20201117 14:40:46.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.249" endtime="20201117 14:40:46.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.947" endtime="20201117 14:40:46.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.946" endtime="20201117 14:40:46.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:46.255" level="INFO">${RESULT} = [{'time': 0.019879944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.019909958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:46.252" endtime="20201117 14:40:46.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:46.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:46.256" endtime="20201117 14:40:46.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.273" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:46.272" endtime="20201117 14:40:46.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.276" level="INFO">VALUE: [1.4151999999999915e-05, 1.4513999999996724e-05, 1.4277999999999513e-05, 1.3652000000002884e-05, 1.3736000000000304e-05, 1.3986000000000554e-05, 1.3721999999997264e-05, 1.4055000000002399e-05, 1.4416999999999208e-05, 1.4415999999999735e-05, 1.3930000000002274e-05, 1.405499999999893e-05, 1.4458000000001914e-05, 1.3861000000000429e-05, 1.4277999999999513e-05, 1.3709000000000637e-05, 1.4041999999998833e-05, 1.384699999999739e-05, 1.4361000000000929e-05, 1.3917000000002178e-05, 1.4514000000000193e-05, 1.3736000000000304e-05, 1.4389000000000068e-05, 1.4374999999997029e-05, 1.3667000000001928e-05, 1.3860999999996959e-05, 1.3791999999998583e-05, 1.3611000000000179e-05, 1.4360999999997459e-05, 1.3902999999999138e-05, 1.4471999999998014e-05, 1.3597000000000609e-05, 1.4402999999999638e-05, 1.3541999999998333e-05, 1.3736000000000304e-05, 1.3598000000000082e-05, 1.4209000000001137e-05, 1.3986000000000554e-05, 1.3888999999999568e-05, 1.4041999999998833e-05, 1.4181000000001998e-05, 1.4223000000000707e-05, 1.4416999999999208e-05, 1.4027999999999263e-05, 1.4250000000000373e-05, 1.3805000000002149e-05, 1.4416999999999208e-05, 1.3987000000000027e-05, 1.4291999999999083e-05, 1.4181000000001998e-05]</msg>
<status status="PASS" starttime="20201117 14:40:46.274" endtime="20201117 14:40:46.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.270" endtime="20201117 14:40:46.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.279" endtime="20201117 14:40:46.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.282" endtime="20201117 14:40:46.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.281" endtime="20201117 14:40:46.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.277" endtime="20201117 14:40:46.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.912" endtime="20201117 14:40:46.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.514" endtime="20201117 14:40:46.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.513" endtime="20201117 14:40:46.303"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.306" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.314" endtime="20201117 14:40:46.331"></status>
</kw>
<msg timestamp="20201117 14:40:46.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.312" endtime="20201117 14:40:46.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.333" endtime="20201117 14:40:46.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.335" endtime="20201117 14:40:46.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.310" endtime="20201117 14:40:46.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.307" endtime="20201117 14:40:46.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.345" endtime="20201117 14:40:46.630"></status>
</kw>
<msg timestamp="20201117 14:40:46.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.343" endtime="20201117 14:40:46.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.634" endtime="20201117 14:40:46.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.643" endtime="20201117 14:40:46.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.340" endtime="20201117 14:40:46.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.338" endtime="20201117 14:40:46.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:46.650" level="INFO">${RESULT} = [{'time': 0.022450819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.022479833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:46.646" endtime="20201117 14:40:46.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:46.664" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:46.651" endtime="20201117 14:40:46.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.668" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:46.667" endtime="20201117 14:40:46.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.671" level="INFO">VALUE: [1.3833000000001289e-05, 1.3680000000002024e-05, 1.4111000000000679e-05, 1.3861000000000429e-05, 1.4429999999999304e-05, 1.3611000000000179e-05, 1.3583000000001039e-05, 1.3708000000001164e-05, 1.3721999999997264e-05, 1.3861000000000429e-05, 1.3986000000000554e-05, 1.4110999999997209e-05, 1.4277999999999513e-05, 1.4000000000000123e-05, 1.3929999999998804e-05, 1.3666999999998458e-05, 1.3917000000002178e-05, 1.409699999999764e-05, 1.4292000000002553e-05, 1.4042000000002303e-05, 1.3973000000000457e-05, 1.4195000000001567e-05, 1.3805999999998153e-05, 1.3916999999998708e-05, 1.4402999999999638e-05, 1.4027999999999263e-05, 1.3624999999999748e-05, 1.4194000000002094e-05, 1.4375000000000498e-05, 1.4417000000002678e-05, 1.4347000000001359e-05, 1.4221999999997764e-05, 1.4471999999998014e-05, 1.3665999999998985e-05, 1.3667000000001928e-05, 1.3695000000001067e-05, 1.4473000000000957e-05, 1.3930999999998278e-05, 1.3723000000000207e-05, 1.4000000000000123e-05, 1.4473000000000957e-05, 1.4348000000000832e-05, 1.4000000000000123e-05, 1.4277999999999513e-05, 1.3874999999999998e-05, 1.3987000000000027e-05, 1.3665999999998985e-05, 1.4514000000000193e-05, 1.3943999999998374e-05, 1.4098000000000582e-05]</msg>
<status status="PASS" starttime="20201117 14:40:46.669" endtime="20201117 14:40:46.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.665" endtime="20201117 14:40:46.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.674" endtime="20201117 14:40:46.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.677" endtime="20201117 14:40:46.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.676" endtime="20201117 14:40:46.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.672" endtime="20201117 14:40:46.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.306" endtime="20201117 14:40:46.698"></status>
</kw>
<msg timestamp="20201117 14:40:46.698" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.706" endtime="20201117 14:40:46.724"></status>
</kw>
<msg timestamp="20201117 14:40:46.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.705" endtime="20201117 14:40:46.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.725" endtime="20201117 14:40:46.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.728" endtime="20201117 14:40:46.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.702" endtime="20201117 14:40:46.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.700" endtime="20201117 14:40:46.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.738" endtime="20201117 14:40:47.022"></status>
</kw>
<msg timestamp="20201117 14:40:47.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019037444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019051639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.737" endtime="20201117 14:40:47.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019037444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019051639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.026" endtime="20201117 14:40:47.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.035" endtime="20201117 14:40:47.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.734" endtime="20201117 14:40:47.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.732" endtime="20201117 14:40:47.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.041" level="INFO">${RESULT} = [{'time': 0.019051639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4194999999998098e-05, 'source_diff': 1.4194999999998098e-05}, {'time': 0.019080625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:47.038" endtime="20201117 14:40:47.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.054" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:47.042" endtime="20201117 14:40:47.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.059" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.058" endtime="20201117 14:40:47.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.061" level="INFO">VALUE: [1.4194999999998098e-05, 1.4416999999999208e-05, 1.383299999999782e-05, 1.3902999999999138e-05, 1.3680000000002024e-05, 1.3541999999998333e-05, 1.4111000000000679e-05, 1.3915999999999235e-05, 1.3861000000000429e-05, 1.3917000000002178e-05, 1.3667000000001928e-05, 1.4347000000001359e-05, 1.3861000000000429e-05, 1.4389000000000068e-05, 1.4208000000001664e-05, 1.4042000000002303e-05, 1.4194999999998098e-05, 1.3806000000001623e-05, 1.3958000000001414e-05, 1.4209000000001137e-05, 1.4013999999999693e-05, 1.4112000000000152e-05, 1.4180999999998528e-05, 1.4249999999996904e-05, 1.3723000000000207e-05, 1.3917000000002178e-05, 1.4361000000000929e-05, 1.3679999999998554e-05, 1.4137999999996875e-05, 1.4499999999997154e-05, 1.3611999999999652e-05, 1.3985999999997084e-05, 1.4208999999997668e-05, 1.3665999999998985e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.4472000000001484e-05, 1.4250000000000373e-05, 1.380499999999868e-05, 1.429099999999961e-05, 1.40689999999985e-05, 1.4458000000001914e-05, 1.3597000000000609e-05, 1.4111000000000679e-05, 1.405499999999893e-05, 1.352699999999929e-05, 1.4179999999999054e-05, 1.3665999999998985e-05, 1.3568999999998e-05, 1.3597000000000609e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.060" endtime="20201117 14:40:47.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.055" endtime="20201117 14:40:47.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.064" endtime="20201117 14:40:47.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.068" endtime="20201117 14:40:47.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.066" endtime="20201117 14:40:47.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.063" endtime="20201117 14:40:47.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.699" endtime="20201117 14:40:47.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.304" endtime="20201117 14:40:47.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.304" endtime="20201117 14:40:47.089"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.091" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.099" endtime="20201117 14:40:47.116"></status>
</kw>
<msg timestamp="20201117 14:40:47.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.098" endtime="20201117 14:40:47.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.117" endtime="20201117 14:40:47.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.120" endtime="20201117 14:40:47.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.095" endtime="20201117 14:40:47.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.093" endtime="20201117 14:40:47.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.130" endtime="20201117 14:40:47.415"></status>
</kw>
<msg timestamp="20201117 14:40:47.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.128" endtime="20201117 14:40:47.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.419" endtime="20201117 14:40:47.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.427" endtime="20201117 14:40:47.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.126" endtime="20201117 14:40:47.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.124" endtime="20201117 14:40:47.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.434" level="INFO">${RESULT} = [{'time': 0.022091194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3902000000003134e-05, 'source_diff': 1.3902000000003134e-05}, {'time': 0.022119181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:47.431" endtime="20201117 14:40:47.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.447" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:47.435" endtime="20201117 14:40:47.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.452" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.451" endtime="20201117 14:40:47.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.454" level="INFO">VALUE: [1.3902000000003134e-05, 1.4431000000002248e-05, 1.4042000000002303e-05, 1.4097999999997113e-05, 1.405499999999893e-05, 1.4165999999999485e-05, 1.429099999999961e-05, 1.4125000000000248e-05, 1.3666000000002454e-05, 1.3680000000002024e-05, 1.4415999999999735e-05, 1.3665999999998985e-05, 1.4083000000001539e-05, 1.3777999999999013e-05, 1.4236000000000804e-05, 1.4458000000001914e-05, 1.355499999999843e-05, 1.4333000000001789e-05, 1.3624999999999748e-05, 1.4389000000000068e-05, 1.4111000000000679e-05, 1.3986000000000554e-05, 1.3902999999999138e-05, 1.4360999999997459e-05, 1.3722000000000734e-05, 1.4416999999999208e-05, 1.3624999999999748e-05, 1.3736000000000304e-05, 1.4000000000000123e-05, 1.3652999999998888e-05, 1.3902999999999138e-05, 1.4361000000000929e-05, 1.3763999999999443e-05, 1.3707999999997694e-05, 1.4277999999999513e-05, 1.4403000000003108e-05, 1.3861000000000429e-05, 1.3541999999998333e-05, 1.4291999999999083e-05, 1.4486000000001054e-05, 1.4166999999998958e-05, 1.4055999999998403e-05, 1.409699999999764e-05, 1.4485999999997584e-05, 1.4333999999997793e-05, 1.4277999999999513e-05, 1.4250000000000373e-05, 1.4389000000000068e-05, 1.3638999999999318e-05, 1.4486000000001054e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.453" endtime="20201117 14:40:47.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.448" endtime="20201117 14:40:47.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.457" endtime="20201117 14:40:47.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.461" endtime="20201117 14:40:47.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.459" endtime="20201117 14:40:47.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.456" endtime="20201117 14:40:47.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.092" endtime="20201117 14:40:47.481"></status>
</kw>
<msg timestamp="20201117 14:40:47.481" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.490" endtime="20201117 14:40:47.507"></status>
</kw>
<msg timestamp="20201117 14:40:47.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.488" endtime="20201117 14:40:47.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.509" endtime="20201117 14:40:47.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.511" endtime="20201117 14:40:47.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.486" endtime="20201117 14:40:47.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.484" endtime="20201117 14:40:47.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.521" endtime="20201117 14:40:47.807"></status>
</kw>
<msg timestamp="20201117 14:40:47.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.519" endtime="20201117 14:40:47.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.811" endtime="20201117 14:40:47.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.819" endtime="20201117 14:40:47.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.517" endtime="20201117 14:40:47.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.515" endtime="20201117 14:40:47.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.826" level="INFO">${RESULT} = [{'time': 0.019572333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.019599361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:47.823" endtime="20201117 14:40:47.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.839" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:47.827" endtime="20201117 14:40:47.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.844" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.843" endtime="20201117 14:40:47.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.846" level="INFO">VALUE: [1.3749999999999873e-05, 1.3874999999999998e-05, 1.3679999999998554e-05, 1.4500000000000624e-05, 1.4402999999999638e-05, 1.4360999999997459e-05, 1.4165999999999485e-05, 1.3610999999996709e-05, 1.4193999999998624e-05, 1.3861000000000429e-05, 1.4125000000000248e-05, 1.3597000000000609e-05, 1.3986000000000554e-05, 1.4084000000001012e-05, 1.4000000000000123e-05, 1.4472000000001484e-05, 1.4138999999999818e-05, 1.3763999999999443e-05, 1.4235999999997334e-05, 1.3638999999999318e-05, 1.3624999999999748e-05, 1.4417000000002678e-05, 1.4055999999998403e-05, 1.4167000000002428e-05, 1.3916999999998708e-05, 1.4041999999998833e-05, 1.4222000000001234e-05, 1.3861000000000429e-05, 1.3736000000000304e-05, 1.3624999999999748e-05, 1.3749999999999873e-05, 1.4041000000002829e-05, 1.3834000000000762e-05, 1.3986000000000554e-05, 1.3791999999998583e-05, 1.3916999999998708e-05, 1.4138999999999818e-05, 1.4193999999998624e-05, 1.3611999999999652e-05, 1.3584000000000512e-05, 1.4291999999999083e-05, 1.3681000000001498e-05, 1.3513999999999193e-05, 1.379099999999911e-05, 1.3638999999999318e-05, 1.426300000000047e-05, 1.3666999999998458e-05, 1.4429999999999304e-05, 1.4320000000001692e-05, 1.380499999999868e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.845" endtime="20201117 14:40:47.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.840" endtime="20201117 14:40:47.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.849" endtime="20201117 14:40:47.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.853" endtime="20201117 14:40:47.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.852" endtime="20201117 14:40:47.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.848" endtime="20201117 14:40:47.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.482" endtime="20201117 14:40:47.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.090" endtime="20201117 14:40:47.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.089" endtime="20201117 14:40:47.874"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.877" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.885" endtime="20201117 14:40:47.902"></status>
</kw>
<msg timestamp="20201117 14:40:47.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.883" endtime="20201117 14:40:47.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.904" endtime="20201117 14:40:47.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.906" endtime="20201117 14:40:47.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.881" endtime="20201117 14:40:47.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.878" endtime="20201117 14:40:47.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.915" endtime="20201117 14:40:48.202"></status>
</kw>
<msg timestamp="20201117 14:40:48.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022460625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.914" endtime="20201117 14:40:48.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022460625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.206" endtime="20201117 14:40:48.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.215" endtime="20201117 14:40:48.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.911" endtime="20201117 14:40:48.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.909" endtime="20201117 14:40:48.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:48.221" level="INFO">${RESULT} = [{'time': 0.022460625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.022491639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:48.218" endtime="20201117 14:40:48.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:48.222" endtime="20201117 14:40:48.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.240" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.239" endtime="20201117 14:40:48.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.242" level="INFO">VALUE: [1.4153000000002858e-05, 1.4431000000002248e-05, 1.4069999999997973e-05, 1.3583000000001039e-05, 1.3930999999998278e-05, 1.3556000000001373e-05, 1.383299999999782e-05, 1.3528000000002233e-05, 1.4013999999999693e-05, 1.3556000000001373e-05, 1.3527999999998763e-05, 1.3611000000000179e-05, 1.3986000000000554e-05, 1.4277999999999513e-05, 1.3848000000000332e-05, 1.4486000000001054e-05, 1.4445000000001817e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3874999999999998e-05, 1.3916999999998708e-05, 1.4166000000002954e-05, 1.4402999999999638e-05, 1.4429999999999304e-05, 1.4473000000000957e-05, 1.4249999999996904e-05, 1.4111000000000679e-05, 1.3929999999998804e-05, 1.352699999999929e-05, 1.4194000000002094e-05, 1.3958000000001414e-05, 1.3639000000002788e-05, 1.3819000000001719e-05, 1.3693999999998124e-05, 1.3833999999997293e-05, 1.3597000000000609e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4097000000001109e-05, 1.3986000000000554e-05, 1.381899999999825e-05, 1.4041999999998833e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3513999999999193e-05, 1.3569000000001469e-05, 1.3722000000000734e-05, 1.3944000000001844e-05, 1.3694000000001594e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.241" endtime="20201117 14:40:48.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.236" endtime="20201117 14:40:48.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.246" endtime="20201117 14:40:48.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.249" endtime="20201117 14:40:48.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.248" endtime="20201117 14:40:48.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.244" endtime="20201117 14:40:48.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.877" endtime="20201117 14:40:48.270"></status>
</kw>
<msg timestamp="20201117 14:40:48.270" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.278" endtime="20201117 14:40:48.295"></status>
</kw>
<msg timestamp="20201117 14:40:48.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.277" endtime="20201117 14:40:48.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.297" endtime="20201117 14:40:48.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.299" endtime="20201117 14:40:48.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.274" endtime="20201117 14:40:48.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.272" endtime="20201117 14:40:48.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.309" endtime="20201117 14:40:48.593"></status>
</kw>
<msg timestamp="20201117 14:40:48.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019088458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019102264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.307" endtime="20201117 14:40:48.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019088458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019102264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.597" endtime="20201117 14:40:48.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.605" endtime="20201117 14:40:48.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.305" endtime="20201117 14:40:48.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.303" endtime="20201117 14:40:48.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:48.612" level="INFO">${RESULT} = [{'time': 0.019102264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.01913025, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:40:48.608" endtime="20201117 14:40:48.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:48.613" endtime="20201117 14:40:48.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.629" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.628" endtime="20201117 14:40:48.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.632" level="INFO">VALUE: [1.3806000000001623e-05, 1.3903000000002608e-05, 1.3847000000000859e-05, 1.3805999999998153e-05, 1.4360999999997459e-05, 1.4291999999999083e-05, 1.3638999999999318e-05, 1.434699999999789e-05, 1.3985999999997084e-05, 1.4069999999997973e-05, 1.384699999999739e-05, 1.3847000000000859e-05, 1.4500000000000624e-05, 1.3931000000001748e-05, 1.3944999999997848e-05, 1.4417000000002678e-05, 1.4236000000000804e-05, 1.4027999999999263e-05, 1.3792000000002053e-05, 1.3611000000000179e-05, 1.4041999999998833e-05, 1.4084000000001012e-05, 1.3569999999997473e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.4041999999998833e-05, 1.3805000000002149e-05, 1.3596999999997139e-05, 1.3542000000001803e-05, 1.3986000000000554e-05, 1.4179999999999054e-05, 1.4500000000000624e-05, 1.3736000000000304e-05, 1.409699999999764e-05, 1.4263999999999943e-05, 1.4415999999999735e-05, 1.4222000000001234e-05, 1.4235999999997334e-05, 1.3708000000001164e-05, 1.4180000000002524e-05, 1.3555000000001899e-05, 1.4429999999999304e-05, 1.4000000000000123e-05, 1.3888999999999568e-05, 1.3749999999999873e-05, 1.4028000000002733e-05, 1.4207999999998194e-05, 1.4193999999998624e-05, 1.3528000000002233e-05, 1.4013999999999693e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.630" endtime="20201117 14:40:48.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.626" endtime="20201117 14:40:48.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.635" endtime="20201117 14:40:48.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.639" endtime="20201117 14:40:48.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.637" endtime="20201117 14:40:48.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.634" endtime="20201117 14:40:48.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.271" endtime="20201117 14:40:48.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.875" endtime="20201117 14:40:48.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.875" endtime="20201117 14:40:48.660"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.662" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.670" endtime="20201117 14:40:48.686"></status>
</kw>
<msg timestamp="20201117 14:40:48.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.669" endtime="20201117 14:40:48.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.688" endtime="20201117 14:40:48.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.691" endtime="20201117 14:40:48.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.666" endtime="20201117 14:40:48.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.664" endtime="20201117 14:40:48.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.699" endtime="20201117 14:40:48.985"></status>
</kw>
<msg timestamp="20201117 14:40:48.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021706208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:40:48.698" endtime="20201117 14:40:48.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021706208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02172, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:40:48.989" endtime="20201117 14:40:48.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.997" endtime="20201117 14:40:48.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.695" endtime="20201117 14:40:48.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.694" endtime="20201117 14:40:49.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.004" level="INFO">${RESULT} = [{'time': 0.02172, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791999999998583e-05, 'source_diff': 1.3791999999998583e-05}, {'time': 0.021747042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:49.000" endtime="20201117 14:40:49.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:49.005" endtime="20201117 14:40:49.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.021" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.020" endtime="20201117 14:40:49.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.029" level="INFO">VALUE: [1.3791999999998583e-05, 1.4473000000000957e-05, 1.3806000000001623e-05, 1.3805999999998153e-05, 1.3902999999999138e-05, 1.3513999999999193e-05, 1.4027999999999263e-05, 1.4389000000000068e-05, 1.408299999999807e-05, 1.4445000000001817e-05, 1.4207999999998194e-05, 1.3986000000000554e-05, 1.3792000000002053e-05, 1.4180999999998528e-05, 1.3847000000000859e-05, 1.3638999999999318e-05, 1.3860999999996959e-05, 1.3792000000002053e-05, 1.3721999999997264e-05, 1.4166999999998958e-05, 1.4055999999998403e-05, 1.4181000000001998e-05, 1.4263999999999943e-05, 1.431899999999875e-05, 1.4347000000001359e-05, 1.4249999999996904e-05, 1.3695000000001067e-05, 1.3736999999999777e-05, 1.3527999999998763e-05, 1.4362000000000402e-05, 1.4166999999998958e-05, 1.355499999999843e-05, 1.3805000000002149e-05, 1.4471999999998014e-05, 1.4083000000001539e-05, 1.4291999999999083e-05, 1.4429999999999304e-05, 1.4388000000000595e-05, 1.4444000000002344e-05, 1.4347000000001359e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.4361000000000929e-05, 1.427700000000004e-05, 1.429099999999961e-05, 1.3915999999999235e-05, 1.352699999999929e-05, 1.4180000000002524e-05, 1.3763999999999443e-05, 1.3527999999998763e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.023" endtime="20201117 14:40:49.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.018" endtime="20201117 14:40:49.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.032" endtime="20201117 14:40:49.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.035" endtime="20201117 14:40:49.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.034" endtime="20201117 14:40:49.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.030" endtime="20201117 14:40:49.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.663" endtime="20201117 14:40:49.056"></status>
</kw>
<msg timestamp="20201117 14:40:49.056" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.064" endtime="20201117 14:40:49.082"></status>
</kw>
<msg timestamp="20201117 14:40:49.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.063" endtime="20201117 14:40:49.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.083" endtime="20201117 14:40:49.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.086" endtime="20201117 14:40:49.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.060" endtime="20201117 14:40:49.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.058" endtime="20201117 14:40:49.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.096" endtime="20201117 14:40:49.380"></status>
</kw>
<msg timestamp="20201117 14:40:49.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019105333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019119792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.094" endtime="20201117 14:40:49.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019105333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019119792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.384" endtime="20201117 14:40:49.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.392" endtime="20201117 14:40:49.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.092" endtime="20201117 14:40:49.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.090" endtime="20201117 14:40:49.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.399" level="INFO">${RESULT} = [{'time': 0.019119792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4459000000001387e-05, 'source_diff': 1.4459000000001387e-05}, {'time': 0.019146778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:49.396" endtime="20201117 14:40:49.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:49.400" endtime="20201117 14:40:49.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.417" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.416" endtime="20201117 14:40:49.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.419" level="INFO">VALUE: [1.4459000000001387e-05, 1.3763999999999443e-05, 1.4097000000001109e-05, 1.4416999999999208e-05, 1.3958999999997418e-05, 1.4415999999999735e-05, 1.4000000000000123e-05, 1.3598000000000082e-05, 1.3652999999998888e-05, 1.3611000000000179e-05, 1.3861999999999902e-05, 1.4375000000000498e-05, 1.351299999999972e-05, 1.4347000000001359e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3527000000002759e-05, 1.3861000000000429e-05, 1.4179999999999054e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.4250000000000373e-05, 1.4402000000000165e-05, 1.3499999999999623e-05, 1.4402999999999638e-05, 1.3694000000001594e-05, 1.4250000000000373e-05, 1.380499999999868e-05, 1.4041000000002829e-05, 1.355499999999843e-05, 1.4110999999997209e-05, 1.4125000000000248e-05, 1.3665999999998985e-05, 1.4000000000000123e-05, 1.4042000000002303e-05, 1.3736000000000304e-05, 1.3611000000000179e-05, 1.431899999999875e-05, 1.3541999999998333e-05, 1.3917000000002178e-05, 1.4389000000000068e-05, 1.4194999999998098e-05, 1.3834000000000762e-05, 1.3820000000001192e-05, 1.4111000000000679e-05, 1.4222000000001234e-05, 1.4486000000001054e-05, 1.4277999999999513e-05, 1.4000000000000123e-05, 1.3570000000000942e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.418" endtime="20201117 14:40:49.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.413" endtime="20201117 14:40:49.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.423" endtime="20201117 14:40:49.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.426" endtime="20201117 14:40:49.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.424" endtime="20201117 14:40:49.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.421" endtime="20201117 14:40:49.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.057" endtime="20201117 14:40:49.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.661" endtime="20201117 14:40:49.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.660" endtime="20201117 14:40:49.447"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.449" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.457" endtime="20201117 14:40:49.476"></status>
</kw>
<msg timestamp="20201117 14:40:49.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.456" endtime="20201117 14:40:49.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.477" endtime="20201117 14:40:49.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.480" endtime="20201117 14:40:49.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.453" endtime="20201117 14:40:49.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.451" endtime="20201117 14:40:49.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.489" endtime="20201117 14:40:49.774"></status>
</kw>
<msg timestamp="20201117 14:40:49.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.487" endtime="20201117 14:40:49.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.779" endtime="20201117 14:40:49.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.787" endtime="20201117 14:40:49.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.485" endtime="20201117 14:40:49.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.483" endtime="20201117 14:40:49.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.794" level="INFO">${RESULT} = [{'time': 0.022444375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.022474375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:49.791" endtime="20201117 14:40:49.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:49.795" endtime="20201117 14:40:49.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.814" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.813" endtime="20201117 14:40:49.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.816" level="INFO">VALUE: [1.3638999999999318e-05, 1.3986000000000554e-05, 1.4277999999999513e-05, 1.4125000000000248e-05, 1.4166999999998958e-05, 1.4360999999997459e-05, 1.454099999999986e-05, 1.4347000000001359e-05, 1.4277999999999513e-05, 1.4306000000002123e-05, 1.3569999999997473e-05, 1.3611000000000179e-05, 1.3971999999997514e-05, 1.3542000000001803e-05, 1.3624999999999748e-05, 1.4222000000001234e-05, 1.3555999999997903e-05, 1.3805999999998153e-05, 1.3542000000001803e-05, 1.3542000000001803e-05, 1.3973000000000457e-05, 1.3611000000000179e-05, 1.4041999999998833e-05, 1.4542000000002803e-05, 1.4361000000000929e-05, 1.4305999999998653e-05, 1.4360999999997459e-05, 1.4361000000000929e-05, 1.3861000000000429e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.4291999999999083e-05, 1.3694000000001594e-05, 1.3722999999996738e-05, 1.4486000000001054e-05, 1.4319000000002219e-05, 1.380499999999868e-05, 1.3722000000000734e-05, 1.40689999999985e-05, 1.4291999999999083e-05, 1.3722000000000734e-05, 1.4458000000001914e-05, 1.4249999999996904e-05, 1.3611000000000179e-05, 1.4165999999999485e-05, 1.4097000000001109e-05, 1.405499999999893e-05, 1.3957999999997944e-05, 1.429099999999961e-05, 1.4000000000000123e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.815" endtime="20201117 14:40:49.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.810" endtime="20201117 14:40:49.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.819" endtime="20201117 14:40:49.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.823" endtime="20201117 14:40:49.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.821" endtime="20201117 14:40:49.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.818" endtime="20201117 14:40:49.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.450" endtime="20201117 14:40:49.843"></status>
</kw>
<msg timestamp="20201117 14:40:49.844" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.852" endtime="20201117 14:40:49.869"></status>
</kw>
<msg timestamp="20201117 14:40:49.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.850" endtime="20201117 14:40:49.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.870" endtime="20201117 14:40:49.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.873" endtime="20201117 14:40:49.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.848" endtime="20201117 14:40:49.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.846" endtime="20201117 14:40:49.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.883" endtime="20201117 14:40:50.168"></status>
</kw>
<msg timestamp="20201117 14:40:50.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019166514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019180639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.881" endtime="20201117 14:40:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019166514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019180639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.172" endtime="20201117 14:40:50.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.181" endtime="20201117 14:40:50.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.878" endtime="20201117 14:40:50.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.877" endtime="20201117 14:40:50.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.188" level="INFO">${RESULT} = [{'time': 0.019180639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.019209708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.185" endtime="20201117 14:40:50.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.201" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:50.189" endtime="20201117 14:40:50.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.206" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.205" endtime="20201117 14:40:50.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.208" level="INFO">VALUE: [1.4125000000000248e-05, 1.379099999999911e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.3986000000000554e-05, 1.3611000000000179e-05, 1.3805999999998153e-05, 1.3916999999998708e-05, 1.3597000000000609e-05, 1.3721999999997264e-05, 1.3792000000002053e-05, 1.3624999999999748e-05, 1.3680999999998028e-05, 1.4000000000000123e-05, 1.4111000000000679e-05, 1.4445000000001817e-05, 1.3624999999999748e-05, 1.4000000000000123e-05, 1.4416999999999208e-05, 1.4291999999999083e-05, 1.4250000000000373e-05, 1.4056000000001873e-05, 1.4070000000001442e-05, 1.4250000000000373e-05, 1.3527999999998763e-05, 1.3665999999998985e-05, 1.4472999999997488e-05, 1.4250000000000373e-05, 1.384699999999739e-05, 1.3916999999998708e-05, 1.3848000000000332e-05, 1.4277999999999513e-05, 1.3679999999998554e-05, 1.427700000000004e-05, 1.3680000000002024e-05, 1.4055000000002399e-05, 1.401300000000022e-05, 1.3624999999999748e-05, 1.4319000000002219e-05, 1.4165999999999485e-05, 1.3915999999999235e-05, 1.4250000000000373e-05, 1.3721999999997264e-05, 1.3736000000000304e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.4429999999999304e-05, 1.4069999999997973e-05, 1.3652999999998888e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.207" endtime="20201117 14:40:50.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.202" endtime="20201117 14:40:50.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.211" endtime="20201117 14:40:50.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.215" endtime="20201117 14:40:50.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.213" endtime="20201117 14:40:50.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.209" endtime="20201117 14:40:50.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.844" endtime="20201117 14:40:50.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.448" endtime="20201117 14:40:50.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.447" endtime="20201117 14:40:50.236"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.238" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.246" endtime="20201117 14:40:50.264"></status>
</kw>
<msg timestamp="20201117 14:40:50.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.245" endtime="20201117 14:40:50.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.266" endtime="20201117 14:40:50.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.268" endtime="20201117 14:40:50.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.242" endtime="20201117 14:40:50.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.240" endtime="20201117 14:40:50.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.278" endtime="20201117 14:40:50.564"></status>
</kw>
<msg timestamp="20201117 14:40:50.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.276" endtime="20201117 14:40:50.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.568" endtime="20201117 14:40:50.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.576" endtime="20201117 14:40:50.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.274" endtime="20201117 14:40:50.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.271" endtime="20201117 14:40:50.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.583" level="INFO">${RESULT} = [{'time': 0.021652833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.021679819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.579" endtime="20201117 14:40:50.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:50.584" endtime="20201117 14:40:50.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.601" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.600" endtime="20201117 14:40:50.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.603" level="INFO">VALUE: [1.3972000000000984e-05, 1.4000000000000123e-05, 1.3749999999999873e-05, 1.4179999999999054e-05, 1.3722000000000734e-05, 1.402699999999979e-05, 1.4375000000000498e-05, 1.4429999999999304e-05, 1.4165999999999485e-05, 1.4179999999999054e-05, 1.4486000000001054e-05, 1.3930000000002274e-05, 1.3611000000000179e-05, 1.434699999999789e-05, 1.4097000000001109e-05, 1.3736000000000304e-05, 1.3929999999998804e-05, 1.409699999999764e-05, 1.40689999999985e-05, 1.4389000000000068e-05, 1.3596999999997139e-05, 1.3792000000002053e-05, 1.4500000000000624e-05, 1.3584000000000512e-05, 1.3972000000000984e-05, 1.3652999999998888e-05, 1.3570000000000942e-05, 1.4221999999997764e-05, 1.4125000000000248e-05, 1.4084000000001012e-05, 1.4097000000001109e-05, 1.4306000000002123e-05, 1.4056000000001873e-05, 1.3791999999998583e-05, 1.4111000000000679e-05, 1.3681000000001498e-05, 1.3987000000000027e-05, 1.4152999999999388e-05, 1.3541999999998333e-05, 1.3777999999999013e-05, 1.4181000000001998e-05, 1.4375000000000498e-05, 1.4223000000000707e-05, 1.4222000000001234e-05, 1.4027999999999263e-05, 1.3611000000000179e-05, 1.4306000000002123e-05, 1.4000000000000123e-05, 1.4207999999998194e-05, 1.4223000000000707e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.602" endtime="20201117 14:40:50.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.597" endtime="20201117 14:40:50.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.606" endtime="20201117 14:40:50.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.609" endtime="20201117 14:40:50.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.608" endtime="20201117 14:40:50.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.605" endtime="20201117 14:40:50.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.239" endtime="20201117 14:40:50.630"></status>
</kw>
<msg timestamp="20201117 14:40:50.630" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.638" endtime="20201117 14:40:50.656"></status>
</kw>
<msg timestamp="20201117 14:40:50.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.637" endtime="20201117 14:40:50.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.657" endtime="20201117 14:40:50.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.660" endtime="20201117 14:40:50.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.634" endtime="20201117 14:40:50.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.632" endtime="20201117 14:40:50.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.670" endtime="20201117 14:40:50.955"></status>
</kw>
<msg timestamp="20201117 14:40:50.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019144569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019158792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.668" endtime="20201117 14:40:50.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019144569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019158792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.959" endtime="20201117 14:40:50.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.968" endtime="20201117 14:40:50.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.666" endtime="20201117 14:40:50.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.664" endtime="20201117 14:40:50.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.974" level="INFO">${RESULT} = [{'time': 0.019158792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4223000000000707e-05, 'source_diff': 1.4223000000000707e-05}, {'time': 0.019188833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.971" endtime="20201117 14:40:50.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.987" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:50.975" endtime="20201117 14:40:50.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.992" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.991" endtime="20201117 14:40:50.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.994" level="INFO">VALUE: [1.4223000000000707e-05, 1.4402000000000165e-05, 1.4250000000000373e-05, 1.4416999999999208e-05, 1.3694999999997598e-05, 1.3902999999999138e-05, 1.4098000000000582e-05, 1.3944000000001844e-05, 1.4111000000000679e-05, 1.3736000000000304e-05, 1.3679999999998554e-05, 1.3736999999999777e-05, 1.3638999999999318e-05, 1.3986000000000554e-05, 1.3847000000000859e-05, 1.376299999999997e-05, 1.3861000000000429e-05, 1.401300000000022e-05, 1.3972000000000984e-05, 1.3901999999999665e-05, 1.429099999999961e-05, 1.4347000000001359e-05, 1.4165999999999485e-05, 1.3722000000000734e-05, 1.3763999999999443e-05, 1.4236000000000804e-05, 1.3652999999998888e-05, 1.430499999999918e-05, 1.4486000000001054e-05, 1.4193999999998624e-05, 1.4221999999997764e-05, 1.3736000000000304e-05, 1.3528000000002233e-05, 1.4361000000000929e-05, 1.4277999999999513e-05, 1.4430999999998778e-05, 1.3833000000001289e-05, 1.4375000000000498e-05, 1.3695000000001067e-05, 1.4195000000001567e-05, 1.4362000000000402e-05, 1.3555999999997903e-05, 1.3902999999999138e-05, 1.4221999999997764e-05, 1.4291999999999083e-05, 1.3931000000001748e-05, 1.3541999999998333e-05, 1.3722000000000734e-05, 1.3902999999999138e-05, 1.4375000000000498e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.993" endtime="20201117 14:40:50.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.988" endtime="20201117 14:40:50.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.997" endtime="20201117 14:40:50.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.001" endtime="20201117 14:40:51.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.999" endtime="20201117 14:40:51.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.996" endtime="20201117 14:40:51.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.631" endtime="20201117 14:40:51.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.237" endtime="20201117 14:40:51.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.236" endtime="20201117 14:40:51.022"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.024" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.033" endtime="20201117 14:40:51.051"></status>
</kw>
<msg timestamp="20201117 14:40:51.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.031" endtime="20201117 14:40:51.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.052" endtime="20201117 14:40:51.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.055" endtime="20201117 14:40:51.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.029" endtime="20201117 14:40:51.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.026" endtime="20201117 14:40:51.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.064" endtime="20201117 14:40:51.349"></status>
</kw>
<msg timestamp="20201117 14:40:51.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.062" endtime="20201117 14:40:51.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.353" endtime="20201117 14:40:51.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.361" endtime="20201117 14:40:51.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.060" endtime="20201117 14:40:51.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.058" endtime="20201117 14:40:51.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.368" level="INFO">${RESULT} = [{'time': 0.022950944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4111000000000679e-05, 'source_diff': 1.4111000000000679e-05}, {'time': 0.022978944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:51.364" endtime="20201117 14:40:51.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:51.369" endtime="20201117 14:40:51.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.386" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.385" endtime="20201117 14:40:51.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.389" level="INFO">VALUE: [1.4111000000000679e-05, 1.427700000000004e-05, 1.4360999999997459e-05, 1.4305999999998653e-05, 1.427700000000004e-05, 1.4208000000001664e-05, 1.4486000000001054e-05, 1.3639000000002788e-05, 1.3945000000001317e-05, 1.4041000000002829e-05, 1.3916999999998708e-05, 1.4305999999998653e-05, 1.4472000000001484e-05, 1.3680000000002024e-05, 1.4375000000000498e-05, 1.4041999999998833e-05, 1.3667000000001928e-05, 1.4430999999998778e-05, 1.3916999999998708e-05, 1.4444999999998348e-05, 1.4111000000000679e-05, 1.4167000000002428e-05, 1.4402999999999638e-05, 1.3806000000001623e-05, 1.4430999999998778e-05, 1.4306000000002123e-05, 1.3874999999999998e-05, 1.4402999999999638e-05, 1.4221999999997764e-05, 1.3638999999999318e-05, 1.4471999999998014e-05, 1.4097000000001109e-05, 1.4222000000001234e-05, 1.3972000000000984e-05, 1.4306000000002123e-05, 1.3721999999997264e-05, 1.4416999999999208e-05, 1.4291999999999083e-05, 1.434699999999789e-05, 1.3513999999999193e-05, 1.3624999999999748e-05, 1.4166999999998958e-05, 1.3958999999997418e-05, 1.3901999999999665e-05, 1.3888999999999568e-05, 1.4375000000000498e-05, 1.4277999999999513e-05, 1.3679999999998554e-05, 1.3833000000001289e-05, 1.377699999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.387" endtime="20201117 14:40:51.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.383" endtime="20201117 14:40:51.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.392" endtime="20201117 14:40:51.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.395" endtime="20201117 14:40:51.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.394" endtime="20201117 14:40:51.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.390" endtime="20201117 14:40:51.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.025" endtime="20201117 14:40:51.416"></status>
</kw>
<msg timestamp="20201117 14:40:51.416" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.425" endtime="20201117 14:40:51.442"></status>
</kw>
<msg timestamp="20201117 14:40:51.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.423" endtime="20201117 14:40:51.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.444" endtime="20201117 14:40:51.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.446" endtime="20201117 14:40:51.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.420" endtime="20201117 14:40:51.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.418" endtime="20201117 14:40:51.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.456" endtime="20201117 14:40:51.739"></status>
</kw>
<msg timestamp="20201117 14:40:51.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01909175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019105806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:51.455" endtime="20201117 14:40:51.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01909175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019105806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:51.743" endtime="20201117 14:40:51.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.752" endtime="20201117 14:40:51.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.452" endtime="20201117 14:40:51.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.450" endtime="20201117 14:40:51.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.758" level="INFO">${RESULT} = [{'time': 0.019105806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4055999999998403e-05, 'source_diff': 1.4055999999998403e-05}, {'time': 0.019132806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:51.755" endtime="20201117 14:40:51.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.771" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:51.759" endtime="20201117 14:40:51.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.776" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.775" endtime="20201117 14:40:51.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.778" level="INFO">VALUE: [1.4055999999998403e-05, 1.4180999999998528e-05, 1.3806000000001623e-05, 1.4472000000001484e-05, 1.3736000000000304e-05, 1.405499999999893e-05, 1.402699999999979e-05, 1.3763999999999443e-05, 1.4221999999997764e-05, 1.4013999999999693e-05, 1.3778000000002483e-05, 1.3639000000002788e-05, 1.4250000000000373e-05, 1.380499999999868e-05, 1.3915999999999235e-05, 1.4179999999999054e-05, 1.3763999999999443e-05, 1.3694000000001594e-05, 1.4513999999996724e-05, 1.4429999999999304e-05, 1.4221999999997764e-05, 1.3971999999997514e-05, 1.3749999999999873e-05, 1.3861000000000429e-05, 1.3722000000000734e-05, 1.3556000000001373e-05, 1.40689999999985e-05, 1.4291999999999083e-05, 1.3736000000000304e-05, 1.4055999999998403e-05, 1.3528000000002233e-05, 1.4375000000000498e-05, 1.4167000000002428e-05, 1.3652999999998888e-05, 1.4348000000000832e-05, 1.3624999999999748e-05, 1.3805999999998153e-05, 1.4180999999998528e-05, 1.4013999999999693e-05, 1.4097000000001109e-05, 1.4389000000000068e-05, 1.4458999999997918e-05, 1.4041999999998833e-05, 1.3972999999996988e-05, 1.4097000000001109e-05, 1.4167000000002428e-05, 1.4374999999997029e-05, 1.4193999999998624e-05, 1.4487000000000527e-05, 1.408299999999807e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.777" endtime="20201117 14:40:51.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.772" endtime="20201117 14:40:51.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.782" endtime="20201117 14:40:51.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.785" endtime="20201117 14:40:51.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.784" endtime="20201117 14:40:51.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.780" endtime="20201117 14:40:51.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.417" endtime="20201117 14:40:51.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.023" endtime="20201117 14:40:51.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.022" endtime="20201117 14:40:51.806"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.809" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.817" endtime="20201117 14:40:51.834"></status>
</kw>
<msg timestamp="20201117 14:40:51.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.815" endtime="20201117 14:40:51.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.836" endtime="20201117 14:40:51.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.838" endtime="20201117 14:40:51.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.813" endtime="20201117 14:40:51.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.810" endtime="20201117 14:40:51.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.847" endtime="20201117 14:40:52.133"></status>
</kw>
<msg timestamp="20201117 14:40:52.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.846" endtime="20201117 14:40:52.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.137" endtime="20201117 14:40:52.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.145" endtime="20201117 14:40:52.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.843" endtime="20201117 14:40:52.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.841" endtime="20201117 14:40:52.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.154" level="INFO">${RESULT} = [{'time': 0.021611847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.021639847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:52.148" endtime="20201117 14:40:52.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.184" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:52.156" endtime="20201117 14:40:52.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.194" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.191" endtime="20201117 14:40:52.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.200" level="INFO">VALUE: [1.4375000000000498e-05, 1.3679999999998554e-05, 1.3985999999997084e-05, 1.384699999999739e-05, 1.3901999999999665e-05, 1.3722000000000734e-05, 1.4055999999998403e-05, 1.3972000000000984e-05, 1.4361000000000929e-05, 1.4415999999999735e-05, 1.409699999999764e-05, 1.4500000000000624e-05, 1.4305000000002649e-05, 1.4181000000001998e-05, 1.4305000000002649e-05, 1.4250000000000373e-05, 1.409699999999764e-05, 1.4070000000001442e-05, 1.3972000000000984e-05, 1.3638999999999318e-05, 1.4125000000000248e-05, 1.4347000000001359e-05, 1.4236000000000804e-05, 1.4402999999999638e-05, 1.4195000000001567e-05, 1.3749999999999873e-05, 1.3624999999999748e-05, 1.4138999999999818e-05, 1.4180999999998528e-05, 1.3874999999999998e-05, 1.4402999999999638e-05, 1.4471999999998014e-05, 1.3902999999999138e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.4125000000000248e-05, 1.3930000000002274e-05, 1.4083999999997543e-05, 1.3570000000000942e-05, 1.4223000000000707e-05, 1.4041999999998833e-05, 1.3514000000002663e-05, 1.3667000000001928e-05, 1.4472999999997488e-05, 1.3806000000001623e-05, 1.3597000000000609e-05, 1.4235999999997334e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.4193999999998624e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.196" endtime="20201117 14:40:52.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.186" endtime="20201117 14:40:52.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.206" endtime="20201117 14:40:52.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.214" endtime="20201117 14:40:52.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.210" endtime="20201117 14:40:52.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.203" endtime="20201117 14:40:52.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.809" endtime="20201117 14:40:52.239"></status>
</kw>
<msg timestamp="20201117 14:40:52.239" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.256" endtime="20201117 14:40:52.273"></status>
</kw>
<msg timestamp="20201117 14:40:52.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.254" endtime="20201117 14:40:52.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.275" endtime="20201117 14:40:52.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.277" endtime="20201117 14:40:52.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.249" endtime="20201117 14:40:52.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.244" endtime="20201117 14:40:52.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.287" endtime="20201117 14:40:52.573"></status>
</kw>
<msg timestamp="20201117 14:40:52.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031053792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.286" endtime="20201117 14:40:52.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031039847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031053792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.578" endtime="20201117 14:40:52.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.586" endtime="20201117 14:40:52.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.283" endtime="20201117 14:40:52.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.281" endtime="20201117 14:40:52.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.592" level="INFO">${RESULT} = [{'time': 0.031053792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3945000000001317e-05, 'source_diff': 1.3945000000001317e-05}, {'time': 0.031081778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:52.589" endtime="20201117 14:40:52.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:52.593" endtime="20201117 14:40:52.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.610" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.609" endtime="20201117 14:40:52.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.613" level="INFO">VALUE: [1.3945000000001317e-05, 1.3903000000002608e-05, 1.3624999999999748e-05, 1.4402999999999638e-05, 1.4083000000001539e-05, 1.4180999999998528e-05, 1.3848000000000332e-05, 1.3749999999999873e-05, 1.3987000000000027e-05, 1.4000000000000123e-05, 1.4291999999999083e-05, 1.3930999999994809e-05, 1.379099999999911e-05, 1.3723000000000207e-05, 1.379099999999911e-05, 1.4416000000003204e-05, 1.4471999999994545e-05, 1.3930000000002274e-05, 1.4486000000001054e-05, 1.3679999999995085e-05, 1.3986000000000554e-05, 1.3861000000003898e-05, 1.4361000000004398e-05, 1.3929999999995335e-05, 1.3722000000000734e-05, 1.4347000000004828e-05, 1.3972000000000984e-05, 1.3916000000002704e-05, 1.4250000000000373e-05, 1.404099999999936e-05, 1.3694000000001594e-05, 1.3917000000002178e-05, 1.3722000000000734e-05, 1.4458000000001914e-05, 1.3929999999995335e-05, 1.3819999999997723e-05, 1.3611000000003648e-05, 1.4110999999997209e-05, 1.3847000000004328e-05, 1.3736000000000304e-05, 1.3541999999998333e-05, 1.3722000000000734e-05, 1.409699999999764e-05, 1.3986000000000554e-05, 1.3624999999996279e-05, 1.3666999999994989e-05, 1.3555999999997903e-05, 1.4485999999994115e-05, 1.4236000000000804e-05, 1.3666999999994989e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.612" endtime="20201117 14:40:52.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.607" endtime="20201117 14:40:52.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.616" endtime="20201117 14:40:52.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.619" endtime="20201117 14:40:52.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.618" endtime="20201117 14:40:52.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.614" endtime="20201117 14:40:52.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.241" endtime="20201117 14:40:52.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.807" endtime="20201117 14:40:52.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.807" endtime="20201117 14:40:52.640"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.643" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.651" endtime="20201117 14:40:52.669"></status>
</kw>
<msg timestamp="20201117 14:40:52.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.649" endtime="20201117 14:40:52.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.671" endtime="20201117 14:40:52.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.674" endtime="20201117 14:40:52.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.647" endtime="20201117 14:40:52.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.645" endtime="20201117 14:40:52.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.682" endtime="20201117 14:40:52.971"></status>
</kw>
<msg timestamp="20201117 14:40:52.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.681" endtime="20201117 14:40:52.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.981" endtime="20201117 14:40:52.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.001" endtime="20201117 14:40:53.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.678" endtime="20201117 14:40:53.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.677" endtime="20201117 14:40:53.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.017" level="INFO">${RESULT} = [{'time': 0.022711569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.022741597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:53.009" endtime="20201117 14:40:53.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:53.019" endtime="20201117 14:40:53.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.061" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.059" endtime="20201117 14:40:53.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.065" level="INFO">VALUE: [1.4361000000000929e-05, 1.3652999999998888e-05, 1.3958000000001414e-05, 1.3874999999999998e-05, 1.3610999999996709e-05, 1.3944000000001844e-05, 1.3861000000000429e-05, 1.3597000000000609e-05, 1.3847000000000859e-05, 1.3611000000000179e-05, 1.383299999999782e-05, 1.3763999999999443e-05, 1.4000000000000123e-05, 1.4166999999998958e-05, 1.3555000000001899e-05, 1.4402999999999638e-05, 1.4208000000001664e-05, 1.4208999999997668e-05, 1.4291999999999083e-05, 1.3916999999998708e-05, 1.3792000000002053e-05, 1.3916999999998708e-05, 1.4486000000001054e-05, 1.4042000000002303e-05, 1.4056000000001873e-05, 1.4360999999997459e-05, 1.3681000000001498e-05, 1.3986000000000554e-05, 1.4402999999999638e-05, 1.3652999999998888e-05, 1.4445000000001817e-05, 1.3541999999998333e-05, 1.4027999999999263e-05, 1.3806000000001623e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3611000000000179e-05, 1.4500000000000624e-05, 1.4098000000000582e-05, 1.4181000000001998e-05, 1.4416999999999208e-05, 1.3638999999999318e-05, 1.4389000000000068e-05, 1.3570000000000942e-05, 1.3763999999999443e-05, 1.3778000000002483e-05, 1.4180999999998528e-05, 1.4458999999997918e-05, 1.3874999999999998e-05, 1.4292000000002553e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.063" endtime="20201117 14:40:53.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.053" endtime="20201117 14:40:53.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.068" endtime="20201117 14:40:53.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.072" endtime="20201117 14:40:53.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.070" endtime="20201117 14:40:53.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.067" endtime="20201117 14:40:53.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.643" endtime="20201117 14:40:53.093"></status>
</kw>
<msg timestamp="20201117 14:40:53.093" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.101" endtime="20201117 14:40:53.119"></status>
</kw>
<msg timestamp="20201117 14:40:53.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.100" endtime="20201117 14:40:53.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.120" endtime="20201117 14:40:53.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.123" endtime="20201117 14:40:53.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.097" endtime="20201117 14:40:53.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.095" endtime="20201117 14:40:53.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.133" endtime="20201117 14:40:53.421"></status>
</kw>
<msg timestamp="20201117 14:40:53.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.131" endtime="20201117 14:40:53.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.425" endtime="20201117 14:40:53.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.434" endtime="20201117 14:40:53.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.129" endtime="20201117 14:40:53.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.127" endtime="20201117 14:40:53.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.441" level="INFO">${RESULT} = [{'time': 0.019738486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.019767486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:53.438" endtime="20201117 14:40:53.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:53.442" endtime="20201117 14:40:53.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.460" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.459" endtime="20201117 14:40:53.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.462" level="INFO">VALUE: [1.4027999999999263e-05, 1.3874999999999998e-05, 1.4263999999999943e-05, 1.4055999999998403e-05, 1.3861000000000429e-05, 1.3749999999999873e-05, 1.4097000000001109e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3624999999999748e-05, 1.409699999999764e-05, 1.4209000000001137e-05, 1.3723000000000207e-05, 1.3652999999998888e-05, 1.4013999999999693e-05, 1.3791999999998583e-05, 1.4111000000000679e-05, 1.3721999999997264e-05, 1.4195000000001567e-05, 1.3931000000001748e-05, 1.4472000000001484e-05, 1.3916999999998708e-05, 1.3736000000000304e-05, 1.4222000000001234e-05, 1.3680999999998028e-05, 1.4277999999999513e-05, 1.4486000000001054e-05, 1.3930999999998278e-05, 1.3874999999999998e-05, 1.3569999999997473e-05, 1.4194000000002094e-05, 1.4473000000000957e-05, 1.3888999999999568e-05, 1.4193999999998624e-05, 1.4444999999998348e-05, 1.4500000000000624e-05, 1.3555000000001899e-05, 1.3499999999999623e-05, 1.431899999999875e-05, 1.4223000000000707e-05, 1.3597000000000609e-05, 1.3693999999998124e-05, 1.3972000000000984e-05, 1.4471999999998014e-05, 1.4443999999998874e-05, 1.3915999999999235e-05, 1.4221999999997764e-05, 1.3651999999999415e-05, 1.4361000000000929e-05, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.461" endtime="20201117 14:40:53.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.456" endtime="20201117 14:40:53.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.466" endtime="20201117 14:40:53.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.469" endtime="20201117 14:40:53.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.467" endtime="20201117 14:40:53.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.464" endtime="20201117 14:40:53.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.094" endtime="20201117 14:40:53.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.642" endtime="20201117 14:40:53.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.641" endtime="20201117 14:40:53.490"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.493" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.501" endtime="20201117 14:40:53.519"></status>
</kw>
<msg timestamp="20201117 14:40:53.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.500" endtime="20201117 14:40:53.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.520" endtime="20201117 14:40:53.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.523" endtime="20201117 14:40:53.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.497" endtime="20201117 14:40:53.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.495" endtime="20201117 14:40:53.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.533" endtime="20201117 14:40:53.819"></status>
</kw>
<msg timestamp="20201117 14:40:53.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:53.531" endtime="20201117 14:40:53.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:40:53.823" endtime="20201117 14:40:53.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.832" endtime="20201117 14:40:53.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.529" endtime="20201117 14:40:53.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.527" endtime="20201117 14:40:53.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.839" level="INFO">${RESULT} = [{'time': 0.0225375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5249999999997904e-05, 'source_diff': 1.5249999999997904e-05}, {'time': 0.0225655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:53.835" endtime="20201117 14:40:53.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.853" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:53.840" endtime="20201117 14:40:53.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.858" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.857" endtime="20201117 14:40:53.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.861" level="INFO">VALUE: [1.5249999999997904e-05, 1.5180999999999528e-05, 1.5236000000001804e-05, 1.5166999999999958e-05, 1.5305999999999653e-05, 1.4694999999998598e-05, 1.4542000000002803e-05, 1.5166999999999958e-05, 1.5055999999999403e-05, 1.4959000000001887e-05, 1.5347999999998363e-05, 1.5305999999999653e-05, 1.4570000000001943e-05, 1.458299999999857e-05, 1.4681000000002498e-05, 1.4764000000000443e-05, 1.541700000000021e-05, 1.4527999999999763e-05, 1.4931000000002748e-05, 1.4916999999999708e-05, 1.4862000000000902e-05, 1.4680999999999028e-05, 1.4875000000000999e-05, 1.4737000000000777e-05, 1.4666999999999458e-05, 1.4611999999997183e-05, 1.5125000000001249e-05, 1.4875000000000999e-05, 1.4736000000001304e-05, 1.504100000000036e-05, 1.4971999999998514e-05, 1.5388000000001595e-05, 1.527700000000104e-05, 1.5514000000001194e-05, 1.4679999999999555e-05, 1.4736000000001304e-05, 1.484699999999839e-05, 1.5166999999999958e-05, 1.5208000000002664e-05, 1.455499999999943e-05, 1.505499999999993e-05, 1.477700000000054e-05, 1.4624999999997279e-05, 1.484699999999839e-05, 1.4694000000002594e-05, 1.5111000000001679e-05, 1.5166999999999958e-05, 1.4971999999998514e-05, 1.5528000000000763e-05, 1.5236000000001804e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.859" endtime="20201117 14:40:53.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.854" endtime="20201117 14:40:53.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.864" endtime="20201117 14:40:53.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.868" endtime="20201117 14:40:53.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.866" endtime="20201117 14:40:53.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.862" endtime="20201117 14:40:53.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.493" endtime="20201117 14:40:53.888"></status>
</kw>
<msg timestamp="20201117 14:40:53.889" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.897" endtime="20201117 14:40:53.915"></status>
</kw>
<msg timestamp="20201117 14:40:53.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.896" endtime="20201117 14:40:53.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.917" endtime="20201117 14:40:53.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.920" endtime="20201117 14:40:53.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.893" endtime="20201117 14:40:53.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.891" endtime="20201117 14:40:53.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.930" endtime="20201117 14:40:54.216"></status>
</kw>
<msg timestamp="20201117 14:40:54.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:53.929" endtime="20201117 14:40:54.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:54.220" endtime="20201117 14:40:54.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.229" endtime="20201117 14:40:54.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.926" endtime="20201117 14:40:54.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.924" endtime="20201117 14:40:54.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.236" level="INFO">${RESULT} = [{'time': 0.019932181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4680999999999028e-05, 'source_diff': 1.4680999999999028e-05}, {'time': 0.019963167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:54.232" endtime="20201117 14:40:54.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:54.237" endtime="20201117 14:40:54.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.254" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.253" endtime="20201117 14:40:54.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.257" level="INFO">VALUE: [1.4680999999999028e-05, 1.5430999999999778e-05, 1.536099999999846e-05, 1.4707999999998694e-05, 1.4848000000001332e-05, 1.5137999999997875e-05, 1.4709000000001637e-05, 1.4847999999997863e-05, 1.4652999999999888e-05, 1.4721999999998264e-05, 1.484699999999839e-05, 1.4972999999997988e-05, 1.538900000000107e-05, 1.536099999999846e-05, 1.536099999999846e-05, 1.50689999999995e-05, 1.530500000000018e-05, 1.5430000000000305e-05, 1.4764000000000443e-05, 1.483299999999882e-05, 1.479100000000011e-05, 1.5249999999997904e-05, 1.5249999999997904e-05, 1.504099999999689e-05, 1.5139000000000818e-05, 1.483299999999882e-05, 1.4929999999999805e-05, 1.5180999999999528e-05, 1.4875000000000999e-05, 1.531899999999975e-05, 1.4957999999998944e-05, 1.4666999999999458e-05, 1.5291999999996614e-05, 1.5305999999999653e-05, 1.4764000000000443e-05, 1.4931000000002748e-05, 1.5263999999997474e-05, 1.536099999999846e-05, 1.5305999999999653e-05, 1.5083000000002539e-05, 1.5430999999999778e-05, 1.5041999999999833e-05, 1.4930999999999278e-05, 1.4639000000000318e-05, 1.5070000000002443e-05, 1.4666999999999458e-05, 1.4736000000001304e-05, 1.5124999999997779e-05, 1.534699999999889e-05, 1.4652999999999888e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.255" endtime="20201117 14:40:54.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.250" endtime="20201117 14:40:54.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.260" endtime="20201117 14:40:54.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.264" endtime="20201117 14:40:54.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.262" endtime="20201117 14:40:54.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.258" endtime="20201117 14:40:54.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.889" endtime="20201117 14:40:54.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.491" endtime="20201117 14:40:54.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.491" endtime="20201117 14:40:54.285"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.287" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.303" endtime="20201117 14:40:54.321"></status>
</kw>
<msg timestamp="20201117 14:40:54.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.301" endtime="20201117 14:40:54.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.324" endtime="20201117 14:40:54.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.326" endtime="20201117 14:40:54.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.298" endtime="20201117 14:40:54.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.289" endtime="20201117 14:40:54.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.336" endtime="20201117 14:40:54.619"></status>
</kw>
<msg timestamp="20201117 14:40:54.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030043778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030059736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.334" endtime="20201117 14:40:54.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030043778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030059736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.624" endtime="20201117 14:40:54.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.633" endtime="20201117 14:40:54.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.331" endtime="20201117 14:40:54.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.330" endtime="20201117 14:40:54.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.640" level="INFO">${RESULT} = [{'time': 0.030059736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.03009175, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:40:54.636" endtime="20201117 14:40:54.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.656" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:54.641" endtime="20201117 14:40:54.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.660" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.659" endtime="20201117 14:40:54.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.663" level="INFO">VALUE: [1.5957999999999944e-05, 1.562500000000175e-05, 1.5957999999999944e-05, 1.612499999999878e-05, 1.643100000000078e-05, 1.608300000000007e-05, 1.5931000000000278e-05, 1.6278000000001513e-05, 1.5986000000002554e-05, 1.5542000000000333e-05, 1.566700000000046e-05, 1.612499999999878e-05, 1.634699999999989e-05, 1.6221999999999764e-05, 1.584699999999939e-05, 1.612499999999878e-05, 1.561099999999871e-05, 1.6472000000000014e-05, 1.5929999999997335e-05, 1.5944999999999848e-05, 1.5792000000000583e-05, 1.615300000000139e-05, 1.6179999999997585e-05, 1.5611999999998183e-05, 1.591700000000071e-05, 1.5944999999999848e-05, 1.562499999999828e-05, 1.555500000000043e-05, 1.6472999999999488e-05, 1.6486999999999058e-05, 1.5777999999997544e-05, 1.6292000000001083e-05, 1.562499999999828e-05, 1.5986000000002554e-05, 1.584699999999939e-05, 1.6166000000001485e-05, 1.554100000000086e-05, 1.5735999999998834e-05, 1.612499999999878e-05, 1.609699999999964e-05, 1.562500000000175e-05, 1.6277999999998044e-05, 1.5999999999998654e-05, 1.5875000000002e-05, 1.558299999999957e-05, 1.591700000000071e-05, 1.559699999999914e-05, 1.565299999999742e-05, 1.6208000000003664e-05, 1.5985999999995615e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.662" endtime="20201117 14:40:54.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.657" endtime="20201117 14:40:54.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.666" endtime="20201117 14:40:54.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.670" endtime="20201117 14:40:54.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.668" endtime="20201117 14:40:54.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.665" endtime="20201117 14:40:54.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.288" endtime="20201117 14:40:54.691"></status>
</kw>
<msg timestamp="20201117 14:40:54.691" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.700" endtime="20201117 14:40:54.717"></status>
</kw>
<msg timestamp="20201117 14:40:54.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.698" endtime="20201117 14:40:54.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.719" endtime="20201117 14:40:54.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.721" endtime="20201117 14:40:54.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.696" endtime="20201117 14:40:54.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.694" endtime="20201117 14:40:54.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.734" endtime="20201117 14:40:55.021"></status>
</kw>
<msg timestamp="20201117 14:40:55.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.732" endtime="20201117 14:40:55.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.025" endtime="20201117 14:40:55.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.034" endtime="20201117 14:40:55.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.728" endtime="20201117 14:40:55.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.725" endtime="20201117 14:40:55.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.041" level="INFO">${RESULT} = [{'time': 0.019869083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6208000000000194e-05, 'source_diff': 1.6208000000000194e-05}, {'time': 0.019898069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.038" endtime="20201117 14:40:55.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.056" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:55.043" endtime="20201117 14:40:55.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.061" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.060" endtime="20201117 14:40:55.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.063" level="INFO">VALUE: [1.6208000000000194e-05, 1.627700000000204e-05, 1.5736000000002304e-05, 1.6179999999997585e-05, 1.604100000000136e-05, 1.609699999999964e-05, 1.630500000000118e-05, 1.6472000000000014e-05, 1.5916000000001235e-05, 1.6499999999999154e-05, 1.579099999999764e-05, 1.587499999999853e-05, 1.63889999999986e-05, 1.6416000000001735e-05, 1.5985999999999084e-05, 1.591699999999724e-05, 1.611099999999921e-05, 1.6262999999999e-05, 1.581900000000025e-05, 1.588900000000157e-05, 1.5722000000002734e-05, 1.6042000000000833e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.563900000000132e-05, 1.636099999999946e-05, 1.6195000000000098e-05, 1.6278000000001513e-05, 1.6347999999999363e-05, 1.6221999999999764e-05, 1.591700000000071e-05, 1.5542000000000333e-05, 1.5722000000002734e-05, 1.6042000000000833e-05, 1.6235999999999334e-05, 1.584699999999939e-05, 1.58889999999981e-05, 1.6097999999999113e-05, 1.5749999999998404e-05, 1.637499999999903e-05, 1.640300000000164e-05, 1.5986999999998558e-05, 1.5527999999997294e-05, 1.633300000000032e-05, 1.5999999999998654e-05, 1.5735999999998834e-05, 1.615300000000139e-05, 1.590300000000114e-05, 1.561100000000218e-05, 1.630500000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.062" endtime="20201117 14:40:55.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.057" endtime="20201117 14:40:55.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.067" endtime="20201117 14:40:55.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.070" endtime="20201117 14:40:55.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.069" endtime="20201117 14:40:55.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.065" endtime="20201117 14:40:55.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.692" endtime="20201117 14:40:55.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.286" endtime="20201117 14:40:55.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.285" endtime="20201117 14:40:55.092"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.094" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.102" endtime="20201117 14:40:55.120"></status>
</kw>
<msg timestamp="20201117 14:40:55.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.101" endtime="20201117 14:40:55.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.121" endtime="20201117 14:40:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.124" endtime="20201117 14:40:55.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.098" endtime="20201117 14:40:55.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.096" endtime="20201117 14:40:55.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.133" endtime="20201117 14:40:55.419"></status>
</kw>
<msg timestamp="20201117 14:40:55.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:55.132" endtime="20201117 14:40:55.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:40:55.423" endtime="20201117 14:40:55.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.432" endtime="20201117 14:40:55.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.129" endtime="20201117 14:40:55.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.127" endtime="20201117 14:40:55.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.439" level="INFO">${RESULT} = [{'time': 0.022369056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6555999999997434e-05, 'source_diff': 1.6555999999997434e-05}, {'time': 0.022400069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.435" endtime="20201117 14:40:55.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.453" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:55.440" endtime="20201117 14:40:55.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.458" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.456" endtime="20201117 14:40:55.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.461" level="INFO">VALUE: [1.6555999999997434e-05, 1.70690000000015e-05, 1.705499999999846e-05, 1.6806000000001153e-05, 1.684700000000039e-05, 1.70690000000015e-05, 1.7415999999999265e-05, 1.665300000000189e-05, 1.7471999999997545e-05, 1.7570000000001473e-05, 1.7165999999999015e-05, 1.686099999999996e-05, 1.7165999999999015e-05, 1.6986000000000084e-05, 1.7013999999999224e-05, 1.6708000000000695e-05, 1.659700000000014e-05, 1.6929999999998335e-05, 1.7027999999998794e-05, 1.662499999999928e-05, 1.7055999999997934e-05, 1.7306000000001653e-05, 1.6735999999999834e-05, 1.711100000000021e-05, 1.713899999999935e-05, 1.7028000000002264e-05, 1.7042000000001833e-05, 1.658300000000057e-05, 1.6528000000001764e-05, 1.7249999999999904e-05, 1.693100000000128e-05, 1.7333999999997324e-05, 1.6556000000000903e-05, 1.688900000000257e-05, 1.7222000000000764e-05, 1.6915999999998765e-05, 1.744499999999788e-05, 1.716700000000196e-05, 1.7028000000002264e-05, 1.711100000000021e-05, 1.73889999999996e-05, 1.706899999999803e-05, 1.6665999999998515e-05, 1.7444000000001875e-05, 1.716699999999849e-05, 1.6527999999998294e-05, 1.7250000000003374e-05, 1.729100000000261e-05, 1.6556000000000903e-05, 1.737500000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.459" endtime="20201117 14:40:55.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.454" endtime="20201117 14:40:55.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.464" endtime="20201117 14:40:55.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.467" endtime="20201117 14:40:55.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.466" endtime="20201117 14:40:55.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.462" endtime="20201117 14:40:55.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.095" endtime="20201117 14:40:55.488"></status>
</kw>
<msg timestamp="20201117 14:40:55.489" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.497" endtime="20201117 14:40:55.515"></status>
</kw>
<msg timestamp="20201117 14:40:55.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.496" endtime="20201117 14:40:55.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.517" endtime="20201117 14:40:55.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.519" endtime="20201117 14:40:55.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.493" endtime="20201117 14:40:55.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.491" endtime="20201117 14:40:55.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.529" endtime="20201117 14:40:55.814"></status>
</kw>
<msg timestamp="20201117 14:40:55.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.528" endtime="20201117 14:40:55.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.818" endtime="20201117 14:40:55.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.827" endtime="20201117 14:40:55.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.525" endtime="20201117 14:40:55.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.524" endtime="20201117 14:40:55.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.834" level="INFO">${RESULT} = [{'time': 0.019925278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.713900000000282e-05, 'source_diff': 1.713900000000282e-05}, {'time': 0.019958292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:55.830" endtime="20201117 14:40:55.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.847" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:55.835" endtime="20201117 14:40:55.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.853" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.851" endtime="20201117 14:40:55.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.855" level="INFO">VALUE: [1.713900000000282e-05, 1.718099999999806e-05, 1.736100000000046e-05, 1.668100000000103e-05, 1.7042000000001833e-05, 1.665300000000189e-05, 1.7137999999999876e-05, 1.691700000000171e-05, 1.6695000000000598e-05, 1.6736999999999308e-05, 1.7487000000000058e-05, 1.7028000000002264e-05, 1.731899999999828e-05, 1.711100000000021e-05, 1.6665999999998515e-05, 1.729100000000261e-05, 1.709700000000064e-05, 1.7236000000000334e-05, 1.659700000000014e-05, 1.686099999999996e-05, 1.7486000000000584e-05, 1.6735999999999834e-05, 1.736100000000046e-05, 1.652700000000229e-05, 1.7179999999998585e-05, 1.737500000000003e-05, 1.6764000000002444e-05, 1.680500000000168e-05, 1.659700000000014e-05, 1.705499999999846e-05, 1.737500000000003e-05, 1.7527999999999294e-05, 1.741699999999874e-05, 1.666700000000146e-05, 1.7056000000001403e-05, 1.716699999999849e-05, 1.681900000000125e-05, 1.668100000000103e-05, 1.690300000000214e-05, 1.7513999999999724e-05, 1.668099999999756e-05, 1.6792000000001583e-05, 1.6972000000000514e-05, 1.7221999999997295e-05, 1.6972000000000514e-05, 1.6834000000000293e-05, 1.7500000000000154e-05, 1.659700000000014e-05, 1.6792000000001583e-05, 1.693100000000128e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.854" endtime="20201117 14:40:55.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.849" endtime="20201117 14:40:55.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.858" endtime="20201117 14:40:55.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.862" endtime="20201117 14:40:55.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.860" endtime="20201117 14:40:55.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.857" endtime="20201117 14:40:55.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.489" endtime="20201117 14:40:55.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.093" endtime="20201117 14:40:55.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.092" endtime="20201117 14:40:55.884"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.886" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.896" endtime="20201117 14:40:55.914"></status>
</kw>
<msg timestamp="20201117 14:40:55.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.894" endtime="20201117 14:40:55.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.916" endtime="20201117 14:40:55.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.918" endtime="20201117 14:40:55.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.891" endtime="20201117 14:40:55.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.889" endtime="20201117 14:40:55.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.928" endtime="20201117 14:40:56.214"></status>
</kw>
<msg timestamp="20201117 14:40:56.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024768431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.926" endtime="20201117 14:40:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024768431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.218" endtime="20201117 14:40:56.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.227" endtime="20201117 14:40:56.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.923" endtime="20201117 14:40:56.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.922" endtime="20201117 14:40:56.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.234" level="INFO">${RESULT} = [{'time': 0.024768431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8250000000000904e-05, 'source_diff': 1.8250000000000904e-05}, {'time': 0.024799444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.231" endtime="20201117 14:40:56.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.249" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:56.235" endtime="20201117 14:40:56.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.254" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.253" endtime="20201117 14:40:56.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.257" level="INFO">VALUE: [1.8250000000000904e-05, 1.8236000000001334e-05, 1.7862000000000433e-05, 1.8305999999999184e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.7915999999999765e-05, 1.8264000000000474e-05, 1.8179999999999585e-05, 1.7986000000001084e-05, 1.755500000000243e-05, 1.8471999999998545e-05, 1.7569000000002e-05, 1.7750000000000404e-05, 1.7651999999999946e-05, 1.779099999999964e-05, 1.8000000000000654e-05, 1.754099999999939e-05, 1.834699999999842e-05, 1.83890000000006e-05, 1.7985999999997615e-05, 1.8471999999998545e-05, 1.786100000000096e-05, 1.811099999999774e-05, 1.8056000000002403e-05, 1.837500000000103e-05, 1.8457999999998975e-05, 1.766699999999899e-05, 1.7791999999999114e-05, 1.7735999999997365e-05, 1.761099999999724e-05, 1.812500000000078e-05, 1.7708000000001695e-05, 1.7541999999998864e-05, 1.8485999999998115e-05, 1.8291999999999614e-05, 1.844500000000235e-05, 1.81950000000021e-05, 1.809699999999817e-05, 1.768100000000203e-05, 1.7541999999998864e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.8222000000001765e-05, 1.83890000000006e-05, 1.837499999999756e-05, 1.7612000000000183e-05, 1.815299999999992e-05, 1.7985999999997615e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.255" endtime="20201117 14:40:56.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.250" endtime="20201117 14:40:56.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.260" endtime="20201117 14:40:56.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.263" endtime="20201117 14:40:56.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.262" endtime="20201117 14:40:56.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.258" endtime="20201117 14:40:56.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.887" endtime="20201117 14:40:56.284"></status>
</kw>
<msg timestamp="20201117 14:40:56.284" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.293" endtime="20201117 14:40:56.311"></status>
</kw>
<msg timestamp="20201117 14:40:56.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.291" endtime="20201117 14:40:56.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.312" endtime="20201117 14:40:56.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.315" endtime="20201117 14:40:56.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.289" endtime="20201117 14:40:56.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.286" endtime="20201117 14:40:56.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.325" endtime="20201117 14:40:56.611"></status>
</kw>
<msg timestamp="20201117 14:40:56.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.323" endtime="20201117 14:40:56.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.615" endtime="20201117 14:40:56.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.624" endtime="20201117 14:40:56.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.321" endtime="20201117 14:40:56.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.319" endtime="20201117 14:40:56.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.631" level="INFO">${RESULT} = [{'time': 0.019871958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7693999999998655e-05, 'source_diff': 1.7693999999998655e-05}, {'time': 0.019902972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.627" endtime="20201117 14:40:56.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:56.632" endtime="20201117 14:40:56.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.650" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.649" endtime="20201117 14:40:56.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.653" level="INFO">VALUE: [1.7693999999998655e-05, 1.813900000000035e-05, 1.7651999999999946e-05, 1.787500000000053e-05, 1.7916000000003235e-05, 1.8429999999999835e-05, 1.759699999999767e-05, 1.791699999999924e-05, 1.786100000000096e-05, 1.8027999999999794e-05, 1.7708000000001695e-05, 1.762500000000028e-05, 1.8221999999998295e-05, 1.761100000000071e-05, 1.7527999999999294e-05, 1.811100000000121e-05, 1.787500000000053e-05, 1.7806000000002153e-05, 1.7513999999999724e-05, 1.8250000000000904e-05, 1.8291999999999614e-05, 1.8291999999999614e-05, 1.791699999999924e-05, 1.786100000000096e-05, 1.7791999999999114e-05, 1.8222000000001765e-05, 1.8027999999999794e-05, 1.837500000000103e-05, 1.766699999999899e-05, 1.8416000000000265e-05, 1.837500000000103e-05, 1.7985999999997615e-05, 1.769499999999813e-05, 1.768099999999856e-05, 1.826299999999753e-05, 1.8264000000000474e-05, 1.8291999999999614e-05, 1.7569000000002e-05, 1.7792000000002584e-05, 1.7737000000000308e-05, 1.8416000000000265e-05, 1.787499999999706e-05, 1.7750000000000404e-05, 1.82769999999971e-05, 1.78890000000001e-05, 1.8152000000000446e-05, 1.841699999999974e-05, 1.829100000000014e-05, 1.7999999999997185e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.651" endtime="20201117 14:40:56.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.646" endtime="20201117 14:40:56.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.656" endtime="20201117 14:40:56.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.660" endtime="20201117 14:40:56.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.658" endtime="20201117 14:40:56.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.654" endtime="20201117 14:40:56.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.285" endtime="20201117 14:40:56.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.885" endtime="20201117 14:40:56.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.884" endtime="20201117 14:40:56.681"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.683" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.692" endtime="20201117 14:40:56.710"></status>
</kw>
<msg timestamp="20201117 14:40:56.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.690" endtime="20201117 14:40:56.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.711" endtime="20201117 14:40:56.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.714" endtime="20201117 14:40:56.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.688" endtime="20201117 14:40:56.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.685" endtime="20201117 14:40:56.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.724" endtime="20201117 14:40:57.009"></status>
</kw>
<msg timestamp="20201117 14:40:57.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.722" endtime="20201117 14:40:57.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.013" endtime="20201117 14:40:57.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.022" endtime="20201117 14:40:57.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.719" endtime="20201117 14:40:57.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.717" endtime="20201117 14:40:57.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.029" level="INFO">${RESULT} = [{'time': 0.022624625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.89029999999972e-05, 'source_diff': 1.89029999999972e-05}, {'time': 0.022657611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:57.025" endtime="20201117 14:40:57.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.043" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:57.030" endtime="20201117 14:40:57.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.047" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.046" endtime="20201117 14:40:57.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.050" level="INFO">VALUE: [1.89029999999972e-05, 1.930500000000071e-05, 1.9235999999998865e-05, 1.9235999999998865e-05, 1.934699999999942e-05, 1.916700000000049e-05, 1.8749999999997935e-05, 1.8721999999998795e-05, 1.8708000000002695e-05, 1.8971999999999045e-05, 1.936100000000246e-05, 1.916700000000049e-05, 1.869499999999913e-05, 1.9236000000002335e-05, 1.8569999999999004e-05, 1.9055999999999934e-05, 1.8736000000001835e-05, 1.884699999999892e-05, 1.868099999999956e-05, 1.913900000000135e-05, 1.9055999999999934e-05, 1.8999999999998185e-05, 1.8999999999998185e-05, 1.8957999999999475e-05, 1.8986000000002085e-05, 1.9347999999998894e-05, 1.941700000000074e-05, 1.893099999999981e-05, 1.9401999999998226e-05, 1.926299999999853e-05, 1.8749999999997935e-05, 1.909699999999917e-05, 1.911099999999874e-05, 1.9151999999997976e-05, 1.930500000000071e-05, 1.929100000000114e-05, 1.855499999999996e-05, 1.881899999999978e-05, 1.8972000000002515e-05, 1.862500000000128e-05, 1.9235999999998865e-05, 1.8735999999998365e-05, 1.940300000000117e-05, 1.8555999999999434e-05, 1.929100000000114e-05, 1.8999999999998185e-05, 1.881899999999978e-05, 1.943100000000031e-05, 1.866699999999999e-05, 1.894499999999938e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.048" endtime="20201117 14:40:57.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.044" endtime="20201117 14:40:57.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.053" endtime="20201117 14:40:57.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.057" endtime="20201117 14:40:57.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.055" endtime="20201117 14:40:57.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.052" endtime="20201117 14:40:57.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.684" endtime="20201117 14:40:57.078"></status>
</kw>
<msg timestamp="20201117 14:40:57.078" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.086" endtime="20201117 14:40:57.104"></status>
</kw>
<msg timestamp="20201117 14:40:57.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.085" endtime="20201117 14:40:57.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.105" endtime="20201117 14:40:57.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.108" endtime="20201117 14:40:57.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.082" endtime="20201117 14:40:57.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.080" endtime="20201117 14:40:57.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.119" endtime="20201117 14:40:57.404"></status>
</kw>
<msg timestamp="20201117 14:40:57.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.117" endtime="20201117 14:40:57.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.409" endtime="20201117 14:40:57.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.417" endtime="20201117 14:40:57.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.114" endtime="20201117 14:40:57.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.112" endtime="20201117 14:40:57.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.424" level="INFO">${RESULT} = [{'time': 0.019744278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.891700000000024e-05, 'source_diff': 1.891700000000024e-05}, {'time': 0.019776292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:57.421" endtime="20201117 14:40:57.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:57.425" endtime="20201117 14:40:57.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.443" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.442" endtime="20201117 14:40:57.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.445" level="INFO">VALUE: [1.891700000000024e-05, 1.886100000000196e-05, 1.937499999999856e-05, 1.8943999999999905e-05, 1.9084000000002543e-05, 1.941700000000074e-05, 1.872299999999827e-05, 1.890300000000067e-05, 1.943100000000031e-05, 1.9429999999997366e-05, 1.9277999999997575e-05, 1.930500000000071e-05, 1.879099999999717e-05, 1.8930000000000335e-05, 1.943100000000031e-05, 1.9415999999997796e-05, 1.911100000000221e-05, 1.887499999999806e-05, 1.911099999999874e-05, 1.8985999999998615e-05, 1.9000000000001654e-05, 1.913900000000135e-05, 1.940300000000117e-05, 1.879100000000064e-05, 1.8999999999998185e-05, 1.9499999999998685e-05, 1.9028000000000794e-05, 1.865299999999695e-05, 1.9306000000000184e-05, 1.911099999999874e-05, 1.883299999999935e-05, 1.909699999999917e-05, 1.859699999999867e-05, 1.865300000000042e-05, 1.918100000000006e-05, 1.9249999999998435e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.87089999999987e-05, 1.868099999999956e-05, 1.891700000000024e-05, 1.9291999999997145e-05, 1.893100000000328e-05, 1.8763999999997505e-05, 1.9401999999998226e-05, 1.887500000000153e-05, 1.884699999999892e-05, 1.8500000000001154e-05, 1.8693999999999655e-05, 1.9236000000002335e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.444" endtime="20201117 14:40:57.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.439" endtime="20201117 14:40:57.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.449" endtime="20201117 14:40:57.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.452" endtime="20201117 14:40:57.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.451" endtime="20201117 14:40:57.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.447" endtime="20201117 14:40:57.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.078" endtime="20201117 14:40:57.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.682" endtime="20201117 14:40:57.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.681" endtime="20201117 14:40:57.474"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.476" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.485" endtime="20201117 14:40:57.504"></status>
</kw>
<msg timestamp="20201117 14:40:57.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.483" endtime="20201117 14:40:57.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.505" endtime="20201117 14:40:57.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.508" endtime="20201117 14:40:57.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.480" endtime="20201117 14:40:57.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.478" endtime="20201117 14:40:57.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.517" endtime="20201117 14:40:57.803"></status>
</kw>
<msg timestamp="20201117 14:40:57.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023774375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.516" endtime="20201117 14:40:57.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023774375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.807" endtime="20201117 14:40:57.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.816" endtime="20201117 14:40:57.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.513" endtime="20201117 14:40:57.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.511" endtime="20201117 14:40:57.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.823" level="INFO">${RESULT} = [{'time': 0.023774375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.00830000000006e-05, 'source_diff': 2.00830000000006e-05}, {'time': 0.023808361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:57.819" endtime="20201117 14:40:57.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:57.824" endtime="20201117 14:40:57.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.842" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.841" endtime="20201117 14:40:57.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.845" level="INFO">VALUE: [2.00830000000006e-05, 2.005500000000146e-05, 2.0235999999999865e-05, 2.036099999999999e-05, 1.9735999999999365e-05, 1.966700000000099e-05, 2.0069999999997035e-05, 2.019499999999716e-05, 2.0041999999997895e-05, 1.9541999999997395e-05, 2.0291999999998145e-05, 1.987499999999906e-05, 1.993099999999734e-05, 1.9985999999999615e-05, 1.986099999999949e-05, 2.011099999999974e-05, 2.037499999999956e-05, 1.984699999999992e-05, 1.9556000000000434e-05, 1.984699999999992e-05, 2.0291999999998145e-05, 1.9999999999999185e-05, 1.95830000000001e-05, 2.043100000000131e-05, 1.991699999999777e-05, 2.0165999999998546e-05, 1.991699999999777e-05, 1.981899999999731e-05, 2.0028000000001794e-05, 2.037499999999956e-05, 2.0042000000001364e-05, 1.9985999999999615e-05, 1.9901999999998726e-05, 1.954100000000139e-05, 2.0235999999999865e-05, 2.0180000000001586e-05, 2.009700000000017e-05, 2.030499999999824e-05, 2.0278000000002044e-05, 1.983300000000035e-05, 1.9721999999999795e-05, 2.036099999999999e-05, 1.961100000000271e-05, 2.0013999999998755e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.031899999999781e-05, 1.979100000000164e-05, 2.013899999999888e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.844" endtime="20201117 14:40:57.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.839" endtime="20201117 14:40:57.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.848" endtime="20201117 14:40:57.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.852" endtime="20201117 14:40:57.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.850" endtime="20201117 14:40:57.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.847" endtime="20201117 14:40:57.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.477" endtime="20201117 14:40:57.873"></status>
</kw>
<msg timestamp="20201117 14:40:57.873" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.882" endtime="20201117 14:40:57.899"></status>
</kw>
<msg timestamp="20201117 14:40:57.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.880" endtime="20201117 14:40:57.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.901" endtime="20201117 14:40:57.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.903" endtime="20201117 14:40:57.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.878" endtime="20201117 14:40:57.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.875" endtime="20201117 14:40:57.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.915" endtime="20201117 14:40:58.202"></status>
</kw>
<msg timestamp="20201117 14:40:58.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.913" endtime="20201117 14:40:58.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.206" endtime="20201117 14:40:58.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.215" endtime="20201117 14:40:58.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.910" endtime="20201117 14:40:58.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.908" endtime="20201117 14:40:58.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.222" level="INFO">${RESULT} = [{'time': 0.020378972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.984699999999992e-05, 'source_diff': 1.984699999999992e-05}, {'time': 0.020413986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:58.218" endtime="20201117 14:40:58.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:58.223" endtime="20201117 14:40:58.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.240" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.239" endtime="20201117 14:40:58.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.243" level="INFO">VALUE: [1.984699999999992e-05, 1.955499999999749e-05, 2.0208000000000725e-05, 2.016700000000149e-05, 1.963900000000185e-05, 2.0277999999998575e-05, 2.0277999999998575e-05, 2.011099999999974e-05, 1.9749999999998935e-05, 1.991699999999777e-05, 2.0305999999997715e-05, 2.0056000000000934e-05, 1.9708000000000225e-05, 2.0277999999998575e-05, 2.0320000000000754e-05, 1.9792000000001114e-05, 1.97089999999997e-05, 1.9820000000000254e-05, 2.0028000000001794e-05, 2.0334000000000324e-05, 1.993100000000081e-05, 2.0041999999997895e-05, 1.9806000000000684e-05, 1.9721999999999795e-05, 2.001300000000275e-05, 1.972299999999927e-05, 2.0277999999998575e-05, 2.0138000000002876e-05, 1.9791999999997645e-05, 1.9527999999997825e-05, 2.0041999999997895e-05, 1.97089999999997e-05, 2.0249999999999435e-05, 2.041700000000174e-05, 1.956899999999706e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.9666000000001516e-05, 2.036099999999999e-05, 2.009700000000017e-05, 2.034700000000042e-05, 2.033300000000085e-05, 1.954099999999792e-05, 1.979099999999817e-05, 2.0250000000002905e-05, 2.029099999999867e-05, 2.009700000000017e-05, 2.033300000000085e-05, 1.979100000000164e-05, 1.961099999999924e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.241" endtime="20201117 14:40:58.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.236" endtime="20201117 14:40:58.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.247" endtime="20201117 14:40:58.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.250" endtime="20201117 14:40:58.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.249" endtime="20201117 14:40:58.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.245" endtime="20201117 14:40:58.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.874" endtime="20201117 14:40:58.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.475" endtime="20201117 14:40:58.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.474" endtime="20201117 14:40:58.271"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.274" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.282" endtime="20201117 14:40:58.299"></status>
</kw>
<msg timestamp="20201117 14:40:58.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.281" endtime="20201117 14:40:58.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.301" endtime="20201117 14:40:58.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.304" endtime="20201117 14:40:58.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.278" endtime="20201117 14:40:58.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.276" endtime="20201117 14:40:58.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.313" endtime="20201117 14:40:58.599"></status>
</kw>
<msg timestamp="20201117 14:40:58.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.311" endtime="20201117 14:40:58.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.604" endtime="20201117 14:40:58.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.612" endtime="20201117 14:40:58.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.309" endtime="20201117 14:40:58.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.307" endtime="20201117 14:40:58.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.619" level="INFO">${RESULT} = [{'time': 0.022403903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1027999999999325e-05, 'source_diff': 2.1027999999999325e-05}, {'time': 0.022437889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.616" endtime="20201117 14:40:58.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.633" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:58.620" endtime="20201117 14:40:58.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.637" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.636" endtime="20201117 14:40:58.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.640" level="INFO">VALUE: [2.1027999999999325e-05, 2.0736000000000365e-05, 2.111099999999727e-05, 2.0749999999999935e-05, 2.133300000000185e-05, 2.063900000000285e-05, 2.143099999999884e-05, 2.063900000000285e-05, 2.1084000000001074e-05, 2.133299999999838e-05, 2.1277999999999575e-05, 2.1305999999998715e-05, 2.1291999999999145e-05, 2.0958000000001475e-05, 2.0722000000000795e-05, 2.048699999999959e-05, 2.1429999999999366e-05, 2.136100000000099e-05, 2.133300000000185e-05, 2.068100000000156e-05, 2.113899999999988e-05, 2.059700000000067e-05, 2.1180000000002586e-05, 2.059700000000067e-05, 2.134699999999795e-05, 2.106900000000203e-05, 2.105500000000246e-05, 2.062499999999981e-05, 2.0916000000002766e-05, 2.0986000000000615e-05, 2.1485999999997646e-05, 2.0943999999998436e-05, 2.091700000000224e-05, 2.111099999999727e-05, 2.118099999999859e-05, 2.1236000000000865e-05, 2.136099999999752e-05, 2.109700000000117e-05, 2.055499999999849e-05, 2.1027999999999325e-05, 2.1514000000000255e-05, 2.087500000000006e-05, 2.134700000000142e-05, 2.1236000000000865e-05, 2.066699999999852e-05, 2.1471999999998076e-05, 2.1070000000001504e-05, 2.0556000000001434e-05, 2.0777999999999075e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.639" endtime="20201117 14:40:58.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.634" endtime="20201117 14:40:58.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.644" endtime="20201117 14:40:58.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.647" endtime="20201117 14:40:58.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.646" endtime="20201117 14:40:58.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.642" endtime="20201117 14:40:58.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.275" endtime="20201117 14:40:58.668"></status>
</kw>
<msg timestamp="20201117 14:40:58.668" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.677" endtime="20201117 14:40:58.697"></status>
</kw>
<msg timestamp="20201117 14:40:58.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.675" endtime="20201117 14:40:58.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.699" endtime="20201117 14:40:58.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.701" endtime="20201117 14:40:58.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.673" endtime="20201117 14:40:58.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.670" endtime="20201117 14:40:58.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.712" endtime="20201117 14:40:58.997"></status>
</kw>
<msg timestamp="20201117 14:40:59.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.710" endtime="20201117 14:40:59.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.002" endtime="20201117 14:40:59.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.010" endtime="20201117 14:40:59.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.707" endtime="20201117 14:40:59.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.706" endtime="20201117 14:40:59.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.017" level="INFO">${RESULT} = [{'time': 0.019927097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.106900000000203e-05, 'source_diff': 2.106900000000203e-05}, {'time': 0.019961083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:59.014" endtime="20201117 14:40:59.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.031" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:59.018" endtime="20201117 14:40:59.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.036" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.035" endtime="20201117 14:40:59.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.038" level="INFO">VALUE: [2.106900000000203e-05, 2.130500000000271e-05, 2.0722000000000795e-05, 2.138900000000013e-05, 2.1221999999997826e-05, 2.084700000000092e-05, 2.091699999999877e-05, 2.0541999999998395e-05, 2.112500000000031e-05, 2.113899999999988e-05, 2.106900000000203e-05, 2.109700000000117e-05, 2.05969999999972e-05, 2.068099999999809e-05, 2.062499999999981e-05, 2.1194000000002156e-05, 2.0791999999998645e-05, 2.065299999999895e-05, 2.141699999999927e-05, 2.084699999999745e-05, 2.0722000000000795e-05, 2.09029999999992e-05, 2.1000000000000185e-05, 2.091699999999877e-05, 2.1069999999998035e-05, 2.1000000000000185e-05, 2.115300000000292e-05, 2.137500000000056e-05, 2.116700000000249e-05, 2.097299999999705e-05, 2.1098000000000644e-05, 2.0791999999998645e-05, 2.1500000000000685e-05, 2.073699999999984e-05, 2.0542000000001864e-05, 2.1277999999999575e-05, 2.143099999999884e-05, 2.134699999999795e-05, 2.112500000000031e-05, 2.0665999999999046e-05, 2.0901999999999726e-05, 2.1193999999998686e-05, 2.0958000000001475e-05, 2.058299999999763e-05, 2.1458000000001975e-05, 2.1236000000000865e-05, 2.055499999999849e-05, 2.086099999999702e-05, 2.055499999999849e-05, 2.1499999999997216e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.037" endtime="20201117 14:40:59.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.032" endtime="20201117 14:40:59.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.042" endtime="20201117 14:40:59.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.046" endtime="20201117 14:40:59.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.044" endtime="20201117 14:40:59.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.040" endtime="20201117 14:40:59.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.669" endtime="20201117 14:40:59.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.273" endtime="20201117 14:40:59.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.272" endtime="20201117 14:40:59.067"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.069" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.078" endtime="20201117 14:40:59.096"></status>
</kw>
<msg timestamp="20201117 14:40:59.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.076" endtime="20201117 14:40:59.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.098" endtime="20201117 14:40:59.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.100" endtime="20201117 14:40:59.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.074" endtime="20201117 14:40:59.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.071" endtime="20201117 14:40:59.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.110" endtime="20201117 14:40:59.395"></status>
</kw>
<msg timestamp="20201117 14:40:59.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.108" endtime="20201117 14:40:59.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.400" endtime="20201117 14:40:59.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.408" endtime="20201117 14:40:59.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.106" endtime="20201117 14:40:59.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.104" endtime="20201117 14:40:59.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.416" level="INFO">${RESULT} = [{'time': 0.023316597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.188900000000063e-05, 'source_diff': 2.188900000000063e-05}, {'time': 0.023354611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:59.412" endtime="20201117 14:40:59.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:59.417" endtime="20201117 14:40:59.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.436" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.435" endtime="20201117 14:40:59.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.439" level="INFO">VALUE: [2.188900000000063e-05, 2.2486000000002115e-05, 2.1778000000000075e-05, 2.1721999999998326e-05, 2.241700000000027e-05, 2.162500000000081e-05, 2.1777999999996606e-05, 2.2041999999999895e-05, 2.183299999999888e-05, 2.247299999999855e-05, 2.1805999999999215e-05, 2.184699999999845e-05, 2.1791999999999645e-05, 2.1735999999997896e-05, 2.162500000000081e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.2056000000002934e-05, 2.161100000000124e-05, 2.1791999999999645e-05, 2.166699999999952e-05, 2.187500000000106e-05, 2.161099999999777e-05, 2.2112000000001214e-05, 2.222300000000177e-05, 2.2041999999999895e-05, 2.170899999999823e-05, 2.2292000000000145e-05, 2.205499999999999e-05, 2.1666000000000046e-05, 2.156900000000253e-05, 2.2278000000000575e-05, 2.187500000000106e-05, 2.237499999999809e-05, 2.1736000000001365e-05, 2.2222000000002295e-05, 2.1736000000001365e-05, 2.2430000000000366e-05, 2.1722000000001795e-05, 2.2222000000002295e-05, 2.1666000000000046e-05, 2.1722000000001795e-05, 2.169499999999866e-05, 2.238900000000113e-05, 2.2443999999999936e-05, 2.240299999999723e-05, 2.231899999999981e-05, 2.209700000000217e-05, 2.1514000000000255e-05, 2.161099999999777e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.437" endtime="20201117 14:40:59.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.432" endtime="20201117 14:40:59.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.442" endtime="20201117 14:40:59.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.446" endtime="20201117 14:40:59.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.444" endtime="20201117 14:40:59.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.440" endtime="20201117 14:40:59.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.070" endtime="20201117 14:40:59.466"></status>
</kw>
<msg timestamp="20201117 14:40:59.467" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.475" endtime="20201117 14:40:59.492"></status>
</kw>
<msg timestamp="20201117 14:40:59.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.474" endtime="20201117 14:40:59.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.494" endtime="20201117 14:40:59.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.496" endtime="20201117 14:40:59.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.471" endtime="20201117 14:40:59.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.469" endtime="20201117 14:40:59.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.506" endtime="20201117 14:40:59.793"></status>
</kw>
<msg timestamp="20201117 14:40:59.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.505" endtime="20201117 14:40:59.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.797" endtime="20201117 14:40:59.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.806" endtime="20201117 14:40:59.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.502" endtime="20201117 14:40:59.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.500" endtime="20201117 14:40:59.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.813" level="INFO">${RESULT} = [{'time': 0.019879444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.019915444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:59.809" endtime="20201117 14:40:59.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:59.814" endtime="20201117 14:40:59.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.831" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.830" endtime="20201117 14:40:59.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.834" level="INFO">VALUE: [2.204100000000042e-05, 2.1736000000001365e-05, 2.2304999999996772e-05, 2.2443999999999936e-05, 2.159700000000167e-05, 2.2000000000001185e-05, 2.2222000000002295e-05, 2.24030000000007e-05, 2.1721999999998326e-05, 2.1679999999999616e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.1805999999999215e-05, 2.187500000000106e-05, 2.234699999999895e-05, 2.241700000000027e-05, 2.187500000000106e-05, 2.193099999999934e-05, 2.1569999999998535e-05, 2.161100000000124e-05, 2.1541999999999395e-05, 2.2457999999999506e-05, 2.186100000000149e-05, 2.1750000000000935e-05, 2.1541999999999395e-05, 2.191699999999977e-05, 2.2249999999997966e-05, 2.216700000000002e-05, 2.1805999999999215e-05, 2.216700000000002e-05, 2.2334000000002324e-05, 2.168100000000256e-05, 2.2070000000002504e-05, 2.1541999999999395e-05, 2.2000000000001185e-05, 2.22770000000011e-05, 2.2555999999999965e-05, 2.187500000000106e-05, 2.191699999999977e-05, 2.2026999999997382e-05, 2.2471999999999076e-05, 2.2250000000001435e-05, 2.2401999999997757e-05, 2.1916000000000296e-05, 2.1985999999998146e-05, 2.2193999999999686e-05, 2.230500000000024e-05, 2.211099999999827e-05, 2.1902000000000726e-05, 2.2485999999998646e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.833" endtime="20201117 14:40:59.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.828" endtime="20201117 14:40:59.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.837" endtime="20201117 14:40:59.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.841" endtime="20201117 14:40:59.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.839" endtime="20201117 14:40:59.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.836" endtime="20201117 14:40:59.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.467" endtime="20201117 14:40:59.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.068" endtime="20201117 14:40:59.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.067" endtime="20201117 14:40:59.862"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.865" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.873" endtime="20201117 14:40:59.891"></status>
</kw>
<msg timestamp="20201117 14:40:59.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.871" endtime="20201117 14:40:59.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.893" endtime="20201117 14:40:59.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.895" endtime="20201117 14:40:59.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.869" endtime="20201117 14:40:59.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.867" endtime="20201117 14:40:59.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.904" endtime="20201117 14:41:00.190"></status>
</kw>
<msg timestamp="20201117 14:41:00.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02242475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:59.903" endtime="20201117 14:41:00.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02242475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:00.195" endtime="20201117 14:41:00.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.203" endtime="20201117 14:41:00.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.900" endtime="20201117 14:41:00.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.898" endtime="20201117 14:41:00.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.211" level="INFO">${RESULT} = [{'time': 0.022447694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2944000000000436e-05, 'source_diff': 2.2944000000000436e-05}, {'time': 0.022483722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:00.207" endtime="20201117 14:41:00.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.225" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:00.212" endtime="20201117 14:41:00.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.229" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.228" endtime="20201117 14:41:00.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.232" level="INFO">VALUE: [2.2944000000000436e-05, 2.283299999999988e-05, 2.2958000000000006e-05, 2.3500000000002685e-05, 2.2707999999999756e-05, 2.265300000000095e-05, 2.3278000000001575e-05, 2.2540999999997452e-05, 2.305500000000099e-05, 2.3000000000002185e-05, 2.2707999999999756e-05, 2.2735999999998896e-05, 2.3278000000001575e-05, 2.3042000000000895e-05, 2.281900000000031e-05, 2.258299999999963e-05, 2.3235999999999396e-05, 2.2806000000000215e-05, 2.2944000000000436e-05, 2.343100000000084e-05, 2.344500000000041e-05, 2.266700000000052e-05, 2.311099999999927e-05, 2.341700000000127e-05, 2.3263999999998536e-05, 2.266699999999705e-05, 2.3028000000001325e-05, 2.2792000000000645e-05, 2.2986000000002615e-05, 2.2528000000000825e-05, 2.3333999999999855e-05, 2.2542000000000395e-05, 2.2887999999998687e-05, 2.3444000000000936e-05, 2.3235999999999396e-05, 2.344500000000041e-05, 2.312499999999884e-05, 2.27229999999988e-05, 2.3026999999998382e-05, 2.305500000000099e-05, 2.2930000000000866e-05, 2.284699999999945e-05, 2.2971999999999576e-05, 2.333300000000038e-05, 2.2986000000002615e-05, 2.3416000000001796e-05, 2.3013999999998286e-05, 2.280500000000074e-05, 2.315299999999798e-05, 2.286100000000249e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.230" endtime="20201117 14:41:00.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.226" endtime="20201117 14:41:00.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.235" endtime="20201117 14:41:00.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.238" endtime="20201117 14:41:00.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.237" endtime="20201117 14:41:00.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.233" endtime="20201117 14:41:00.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.865" endtime="20201117 14:41:00.259"></status>
</kw>
<msg timestamp="20201117 14:41:00.260" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.268" endtime="20201117 14:41:00.286"></status>
</kw>
<msg timestamp="20201117 14:41:00.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.267" endtime="20201117 14:41:00.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.288" endtime="20201117 14:41:00.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.290" endtime="20201117 14:41:00.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.264" endtime="20201117 14:41:00.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.262" endtime="20201117 14:41:00.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.301" endtime="20201117 14:41:00.587"></status>
</kw>
<msg timestamp="20201117 14:41:00.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.299" endtime="20201117 14:41:00.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.591" endtime="20201117 14:41:00.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.600" endtime="20201117 14:41:00.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.296" endtime="20201117 14:41:00.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.295" endtime="20201117 14:41:00.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.607" level="INFO">${RESULT} = [{'time': 0.020001583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.254100000000092e-05, 'source_diff': 2.254100000000092e-05}, {'time': 0.020038583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:00.604" endtime="20201117 14:41:00.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:00.608" endtime="20201117 14:41:00.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.625" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.624" endtime="20201117 14:41:00.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.628" level="INFO">VALUE: [2.254100000000092e-05, 2.287499999999859e-05, 2.337499999999909e-05, 2.34030000000017e-05, 2.2540999999997452e-05, 2.3054999999997522e-05, 2.3250000000002435e-05, 2.3472000000000076e-05, 2.3249999999998966e-05, 2.2778000000001075e-05, 2.3320000000000285e-05, 2.2735999999998896e-05, 2.3264000000002005e-05, 2.312500000000231e-05, 2.3430000000001366e-05, 2.2749999999998466e-05, 2.2792000000000645e-05, 2.316700000000102e-05, 2.3306000000000715e-05, 2.258299999999963e-05, 2.2555999999999965e-05, 2.2583999999999105e-05, 2.34169999999978e-05, 2.25969999999992e-05, 2.319500000000016e-05, 2.295899999999948e-05, 2.2999999999998716e-05, 2.2652000000001477e-05, 2.286099999999902e-05, 2.2722000000002796e-05, 2.323699999999887e-05, 2.3306000000000715e-05, 2.315300000000145e-05, 2.266700000000052e-05, 2.2736000000002365e-05, 2.345899999999998e-05, 2.281900000000031e-05, 2.2512999999998312e-05, 2.2999999999998716e-05, 2.3040999999997952e-05, 2.2694000000000186e-05, 2.3500000000002685e-05, 2.2666000000001046e-05, 2.3180000000001116e-05, 2.2694000000000186e-05, 2.261100000000224e-05, 2.25969999999992e-05, 2.2721999999999326e-05, 2.262500000000181e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.627" endtime="20201117 14:41:00.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.622" endtime="20201117 14:41:00.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.631" endtime="20201117 14:41:00.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.635" endtime="20201117 14:41:00.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.633" endtime="20201117 14:41:00.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.630" endtime="20201117 14:41:00.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.260" endtime="20201117 14:41:00.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.863" endtime="20201117 14:41:00.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.863" endtime="20201117 14:41:00.656"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.658" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.668" endtime="20201117 14:41:00.686"></status>
</kw>
<msg timestamp="20201117 14:41:00.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.665" endtime="20201117 14:41:00.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.688" endtime="20201117 14:41:00.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.690" endtime="20201117 14:41:00.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.663" endtime="20201117 14:41:00.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.661" endtime="20201117 14:41:00.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.700" endtime="20201117 14:41:00.987"></status>
</kw>
<msg timestamp="20201117 14:41:00.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024594986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.699" endtime="20201117 14:41:00.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024570764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024594986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.991" endtime="20201117 14:41:00.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.000" endtime="20201117 14:41:01.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.696" endtime="20201117 14:41:01.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.694" endtime="20201117 14:41:01.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.007" level="INFO">${RESULT} = [{'time': 0.024594986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4222000000000826e-05, 'source_diff': 2.4222000000000826e-05}, {'time': 0.024633056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.003" endtime="20201117 14:41:01.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:01.008" endtime="20201117 14:41:01.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.026" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.025" endtime="20201117 14:41:01.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.029" level="INFO">VALUE: [2.4222000000000826e-05, 2.3611999999999245e-05, 2.419500000000116e-05, 2.4041999999998426e-05, 2.419499999999769e-05, 2.4263999999999536e-05, 2.386100000000002e-05, 2.419500000000116e-05, 2.4471999999997607e-05, 2.4513999999999786e-05, 2.3819999999997316e-05, 2.40970000000007e-05, 2.391700000000177e-05, 2.4042000000001895e-05, 2.3834000000000355e-05, 2.3528000000001825e-05, 2.3611999999999245e-05, 2.44169999999988e-05, 2.387499999999959e-05, 2.447300000000055e-05, 2.413899999999941e-05, 2.420900000000073e-05, 2.4041999999998426e-05, 2.4263999999999536e-05, 2.3915999999998827e-05, 2.361099999999977e-05, 2.3957999999997537e-05, 2.386100000000002e-05, 2.3665999999998577e-05, 2.4444000000001936e-05, 2.40970000000007e-05, 2.4486000000000646e-05, 2.3694000000001186e-05, 2.361099999999977e-05, 2.3513999999998786e-05, 2.3499999999999216e-05, 2.370900000000023e-05, 2.4082999999997662e-05, 2.3735999999999896e-05, 2.40970000000007e-05, 2.436100000000052e-05, 2.3570000000000535e-05, 2.413899999999941e-05, 2.444499999999794e-05, 2.383300000000088e-05, 2.438899999999966e-05, 2.3806000000001215e-05, 2.369500000000066e-05, 2.3556000000000965e-05, 2.3735999999999896e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.027" endtime="20201117 14:41:01.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.023" endtime="20201117 14:41:01.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.032" endtime="20201117 14:41:01.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.036" endtime="20201117 14:41:01.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.034" endtime="20201117 14:41:01.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.030" endtime="20201117 14:41:01.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.659" endtime="20201117 14:41:01.057"></status>
</kw>
<msg timestamp="20201117 14:41:01.057" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.065" endtime="20201117 14:41:01.083"></status>
</kw>
<msg timestamp="20201117 14:41:01.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.064" endtime="20201117 14:41:01.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.084" endtime="20201117 14:41:01.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.087" endtime="20201117 14:41:01.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.061" endtime="20201117 14:41:01.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.059" endtime="20201117 14:41:01.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.098" endtime="20201117 14:41:01.383"></status>
</kw>
<msg timestamp="20201117 14:41:01.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.096" endtime="20201117 14:41:01.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.388" endtime="20201117 14:41:01.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.396" endtime="20201117 14:41:01.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.093" endtime="20201117 14:41:01.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.092" endtime="20201117 14:41:01.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.403" level="INFO">${RESULT} = [{'time': 0.019848292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3834000000000355e-05, 'source_diff': 2.3834000000000355e-05}, {'time': 0.019887319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.400" endtime="20201117 14:41:01.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:01.404" endtime="20201117 14:41:01.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.422" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.421" endtime="20201117 14:41:01.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.424" level="INFO">VALUE: [2.3834000000000355e-05, 2.406900000000156e-05, 2.37229999999998e-05, 2.3846999999996982e-05, 2.366700000000152e-05, 2.3776999999999132e-05, 2.4236000000000396e-05, 2.40970000000007e-05, 2.4236000000000396e-05, 2.4415999999999327e-05, 2.365299999999848e-05, 2.436100000000052e-05, 2.3915999999998827e-05, 2.4332999999997912e-05, 2.387499999999959e-05, 2.4291999999998676e-05, 2.3722000000000326e-05, 2.411100000000027e-05, 2.3791999999998176e-05, 2.415299999999898e-05, 2.391700000000177e-05, 2.3861999999999495e-05, 2.4278000000002575e-05, 2.4056000000001465e-05, 2.366699999999805e-05, 2.4041999999998426e-05, 2.394499999999744e-05, 2.4277999999999106e-05, 2.4249999999999966e-05, 2.368099999999762e-05, 2.4319999999997816e-05, 2.3541999999997926e-05, 2.40970000000007e-05, 2.3806000000001215e-05, 2.4042000000001895e-05, 2.3985999999996677e-05, 2.4000000000003185e-05, 2.447300000000055e-05, 2.4277999999999106e-05, 2.3735999999999896e-05, 2.4348000000000425e-05, 2.3929999999998397e-05, 2.4028000000002325e-05, 2.381900000000131e-05, 2.391700000000177e-05, 2.4263999999999536e-05, 2.4472000000001076e-05, 2.3540999999998452e-05, 2.363899999999891e-05, 2.3693999999997717e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.423" endtime="20201117 14:41:01.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.418" endtime="20201117 14:41:01.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.427" endtime="20201117 14:41:01.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.431" endtime="20201117 14:41:01.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.429" endtime="20201117 14:41:01.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.426" endtime="20201117 14:41:01.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.057" endtime="20201117 14:41:01.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.657" endtime="20201117 14:41:01.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.656" endtime="20201117 14:41:01.452"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.455" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.464" endtime="20201117 14:41:01.482"></status>
</kw>
<msg timestamp="20201117 14:41:01.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.462" endtime="20201117 14:41:01.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.483" endtime="20201117 14:41:01.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.486" endtime="20201117 14:41:01.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.459" endtime="20201117 14:41:01.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.457" endtime="20201117 14:41:01.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.495" endtime="20201117 14:41:01.781"></status>
</kw>
<msg timestamp="20201117 14:41:01.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.494" endtime="20201117 14:41:01.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.785" endtime="20201117 14:41:01.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.794" endtime="20201117 14:41:01.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.491" endtime="20201117 14:41:01.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.489" endtime="20201117 14:41:01.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.801" level="INFO">${RESULT} = [{'time': 0.023014667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.538900000000066e-05, 'source_diff': 2.538900000000066e-05}, {'time': 0.023055667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:01.797" endtime="20201117 14:41:01.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.815" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:01.802" endtime="20201117 14:41:01.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.819" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.818" endtime="20201117 14:41:01.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.822" level="INFO">VALUE: [2.538900000000066e-05, 2.5069999999998566e-05, 2.4860999999997552e-05, 2.5500000000001216e-05, 2.4790999999999702e-05, 2.5179999999999647e-05, 2.461100000000077e-05, 2.537500000000109e-05, 2.5054999999999522e-05, 2.484700000000145e-05, 2.4679999999999147e-05, 2.5096999999998232e-05, 2.4736000000000896e-05, 2.4944000000002436e-05, 2.531900000000281e-05, 2.5416000000000327e-05, 2.5040999999999952e-05, 2.50970000000017e-05, 2.4930000000002867e-05, 2.4665999999999577e-05, 2.4527999999999356e-05, 2.516699999999955e-05, 2.481900000000231e-05, 2.487500000000059e-05, 2.5569999999999066e-05, 2.493099999999887e-05, 2.5346999999998482e-05, 2.5249999999997497e-05, 2.4957999999998537e-05, 2.5528000000000356e-05, 2.4805999999998746e-05, 2.45970000000012e-05, 2.5278000000000106e-05, 2.5513999999997317e-05, 2.5042000000002895e-05, 2.4750000000000466e-05, 2.5346999999998482e-05, 2.516699999999955e-05, 2.5041999999999426e-05, 2.462500000000034e-05, 2.5041999999999426e-05, 2.497300000000105e-05, 2.461100000000077e-05, 2.4555999999998496e-05, 2.5513000000001312e-05, 2.5429999999999897e-05, 2.5402000000000757e-05, 2.534700000000195e-05, 2.4943999999998967e-05, 2.5416000000000327e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.820" endtime="20201117 14:41:01.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.816" endtime="20201117 14:41:01.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.825" endtime="20201117 14:41:01.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.829" endtime="20201117 14:41:01.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.827" endtime="20201117 14:41:01.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.823" endtime="20201117 14:41:01.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.455" endtime="20201117 14:41:01.850"></status>
</kw>
<msg timestamp="20201117 14:41:01.850" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.859" endtime="20201117 14:41:01.877"></status>
</kw>
<msg timestamp="20201117 14:41:01.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.857" endtime="20201117 14:41:01.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.879" endtime="20201117 14:41:01.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.881" endtime="20201117 14:41:01.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.855" endtime="20201117 14:41:01.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.852" endtime="20201117 14:41:01.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.891" endtime="20201117 14:41:02.178"></status>
</kw>
<msg timestamp="20201117 14:41:02.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020369028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.890" endtime="20201117 14:41:02.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020369028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.182" endtime="20201117 14:41:02.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.190" endtime="20201117 14:41:02.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.887" endtime="20201117 14:41:02.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.885" endtime="20201117 14:41:02.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.197" level="INFO">${RESULT} = [{'time': 0.020394014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4985999999997677e-05, 'source_diff': 2.4985999999997677e-05}, {'time': 0.020434958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.194" endtime="20201117 14:41:02.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.211" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:02.198" endtime="20201117 14:41:02.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.216" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.215" endtime="20201117 14:41:02.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.218" level="INFO">VALUE: [2.4985999999997677e-05, 2.511100000000127e-05, 2.4568999999998592e-05, 2.4679999999999147e-05, 2.4818999999998842e-05, 2.540300000000023e-05, 2.5082999999998662e-05, 2.4679999999999147e-05, 2.4944000000002436e-05, 2.4791999999999176e-05, 2.5235999999997927e-05, 2.513900000000041e-05, 2.5360999999998052e-05, 2.4860999999997552e-05, 2.5499999999997747e-05, 2.5042000000002895e-05, 2.516699999999955e-05, 2.537500000000109e-05, 2.469499999999819e-05, 2.486100000000102e-05, 2.4721999999997857e-05, 2.4513999999999786e-05, 2.484700000000145e-05, 2.4637999999996968e-05, 2.463899999999991e-05, 2.47230000000008e-05, 2.54169999999998e-05, 2.493100000000234e-05, 2.543099999999937e-05, 2.469500000000166e-05, 2.523700000000087e-05, 2.495899999999801e-05, 2.498700000000062e-05, 2.5138000000000937e-05, 2.5138000000000937e-05, 2.4554999999999022e-05, 2.4652000000000007e-05, 2.5291000000000202e-05, 2.505500000000299e-05, 2.4693999999998717e-05, 2.5304999999999772e-05, 2.5291000000000202e-05, 2.5471999999998607e-05, 2.5000000000000716e-05, 2.4929999999999397e-05, 2.5444000000002936e-05, 2.4750000000000466e-05, 2.4860999999997552e-05, 2.5222000000001826e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.217" endtime="20201117 14:41:02.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.212" endtime="20201117 14:41:02.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.222" endtime="20201117 14:41:02.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.226" endtime="20201117 14:41:02.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.224" endtime="20201117 14:41:02.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.220" endtime="20201117 14:41:02.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.851" endtime="20201117 14:41:02.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.453" endtime="20201117 14:41:02.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.453" endtime="20201117 14:41:02.247"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.249" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.258" endtime="20201117 14:41:02.277"></status>
</kw>
<msg timestamp="20201117 14:41:02.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.257" endtime="20201117 14:41:02.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.279" endtime="20201117 14:41:02.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.282" endtime="20201117 14:41:02.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.254" endtime="20201117 14:41:02.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.252" endtime="20201117 14:41:02.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.291" endtime="20201117 14:41:02.577"></status>
</kw>
<msg timestamp="20201117 14:41:02.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023564208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.289" endtime="20201117 14:41:02.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023564208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.581" endtime="20201117 14:41:02.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.590" endtime="20201117 14:41:02.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.287" endtime="20201117 14:41:02.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.285" endtime="20201117 14:41:02.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.597" level="INFO">${RESULT} = [{'time': 0.023564208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6291000000001202e-05, 'source_diff': 2.6291000000001202e-05}, {'time': 0.023603222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.593" endtime="20201117 14:41:02.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:02.598" endtime="20201117 14:41:02.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.616" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.615" endtime="20201117 14:41:02.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.619" level="INFO">VALUE: [2.6291000000001202e-05, 2.6082999999999662e-05, 2.5805000000000272e-05, 2.5957999999999537e-05, 2.638900000000166e-05, 2.6055000000000522e-05, 2.6416000000001327e-05, 2.5943999999999967e-05, 2.6305000000000772e-05, 2.64309999999969e-05, 2.590300000000073e-05, 2.6374999999998622e-05, 2.5528000000000356e-05, 2.60970000000027e-05, 2.5555999999999496e-05, 2.6346999999999482e-05, 2.5735999999998427e-05, 2.59170000000003e-05, 2.6236000000002396e-05, 2.64170000000008e-05, 2.618100000000012e-05, 2.64170000000008e-05, 2.5736000000001896e-05, 2.6096999999999232e-05, 2.5999999999998247e-05, 2.640299999999776e-05, 2.620899999999926e-05, 2.5986000000002146e-05, 2.6250000000001966e-05, 2.590299999999726e-05, 2.598699999999815e-05, 2.59170000000003e-05, 2.638900000000166e-05, 2.5861999999998025e-05, 2.620899999999926e-05, 2.6374999999998622e-05, 2.5596999999998732e-05, 2.612500000000184e-05, 2.5541000000000452e-05, 2.5721999999998857e-05, 2.5846999999998982e-05, 2.561100000000177e-05, 2.6165999999997608e-05, 2.6415999999997858e-05, 2.5791000000000702e-05, 2.5791000000000702e-05, 2.563900000000091e-05, 2.5736000000001896e-05, 2.5555999999999496e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.618" endtime="20201117 14:41:02.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.613" endtime="20201117 14:41:02.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.623" endtime="20201117 14:41:02.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.626" endtime="20201117 14:41:02.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.625" endtime="20201117 14:41:02.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.621" endtime="20201117 14:41:02.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.250" endtime="20201117 14:41:02.647"></status>
</kw>
<msg timestamp="20201117 14:41:02.647" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.656" endtime="20201117 14:41:02.674"></status>
</kw>
<msg timestamp="20201117 14:41:02.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.655" endtime="20201117 14:41:02.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.675" endtime="20201117 14:41:02.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.678" endtime="20201117 14:41:02.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.652" endtime="20201117 14:41:02.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.650" endtime="20201117 14:41:02.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.688" endtime="20201117 14:41:02.974"></status>
</kw>
<msg timestamp="20201117 14:41:02.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.687" endtime="20201117 14:41:02.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.978" endtime="20201117 14:41:02.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.987" endtime="20201117 14:41:02.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.684" endtime="20201117 14:41:02.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.682" endtime="20201117 14:41:02.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.995" level="INFO">${RESULT} = [{'time': 0.020189375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6332999999999912e-05, 'source_diff': 2.6332999999999912e-05}, {'time': 0.020229361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:02.991" endtime="20201117 14:41:02.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.009" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:02.996" endtime="20201117 14:41:03.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.014" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.013" endtime="20201117 14:41:03.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.016" level="INFO">VALUE: [2.6332999999999912e-05, 2.636100000000252e-05, 2.594500000000291e-05, 2.6278000000001106e-05, 2.637500000000209e-05, 2.59170000000003e-05, 2.5750000000001466e-05, 2.5763000000001562e-05, 2.618100000000012e-05, 2.618100000000012e-05, 2.5792000000000176e-05, 2.6165999999997608e-05, 2.5735999999998427e-05, 2.6250000000001966e-05, 2.597299999999858e-05, 2.5736000000001896e-05, 2.6097999999998706e-05, 2.6249999999998497e-05, 2.565300000000048e-05, 2.612500000000184e-05, 2.6042000000000426e-05, 2.622299999999883e-05, 2.6110999999998802e-05, 2.590300000000073e-05, 2.6166000000001077e-05, 2.6180000000000647e-05, 2.6471999999999607e-05, 2.5999999999998247e-05, 2.6069000000000092e-05, 2.6055000000000522e-05, 2.5791000000000702e-05, 2.5999999999998247e-05, 2.616700000000055e-05, 2.5805000000000272e-05, 2.5528000000000356e-05, 2.6221999999999357e-05, 2.616700000000055e-05, 2.5986000000002146e-05, 2.5792000000000176e-05, 2.563900000000091e-05, 2.6069999999999566e-05, 2.5860999999998552e-05, 2.5541999999999926e-05, 2.561100000000177e-05, 2.616700000000055e-05, 2.6000000000001716e-05, 2.591699999999683e-05, 2.5528000000000356e-05, 2.6278000000001106e-05, 2.618100000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.015" endtime="20201117 14:41:03.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.010" endtime="20201117 14:41:03.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.020" endtime="20201117 14:41:03.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.024" endtime="20201117 14:41:03.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.022" endtime="20201117 14:41:03.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.018" endtime="20201117 14:41:03.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.648" endtime="20201117 14:41:03.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.248" endtime="20201117 14:41:03.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.247" endtime="20201117 14:41:03.045"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.047" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.056" endtime="20201117 14:41:03.074"></status>
</kw>
<msg timestamp="20201117 14:41:03.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.055" endtime="20201117 14:41:03.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.076" endtime="20201117 14:41:03.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.078" endtime="20201117 14:41:03.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.052" endtime="20201117 14:41:03.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.049" endtime="20201117 14:41:03.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.088" endtime="20201117 14:41:03.374"></status>
</kw>
<msg timestamp="20201117 14:41:03.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:03.086" endtime="20201117 14:41:03.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:03.378" endtime="20201117 14:41:03.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.387" endtime="20201117 14:41:03.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.084" endtime="20201117 14:41:03.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.082" endtime="20201117 14:41:03.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.394" level="INFO">${RESULT} = [{'time': 0.022680417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.716700000000155e-05, 'source_diff': 2.716700000000155e-05}, {'time': 0.022720431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:03.390" endtime="20201117 14:41:03.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.408" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:03.395" endtime="20201117 14:41:03.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.413" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.411" endtime="20201117 14:41:03.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.416" level="INFO">VALUE: [2.716700000000155e-05, 2.6833999999999886e-05, 2.6847999999999456e-05, 2.7320000000000816e-05, 2.716700000000155e-05, 2.6597999999999206e-05, 2.7013999999998817e-05, 2.7347999999999956e-05, 2.7290999999998733e-05, 2.6860999999999552e-05, 2.715299999999851e-05, 2.691699999999783e-05, 2.7013999999998817e-05, 2.6790999999998233e-05, 2.6874999999999122e-05, 2.7291999999998207e-05, 2.740300000000223e-05, 2.6860999999999552e-05, 2.7471999999997138e-05, 2.7040999999998483e-05, 2.6790999999998233e-05, 2.6555000000001022e-05, 2.7207999999997318e-05, 2.6930000000001397e-05, 2.7221999999996888e-05, 2.6749999999998997e-05, 2.6972000000000107e-05, 2.7110999999999802e-05, 2.7222000000000357e-05, 2.6735999999999427e-05, 2.668100000000062e-05, 2.6596999999999732e-05, 2.740299999999876e-05, 2.7305999999997776e-05, 2.6958000000000537e-05, 2.7235999999999927e-05, 2.666700000000105e-05, 2.7499999999999747e-05, 2.6860999999999552e-05, 2.7111999999999276e-05, 2.6611999999998776e-05, 2.719500000000069e-05, 2.6611999999998776e-05, 2.7306000000001246e-05, 2.6749999999998997e-05, 2.6583000000000162e-05, 2.6818999999997373e-05, 2.7026999999998913e-05, 2.6972000000000107e-05, 2.7000000000002716e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.414" endtime="20201117 14:41:03.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.409" endtime="20201117 14:41:03.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.419" endtime="20201117 14:41:03.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.422" endtime="20201117 14:41:03.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.421" endtime="20201117 14:41:03.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.417" endtime="20201117 14:41:03.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.048" endtime="20201117 14:41:03.443"></status>
</kw>
<msg timestamp="20201117 14:41:03.443" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.452" endtime="20201117 14:41:03.469"></status>
</kw>
<msg timestamp="20201117 14:41:03.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.450" endtime="20201117 14:41:03.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.471" endtime="20201117 14:41:03.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.473" endtime="20201117 14:41:03.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.448" endtime="20201117 14:41:03.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.446" endtime="20201117 14:41:03.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.484" endtime="20201117 14:41:03.769"></status>
</kw>
<msg timestamp="20201117 14:41:03.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.482" endtime="20201117 14:41:03.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.774" endtime="20201117 14:41:03.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.782" endtime="20201117 14:41:03.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.479" endtime="20201117 14:41:03.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.478" endtime="20201117 14:41:03.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.789" level="INFO">${RESULT} = [{'time': 0.020017708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6721999999999857e-05, 'source_diff': 2.6721999999999857e-05}, {'time': 0.020058708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:03.786" endtime="20201117 14:41:03.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:03.790" endtime="20201117 14:41:03.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.808" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.807" endtime="20201117 14:41:03.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.810" level="INFO">VALUE: [2.6721999999999857e-05, 2.712500000000284e-05, 2.6776999999998663e-05, 2.7054999999998053e-05, 2.6944000000000967e-05, 2.7207999999997318e-05, 2.7388999999999192e-05, 2.7082999999997193e-05, 2.6943999999997498e-05, 2.715299999999851e-05, 2.6750000000002466e-05, 2.690299999999826e-05, 2.74170000000018e-05, 2.7292000000001676e-05, 2.7110999999999802e-05, 2.6708000000000287e-05, 2.7278000000002106e-05, 2.6570000000000066e-05, 2.7264000000002536e-05, 2.741699999999833e-05, 2.7306000000001246e-05, 2.6972000000000107e-05, 2.7334000000000386e-05, 2.7041999999997957e-05, 2.7306000000001246e-05, 2.716700000000155e-05, 2.694499999999697e-05, 2.6985999999999677e-05, 2.6763999999998567e-05, 2.6583999999999636e-05, 2.7069000000001092e-05, 2.7222000000000357e-05, 2.74170000000018e-05, 2.713900000000241e-05, 2.7290999999998733e-05, 2.7208000000000787e-05, 2.7415999999998858e-05, 2.7097000000000232e-05, 2.7180000000001647e-05, 2.6555000000001022e-05, 2.7054999999998053e-05, 2.7110999999999802e-05, 2.7249999999999497e-05, 2.6569000000000592e-05, 2.7429999999998428e-05, 2.69309999999974e-05, 2.665300000000148e-05, 2.6972000000000107e-05, 2.666700000000105e-05, 2.7361000000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.809" endtime="20201117 14:41:03.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.804" endtime="20201117 14:41:03.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.814" endtime="20201117 14:41:03.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.817" endtime="20201117 14:41:03.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.816" endtime="20201117 14:41:03.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.812" endtime="20201117 14:41:03.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.444" endtime="20201117 14:41:03.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.046" endtime="20201117 14:41:03.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.045" endtime="20201117 14:41:03.839"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.841" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.850" endtime="20201117 14:41:03.868"></status>
</kw>
<msg timestamp="20201117 14:41:03.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.848" endtime="20201117 14:41:03.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.870" endtime="20201117 14:41:03.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.873" endtime="20201117 14:41:03.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.845" endtime="20201117 14:41:03.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.843" endtime="20201117 14:41:03.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.882" endtime="20201117 14:41:04.169"></status>
</kw>
<msg timestamp="20201117 14:41:04.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023501611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023529194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.880" endtime="20201117 14:41:04.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023501611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023529194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.174" endtime="20201117 14:41:04.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.182" endtime="20201117 14:41:04.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.878" endtime="20201117 14:41:04.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.876" endtime="20201117 14:41:04.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.190" level="INFO">${RESULT} = [{'time': 0.023529194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7583000000001162e-05, 'source_diff': 2.7583000000001162e-05}, {'time': 0.023572181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.186" endtime="20201117 14:41:04.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.205" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:04.191" endtime="20201117 14:41:04.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.209" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.208" endtime="20201117 14:41:04.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.212" level="INFO">VALUE: [2.7583000000001162e-05, 2.844500000000194e-05, 2.7736000000000427e-05, 2.7652000000003008e-05, 2.7819000000001842e-05, 2.7526999999999413e-05, 2.845899999999804e-05, 2.7986000000000677e-05, 2.8179999999999178e-05, 2.8250000000000497e-05, 2.8457999999998568e-05, 2.8125000000000372e-05, 2.7540999999998983e-05, 2.7833000000001412e-05, 2.7624999999999872e-05, 2.7611000000000302e-05, 2.8415999999999858e-05, 2.7541999999998457e-05, 2.7513999999999317e-05, 2.8402999999999762e-05, 2.7736000000000427e-05, 2.8055999999998527e-05, 2.766699999999858e-05, 2.7749999999999997e-05, 2.7652999999999012e-05, 2.7652999999999012e-05, 2.766699999999858e-05, 2.8000000000000247e-05, 2.8568999999999123e-05, 2.7736000000000427e-05, 2.8486000000001177e-05, 2.8084000000001136e-05, 2.8055999999998527e-05, 2.8348000000000956e-05, 2.8221999999997888e-05, 2.772300000000033e-05, 2.7986000000000677e-05, 2.841699999999933e-05, 2.772300000000033e-05, 2.8027999999999387e-05, 2.822300000000083e-05, 2.7834000000000886e-05, 2.7736000000000427e-05, 2.8290999999999733e-05, 2.8068999999998623e-05, 2.7708000000001287e-05, 2.7847000000000982e-05, 2.7555000000002022e-05, 2.7971999999997638e-05, 2.7847000000000982e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.211" endtime="20201117 14:41:04.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.206" endtime="20201117 14:41:04.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.215" endtime="20201117 14:41:04.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.219" endtime="20201117 14:41:04.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.217" endtime="20201117 14:41:04.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.214" endtime="20201117 14:41:04.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.842" endtime="20201117 14:41:04.240"></status>
</kw>
<msg timestamp="20201117 14:41:04.240" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.248" endtime="20201117 14:41:04.266"></status>
</kw>
<msg timestamp="20201117 14:41:04.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.247" endtime="20201117 14:41:04.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.268" endtime="20201117 14:41:04.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.270" endtime="20201117 14:41:04.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.244" endtime="20201117 14:41:04.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.242" endtime="20201117 14:41:04.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.280" endtime="20201117 14:41:04.568"></status>
</kw>
<msg timestamp="20201117 14:41:04.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.279" endtime="20201117 14:41:04.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.572" endtime="20201117 14:41:04.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.587" endtime="20201117 14:41:04.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.276" endtime="20201117 14:41:04.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.274" endtime="20201117 14:41:04.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.594" level="INFO">${RESULT} = [{'time': 0.019887264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.769500000000119e-05, 'source_diff': 2.769500000000119e-05}, {'time': 0.019931208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:04.591" endtime="20201117 14:41:04.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:04.595" endtime="20201117 14:41:04.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.613" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.612" endtime="20201117 14:41:04.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.615" level="INFO">VALUE: [2.769500000000119e-05, 2.8193999999998748e-05, 2.7611000000000302e-05, 2.7652999999999012e-05, 2.7708000000001287e-05, 2.7624999999999872e-05, 2.7832999999997943e-05, 2.818100000000212e-05, 2.8056000000001996e-05, 2.7722000000000857e-05, 2.7861000000000552e-05, 2.84309999999989e-05, 2.7582999999997693e-05, 2.8389000000000192e-05, 2.7527999999998887e-05, 2.7847000000000982e-05, 2.8000000000000247e-05, 2.795899999999754e-05, 2.8055999999998527e-05, 2.8374999999997152e-05, 2.7833000000001412e-05, 2.818099999999865e-05, 2.843100000000237e-05, 2.845900000000151e-05, 2.8513000000000843e-05, 2.8306000000002246e-05, 2.8111999999996806e-05, 2.8318999999998873e-05, 2.8125000000000372e-05, 2.8527999999999887e-05, 2.7860999999997083e-05, 2.7888999999999692e-05, 2.8472000000001607e-05, 2.7888999999999692e-05, 2.7722000000000857e-05, 2.7777999999999137e-05, 2.7791999999998707e-05, 2.7526999999999413e-05, 2.7611000000000302e-05, 2.7513999999999317e-05, 2.8277999999999637e-05, 2.8290999999999733e-05, 2.7861000000000552e-05, 2.8304999999999303e-05, 2.8347000000001482e-05, 2.8138999999999942e-05, 2.7749999999999997e-05, 2.818099999999865e-05, 2.7847000000000982e-05, 2.7569999999997596e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.614" endtime="20201117 14:41:04.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.609" endtime="20201117 14:41:04.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.619" endtime="20201117 14:41:04.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.622" endtime="20201117 14:41:04.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.620" endtime="20201117 14:41:04.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.617" endtime="20201117 14:41:04.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.241" endtime="20201117 14:41:04.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.840" endtime="20201117 14:41:04.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.839" endtime="20201117 14:41:04.643"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.646" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.655" endtime="20201117 14:41:04.673"></status>
</kw>
<msg timestamp="20201117 14:41:04.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.653" endtime="20201117 14:41:04.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.674" endtime="20201117 14:41:04.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.677" endtime="20201117 14:41:04.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.650" endtime="20201117 14:41:04.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.648" endtime="20201117 14:41:04.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.687" endtime="20201117 14:41:04.972"></status>
</kw>
<msg timestamp="20201117 14:41:04.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.685" endtime="20201117 14:41:04.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.976" endtime="20201117 14:41:04.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.985" endtime="20201117 14:41:04.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.682" endtime="20201117 14:41:04.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.680" endtime="20201117 14:41:04.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.992" level="INFO">${RESULT} = [{'time': 0.022854417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8555999999999027e-05, 'source_diff': 2.8555999999999027e-05}, {'time': 0.022898403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:04.988" endtime="20201117 14:41:04.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:04.993" endtime="20201117 14:41:05.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.010" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.009" endtime="20201117 14:41:05.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.013" level="INFO">VALUE: [2.8555999999999027e-05, 2.8861000000001552e-05, 2.8639000000000442e-05, 2.8848000000001456e-05, 2.9139000000000942e-05, 2.870899999999829e-05, 2.9430000000000428e-05, 2.8846999999998513e-05, 2.8929999999999928e-05, 2.944499999999947e-05, 2.9528000000000887e-05, 2.8832999999998943e-05, 2.8971999999998638e-05, 2.8903000000000262e-05, 2.9374999999998153e-05, 2.8875000000001122e-05, 2.9346999999999013e-05, 2.9040999999997014e-05, 2.8679999999999678e-05, 2.9499999999998278e-05, 2.8916999999999832e-05, 2.89309999999994e-05, 2.9235999999998458e-05, 2.9221999999998888e-05, 2.9082999999999193e-05, 2.9000000000001247e-05, 2.9110999999998333e-05, 2.9500000000001747e-05, 2.8624999999997403e-05, 2.944499999999947e-05, 2.9056000000002996e-05, 2.8791999999999707e-05, 2.8805999999999277e-05, 2.8584000000001636e-05, 2.9305999999999777e-05, 2.8791999999999707e-05, 2.8791999999999707e-05, 2.9277000000001163e-05, 2.87370000000009e-05, 2.9167000000000082e-05, 2.898700000000115e-05, 2.8833000000002412e-05, 2.8527000000000413e-05, 2.9096999999998763e-05, 2.9457999999999568e-05, 2.9193999999999748e-05, 2.9305000000000303e-05, 2.9347000000002482e-05, 2.9055000000000053e-05, 2.9193999999999748e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.012" endtime="20201117 14:41:05.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.007" endtime="20201117 14:41:05.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.017" endtime="20201117 14:41:05.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.021" endtime="20201117 14:41:05.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.019" endtime="20201117 14:41:05.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.015" endtime="20201117 14:41:05.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.646" endtime="20201117 14:41:05.042"></status>
</kw>
<msg timestamp="20201117 14:41:05.042" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.051" endtime="20201117 14:41:05.069"></status>
</kw>
<msg timestamp="20201117 14:41:05.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.049" endtime="20201117 14:41:05.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.071" endtime="20201117 14:41:05.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.074" endtime="20201117 14:41:05.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.046" endtime="20201117 14:41:05.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.044" endtime="20201117 14:41:05.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.084" endtime="20201117 14:41:05.370"></status>
</kw>
<msg timestamp="20201117 14:41:05.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.082" endtime="20201117 14:41:05.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.374" endtime="20201117 14:41:05.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.383" endtime="20201117 14:41:05.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.080" endtime="20201117 14:41:05.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.078" endtime="20201117 14:41:05.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.390" level="INFO">${RESULT} = [{'time': 0.020101458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8679999999999678e-05, 'source_diff': 2.8679999999999678e-05}, {'time': 0.020146444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.387" endtime="20201117 14:41:05.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:05.391" endtime="20201117 14:41:05.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.409" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.407" endtime="20201117 14:41:05.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.411" level="INFO">VALUE: [2.8679999999999678e-05, 2.8846999999998513e-05, 2.8639000000000442e-05, 2.9180000000000178e-05, 2.8888000000001218e-05, 2.9111000000001802e-05, 2.9333000000002912e-05, 2.916599999999714e-05, 2.8804999999999803e-05, 2.9332999999999443e-05, 2.8929999999999928e-05, 2.9041999999999957e-05, 2.9068999999999623e-05, 2.9416000000000858e-05, 2.8666999999999582e-05, 2.8860999999998083e-05, 2.9236000000001927e-05, 2.9416999999996862e-05, 2.9472000000002607e-05, 2.8624999999997403e-05, 2.8527999999999887e-05, 2.869499999999872e-05, 2.9347000000002482e-05, 2.8820000000002316e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.8875000000001122e-05, 2.9069999999999097e-05, 2.9403000000000762e-05, 2.9361999999998056e-05, 2.8625000000000872e-05, 2.895899999999854e-05, 2.897299999999811e-05, 2.9374999999998153e-05, 2.8554999999999553e-05, 2.8610999999997833e-05, 2.8554999999999553e-05, 2.8875000000001122e-05, 2.9346999999999013e-05, 2.8666000000000108e-05, 2.8791000000000233e-05, 2.8569000000002592e-05, 2.9500000000001747e-05, 2.8638999999996972e-05, 2.8750000000000997e-05, 2.9082999999999193e-05, 2.9167000000000082e-05, 2.8971999999998638e-05, 2.9375000000001622e-05, 2.9500000000001747e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.410" endtime="20201117 14:41:05.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.405" endtime="20201117 14:41:05.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.415" endtime="20201117 14:41:05.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.418" endtime="20201117 14:41:05.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.416" endtime="20201117 14:41:05.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.413" endtime="20201117 14:41:05.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.043" endtime="20201117 14:41:05.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.645" endtime="20201117 14:41:05.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.644" endtime="20201117 14:41:05.439"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.442" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.451" endtime="20201117 14:41:05.469"></status>
</kw>
<msg timestamp="20201117 14:41:05.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.449" endtime="20201117 14:41:05.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.471" endtime="20201117 14:41:05.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.473" endtime="20201117 14:41:05.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.446" endtime="20201117 14:41:05.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.444" endtime="20201117 14:41:05.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.483" endtime="20201117 14:41:05.768"></status>
</kw>
<msg timestamp="20201117 14:41:05.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023881458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.481" endtime="20201117 14:41:05.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023881458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.773" endtime="20201117 14:41:05.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.781" endtime="20201117 14:41:05.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.479" endtime="20201117 14:41:05.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.477" endtime="20201117 14:41:05.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.788" level="INFO">${RESULT} = [{'time': 0.023911833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0374999999999153e-05, 'source_diff': 3.0374999999999153e-05}, {'time': 0.023957861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.785" endtime="20201117 14:41:05.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:05.789" endtime="20201117 14:41:05.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.808" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.807" endtime="20201117 14:41:05.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.811" level="INFO">VALUE: [3.0374999999999153e-05, 2.9778000000001137e-05, 3.0485999999999708e-05, 3.0319000000000873e-05, 3.0416999999997862e-05, 3.0360999999999583e-05, 3.0111000000002802e-05, 2.9610999999998833e-05, 2.9527999999997417e-05, 2.9638999999997973e-05, 2.9597000000002732e-05, 3.0291999999997737e-05, 3.0374999999999153e-05, 3.0278000000001637e-05, 3.0000000000002247e-05, 2.9542000000000457e-05, 2.9888999999998223e-05, 2.994499999999997e-05, 2.9986000000002677e-05, 2.9681000000000152e-05, 3.0485999999999708e-05, 2.9736000000002427e-05, 3.023699999999893e-05, 3.0097999999999236e-05, 2.9750000000001997e-05, 2.9790999999997764e-05, 3.0042000000000957e-05, 3.0014000000001817e-05, 3.0124999999998903e-05, 3.0374999999999153e-05, 2.9611000000002302e-05, 2.9819000000000373e-05, 2.9985999999999208e-05, 2.9860999999999083e-05, 2.9903000000001262e-05, 2.9555000000000553e-05, 2.9903000000001262e-05, 2.9971999999999638e-05, 2.995899999999954e-05, 2.9999999999998778e-05, 2.9596999999999263e-05, 2.9596999999999263e-05, 3.0013999999998348e-05, 2.9542000000000457e-05, 2.9916999999997362e-05, 2.9735999999998958e-05, 2.9792000000000707e-05, 2.9763999999998098e-05, 2.9667000000000582e-05, 2.9985999999999208e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.809" endtime="20201117 14:41:05.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.804" endtime="20201117 14:41:05.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.814" endtime="20201117 14:41:05.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.818" endtime="20201117 14:41:05.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.816" endtime="20201117 14:41:05.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.812" endtime="20201117 14:41:05.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.442" endtime="20201117 14:41:05.839"></status>
</kw>
<msg timestamp="20201117 14:41:05.839" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.848" endtime="20201117 14:41:05.866"></status>
</kw>
<msg timestamp="20201117 14:41:05.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.846" endtime="20201117 14:41:05.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.867" endtime="20201117 14:41:05.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.870" endtime="20201117 14:41:05.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.843" endtime="20201117 14:41:05.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.841" endtime="20201117 14:41:05.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.880" endtime="20201117 14:41:06.166"></status>
</kw>
<msg timestamp="20201117 14:41:06.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.879" endtime="20201117 14:41:06.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.170" endtime="20201117 14:41:06.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.179" endtime="20201117 14:41:06.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.876" endtime="20201117 14:41:06.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.874" endtime="20201117 14:41:06.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.186" level="INFO">${RESULT} = [{'time': 0.019972792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9653000000001012e-05, 'source_diff': 2.9653000000001012e-05}, {'time': 0.020018806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:06.182" endtime="20201117 14:41:06.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.199" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:06.187" endtime="20201117 14:41:06.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.204" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.203" endtime="20201117 14:41:06.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.207" level="INFO">VALUE: [2.9653000000001012e-05, 2.9583999999999167e-05, 2.997299999999911e-05, 3.022299999999936e-05, 3.0374999999999153e-05, 2.9958000000000068e-05, 3.0083999999999667e-05, 2.9707999999999818e-05, 3.0360999999999583e-05, 2.9846999999999513e-05, 2.9735999999998958e-05, 3.0083000000000193e-05, 2.9916000000001358e-05, 2.9819000000000373e-05, 3.0472000000000138e-05, 2.9611000000002302e-05, 2.9694000000000248e-05, 2.9861000000002552e-05, 3.0292000000001207e-05, 2.9985999999999208e-05, 2.9917000000000832e-05, 2.9806000000000277e-05, 2.9610999999998833e-05, 3.0208000000000318e-05, 2.9806000000000277e-05, 2.9861000000002552e-05, 3.0181000000000652e-05, 3.0305999999997307e-05, 2.9680999999996682e-05, 2.9528000000000887e-05, 2.9721999999999388e-05, 3.0083999999999667e-05, 2.969499999999972e-05, 2.9735999999998958e-05, 3.0278000000001637e-05, 2.9681000000000152e-05, 2.9985999999999208e-05, 3.0028000000001387e-05, 2.9625000000001872e-05, 2.9653000000001012e-05, 3.0306000000000777e-05, 2.9542000000000457e-05, 3.0431000000000902e-05, 2.9736000000002427e-05, 2.9958000000000068e-05, 2.988800000000222e-05, 2.9624999999998403e-05, 2.9805000000000803e-05, 2.9556000000000027e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.205" endtime="20201117 14:41:06.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.200" endtime="20201117 14:41:06.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.210" endtime="20201117 14:41:06.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.214" endtime="20201117 14:41:06.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.212" endtime="20201117 14:41:06.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.209" endtime="20201117 14:41:06.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.840" endtime="20201117 14:41:06.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.440" endtime="20201117 14:41:06.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.440" endtime="20201117 14:41:06.235"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.238" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.246" endtime="20201117 14:41:06.264"></status>
</kw>
<msg timestamp="20201117 14:41:06.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.245" endtime="20201117 14:41:06.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.265" endtime="20201117 14:41:06.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.268" endtime="20201117 14:41:06.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.242" endtime="20201117 14:41:06.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.240" endtime="20201117 14:41:06.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.277" endtime="20201117 14:41:06.563"></status>
</kw>
<msg timestamp="20201117 14:41:06.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.276" endtime="20201117 14:41:06.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.568" endtime="20201117 14:41:06.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.576" endtime="20201117 14:41:06.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.273" endtime="20201117 14:41:06.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.271" endtime="20201117 14:41:06.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.583" level="INFO">${RESULT} = [{'time': 0.022381458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.098600000000021e-05, 'source_diff': 3.098600000000021e-05}, {'time': 0.022425458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:06.580" endtime="20201117 14:41:06.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.597" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:06.584" endtime="20201117 14:41:06.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.602" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.600" endtime="20201117 14:41:06.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.605" level="INFO">VALUE: [3.098600000000021e-05, 3.094399999999803e-05, 3.1040999999999014e-05, 3.123600000000046e-05, 3.141699999999886e-05, 3.088899999999922e-05, 3.054199999999799e-05, 3.118099999999818e-05, 3.080600000000128e-05, 3.061099999999983e-05, 3.127799999999917e-05, 3.080600000000128e-05, 3.123600000000046e-05, 3.137500000000015e-05, 3.125000000000003e-05, 3.072200000000039e-05, 3.133399999999745e-05, 3.104200000000196e-05, 3.054199999999799e-05, 3.137499999999668e-05, 3.1026999999999444e-05, 3.074999999999953e-05, 3.066699999999811e-05, 3.079200000000171e-05, 3.118100000000165e-05, 3.076400000000257e-05, 3.136100000000058e-05, 3.1304999999998834e-05, 3.1348000000000487e-05, 3.129100000000273e-05, 3.069400000000125e-05, 3.0513999999998848e-05, 3.108300000000119e-05, 3.134700000000101e-05, 3.069399999999778e-05, 3.1346999999997543e-05, 3.097200000000064e-05, 3.1054999999998584e-05, 3.1054999999998584e-05, 3.099999999999978e-05, 3.122200000000089e-05, 3.127800000000264e-05, 3.108300000000119e-05, 3.058300000000069e-05, 3.154199999999899e-05, 3.063899999999897e-05, 3.150000000000028e-05, 3.136100000000058e-05, 3.148600000000071e-05, 3.104200000000196e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.603" endtime="20201117 14:41:06.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.598" endtime="20201117 14:41:06.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.608" endtime="20201117 14:41:06.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.611" endtime="20201117 14:41:06.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.610" endtime="20201117 14:41:06.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.606" endtime="20201117 14:41:06.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.238" endtime="20201117 14:41:06.632"></status>
</kw>
<msg timestamp="20201117 14:41:06.633" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.641" endtime="20201117 14:41:06.659"></status>
</kw>
<msg timestamp="20201117 14:41:06.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.640" endtime="20201117 14:41:06.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.660" endtime="20201117 14:41:06.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.663" endtime="20201117 14:41:06.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.637" endtime="20201117 14:41:06.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.635" endtime="20201117 14:41:06.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.674" endtime="20201117 14:41:06.960"></status>
</kw>
<msg timestamp="20201117 14:41:06.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.672" endtime="20201117 14:41:06.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.964" endtime="20201117 14:41:06.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.973" endtime="20201117 14:41:06.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.669" endtime="20201117 14:41:06.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.667" endtime="20201117 14:41:06.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.980" level="INFO">${RESULT} = [{'time': 0.019962958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097200000000064e-05, 'source_diff': 3.097200000000064e-05}, {'time': 0.020009, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:06.976" endtime="20201117 14:41:06.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.994" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:06.981" endtime="20201117 14:41:06.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.999" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.998" endtime="20201117 14:41:06.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.001" level="INFO">VALUE: [3.097200000000064e-05, 3.097200000000064e-05, 3.087499999999965e-05, 3.123599999999699e-05, 3.0485999999999708e-05, 3.062500000000287e-05, 3.115299999999904e-05, 3.109700000000076e-05, 3.119500000000122e-05, 3.123600000000046e-05, 3.1346999999997543e-05, 3.136100000000058e-05, 3.115300000000251e-05, 3.05700000000006e-05, 3.122200000000089e-05, 3.063899999999897e-05, 3.119500000000122e-05, 3.068100000000115e-05, 3.145900000000104e-05, 3.082000000000085e-05, 3.141699999999886e-05, 3.152800000000289e-05, 3.093000000000193e-05, 3.137500000000015e-05, 3.097300000000011e-05, 3.066700000000158e-05, 3.147199999999767e-05, 3.09579999999976e-05, 3.098600000000021e-05, 3.116600000000261e-05, 3.138899999999972e-05, 3.066600000000211e-05, 3.093000000000193e-05, 3.116700000000208e-05, 3.059700000000026e-05, 3.09579999999976e-05, 3.102799999999892e-05, 3.115299999999904e-05, 3.11249999999999e-05, 3.084700000000051e-05, 3.116699999999861e-05, 3.141599999999939e-05, 3.095800000000107e-05, 3.138899999999972e-05, 3.150000000000028e-05, 3.119500000000122e-05, 3.1568999999998654e-05, 3.14579999999981e-05, 3.136100000000058e-05, 3.080600000000128e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.000" endtime="20201117 14:41:07.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.995" endtime="20201117 14:41:07.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.005" endtime="20201117 14:41:07.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.008" endtime="20201117 14:41:07.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.007" endtime="20201117 14:41:07.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.003" endtime="20201117 14:41:07.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.633" endtime="20201117 14:41:07.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.236" endtime="20201117 14:41:07.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.236" endtime="20201117 14:41:07.029"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.032" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.041" endtime="20201117 14:41:07.059"></status>
</kw>
<msg timestamp="20201117 14:41:07.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.039" endtime="20201117 14:41:07.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.061" endtime="20201117 14:41:07.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.063" endtime="20201117 14:41:07.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.036" endtime="20201117 14:41:07.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.034" endtime="20201117 14:41:07.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.073" endtime="20201117 14:41:07.359"></status>
</kw>
<msg timestamp="20201117 14:41:07.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024016472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024048597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.071" endtime="20201117 14:41:07.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024016472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024048597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.364" endtime="20201117 14:41:07.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.372" endtime="20201117 14:41:07.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.069" endtime="20201117 14:41:07.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.067" endtime="20201117 14:41:07.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.379" level="INFO">${RESULT} = [{'time': 0.024048597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.024095625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:07.376" endtime="20201117 14:41:07.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:07.380" endtime="20201117 14:41:07.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.399" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.398" endtime="20201117 14:41:07.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.402" level="INFO">VALUE: [3.21250000000009e-05, 3.1582999999998224e-05, 3.227800000000017e-05, 3.1846999999998044e-05, 3.222199999999842e-05, 3.200000000000078e-05, 3.237500000000115e-05, 3.166700000000258e-05, 3.16250000000004e-05, 3.172199999999792e-05, 3.177799999999967e-05, 3.227800000000017e-05, 3.20839999999982e-05, 3.175000000000053e-05, 3.2291000000000264e-05, 3.154200000000246e-05, 3.209700000000176e-05, 3.225000000000103e-05, 3.229200000000321e-05, 3.2360999999998113e-05, 3.202799999999992e-05, 3.166699999999911e-05, 3.180600000000228e-05, 3.168000000000268e-05, 3.223700000000093e-05, 3.200000000000078e-05, 3.2291000000000264e-05, 3.1610999999997363e-05, 3.208300000000219e-05, 3.191599999999989e-05, 3.2096999999998294e-05, 3.209700000000176e-05, 3.191699999999936e-05, 3.167999999999921e-05, 3.223600000000146e-05, 3.248599999999824e-05, 3.220799999999885e-05, 3.219500000000222e-05, 3.227800000000017e-05, 3.20700000000021e-05, 3.229199999999974e-05, 3.20700000000021e-05, 3.165200000000007e-05, 3.220799999999885e-05, 3.20700000000021e-05, 3.161100000000083e-05, 3.2318999999999404e-05, 3.244500000000247e-05, 3.165299999999954e-05, 3.173599999999749e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.400" endtime="20201117 14:41:07.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.395" endtime="20201117 14:41:07.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.405" endtime="20201117 14:41:07.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.409" endtime="20201117 14:41:07.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.407" endtime="20201117 14:41:07.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.403" endtime="20201117 14:41:07.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.033" endtime="20201117 14:41:07.429"></status>
</kw>
<msg timestamp="20201117 14:41:07.430" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.438" endtime="20201117 14:41:07.455"></status>
</kw>
<msg timestamp="20201117 14:41:07.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.437" endtime="20201117 14:41:07.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.457" endtime="20201117 14:41:07.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.460" endtime="20201117 14:41:07.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.434" endtime="20201117 14:41:07.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.432" endtime="20201117 14:41:07.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.470" endtime="20201117 14:41:07.756"></status>
</kw>
<msg timestamp="20201117 14:41:07.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.468" endtime="20201117 14:41:07.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.760" endtime="20201117 14:41:07.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.769" endtime="20201117 14:41:07.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.466" endtime="20201117 14:41:07.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.464" endtime="20201117 14:41:07.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.776" level="INFO">${RESULT} = [{'time': 0.020030625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.211100000000133e-05, 'source_diff': 3.211100000000133e-05}, {'time': 0.020077625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:07.773" endtime="20201117 14:41:07.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.790" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:07.777" endtime="20201117 14:41:07.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.795" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.794" endtime="20201117 14:41:07.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.797" level="INFO">VALUE: [3.211100000000133e-05, 3.209700000000176e-05, 3.2041000000000014e-05, 3.188900000000022e-05, 3.251399999999738e-05, 3.229199999999974e-05, 3.1818999999998904e-05, 3.1846999999998044e-05, 3.170900000000129e-05, 3.166699999999911e-05, 3.2374999999997683e-05, 3.198600000000121e-05, 3.168099999999868e-05, 3.236100000000158e-05, 3.172200000000139e-05, 3.1790999999999764e-05, 3.200000000000078e-05, 3.2291000000000264e-05, 3.197199999999817e-05, 3.149999999999681e-05, 3.251400000000085e-05, 3.248600000000171e-05, 3.195800000000207e-05, 3.224999999999756e-05, 3.2082999999998724e-05, 3.161100000000083e-05, 3.173600000000096e-05, 3.223600000000146e-05, 3.1596999999997794e-05, 3.211100000000133e-05, 3.198599999999774e-05, 3.166700000000258e-05, 3.187499999999718e-05, 3.247199999999867e-05, 3.173599999999749e-05, 3.191699999999936e-05, 3.184700000000151e-05, 3.15839999999977e-05, 3.248600000000171e-05, 3.170899999999782e-05, 3.19449999999985e-05, 3.248599999999824e-05, 3.180600000000228e-05, 3.1612000000000307e-05, 3.165299999999954e-05, 3.166599999999964e-05, 3.16250000000004e-05, 3.198699999999721e-05, 3.2041000000000014e-05, 3.222200000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.796" endtime="20201117 14:41:07.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.791" endtime="20201117 14:41:07.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.800" endtime="20201117 14:41:07.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.804" endtime="20201117 14:41:07.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.802" endtime="20201117 14:41:07.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.799" endtime="20201117 14:41:07.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.430" endtime="20201117 14:41:07.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.031" endtime="20201117 14:41:07.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.030" endtime="20201117 14:41:07.825"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.828" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.836" endtime="20201117 14:41:07.853"></status>
</kw>
<msg timestamp="20201117 14:41:07.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.835" endtime="20201117 14:41:07.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.855" endtime="20201117 14:41:07.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.858" endtime="20201117 14:41:07.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.832" endtime="20201117 14:41:07.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.830" endtime="20201117 14:41:07.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.868" endtime="20201117 14:41:08.154"></status>
</kw>
<msg timestamp="20201117 14:41:08.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.866" endtime="20201117 14:41:08.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.159" endtime="20201117 14:41:08.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.167" endtime="20201117 14:41:08.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.863" endtime="20201117 14:41:08.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.861" endtime="20201117 14:41:08.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.174" level="INFO">${RESULT} = [{'time': 0.022426819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3055000000000584e-05, 'source_diff': 3.3055000000000584e-05}, {'time': 0.022476819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:08.171" endtime="20201117 14:41:08.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.188" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:08.175" endtime="20201117 14:41:08.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.193" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.192" endtime="20201117 14:41:08.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.195" level="INFO">VALUE: [3.3055000000000584e-05, 3.349999999999881e-05, 3.26519999999976e-05, 3.2860999999998614e-05, 3.266600000000064e-05, 3.299999999999831e-05, 3.293000000000046e-05, 3.2791000000000764e-05, 3.293000000000046e-05, 3.3445e-05, 3.2832999999999474e-05, 3.318100000000018e-05, 3.297199999999917e-05, 3.270800000000282e-05, 3.3332999999999974e-05, 3.315300000000104e-05, 3.351399999999838e-05, 3.3346999999999544e-05, 3.268100000000315e-05, 3.349999999999881e-05, 3.293099999999993e-05, 3.308300000000319e-05, 3.331999999999988e-05, 3.327800000000117e-05, 3.266700000000011e-05, 3.3055000000000584e-05, 3.316600000000114e-05, 3.259800000000174e-05, 3.275000000000153e-05, 3.266600000000064e-05, 3.293000000000046e-05, 3.3360999999999114e-05, 3.298600000000221e-05, 3.298599999999874e-05, 3.34580000000001e-05, 3.27640000000011e-05, 3.3291000000001264e-05, 3.2791000000000764e-05, 3.274999999999806e-05, 3.316600000000114e-05, 3.318100000000018e-05, 3.3360999999999114e-05, 3.272200000000239e-05, 3.272199999999892e-05, 3.252800000000042e-05, 3.324999999999856e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.297199999999917e-05, 3.319499999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.194" endtime="20201117 14:41:08.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.189" endtime="20201117 14:41:08.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.199" endtime="20201117 14:41:08.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.202" endtime="20201117 14:41:08.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.201" endtime="20201117 14:41:08.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.197" endtime="20201117 14:41:08.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.828" endtime="20201117 14:41:08.223"></status>
</kw>
<msg timestamp="20201117 14:41:08.223" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.232" endtime="20201117 14:41:08.250"></status>
</kw>
<msg timestamp="20201117 14:41:08.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.230" endtime="20201117 14:41:08.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.251" endtime="20201117 14:41:08.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.254" endtime="20201117 14:41:08.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.228" endtime="20201117 14:41:08.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.226" endtime="20201117 14:41:08.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.265" endtime="20201117 14:41:08.551"></status>
</kw>
<msg timestamp="20201117 14:41:08.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.263" endtime="20201117 14:41:08.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.555" endtime="20201117 14:41:08.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.564" endtime="20201117 14:41:08.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.261" endtime="20201117 14:41:08.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.259" endtime="20201117 14:41:08.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.571" level="INFO">${RESULT} = [{'time': 0.019960778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.326399999999813e-05, 'source_diff': 3.326399999999813e-05}, {'time': 0.020009778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:08.567" endtime="20201117 14:41:08.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:08.572" endtime="20201117 14:41:08.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.589" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.588" endtime="20201117 14:41:08.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.592" level="INFO">VALUE: [3.326399999999813e-05, 3.3374999999998683e-05, 3.343099999999696e-05, 3.347300000000261e-05, 3.3026999999997975e-05, 3.349999999999881e-05, 3.3055000000000584e-05, 3.266600000000064e-05, 3.350000000000228e-05, 3.31519999999981e-05, 3.3277000000001694e-05, 3.318000000000071e-05, 3.2805000000000334e-05, 3.2777000000001194e-05, 3.279200000000024e-05, 3.272200000000239e-05, 3.269399999999978e-05, 3.2582999999999224e-05, 3.2805000000000334e-05, 3.3346999999999544e-05, 3.294400000000003e-05, 3.2805000000000334e-05, 3.323599999999899e-05, 3.301399999999788e-05, 3.259799999999827e-05, 3.277800000000067e-05, 3.325000000000203e-05, 3.34580000000001e-05, 3.255599999999956e-05, 3.295899999999907e-05, 3.340299999999782e-05, 3.306999999999963e-05, 3.2860999999998614e-05, 3.273599999999849e-05, 3.275000000000153e-05, 3.32640000000016e-05, 3.266600000000064e-05, 3.245899999999857e-05, 3.287500000000165e-05, 3.344400000000053e-05, 3.284700000000251e-05, 3.2805000000000334e-05, 3.315300000000104e-05, 3.340300000000129e-05, 3.275000000000153e-05, 3.293000000000046e-05, 3.3332999999999974e-05, 3.265300000000054e-05, 3.293000000000046e-05, 3.266700000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.590" endtime="20201117 14:41:08.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.585" endtime="20201117 14:41:08.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.595" endtime="20201117 14:41:08.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.598" endtime="20201117 14:41:08.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.597" endtime="20201117 14:41:08.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.593" endtime="20201117 14:41:08.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.224" endtime="20201117 14:41:08.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.826" endtime="20201117 14:41:08.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.826" endtime="20201117 14:41:08.620"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.622" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.631" endtime="20201117 14:41:08.650"></status>
</kw>
<msg timestamp="20201117 14:41:08.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.629" endtime="20201117 14:41:08.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.652" endtime="20201117 14:41:08.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.654" endtime="20201117 14:41:08.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.626" endtime="20201117 14:41:08.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.624" endtime="20201117 14:41:08.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.664" endtime="20201117 14:41:08.949"></status>
</kw>
<msg timestamp="20201117 14:41:08.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023774972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023808736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.662" endtime="20201117 14:41:08.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023774972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023808736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.954" endtime="20201117 14:41:08.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.962" endtime="20201117 14:41:08.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.659" endtime="20201117 14:41:08.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.658" endtime="20201117 14:41:08.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.969" level="INFO">${RESULT} = [{'time': 0.023808736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.37640000000021e-05, 'source_diff': 3.37640000000021e-05}, {'time': 0.023856722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:08.966" endtime="20201117 14:41:08.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.984" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:08.970" endtime="20201117 14:41:08.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.989" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.988" endtime="20201117 14:41:08.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.991" level="INFO">VALUE: [3.37640000000021e-05, 3.416599999999867e-05, 3.3638999999998503e-05, 3.423599999999999e-05, 3.4347000000000544e-05, 3.373599999999949e-05, 3.372199999999992e-05, 3.443100000000143e-05, 3.382000000000038e-05, 3.443100000000143e-05, 3.415300000000204e-05, 3.365200000000207e-05, 3.402800000000192e-05, 3.383399999999995e-05, 3.383399999999995e-05, 3.4374999999999684e-05, 3.370899999999982e-05, 3.447300000000014e-05, 3.375000000000253e-05, 3.3555000000001084e-05, 3.365200000000207e-05, 3.375000000000253e-05, 3.441600000000239e-05, 3.441599999999892e-05, 3.422200000000042e-05, 3.444399999999806e-05, 3.4110999999999864e-05, 3.36519999999986e-05, 3.3554999999997615e-05, 3.4361000000000114e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.4110999999999864e-05, 3.355600000000056e-05, 3.3847000000000044e-05, 3.3610999999999364e-05, 3.429199999999827e-05, 3.380600000000081e-05, 3.447200000000067e-05, 3.3624999999998934e-05, 3.361100000000283e-05, 3.352800000000142e-05, 3.370899999999982e-05, 3.4097000000000294e-05, 3.370899999999982e-05, 3.40840000000002e-05, 3.379200000000124e-05, 3.369500000000025e-05, 3.418099999999771e-05, 3.3583000000000224e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.990" endtime="20201117 14:41:08.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.985" endtime="20201117 14:41:08.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.995" endtime="20201117 14:41:08.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.998" endtime="20201117 14:41:09.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.997" endtime="20201117 14:41:09.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.993" endtime="20201117 14:41:09.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.623" endtime="20201117 14:41:09.019"></status>
</kw>
<msg timestamp="20201117 14:41:09.020" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.028" endtime="20201117 14:41:09.046"></status>
</kw>
<msg timestamp="20201117 14:41:09.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.027" endtime="20201117 14:41:09.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.048" endtime="20201117 14:41:09.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.051" endtime="20201117 14:41:09.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.024" endtime="20201117 14:41:09.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.022" endtime="20201117 14:41:09.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.061" endtime="20201117 14:41:09.348"></status>
</kw>
<msg timestamp="20201117 14:41:09.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020410736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.059" endtime="20201117 14:41:09.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020410736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.352" endtime="20201117 14:41:09.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.360" endtime="20201117 14:41:09.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.057" endtime="20201117 14:41:09.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.055" endtime="20201117 14:41:09.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.367" level="INFO">${RESULT} = [{'time': 0.020410736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401399999999888e-05, 'source_diff': 3.401399999999888e-05}, {'time': 0.020457764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:09.364" endtime="20201117 14:41:09.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.381" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:09.368" endtime="20201117 14:41:09.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.386" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.385" endtime="20201117 14:41:09.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.388" level="INFO">VALUE: [3.401399999999888e-05, 3.357000000000013e-05, 3.4110999999999864e-05, 3.3874999999999184e-05, 3.443099999999796e-05, 3.4124999999999434e-05, 3.430600000000131e-05, 3.361100000000283e-05, 3.380600000000081e-05, 3.4374999999999684e-05, 3.373599999999949e-05, 3.372299999999939e-05, 3.390300000000179e-05, 3.420800000000085e-05, 3.366700000000111e-05, 3.384799999999952e-05, 3.3555000000001084e-05, 3.4402999999998823e-05, 3.399999999999931e-05, 3.4082999999997254e-05, 3.4305000000001834e-05, 3.418000000000171e-05, 3.4361000000000114e-05, 3.4304999999998365e-05, 3.369400000000078e-05, 3.429200000000174e-05, 3.4055000000001584e-05, 3.442999999999849e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.400000000000278e-05, 3.448600000000024e-05, 3.405600000000106e-05, 3.398599999999974e-05, 3.368099999999721e-05, 3.424999999999956e-05, 3.441700000000186e-05, 3.366700000000111e-05, 3.391699999999789e-05, 3.417999999999824e-05, 3.391699999999789e-05, 3.379200000000124e-05, 3.399999999999931e-05, 3.398599999999974e-05, 3.363900000000197e-05, 3.423699999999946e-05, 3.418000000000171e-05, 3.409799999999977e-05, 3.436199999999959e-05, 3.444399999999806e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.387" endtime="20201117 14:41:09.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.382" endtime="20201117 14:41:09.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.392" endtime="20201117 14:41:09.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.396" endtime="20201117 14:41:09.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.394" endtime="20201117 14:41:09.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.390" endtime="20201117 14:41:09.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.020" endtime="20201117 14:41:09.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.621" endtime="20201117 14:41:09.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.620" endtime="20201117 14:41:09.417"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.419" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.428" endtime="20201117 14:41:09.446"></status>
</kw>
<msg timestamp="20201117 14:41:09.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.426" endtime="20201117 14:41:09.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.447" endtime="20201117 14:41:09.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.450" endtime="20201117 14:41:09.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.424" endtime="20201117 14:41:09.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.421" endtime="20201117 14:41:09.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.459" endtime="20201117 14:41:09.745"></status>
</kw>
<msg timestamp="20201117 14:41:09.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.458" endtime="20201117 14:41:09.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.749" endtime="20201117 14:41:09.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.758" endtime="20201117 14:41:09.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.455" endtime="20201117 14:41:09.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.453" endtime="20201117 14:41:09.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.765" level="INFO">${RESULT} = [{'time': 0.022587069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541599999999992e-05, 'source_diff': 3.541599999999992e-05}, {'time': 0.022635083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:09.761" endtime="20201117 14:41:09.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.778" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:09.766" endtime="20201117 14:41:09.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.783" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.782" endtime="20201117 14:41:09.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.786" level="INFO">VALUE: [3.541599999999992e-05, 3.494399999999856e-05, 3.5040999999999545e-05, 3.473600000000049e-05, 3.5139000000000004e-05, 3.5389000000000254e-05, 3.506999999999816e-05, 3.518099999999871e-05, 3.4805000000002334e-05, 3.491700000000236e-05, 3.4569000000001654e-05, 3.550000000000081e-05, 3.50840000000012e-05, 3.530600000000231e-05, 3.4847000000001044e-05, 3.497200000000117e-05, 3.523600000000099e-05, 3.4874999999996714e-05, 3.504200000000249e-05, 3.548600000000124e-05, 3.522300000000089e-05, 3.505600000000206e-05, 3.4847000000001044e-05, 3.548699999999724e-05, 3.494400000000203e-05, 3.4818999999998435e-05, 3.501399999999988e-05, 3.5304999999999365e-05, 3.5346999999998074e-05, 3.4790999999999295e-05, 3.4846999999997574e-05, 3.542999999999949e-05, 3.5068999999998685e-05, 3.5319000000002404e-05, 3.4638999999999504e-05, 3.467999999999874e-05, 3.548600000000124e-05, 3.523599999999752e-05, 3.529200000000274e-05, 3.4638999999999504e-05, 3.4861000000000614e-05, 3.5166999999999143e-05, 3.449999999999981e-05, 3.4638999999999504e-05, 3.520799999999838e-05, 3.491699999999889e-05, 3.465300000000254e-05, 3.469500000000125e-05, 3.475000000000006e-05, 3.498600000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.784" endtime="20201117 14:41:09.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.779" endtime="20201117 14:41:09.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.848" endtime="20201117 14:41:09.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.851" endtime="20201117 14:41:09.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.850" endtime="20201117 14:41:09.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.846" endtime="20201117 14:41:09.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.420" endtime="20201117 14:41:09.872"></status>
</kw>
<msg timestamp="20201117 14:41:09.872" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.881" endtime="20201117 14:41:09.898"></status>
</kw>
<msg timestamp="20201117 14:41:09.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.879" endtime="20201117 14:41:09.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.900" endtime="20201117 14:41:09.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.903" endtime="20201117 14:41:09.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.877" endtime="20201117 14:41:09.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.874" endtime="20201117 14:41:09.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.913" endtime="20201117 14:41:10.198"></status>
</kw>
<msg timestamp="20201117 14:41:10.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.911" endtime="20201117 14:41:10.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.202" endtime="20201117 14:41:10.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.211" endtime="20201117 14:41:10.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.909" endtime="20201117 14:41:10.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.907" endtime="20201117 14:41:10.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.218" level="INFO">${RESULT} = [{'time': 0.019852875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4582999999997754e-05, 'source_diff': 3.4582999999997754e-05}, {'time': 0.019900875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:10.214" endtime="20201117 14:41:10.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.232" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:10.219" endtime="20201117 14:41:10.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.237" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.235" endtime="20201117 14:41:10.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.239" level="INFO">VALUE: [3.4582999999997754e-05, 3.4846999999997574e-05, 3.493099999999846e-05, 3.5402999999999823e-05, 3.5096999999997824e-05, 3.49589999999976e-05, 3.49580000000016e-05, 3.525000000000056e-05, 3.483400000000095e-05, 3.4875000000000184e-05, 3.452799999999895e-05, 3.475000000000006e-05, 3.541700000000286e-05, 3.5152999999999573e-05, 3.5416999999999393e-05, 3.517999999999924e-05, 3.509800000000077e-05, 3.522300000000089e-05, 3.491699999999889e-05, 3.452800000000242e-05, 3.5361000000001114e-05, 3.550000000000081e-05, 3.519400000000228e-05, 3.4875000000000184e-05, 3.4847000000001044e-05, 3.5054999999999115e-05, 3.5304999999999365e-05, 3.479200000000224e-05, 3.548599999999777e-05, 3.529200000000274e-05, 3.543099999999896e-05, 3.525000000000056e-05, 3.516700000000261e-05, 3.5125000000000434e-05, 3.469500000000125e-05, 3.483400000000095e-05, 3.475000000000006e-05, 3.547200000000167e-05, 3.523600000000099e-05, 3.4875000000000184e-05, 3.488900000000322e-05, 3.479199999999877e-05, 3.484800000000052e-05, 3.4902999999999323e-05, 3.49450000000015e-05, 3.5416999999999393e-05, 3.459800000000027e-05, 3.475000000000006e-05, 3.4526999999999475e-05, 3.551400000000038e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.238" endtime="20201117 14:41:10.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.233" endtime="20201117 14:41:10.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.243" endtime="20201117 14:41:10.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.246" endtime="20201117 14:41:10.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.245" endtime="20201117 14:41:10.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.241" endtime="20201117 14:41:10.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.873" endtime="20201117 14:41:10.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.418" endtime="20201117 14:41:10.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.417" endtime="20201117 14:41:10.268"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.270" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.279" endtime="20201117 14:41:10.300"></status>
</kw>
<msg timestamp="20201117 14:41:10.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.277" endtime="20201117 14:41:10.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.301" endtime="20201117 14:41:10.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.304" endtime="20201117 14:41:10.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.274" endtime="20201117 14:41:10.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.272" endtime="20201117 14:41:10.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.314" endtime="20201117 14:41:10.600"></status>
</kw>
<msg timestamp="20201117 14:41:10.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023359264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02339575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:10.312" endtime="20201117 14:41:10.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023359264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02339575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:10.604" endtime="20201117 14:41:10.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.612" endtime="20201117 14:41:10.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.309" endtime="20201117 14:41:10.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.308" endtime="20201117 14:41:10.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.619" level="INFO">${RESULT} = [{'time': 0.02339575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.648599999999877e-05, 'source_diff': 3.648599999999877e-05}, {'time': 0.023444764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:10.616" endtime="20201117 14:41:10.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:10.620" endtime="20201117 14:41:10.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.639" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.638" endtime="20201117 14:41:10.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.642" level="INFO">VALUE: [3.648599999999877e-05, 3.622199999999895e-05, 3.5916999999999893e-05, 3.5888999999997284e-05, 3.648700000000171e-05, 3.57780000000002e-05, 3.626400000000113e-05, 3.579199999999977e-05, 3.631999999999941e-05, 3.598599999999827e-05, 3.604200000000002e-05, 3.59719999999987e-05, 3.579199999999977e-05, 3.567999999999974e-05, 3.5653000000000074e-05, 3.5902999999996854e-05, 3.6346999999999074e-05, 3.6346999999999074e-05, 3.647299999999867e-05, 3.5541000000000045e-05, 3.6389000000001254e-05, 3.6403000000000824e-05, 3.572200000000192e-05, 3.622200000000242e-05, 3.5625000000000934e-05, 3.595799999999913e-05, 3.601399999999741e-05, 3.648599999999877e-05, 3.6111000000001864e-05, 3.625000000000156e-05, 3.581999999999891e-05, 3.557000000000213e-05, 3.598600000000174e-05, 3.6403000000000824e-05, 3.582000000000238e-05, 3.5610999999997894e-05, 3.622200000000242e-05, 3.5610999999997894e-05, 3.647200000000267e-05, 3.555599999999909e-05, 3.602800000000045e-05, 3.6332999999999505e-05, 3.599999999999784e-05, 3.644499999999953e-05, 3.5541000000000045e-05, 3.6332999999999505e-05, 3.650000000000181e-05, 3.573699999999749e-05, 3.5597000000001794e-05, 3.5791000000000295e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.640" endtime="20201117 14:41:10.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.635" endtime="20201117 14:41:10.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.646" endtime="20201117 14:41:10.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.649" endtime="20201117 14:41:10.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.647" endtime="20201117 14:41:10.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.644" endtime="20201117 14:41:10.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.271" endtime="20201117 14:41:10.670"></status>
</kw>
<msg timestamp="20201117 14:41:10.670" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.679" endtime="20201117 14:41:10.696"></status>
</kw>
<msg timestamp="20201117 14:41:10.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.677" endtime="20201117 14:41:10.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.698" endtime="20201117 14:41:10.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.700" endtime="20201117 14:41:10.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.674" endtime="20201117 14:41:10.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.672" endtime="20201117 14:41:10.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.711" endtime="20201117 14:41:10.998"></status>
</kw>
<msg timestamp="20201117 14:41:11.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.709" endtime="20201117 14:41:11.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.002" endtime="20201117 14:41:11.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.011" endtime="20201117 14:41:11.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.707" endtime="20201117 14:41:11.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.705" endtime="20201117 14:41:11.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.018" level="INFO">${RESULT} = [{'time': 0.019855403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5666999999999643e-05, 'source_diff': 3.5666999999999643e-05}, {'time': 0.019904431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.014" endtime="20201117 14:41:11.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.031" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:11.019" endtime="20201117 14:41:11.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.036" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.035" endtime="20201117 14:41:11.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.039" level="INFO">VALUE: [3.5666999999999643e-05, 3.575000000000106e-05, 3.60979999999983e-05, 3.647299999999867e-05, 3.598599999999827e-05, 3.5916999999999893e-05, 3.5541000000000045e-05, 3.5847000000002044e-05, 3.624999999999809e-05, 3.566600000000017e-05, 3.598600000000174e-05, 3.591600000000042e-05, 3.6374999999998214e-05, 3.64719999999992e-05, 3.650000000000181e-05, 3.572199999999845e-05, 3.6041000000000545e-05, 3.62780000000007e-05, 3.569400000000278e-05, 3.6360999999998644e-05, 3.648599999999877e-05, 3.6375000000001684e-05, 3.573600000000149e-05, 3.570799999999888e-05, 3.5653000000000074e-05, 3.606999999999916e-05, 3.598599999999827e-05, 3.5916999999999893e-05, 3.598599999999827e-05, 3.591700000000336e-05, 3.5874999999997714e-05, 3.570799999999888e-05, 3.629200000000027e-05, 3.5777000000000725e-05, 3.584799999999805e-05, 3.644499999999953e-05, 3.5889000000000754e-05, 3.6027000000000975e-05, 3.620799999999938e-05, 3.598599999999827e-05, 3.6389000000001254e-05, 3.5639000000000504e-05, 3.648599999999877e-05, 3.600000000000131e-05, 3.5569000000002654e-05, 3.618000000000024e-05, 3.600000000000131e-05, 3.622199999999895e-05, 3.629200000000027e-05, 3.573599999999802e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.038" endtime="20201117 14:41:11.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.033" endtime="20201117 14:41:11.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.042" endtime="20201117 14:41:11.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.046" endtime="20201117 14:41:11.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.044" endtime="20201117 14:41:11.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.041" endtime="20201117 14:41:11.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.671" endtime="20201117 14:41:11.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.269" endtime="20201117 14:41:11.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.268" endtime="20201117 14:41:11.067"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.070" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.078" endtime="20201117 14:41:11.097"></status>
</kw>
<msg timestamp="20201117 14:41:11.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.077" endtime="20201117 14:41:11.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.098" endtime="20201117 14:41:11.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.101" endtime="20201117 14:41:11.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.074" endtime="20201117 14:41:11.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.072" endtime="20201117 14:41:11.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.112" endtime="20201117 14:41:11.397"></status>
</kw>
<msg timestamp="20201117 14:41:11.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.110" endtime="20201117 14:41:11.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.401" endtime="20201117 14:41:11.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.410" endtime="20201117 14:41:11.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.107" endtime="20201117 14:41:11.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.105" endtime="20201117 14:41:11.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.417" level="INFO">${RESULT} = [{'time': 0.022613333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.668000000000074e-05, 'source_diff': 3.668000000000074e-05}, {'time': 0.022665333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:11.414" endtime="20201117 14:41:11.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:11.418" endtime="20201117 14:41:11.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.436" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.435" endtime="20201117 14:41:11.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.439" level="INFO">VALUE: [3.668000000000074e-05, 3.7290999999998325e-05, 3.7374999999999214e-05, 3.71659999999982e-05, 3.693000000000099e-05, 3.74720000000002e-05, 3.745800000000063e-05, 3.7166999999997674e-05, 3.6666999999997174e-05, 3.72780000000017e-05, 3.6861000000002614e-05, 3.720899999999985e-05, 3.655600000000009e-05, 3.723599999999952e-05, 3.67780000000012e-05, 3.705600000000059e-05, 3.727799999999823e-05, 3.698599999999927e-05, 3.655600000000009e-05, 3.7512999999999436e-05, 3.654200000000052e-05, 3.7125000000002434e-05, 3.719399999999734e-05, 3.655600000000009e-05, 3.663799999999856e-05, 3.727799999999823e-05, 3.6833000000000005e-05, 3.6554999999997145e-05, 3.726399999999866e-05, 3.695800000000013e-05, 3.6805000000000865e-05, 3.699999999999884e-05, 3.7361000000003114e-05, 3.700000000000231e-05, 3.7124999999998964e-05, 3.745800000000063e-05, 3.6861000000002614e-05, 3.6639000000001504e-05, 3.6681000000000213e-05, 3.672199999999945e-05, 3.6681000000000213e-05, 3.694500000000003e-05, 3.6610999999998894e-05, 3.749999999999934e-05, 3.7153000000001574e-05, 3.691600000000142e-05, 3.751399999999891e-05, 3.6681000000000213e-05, 3.694500000000003e-05, 3.734799999999955e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.437" endtime="20201117 14:41:11.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.432" endtime="20201117 14:41:11.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.442" endtime="20201117 14:41:11.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.445" endtime="20201117 14:41:11.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.444" endtime="20201117 14:41:11.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.440" endtime="20201117 14:41:11.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.070" endtime="20201117 14:41:11.466"></status>
</kw>
<msg timestamp="20201117 14:41:11.466" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.475" endtime="20201117 14:41:11.493"></status>
</kw>
<msg timestamp="20201117 14:41:11.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.473" endtime="20201117 14:41:11.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.495" endtime="20201117 14:41:11.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.497" endtime="20201117 14:41:11.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.471" endtime="20201117 14:41:11.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.469" endtime="20201117 14:41:11.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.508" endtime="20201117 14:41:11.792"></status>
</kw>
<msg timestamp="20201117 14:41:11.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.506" endtime="20201117 14:41:11.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.796" endtime="20201117 14:41:11.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.805" endtime="20201117 14:41:11.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.503" endtime="20201117 14:41:11.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.501" endtime="20201117 14:41:11.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.812" level="INFO">${RESULT} = [{'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.690200000000185e-05, 'source_diff': 3.690200000000185e-05}, {'time': 0.020034097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:11.809" endtime="20201117 14:41:11.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:11.813" endtime="20201117 14:41:11.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.831" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.830" endtime="20201117 14:41:11.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.834" level="INFO">VALUE: [3.690200000000185e-05, 3.669400000000031e-05, 3.7041000000001545e-05, 3.724999999999909e-05, 3.6889000000001754e-05, 3.7110999999999394e-05, 3.6888999999998284e-05, 3.7361000000003114e-05, 3.7083000000000255e-05, 3.723599999999952e-05, 3.679200000000077e-05, 3.697299999999917e-05, 3.726400000000213e-05, 3.673599999999902e-05, 3.726399999999866e-05, 3.7431000000000964e-05, 3.74720000000002e-05, 3.7166999999997674e-05, 3.7167000000001144e-05, 3.704199999999755e-05, 3.7195000000000283e-05, 3.680599999999687e-05, 3.7430999999997494e-05, 3.673599999999902e-05, 3.6555000000000615e-05, 3.7402999999998354e-05, 3.676400000000163e-05, 3.6596999999999325e-05, 3.7319000000000935e-05, 3.7040999999998075e-05, 3.7276999999998756e-05, 3.723599999999952e-05, 3.6596999999999325e-05, 3.751399999999891e-05, 3.6860999999999144e-05, 3.655600000000009e-05, 3.705599999999712e-05, 3.6596999999999325e-05, 3.7124999999998964e-05, 3.74720000000002e-05, 3.6596999999999325e-05, 3.6681000000000213e-05, 3.7096999999999825e-05, 3.727799999999823e-05, 3.7417000000001394e-05, 3.69719999999997e-05, 3.654200000000052e-05, 3.71520000000021e-05, 3.697299999999917e-05, 3.694400000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.832" endtime="20201117 14:41:11.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.827" endtime="20201117 14:41:11.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.837" endtime="20201117 14:41:11.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.840" endtime="20201117 14:41:11.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.839" endtime="20201117 14:41:11.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.835" endtime="20201117 14:41:11.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.467" endtime="20201117 14:41:11.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.068" endtime="20201117 14:41:11.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.068" endtime="20201117 14:41:11.861"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.864" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.873" endtime="20201117 14:41:11.891"></status>
</kw>
<msg timestamp="20201117 14:41:11.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.871" endtime="20201117 14:41:11.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.893" endtime="20201117 14:41:11.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.895" endtime="20201117 14:41:11.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.868" endtime="20201117 14:41:11.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.866" endtime="20201117 14:41:11.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.905" endtime="20201117 14:41:12.190"></status>
</kw>
<msg timestamp="20201117 14:41:12.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023515681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.903" endtime="20201117 14:41:12.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023515681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.195" endtime="20201117 14:41:12.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.204" endtime="20201117 14:41:12.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.900" endtime="20201117 14:41:12.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.898" endtime="20201117 14:41:12.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.211" level="INFO">${RESULT} = [{'time': 0.023515681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.772299999999992e-05, 'source_diff': 3.772299999999992e-05}, {'time': 0.023569708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:12.207" endtime="20201117 14:41:12.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:12.212" endtime="20201117 14:41:12.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.230" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.229" endtime="20201117 14:41:12.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.233" level="INFO">VALUE: [3.772299999999992e-05, 3.769400000000131e-05, 3.798600000000027e-05, 3.8276999999999756e-05, 3.792999999999852e-05, 3.8375000000000214e-05, 3.765199999999913e-05, 3.8124999999999964e-05, 3.8305000000002365e-05, 3.779200000000177e-05, 3.776399999999916e-05, 3.772200000000045e-05, 3.7680999999997744e-05, 3.755600000000109e-05, 3.845799999999816e-05, 3.8097000000000825e-05, 3.777799999999873e-05, 3.7610999999999895e-05, 3.795799999999766e-05, 3.770799999999741e-05, 3.8097000000000825e-05, 3.8180999999998244e-05, 3.780599999999787e-05, 3.8041000000002545e-05, 3.8402999999999354e-05, 3.827799999999923e-05, 3.8375000000000214e-05, 3.761199999999937e-05, 3.772299999999992e-05, 3.772200000000045e-05, 3.792999999999852e-05, 3.826399999999966e-05, 3.850000000000034e-05, 3.81659999999992e-05, 3.81659999999992e-05, 3.8304999999998895e-05, 3.8055000000002115e-05, 3.84720000000012e-05, 3.7569000000001185e-05, 3.749999999999934e-05, 3.802800000000245e-05, 3.772200000000045e-05, 3.7681000000001214e-05, 3.8445000000001534e-05, 3.79720000000007e-05, 3.8124999999999964e-05, 3.8416999999998924e-05, 3.7790999999998826e-05, 3.7931000000001464e-05, 3.780600000000134e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.231" endtime="20201117 14:41:12.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.227" endtime="20201117 14:41:12.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.236" endtime="20201117 14:41:12.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.240" endtime="20201117 14:41:12.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.238" endtime="20201117 14:41:12.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.234" endtime="20201117 14:41:12.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.865" endtime="20201117 14:41:12.260"></status>
</kw>
<msg timestamp="20201117 14:41:12.261" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.269" endtime="20201117 14:41:12.289"></status>
</kw>
<msg timestamp="20201117 14:41:12.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.268" endtime="20201117 14:41:12.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.290" endtime="20201117 14:41:12.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.293" endtime="20201117 14:41:12.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.265" endtime="20201117 14:41:12.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.263" endtime="20201117 14:41:12.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.304" endtime="20201117 14:41:12.589"></status>
</kw>
<msg timestamp="20201117 14:41:12.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.302" endtime="20201117 14:41:12.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.594" endtime="20201117 14:41:12.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.602" endtime="20201117 14:41:12.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.299" endtime="20201117 14:41:12.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.298" endtime="20201117 14:41:12.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.609" level="INFO">${RESULT} = [{'time': 0.019943861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8124999999999964e-05, 'source_diff': 3.8124999999999964e-05}, {'time': 0.019997861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:12.606" endtime="20201117 14:41:12.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.623" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:12.610" endtime="20201117 14:41:12.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.628" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.627" endtime="20201117 14:41:12.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.630" level="INFO">VALUE: [3.8124999999999964e-05, 3.792999999999852e-05, 3.84720000000012e-05, 3.7945000000001033e-05, 3.8083000000001255e-05, 3.7610999999999895e-05, 3.799999999999984e-05, 3.770900000000035e-05, 3.772199999999698e-05, 3.8111000000000395e-05, 3.833399999999751e-05, 3.8181000000001714e-05, 3.8195000000001283e-05, 3.773600000000002e-05, 3.850000000000034e-05, 3.836200000000012e-05, 3.818000000000224e-05, 3.8417000000002394e-05, 3.8304999999998895e-05, 3.8055000000002115e-05, 3.791599999999895e-05, 3.791600000000242e-05, 3.780600000000134e-05, 3.7610999999999895e-05, 3.774999999999959e-05, 3.8153000000002574e-05, 3.7861000000000145e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.8347000000001075e-05, 3.7917000000001894e-05, 3.8139000000003004e-05, 3.8026999999999506e-05, 3.757000000000066e-05, 3.776399999999916e-05, 3.8459000000001103e-05, 3.7945000000001033e-05, 3.8194999999997814e-05, 3.833400000000098e-05, 3.7945000000001033e-05, 3.804200000000202e-05, 3.7652999999998604e-05, 3.773600000000002e-05, 3.804199999999855e-05, 3.81659999999992e-05, 3.802799999999898e-05, 3.801399999999941e-05, 3.7569000000001185e-05, 3.798600000000027e-05, 3.8276999999999756e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.629" endtime="20201117 14:41:12.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.624" endtime="20201117 14:41:12.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.633" endtime="20201117 14:41:12.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.637" endtime="20201117 14:41:12.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.635" endtime="20201117 14:41:12.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.632" endtime="20201117 14:41:12.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.261" endtime="20201117 14:41:12.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.863" endtime="20201117 14:41:12.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.862" endtime="20201117 14:41:12.658"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.661" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.670" endtime="20201117 14:41:12.690"></status>
</kw>
<msg timestamp="20201117 14:41:12.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.668" endtime="20201117 14:41:12.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.692" endtime="20201117 14:41:12.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.695" endtime="20201117 14:41:12.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.665" endtime="20201117 14:41:12.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.663" endtime="20201117 14:41:12.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.704" endtime="20201117 14:41:12.990"></status>
</kw>
<msg timestamp="20201117 14:41:12.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.702" endtime="20201117 14:41:12.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.995" endtime="20201117 14:41:13.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.003" endtime="20201117 14:41:13.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.700" endtime="20201117 14:41:13.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.698" endtime="20201117 14:41:13.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.010" level="INFO">${RESULT} = [{'time': 0.023115917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8902999999999854e-05, 'source_diff': 3.8902999999999854e-05}, {'time': 0.023169917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:13.007" endtime="20201117 14:41:13.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:13.011" endtime="20201117 14:41:13.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.029" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.028" endtime="20201117 14:41:13.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.031" level="INFO">VALUE: [3.8902999999999854e-05, 3.876400000000016e-05, 3.877799999999973e-05, 3.857000000000166e-05, 3.945799999999916e-05, 3.905600000000259e-05, 3.9304999999999896e-05, 3.936199999999765e-05, 3.898600000000127e-05, 3.872200000000145e-05, 3.8777000000000256e-05, 3.923600000000152e-05, 3.9347000000002075e-05, 3.900000000000084e-05, 3.9361000000001645e-05, 3.898600000000127e-05, 3.867999999999927e-05, 3.8611000000000895e-05, 3.9124999999997495e-05, 3.877799999999973e-05, 3.930599999999937e-05, 3.855599999999862e-05, 3.875000000000059e-05, 3.8680999999998744e-05, 3.89720000000017e-05, 3.9097000000001825e-05, 3.9153000000000104e-05, 3.922200000000195e-05, 3.933399999999851e-05, 3.8624999999996995e-05, 3.9431000000002964e-05, 3.9111000000001395e-05, 3.919400000000281e-05, 3.8902999999999854e-05, 3.8611000000000895e-05, 3.8875000000000715e-05, 3.949999999999787e-05, 3.934799999999808e-05, 3.848600000000077e-05, 3.943000000000002e-05, 3.873600000000102e-05, 3.895799999999866e-05, 3.917999999999977e-05, 3.94720000000022e-05, 3.876400000000016e-05, 3.9166999999999674e-05, 3.92919999999998e-05, 3.905599999999912e-05, 3.9111000000001395e-05, 3.927800000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.030" endtime="20201117 14:41:13.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.025" endtime="20201117 14:41:13.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.035" endtime="20201117 14:41:13.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.038" endtime="20201117 14:41:13.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.037" endtime="20201117 14:41:13.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.033" endtime="20201117 14:41:13.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.661" endtime="20201117 14:41:13.059"></status>
</kw>
<msg timestamp="20201117 14:41:13.059" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.068" endtime="20201117 14:41:13.086"></status>
</kw>
<msg timestamp="20201117 14:41:13.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.066" endtime="20201117 14:41:13.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.087" endtime="20201117 14:41:13.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.090" endtime="20201117 14:41:13.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.064" endtime="20201117 14:41:13.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.062" endtime="20201117 14:41:13.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.100" endtime="20201117 14:41:13.387"></status>
</kw>
<msg timestamp="20201117 14:41:13.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02020825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:13.099" endtime="20201117 14:41:13.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02020825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:13.391" endtime="20201117 14:41:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.400" endtime="20201117 14:41:13.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.096" endtime="20201117 14:41:13.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.094" endtime="20201117 14:41:13.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.407" level="INFO">${RESULT} = [{'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.905599999999912e-05, 'source_diff': 3.905599999999912e-05}, {'time': 0.020301292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:13.404" endtime="20201117 14:41:13.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.421" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:13.408" endtime="20201117 14:41:13.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.426" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.424" endtime="20201117 14:41:13.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.428" level="INFO">VALUE: [3.905599999999912e-05, 3.949999999999787e-05, 3.9124999999997495e-05, 3.8875000000000715e-05, 3.872300000000092e-05, 3.856999999999819e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.900000000000084e-05, 3.900000000000084e-05, 3.943000000000002e-05, 3.901400000000041e-05, 3.923600000000152e-05, 3.8875000000000715e-05, 3.8596999999997855e-05, 3.9347000000002075e-05, 3.9361000000001645e-05, 3.944399999999959e-05, 3.8861000000001145e-05, 3.875000000000059e-05, 3.904200000000302e-05, 3.9153000000000104e-05, 3.9444999999999064e-05, 3.8597000000001325e-05, 3.9181000000002714e-05, 3.873600000000102e-05, 3.9180999999999244e-05, 3.8597000000001325e-05, 3.8639000000000034e-05, 3.9459000000002104e-05, 3.8666999999999174e-05, 3.901400000000041e-05, 3.8681000000002214e-05, 3.9124999999997495e-05, 3.900000000000084e-05, 3.8554999999999146e-05, 3.9125000000000965e-05, 3.8597000000001325e-05, 3.900000000000084e-05, 3.9346999999998605e-05, 3.917999999999977e-05, 3.873599999999755e-05, 3.89720000000017e-05, 3.949999999999787e-05, 3.943000000000002e-05, 3.9444999999999064e-05, 3.89720000000017e-05, 3.94859999999983e-05, 3.8861000000001145e-05, 3.905599999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.427" endtime="20201117 14:41:13.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.422" endtime="20201117 14:41:13.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.432" endtime="20201117 14:41:13.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.435" endtime="20201117 14:41:13.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.434" endtime="20201117 14:41:13.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.430" endtime="20201117 14:41:13.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.060" endtime="20201117 14:41:13.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.660" endtime="20201117 14:41:13.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.659" endtime="20201117 14:41:13.457"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.459" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.468" endtime="20201117 14:41:13.486"></status>
</kw>
<msg timestamp="20201117 14:41:13.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.466" endtime="20201117 14:41:13.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.487" endtime="20201117 14:41:13.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.490" endtime="20201117 14:41:13.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.463" endtime="20201117 14:41:13.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.461" endtime="20201117 14:41:13.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.499" endtime="20201117 14:41:13.786"></status>
</kw>
<msg timestamp="20201117 14:41:13.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023277958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.498" endtime="20201117 14:41:13.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023237875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023277958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.790" endtime="20201117 14:41:13.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.799" endtime="20201117 14:41:13.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.495" endtime="20201117 14:41:13.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.494" endtime="20201117 14:41:13.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.806" level="INFO">${RESULT} = [{'time': 0.023277958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0082999999999785e-05, 'source_diff': 4.0082999999999785e-05}, {'time': 0.023331986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:13.802" endtime="20201117 14:41:13.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.821" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:13.807" endtime="20201117 14:41:13.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.825" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.824" endtime="20201117 14:41:13.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.828" level="INFO">VALUE: [4.0082999999999785e-05, 4.0110999999998925e-05, 4.033399999999951e-05, 3.9722999999998454e-05, 4.047199999999973e-05, 3.9555000000000146e-05, 4.020799999999991e-05, 3.9625000000001465e-05, 3.994400000000009e-05, 3.965200000000113e-05, 4.0375000000002215e-05, 3.99859999999988e-05, 3.999999999999837e-05, 4.051400000000191e-05, 3.994400000000009e-05, 3.980599999999987e-05, 3.954200000000005e-05, 3.9944999999999564e-05, 4.047199999999973e-05, 3.965200000000113e-05, 3.977800000000073e-05, 3.955599999999962e-05, 4.023600000000252e-05, 4.0445000000000064e-05, 4.047199999999973e-05, 4.0027000000001506e-05, 4.026399999999819e-05, 3.99859999999988e-05, 3.9875000000001715e-05, 3.973599999999855e-05, 3.9610999999998425e-05, 4.0027000000001506e-05, 3.96660000000007e-05, 4.0124999999998495e-05, 3.991599999999748e-05, 3.973599999999855e-05, 4.009799999999883e-05, 3.96660000000007e-05, 4.016599999999773e-05, 4.043000000000102e-05, 4.049999999999887e-05, 3.99720000000027e-05, 3.961200000000137e-05, 3.9667000000000174e-05, 4.0374999999998745e-05, 3.980599999999987e-05, 4.0375000000002215e-05, 4.0181000000000244e-05, 4.023599999999905e-05, 3.9667000000000174e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.827" endtime="20201117 14:41:13.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.822" endtime="20201117 14:41:13.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.832" endtime="20201117 14:41:13.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.835" endtime="20201117 14:41:13.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.834" endtime="20201117 14:41:13.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.830" endtime="20201117 14:41:13.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.460" endtime="20201117 14:41:13.856"></status>
</kw>
<msg timestamp="20201117 14:41:13.856" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.865" endtime="20201117 14:41:13.882"></status>
</kw>
<msg timestamp="20201117 14:41:13.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.863" endtime="20201117 14:41:13.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.884" endtime="20201117 14:41:13.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.886" endtime="20201117 14:41:13.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.861" endtime="20201117 14:41:13.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.858" endtime="20201117 14:41:13.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.897" endtime="20201117 14:41:14.182"></status>
</kw>
<msg timestamp="20201117 14:41:14.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.895" endtime="20201117 14:41:14.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.187" endtime="20201117 14:41:14.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.195" endtime="20201117 14:41:14.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.893" endtime="20201117 14:41:14.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.891" endtime="20201117 14:41:14.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.202" level="INFO">${RESULT} = [{'time': 0.019935375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9930999999999994e-05, 'source_diff': 3.9930999999999994e-05}, {'time': 0.019991403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:14.199" endtime="20201117 14:41:14.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:14.203" endtime="20201117 14:41:14.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.221" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.220" endtime="20201117 14:41:14.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.223" level="INFO">VALUE: [3.9930999999999994e-05, 4.0194999999999814e-05, 3.958399999999876e-05, 3.980599999999987e-05, 3.9624999999997995e-05, 4.0361000000002645e-05, 4.0346999999999605e-05, 3.9917000000000424e-05, 3.972199999999898e-05, 4.02920000000008e-05, 3.9541000000000576e-05, 3.998700000000174e-05, 3.951400000000091e-05, 4.001400000000141e-05, 3.984799999999858e-05, 3.9624999999997995e-05, 4.0374999999998745e-05, 4.0055000000000646e-05, 4.01660000000012e-05, 3.966599999999723e-05, 4.0305000000000896e-05, 3.993000000000052e-05, 4.018000000000077e-05, 4.019400000000034e-05, 3.9903000000000854e-05, 4.044400000000059e-05, 3.976400000000116e-05, 3.955600000000309e-05, 4.04859999999993e-05, 4.025000000000209e-05, 4.0403000000001354e-05, 4.0431000000000494e-05, 3.9667000000000174e-05, 4.0181000000000244e-05, 4.0223000000002423e-05, 3.9917000000000424e-05, 3.99859999999988e-05, 3.9917000000000424e-05, 4.0458999999999634e-05, 4.008400000000273e-05, 4.020799999999991e-05, 4.044400000000059e-05, 4.0305000000000896e-05, 4.001400000000141e-05, 3.9568999999999716e-05, 3.9818999999999966e-05, 3.9874999999998245e-05, 3.97920000000003e-05, 4.018000000000077e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.222" endtime="20201117 14:41:14.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.217" endtime="20201117 14:41:14.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.227" endtime="20201117 14:41:14.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.231" endtime="20201117 14:41:14.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.229" endtime="20201117 14:41:14.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.226" endtime="20201117 14:41:14.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.857" endtime="20201117 14:41:14.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.458" endtime="20201117 14:41:14.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.457" endtime="20201117 14:41:14.252"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.254" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.263" endtime="20201117 14:41:14.281"></status>
</kw>
<msg timestamp="20201117 14:41:14.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.261" endtime="20201117 14:41:14.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.283" endtime="20201117 14:41:14.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.286" endtime="20201117 14:41:14.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.259" endtime="20201117 14:41:14.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.256" endtime="20201117 14:41:14.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.295" endtime="20201117 14:41:14.584"></status>
</kw>
<msg timestamp="20201117 14:41:14.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.293" endtime="20201117 14:41:14.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.589" endtime="20201117 14:41:14.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.599" endtime="20201117 14:41:14.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.291" endtime="20201117 14:41:14.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.289" endtime="20201117 14:41:14.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.608" level="INFO">${RESULT} = [{'time': 0.022512486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000309e-05, 'source_diff': 4.125000000000309e-05}, {'time': 0.022567486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:14.604" endtime="20201117 14:41:14.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.624" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:14.609" endtime="20201117 14:41:14.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.628" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.627" endtime="20201117 14:41:14.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.631" level="INFO">VALUE: [4.125000000000309e-05, 4.119400000000134e-05, 4.0583000000000286e-05, 4.1069000000001216e-05, 4.126399999999919e-05, 4.1097000000000355e-05, 4.1083000000000786e-05, 4.074999999999912e-05, 4.13059999999979e-05, 4.0945000000000564e-05, 4.099999999999937e-05, 4.106999999999722e-05, 4.14860000000003e-05, 4.0945000000000564e-05, 4.0902999999998385e-05, 4.0680999999997275e-05, 4.1374999999999745e-05, 4.1167000000001674e-05, 4.0554999999997676e-05, 4.0610999999999425e-05, 4.073599999999955e-05, 4.0554999999997676e-05, 4.092999999999805e-05, 4.072199999999998e-05, 4.123600000000005e-05, 4.0903000000001855e-05, 4.09859999999998e-05, 4.108400000000026e-05, 4.1180999999997775e-05, 4.0833000000000536e-05, 4.075000000000259e-05, 4.070800000000041e-05, 4.123600000000005e-05, 4.1138999999999065e-05, 4.052799999999801e-05, 4.149999999999987e-05, 4.079199999999783e-05, 4.1209000000000384e-05, 4.1167000000001674e-05, 4.122199999999701e-05, 4.0847000000000105e-05, 4.0917000000001424e-05, 4.1473000000000204e-05, 4.0833000000000536e-05, 4.058399999999976e-05, 4.1333000000001036e-05, 4.143000000000202e-05, 4.119400000000134e-05, 4.0583000000000286e-05, 4.0639000000002035e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.629" endtime="20201117 14:41:14.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.625" endtime="20201117 14:41:14.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.635" endtime="20201117 14:41:14.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.638" endtime="20201117 14:41:14.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.637" endtime="20201117 14:41:14.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.633" endtime="20201117 14:41:14.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.255" endtime="20201117 14:41:14.659"></status>
</kw>
<msg timestamp="20201117 14:41:14.659" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.668" endtime="20201117 14:41:14.685"></status>
</kw>
<msg timestamp="20201117 14:41:14.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.666" endtime="20201117 14:41:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.687" endtime="20201117 14:41:14.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.689" endtime="20201117 14:41:14.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.664" endtime="20201117 14:41:14.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.661" endtime="20201117 14:41:14.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.700" endtime="20201117 14:41:14.985"></status>
</kw>
<msg timestamp="20201117 14:41:14.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.698" endtime="20201117 14:41:14.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.990" endtime="20201117 14:41:14.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.998" endtime="20201117 14:41:15.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.696" endtime="20201117 14:41:15.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.694" endtime="20201117 14:41:15.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.006" level="INFO">${RESULT} = [{'time': 0.020026639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082000000000044e-05, 'source_diff': 4.082000000000044e-05}, {'time': 0.020084653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:15.002" endtime="20201117 14:41:15.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.023" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:15.008" endtime="20201117 14:41:15.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.034" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.033" endtime="20201117 14:41:15.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.038" level="INFO">VALUE: [4.082000000000044e-05, 4.149999999999987e-05, 4.1180999999997775e-05, 4.0930999999997525e-05, 4.086199999999915e-05, 4.0596999999999855e-05, 4.101400000000241e-05, 4.1417000000001924e-05, 4.1222999999999954e-05, 4.073599999999955e-05, 4.1290999999998856e-05, 4.1290999999998856e-05, 4.1125000000002965e-05, 4.1332999999997566e-05, 4.14860000000003e-05, 4.0555000000001146e-05, 4.0540999999998106e-05, 4.0596999999999855e-05, 4.1389000000002785e-05, 4.1054999999998176e-05, 4.1181000000001244e-05, 4.0638999999998565e-05, 4.1040999999998606e-05, 4.077800000000173e-05, 4.099999999999937e-05, 4.0610999999999425e-05, 4.130600000000137e-05, 4.1374999999999745e-05, 4.1430999999998025e-05, 4.1040999999998606e-05, 4.1444999999997595e-05, 4.129199999999833e-05, 4.1125000000002965e-05, 4.1486999999999774e-05, 4.1374999999999745e-05, 4.0736999999999024e-05, 4.073599999999955e-05, 4.0540999999998106e-05, 4.105599999999765e-05, 4.1153000000002105e-05, 4.0847000000000105e-05, 4.1139000000002535e-05, 4.11660000000022e-05, 4.1333000000001036e-05, 4.0804999999997926e-05, 4.052800000000148e-05, 4.129199999999833e-05, 4.0833000000000536e-05, 4.0860999999999675e-05, 4.107000000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.036" endtime="20201117 14:41:15.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.030" endtime="20201117 14:41:15.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.042" endtime="20201117 14:41:15.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.046" endtime="20201117 14:41:15.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.044" endtime="20201117 14:41:15.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.040" endtime="20201117 14:41:15.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.660" endtime="20201117 14:41:15.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.253" endtime="20201117 14:41:15.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.252" endtime="20201117 14:41:15.067"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.069" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.078" endtime="20201117 14:41:15.097"></status>
</kw>
<msg timestamp="20201117 14:41:15.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.076" endtime="20201117 14:41:15.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.098" endtime="20201117 14:41:15.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.101" endtime="20201117 14:41:15.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.074" endtime="20201117 14:41:15.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.071" endtime="20201117 14:41:15.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.111" endtime="20201117 14:41:15.396"></status>
</kw>
<msg timestamp="20201117 14:41:15.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023481444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023523847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.109" endtime="20201117 14:41:15.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023481444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023523847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.400" endtime="20201117 14:41:15.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.409" endtime="20201117 14:41:15.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.106" endtime="20201117 14:41:15.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.104" endtime="20201117 14:41:15.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.416" level="INFO">${RESULT} = [{'time': 0.023523847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2402999999999885e-05, 'source_diff': 4.2402999999999885e-05}, {'time': 0.023579847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.413" endtime="20201117 14:41:15.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:15.417" endtime="20201117 14:41:15.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.436" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.435" endtime="20201117 14:41:15.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.439" level="INFO">VALUE: [4.2402999999999885e-05, 4.2290999999999856e-05, 4.1819000000001966e-05, 4.1861000000000675e-05, 4.2180999999998775e-05, 4.248599999999783e-05, 4.2444999999998595e-05, 4.154200000000205e-05, 4.1611000000000425e-05, 4.248599999999783e-05, 4.197199999999776e-05, 4.227799999999976e-05, 4.222200000000148e-05, 4.2472999999997735e-05, 4.2166999999999205e-05, 4.2389000000000315e-05, 4.1875000000000245e-05, 4.2375000000000745e-05, 4.1624999999999995e-05, 4.190199999999991e-05, 4.190199999999991e-05, 4.2125000000000495e-05, 4.166599999999923e-05, 4.2152999999999635e-05, 4.1526999999999537e-05, 4.198599999999733e-05, 4.176399999999969e-05, 4.19860000000008e-05, 4.2374999999997276e-05, 4.1624999999999995e-05, 4.2166999999999205e-05, 4.2069000000002216e-05, 4.18059999999984e-05, 4.23059999999989e-05, 4.1875000000000245e-05, 4.18059999999984e-05, 4.2416999999999455e-05, 4.1652999999999135e-05, 4.1694999999997845e-05, 4.222199999999801e-05, 4.222200000000148e-05, 4.2375000000000745e-05, 4.1666999999998705e-05, 4.2180999999998775e-05, 4.2319000000002466e-05, 4.1818999999998496e-05, 4.202799999999951e-05, 4.19860000000008e-05, 4.2304999999999426e-05, 4.1875000000000245e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.437" endtime="20201117 14:41:15.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.432" endtime="20201117 14:41:15.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.442" endtime="20201117 14:41:15.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.446" endtime="20201117 14:41:15.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.444" endtime="20201117 14:41:15.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.440" endtime="20201117 14:41:15.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.070" endtime="20201117 14:41:15.466"></status>
</kw>
<msg timestamp="20201117 14:41:15.467" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.475" endtime="20201117 14:41:15.493"></status>
</kw>
<msg timestamp="20201117 14:41:15.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.474" endtime="20201117 14:41:15.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.495" endtime="20201117 14:41:15.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.497" endtime="20201117 14:41:15.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.471" endtime="20201117 14:41:15.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.469" endtime="20201117 14:41:15.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.508" endtime="20201117 14:41:15.792"></status>
</kw>
<msg timestamp="20201117 14:41:15.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019899375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.506" endtime="20201117 14:41:15.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019899375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.797" endtime="20201117 14:41:15.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.806" endtime="20201117 14:41:15.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.503" endtime="20201117 14:41:15.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.502" endtime="20201117 14:41:15.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.813" level="INFO">${RESULT} = [{'time': 0.019941458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2082999999998316e-05, 'source_diff': 4.2082999999998316e-05}, {'time': 0.019997472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:15.809" endtime="20201117 14:41:15.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.827" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:15.814" endtime="20201117 14:41:15.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.831" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.830" endtime="20201117 14:41:15.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.834" level="INFO">VALUE: [4.2082999999998316e-05, 4.245799999999869e-05, 4.24860000000013e-05, 4.2375000000000745e-05, 4.2361000000001175e-05, 4.216599999999973e-05, 4.207000000000169e-05, 4.227799999999976e-05, 4.2375000000000745e-05, 4.2125000000000495e-05, 4.17920000000023e-05, 4.19999999999969e-05, 4.152799999999901e-05, 4.223599999999758e-05, 4.183400000000101e-05, 4.2180999999998775e-05, 4.23059999999989e-05, 4.179199999999883e-05, 4.2111000000000925e-05, 4.219399999999887e-05, 4.1555000000002146e-05, 4.184800000000058e-05, 4.169400000000184e-05, 4.201399999999994e-05, 4.222200000000148e-05, 4.241599999999998e-05, 4.202799999999951e-05, 4.21799999999993e-05, 4.1540999999999106e-05, 4.2125000000000495e-05, 4.1861000000000675e-05, 4.24860000000013e-05, 4.2111000000000925e-05, 4.229199999999933e-05, 4.182000000000144e-05, 4.247199999999826e-05, 4.23059999999989e-05, 4.157000000000119e-05, 4.2152999999999635e-05, 4.2458999999998165e-05, 4.197199999999776e-05, 4.197199999999776e-05, 4.1667000000002175e-05, 4.209800000000083e-05, 4.1888999999999815e-05, 4.2416999999999455e-05, 4.204199999999908e-05, 4.2374999999997276e-05, 4.219399999999887e-05, 4.2375000000000745e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.833" endtime="20201117 14:41:15.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.828" endtime="20201117 14:41:15.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.837" endtime="20201117 14:41:15.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.841" endtime="20201117 14:41:15.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.839" endtime="20201117 14:41:15.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.836" endtime="20201117 14:41:15.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.467" endtime="20201117 14:41:15.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.068" endtime="20201117 14:41:15.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.067" endtime="20201117 14:41:15.862"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.865" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.873" endtime="20201117 14:41:15.893"></status>
</kw>
<msg timestamp="20201117 14:41:15.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.871" endtime="20201117 14:41:15.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.894" endtime="20201117 14:41:15.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.897" endtime="20201117 14:41:15.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.869" endtime="20201117 14:41:15.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.867" endtime="20201117 14:41:15.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.907" endtime="20201117 14:41:16.193"></status>
</kw>
<msg timestamp="20201117 14:41:16.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.905" endtime="20201117 14:41:16.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.197" endtime="20201117 14:41:16.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.206" endtime="20201117 14:41:16.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.902" endtime="20201117 14:41:16.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.900" endtime="20201117 14:41:16.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.213" level="INFO">${RESULT} = [{'time': 0.022591611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.327800000000076e-05, 'source_diff': 4.327800000000076e-05}, {'time': 0.022648583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:16.209" endtime="20201117 14:41:16.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:16.214" endtime="20201117 14:41:16.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.231" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.230" endtime="20201117 14:41:16.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.234" level="INFO">VALUE: [4.327800000000076e-05, 4.2541000000000107e-05, 4.269399999999937e-05, 4.26799999999998e-05, 4.320799999999944e-05, 4.297199999999876e-05, 4.2681000000002745e-05, 4.3389000000001315e-05, 4.3167000000000205e-05, 4.316599999999726e-05, 4.252800000000001e-05, 4.3346999999999136e-05, 4.275000000000112e-05, 4.329199999999686e-05, 4.297199999999876e-05, 4.302800000000051e-05, 4.323599999999858e-05, 4.3417000000000455e-05, 4.3472999999998735e-05, 4.305599999999965e-05, 4.288800000000134e-05, 4.2554999999999676e-05, 4.341600000000098e-05, 4.2583000000002286e-05, 4.3068999999999746e-05, 4.269399999999937e-05, 4.2568999999999246e-05, 4.2554999999999676e-05, 4.251400000000044e-05, 4.2596999999998386e-05, 4.327800000000076e-05, 4.344400000000012e-05, 4.286200000000115e-05, 4.345799999999969e-05, 4.2846999999998636e-05, 4.3417000000000455e-05, 4.3167000000000205e-05, 4.29860000000018e-05, 4.3111000000001926e-05, 4.2666999999999705e-05, 4.350000000000187e-05, 4.284800000000158e-05, 4.2737000000001024e-05, 4.252800000000001e-05, 4.293000000000005e-05, 4.309799999999836e-05, 4.345799999999969e-05, 4.275000000000112e-05, 4.2846999999998636e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.233" endtime="20201117 14:41:16.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.228" endtime="20201117 14:41:16.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.237" endtime="20201117 14:41:16.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.241" endtime="20201117 14:41:16.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.239" endtime="20201117 14:41:16.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.236" endtime="20201117 14:41:16.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.865" endtime="20201117 14:41:16.262"></status>
</kw>
<msg timestamp="20201117 14:41:16.262" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.270" endtime="20201117 14:41:16.289"></status>
</kw>
<msg timestamp="20201117 14:41:16.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.269" endtime="20201117 14:41:16.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.291" endtime="20201117 14:41:16.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.294" endtime="20201117 14:41:16.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.266" endtime="20201117 14:41:16.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.264" endtime="20201117 14:41:16.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.304" endtime="20201117 14:41:16.591"></status>
</kw>
<msg timestamp="20201117 14:41:16.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.302" endtime="20201117 14:41:16.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.595" endtime="20201117 14:41:16.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.604" endtime="20201117 14:41:16.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.300" endtime="20201117 14:41:16.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.298" endtime="20201117 14:41:16.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.611" level="INFO">${RESULT} = [{'time': 0.019786583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2875000000001245e-05, 'source_diff': 4.2875000000001245e-05}, {'time': 0.019844583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:16.607" endtime="20201117 14:41:16.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:16.612" endtime="20201117 14:41:16.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.630" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.628" endtime="20201117 14:41:16.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.632" level="INFO">VALUE: [4.2875000000001245e-05, 4.273599999999808e-05, 4.2958999999998665e-05, 4.3167000000000205e-05, 4.2680999999999275e-05, 4.3431000000000025e-05, 4.275000000000112e-05, 4.2804999999999926e-05, 4.3110999999998456e-05, 4.265200000000066e-05, 4.348599999999883e-05, 4.3305000000000426e-05, 4.2611000000001426e-05, 4.266600000000023e-05, 4.2861000000001676e-05, 4.2818999999999496e-05, 4.273599999999808e-05, 4.2666999999999705e-05, 4.297199999999876e-05, 4.3124999999998026e-05, 4.323599999999858e-05, 4.2916999999999955e-05, 4.3388999999997846e-05, 4.255600000000262e-05, 4.255599999999915e-05, 4.29860000000018e-05, 4.3152999999997166e-05, 4.2903000000000385e-05, 4.305599999999965e-05, 4.2681000000002745e-05, 4.2875000000001245e-05, 4.3458999999999165e-05, 4.2804999999999926e-05, 4.295799999999919e-05, 4.2582999999998816e-05, 4.351399999999797e-05, 4.315200000000116e-05, 4.2554999999999676e-05, 4.2818999999999496e-05, 4.279199999999983e-05, 4.275000000000112e-05, 4.3167000000000205e-05, 4.3096999999998886e-05, 4.345799999999969e-05, 4.29999999999979e-05, 4.348599999999883e-05, 4.2625000000000995e-05, 4.281999999999897e-05, 4.2695000000002314e-05, 4.255599999999915e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.631" endtime="20201117 14:41:16.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.626" endtime="20201117 14:41:16.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.635" endtime="20201117 14:41:16.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.639" endtime="20201117 14:41:16.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.637" endtime="20201117 14:41:16.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.634" endtime="20201117 14:41:16.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.263" endtime="20201117 14:41:16.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.863" endtime="20201117 14:41:16.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.862" endtime="20201117 14:41:16.660"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.663" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.672" endtime="20201117 14:41:16.691"></status>
</kw>
<msg timestamp="20201117 14:41:16.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.670" endtime="20201117 14:41:16.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.692" endtime="20201117 14:41:16.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.695" endtime="20201117 14:41:16.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.667" endtime="20201117 14:41:16.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.665" endtime="20201117 14:41:16.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.704" endtime="20201117 14:41:16.990"></status>
</kw>
<msg timestamp="20201117 14:41:16.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024144958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.703" endtime="20201117 14:41:16.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024144958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024188861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.994" endtime="20201117 14:41:17.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.003" endtime="20201117 14:41:17.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.700" endtime="20201117 14:41:17.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.698" endtime="20201117 14:41:17.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.010" level="INFO">${RESULT} = [{'time': 0.024188861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3902999999997916e-05, 'source_diff': 4.3902999999997916e-05}, {'time': 0.024246903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:17.006" endtime="20201117 14:41:17.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.025" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:17.011" endtime="20201117 14:41:17.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.030" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.029" endtime="20201117 14:41:17.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.032" level="INFO">VALUE: [4.3902999999997916e-05, 4.427800000000176e-05, 4.4416999999997986e-05, 4.44860000000033e-05, 4.4167000000001205e-05, 4.4360999999999706e-05, 4.426399999999872e-05, 4.407000000000022e-05, 4.4195000000000345e-05, 4.404200000000108e-05, 4.379200000000083e-05, 4.384799999999911e-05, 4.355600000000015e-05, 4.383399999999954e-05, 4.44999999999994e-05, 4.393000000000105e-05, 4.4110999999999456e-05, 4.426399999999872e-05, 4.4374999999999276e-05, 4.3805000000000927e-05, 4.447200000000026e-05, 4.4360999999999706e-05, 4.451399999999897e-05, 4.4138999999998596e-05, 4.39999999999989e-05, 4.4180999999997306e-05, 4.3639000000001565e-05, 4.3874999999998776e-05, 4.3681000000000275e-05, 4.373600000000255e-05, 4.401399999999847e-05, 4.379200000000083e-05, 4.4139000000002065e-05, 4.430599999999743e-05, 4.4417000000001455e-05, 4.3987000000002274e-05, 4.3555000000000677e-05, 4.409799999999936e-05, 4.4069000000000746e-05, 4.386199999999868e-05, 4.4472999999999735e-05, 4.4389000000002315e-05, 4.3860999999999206e-05, 4.4124999999999026e-05, 4.41939999999974e-05, 4.393000000000105e-05, 4.3667000000000705e-05, 4.358399999999929e-05, 4.3931000000000525e-05, 4.4153000000001635e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.031" endtime="20201117 14:41:17.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.026" endtime="20201117 14:41:17.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.036" endtime="20201117 14:41:17.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.039" endtime="20201117 14:41:17.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.037" endtime="20201117 14:41:17.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.034" endtime="20201117 14:41:17.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.663" endtime="20201117 14:41:17.060"></status>
</kw>
<msg timestamp="20201117 14:41:17.061" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.069" endtime="20201117 14:41:17.087"></status>
</kw>
<msg timestamp="20201117 14:41:17.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.068" endtime="20201117 14:41:17.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.089" endtime="20201117 14:41:17.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.091" endtime="20201117 14:41:17.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.065" endtime="20201117 14:41:17.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.063" endtime="20201117 14:41:17.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.102" endtime="20201117 14:41:17.388"></status>
</kw>
<msg timestamp="20201117 14:41:17.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02042125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:17.100" endtime="20201117 14:41:17.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02042125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:17.392" endtime="20201117 14:41:17.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.401" endtime="20201117 14:41:17.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.097" endtime="20201117 14:41:17.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.096" endtime="20201117 14:41:17.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.408" level="INFO">${RESULT} = [{'time': 0.02042125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.373599999999908e-05, 'source_diff': 4.373599999999908e-05}, {'time': 0.020480264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:17.404" endtime="20201117 14:41:17.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.422" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:17.409" endtime="20201117 14:41:17.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.426" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.425" endtime="20201117 14:41:17.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.429" level="INFO">VALUE: [4.373599999999908e-05, 4.3694999999999845e-05, 4.4110999999999456e-05, 4.39999999999989e-05, 4.429200000000133e-05, 4.358399999999929e-05, 4.379200000000083e-05, 4.445800000000069e-05, 4.3610999999998956e-05, 4.377800000000126e-05, 4.3860999999999206e-05, 4.3917000000000955e-05, 4.398599999999933e-05, 4.405499999999771e-05, 4.398599999999933e-05, 4.354200000000058e-05, 4.39999999999989e-05, 4.422200000000001e-05, 4.388799999999887e-05, 4.391600000000148e-05, 4.397200000000323e-05, 4.443000000000155e-05, 4.3624999999998526e-05, 4.370799999999994e-05, 4.3931000000000525e-05, 4.4110999999999456e-05, 4.4416999999997986e-05, 4.4417000000001455e-05, 4.448599999999983e-05, 4.398599999999933e-05, 4.3945000000000095e-05, 4.354200000000058e-05, 4.4417000000001455e-05, 4.3624999999998526e-05, 4.429200000000133e-05, 4.373599999999908e-05, 4.405600000000065e-05, 4.436199999999918e-05, 4.3972999999999235e-05, 4.4487000000002774e-05, 4.376299999999875e-05, 4.398599999999933e-05, 4.4069000000000746e-05, 4.4083000000000316e-05, 4.430499999999796e-05, 4.444399999999765e-05, 4.429100000000186e-05, 4.429099999999839e-05, 4.3555000000000677e-05, 4.447200000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.428" endtime="20201117 14:41:17.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.423" endtime="20201117 14:41:17.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.433" endtime="20201117 14:41:17.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.436" endtime="20201117 14:41:17.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.435" endtime="20201117 14:41:17.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.431" endtime="20201117 14:41:17.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.061" endtime="20201117 14:41:17.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.661" endtime="20201117 14:41:17.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.661" endtime="20201117 14:41:17.458"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.460" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.469" endtime="20201117 14:41:17.489"></status>
</kw>
<msg timestamp="20201117 14:41:17.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.467" endtime="20201117 14:41:17.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.490" endtime="20201117 14:41:17.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.493" endtime="20201117 14:41:17.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.464" endtime="20201117 14:41:17.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.462" endtime="20201117 14:41:17.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.502" endtime="20201117 14:41:17.789"></status>
</kw>
<msg timestamp="20201117 14:41:17.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.501" endtime="20201117 14:41:17.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.793" endtime="20201117 14:41:17.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.802" endtime="20201117 14:41:17.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.498" endtime="20201117 14:41:17.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.496" endtime="20201117 14:41:17.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.809" level="INFO">${RESULT} = [{'time': 0.022506125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4638999999999096e-05, 'source_diff': 4.4638999999999096e-05}, {'time': 0.022565125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:17.805" endtime="20201117 14:41:17.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:17.810" endtime="20201117 14:41:17.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.827" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.826" endtime="20201117 14:41:17.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.830" level="INFO">VALUE: [4.4638999999999096e-05, 4.455599999999768e-05, 4.508400000000079e-05, 4.4902999999998916e-05, 4.4681000000001275e-05, 4.505599999999818e-05, 4.455600000000115e-05, 4.4666999999998236e-05, 4.523600000000058e-05, 4.525000000000015e-05, 4.529199999999886e-05, 4.5152999999999166e-05, 4.4819000000001497e-05, 4.495800000000119e-05, 4.4597000000000386e-05, 4.465200000000266e-05, 4.520800000000144e-05, 4.491599999999901e-05, 4.5347000000001136e-05, 4.479099999999889e-05, 4.5319000000001997e-05, 4.5416999999998986e-05, 4.4861000000000206e-05, 4.492999999999858e-05, 4.455600000000115e-05, 4.4610999999999956e-05, 4.4680999999997806e-05, 4.502799999999904e-05, 4.551399999999997e-05, 4.473600000000008e-05, 4.4874999999999776e-05, 4.455600000000115e-05, 4.491599999999901e-05, 4.5388999999999846e-05, 4.486199999999968e-05, 4.492999999999858e-05, 4.5473000000000735e-05, 4.476399999999922e-05, 4.5361000000000706e-05, 4.5402999999999416e-05, 4.522199999999754e-05, 4.4653000000002135e-05, 4.5152999999999166e-05, 4.5111000000000456e-05, 4.5152999999999166e-05, 4.548600000000083e-05, 4.5431000000002025e-05, 4.46939999999979e-05, 4.4681000000001275e-05, 4.527799999999929e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.828" endtime="20201117 14:41:17.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.824" endtime="20201117 14:41:17.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.834" endtime="20201117 14:41:17.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.837" endtime="20201117 14:41:17.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.836" endtime="20201117 14:41:17.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.832" endtime="20201117 14:41:17.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.461" endtime="20201117 14:41:17.858"></status>
</kw>
<msg timestamp="20201117 14:41:17.858" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.867" endtime="20201117 14:41:17.886"></status>
</kw>
<msg timestamp="20201117 14:41:17.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.865" endtime="20201117 14:41:17.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.888" endtime="20201117 14:41:17.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.891" endtime="20201117 14:41:17.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.863" endtime="20201117 14:41:17.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.860" endtime="20201117 14:41:17.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.901" endtime="20201117 14:41:18.188"></status>
</kw>
<msg timestamp="20201117 14:41:18.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019882028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.899" endtime="20201117 14:41:18.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019882028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.192" endtime="20201117 14:41:18.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.201" endtime="20201117 14:41:18.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.897" endtime="20201117 14:41:18.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.895" endtime="20201117 14:41:18.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.209" level="INFO">${RESULT} = [{'time': 0.019927167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5138999999999596e-05, 'source_diff': 4.5138999999999596e-05}, {'time': 0.019988139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:18.205" endtime="20201117 14:41:18.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.223" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:18.210" endtime="20201117 14:41:18.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.228" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.226" endtime="20201117 14:41:18.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.230" level="INFO">VALUE: [4.5138999999999596e-05, 4.534699999999767e-05, 4.49999999999999e-05, 4.4709000000000415e-05, 4.532000000000147e-05, 4.530599999999843e-05, 4.4931000000001525e-05, 4.4931000000001525e-05, 4.532000000000147e-05, 4.458400000000029e-05, 4.474999999999965e-05, 4.493000000000205e-05, 4.516599999999926e-05, 4.492999999999858e-05, 4.541599999999951e-05, 4.544399999999865e-05, 4.523600000000058e-05, 4.4624999999999526e-05, 4.452799999999854e-05, 4.504199999999861e-05, 4.530500000000243e-05, 4.4624999999999526e-05, 4.504199999999861e-05, 4.481899999999803e-05, 4.504200000000208e-05, 4.508299999999785e-05, 4.4653000000002135e-05, 4.525000000000015e-05, 4.497200000000076e-05, 4.5347000000001136e-05, 4.525000000000015e-05, 4.4709000000000415e-05, 4.505599999999818e-05, 4.4916999999998486e-05, 4.523600000000058e-05, 4.452800000000201e-05, 4.492999999999858e-05, 4.480500000000193e-05, 4.497200000000076e-05, 4.491599999999901e-05, 4.4555000000001677e-05, 4.523600000000058e-05, 4.4583000000000816e-05, 4.55000000000004e-05, 4.5111000000000456e-05, 4.5195000000001345e-05, 4.4610999999999956e-05, 4.5333000000001566e-05, 4.529199999999886e-05, 4.455599999999768e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.229" endtime="20201117 14:41:18.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.224" endtime="20201117 14:41:18.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.234" endtime="20201117 14:41:18.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.238" endtime="20201117 14:41:18.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.236" endtime="20201117 14:41:18.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.232" endtime="20201117 14:41:18.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.859" endtime="20201117 14:41:18.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.459" endtime="20201117 14:41:18.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.458" endtime="20201117 14:41:18.259"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.261" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.270" endtime="20201117 14:41:18.289"></status>
</kw>
<msg timestamp="20201117 14:41:18.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.268" endtime="20201117 14:41:18.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.291" endtime="20201117 14:41:18.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.294" endtime="20201117 14:41:18.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.266" endtime="20201117 14:41:18.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.263" endtime="20201117 14:41:18.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.303" endtime="20201117 14:41:18.590"></status>
</kw>
<msg timestamp="20201117 14:41:18.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.301" endtime="20201117 14:41:18.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.594" endtime="20201117 14:41:18.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.603" endtime="20201117 14:41:18.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.299" endtime="20201117 14:41:18.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.297" endtime="20201117 14:41:18.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.609" level="INFO">${RESULT} = [{'time': 0.023316069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58879999999974e-05, 'source_diff': 4.58879999999974e-05}, {'time': 0.023377069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:18.606" endtime="20201117 14:41:18.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:18.610" endtime="20201117 14:41:18.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.629" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.628" endtime="20201117 14:41:18.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.632" level="INFO">VALUE: [4.58879999999974e-05, 4.631899999999953e-05, 4.631899999999953e-05, 4.5625000000000526e-05, 4.6139000000000596e-05, 4.591600000000001e-05, 4.6153000000000166e-05, 4.5611000000000956e-05, 4.567999999999933e-05, 4.612499999999756e-05, 4.641600000000051e-05, 4.624999999999768e-05, 4.605599999999918e-05, 4.5667000000002705e-05, 4.6166999999999736e-05, 4.626400000000072e-05, 4.554199999999911e-05, 4.623600000000158e-05, 4.6125000000001026e-05, 4.6209000000001915e-05, 4.5916999999999486e-05, 4.5680999999998806e-05, 4.5916999999999486e-05, 4.580599999999893e-05, 4.617999999999983e-05, 4.6473000000001735e-05, 4.611200000000093e-05, 4.5652999999999666e-05, 4.6125000000001026e-05, 4.572200000000151e-05, 4.554100000000311e-05, 4.5625000000000526e-05, 4.648600000000183e-05, 4.60000000000009e-05, 4.555499999999921e-05, 4.630499999999996e-05, 4.555599999999868e-05, 4.604100000000014e-05, 4.5625000000000526e-05, 4.5847000000001636e-05, 4.562499999999706e-05, 4.637499999999781e-05, 4.582000000000197e-05, 4.629199999999986e-05, 4.605599999999918e-05, 4.572200000000151e-05, 4.5737000000000555e-05, 4.6125000000001026e-05, 4.60000000000009e-05, 4.5875000000000776e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.630" endtime="20201117 14:41:18.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.625" endtime="20201117 14:41:18.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.636" endtime="20201117 14:41:18.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.639" endtime="20201117 14:41:18.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.638" endtime="20201117 14:41:18.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.634" endtime="20201117 14:41:18.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.262" endtime="20201117 14:41:18.660"></status>
</kw>
<msg timestamp="20201117 14:41:18.660" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.669" endtime="20201117 14:41:18.687"></status>
</kw>
<msg timestamp="20201117 14:41:18.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.667" endtime="20201117 14:41:18.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.689" endtime="20201117 14:41:18.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.691" endtime="20201117 14:41:18.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.665" endtime="20201117 14:41:18.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.662" endtime="20201117 14:41:18.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.702" endtime="20201117 14:41:18.988"></status>
</kw>
<msg timestamp="20201117 14:41:18.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019996986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.700" endtime="20201117 14:41:18.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019996986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.992" endtime="20201117 14:41:19.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.001" endtime="20201117 14:41:19.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.697" endtime="20201117 14:41:19.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.696" endtime="20201117 14:41:19.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.008" level="INFO">${RESULT} = [{'time': 0.019996986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5667000000002705e-05, 'source_diff': 4.5667000000002705e-05}, {'time': 0.020059, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:19.005" endtime="20201117 14:41:19.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:19.009" endtime="20201117 14:41:19.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.027" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.026" endtime="20201117 14:41:19.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.030" level="INFO">VALUE: [4.5667000000002705e-05, 4.5833000000002067e-05, 4.598600000000133e-05, 4.5833000000002067e-05, 4.5639000000000096e-05, 4.645799999999922e-05, 4.605599999999918e-05, 4.60000000000009e-05, 4.604199999999961e-05, 4.5666999999999236e-05, 4.649999999999793e-05, 4.5709000000001415e-05, 4.6125000000001026e-05, 4.5625000000000526e-05, 4.629199999999986e-05, 4.611200000000093e-05, 4.627800000000029e-05, 4.6153000000000166e-05, 4.561099999999749e-05, 4.598599999999786e-05, 4.5875000000000776e-05, 4.645799999999922e-05, 4.6389000000000846e-05, 4.648600000000183e-05, 4.577700000000032e-05, 4.6375000000001276e-05, 4.611099999999799e-05, 4.63329999999991e-05, 4.572199999999804e-05, 4.5861000000001206e-05, 4.6430999999999556e-05, 4.582000000000197e-05, 4.5875000000000776e-05, 4.6166999999999736e-05, 4.636099999999824e-05, 4.5666999999999236e-05, 4.629199999999986e-05, 4.5709000000001415e-05, 4.56800000000028e-05, 4.6222999999998016e-05, 4.6486999999997836e-05, 4.577799999999979e-05, 4.580499999999946e-05, 4.6389000000000846e-05, 4.5667000000002705e-05, 4.591600000000001e-05, 4.597200000000176e-05, 4.6347000000002136e-05, 4.562499999999706e-05, 4.627800000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.028" endtime="20201117 14:41:19.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.023" endtime="20201117 14:41:19.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.033" endtime="20201117 14:41:19.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.036" endtime="20201117 14:41:19.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.035" endtime="20201117 14:41:19.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.031" endtime="20201117 14:41:19.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.661" endtime="20201117 14:41:19.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.260" endtime="20201117 14:41:19.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.259" endtime="20201117 14:41:19.058"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.060" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.069" endtime="20201117 14:41:19.087"></status>
</kw>
<msg timestamp="20201117 14:41:19.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.067" endtime="20201117 14:41:19.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.089" endtime="20201117 14:41:19.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.092" endtime="20201117 14:41:19.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.064" endtime="20201117 14:41:19.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.062" endtime="20201117 14:41:19.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.101" endtime="20201117 14:41:19.388"></status>
</kw>
<msg timestamp="20201117 14:41:19.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022405194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.099" endtime="20201117 14:41:19.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022405194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.392" endtime="20201117 14:41:19.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.401" endtime="20201117 14:41:19.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.097" endtime="20201117 14:41:19.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.095" endtime="20201117 14:41:19.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.408" level="INFO">${RESULT} = [{'time': 0.022452028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.683399999999907e-05, 'source_diff': 4.683399999999907e-05}, {'time': 0.022515014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:19.405" endtime="20201117 14:41:19.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.422" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:19.409" endtime="20201117 14:41:19.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.427" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.426" endtime="20201117 14:41:19.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.429" level="INFO">VALUE: [4.683399999999907e-05, 4.697199999999929e-05, 4.7208999999999446e-05, 4.697199999999929e-05, 4.7181000000000306e-05, 4.6611000000001956e-05, 4.661099999999849e-05, 4.704200000000061e-05, 4.720799999999997e-05, 4.666600000000076e-05, 4.655500000000021e-05, 4.754200000000111e-05, 4.715200000000169e-05, 4.724999999999868e-05, 4.694400000000015e-05, 4.720799999999997e-05, 4.748599999999936e-05, 4.7097000000002887e-05, 4.7167000000000736e-05, 4.726400000000172e-05, 4.704200000000061e-05, 4.673600000000208e-05, 4.745800000000022e-05, 4.690299999999745e-05, 4.654200000000011e-05, 4.7389000000001846e-05, 4.723599999999911e-05, 4.697199999999929e-05, 4.677699999999785e-05, 4.686199999999821e-05, 4.727799999999782e-05, 4.686099999999874e-05, 4.729100000000139e-05, 4.659800000000186e-05, 4.75000000000024e-05, 4.73330000000001e-05, 4.693000000000058e-05, 4.727700000000182e-05, 4.737499999999881e-05, 4.736099999999924e-05, 4.731900000000053e-05, 4.65139999999975e-05, 4.716699999999727e-05, 4.723599999999911e-05, 4.6680999999999806e-05, 4.737499999999881e-05, 4.651400000000097e-05, 4.7139000000001596e-05, 4.655600000000315e-05, 4.6597000000002387e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.428" endtime="20201117 14:41:19.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.423" endtime="20201117 14:41:19.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.433" endtime="20201117 14:41:19.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.436" endtime="20201117 14:41:19.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.435" endtime="20201117 14:41:19.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.431" endtime="20201117 14:41:19.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.061" endtime="20201117 14:41:19.457"></status>
</kw>
<msg timestamp="20201117 14:41:19.457" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.466" endtime="20201117 14:41:19.484"></status>
</kw>
<msg timestamp="20201117 14:41:19.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.464" endtime="20201117 14:41:19.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.485" endtime="20201117 14:41:19.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.488" endtime="20201117 14:41:19.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.462" endtime="20201117 14:41:19.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.460" endtime="20201117 14:41:19.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.498" endtime="20201117 14:41:19.785"></status>
</kw>
<msg timestamp="20201117 14:41:19.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019955639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.497" endtime="20201117 14:41:19.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019955639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.789" endtime="20201117 14:41:19.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.798" endtime="20201117 14:41:19.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.494" endtime="20201117 14:41:19.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.492" endtime="20201117 14:41:19.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.805" level="INFO">${RESULT} = [{'time': 0.020002556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6917000000000486e-05, 'source_diff': 4.6917000000000486e-05}, {'time': 0.020064583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:19.801" endtime="20201117 14:41:19.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.819" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:19.806" endtime="20201117 14:41:19.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.824" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.822" endtime="20201117 14:41:19.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.826" level="INFO">VALUE: [4.6917000000000486e-05, 4.70000000000019e-05, 4.749999999999893e-05, 4.711099999999899e-05, 4.722200000000301e-05, 4.727800000000129e-05, 4.71940000000004e-05, 4.674999999999818e-05, 4.672199999999904e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.656999999999925e-05, 4.730600000000043e-05, 4.673599999999861e-05, 4.7181000000000306e-05, 4.7431000000000556e-05, 4.6597000000002387e-05, 4.724999999999868e-05, 4.7125000000002026e-05, 4.6667000000000236e-05, 4.702800000000104e-05, 4.7430999999997087e-05, 4.7445000000000126e-05, 4.75139999999985e-05, 4.655500000000021e-05, 4.668000000000033e-05, 4.723599999999911e-05, 4.686099999999874e-05, 4.737499999999881e-05, 4.73330000000001e-05, 4.670799999999947e-05, 4.697199999999929e-05, 4.6861000000002206e-05, 4.708299999999985e-05, 4.725000000000215e-05, 4.711099999999899e-05, 4.730600000000043e-05, 4.712499999999856e-05, 4.697200000000276e-05, 4.6931000000000056e-05, 4.722199999999954e-05, 4.687499999999831e-05, 4.749999999999893e-05, 4.734799999999914e-05, 4.7417000000000986e-05, 4.661200000000143e-05, 4.75000000000024e-05, 4.71529999999977e-05, 4.706900000000028e-05, 4.677800000000079e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.825" endtime="20201117 14:41:19.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.820" endtime="20201117 14:41:19.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.829" endtime="20201117 14:41:19.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.833" endtime="20201117 14:41:19.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.831" endtime="20201117 14:41:19.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.828" endtime="20201117 14:41:19.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.458" endtime="20201117 14:41:19.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.059" endtime="20201117 14:41:19.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.058" endtime="20201117 14:41:19.854"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.857" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.865" endtime="20201117 14:41:19.884"></status>
</kw>
<msg timestamp="20201117 14:41:19.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.864" endtime="20201117 14:41:19.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.886" endtime="20201117 14:41:19.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.888" endtime="20201117 14:41:19.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.861" endtime="20201117 14:41:19.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.859" endtime="20201117 14:41:19.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.898" endtime="20201117 14:41:20.184"></status>
</kw>
<msg timestamp="20201117 14:41:20.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023256556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023304597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.897" endtime="20201117 14:41:20.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023256556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023304597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.189" endtime="20201117 14:41:20.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.197" endtime="20201117 14:41:20.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.894" endtime="20201117 14:41:20.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.892" endtime="20201117 14:41:20.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.204" level="INFO">${RESULT} = [{'time': 0.023304597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.804099999999867e-05, 'source_diff': 4.804099999999867e-05}, {'time': 0.023366625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.201" endtime="20201117 14:41:20.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:20.205" endtime="20201117 14:41:20.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.224" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.223" endtime="20201117 14:41:20.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.227" level="INFO">VALUE: [4.804099999999867e-05, 4.849999999999993e-05, 4.755600000000068e-05, 4.791699999999802e-05, 4.806900000000128e-05, 4.823600000000011e-05, 4.798599999999986e-05, 4.813899999999913e-05, 4.7653000000001666e-05, 4.78330000000006e-05, 4.837499999999981e-05, 4.822200000000054e-05, 4.76529999999982e-05, 4.848600000000036e-05, 4.8167000000001736e-05, 4.848600000000036e-05, 4.776399999999875e-05, 4.781900000000103e-05, 4.779199999999789e-05, 4.798599999999986e-05, 4.837499999999981e-05, 4.767999999999786e-05, 4.756900000000078e-05, 4.791599999999854e-05, 4.809700000000042e-05, 4.752799999999807e-05, 4.809700000000042e-05, 4.811099999999999e-05, 4.844399999999818e-05, 4.826400000000272e-05, 4.784700000000017e-05, 4.843099999999809e-05, 4.779200000000136e-05, 4.827800000000229e-05, 4.797200000000029e-05, 4.833400000000057e-05, 4.774999999999918e-05, 4.837499999999981e-05, 4.773599999999961e-05, 4.838899999999938e-05, 4.755500000000121e-05, 4.7667000000001236e-05, 4.808299999999738e-05, 4.768000000000133e-05, 4.80000000000029e-05, 4.847200000000079e-05, 4.841599999999904e-05, 4.80269999999991e-05, 4.759699999999992e-05, 4.7709000000003415e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.225" endtime="20201117 14:41:20.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.220" endtime="20201117 14:41:20.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.230" endtime="20201117 14:41:20.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.234" endtime="20201117 14:41:20.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.233" endtime="20201117 14:41:20.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.228" endtime="20201117 14:41:20.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.857" endtime="20201117 14:41:20.255"></status>
</kw>
<msg timestamp="20201117 14:41:20.256" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.264" endtime="20201117 14:41:20.283"></status>
</kw>
<msg timestamp="20201117 14:41:20.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.263" endtime="20201117 14:41:20.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.285" endtime="20201117 14:41:20.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.291" endtime="20201117 14:41:20.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.260" endtime="20201117 14:41:20.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.258" endtime="20201117 14:41:20.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.302" endtime="20201117 14:41:20.588"></status>
</kw>
<msg timestamp="20201117 14:41:20.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.300" endtime="20201117 14:41:20.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.592" endtime="20201117 14:41:20.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.601" endtime="20201117 14:41:20.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.298" endtime="20201117 14:41:20.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.296" endtime="20201117 14:41:20.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.608" level="INFO">${RESULT} = [{'time': 0.020010569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.804099999999867e-05, 'source_diff': 4.804099999999867e-05}, {'time': 0.020071597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.605" endtime="20201117 14:41:20.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.622" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:20.609" endtime="20201117 14:41:20.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.627" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.625" endtime="20201117 14:41:20.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.629" level="INFO">VALUE: [4.804099999999867e-05, 4.805500000000171e-05, 4.761099999999949e-05, 4.770800000000047e-05, 4.7945000000000626e-05, 4.752800000000154e-05, 4.76529999999982e-05, 4.834700000000067e-05, 4.75139999999985e-05, 4.848599999999689e-05, 4.837499999999981e-05, 4.827799999999882e-05, 4.847200000000079e-05, 4.757000000000025e-05, 4.7625000000002526e-05, 4.807000000000075e-05, 4.754200000000111e-05, 4.804199999999814e-05, 4.804200000000161e-05, 4.768000000000133e-05, 4.822200000000054e-05, 4.8389000000002846e-05, 4.762499999999906e-05, 4.817999999999836e-05, 4.805500000000171e-05, 4.834700000000067e-05, 4.761099999999949e-05, 4.841699999999852e-05, 4.829200000000186e-05, 4.754199999999764e-05, 4.848600000000036e-05, 4.779200000000136e-05, 4.7695000000000376e-05, 4.829199999999839e-05, 4.8208999999996976e-05, 4.7903000000001916e-05, 4.841699999999852e-05, 4.7917000000001486e-05, 4.774999999999918e-05, 4.7681000000000806e-05, 4.798599999999986e-05, 4.7944999999997157e-05, 4.752800000000154e-05, 4.780500000000146e-05, 4.777800000000179e-05, 4.812499999999956e-05, 4.849999999999993e-05, 4.755499999999774e-05, 4.772200000000004e-05, 4.761099999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.628" endtime="20201117 14:41:20.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.623" endtime="20201117 14:41:20.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.632" endtime="20201117 14:41:20.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.636" endtime="20201117 14:41:20.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.634" endtime="20201117 14:41:20.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.631" endtime="20201117 14:41:20.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.256" endtime="20201117 14:41:20.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.855" endtime="20201117 14:41:20.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.855" endtime="20201117 14:41:20.662"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.664" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.673" endtime="20201117 14:41:20.692"></status>
</kw>
<msg timestamp="20201117 14:41:20.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.671" endtime="20201117 14:41:20.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.694" endtime="20201117 14:41:20.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.696" endtime="20201117 14:41:20.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.668" endtime="20201117 14:41:20.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.666" endtime="20201117 14:41:20.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.706" endtime="20201117 14:41:20.992"></status>
</kw>
<msg timestamp="20201117 14:41:20.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027319292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02736875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:20.704" endtime="20201117 14:41:20.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027319292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02736875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:20.996" endtime="20201117 14:41:21.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.005" endtime="20201117 14:41:21.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.701" endtime="20201117 14:41:21.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.700" endtime="20201117 14:41:21.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.012" level="INFO">${RESULT} = [{'time': 0.02736875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.945800000000222e-05, 'source_diff': 4.945800000000222e-05}, {'time': 0.027431708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:21.008" endtime="20201117 14:41:21.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.025" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:21.013" endtime="20201117 14:41:21.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.030" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.029" endtime="20201117 14:41:21.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.033" level="INFO">VALUE: [4.945800000000222e-05, 4.891599999999954e-05, 4.890199999999997e-05, 4.861100000000049e-05, 4.908300000000185e-05, 4.951399999999703e-05, 4.904199999999914e-05, 4.948599999999789e-05, 4.852799999999907e-05, 4.868099999999834e-05, 4.890299999999945e-05, 4.861100000000049e-05, 4.948600000000136e-05, 4.880600000000193e-05, 4.926299999999731e-05, 4.862500000000006e-05, 4.9487000000000836e-05, 4.8695000000001376e-05, 4.8987000000000336e-05, 4.879200000000236e-05, 4.937500000000081e-05, 4.872200000000104e-05, 4.859699999999745e-05, 4.855499999999874e-05, 4.950000000000093e-05, 4.945799999999875e-05, 4.916599999999979e-05, 4.922200000000154e-05, 4.873599999999714e-05, 4.852799999999907e-05, 4.919399999999893e-05, 4.8709000000000946e-05, 4.930599999999896e-05, 4.900000000000043e-05, 4.933400000000157e-05, 4.895800000000172e-05, 4.893099999999859e-05, 4.866699999999877e-05, 4.877799999999932e-05, 4.868099999999834e-05, 4.950000000000093e-05, 4.951299999999756e-05, 4.856900000000178e-05, 4.926400000000025e-05, 4.875000000000018e-05, 4.854199999999864e-05, 4.913900000000013e-05, 4.941600000000004e-05, 4.941600000000004e-05, 4.868000000000233e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.031" endtime="20201117 14:41:21.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.026" endtime="20201117 14:41:21.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.036" endtime="20201117 14:41:21.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.039" endtime="20201117 14:41:21.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.038" endtime="20201117 14:41:21.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.034" endtime="20201117 14:41:21.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.665" endtime="20201117 14:41:21.061"></status>
</kw>
<msg timestamp="20201117 14:41:21.061" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.070" endtime="20201117 14:41:21.088"></status>
</kw>
<msg timestamp="20201117 14:41:21.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.068" endtime="20201117 14:41:21.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.090" endtime="20201117 14:41:21.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.093" endtime="20201117 14:41:21.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.065" endtime="20201117 14:41:21.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.063" endtime="20201117 14:41:21.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.103" endtime="20201117 14:41:21.388"></status>
</kw>
<msg timestamp="20201117 14:41:21.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020469861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.101" endtime="20201117 14:41:21.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020469861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.393" endtime="20201117 14:41:21.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.401" endtime="20201117 14:41:21.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.099" endtime="20201117 14:41:21.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.097" endtime="20201117 14:41:21.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.408" level="INFO">${RESULT} = [{'time': 0.020469861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.931899999999906e-05, 'source_diff': 4.931899999999906e-05}, {'time': 0.020533875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:21.405" endtime="20201117 14:41:21.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.422" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:21.409" endtime="20201117 14:41:21.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.426" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.425" endtime="20201117 14:41:21.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.429" level="INFO">VALUE: [4.931899999999906e-05, 4.950000000000093e-05, 4.930599999999896e-05, 4.859800000000039e-05, 4.912500000000056e-05, 4.938899999999691e-05, 4.927799999999982e-05, 4.925000000000068e-05, 4.95140000000005e-05, 4.909700000000142e-05, 4.881899999999856e-05, 4.929199999999939e-05, 4.927800000000329e-05, 4.886200000000021e-05, 4.937499999999734e-05, 4.936100000000124e-05, 4.931899999999906e-05, 4.915200000000022e-05, 4.936100000000124e-05, 4.856900000000178e-05, 4.879099999999942e-05, 4.856900000000178e-05, 4.949999999999746e-05, 4.855600000000168e-05, 4.91529999999997e-05, 4.913900000000013e-05, 4.947199999999832e-05, 4.897199999999782e-05, 4.931899999999906e-05, 4.880599999999846e-05, 4.854200000000211e-05, 4.908400000000132e-05, 4.9473000000001266e-05, 4.906999999999828e-05, 4.941699999999952e-05, 4.954199999999964e-05, 4.876399999999975e-05, 4.886100000000074e-05, 4.941600000000004e-05, 4.945800000000222e-05, 4.937499999999734e-05, 4.916599999999979e-05, 4.855499999999874e-05, 4.912500000000056e-05, 4.886100000000074e-05, 4.898600000000086e-05, 4.937500000000081e-05, 4.873600000000061e-05, 4.870800000000147e-05, 4.947199999999832e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.428" endtime="20201117 14:41:21.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.423" endtime="20201117 14:41:21.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.433" endtime="20201117 14:41:21.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.436" endtime="20201117 14:41:21.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.435" endtime="20201117 14:41:21.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.431" endtime="20201117 14:41:21.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.062" endtime="20201117 14:41:21.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.663" endtime="20201117 14:41:21.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.662" endtime="20201117 14:41:21.458"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.460" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.469" endtime="20201117 14:41:21.488"></status>
</kw>
<msg timestamp="20201117 14:41:21.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.467" endtime="20201117 14:41:21.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.489" endtime="20201117 14:41:21.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.492" endtime="20201117 14:41:21.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.464" endtime="20201117 14:41:21.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.462" endtime="20201117 14:41:21.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.501" endtime="20201117 14:41:21.787"></status>
</kw>
<msg timestamp="20201117 14:41:21.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023325375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.499" endtime="20201117 14:41:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023325375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.791" endtime="20201117 14:41:21.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.800" endtime="20201117 14:41:21.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.497" endtime="20201117 14:41:21.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.495" endtime="20201117 14:41:21.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.807" level="INFO">${RESULT} = [{'time': 0.023375083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.970800000000247e-05, 'source_diff': 4.970800000000247e-05}, {'time': 0.023439097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:21.803" endtime="20201117 14:41:21.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.822" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:21.808" endtime="20201117 14:41:21.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.826" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.825" endtime="20201117 14:41:21.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.829" level="INFO">VALUE: [4.970800000000247e-05, 4.983299999999913e-05, 4.966699999999977e-05, 4.979100000000042e-05, 4.969499999999891e-05, 4.972199999999857e-05, 4.998599999999839e-05, 5.027800000000082e-05, 5.0472999999998797e-05, 5.041700000000052e-05, 5.001399999999753e-05, 4.957000000000225e-05, 4.96530000000002e-05, 5.011100000000199e-05, 4.979199999999989e-05, 5.018099999999984e-05, 5.041700000000052e-05, 5.024999999999821e-05, 4.954199999999964e-05, 5.041699999999705e-05, 4.979100000000042e-05, 5.043100000000009e-05, 5.036099999999877e-05, 5.027700000000135e-05, 4.98469999999987e-05, 5.018000000000036e-05, 5.043000000000061e-05, 5.041700000000052e-05, 5.004100000000067e-05, 5.029099999999745e-05, 4.98469999999987e-05, 4.952800000000007e-05, 4.955599999999921e-05, 5.029200000000039e-05, 5.000000000000143e-05, 4.980599999999946e-05, 4.961100000000149e-05, 4.991700000000002e-05, 5.009699999999895e-05, 4.999999999999796e-05, 5.009800000000189e-05, 5.030599999999996e-05, 5.01530000000007e-05, 4.988900000000088e-05, 5.005500000000024e-05, 5.000000000000143e-05, 4.9707999999999e-05, 5.004100000000067e-05, 4.973600000000161e-05, 5.018000000000036e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.827" endtime="20201117 14:41:21.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.823" endtime="20201117 14:41:21.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.833" endtime="20201117 14:41:21.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.836" endtime="20201117 14:41:21.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.835" endtime="20201117 14:41:21.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.831" endtime="20201117 14:41:21.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.461" endtime="20201117 14:41:21.857"></status>
</kw>
<msg timestamp="20201117 14:41:21.857" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.866" endtime="20201117 14:41:21.885"></status>
</kw>
<msg timestamp="20201117 14:41:21.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.864" endtime="20201117 14:41:21.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.887" endtime="20201117 14:41:21.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.890" endtime="20201117 14:41:21.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.861" endtime="20201117 14:41:21.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.859" endtime="20201117 14:41:21.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.900" endtime="20201117 14:41:22.186"></status>
</kw>
<msg timestamp="20201117 14:41:22.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.898" endtime="20201117 14:41:22.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.190" endtime="20201117 14:41:22.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.198" endtime="20201117 14:41:22.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.896" endtime="20201117 14:41:22.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.894" endtime="20201117 14:41:22.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.205" level="INFO">${RESULT} = [{'time': 0.019999153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041699999999705e-05, 'source_diff': 5.041699999999705e-05}, {'time': 0.020064181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.202" endtime="20201117 14:41:22.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:22.206" endtime="20201117 14:41:22.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.224" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.223" endtime="20201117 14:41:22.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.226" level="INFO">VALUE: [5.041699999999705e-05, 5.005599999999971e-05, 4.979199999999989e-05, 4.968099999999934e-05, 5.043000000000061e-05, 4.998599999999839e-05, 4.973600000000161e-05, 4.969399999999943e-05, 5.00270000000011e-05, 4.954100000000017e-05, 4.979100000000042e-05, 5.038900000000138e-05, 5.036099999999877e-05, 4.96530000000002e-05, 4.986099999999827e-05, 4.948599999999789e-05, 4.981999999999903e-05, 4.95279999999966e-05, 4.961100000000149e-05, 5.029200000000039e-05, 4.979100000000042e-05, 5.043100000000009e-05, 4.980599999999946e-05, 5.01530000000007e-05, 5.0236999999998116e-05, 4.990300000000045e-05, 5.030599999999996e-05, 4.955499999999974e-05, 5.009799999999842e-05, 5.044400000000018e-05, 5.030500000000049e-05, 5.048600000000236e-05, 4.998599999999839e-05, 4.966600000000029e-05, 4.987500000000131e-05, 5.024999999999821e-05, 4.994399999999968e-05, 4.96530000000002e-05, 4.9972999999998297e-05, 4.968099999999934e-05, 5.006999999999928e-05, 5.011100000000199e-05, 5.026400000000125e-05, 4.98469999999987e-05, 5.006999999999928e-05, 4.991700000000002e-05, 4.993099999999959e-05, 5.043100000000009e-05, 5.0236999999998116e-05, 4.9722999999998047e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.225" endtime="20201117 14:41:22.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.220" endtime="20201117 14:41:22.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.230" endtime="20201117 14:41:22.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.234" endtime="20201117 14:41:22.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.232" endtime="20201117 14:41:22.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.228" endtime="20201117 14:41:22.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.858" endtime="20201117 14:41:22.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.459" endtime="20201117 14:41:22.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.458" endtime="20201117 14:41:22.255"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.258" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.267" endtime="20201117 14:41:22.286"></status>
</kw>
<msg timestamp="20201117 14:41:22.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.265" endtime="20201117 14:41:22.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.287" endtime="20201117 14:41:22.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.290" endtime="20201117 14:41:22.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.262" endtime="20201117 14:41:22.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.260" endtime="20201117 14:41:22.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.299" endtime="20201117 14:41:22.585"></status>
</kw>
<msg timestamp="20201117 14:41:22.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023842472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.298" endtime="20201117 14:41:22.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023842472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.590" endtime="20201117 14:41:22.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.598" endtime="20201117 14:41:22.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.295" endtime="20201117 14:41:22.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.293" endtime="20201117 14:41:22.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.605" level="INFO">${RESULT} = [{'time': 0.023893292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082000000000003e-05, 'source_diff': 5.082000000000003e-05}, {'time': 0.023960292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.602" endtime="20201117 14:41:22.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.619" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:22.606" endtime="20201117 14:41:22.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.624" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.623" endtime="20201117 14:41:22.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.627" level="INFO">VALUE: [5.082000000000003e-05, 5.098599999999939e-05, 5.104200000000114e-05, 5.138900000000238e-05, 5.124999999999921e-05, 5.126399999999878e-05, 5.088900000000188e-05, 5.126399999999878e-05, 5.1401999999999004e-05, 5.1429999999998144e-05, 5.124999999999921e-05, 5.144400000000118e-05, 5.136099999999977e-05, 5.134699999999673e-05, 5.12080000000005e-05, 5.0986999999998867e-05, 5.077800000000132e-05, 5.137499999999934e-05, 5.143099999999762e-05, 5.105600000000071e-05, 5.118100000000084e-05, 5.099999999999896e-05, 5.11530000000017e-05, 5.0708e-05, 5.06530000000012e-05, 5.105600000000071e-05, 5.133300000000063e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.107000000000028e-05, 5.068000000000086e-05, 5.141700000000152e-05, 5.131899999999759e-05, 5.105500000000124e-05, 5.1165999999998324e-05, 5.115299999999823e-05, 5.106900000000081e-05, 5.11669999999978e-05, 5.109700000000342e-05, 5.143100000000109e-05, 5.093100000000059e-05, 5.066700000000077e-05, 5.079200000000089e-05, 5.143099999999762e-05, 5.137499999999934e-05, 5.061099999999902e-05, 5.1237000000002586e-05, 5.066600000000129e-05, 5.148599999999989e-05, 5.066700000000077e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.625" endtime="20201117 14:41:22.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.620" endtime="20201117 14:41:22.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.630" endtime="20201117 14:41:22.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.634" endtime="20201117 14:41:22.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.632" endtime="20201117 14:41:22.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.628" endtime="20201117 14:41:22.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.258" endtime="20201117 14:41:22.655"></status>
</kw>
<msg timestamp="20201117 14:41:22.655" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.663" endtime="20201117 14:41:22.682"></status>
</kw>
<msg timestamp="20201117 14:41:22.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.662" endtime="20201117 14:41:22.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.684" endtime="20201117 14:41:22.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.686" endtime="20201117 14:41:22.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.659" endtime="20201117 14:41:22.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.657" endtime="20201117 14:41:22.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.697" endtime="20201117 14:41:22.982"></status>
</kw>
<msg timestamp="20201117 14:41:22.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.695" endtime="20201117 14:41:22.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.987" endtime="20201117 14:41:22.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.995" endtime="20201117 14:41:22.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.692" endtime="20201117 14:41:22.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.691" endtime="20201117 14:41:22.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.002" level="INFO">${RESULT} = [{'time': 0.019976097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.077800000000132e-05, 'source_diff': 5.077800000000132e-05}, {'time': 0.020041111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.999" endtime="20201117 14:41:23.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.016" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:23.003" endtime="20201117 14:41:23.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.021" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.020" endtime="20201117 14:41:23.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.024" level="INFO">VALUE: [5.077800000000132e-05, 5.087499999999884e-05, 5.093000000000111e-05, 5.090299999999798e-05, 5.131899999999759e-05, 5.097199999999982e-05, 5.062499999999859e-05, 5.144500000000066e-05, 5.145800000000075e-05, 5.069499999999991e-05, 5.063899999999816e-05, 5.136199999999924e-05, 5.111099999999952e-05, 5.127800000000182e-05, 5.105599999999724e-05, 5.076300000000228e-05, 5.1165999999998324e-05, 5.062500000000206e-05, 5.108299999999691e-05, 5.123599999999964e-05, 5.083300000000013e-05, 5.109699999999995e-05, 5.13470000000002e-05, 5.091700000000102e-05, 5.108300000000038e-05, 5.087500000000231e-05, 5.076400000000175e-05, 5.149999999999946e-05, 5.136099999999977e-05, 5.063900000000163e-05, 5.151399999999903e-05, 5.130600000000096e-05, 5.059699999999945e-05, 5.094500000000016e-05, 5.08339999999996e-05, 5.116700000000127e-05, 5.059699999999945e-05, 5.106900000000081e-05, 5.068000000000086e-05, 5.068000000000086e-05, 5.056900000000031e-05, 5.074999999999871e-05, 5.148599999999989e-05, 5.056900000000031e-05, 5.143000000000161e-05, 5.079199999999742e-05, 5.1165999999998324e-05, 5.087499999999884e-05, 5.061100000000249e-05, 5.13470000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.022" endtime="20201117 14:41:23.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.017" endtime="20201117 14:41:23.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.027" endtime="20201117 14:41:23.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.030" endtime="20201117 14:41:23.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.029" endtime="20201117 14:41:23.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.025" endtime="20201117 14:41:23.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.656" endtime="20201117 14:41:23.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.256" endtime="20201117 14:41:23.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.255" endtime="20201117 14:41:23.052"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.054" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.063" endtime="20201117 14:41:23.082"></status>
</kw>
<msg timestamp="20201117 14:41:23.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.061" endtime="20201117 14:41:23.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.084" endtime="20201117 14:41:23.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.087" endtime="20201117 14:41:23.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.058" endtime="20201117 14:41:23.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.056" endtime="20201117 14:41:23.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.096" endtime="20201117 14:41:23.383"></status>
</kw>
<msg timestamp="20201117 14:41:23.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023325986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.094" endtime="20201117 14:41:23.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023325986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.387" endtime="20201117 14:41:23.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.396" endtime="20201117 14:41:23.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.092" endtime="20201117 14:41:23.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.090" endtime="20201117 14:41:23.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.403" level="INFO">${RESULT} = [{'time': 0.023378028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.204199999999867e-05, 'source_diff': 5.204199999999867e-05}, {'time': 0.023445056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.400" endtime="20201117 14:41:23.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.418" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:23.404" endtime="20201117 14:41:23.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.423" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.422" endtime="20201117 14:41:23.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.425" level="INFO">VALUE: [5.204199999999867e-05, 5.155599999999774e-05, 5.223600000000064e-05, 5.179099999999895e-05, 5.186199999999974e-05, 5.218099999999837e-05, 5.208300000000138e-05, 5.230500000000249e-05, 5.1985999999996924e-05, 5.230499999999902e-05, 5.174999999999971e-05, 5.161100000000002e-05, 5.238899999999991e-05, 5.230500000000249e-05, 5.237500000000034e-05, 5.168100000000134e-05, 5.222300000000055e-05, 5.21530000000027e-05, 5.159700000000045e-05, 5.182000000000103e-05, 5.186100000000027e-05, 5.230600000000196e-05, 5.201399999999953e-05, 5.226399999999978e-05, 5.219500000000141e-05, 5.162499999999959e-05, 5.154200000000164e-05, 5.169400000000143e-05, 5.222200000000107e-05, 5.209800000000042e-05, 5.208300000000138e-05, 5.149999999999946e-05, 5.186100000000027e-05, 5.22080000000015e-05, 5.225000000000021e-05, 5.162499999999959e-05, 5.190300000000245e-05, 5.213899999999966e-05, 5.247200000000132e-05, 5.169500000000091e-05, 5.190299999999898e-05, 5.209700000000095e-05, 5.208300000000138e-05, 5.173600000000014e-05, 5.204199999999867e-05, 5.152800000000207e-05, 5.169500000000091e-05, 5.173600000000014e-05, 5.159799999999992e-05, 5.179099999999895e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.424" endtime="20201117 14:41:23.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.419" endtime="20201117 14:41:23.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.429" endtime="20201117 14:41:23.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.432" endtime="20201117 14:41:23.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.431" endtime="20201117 14:41:23.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.427" endtime="20201117 14:41:23.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.055" endtime="20201117 14:41:23.453"></status>
</kw>
<msg timestamp="20201117 14:41:23.453" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.462" endtime="20201117 14:41:23.480"></status>
</kw>
<msg timestamp="20201117 14:41:23.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.460" endtime="20201117 14:41:23.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.482" endtime="20201117 14:41:23.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.484" endtime="20201117 14:41:23.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.458" endtime="20201117 14:41:23.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.456" endtime="20201117 14:41:23.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.495" endtime="20201117 14:41:23.781"></status>
</kw>
<msg timestamp="20201117 14:41:23.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.493" endtime="20201117 14:41:23.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.785" endtime="20201117 14:41:23.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.794" endtime="20201117 14:41:23.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.490" endtime="20201117 14:41:23.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.489" endtime="20201117 14:41:23.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.801" level="INFO">${RESULT} = [{'time': 0.019880778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.211100000000052e-05, 'source_diff': 5.211100000000052e-05}, {'time': 0.019945778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.798" endtime="20201117 14:41:23.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.815" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:23.802" endtime="20201117 14:41:23.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.820" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.819" endtime="20201117 14:41:23.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.822" level="INFO">VALUE: [5.211100000000052e-05, 5.244500000000166e-05, 5.179200000000189e-05, 5.223600000000064e-05, 5.222200000000107e-05, 5.184800000000017e-05, 5.193100000000159e-05, 5.16669999999983e-05, 5.206900000000181e-05, 5.165299999999873e-05, 5.226399999999978e-05, 5.2415999999999574e-05, 5.199999999999996e-05, 5.179099999999895e-05, 5.218000000000236e-05, 5.201399999999953e-05, 5.208299999999791e-05, 5.250000000000046e-05, 5.193099999999812e-05, 5.2499999999996994e-05, 5.169499999999744e-05, 5.215299999999923e-05, 5.225000000000021e-05, 5.186100000000027e-05, 5.169499999999744e-05, 5.206899999999834e-05, 5.161100000000002e-05, 5.216700000000227e-05, 5.168099999999787e-05, 5.157000000000078e-05, 5.204200000000214e-05, 5.186100000000027e-05, 5.186100000000027e-05, 5.202699999999963e-05, 5.1915999999999074e-05, 5.181899999999809e-05, 5.225000000000021e-05, 5.240299999999948e-05, 5.222200000000107e-05, 5.204199999999867e-05, 5.229200000000239e-05, 5.244499999999819e-05, 5.243100000000209e-05, 5.186100000000027e-05, 5.186100000000027e-05, 5.188899999999941e-05, 5.158400000000035e-05, 5.211100000000052e-05, 5.1929999999998644e-05, 5.163899999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.821" endtime="20201117 14:41:23.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.816" endtime="20201117 14:41:23.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.826" endtime="20201117 14:41:23.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.829" endtime="20201117 14:41:23.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.828" endtime="20201117 14:41:23.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.824" endtime="20201117 14:41:23.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.454" endtime="20201117 14:41:23.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.053" endtime="20201117 14:41:23.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.052" endtime="20201117 14:41:23.850"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.853" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.861" endtime="20201117 14:41:23.880"></status>
</kw>
<msg timestamp="20201117 14:41:23.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.860" endtime="20201117 14:41:23.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.882" endtime="20201117 14:41:23.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.885" endtime="20201117 14:41:23.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.857" endtime="20201117 14:41:23.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.855" endtime="20201117 14:41:23.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.895" endtime="20201117 14:41:24.180"></status>
</kw>
<msg timestamp="20201117 14:41:24.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.893" endtime="20201117 14:41:24.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.185" endtime="20201117 14:41:24.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.193" endtime="20201117 14:41:24.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.890" endtime="20201117 14:41:24.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.888" endtime="20201117 14:41:24.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.200" level="INFO">${RESULT} = [{'time': 0.022631292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.270900000000148e-05, 'source_diff': 5.270900000000148e-05}, {'time': 0.022700292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:24.197" endtime="20201117 14:41:24.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.214" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:24.201" endtime="20201117 14:41:24.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.219" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.218" endtime="20201117 14:41:24.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.222" level="INFO">VALUE: [5.270900000000148e-05, 5.343099999999962e-05, 5.305599999999924e-05, 5.34730000000018e-05, 5.275000000000071e-05, 5.256999999999831e-05, 5.25409999999997e-05, 5.331899999999959e-05, 5.3471999999998854e-05, 5.351400000000103e-05, 5.3443999999999714e-05, 5.313900000000066e-05, 5.294400000000268e-05, 5.329199999999992e-05, 5.313900000000066e-05, 5.26669999999993e-05, 5.279200000000289e-05, 5.338900000000091e-05, 5.275000000000071e-05, 5.290299999999998e-05, 5.2999999999997494e-05, 5.325000000000121e-05, 5.322300000000155e-05, 5.261200000000049e-05, 5.337499999999787e-05, 5.279200000000289e-05, 5.325000000000121e-05, 5.350000000000146e-05, 5.279099999999995e-05, 5.263900000000016e-05, 5.273600000000114e-05, 5.337500000000134e-05, 5.256900000000231e-05, 5.259700000000145e-05, 5.2665999999999824e-05, 5.2763999999996813e-05, 5.28470000000017e-05, 5.290299999999998e-05, 5.311100000000152e-05, 5.291699999999955e-05, 5.279199999999942e-05, 5.309700000000195e-05, 5.266700000000277e-05, 5.283399999999813e-05, 5.312500000000109e-05, 5.265299999999973e-05, 5.273600000000114e-05, 5.343099999999962e-05, 5.275000000000071e-05, 5.301300000000106e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.220" endtime="20201117 14:41:24.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.215" endtime="20201117 14:41:24.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.225" endtime="20201117 14:41:24.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.228" endtime="20201117 14:41:24.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.227" endtime="20201117 14:41:24.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.223" endtime="20201117 14:41:24.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.854" endtime="20201117 14:41:24.249"></status>
</kw>
<msg timestamp="20201117 14:41:24.249" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.258" endtime="20201117 14:41:24.277"></status>
</kw>
<msg timestamp="20201117 14:41:24.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.256" endtime="20201117 14:41:24.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.278" endtime="20201117 14:41:24.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.281" endtime="20201117 14:41:24.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.254" endtime="20201117 14:41:24.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.252" endtime="20201117 14:41:24.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.293" endtime="20201117 14:41:24.578"></status>
</kw>
<msg timestamp="20201117 14:41:24.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.291" endtime="20201117 14:41:24.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.583" endtime="20201117 14:41:24.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.591" endtime="20201117 14:41:24.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.288" endtime="20201117 14:41:24.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.286" endtime="20201117 14:41:24.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.598" level="INFO">${RESULT} = [{'time': 0.019912722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.301400000000053e-05, 'source_diff': 5.301400000000053e-05}, {'time': 0.019981694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:24.595" endtime="20201117 14:41:24.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:24.599" endtime="20201117 14:41:24.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.617" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.616" endtime="20201117 14:41:24.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.619" level="INFO">VALUE: [5.301400000000053e-05, 5.302700000000063e-05, 5.31669999999998e-05, 5.312499999999762e-05, 5.248600000000089e-05, 5.29730000000013e-05, 5.276300000000081e-05, 5.270899999999801e-05, 5.30410000000002e-05, 5.312500000000109e-05, 5.250000000000046e-05, 5.28609999999978e-05, 5.350000000000146e-05, 5.336100000000177e-05, 5.2943999999999214e-05, 5.312500000000109e-05, 5.31669999999998e-05, 5.33470000000022e-05, 5.313900000000066e-05, 5.2749999999997244e-05, 5.325000000000121e-05, 5.28340000000016e-05, 5.341700000000005e-05, 5.336100000000177e-05, 5.286100000000127e-05, 5.275000000000071e-05, 5.28340000000016e-05, 5.2680000000002863e-05, 5.306900000000281e-05, 5.255499999999927e-05, 5.297200000000182e-05, 5.269400000000243e-05, 5.30410000000002e-05, 5.259700000000145e-05, 5.275000000000071e-05, 5.3443999999999714e-05, 5.2971999999998354e-05, 5.279199999999942e-05, 5.331899999999959e-05, 5.3221999999998604e-05, 5.341700000000005e-05, 5.304199999999967e-05, 5.309700000000195e-05, 5.337500000000134e-05, 5.31669999999998e-05, 5.255600000000221e-05, 5.311100000000152e-05, 5.329199999999992e-05, 5.276299999999734e-05, 5.279199999999942e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.618" endtime="20201117 14:41:24.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.613" endtime="20201117 14:41:24.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.622" endtime="20201117 14:41:24.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.626" endtime="20201117 14:41:24.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.624" endtime="20201117 14:41:24.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.621" endtime="20201117 14:41:24.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.250" endtime="20201117 14:41:24.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.852" endtime="20201117 14:41:24.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.851" endtime="20201117 14:41:24.647"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.650" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.659" endtime="20201117 14:41:24.678"></status>
</kw>
<msg timestamp="20201117 14:41:24.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.658" endtime="20201117 14:41:24.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.680" endtime="20201117 14:41:24.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.683" endtime="20201117 14:41:24.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.654" endtime="20201117 14:41:24.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.652" endtime="20201117 14:41:24.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.692" endtime="20201117 14:41:24.979"></status>
</kw>
<msg timestamp="20201117 14:41:24.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.690" endtime="20201117 14:41:24.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.983" endtime="20201117 14:41:24.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.992" endtime="20201117 14:41:24.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.688" endtime="20201117 14:41:24.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.686" endtime="20201117 14:41:24.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.999" level="INFO">${RESULT} = [{'time': 0.024285764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.440300000000148e-05, 'source_diff': 5.440300000000148e-05}, {'time': 0.02435575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:24.995" endtime="20201117 14:41:24.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:25.000" endtime="20201117 14:41:25.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.019" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.018" endtime="20201117 14:41:25.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.021" level="INFO">VALUE: [5.440300000000148e-05, 5.437499999999887e-05, 5.369499999999944e-05, 5.430600000000049e-05, 5.444500000000019e-05, 5.409800000000242e-05, 5.380599999999999e-05, 5.380599999999999e-05, 5.409799999999895e-05, 5.406900000000034e-05, 5.38609999999988e-05, 5.3693999999999964e-05, 5.352700000000113e-05, 5.4401999999998535e-05, 5.4458000000000284e-05, 5.3680000000000394e-05, 5.425000000000221e-05, 5.3680000000000394e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3708000000003e-05, 5.4277999999997883e-05, 5.43609999999993e-05, 5.356999999999931e-05, 5.391700000000055e-05, 5.429200000000092e-05, 5.406999999999981e-05, 5.420899999999951e-05, 5.40419999999972e-05, 5.4499999999998994e-05, 5.376300000000181e-05, 5.388899999999794e-05, 5.437499999999887e-05, 5.430500000000102e-05, 5.4499999999998994e-05, 5.3916000000001074e-05, 5.380500000000052e-05, 5.3749999999998244e-05, 5.4221999999999604e-05, 5.3680000000000394e-05, 5.380599999999999e-05, 5.380599999999999e-05, 5.362499999999812e-05, 5.356999999999931e-05, 5.35280000000006e-05, 5.440299999999801e-05, 5.40419999999972e-05, 5.441699999999758e-05, 5.40280000000011e-05, 5.437499999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.020" endtime="20201117 14:41:25.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.015" endtime="20201117 14:41:25.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.025" endtime="20201117 14:41:25.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.028" endtime="20201117 14:41:25.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.026" endtime="20201117 14:41:25.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.023" endtime="20201117 14:41:25.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.651" endtime="20201117 14:41:25.049"></status>
</kw>
<msg timestamp="20201117 14:41:25.050" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.058" endtime="20201117 14:41:25.076"></status>
</kw>
<msg timestamp="20201117 14:41:25.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.057" endtime="20201117 14:41:25.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.078" endtime="20201117 14:41:25.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.080" endtime="20201117 14:41:25.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.054" endtime="20201117 14:41:25.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.052" endtime="20201117 14:41:25.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.091" endtime="20201117 14:41:25.378"></status>
</kw>
<msg timestamp="20201117 14:41:25.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020308014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020361986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.089" endtime="20201117 14:41:25.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020308014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020361986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.383" endtime="20201117 14:41:25.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.391" endtime="20201117 14:41:25.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.086" endtime="20201117 14:41:25.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.085" endtime="20201117 14:41:25.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.398" level="INFO">${RESULT} = [{'time': 0.020361986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3971999999999354e-05, 'source_diff': 5.3971999999999354e-05}, {'time': 0.020432958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:25.395" endtime="20201117 14:41:25.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:25.399" endtime="20201117 14:41:25.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.417" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.416" endtime="20201117 14:41:25.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.419" level="INFO">VALUE: [5.3971999999999354e-05, 5.4485999999999424e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.409699999999948e-05, 5.4444000000000714e-05, 5.40280000000011e-05, 5.4235999999999174e-05, 5.401400000000153e-05, 5.43479999999992e-05, 5.3749999999998244e-05, 5.382000000000303e-05, 5.3735999999998674e-05, 5.405600000000024e-05, 5.36670000000003e-05, 5.387499999999837e-05, 5.368099999999987e-05, 5.363900000000116e-05, 5.429099999999798e-05, 5.40280000000011e-05, 5.4166000000001324e-05, 5.4485999999999424e-05, 5.356899999999984e-05, 5.3916000000001074e-05, 5.4249999999998744e-05, 5.441700000000105e-05, 5.4499999999998994e-05, 5.361099999999855e-05, 5.36670000000003e-05, 5.412500000000209e-05, 5.43609999999993e-05, 5.362499999999812e-05, 5.377800000000085e-05, 5.368099999999987e-05, 5.43609999999993e-05, 5.40419999999972e-05, 5.351400000000103e-05, 5.436200000000224e-05, 5.387499999999837e-05, 5.3749999999998244e-05, 5.437499999999887e-05, 5.380500000000052e-05, 5.4401999999998535e-05, 5.3666000000000824e-05, 5.406900000000034e-05, 5.381900000000009e-05, 5.3707999999999534e-05, 5.38609999999988e-05, 5.3735999999998674e-05, 5.441699999999758e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.418" endtime="20201117 14:41:25.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.413" endtime="20201117 14:41:25.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.427" endtime="20201117 14:41:25.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.431" endtime="20201117 14:41:25.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.429" endtime="20201117 14:41:25.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.421" endtime="20201117 14:41:25.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.050" endtime="20201117 14:41:25.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.648" endtime="20201117 14:41:25.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.648" endtime="20201117 14:41:25.452"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.455" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.463" endtime="20201117 14:41:25.481"></status>
</kw>
<msg timestamp="20201117 14:41:25.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.462" endtime="20201117 14:41:25.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.483" endtime="20201117 14:41:25.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.486" endtime="20201117 14:41:25.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.459" endtime="20201117 14:41:25.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.457" endtime="20201117 14:41:25.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.495" endtime="20201117 14:41:25.782"></status>
</kw>
<msg timestamp="20201117 14:41:25.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.494" endtime="20201117 14:41:25.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.787" endtime="20201117 14:41:25.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.795" endtime="20201117 14:41:25.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.491" endtime="20201117 14:41:25.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.489" endtime="20201117 14:41:25.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.802" level="INFO">${RESULT} = [{'time': 0.022595722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.53610000000003e-05, 'source_diff': 5.53610000000003e-05}, {'time': 0.022665694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:25.799" endtime="20201117 14:41:25.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:25.803" endtime="20201117 14:41:25.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.821" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.820" endtime="20201117 14:41:25.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.823" level="INFO">VALUE: [5.53610000000003e-05, 5.4944000000001214e-05, 5.5430000000002144e-05, 5.4763999999998814e-05, 5.5013999999999064e-05, 5.5513999999999564e-05, 5.505599999999777e-05, 5.468100000000087e-05, 5.5305999999998023e-05, 5.461099999999955e-05, 5.461099999999955e-05, 5.455600000000074e-05, 5.487499999999937e-05, 5.454200000000117e-05, 5.461099999999955e-05, 5.4915999999998605e-05, 5.544499999999772e-05, 5.455600000000074e-05, 5.515299999999876e-05, 5.486200000000274e-05, 5.543099999999815e-05, 5.50410000000022e-05, 5.481899999999762e-05, 5.504099999999873e-05, 5.5236000000000174e-05, 5.533300000000116e-05, 5.482000000000056e-05, 5.4958000000000784e-05, 5.513899999999919e-05, 5.501400000000253e-05, 5.541700000000205e-05, 5.4985999999999924e-05, 5.457000000000031e-05, 5.543100000000162e-05, 5.458300000000041e-05, 5.5249999999999744e-05, 5.5499999999999994e-05, 5.456900000000084e-05, 5.480600000000099e-05, 5.536199999999977e-05, 5.536199999999977e-05, 5.5013999999999064e-05, 5.506899999999787e-05, 5.5499999999999994e-05, 5.5027999999998634e-05, 5.538899999999944e-05, 5.4735999999999674e-05, 5.45280000000016e-05, 5.512499999999962e-05, 5.490299999999851e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.822" endtime="20201117 14:41:25.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.817" endtime="20201117 14:41:25.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.827" endtime="20201117 14:41:25.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.831" endtime="20201117 14:41:25.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.829" endtime="20201117 14:41:25.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.825" endtime="20201117 14:41:25.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.455" endtime="20201117 14:41:25.851"></status>
</kw>
<msg timestamp="20201117 14:41:25.852" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.860" endtime="20201117 14:41:25.879"></status>
</kw>
<msg timestamp="20201117 14:41:25.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.859" endtime="20201117 14:41:25.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.881" endtime="20201117 14:41:25.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.883" endtime="20201117 14:41:25.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.856" endtime="20201117 14:41:25.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.854" endtime="20201117 14:41:25.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.894" endtime="20201117 14:41:26.179"></status>
</kw>
<msg timestamp="20201117 14:41:26.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.892" endtime="20201117 14:41:26.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.184" endtime="20201117 14:41:26.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.192" endtime="20201117 14:41:26.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.890" endtime="20201117 14:41:26.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.888" endtime="20201117 14:41:26.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.199" level="INFO">${RESULT} = [{'time': 0.020021028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.459699999999998e-05, 'source_diff': 5.459699999999998e-05}, {'time': 0.020091056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:26.196" endtime="20201117 14:41:26.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:26.200" endtime="20201117 14:41:26.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.218" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.217" endtime="20201117 14:41:26.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.220" level="INFO">VALUE: [5.459699999999998e-05, 5.538899999999944e-05, 5.536199999999977e-05, 5.551300000000009e-05, 5.459699999999998e-05, 5.454099999999823e-05, 5.53610000000003e-05, 5.456900000000084e-05, 5.481900000000109e-05, 5.5444000000001714e-05, 5.463900000000216e-05, 5.4527999999998134e-05, 5.518100000000137e-05, 5.5430000000002144e-05, 5.5305999999998023e-05, 5.5249999999999744e-05, 5.48609999999998e-05, 5.530600000000149e-05, 5.4749999999999244e-05, 5.505599999999777e-05, 5.5486000000000424e-05, 5.48479999999997e-05, 5.497299999999983e-05, 5.537499999999987e-05, 5.5208000000001034e-05, 5.4527999999998134e-05, 5.5472000000000854e-05, 5.455500000000127e-05, 5.45410000000017e-05, 5.53610000000003e-05, 5.45410000000017e-05, 5.461099999999955e-05, 5.456899999999737e-05, 5.48609999999998e-05, 5.531899999999812e-05, 5.4722000000000104e-05, 5.476299999999934e-05, 5.515299999999876e-05, 5.537499999999987e-05, 5.504099999999873e-05, 5.4749999999999244e-05, 5.4485999999999424e-05, 5.537499999999987e-05, 5.473700000000262e-05, 5.4999999999999494e-05, 5.5263999999999314e-05, 5.527800000000235e-05, 5.487500000000284e-05, 5.4749999999999244e-05, 5.4943999999997745e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.219" endtime="20201117 14:41:26.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.214" endtime="20201117 14:41:26.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.224" endtime="20201117 14:41:26.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.228" endtime="20201117 14:41:26.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.226" endtime="20201117 14:41:26.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.223" endtime="20201117 14:41:26.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.852" endtime="20201117 14:41:26.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.454" endtime="20201117 14:41:26.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.453" endtime="20201117 14:41:26.249"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.251" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.260" endtime="20201117 14:41:26.279"></status>
</kw>
<msg timestamp="20201117 14:41:26.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.258" endtime="20201117 14:41:26.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.281" endtime="20201117 14:41:26.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.284" endtime="20201117 14:41:26.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.256" endtime="20201117 14:41:26.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.254" endtime="20201117 14:41:26.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.293" endtime="20201117 14:41:26.581"></status>
</kw>
<msg timestamp="20201117 14:41:26.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.292" endtime="20201117 14:41:26.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.585" endtime="20201117 14:41:26.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.593" endtime="20201117 14:41:26.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.289" endtime="20201117 14:41:26.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.287" endtime="20201117 14:41:26.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.600" level="INFO">${RESULT} = [{'time': 0.023436653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.63610000000013e-05, 'source_diff': 5.63610000000013e-05}, {'time': 0.023506653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:26.597" endtime="20201117 14:41:26.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.615" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:26.601" endtime="20201117 14:41:26.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.620" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.619" endtime="20201117 14:41:26.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.623" level="INFO">VALUE: [5.63610000000013e-05, 5.6055999999998773e-05, 5.6305999999999023e-05, 5.588899999999994e-05, 5.58480000000007e-05, 5.5957999999998315e-05, 5.58480000000007e-05, 5.580499999999905e-05, 5.6429999999999675e-05, 5.579099999999948e-05, 5.634700000000173e-05, 5.6429999999999675e-05, 5.58480000000007e-05, 5.580499999999905e-05, 5.588899999999994e-05, 5.6264000000000314e-05, 5.5805999999998523e-05, 5.591699999999908e-05, 5.5499999999999994e-05, 5.593100000000212e-05, 5.580600000000199e-05, 5.643100000000262e-05, 5.6236000000001174e-05, 5.5888000000000465e-05, 5.587500000000037e-05, 5.5708000000001534e-05, 5.604099999999973e-05, 5.562500000000012e-05, 5.561100000000055e-05, 5.629099999999998e-05, 5.637500000000087e-05, 5.606899999999887e-05, 5.5736000000000674e-05, 5.580500000000252e-05, 5.611100000000105e-05, 5.5986000000000924e-05, 5.565299999999926e-05, 5.609799999999748e-05, 5.565299999999926e-05, 5.561100000000055e-05, 5.5708000000001534e-05, 5.5750000000000244e-05, 5.6055999999998773e-05, 5.612499999999715e-05, 5.597300000000083e-05, 5.5736000000000674e-05, 5.6014000000000064e-05, 5.633300000000216e-05, 5.640300000000001e-05, 5.6402000000000535e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.621" endtime="20201117 14:41:26.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.616" endtime="20201117 14:41:26.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.626" endtime="20201117 14:41:26.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.630" endtime="20201117 14:41:26.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.628" endtime="20201117 14:41:26.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.625" endtime="20201117 14:41:26.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.252" endtime="20201117 14:41:26.652"></status>
</kw>
<msg timestamp="20201117 14:41:26.652" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.661" endtime="20201117 14:41:26.681"></status>
</kw>
<msg timestamp="20201117 14:41:26.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.659" endtime="20201117 14:41:26.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.683" endtime="20201117 14:41:26.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.685" endtime="20201117 14:41:26.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.657" endtime="20201117 14:41:26.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.655" endtime="20201117 14:41:26.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.696" endtime="20201117 14:41:26.982"></status>
</kw>
<msg timestamp="20201117 14:41:26.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021264986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.694" endtime="20201117 14:41:26.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021264986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.987" endtime="20201117 14:41:26.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.995" endtime="20201117 14:41:26.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.691" endtime="20201117 14:41:26.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.690" endtime="20201117 14:41:26.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.002" level="INFO">${RESULT} = [{'time': 0.021320944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5958000000001784e-05, 'source_diff': 5.5958000000001784e-05}, {'time': 0.021389944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:26.999" endtime="20201117 14:41:27.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.016" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:27.003" endtime="20201117 14:41:27.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.021" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.020" endtime="20201117 14:41:27.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.024" level="INFO">VALUE: [5.5958000000001784e-05, 5.5651999999999785e-05, 5.633399999999816e-05, 5.5915999999999605e-05, 5.565299999999926e-05, 5.629099999999998e-05, 5.5750000000000244e-05, 5.5986000000000924e-05, 5.563899999999969e-05, 5.5541999999998704e-05, 5.611100000000105e-05, 5.6236000000001174e-05, 5.594499999999822e-05, 5.5486000000000424e-05, 5.638900000000044e-05, 5.566699999999883e-05, 5.607000000000181e-05, 5.594500000000169e-05, 5.580600000000199e-05, 5.561100000000055e-05, 5.613900000000019e-05, 5.591699999999908e-05, 5.629200000000292e-05, 5.593100000000212e-05, 5.6485999999997955e-05, 5.6443999999999245e-05, 5.629099999999998e-05, 5.60549999999993e-05, 5.604099999999973e-05, 5.5736000000000674e-05, 5.6207999999998565e-05, 5.609700000000148e-05, 5.561100000000055e-05, 5.554200000000217e-05, 5.63610000000013e-05, 5.6500000000000994e-05, 5.632000000000206e-05, 5.644499999999872e-05, 5.561100000000055e-05, 5.566699999999883e-05, 5.563899999999969e-05, 5.6500000000000994e-05, 5.605500000000277e-05, 5.604099999999973e-05, 5.579099999999948e-05, 5.6429999999999675e-05, 5.6000000000000494e-05, 5.580499999999905e-05, 5.6471999999998385e-05, 5.556899999999837e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.022" endtime="20201117 14:41:27.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.017" endtime="20201117 14:41:27.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.027" endtime="20201117 14:41:27.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.030" endtime="20201117 14:41:27.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.029" endtime="20201117 14:41:27.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.025" endtime="20201117 14:41:27.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.653" endtime="20201117 14:41:27.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.250" endtime="20201117 14:41:27.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.249" endtime="20201117 14:41:27.052"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.054" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.063" endtime="20201117 14:41:27.083"></status>
</kw>
<msg timestamp="20201117 14:41:27.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.061" endtime="20201117 14:41:27.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.084" endtime="20201117 14:41:27.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.087" endtime="20201117 14:41:27.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.058" endtime="20201117 14:41:27.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.056" endtime="20201117 14:41:27.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.097" endtime="20201117 14:41:27.381"></status>
</kw>
<msg timestamp="20201117 14:41:27.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.095" endtime="20201117 14:41:27.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.386" endtime="20201117 14:41:27.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.394" endtime="20201117 14:41:27.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.092" endtime="20201117 14:41:27.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.090" endtime="20201117 14:41:27.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.402" level="INFO">${RESULT} = [{'time': 0.022666708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.713900000000119e-05, 'source_diff': 5.713900000000119e-05}, {'time': 0.022736667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:27.398" endtime="20201117 14:41:27.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:27.403" endtime="20201117 14:41:27.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.420" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.419" endtime="20201117 14:41:27.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.423" level="INFO">VALUE: [5.713900000000119e-05, 5.665300000000026e-05, 5.708299999999944e-05, 5.6764000000000814e-05, 5.7013999999997594e-05, 5.666699999999983e-05, 5.6791999999999954e-05, 5.7069999999999343e-05, 5.727700000000141e-05, 5.713899999999772e-05, 5.7457999999999815e-05, 5.6929999999996705e-05, 5.6749999999997774e-05, 5.6930000000000175e-05, 5.6679999999999925e-05, 5.6679999999999925e-05, 5.656899999999937e-05, 5.66809999999994e-05, 5.733299999999969e-05, 5.686099999999833e-05, 5.712500000000162e-05, 5.686099999999833e-05, 5.6958000000002784e-05, 5.687500000000137e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.7193999999999995e-05, 5.743100000000015e-05, 5.743100000000015e-05, 5.6693999999999495e-05, 5.7013999999997594e-05, 5.708299999999944e-05, 5.708299999999944e-05, 5.731900000000012e-05, 5.6915999999997136e-05, 5.662500000000112e-05, 5.683400000000213e-05, 5.7250000000001744e-05, 5.734699999999926e-05, 5.7264000000001314e-05, 5.6736000000001674e-05, 5.736099999999883e-05, 5.7236000000002174e-05, 5.6750000000001244e-05, 5.7250000000001744e-05, 5.697300000000183e-05, 5.691700000000008e-05, 5.670899999999854e-05, 5.698699999999793e-05, 5.7193999999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.422" endtime="20201117 14:41:27.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.417" endtime="20201117 14:41:27.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.426" endtime="20201117 14:41:27.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.430" endtime="20201117 14:41:27.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.428" endtime="20201117 14:41:27.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.425" endtime="20201117 14:41:27.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.055" endtime="20201117 14:41:27.451"></status>
</kw>
<msg timestamp="20201117 14:41:27.451" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.459" endtime="20201117 14:41:27.478"></status>
</kw>
<msg timestamp="20201117 14:41:27.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.458" endtime="20201117 14:41:27.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.480" endtime="20201117 14:41:27.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.482" endtime="20201117 14:41:27.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.455" endtime="20201117 14:41:27.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.453" endtime="20201117 14:41:27.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.494" endtime="20201117 14:41:27.779"></status>
</kw>
<msg timestamp="20201117 14:41:27.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.491" endtime="20201117 14:41:27.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.784" endtime="20201117 14:41:27.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.793" endtime="20201117 14:41:27.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.488" endtime="20201117 14:41:27.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.486" endtime="20201117 14:41:27.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.800" level="INFO">${RESULT} = [{'time': 0.019876375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7208000000003034e-05, 'source_diff': 5.7208000000003034e-05}, {'time': 0.019947403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:27.796" endtime="20201117 14:41:27.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:27.801" endtime="20201117 14:41:27.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.818" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.817" endtime="20201117 14:41:27.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.821" level="INFO">VALUE: [5.7208000000003034e-05, 5.7277999999997414e-05, 5.734699999999926e-05, 5.672299999999811e-05, 5.669499999999897e-05, 5.666699999999983e-05, 5.662500000000112e-05, 5.7292000000000454e-05, 5.68610000000018e-05, 5.7471999999999385e-05, 5.711100000000205e-05, 5.6666000000000355e-05, 5.680500000000005e-05, 5.712499999999815e-05, 5.7416000000001105e-05, 5.659700000000198e-05, 5.736099999999883e-05, 5.7235999999998705e-05, 5.7236000000002174e-05, 5.6764000000000814e-05, 5.7055999999999774e-05, 5.7485999999998955e-05, 5.743100000000015e-05, 5.666699999999983e-05, 5.716700000000033e-05, 5.687500000000137e-05, 5.744499999999972e-05, 5.716700000000033e-05, 5.7250000000001744e-05, 5.7249999999998274e-05, 5.7236000000002174e-05, 5.7221999999999135e-05, 5.6679999999999925e-05, 5.658300000000241e-05, 5.7014000000001064e-05, 5.7485999999998955e-05, 5.6721999999998635e-05, 5.701299999999812e-05, 5.6514000000000564e-05, 5.741700000000058e-05, 5.734699999999926e-05, 5.736099999999883e-05, 5.6985999999998455e-05, 5.7319999999999593e-05, 5.730500000000055e-05, 5.744499999999972e-05, 5.7014000000001064e-05, 5.6555999999999274e-05, 5.6971999999998885e-05, 5.7278000000000884e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.819" endtime="20201117 14:41:27.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.814" endtime="20201117 14:41:27.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.824" endtime="20201117 14:41:27.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.828" endtime="20201117 14:41:27.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.826" endtime="20201117 14:41:27.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.822" endtime="20201117 14:41:27.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.452" endtime="20201117 14:41:27.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.053" endtime="20201117 14:41:27.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.052" endtime="20201117 14:41:27.849"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.851" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.860" endtime="20201117 14:41:27.880"></status>
</kw>
<msg timestamp="20201117 14:41:27.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.858" endtime="20201117 14:41:27.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.881" endtime="20201117 14:41:27.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.884" endtime="20201117 14:41:27.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.855" endtime="20201117 14:41:27.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.853" endtime="20201117 14:41:27.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.894" endtime="20201117 14:41:28.180"></status>
</kw>
<msg timestamp="20201117 14:41:28.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.892" endtime="20201117 14:41:28.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.184" endtime="20201117 14:41:28.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.193" endtime="20201117 14:41:28.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.889" endtime="20201117 14:41:28.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.887" endtime="20201117 14:41:28.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.200" level="INFO">${RESULT} = [{'time': 0.023325986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.809700000000001e-05, 'source_diff': 5.809700000000001e-05}, {'time': 0.023398986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.196" endtime="20201117 14:41:28.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.215" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:28.201" endtime="20201117 14:41:28.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.219" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.218" endtime="20201117 14:41:28.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.222" level="INFO">VALUE: [5.809700000000001e-05, 5.7971999999999885e-05, 5.827699999999894e-05, 5.7944000000000745e-05, 5.765300000000126e-05, 5.762500000000212e-05, 5.78619999999988e-05, 5.766700000000083e-05, 5.780499999999758e-05, 5.7583999999999413e-05, 5.765300000000126e-05, 5.783300000000019e-05, 5.8305999999997554e-05, 5.812500000000262e-05, 5.772299999999911e-05, 5.8306000000001024e-05, 5.8499999999999525e-05, 5.7694000000000495e-05, 5.830500000000155e-05, 5.8249999999999275e-05, 5.780500000000105e-05, 5.811099999999958e-05, 5.7749999999998775e-05, 5.756900000000037e-05, 5.790300000000151e-05, 5.7806000000000524e-05, 5.809700000000001e-05, 5.808300000000044e-05, 5.7792000000000954e-05, 5.761099999999908e-05, 5.763899999999822e-05, 5.8320000000000594e-05, 5.793100000000065e-05, 5.791700000000108e-05, 5.762500000000212e-05, 5.7764000000001814e-05, 5.7680000000000925e-05, 5.7999999999999025e-05, 5.7665999999997886e-05, 5.8249999999999275e-05, 5.7915999999998136e-05, 5.754100000000123e-05, 5.809700000000001e-05, 5.7680000000000925e-05, 5.83749999999994e-05, 5.81810000000009e-05, 5.7792000000000954e-05, 5.8305999999997554e-05, 5.7820000000000094e-05, 5.7985999999999455e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.220" endtime="20201117 14:41:28.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.216" endtime="20201117 14:41:28.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.225" endtime="20201117 14:41:28.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.229" endtime="20201117 14:41:28.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.227" endtime="20201117 14:41:28.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.224" endtime="20201117 14:41:28.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.852" endtime="20201117 14:41:28.250"></status>
</kw>
<msg timestamp="20201117 14:41:28.250" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.258" endtime="20201117 14:41:28.277"></status>
</kw>
<msg timestamp="20201117 14:41:28.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.257" endtime="20201117 14:41:28.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.279" endtime="20201117 14:41:28.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.282" endtime="20201117 14:41:28.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.254" endtime="20201117 14:41:28.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.252" endtime="20201117 14:41:28.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.292" endtime="20201117 14:41:28.579"></status>
</kw>
<msg timestamp="20201117 14:41:28.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.291" endtime="20201117 14:41:28.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.583" endtime="20201117 14:41:28.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.592" endtime="20201117 14:41:28.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.288" endtime="20201117 14:41:28.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.286" endtime="20201117 14:41:28.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.599" level="INFO">${RESULT} = [{'time': 0.019993153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.843100000000115e-05, 'source_diff': 5.843100000000115e-05}, {'time': 0.020067125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.595" endtime="20201117 14:41:28.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:28.600" endtime="20201117 14:41:28.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.617" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.616" endtime="20201117 14:41:28.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.620" level="INFO">VALUE: [5.843100000000115e-05, 5.8485999999999955e-05, 5.809700000000001e-05, 5.7778000000001384e-05, 5.8222000000000135e-05, 5.8041999999997734e-05, 5.8222000000000135e-05, 5.78480000000027e-05, 5.793100000000065e-05, 5.78480000000027e-05, 5.788899999999847e-05, 5.780499999999758e-05, 5.8485999999999955e-05, 5.812499999999915e-05, 5.783300000000019e-05, 5.756900000000037e-05, 5.8472000000000385e-05, 5.788900000000194e-05, 5.841700000000158e-05, 5.838899999999897e-05, 5.7736000000002674e-05, 5.809700000000001e-05, 5.7735999999999205e-05, 5.766700000000083e-05, 5.83749999999994e-05, 5.761100000000255e-05, 5.79870000000024e-05, 5.7749999999998775e-05, 5.811199999999905e-05, 5.8444000000001245e-05, 5.788900000000194e-05, 5.836099999999983e-05, 5.754099999999776e-05, 5.8416000000002105e-05, 5.8222000000000135e-05, 5.7763999999998344e-05, 5.8222000000000135e-05, 5.838899999999897e-05, 5.8292000000001454e-05, 5.841699999999811e-05, 5.8193999999997525e-05, 5.841699999999811e-05, 5.808300000000044e-05, 5.8056000000000774e-05, 5.809700000000001e-05, 5.843099999999768e-05, 5.790300000000151e-05, 5.7542000000000704e-05, 5.7764000000001814e-05, 5.831900000000112e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.618" endtime="20201117 14:41:28.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.613" endtime="20201117 14:41:28.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.623" endtime="20201117 14:41:28.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.626" endtime="20201117 14:41:28.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.625" endtime="20201117 14:41:28.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.621" endtime="20201117 14:41:28.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.251" endtime="20201117 14:41:28.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.850" endtime="20201117 14:41:28.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.849" endtime="20201117 14:41:28.648"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.650" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.659" endtime="20201117 14:41:28.679"></status>
</kw>
<msg timestamp="20201117 14:41:28.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.658" endtime="20201117 14:41:28.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.680" endtime="20201117 14:41:28.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.683" endtime="20201117 14:41:28.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.655" endtime="20201117 14:41:28.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.652" endtime="20201117 14:41:28.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.693" endtime="20201117 14:41:28.979"></status>
</kw>
<msg timestamp="20201117 14:41:28.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023372167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.691" endtime="20201117 14:41:28.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023372167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.984" endtime="20201117 14:41:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.992" endtime="20201117 14:41:28.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.688" endtime="20201117 14:41:28.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.687" endtime="20201117 14:41:28.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.999" level="INFO">${RESULT} = [{'time': 0.023372167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.895900000000079e-05, 'source_diff': 5.895900000000079e-05}, {'time': 0.023444181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.996" endtime="20201117 14:41:28.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.013" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:29.000" endtime="20201117 14:41:29.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.018" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.017" endtime="20201117 14:41:29.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.020" level="INFO">VALUE: [5.895900000000079e-05, 5.9070000000001344e-05, 5.937499999999693e-05, 5.9291999999998984e-05, 5.8527999999998664e-05, 5.8736000000000205e-05, 5.8722000000000635e-05, 5.9207999999998095e-05, 5.9222000000001135e-05, 5.880499999999858e-05, 5.9486000000000955e-05, 5.933299999999822e-05, 5.8777999999998914e-05, 5.9250000000000275e-05, 5.913899999999972e-05, 5.8736000000000205e-05, 5.934700000000126e-05, 5.9457999999998346e-05, 5.877699999999944e-05, 5.909700000000101e-05, 5.9041999999998734e-05, 5.9236000000000705e-05, 5.9028000000002634e-05, 5.8916000000002605e-05, 5.859700000000051e-05, 5.931899999999865e-05, 5.852699999999919e-05, 5.8749999999999775e-05, 5.8694000000001495e-05, 5.911100000000058e-05, 5.9486000000000955e-05, 5.931900000000212e-05, 5.886100000000033e-05, 5.8792000000001954e-05, 5.938899999999997e-05, 5.941699999999911e-05, 5.883300000000119e-05, 5.8763999999999345e-05, 5.8556000000001274e-05, 5.941699999999911e-05, 5.886100000000033e-05, 5.918099999999843e-05, 5.866700000000183e-05, 5.8749999999999775e-05, 5.9485999999997485e-05, 5.861100000000008e-05, 5.937499999999693e-05, 5.8749999999999775e-05, 5.8665999999998886e-05, 5.9471999999997915e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.019" endtime="20201117 14:41:29.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.014" endtime="20201117 14:41:29.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.024" endtime="20201117 14:41:29.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.027" endtime="20201117 14:41:29.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.026" endtime="20201117 14:41:29.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.022" endtime="20201117 14:41:29.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.651" endtime="20201117 14:41:29.048"></status>
</kw>
<msg timestamp="20201117 14:41:29.049" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.057" endtime="20201117 14:41:29.077"></status>
</kw>
<msg timestamp="20201117 14:41:29.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.056" endtime="20201117 14:41:29.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.078" endtime="20201117 14:41:29.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.081" endtime="20201117 14:41:29.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.053" endtime="20201117 14:41:29.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.051" endtime="20201117 14:41:29.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.091" endtime="20201117 14:41:29.377"></status>
</kw>
<msg timestamp="20201117 14:41:29.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.089" endtime="20201117 14:41:29.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.381" endtime="20201117 14:41:29.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.390" endtime="20201117 14:41:29.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.087" endtime="20201117 14:41:29.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.085" endtime="20201117 14:41:29.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.397" level="INFO">${RESULT} = [{'time': 0.020414764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.866699999999836e-05, 'source_diff': 5.866699999999836e-05}, {'time': 0.020488778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.393" endtime="20201117 14:41:29.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.410" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:29.398" endtime="20201117 14:41:29.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.415" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.414" endtime="20201117 14:41:29.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.418" level="INFO">VALUE: [5.866699999999836e-05, 5.9250000000000275e-05, 5.9500000000000525e-05, 5.88749999999999e-05, 5.936100000000083e-05, 5.8722000000000635e-05, 5.933300000000169e-05, 5.9429999999999206e-05, 5.936099999999736e-05, 5.912500000000015e-05, 5.9193999999998526e-05, 5.9415999999999636e-05, 5.858300000000094e-05, 5.9514000000000095e-05, 5.886100000000033e-05, 5.880499999999858e-05, 5.9250000000000275e-05, 5.890299999999904e-05, 5.9277999999999414e-05, 5.9193999999998526e-05, 5.9500000000000525e-05, 5.8791999999998484e-05, 5.9236000000000705e-05, 5.9472000000001385e-05, 5.915299999999929e-05, 5.862499999999965e-05, 5.893100000000165e-05, 5.9055999999998304e-05, 5.8542000000001704e-05, 5.9056000000001774e-05, 5.8749999999999775e-05, 5.856900000000137e-05, 5.9429999999999206e-05, 5.9194000000001995e-05, 5.9415999999999636e-05, 5.9041999999998734e-05, 5.8528000000002134e-05, 5.8777999999998914e-05, 5.9514000000000095e-05, 5.893100000000165e-05, 5.936099999999736e-05, 5.9083999999997444e-05, 5.861100000000008e-05, 5.8778000000002384e-05, 5.929099999999951e-05, 5.870899999999707e-05, 5.912500000000015e-05, 5.866700000000183e-05, 5.930499999999908e-05, 5.8930000000002175e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.416" endtime="20201117 14:41:29.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.411" endtime="20201117 14:41:29.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.421" endtime="20201117 14:41:29.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.425" endtime="20201117 14:41:29.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.423" endtime="20201117 14:41:29.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.420" endtime="20201117 14:41:29.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.049" endtime="20201117 14:41:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.649" endtime="20201117 14:41:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.648" endtime="20201117 14:41:29.446"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.449" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.457" endtime="20201117 14:41:29.477"></status>
</kw>
<msg timestamp="20201117 14:41:29.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.456" endtime="20201117 14:41:29.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.479" endtime="20201117 14:41:29.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.481" endtime="20201117 14:41:29.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.453" endtime="20201117 14:41:29.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.451" endtime="20201117 14:41:29.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.491" endtime="20201117 14:41:29.776"></status>
</kw>
<msg timestamp="20201117 14:41:29.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023656056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.489" endtime="20201117 14:41:29.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023656056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.780" endtime="20201117 14:41:29.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.789" endtime="20201117 14:41:29.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.486" endtime="20201117 14:41:29.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.485" endtime="20201117 14:41:29.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.796" level="INFO">${RESULT} = [{'time': 0.023656056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9570000000001844e-05, 'source_diff': 5.9570000000001844e-05}, {'time': 0.023729069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:29.792" endtime="20201117 14:41:29.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.811" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:29.797" endtime="20201117 14:41:29.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.815" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.814" endtime="20201117 14:41:29.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.818" level="INFO">VALUE: [5.9570000000001844e-05, 5.9957999999998846e-05, 5.9847999999997764e-05, 6.036100000000183e-05, 6.038900000000097e-05, 6.036099999999836e-05, 5.9986000000001455e-05, 6.038900000000097e-05, 5.9985999999997985e-05, 5.9694000000002495e-05, 6.018099999999943e-05, 6.0278000000000415e-05, 5.9611999999997084e-05, 5.9986000000001455e-05, 5.9555999999998804e-05, 6.0471999999998916e-05, 6.011100000000158e-05, 6.045899999999882e-05, 5.962500000000065e-05, 6.041700000000011e-05, 5.966699999999936e-05, 6.0278000000000415e-05, 6.038900000000097e-05, 6.006900000000287e-05, 6.034699999999879e-05, 6.0443999999999776e-05, 5.959700000000151e-05, 6.036099999999836e-05, 5.993099999999918e-05, 5.966699999999936e-05, 5.994500000000222e-05, 6.0250000000001275e-05, 5.952700000000019e-05, 6.018099999999943e-05, 5.9721999999998165e-05, 5.9999999999997555e-05, 5.9791999999999484e-05, 5.980499999999958e-05, 5.983299999999872e-05, 6.0443999999999776e-05, 5.990300000000004e-05, 5.9735999999997735e-05, 6.0193999999999526e-05, 5.9652000000000316e-05, 5.95550000000028e-05, 5.955499999999933e-05, 5.954099999999976e-05, 6.005499999999983e-05, 6.006900000000287e-05, 6.0305999999999554e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.817" endtime="20201117 14:41:29.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.812" endtime="20201117 14:41:29.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.822" endtime="20201117 14:41:29.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.825" endtime="20201117 14:41:29.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.824" endtime="20201117 14:41:29.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.820" endtime="20201117 14:41:29.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.449" endtime="20201117 14:41:29.846"></status>
</kw>
<msg timestamp="20201117 14:41:29.846" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.855" endtime="20201117 14:41:29.873"></status>
</kw>
<msg timestamp="20201117 14:41:29.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.853" endtime="20201117 14:41:29.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.875" endtime="20201117 14:41:29.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.878" endtime="20201117 14:41:29.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.851" endtime="20201117 14:41:29.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.848" endtime="20201117 14:41:29.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.888" endtime="20201117 14:41:30.174"></status>
</kw>
<msg timestamp="20201117 14:41:30.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019961722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.886" endtime="20201117 14:41:30.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019961722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.178" endtime="20201117 14:41:30.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.187" endtime="20201117 14:41:30.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.884" endtime="20201117 14:41:30.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.882" endtime="20201117 14:41:30.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.194" level="INFO">${RESULT} = [{'time': 0.020021806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0083999999998444e-05, 'source_diff': 6.0083999999998444e-05}, {'time': 0.020096903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:30.190" endtime="20201117 14:41:30.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.207" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:30.195" endtime="20201117 14:41:30.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.212" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.211" endtime="20201117 14:41:30.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.215" level="INFO">VALUE: [6.0083999999998444e-05, 6.0264000000000845e-05, 6.0486000000001955e-05, 6.036099999999836e-05, 5.98750000000009e-05, 5.955499999999933e-05, 6.0236000000001705e-05, 6.036100000000183e-05, 5.972300000000111e-05, 5.962500000000065e-05, 6.041700000000011e-05, 6.0486000000001955e-05, 6.0222000000002135e-05, 5.9986000000001455e-05, 5.984700000000176e-05, 6.016699999999986e-05, 5.986100000000133e-05, 6.0041999999999734e-05, 5.9528000000003134e-05, 6.037499999999793e-05, 6.00689999999994e-05, 6.0471999999998916e-05, 5.963900000000022e-05, 6.0179999999999956e-05, 5.9916000000000136e-05, 5.961100000000108e-05, 5.9805999999999054e-05, 6.011100000000158e-05, 5.96949999999985e-05, 6.0250000000001275e-05, 6.0222000000002135e-05, 5.98750000000009e-05, 5.988900000000047e-05, 6.016699999999986e-05, 6.0278000000000415e-05, 6.0500000000001525e-05, 6.0430000000000206e-05, 6.004100000000026e-05, 6.018099999999943e-05, 6.013899999999725e-05, 6.0443999999999776e-05, 5.954100000000323e-05, 5.9735999999997735e-05, 5.9986000000001455e-05, 5.9986000000001455e-05, 6.036100000000183e-05, 5.9694000000002495e-05, 5.983299999999872e-05, 6.0305999999999554e-05, 6.0041999999999734e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.213" endtime="20201117 14:41:30.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.208" endtime="20201117 14:41:30.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.218" endtime="20201117 14:41:30.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.222" endtime="20201117 14:41:30.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.220" endtime="20201117 14:41:30.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.217" endtime="20201117 14:41:30.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.847" endtime="20201117 14:41:30.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.447" endtime="20201117 14:41:30.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.447" endtime="20201117 14:41:30.243"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.246" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.254" endtime="20201117 14:41:30.274"></status>
</kw>
<msg timestamp="20201117 14:41:30.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.253" endtime="20201117 14:41:30.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.276" endtime="20201117 14:41:30.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.278" endtime="20201117 14:41:30.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.250" endtime="20201117 14:41:30.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.248" endtime="20201117 14:41:30.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.288" endtime="20201117 14:41:30.574"></status>
</kw>
<msg timestamp="20201117 14:41:30.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.286" endtime="20201117 14:41:30.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.579" endtime="20201117 14:41:30.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.587" endtime="20201117 14:41:30.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.283" endtime="20201117 14:41:30.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.282" endtime="20201117 14:41:30.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.594" level="INFO">${RESULT} = [{'time': 0.022727708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.113899999999825e-05, 'source_diff': 6.113899999999825e-05}, {'time': 0.022805694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.591" endtime="20201117 14:41:30.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:30.595" endtime="20201117 14:41:30.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.613" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.612" endtime="20201117 14:41:30.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.622" level="INFO">VALUE: [6.113899999999825e-05, 6.141600000000164e-05, 6.079100000000101e-05, 6.0957999999999846e-05, 6.1028000000001165e-05, 6.0722000000002635e-05, 6.061099999999861e-05, 6.129200000000098e-05, 6.126400000000184e-05, 6.140299999999807e-05, 6.084699999999929e-05, 6.05689999999999e-05, 6.116700000000086e-05, 6.086100000000233e-05, 6.1000000000002025e-05, 6.116700000000086e-05, 6.0528000000000665e-05, 6.079099999999754e-05, 6.127800000000141e-05, 6.0944000000000276e-05, 6.108299999999997e-05, 6.123599999999924e-05, 6.14300000000012e-05, 6.0806000000000054e-05, 6.05689999999999e-05, 6.081900000000015e-05, 6.151399999999863e-05, 6.070900000000254e-05, 6.0680000000000456e-05, 6.132000000000012e-05, 6.0749999999998305e-05, 6.12080000000001e-05, 6.0999999999998555e-05, 6.123599999999924e-05, 6.097299999999889e-05, 6.10560000000003e-05, 6.113799999999878e-05, 6.0555999999999804e-05, 6.080500000000058e-05, 6.129099999999804e-05, 6.063900000000122e-05, 6.0944000000000276e-05, 6.123599999999924e-05, 6.0957999999999846e-05, 6.154199999999777e-05, 6.112500000000215e-05, 6.0819999999999624e-05, 6.136099999999936e-05, 6.06949999999995e-05, 6.06949999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.614" endtime="20201117 14:41:30.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.609" endtime="20201117 14:41:30.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.626" endtime="20201117 14:41:30.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.629" endtime="20201117 14:41:30.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.628" endtime="20201117 14:41:30.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.624" endtime="20201117 14:41:30.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.246" endtime="20201117 14:41:30.650"></status>
</kw>
<msg timestamp="20201117 14:41:30.650" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.659" endtime="20201117 14:41:30.678"></status>
</kw>
<msg timestamp="20201117 14:41:30.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.658" endtime="20201117 14:41:30.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.679" endtime="20201117 14:41:30.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.682" endtime="20201117 14:41:30.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.655" endtime="20201117 14:41:30.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.653" endtime="20201117 14:41:30.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.692" endtime="20201117 14:41:30.978"></status>
</kw>
<msg timestamp="20201117 14:41:30.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.691" endtime="20201117 14:41:30.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.982" endtime="20201117 14:41:30.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.991" endtime="20201117 14:41:30.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.688" endtime="20201117 14:41:30.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.686" endtime="20201117 14:41:30.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.998" level="INFO">${RESULT} = [{'time': 0.020262153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.147199999999992e-05, 'source_diff': 6.147199999999992e-05}, {'time': 0.020338167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.994" endtime="20201117 14:41:30.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.012" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:30.999" endtime="20201117 14:41:31.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.017" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.016" endtime="20201117 14:41:31.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.019" level="INFO">VALUE: [6.147199999999992e-05, 6.130600000000055e-05, 6.116699999999739e-05, 6.125000000000227e-05, 6.109799999999901e-05, 6.126300000000237e-05, 6.055500000000033e-05, 6.063900000000122e-05, 6.105500000000083e-05, 6.0750000000001775e-05, 6.134699999999979e-05, 6.130500000000108e-05, 6.063900000000122e-05, 6.093100000000018e-05, 6.126399999999838e-05, 6.143100000000068e-05, 6.134700000000326e-05, 6.143099999999721e-05, 6.112500000000215e-05, 6.058299999999947e-05, 6.143100000000068e-05, 6.134699999999979e-05, 6.1195e-05, 6.130600000000055e-05, 6.112500000000215e-05, 6.123599999999924e-05, 6.129099999999804e-05, 6.0764000000001345e-05, 6.0652000000001316e-05, 6.118000000000096e-05, 6.080500000000058e-05, 6.127800000000141e-05, 6.062500000000165e-05, 6.138900000000197e-05, 6.0791999999997015e-05, 6.0819999999999624e-05, 6.090299999999757e-05, 6.151399999999863e-05, 6.0833999999999194e-05, 6.0792000000000485e-05, 6.122199999999967e-05, 6.093100000000018e-05, 6.126400000000184e-05, 6.0735999999998735e-05, 6.0735999999998735e-05, 6.137499999999893e-05, 6.131900000000065e-05, 6.123599999999924e-05, 6.0902000000001566e-05, 6.141700000000111e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.018" endtime="20201117 14:41:31.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.013" endtime="20201117 14:41:31.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.023" endtime="20201117 14:41:31.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.026" endtime="20201117 14:41:31.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.025" endtime="20201117 14:41:31.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.021" endtime="20201117 14:41:31.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.651" endtime="20201117 14:41:31.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.244" endtime="20201117 14:41:31.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.244" endtime="20201117 14:41:31.047"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.050" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.058" endtime="20201117 14:41:31.078"></status>
</kw>
<msg timestamp="20201117 14:41:31.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.057" endtime="20201117 14:41:31.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.080" endtime="20201117 14:41:31.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.082" endtime="20201117 14:41:31.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.054" endtime="20201117 14:41:31.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.052" endtime="20201117 14:41:31.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.092" endtime="20201117 14:41:31.377"></status>
</kw>
<msg timestamp="20201117 14:41:31.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023398056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.090" endtime="20201117 14:41:31.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023398056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.382" endtime="20201117 14:41:31.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.391" endtime="20201117 14:41:31.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.087" endtime="20201117 14:41:31.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.086" endtime="20201117 14:41:31.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.399" level="INFO">${RESULT} = [{'time': 0.023459972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.191599999999867e-05, 'source_diff': 6.191599999999867e-05}, {'time': 0.023535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:31.395" endtime="20201117 14:41:31.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.414" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:31.400" endtime="20201117 14:41:31.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.419" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.418" endtime="20201117 14:41:31.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.421" level="INFO">VALUE: [6.191599999999867e-05, 6.195800000000085e-05, 6.154100000000176e-05, 6.22080000000011e-05, 6.211100000000011e-05, 6.173599999999974e-05, 6.250000000000006e-05, 6.183399999999672e-05, 6.215300000000229e-05, 6.195900000000032e-05, 6.22499999999998e-05, 6.162499999999918e-05, 6.198699999999946e-05, 6.162499999999918e-05, 6.180500000000158e-05, 6.20829999999975e-05, 6.173599999999974e-05, 6.248600000000049e-05, 6.18750000000029e-05, 6.191599999999867e-05, 6.181899999999768e-05, 6.19300000000017e-05, 6.223600000000024e-05, 6.162499999999918e-05, 6.241700000000211e-05, 6.233299999999775e-05, 6.172200000000017e-05, 6.240299999999907e-05, 6.240299999999907e-05, 6.237499999999993e-05, 6.223599999999677e-05, 6.183300000000072e-05, 6.209800000000001e-05, 6.188799999999953e-05, 6.159700000000004e-05, 6.152699999999872e-05, 6.217999999999849e-05, 6.22080000000011e-05, 6.148599999999949e-05, 6.212499999999968e-05, 6.208300000000097e-05, 6.204199999999827e-05, 6.179200000000148e-05, 6.248600000000049e-05, 6.172299999999964e-05, 6.204199999999827e-05, 6.204199999999827e-05, 6.211100000000011e-05, 6.1888999999999e-05, 6.15560000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.420" endtime="20201117 14:41:31.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.415" endtime="20201117 14:41:31.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.425" endtime="20201117 14:41:31.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.428" endtime="20201117 14:41:31.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.426" endtime="20201117 14:41:31.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.423" endtime="20201117 14:41:31.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.050" endtime="20201117 14:41:31.449"></status>
</kw>
<msg timestamp="20201117 14:41:31.449" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.458" endtime="20201117 14:41:31.477"></status>
</kw>
<msg timestamp="20201117 14:41:31.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.456" endtime="20201117 14:41:31.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.479" endtime="20201117 14:41:31.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.481" endtime="20201117 14:41:31.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.454" endtime="20201117 14:41:31.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.451" endtime="20201117 14:41:31.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.491" endtime="20201117 14:41:31.777"></status>
</kw>
<msg timestamp="20201117 14:41:31.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02000125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:31.490" endtime="20201117 14:41:31.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02000125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:31.781" endtime="20201117 14:41:31.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.791" endtime="20201117 14:41:31.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.487" endtime="20201117 14:41:31.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.485" endtime="20201117 14:41:31.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.798" level="INFO">${RESULT} = [{'time': 0.020063125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.187499999999943e-05, 'source_diff': 6.187499999999943e-05}, {'time': 0.020141139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.794" endtime="20201117 14:41:31.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.811" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:31.799" endtime="20201117 14:41:31.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.816" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.815" endtime="20201117 14:41:31.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.819" level="INFO">VALUE: [6.187499999999943e-05, 6.226399999999938e-05, 6.176399999999888e-05, 6.18750000000029e-05, 6.173599999999974e-05, 6.212499999999968e-05, 6.254200000000223e-05, 6.22499999999998e-05, 6.217999999999849e-05, 6.19300000000017e-05, 6.24019999999996e-05, 6.180499999999811e-05, 6.250000000000006e-05, 6.22499999999998e-05, 6.162499999999918e-05, 6.247199999999745e-05, 6.222200000000067e-05, 6.183300000000072e-05, 6.193099999999771e-05, 6.245800000000135e-05, 6.236100000000036e-05, 6.243099999999821e-05, 6.184700000000029e-05, 6.162499999999918e-05, 6.218100000000143e-05, 6.158300000000047e-05, 6.23889999999995e-05, 6.254199999999877e-05, 6.230500000000208e-05, 6.244400000000178e-05, 6.229099999999904e-05, 6.219399999999806e-05, 6.241599999999917e-05, 6.229100000000251e-05, 6.216699999999839e-05, 6.206899999999793e-05, 6.20560000000013e-05, 6.199999999999956e-05, 6.1888999999999e-05, 6.204200000000173e-05, 6.173599999999974e-05, 6.2195000000001e-05, 6.207000000000087e-05, 6.230600000000155e-05, 6.200000000000302e-05, 6.250000000000006e-05, 6.24439999999983e-05, 6.247200000000092e-05, 6.215199999999935e-05, 6.187499999999943e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.817" endtime="20201117 14:41:31.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.812" endtime="20201117 14:41:31.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.822" endtime="20201117 14:41:31.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.825" endtime="20201117 14:41:31.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.824" endtime="20201117 14:41:31.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.820" endtime="20201117 14:41:31.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.450" endtime="20201117 14:41:31.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.049" endtime="20201117 14:41:31.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.048" endtime="20201117 14:41:31.847"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.849" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.858" endtime="20201117 14:41:31.877"></status>
</kw>
<msg timestamp="20201117 14:41:31.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.856" endtime="20201117 14:41:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.879" endtime="20201117 14:41:31.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.882" endtime="20201117 14:41:31.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.853" endtime="20201117 14:41:31.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.851" endtime="20201117 14:41:31.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.891" endtime="20201117 14:41:32.178"></status>
</kw>
<msg timestamp="20201117 14:41:32.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:31.890" endtime="20201117 14:41:32.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:32.182" endtime="20201117 14:41:32.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.191" endtime="20201117 14:41:32.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.887" endtime="20201117 14:41:32.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.885" endtime="20201117 14:41:32.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.198" level="INFO">${RESULT} = [{'time': 0.022595681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.343099999999921e-05, 'source_diff': 6.343099999999921e-05}, {'time': 0.022672694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.194" endtime="20201117 14:41:32.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:32.199" endtime="20201117 14:41:32.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.216" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.215" endtime="20201117 14:41:32.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.219" level="INFO">VALUE: [6.343099999999921e-05, 6.252699999999972e-05, 6.301400000000013e-05, 6.255499999999886e-05, 6.342999999999974e-05, 6.256899999999843e-05, 6.317999999999949e-05, 6.304099999999979e-05, 6.266599999999942e-05, 6.288800000000053e-05, 6.290299999999957e-05, 6.263899999999975e-05, 6.334699999999832e-05, 6.332000000000212e-05, 6.2582999999998e-05, 6.344500000000225e-05, 6.308400000000144e-05, 6.329100000000004e-05, 6.273700000000021e-05, 6.261100000000061e-05, 6.336099999999789e-05, 6.259700000000104e-05, 6.297199999999795e-05, 6.349999999999759e-05, 6.348599999999802e-05, 6.261100000000061e-05, 6.276399999999988e-05, 6.279199999999902e-05, 6.295800000000185e-05, 6.268099999999846e-05, 6.280600000000205e-05, 6.348600000000149e-05, 6.276399999999988e-05, 6.28479999999973e-05, 6.298599999999752e-05, 6.304200000000273e-05, 6.3195000000002e-05, 6.340300000000007e-05, 6.292999999999924e-05, 6.284700000000129e-05, 6.259700000000104e-05, 6.319399999999906e-05, 6.342999999999974e-05, 6.3276999999997e-05, 6.342999999999974e-05, 6.256899999999843e-05, 6.316700000000286e-05, 6.307000000000187e-05, 6.340300000000007e-05, 6.291699999999914e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.217" endtime="20201117 14:41:32.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.213" endtime="20201117 14:41:32.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.222" endtime="20201117 14:41:32.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.226" endtime="20201117 14:41:32.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.224" endtime="20201117 14:41:32.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.220" endtime="20201117 14:41:32.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.850" endtime="20201117 14:41:32.247"></status>
</kw>
<msg timestamp="20201117 14:41:32.247" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.255" endtime="20201117 14:41:32.275"></status>
</kw>
<msg timestamp="20201117 14:41:32.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.254" endtime="20201117 14:41:32.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.277" endtime="20201117 14:41:32.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.279" endtime="20201117 14:41:32.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.251" endtime="20201117 14:41:32.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.249" endtime="20201117 14:41:32.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.290" endtime="20201117 14:41:32.577"></status>
</kw>
<msg timestamp="20201117 14:41:32.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.288" endtime="20201117 14:41:32.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.581" endtime="20201117 14:41:32.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.589" endtime="20201117 14:41:32.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.286" endtime="20201117 14:41:32.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.284" endtime="20201117 14:41:32.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.596" level="INFO">${RESULT} = [{'time': 0.020007569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.336099999999789e-05, 'source_diff': 6.336099999999789e-05}, {'time': 0.020084486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.593" endtime="20201117 14:41:32.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:32.597" endtime="20201117 14:41:32.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.615" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.614" endtime="20201117 14:41:32.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.617" level="INFO">VALUE: [6.336099999999789e-05, 6.2582999999998e-05, 6.294499999999828e-05, 6.327799999999995e-05, 6.25560000000018e-05, 6.322299999999767e-05, 6.336100000000136e-05, 6.286099999999739e-05, 6.294500000000175e-05, 6.279099999999954e-05, 6.312500000000068e-05, 6.316599999999992e-05, 6.27500000000003e-05, 6.337500000000093e-05, 6.304100000000326e-05, 6.34439999999993e-05, 6.34439999999993e-05, 6.305500000000283e-05, 6.331899999999918e-05, 6.259700000000104e-05, 6.319499999999853e-05, 6.341699999999964e-05, 6.286100000000086e-05, 6.350000000000106e-05, 6.286100000000086e-05, 6.332000000000212e-05, 6.318099999999896e-05, 6.287500000000043e-05, 6.337500000000093e-05, 6.277799999999945e-05, 6.29439999999988e-05, 6.29020000000001e-05, 6.305499999999936e-05, 6.351399999999716e-05, 6.32500000000008e-05, 6.317999999999949e-05, 6.348600000000149e-05, 6.268100000000193e-05, 6.331899999999918e-05, 6.30279999999997e-05, 6.309700000000154e-05, 6.345799999999888e-05, 6.284700000000129e-05, 6.309800000000101e-05, 6.2889e-05, 6.319499999999853e-05, 6.301400000000013e-05, 6.304200000000273e-05, 6.280499999999911e-05, 6.348600000000149e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.616" endtime="20201117 14:41:32.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.611" endtime="20201117 14:41:32.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.621" endtime="20201117 14:41:32.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.624" endtime="20201117 14:41:32.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.623" endtime="20201117 14:41:32.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.619" endtime="20201117 14:41:32.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.247" endtime="20201117 14:41:32.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.848" endtime="20201117 14:41:32.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.847" endtime="20201117 14:41:32.645"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.648" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.657" endtime="20201117 14:41:32.678"></status>
</kw>
<msg timestamp="20201117 14:41:32.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.655" endtime="20201117 14:41:32.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.679" endtime="20201117 14:41:32.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.682" endtime="20201117 14:41:32.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.652" endtime="20201117 14:41:32.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.650" endtime="20201117 14:41:32.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.691" endtime="20201117 14:41:32.979"></status>
</kw>
<msg timestamp="20201117 14:41:32.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.690" endtime="20201117 14:41:32.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.983" endtime="20201117 14:41:32.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.991" endtime="20201117 14:41:32.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.687" endtime="20201117 14:41:32.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.685" endtime="20201117 14:41:32.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.998" level="INFO">${RESULT} = [{'time': 0.024319542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.438899999999803e-05, 'source_diff': 6.438899999999803e-05}, {'time': 0.024399569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.995" endtime="20201117 14:41:32.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:32.999" endtime="20201117 14:41:33.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.018" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.017" endtime="20201117 14:41:33.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.021" level="INFO">VALUE: [6.438899999999803e-05, 6.383299999999925e-05, 6.447299999999892e-05, 6.430500000000061e-05, 6.373599999999827e-05, 6.380500000000011e-05, 6.367999999999999e-05, 6.3889000000001e-05, 6.418000000000049e-05, 6.437499999999846e-05, 6.398599999999852e-05, 6.384700000000229e-05, 6.448599999999902e-05, 6.418099999999996e-05, 6.381999999999916e-05, 6.429200000000052e-05, 6.405599999999984e-05, 6.379200000000002e-05, 6.370799999999913e-05, 6.419499999999953e-05, 6.361100000000161e-05, 6.386200000000133e-05, 6.374999999999784e-05, 6.423600000000224e-05, 6.42500000000018e-05, 6.387500000000143e-05, 6.359699999999857e-05, 6.443000000000074e-05, 6.372200000000217e-05, 6.40690000000034e-05, 6.355599999999934e-05, 6.447199999999945e-05, 6.377800000000045e-05, 6.374999999999784e-05, 6.40699999999994e-05, 6.418099999999996e-05, 6.441700000000064e-05, 6.37500000000013e-05, 6.427800000000095e-05, 6.415300000000082e-05, 6.448600000000249e-05, 6.448699999999849e-05, 6.406899999999993e-05, 6.365200000000085e-05, 6.437500000000193e-05, 6.430500000000061e-05, 6.440300000000107e-05, 6.393000000000024e-05, 6.429200000000052e-05, 6.434699999999932e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.019" endtime="20201117 14:41:33.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.015" endtime="20201117 14:41:33.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.024" endtime="20201117 14:41:33.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.028" endtime="20201117 14:41:33.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.026" endtime="20201117 14:41:33.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.022" endtime="20201117 14:41:33.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.649" endtime="20201117 14:41:33.048"></status>
</kw>
<msg timestamp="20201117 14:41:33.049" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.058" endtime="20201117 14:41:33.077"></status>
</kw>
<msg timestamp="20201117 14:41:33.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.056" endtime="20201117 14:41:33.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.078" endtime="20201117 14:41:33.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.081" endtime="20201117 14:41:33.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.053" endtime="20201117 14:41:33.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.051" endtime="20201117 14:41:33.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.091" endtime="20201117 14:41:33.377"></status>
</kw>
<msg timestamp="20201117 14:41:33.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.090" endtime="20201117 14:41:33.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.382" endtime="20201117 14:41:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.390" endtime="20201117 14:41:33.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.087" endtime="20201117 14:41:33.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.085" endtime="20201117 14:41:33.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.397" level="INFO">${RESULT} = [{'time': 0.020373583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.381899999999968e-05, 'source_diff': 6.381899999999968e-05}, {'time': 0.020450611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.394" endtime="20201117 14:41:33.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:33.398" endtime="20201117 14:41:33.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.416" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.415" endtime="20201117 14:41:33.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.419" level="INFO">VALUE: [6.381899999999968e-05, 6.416700000000039e-05, 6.418000000000049e-05, 6.455600000000034e-05, 6.35560000000028e-05, 6.366699999999989e-05, 6.354199999999977e-05, 6.37500000000013e-05, 6.383300000000272e-05, 6.398599999999852e-05, 6.407000000000287e-05, 6.411199999999811e-05, 6.362499999999771e-05, 6.401400000000113e-05, 6.409799999999855e-05, 6.369399999999956e-05, 6.402700000000122e-05, 6.355499999999986e-05, 6.354100000000029e-05, 6.418000000000049e-05, 6.418000000000049e-05, 6.411099999999864e-05, 6.369399999999956e-05, 6.40829999999995e-05, 6.411100000000211e-05, 6.365300000000032e-05, 6.430600000000009e-05, 6.368099999999946e-05, 6.444499999999978e-05, 6.416700000000039e-05, 6.380599999999959e-05, 6.406899999999993e-05, 6.427799999999748e-05, 6.376400000000088e-05, 6.413900000000125e-05, 6.423599999999877e-05, 6.437499999999846e-05, 6.361099999999814e-05, 6.379200000000002e-05, 6.373599999999827e-05, 6.449999999999859e-05, 6.373599999999827e-05, 6.355599999999934e-05, 6.393100000000318e-05, 6.362500000000118e-05, 6.441700000000064e-05, 6.418099999999996e-05, 6.373600000000174e-05, 6.387500000000143e-05, 6.440300000000107e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.417" endtime="20201117 14:41:33.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.412" endtime="20201117 14:41:33.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.422" endtime="20201117 14:41:33.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.427" endtime="20201117 14:41:33.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.425" endtime="20201117 14:41:33.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.420" endtime="20201117 14:41:33.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.050" endtime="20201117 14:41:33.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.647" endtime="20201117 14:41:33.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.646" endtime="20201117 14:41:33.448"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.451" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.459" endtime="20201117 14:41:33.478"></status>
</kw>
<msg timestamp="20201117 14:41:33.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.458" endtime="20201117 14:41:33.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.480" endtime="20201117 14:41:33.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.483" endtime="20201117 14:41:33.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.455" endtime="20201117 14:41:33.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.453" endtime="20201117 14:41:33.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.492" endtime="20201117 14:41:33.779"></status>
</kw>
<msg timestamp="20201117 14:41:33.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.490" endtime="20201117 14:41:33.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.783" endtime="20201117 14:41:33.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.791" endtime="20201117 14:41:33.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.488" endtime="20201117 14:41:33.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.486" endtime="20201117 14:41:33.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.798" level="INFO">${RESULT} = [{'time': 0.022670333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.501400000000213e-05, 'source_diff': 6.501400000000213e-05}, {'time': 0.022751347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.795" endtime="20201117 14:41:33.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.812" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:33.799" endtime="20201117 14:41:33.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.817" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.816" endtime="20201117 14:41:33.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.819" level="INFO">VALUE: [6.501400000000213e-05, 6.550000000000306e-05, 6.516599999999845e-05, 6.53890000000025e-05, 6.487499999999896e-05, 6.451400000000163e-05, 6.532000000000066e-05, 6.504200000000127e-05, 6.52639999999989e-05, 6.4583e-05, 6.459700000000304e-05, 6.462500000000218e-05, 6.542999999999827e-05, 6.465299999999785e-05, 6.461199999999861e-05, 6.537499999999946e-05, 6.54440000000013e-05, 6.520800000000063e-05, 6.454099999999782e-05, 6.497199999999995e-05, 6.487500000000243e-05, 6.534700000000032e-05, 6.484699999999982e-05, 6.473600000000274e-05, 6.516699999999792e-05, 6.536099999999989e-05, 6.549999999999959e-05, 6.511099999999964e-05, 6.529199999999805e-05, 6.494499999999681e-05, 6.4889000000002e-05, 6.53479999999998e-05, 6.540199999999913e-05, 6.456900000000043e-05, 6.492999999999777e-05, 6.540199999999913e-05, 6.479099999999807e-05, 6.530500000000161e-05, 6.499999999999909e-05, 6.538899999999903e-05, 6.468100000000046e-05, 6.52220000000002e-05, 6.498599999999952e-05, 6.480600000000059e-05, 6.541699999999817e-05, 6.494500000000028e-05, 6.54029999999986e-05, 6.480499999999764e-05, 6.527700000000247e-05, 6.497199999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.818" endtime="20201117 14:41:33.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.813" endtime="20201117 14:41:33.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.823" endtime="20201117 14:41:33.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.827" endtime="20201117 14:41:33.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.825" endtime="20201117 14:41:33.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.821" endtime="20201117 14:41:33.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.451" endtime="20201117 14:41:33.847"></status>
</kw>
<msg timestamp="20201117 14:41:33.848" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.856" endtime="20201117 14:41:33.876"></status>
</kw>
<msg timestamp="20201117 14:41:33.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.855" endtime="20201117 14:41:33.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.878" endtime="20201117 14:41:33.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.880" endtime="20201117 14:41:33.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.852" endtime="20201117 14:41:33.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.850" endtime="20201117 14:41:33.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.891" endtime="20201117 14:41:34.177"></status>
</kw>
<msg timestamp="20201117 14:41:34.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020031306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020095958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.889" endtime="20201117 14:41:34.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020031306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020095958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.181" endtime="20201117 14:41:34.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.190" endtime="20201117 14:41:34.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.886" endtime="20201117 14:41:34.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.885" endtime="20201117 14:41:34.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.197" level="INFO">${RESULT} = [{'time': 0.020095958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.465200000000185e-05, 'source_diff': 6.465200000000185e-05}, {'time': 0.020174958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.193" endtime="20201117 14:41:34.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:34.198" endtime="20201117 14:41:34.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.215" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.214" endtime="20201117 14:41:34.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.218" level="INFO">VALUE: [6.465200000000185e-05, 6.519400000000106e-05, 6.497199999999995e-05, 6.519400000000106e-05, 6.531900000000118e-05, 6.502799999999823e-05, 6.509700000000007e-05, 6.537499999999946e-05, 6.512499999999921e-05, 6.505600000000084e-05, 6.466700000000089e-05, 6.459699999999957e-05, 6.548600000000002e-05, 6.483300000000025e-05, 6.513800000000278e-05, 6.519400000000106e-05, 6.516700000000139e-05, 6.524999999999934e-05, 6.484699999999982e-05, 6.519400000000106e-05, 6.491600000000167e-05, 6.483300000000025e-05, 6.493000000000124e-05, 6.466700000000089e-05, 6.455600000000034e-05, 6.534700000000032e-05, 6.527800000000195e-05, 6.497199999999995e-05, 6.477799999999798e-05, 6.474999999999884e-05, 6.468100000000046e-05, 6.523599999999977e-05, 6.537499999999946e-05, 6.479200000000102e-05, 6.551399999999916e-05, 6.515300000000182e-05, 6.4583e-05, 6.480500000000111e-05, 6.537499999999946e-05, 6.499999999999909e-05, 6.530600000000109e-05, 6.492999999999777e-05, 6.499999999999909e-05, 6.468100000000046e-05, 6.504200000000127e-05, 6.469500000000003e-05, 6.468100000000046e-05, 6.491699999999767e-05, 6.509700000000007e-05, 6.466699999999742e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.216" endtime="20201117 14:41:34.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.211" endtime="20201117 14:41:34.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.221" endtime="20201117 14:41:34.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.225" endtime="20201117 14:41:34.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.223" endtime="20201117 14:41:34.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.220" endtime="20201117 14:41:34.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.848" endtime="20201117 14:41:34.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.449" endtime="20201117 14:41:34.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.449" endtime="20201117 14:41:34.246"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.249" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.257" endtime="20201117 14:41:34.278"></status>
</kw>
<msg timestamp="20201117 14:41:34.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.256" endtime="20201117 14:41:34.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.279" endtime="20201117 14:41:34.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.282" endtime="20201117 14:41:34.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.253" endtime="20201117 14:41:34.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.251" endtime="20201117 14:41:34.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.291" endtime="20201117 14:41:34.577"></status>
</kw>
<msg timestamp="20201117 14:41:34.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02338875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:34.290" endtime="20201117 14:41:34.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02338875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:34.581" endtime="20201117 14:41:34.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.590" endtime="20201117 14:41:34.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.287" endtime="20201117 14:41:34.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.285" endtime="20201117 14:41:34.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.597" level="INFO">${RESULT} = [{'time': 0.023454556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.580600000000159e-05, 'source_diff': 6.580600000000159e-05}, {'time': 0.023533528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.593" endtime="20201117 14:41:34.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:34.598" endtime="20201117 14:41:34.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.617" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.616" endtime="20201117 14:41:34.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.620" level="INFO">VALUE: [6.580600000000159e-05, 6.587499999999996e-05, 6.611100000000064e-05, 6.60700000000014e-05, 6.629199999999905e-05, 6.574999999999984e-05, 6.570800000000113e-05, 6.625000000000034e-05, 6.641600000000317e-05, 6.631899999999871e-05, 6.606900000000193e-05, 6.581899999999821e-05, 6.612500000000021e-05, 6.587499999999996e-05, 6.599999999999662e-05, 6.552799999999873e-05, 6.55419999999983e-05, 6.579200000000202e-05, 6.57220000000007e-05, 6.57359999999968e-05, 6.586100000000039e-05, 6.609700000000107e-05, 6.611200000000012e-05, 6.648600000000102e-05, 6.59440000000018e-05, 6.60280000000027e-05, 6.633299999999828e-05, 6.562499999999971e-05, 6.562499999999971e-05, 6.590199999999963e-05, 6.59029999999991e-05, 6.62639999999999e-05, 6.5583000000001e-05, 6.629199999999905e-05, 6.637500000000046e-05, 6.608400000000098e-05, 6.566699999999842e-05, 6.604099999999932e-05, 6.552799999999873e-05, 6.604200000000227e-05, 6.567999999999852e-05, 6.561100000000014e-05, 6.605499999999889e-05, 6.619400000000206e-05, 6.568100000000146e-05, 6.652799999999973e-05, 6.57500000000033e-05, 6.629099999999957e-05, 6.613900000000325e-05, 6.64159999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.618" endtime="20201117 14:41:34.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.613" endtime="20201117 14:41:34.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.623" endtime="20201117 14:41:34.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.631" endtime="20201117 14:41:34.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.629" endtime="20201117 14:41:34.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.621" endtime="20201117 14:41:34.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.249" endtime="20201117 14:41:34.652"></status>
</kw>
<msg timestamp="20201117 14:41:34.653" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.661" endtime="20201117 14:41:34.682"></status>
</kw>
<msg timestamp="20201117 14:41:34.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.660" endtime="20201117 14:41:34.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.684" endtime="20201117 14:41:34.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.687" endtime="20201117 14:41:34.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.657" endtime="20201117 14:41:34.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.655" endtime="20201117 14:41:34.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.699" endtime="20201117 14:41:34.985"></status>
</kw>
<msg timestamp="20201117 14:41:34.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.697" endtime="20201117 14:41:34.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.989" endtime="20201117 14:41:34.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.998" endtime="20201117 14:41:35.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.694" endtime="20201117 14:41:35.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.692" endtime="20201117 14:41:35.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.005" level="INFO">${RESULT} = [{'time': 0.020313806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.637500000000046e-05, 'source_diff': 6.637500000000046e-05}, {'time': 0.020392861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.001" endtime="20201117 14:41:35.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.019" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:35.006" endtime="20201117 14:41:35.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.024" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.023" endtime="20201117 14:41:35.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.026" level="INFO">VALUE: [6.637500000000046e-05, 6.598600000000052e-05, 6.586100000000039e-05, 6.648600000000102e-05, 6.611100000000064e-05, 6.62359999999973e-05, 6.57229999999967e-05, 6.570800000000113e-05, 6.600000000000009e-05, 6.62639999999999e-05, 6.598600000000052e-05, 6.559700000000057e-05, 6.633299999999828e-05, 6.563899999999928e-05, 6.601399999999966e-05, 6.555600000000134e-05, 6.644399999999884e-05, 6.59440000000018e-05, 6.581900000000168e-05, 6.592999999999877e-05, 6.636100000000089e-05, 6.562499999999971e-05, 6.595799999999791e-05, 6.605500000000236e-05, 6.580499999999864e-05, 6.561100000000014e-05, 6.609700000000107e-05, 6.587499999999996e-05, 6.619499999999806e-05, 6.562499999999971e-05, 6.57359999999968e-05, 6.630599999999862e-05, 6.597200000000095e-05, 6.609700000000107e-05, 6.619400000000206e-05, 6.554200000000177e-05, 6.602799999999923e-05, 6.573600000000027e-05, 6.586100000000039e-05, 6.594399999999834e-05, 6.561100000000014e-05, 6.613899999999978e-05, 6.645800000000188e-05, 6.598600000000052e-05, 6.647199999999798e-05, 6.563899999999928e-05, 6.598600000000052e-05, 6.554200000000177e-05, 6.591700000000214e-05, 6.619500000000153e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.025" endtime="20201117 14:41:35.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.020" endtime="20201117 14:41:35.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.030" endtime="20201117 14:41:35.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.033" endtime="20201117 14:41:35.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.032" endtime="20201117 14:41:35.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.028" endtime="20201117 14:41:35.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.653" endtime="20201117 14:41:35.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.247" endtime="20201117 14:41:35.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.247" endtime="20201117 14:41:35.054"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.057" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.065" endtime="20201117 14:41:35.085"></status>
</kw>
<msg timestamp="20201117 14:41:35.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.064" endtime="20201117 14:41:35.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.086" endtime="20201117 14:41:35.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.089" endtime="20201117 14:41:35.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.061" endtime="20201117 14:41:35.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.059" endtime="20201117 14:41:35.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.099" endtime="20201117 14:41:35.385"></status>
</kw>
<msg timestamp="20201117 14:41:35.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.098" endtime="20201117 14:41:35.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.389" endtime="20201117 14:41:35.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.397" endtime="20201117 14:41:35.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.095" endtime="20201117 14:41:35.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.093" endtime="20201117 14:41:35.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.405" level="INFO">${RESULT} = [{'time': 0.022579694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667999999999952e-05, 'source_diff': 6.667999999999952e-05}, {'time': 0.022663694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.401" endtime="20201117 14:41:35.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:35.406" endtime="20201117 14:41:35.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.423" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.422" endtime="20201117 14:41:35.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.426" level="INFO">VALUE: [6.667999999999952e-05, 6.748600000000202e-05, 6.752800000000073e-05, 6.697200000000195e-05, 6.686099999999792e-05, 6.681899999999921e-05, 6.709700000000207e-05, 6.686100000000139e-05, 6.698600000000152e-05, 6.668099999999899e-05, 6.686100000000139e-05, 6.691699999999967e-05, 6.687499999999749e-05, 6.665299999999985e-05, 6.692999999999977e-05, 6.65419999999993e-05, 6.663800000000081e-05, 6.670899999999813e-05, 6.666599999999995e-05, 6.681900000000268e-05, 6.726399999999744e-05, 6.744399999999984e-05, 6.737500000000146e-05, 6.687500000000096e-05, 6.718100000000296e-05, 6.654200000000277e-05, 6.65419999999993e-05, 6.699999999999762e-05, 6.679199999999955e-05, 6.738899999999756e-05, 6.67359999999978e-05, 6.736200000000137e-05, 6.741700000000017e-05, 6.730500000000014e-05, 6.68480000000013e-05, 6.719399999999959e-05, 6.748599999999855e-05, 6.736099999999842e-05, 6.687500000000096e-05, 6.681900000000268e-05, 6.738899999999756e-05, 6.65969999999981e-05, 6.680599999999912e-05, 6.744499999999931e-05, 6.748600000000202e-05, 6.683399999999826e-05, 6.670899999999813e-05, 6.720899999999863e-05, 6.73619999999979e-05, 6.661100000000114e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.424" endtime="20201117 14:41:35.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.420" endtime="20201117 14:41:35.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.429" endtime="20201117 14:41:35.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.433" endtime="20201117 14:41:35.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.431" endtime="20201117 14:41:35.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.427" endtime="20201117 14:41:35.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.058" endtime="20201117 14:41:35.454"></status>
</kw>
<msg timestamp="20201117 14:41:35.454" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.463" endtime="20201117 14:41:35.482"></status>
</kw>
<msg timestamp="20201117 14:41:35.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.462" endtime="20201117 14:41:35.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.484" endtime="20201117 14:41:35.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.486" endtime="20201117 14:41:35.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.459" endtime="20201117 14:41:35.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.456" endtime="20201117 14:41:35.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.497" endtime="20201117 14:41:35.782"></status>
</kw>
<msg timestamp="20201117 14:41:35.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.495" endtime="20201117 14:41:35.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020809125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.786" endtime="20201117 14:41:35.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.799" endtime="20201117 14:41:35.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.492" endtime="20201117 14:41:35.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.491" endtime="20201117 14:41:35.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.806" level="INFO">${RESULT} = [{'time': 0.020876028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.69030000000001e-05, 'source_diff': 6.69030000000001e-05}, {'time': 0.020959028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:35.803" endtime="20201117 14:41:35.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:35.807" endtime="20201117 14:41:35.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.825" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.824" endtime="20201117 14:41:35.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.827" level="INFO">VALUE: [6.69030000000001e-05, 6.673600000000127e-05, 6.701400000000066e-05, 6.709799999999808e-05, 6.725000000000134e-05, 6.666699999999942e-05, 6.655499999999939e-05, 6.659700000000157e-05, 6.655499999999939e-05, 6.679199999999955e-05, 6.747199999999898e-05, 6.669399999999909e-05, 6.748599999999855e-05, 6.681899999999921e-05, 6.680600000000259e-05, 6.705599999999937e-05, 6.681999999999869e-05, 6.736100000000189e-05, 6.744499999999931e-05, 6.668100000000246e-05, 6.655599999999887e-05, 6.67359999999978e-05, 6.718099999999949e-05, 6.666599999999995e-05, 6.69030000000001e-05, 6.724999999999787e-05, 6.734699999999885e-05, 6.723600000000177e-05, 6.692999999999977e-05, 6.670800000000213e-05, 6.67220000000017e-05, 6.725000000000134e-05, 6.713899999999731e-05, 6.686099999999792e-05, 6.659700000000157e-05, 6.713899999999731e-05, 6.679199999999955e-05, 6.692999999999977e-05, 6.72359999999983e-05, 6.655599999999887e-05, 6.698599999999805e-05, 6.712499999999774e-05, 6.716600000000045e-05, 6.698599999999805e-05, 6.655500000000286e-05, 6.723600000000177e-05, 6.72359999999983e-05, 6.698599999999805e-05, 6.686099999999792e-05, 6.730599999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.826" endtime="20201117 14:41:35.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.821" endtime="20201117 14:41:35.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.831" endtime="20201117 14:41:35.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.834" endtime="20201117 14:41:35.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.833" endtime="20201117 14:41:35.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.829" endtime="20201117 14:41:35.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.455" endtime="20201117 14:41:35.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.056" endtime="20201117 14:41:35.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.055" endtime="20201117 14:41:35.855"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.858" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.866" endtime="20201117 14:41:35.886"></status>
</kw>
<msg timestamp="20201117 14:41:35.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.865" endtime="20201117 14:41:35.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.888" endtime="20201117 14:41:35.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.890" endtime="20201117 14:41:35.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.862" endtime="20201117 14:41:35.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.860" endtime="20201117 14:41:35.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.900" endtime="20201117 14:41:36.186"></status>
</kw>
<msg timestamp="20201117 14:41:36.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.899" endtime="20201117 14:41:36.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.191" endtime="20201117 14:41:36.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.199" endtime="20201117 14:41:36.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.895" endtime="20201117 14:41:36.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.894" endtime="20201117 14:41:36.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.206" level="INFO">${RESULT} = [{'time': 0.023354611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.797199999999948e-05, 'source_diff': 6.797199999999948e-05}, {'time': 0.023437694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.203" endtime="20201117 14:41:36.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.221" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:36.207" endtime="20201117 14:41:36.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.226" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.225" endtime="20201117 14:41:36.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.228" level="INFO">VALUE: [6.797199999999948e-05, 6.783299999999978e-05, 6.829199999999758e-05, 6.811100000000264e-05, 6.813899999999831e-05, 6.762500000000171e-05, 6.829200000000105e-05, 6.793100000000024e-05, 6.823699999999877e-05, 6.794400000000034e-05, 6.836099999999942e-05, 6.794400000000034e-05, 6.815300000000135e-05, 6.801400000000166e-05, 6.793000000000077e-05, 6.79030000000011e-05, 6.784699999999935e-05, 6.843100000000074e-05, 6.781900000000021e-05, 6.813899999999831e-05, 6.830599999999715e-05, 6.813900000000178e-05, 6.816700000000092e-05, 6.822199999999973e-05, 6.793100000000024e-05, 6.84169999999977e-05, 6.797300000000242e-05, 6.783299999999978e-05, 6.819400000000059e-05, 6.847199999999998e-05, 6.780500000000064e-05, 6.830499999999767e-05, 6.770799999999966e-05, 6.806900000000046e-05, 6.844399999999737e-05, 6.784700000000282e-05, 6.780600000000012e-05, 6.816700000000092e-05, 6.779199999999708e-05, 6.763900000000128e-05, 6.770899999999913e-05, 6.829200000000105e-05, 6.827699999999853e-05, 6.836200000000237e-05, 6.762500000000171e-05, 6.790200000000163e-05, 6.812499999999874e-05, 6.798599999999905e-05, 6.817999999999755e-05, 6.822199999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.227" endtime="20201117 14:41:36.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.222" endtime="20201117 14:41:36.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.232" endtime="20201117 14:41:36.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.235" endtime="20201117 14:41:36.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.234" endtime="20201117 14:41:36.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.230" endtime="20201117 14:41:36.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.858" endtime="20201117 14:41:36.256"></status>
</kw>
<msg timestamp="20201117 14:41:36.256" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.265" endtime="20201117 14:41:36.284"></status>
</kw>
<msg timestamp="20201117 14:41:36.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.263" endtime="20201117 14:41:36.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.285" endtime="20201117 14:41:36.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.288" endtime="20201117 14:41:36.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.260" endtime="20201117 14:41:36.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.258" endtime="20201117 14:41:36.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.299" endtime="20201117 14:41:36.586"></status>
</kw>
<msg timestamp="20201117 14:41:36.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.297" endtime="20201117 14:41:36.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.590" endtime="20201117 14:41:36.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.599" endtime="20201117 14:41:36.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.295" endtime="20201117 14:41:36.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.293" endtime="20201117 14:41:36.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.606" level="INFO">${RESULT} = [{'time': 0.019974986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.777800000000098e-05, 'source_diff': 6.777800000000098e-05}, {'time': 0.020058, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:36.602" endtime="20201117 14:41:36.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.619" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:36.607" endtime="20201117 14:41:36.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.624" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.623" endtime="20201117 14:41:36.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.627" level="INFO">VALUE: [6.777800000000098e-05, 6.818100000000049e-05, 6.850000000000259e-05, 6.755599999999987e-05, 6.805600000000037e-05, 6.830600000000062e-05, 6.844500000000031e-05, 6.758299999999953e-05, 6.795799999999991e-05, 6.763899999999781e-05, 6.769400000000009e-05, 6.838899999999856e-05, 6.801399999999819e-05, 6.773600000000227e-05, 6.765200000000138e-05, 6.830600000000062e-05, 6.79299999999973e-05, 6.823600000000277e-05, 6.761100000000214e-05, 6.820800000000016e-05, 6.786099999999892e-05, 6.819400000000059e-05, 6.825000000000234e-05, 6.765299999999738e-05, 6.818099999999702e-05, 6.832000000000019e-05, 6.793100000000024e-05, 6.811100000000264e-05, 6.784700000000282e-05, 6.756899999999996e-05, 6.798600000000252e-05, 6.849999999999912e-05, 6.831900000000071e-05, 6.848599999999955e-05, 6.806899999999699e-05, 6.77359999999988e-05, 6.798600000000252e-05, 6.818099999999702e-05, 6.763900000000128e-05, 6.761099999999867e-05, 6.780600000000012e-05, 6.802800000000123e-05, 6.822300000000267e-05, 6.77229999999987e-05, 6.812499999999874e-05, 6.834699999999985e-05, 6.791599999999773e-05, 6.841599999999823e-05, 6.765200000000138e-05, 6.84160000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.625" endtime="20201117 14:41:36.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.620" endtime="20201117 14:41:36.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.630" endtime="20201117 14:41:36.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.633" endtime="20201117 14:41:36.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.632" endtime="20201117 14:41:36.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.628" endtime="20201117 14:41:36.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.257" endtime="20201117 14:41:36.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.857" endtime="20201117 14:41:36.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.856" endtime="20201117 14:41:36.655"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.657" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.666" endtime="20201117 14:41:36.686"></status>
</kw>
<msg timestamp="20201117 14:41:36.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.665" endtime="20201117 14:41:36.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.687" endtime="20201117 14:41:36.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.690" endtime="20201117 14:41:36.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.661" endtime="20201117 14:41:36.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.659" endtime="20201117 14:41:36.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.699" endtime="20201117 14:41:36.985"></status>
</kw>
<msg timestamp="20201117 14:41:36.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.698" endtime="20201117 14:41:36.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.989" endtime="20201117 14:41:36.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.998" endtime="20201117 14:41:37.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.695" endtime="20201117 14:41:37.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.693" endtime="20201117 14:41:37.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.005" level="INFO">${RESULT} = [{'time': 0.023090069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.872200000000023e-05, 'source_diff': 6.872200000000023e-05}, {'time': 0.023172083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.001" endtime="20201117 14:41:37.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.019" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:37.006" endtime="20201117 14:41:37.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.023" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.022" endtime="20201117 14:41:37.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.026" level="INFO">VALUE: [6.872200000000023e-05, 6.869400000000109e-05, 6.906999999999747e-05, 6.948600000000055e-05, 6.934700000000085e-05, 6.897200000000048e-05, 6.934700000000085e-05, 6.930600000000162e-05, 6.880599999999765e-05, 6.919499999999759e-05, 6.85559999999974e-05, 6.894500000000081e-05, 6.862499999999924e-05, 6.93619999999999e-05, 6.929199999999858e-05, 6.923699999999977e-05, 6.906899999999799e-05, 6.930499999999867e-05, 6.861099999999967e-05, 6.849999999999912e-05, 6.879199999999808e-05, 6.901399999999919e-05, 6.950000000000012e-05, 6.936100000000042e-05, 6.898600000000005e-05, 6.929200000000205e-05, 6.950000000000012e-05, 6.92360000000003e-05, 6.893100000000124e-05, 6.937499999999999e-05, 6.90420000000018e-05, 6.862499999999924e-05, 6.883400000000026e-05, 6.933300000000128e-05, 6.926399999999944e-05, 6.944400000000184e-05, 6.940299999999913e-05, 6.948600000000055e-05, 6.905600000000137e-05, 6.855500000000139e-05, 6.874999999999937e-05, 6.884700000000035e-05, 6.919500000000106e-05, 6.912499999999974e-05, 6.929199999999858e-05, 6.891700000000167e-05, 6.884799999999983e-05, 6.936100000000042e-05, 6.938800000000009e-05, 6.855499999999792e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.025" endtime="20201117 14:41:37.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.020" endtime="20201117 14:41:37.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.029" endtime="20201117 14:41:37.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.033" endtime="20201117 14:41:37.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.031" endtime="20201117 14:41:37.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.028" endtime="20201117 14:41:37.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.658" endtime="20201117 14:41:37.054"></status>
</kw>
<msg timestamp="20201117 14:41:37.054" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.063" endtime="20201117 14:41:37.083"></status>
</kw>
<msg timestamp="20201117 14:41:37.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.061" endtime="20201117 14:41:37.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.085" endtime="20201117 14:41:37.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.088" endtime="20201117 14:41:37.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.059" endtime="20201117 14:41:37.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.057" endtime="20201117 14:41:37.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.098" endtime="20201117 14:41:37.384"></status>
</kw>
<msg timestamp="20201117 14:41:37.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:37.096" endtime="20201117 14:41:37.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:37.388" endtime="20201117 14:41:37.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.397" endtime="20201117 14:41:37.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.094" endtime="20201117 14:41:37.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.092" endtime="20201117 14:41:37.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.404" level="INFO">${RESULT} = [{'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.938899999999956e-05, 'source_diff': 6.938899999999956e-05}, {'time': 0.020582403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.400" endtime="20201117 14:41:37.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:37.405" endtime="20201117 14:41:37.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.422" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.421" endtime="20201117 14:41:37.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.425" level="INFO">VALUE: [6.938899999999956e-05, 6.865299999999838e-05, 6.898600000000005e-05, 6.883299999999731e-05, 6.922200000000073e-05, 6.90970000000006e-05, 6.898600000000005e-05, 6.868100000000099e-05, 6.909800000000008e-05, 6.912499999999974e-05, 6.8584e-05, 6.901400000000266e-05, 6.85970000000001e-05, 6.90970000000006e-05, 6.887499999999949e-05, 6.866700000000142e-05, 6.866699999999795e-05, 6.87359999999998e-05, 6.944399999999837e-05, 6.901399999999919e-05, 6.904199999999833e-05, 6.893100000000124e-05, 6.866699999999795e-05, 6.85559999999974e-05, 6.861099999999967e-05, 6.899999999999962e-05, 6.932000000000119e-05, 6.905500000000189e-05, 6.941599999999923e-05, 6.869400000000109e-05, 6.918000000000202e-05, 6.906900000000146e-05, 6.905500000000189e-05, 6.899999999999962e-05, 6.919499999999759e-05, 6.938899999999956e-05, 6.861099999999967e-05, 6.855600000000087e-05, 6.913899999999931e-05, 6.927800000000248e-05, 6.913899999999931e-05, 6.898699999999952e-05, 6.861099999999967e-05, 6.897299999999995e-05, 6.92909999999991e-05, 6.901399999999919e-05, 6.936099999999695e-05, 6.918000000000202e-05, 6.905499999999842e-05, 6.941700000000217e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.423" endtime="20201117 14:41:37.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.418" endtime="20201117 14:41:37.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.428" endtime="20201117 14:41:37.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.432" endtime="20201117 14:41:37.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.430" endtime="20201117 14:41:37.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.426" endtime="20201117 14:41:37.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.055" endtime="20201117 14:41:37.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.656" endtime="20201117 14:41:37.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.655" endtime="20201117 14:41:37.453"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.456" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.464" endtime="20201117 14:41:37.485"></status>
</kw>
<msg timestamp="20201117 14:41:37.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.463" endtime="20201117 14:41:37.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.487" endtime="20201117 14:41:37.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.490" endtime="20201117 14:41:37.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.460" endtime="20201117 14:41:37.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.458" endtime="20201117 14:41:37.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.499" endtime="20201117 14:41:37.784"></status>
</kw>
<msg timestamp="20201117 14:41:37.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023526833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023596972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.497" endtime="20201117 14:41:37.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023526833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023596972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.788" endtime="20201117 14:41:37.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.797" endtime="20201117 14:41:37.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.495" endtime="20201117 14:41:37.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.493" endtime="20201117 14:41:37.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.804" level="INFO">${RESULT} = [{'time': 0.023596972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013900000000031e-05, 'source_diff': 7.013900000000031e-05}, {'time': 0.023681986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.800" endtime="20201117 14:41:37.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.819" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:37.805" endtime="20201117 14:41:37.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.824" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.823" endtime="20201117 14:41:37.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.826" level="INFO">VALUE: [7.013900000000031e-05, 6.976399999999994e-05, 7.027800000000001e-05, 7.036099999999795e-05, 7.034800000000133e-05, 7.025000000000087e-05, 6.968100000000199e-05, 6.959800000000058e-05, 7.00840000000015e-05, 7.044499999999884e-05, 7.009699999999813e-05, 6.977800000000298e-05, 7.047299999999798e-05, 7.048600000000155e-05, 6.99299999999993e-05, 7.027700000000053e-05, 7.026399999999697e-05, 7.005499999999942e-05, 6.987500000000049e-05, 6.997199999999801e-05, 7.04169999999997e-05, 7.048599999999808e-05, 7.044499999999884e-05, 6.977799999999951e-05, 7.037500000000099e-05, 6.99169999999992e-05, 6.99169999999992e-05, 7.045900000000188e-05, 7.04169999999997e-05, 6.991599999999973e-05, 7.037500000000099e-05, 7.022200000000173e-05, 7.000000000000062e-05, 7.026400000000044e-05, 7.000000000000062e-05, 6.962500000000024e-05, 7.020799999999869e-05, 7.005600000000237e-05, 7.016699999999945e-05, 7.005600000000237e-05, 6.97360000000008e-05, 6.968100000000199e-05, 7.015299999999988e-05, 7.034699999999838e-05, 7.026300000000096e-05, 7.051399999999722e-05, 6.961200000000015e-05, 6.975000000000037e-05, 6.998600000000105e-05, 6.965199999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.825" endtime="20201117 14:41:37.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.820" endtime="20201117 14:41:37.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.830" endtime="20201117 14:41:37.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.833" endtime="20201117 14:41:37.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.832" endtime="20201117 14:41:37.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.828" endtime="20201117 14:41:37.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.456" endtime="20201117 14:41:37.854"></status>
</kw>
<msg timestamp="20201117 14:41:37.855" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.863" endtime="20201117 14:41:37.883"></status>
</kw>
<msg timestamp="20201117 14:41:37.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.861" endtime="20201117 14:41:37.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.884" endtime="20201117 14:41:37.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.887" endtime="20201117 14:41:37.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.859" endtime="20201117 14:41:37.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.857" endtime="20201117 14:41:37.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.897" endtime="20201117 14:41:38.183"></status>
</kw>
<msg timestamp="20201117 14:41:38.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.896" endtime="20201117 14:41:38.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.188" endtime="20201117 14:41:38.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.196" endtime="20201117 14:41:38.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.893" endtime="20201117 14:41:38.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.891" endtime="20201117 14:41:38.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.203" level="INFO">${RESULT} = [{'time': 0.019935542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.961100000000067e-05, 'source_diff': 6.961100000000067e-05}, {'time': 0.020019556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.200" endtime="20201117 14:41:38.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:38.204" endtime="20201117 14:41:38.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.222" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.220" endtime="20201117 14:41:38.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.224" level="INFO">VALUE: [6.961100000000067e-05, 7.007000000000194e-05, 7.037500000000099e-05, 6.954199999999883e-05, 6.951399999999969e-05, 6.984700000000135e-05, 7.030499999999967e-05, 6.956900000000196e-05, 7.005500000000289e-05, 6.980499999999917e-05, 7.002799999999976e-05, 7.04299999999998e-05, 7.026400000000044e-05, 6.997200000000148e-05, 6.969499999999809e-05, 7.019399999999912e-05, 6.950000000000012e-05, 6.961100000000067e-05, 7.012500000000074e-05, 7.00420000000028e-05, 7.04169999999997e-05, 6.952699999999978e-05, 6.954099999999935e-05, 7.009699999999813e-05, 7.04299999999998e-05, 6.991700000000267e-05, 7.005499999999942e-05, 6.954199999999883e-05, 6.95970000000011e-05, 7.050000000000112e-05, 6.947200000000098e-05, 6.970900000000113e-05, 6.993100000000224e-05, 6.976399999999994e-05, 6.95559999999984e-05, 6.986100000000092e-05, 6.966599999999948e-05, 6.95420000000023e-05, 6.976399999999994e-05, 7.025000000000087e-05, 6.984700000000135e-05, 7.025000000000087e-05, 6.961100000000067e-05, 6.980599999999865e-05, 6.975000000000037e-05, 7.019499999999859e-05, 7.032000000000219e-05, 7.011100000000117e-05, 7.00559999999989e-05, 6.988900000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.223" endtime="20201117 14:41:38.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.218" endtime="20201117 14:41:38.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.228" endtime="20201117 14:41:38.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.231" endtime="20201117 14:41:38.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.230" endtime="20201117 14:41:38.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.226" endtime="20201117 14:41:38.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.855" endtime="20201117 14:41:38.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.455" endtime="20201117 14:41:38.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.454" endtime="20201117 14:41:38.253"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.255" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.264" endtime="20201117 14:41:38.283"></status>
</kw>
<msg timestamp="20201117 14:41:38.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.262" endtime="20201117 14:41:38.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.285" endtime="20201117 14:41:38.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.287" endtime="20201117 14:41:38.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.259" endtime="20201117 14:41:38.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.257" endtime="20201117 14:41:38.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.297" endtime="20201117 14:41:38.583"></status>
</kw>
<msg timestamp="20201117 14:41:38.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.295" endtime="20201117 14:41:38.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.587" endtime="20201117 14:41:38.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.596" endtime="20201117 14:41:38.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.292" endtime="20201117 14:41:38.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.291" endtime="20201117 14:41:38.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.603" level="INFO">${RESULT} = [{'time': 0.022673292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.063900000000081e-05, 'source_diff': 7.063900000000081e-05}, {'time': 0.022757292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.599" endtime="20201117 14:41:38.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.616" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:38.604" endtime="20201117 14:41:38.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.621" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.620" endtime="20201117 14:41:38.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.624" level="INFO">VALUE: [7.063900000000081e-05, 7.129199999999711e-05, 7.1069e-05, 7.072299999999823e-05, 7.118000000000055e-05, 7.144400000000037e-05, 7.116599999999751e-05, 7.087499999999802e-05, 7.052800000000026e-05, 7.08049999999967e-05, 7.148599999999908e-05, 7.113899999999784e-05, 7.061100000000167e-05, 7.101400000000119e-05, 7.106999999999947e-05, 7.130500000000067e-05, 7.058399999999854e-05, 7.076400000000094e-05, 7.05970000000021e-05, 7.116600000000098e-05, 7.087499999999802e-05, 7.077800000000051e-05, 7.080500000000017e-05, 7.051300000000121e-05, 7.15560000000004e-05, 7.118000000000055e-05, 7.14439999999969e-05, 7.111199999999818e-05, 7.066699999999995e-05, 7.102800000000076e-05, 7.05559999999994e-05, 7.094500000000281e-05, 7.066699999999995e-05, 7.069500000000256e-05, 7.054199999999983e-05, 7.063900000000081e-05, 7.131999999999972e-05, 7.065300000000038e-05, 7.055499999999992e-05, 7.05689999999995e-05, 7.12910000000011e-05, 7.088899999999759e-05, 7.059699999999863e-05, 7.081899999999974e-05, 7.145799999999994e-05, 7.105500000000042e-05, 7.094399999999987e-05, 7.125000000000187e-05, 7.093099999999977e-05, 7.066699999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.622" endtime="20201117 14:41:38.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.617" endtime="20201117 14:41:38.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.627" endtime="20201117 14:41:38.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.631" endtime="20201117 14:41:38.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.629" endtime="20201117 14:41:38.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.626" endtime="20201117 14:41:38.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.256" endtime="20201117 14:41:38.652"></status>
</kw>
<msg timestamp="20201117 14:41:38.652" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.660" endtime="20201117 14:41:38.679"></status>
</kw>
<msg timestamp="20201117 14:41:38.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.659" endtime="20201117 14:41:38.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.681" endtime="20201117 14:41:38.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.684" endtime="20201117 14:41:38.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.656" endtime="20201117 14:41:38.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.654" endtime="20201117 14:41:38.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.694" endtime="20201117 14:41:38.980"></status>
</kw>
<msg timestamp="20201117 14:41:38.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.692" endtime="20201117 14:41:38.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.984" endtime="20201117 14:41:38.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.993" endtime="20201117 14:41:38.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.690" endtime="20201117 14:41:38.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.688" endtime="20201117 14:41:38.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.999" level="INFO">${RESULT} = [{'time': 0.020013069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.063800000000134e-05, 'source_diff': 7.063800000000134e-05}, {'time': 0.020098097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.996" endtime="20201117 14:41:39.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.013" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:39.001" endtime="20201117 14:41:39.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.018" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.017" endtime="20201117 14:41:39.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.021" level="INFO">VALUE: [7.063800000000134e-05, 7.148599999999908e-05, 7.073599999999833e-05, 7.108299999999956e-05, 7.101399999999772e-05, 7.123599999999883e-05, 7.061200000000115e-05, 7.06109999999982e-05, 7.136099999999895e-05, 7.05559999999994e-05, 7.094499999999934e-05, 7.059699999999863e-05, 7.094499999999934e-05, 7.07230000000017e-05, 7.088799999999812e-05, 7.094399999999987e-05, 7.068099999999952e-05, 7.112500000000174e-05, 7.094399999999987e-05, 7.066600000000048e-05, 7.063900000000081e-05, 7.112499999999827e-05, 7.119400000000012e-05, 7.079200000000008e-05, 7.154200000000083e-05, 7.136099999999895e-05, 7.086100000000192e-05, 7.127800000000101e-05, 7.086100000000192e-05, 7.087500000000149e-05, 7.143100000000027e-05, 7.127799999999754e-05, 7.059699999999863e-05, 7.07360000000018e-05, 7.15560000000004e-05, 7.068000000000005e-05, 7.149999999999865e-05, 7.094399999999987e-05, 7.120799999999969e-05, 7.069399999999962e-05, 7.119400000000012e-05, 7.086099999999845e-05, 7.065300000000038e-05, 7.07499999999979e-05, 7.06109999999982e-05, 7.118100000000002e-05, 7.097200000000248e-05, 7.05559999999994e-05, 7.057000000000244e-05, 7.134699999999938e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.020" endtime="20201117 14:41:39.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.015" endtime="20201117 14:41:39.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.024" endtime="20201117 14:41:39.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.028" endtime="20201117 14:41:39.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.026" endtime="20201117 14:41:39.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.023" endtime="20201117 14:41:39.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.653" endtime="20201117 14:41:39.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.254" endtime="20201117 14:41:39.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.253" endtime="20201117 14:41:39.049"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.051" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.060" endtime="20201117 14:41:39.081"></status>
</kw>
<msg timestamp="20201117 14:41:39.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.058" endtime="20201117 14:41:39.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.083" endtime="20201117 14:41:39.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.085" endtime="20201117 14:41:39.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.056" endtime="20201117 14:41:39.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.054" endtime="20201117 14:41:39.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.095" endtime="20201117 14:41:39.381"></status>
</kw>
<msg timestamp="20201117 14:41:39.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:39.093" endtime="20201117 14:41:39.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:39.386" endtime="20201117 14:41:39.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.394" endtime="20201117 14:41:39.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.090" endtime="20201117 14:41:39.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.088" endtime="20201117 14:41:39.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.402" level="INFO">${RESULT} = [{'time': 0.0235385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.247200000000051e-05, 'source_diff': 7.247200000000051e-05}, {'time': 0.023623514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:39.398" endtime="20201117 14:41:39.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:39.403" endtime="20201117 14:41:39.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.421" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.420" endtime="20201117 14:41:39.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.424" level="INFO">VALUE: [7.247200000000051e-05, 7.182000000000022e-05, 7.158399999999954e-05, 7.223599999999983e-05, 7.179199999999761e-05, 7.223599999999983e-05, 7.175000000000237e-05, 7.182000000000022e-05, 7.218000000000155e-05, 7.187499999999902e-05, 7.248600000000008e-05, 7.172199999999976e-05, 7.162499999999877e-05, 7.248600000000008e-05, 7.212499999999927e-05, 7.236099999999995e-05, 7.220800000000069e-05, 7.188899999999859e-05, 7.183399999999979e-05, 7.21109999999997e-05, 7.213899999999884e-05, 7.168100000000052e-05, 7.218099999999755e-05, 7.17499999999989e-05, 7.16109999999992e-05, 7.197200000000001e-05, 7.230600000000115e-05, 7.234700000000038e-05, 7.194400000000087e-05, 7.155499999999745e-05, 7.154199999999736e-05, 7.222200000000026e-05, 7.156999999999997e-05, 7.170800000000019e-05, 7.154200000000083e-05, 7.218100000000102e-05, 7.182000000000022e-05, 7.209799999999961e-05, 7.237499999999952e-05, 7.15690000000005e-05, 7.24300000000018e-05, 7.17910000000016e-05, 7.158300000000006e-05, 7.234700000000038e-05, 7.240200000000266e-05, 7.204099999999838e-05, 7.23049999999982e-05, 7.176399999999847e-05, 7.24309999999978e-05, 7.202799999999829e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.423" endtime="20201117 14:41:39.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.418" endtime="20201117 14:41:39.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.427" endtime="20201117 14:41:39.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.431" endtime="20201117 14:41:39.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.429" endtime="20201117 14:41:39.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.426" endtime="20201117 14:41:39.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.052" endtime="20201117 14:41:39.452"></status>
</kw>
<msg timestamp="20201117 14:41:39.452" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.460" endtime="20201117 14:41:39.480"></status>
</kw>
<msg timestamp="20201117 14:41:39.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.459" endtime="20201117 14:41:39.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.482" endtime="20201117 14:41:39.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.484" endtime="20201117 14:41:39.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.456" endtime="20201117 14:41:39.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.454" endtime="20201117 14:41:39.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.495" endtime="20201117 14:41:39.779"></status>
</kw>
<msg timestamp="20201117 14:41:39.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.493" endtime="20201117 14:41:39.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.783" endtime="20201117 14:41:39.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.792" endtime="20201117 14:41:39.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.490" endtime="20201117 14:41:39.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.488" endtime="20201117 14:41:39.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.799" level="INFO">${RESULT} = [{'time': 0.019864597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.17360000000028e-05, 'source_diff': 7.17360000000028e-05}, {'time': 0.019952569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:39.796" endtime="20201117 14:41:39.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:39.800" endtime="20201117 14:41:39.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.818" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.817" endtime="20201117 14:41:39.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.820" level="INFO">VALUE: [7.17360000000028e-05, 7.180500000000117e-05, 7.248600000000008e-05, 7.173599999999933e-05, 7.184699999999988e-05, 7.24170000000017e-05, 7.184699999999988e-05, 7.220800000000069e-05, 7.186099999999945e-05, 7.208300000000056e-05, 7.198599999999958e-05, 7.24309999999978e-05, 7.238899999999909e-05, 7.156999999999997e-05, 7.177800000000151e-05, 7.219399999999765e-05, 7.197200000000001e-05, 7.247299999999998e-05, 7.197300000000295e-05, 7.2069000000001e-05, 7.250000000000312e-05, 7.188899999999859e-05, 7.204100000000185e-05, 7.229199999999811e-05, 7.218100000000102e-05, 7.16109999999992e-05, 7.184699999999988e-05, 7.154200000000083e-05, 7.218099999999755e-05, 7.198599999999958e-05, 7.212499999999927e-05, 7.169500000000009e-05, 7.24300000000018e-05, 7.236099999999995e-05, 7.159699999999963e-05, 7.249999999999965e-05, 7.236099999999995e-05, 7.205500000000142e-05, 7.162500000000224e-05, 7.227799999999854e-05, 7.159699999999963e-05, 7.19170000000012e-05, 7.202800000000176e-05, 7.166700000000095e-05, 7.216699999999798e-05, 7.197200000000001e-05, 7.207000000000047e-05, 7.17499999999989e-05, 7.162499999999877e-05, 7.166700000000095e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.819" endtime="20201117 14:41:39.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.814" endtime="20201117 14:41:39.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.824" endtime="20201117 14:41:39.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.827" endtime="20201117 14:41:39.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.826" endtime="20201117 14:41:39.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.822" endtime="20201117 14:41:39.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.453" endtime="20201117 14:41:39.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.050" endtime="20201117 14:41:39.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.049" endtime="20201117 14:41:39.848"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.851" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.859" endtime="20201117 14:41:39.879"></status>
</kw>
<msg timestamp="20201117 14:41:39.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.858" endtime="20201117 14:41:39.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.881" endtime="20201117 14:41:39.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.883" endtime="20201117 14:41:39.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.855" endtime="20201117 14:41:39.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.853" endtime="20201117 14:41:39.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.893" endtime="20201117 14:41:40.179"></status>
</kw>
<msg timestamp="20201117 14:41:40.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.892" endtime="20201117 14:41:40.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.184" endtime="20201117 14:41:40.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.192" endtime="20201117 14:41:40.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.889" endtime="20201117 14:41:40.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.887" endtime="20201117 14:41:40.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.199" level="INFO">${RESULT} = [{'time': 0.022565708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.331899999999877e-05, 'source_diff': 7.331899999999877e-05}, {'time': 0.022652736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.196" endtime="20201117 14:41:40.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:40.200" endtime="20201117 14:41:40.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.218" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.217" endtime="20201117 14:41:40.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.220" level="INFO">VALUE: [7.331899999999877e-05, 7.32500000000004e-05, 7.279099999999913e-05, 7.29300000000023e-05, 7.287500000000002e-05, 7.308400000000104e-05, 7.295900000000091e-05, 7.304199999999886e-05, 7.336100000000095e-05, 7.330599999999868e-05, 7.287500000000002e-05, 7.254199999999836e-05, 7.323600000000083e-05, 7.347200000000151e-05, 7.305599999999843e-05, 7.331899999999877e-05, 7.323600000000083e-05, 7.258300000000106e-05, 7.255499999999845e-05, 7.337500000000052e-05, 7.342999999999933e-05, 7.329199999999911e-05, 7.273600000000033e-05, 7.25560000000014e-05, 7.309699999999766e-05, 7.348599999999761e-05, 7.284700000000088e-05, 7.326399999999997e-05, 7.279200000000208e-05, 7.254199999999836e-05, 7.281899999999827e-05, 7.279099999999913e-05, 7.300000000000015e-05, 7.333299999999834e-05, 7.254100000000235e-05, 7.350000000000065e-05, 7.320799999999822e-05, 7.302799999999929e-05, 7.273600000000033e-05, 7.287500000000002e-05, 7.305599999999843e-05, 7.284700000000088e-05, 7.293100000000177e-05, 7.318100000000202e-05, 7.287500000000002e-05, 7.342999999999933e-05, 7.272200000000076e-05, 7.267999999999858e-05, 7.338900000000009e-05, 7.350000000000065e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.219" endtime="20201117 14:41:40.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.214" endtime="20201117 14:41:40.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.224" endtime="20201117 14:41:40.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.227" endtime="20201117 14:41:40.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.226" endtime="20201117 14:41:40.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.222" endtime="20201117 14:41:40.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.852" endtime="20201117 14:41:40.248"></status>
</kw>
<msg timestamp="20201117 14:41:40.248" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.257" endtime="20201117 14:41:40.277"></status>
</kw>
<msg timestamp="20201117 14:41:40.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.255" endtime="20201117 14:41:40.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.278" endtime="20201117 14:41:40.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.281" endtime="20201117 14:41:40.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.253" endtime="20201117 14:41:40.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.250" endtime="20201117 14:41:40.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.292" endtime="20201117 14:41:40.579"></status>
</kw>
<msg timestamp="20201117 14:41:40.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.290" endtime="20201117 14:41:40.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.584" endtime="20201117 14:41:40.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.592" endtime="20201117 14:41:40.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.288" endtime="20201117 14:41:40.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.286" endtime="20201117 14:41:40.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.599" level="INFO">${RESULT} = [{'time': 0.019911667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.315299999999941e-05, 'source_diff': 7.315299999999941e-05}, {'time': 0.019997667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.596" endtime="20201117 14:41:40.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:40.600" endtime="20201117 14:41:40.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.618" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.617" endtime="20201117 14:41:40.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.620" level="INFO">VALUE: [7.315299999999941e-05, 7.332000000000172e-05, 7.252799999999879e-05, 7.263899999999934e-05, 7.25560000000014e-05, 7.304099999999938e-05, 7.348600000000108e-05, 7.300000000000015e-05, 7.283299999999784e-05, 7.272200000000076e-05, 7.304199999999886e-05, 7.32500000000004e-05, 7.34309999999988e-05, 7.336099999999748e-05, 7.283300000000131e-05, 7.307000000000147e-05, 7.30560000000019e-05, 7.286100000000045e-05, 7.287500000000002e-05, 7.316699999999898e-05, 7.3069000000002e-05, 7.337500000000052e-05, 7.350000000000065e-05, 7.31110000000007e-05, 7.330500000000267e-05, 7.33049999999992e-05, 7.31110000000007e-05, 7.330599999999868e-05, 7.329199999999911e-05, 7.273600000000033e-05, 7.252799999999879e-05, 7.27499999999999e-05, 7.290299999999916e-05, 7.273600000000033e-05, 7.350000000000065e-05, 7.31110000000007e-05, 7.251399999999922e-05, 7.329099999999963e-05, 7.252700000000278e-05, 7.249999999999965e-05, 7.34300000000028e-05, 7.290199999999969e-05, 7.29439999999984e-05, 7.268100000000152e-05, 7.331999999999825e-05, 7.25690000000015e-05, 7.312500000000027e-05, 7.266599999999901e-05, 7.301399999999972e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.619" endtime="20201117 14:41:40.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.614" endtime="20201117 14:41:40.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.624" endtime="20201117 14:41:40.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.627" endtime="20201117 14:41:40.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.626" endtime="20201117 14:41:40.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.622" endtime="20201117 14:41:40.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.249" endtime="20201117 14:41:40.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.850" endtime="20201117 14:41:40.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.849" endtime="20201117 14:41:40.648"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.651" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.660" endtime="20201117 14:41:40.681"></status>
</kw>
<msg timestamp="20201117 14:41:40.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.658" endtime="20201117 14:41:40.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.683" endtime="20201117 14:41:40.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.685" endtime="20201117 14:41:40.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.655" endtime="20201117 14:41:40.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.653" endtime="20201117 14:41:40.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.694" endtime="20201117 14:41:40.981"></status>
</kw>
<msg timestamp="20201117 14:41:40.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024134708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.693" endtime="20201117 14:41:40.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024134708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.985" endtime="20201117 14:41:40.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.993" endtime="20201117 14:41:40.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.690" endtime="20201117 14:41:40.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.688" endtime="20201117 14:41:40.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.000" level="INFO">${RESULT} = [{'time': 0.024134708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402700000000081e-05, 'source_diff': 7.402700000000081e-05}, {'time': 0.02422475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:40.997" endtime="20201117 14:41:41.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.015" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:41.001" endtime="20201117 14:41:41.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.020" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.019" endtime="20201117 14:41:41.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.023" level="INFO">VALUE: [7.402700000000081e-05, 7.395799999999897e-05, 7.362500000000077e-05, 7.448599999999861e-05, 7.433299999999934e-05, 7.369499999999862e-05, 7.418099999999955e-05, 7.372200000000176e-05, 7.441700000000023e-05, 7.429200000000011e-05, 7.359700000000163e-05, 7.437500000000152e-05, 7.416600000000051e-05, 7.448699999999808e-05, 7.380599999999918e-05, 7.369399999999915e-05, 7.363900000000034e-05, 7.38049999999997e-05, 7.398600000000158e-05, 7.429100000000063e-05, 7.418000000000008e-05, 7.418000000000008e-05, 7.370900000000166e-05, 7.440200000000119e-05, 7.422199999999879e-05, 7.431999999999925e-05, 7.402800000000029e-05, 7.380600000000265e-05, 7.373599999999786e-05, 7.409799999999814e-05, 7.380599999999918e-05, 7.404100000000038e-05, 7.405499999999995e-05, 7.399999999999768e-05, 7.42500000000014e-05, 7.429099999999716e-05, 7.422200000000226e-05, 7.406899999999952e-05, 7.359699999999816e-05, 7.386100000000145e-05, 7.352799999999979e-05, 7.40829999999991e-05, 7.426400000000097e-05, 7.436100000000195e-05, 7.374999999999743e-05, 7.434700000000238e-05, 7.390200000000069e-05, 7.366600000000001e-05, 7.416600000000051e-05, 7.38049999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.021" endtime="20201117 14:41:41.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.016" endtime="20201117 14:41:41.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.026" endtime="20201117 14:41:41.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.029" endtime="20201117 14:41:41.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.028" endtime="20201117 14:41:41.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.024" endtime="20201117 14:41:41.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.652" endtime="20201117 14:41:41.055"></status>
</kw>
<msg timestamp="20201117 14:41:41.055" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.064" endtime="20201117 14:41:41.084"></status>
</kw>
<msg timestamp="20201117 14:41:41.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.062" endtime="20201117 14:41:41.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.085" endtime="20201117 14:41:41.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.088" endtime="20201117 14:41:41.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.059" endtime="20201117 14:41:41.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.057" endtime="20201117 14:41:41.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.098" endtime="20201117 14:41:41.384"></status>
</kw>
<msg timestamp="20201117 14:41:41.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024555806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.097" endtime="20201117 14:41:41.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024555806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.389" endtime="20201117 14:41:41.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.397" endtime="20201117 14:41:41.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.094" endtime="20201117 14:41:41.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.092" endtime="20201117 14:41:41.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.404" level="INFO">${RESULT} = [{'time': 0.024555806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.41249999999978e-05, 'source_diff': 7.41249999999978e-05}, {'time': 0.024645833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:41.401" endtime="20201117 14:41:41.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.418" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:41.405" endtime="20201117 14:41:41.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.423" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.422" endtime="20201117 14:41:41.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.425" level="INFO">VALUE: [7.41249999999978e-05, 7.376400000000047e-05, 7.418000000000008e-05, 7.392999999999983e-05, 7.384700000000188e-05, 7.373600000000133e-05, 7.352799999999979e-05, 7.402800000000029e-05, 7.438899999999762e-05, 7.363900000000034e-05, 7.44309999999998e-05, 7.376400000000047e-05, 7.405599999999943e-05, 7.437499999999805e-05, 7.400000000000115e-05, 7.397199999999854e-05, 7.354199999999936e-05, 7.372300000000123e-05, 7.362500000000077e-05, 7.419399999999965e-05, 7.434699999999891e-05, 7.426400000000097e-05, 7.420799999999922e-05, 7.373600000000133e-05, 7.352799999999979e-05, 7.430600000000315e-05, 7.399999999999768e-05, 7.427800000000054e-05, 7.359699999999816e-05, 7.448600000000208e-05, 7.362500000000077e-05, 7.380599999999918e-05, 7.423699999999783e-05, 7.397199999999854e-05, 7.352700000000031e-05, 7.391599999999679e-05, 7.448599999999861e-05, 7.445799999999947e-05, 7.409699999999866e-05, 7.36110000000012e-05, 7.354199999999936e-05, 7.391699999999973e-05, 7.377800000000004e-05, 7.448600000000208e-05, 7.388900000000059e-05, 7.413899999999737e-05, 7.362500000000077e-05, 7.398700000000105e-05, 7.369499999999862e-05, 7.441600000000076e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.424" endtime="20201117 14:41:41.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.419" endtime="20201117 14:41:41.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.429" endtime="20201117 14:41:41.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.433" endtime="20201117 14:41:41.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.431" endtime="20201117 14:41:41.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.427" endtime="20201117 14:41:41.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.056" endtime="20201117 14:41:41.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.650" endtime="20201117 14:41:41.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.649" endtime="20201117 14:41:41.454"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.456" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.465" endtime="20201117 14:41:41.485"></status>
</kw>
<msg timestamp="20201117 14:41:41.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.463" endtime="20201117 14:41:41.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.487" endtime="20201117 14:41:41.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.490" endtime="20201117 14:41:41.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.461" endtime="20201117 14:41:41.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.458" endtime="20201117 14:41:41.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.499" endtime="20201117 14:41:41.785"></status>
</kw>
<msg timestamp="20201117 14:41:41.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.497" endtime="20201117 14:41:41.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.789" endtime="20201117 14:41:41.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.798" endtime="20201117 14:41:41.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.495" endtime="20201117 14:41:41.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.493" endtime="20201117 14:41:41.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.805" level="INFO">${RESULT} = [{'time': 0.022588347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.504100000000138e-05, 'source_diff': 7.504100000000138e-05}, {'time': 0.022679375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:41.801" endtime="20201117 14:41:41.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:41.806" endtime="20201117 14:41:41.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.823" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.822" endtime="20201117 14:41:41.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.826" level="INFO">VALUE: [7.504100000000138e-05, 7.483300000000331e-05, 7.52639999999985e-05, 7.479200000000061e-05, 7.45699999999995e-05, 7.47500000000019e-05, 7.487500000000202e-05, 7.534699999999991e-05, 7.479200000000061e-05, 7.522299999999926e-05, 7.51249999999988e-05, 7.476400000000147e-05, 7.522199999999979e-05, 7.52769999999986e-05, 7.551399999999875e-05, 7.47769999999981e-05, 7.541599999999829e-05, 7.473600000000233e-05, 7.518100000000055e-05, 7.461099999999873e-05, 7.474999999999843e-05, 7.479199999999714e-05, 7.499999999999868e-05, 7.49310000000003e-05, 7.458400000000254e-05, 7.494499999999987e-05, 7.545899999999994e-05, 7.505600000000043e-05, 7.512500000000227e-05, 7.502800000000129e-05, 7.541600000000176e-05, 7.516600000000151e-05, 7.537499999999905e-05, 7.498599999999911e-05, 7.480600000000018e-05, 7.488900000000159e-05, 7.501400000000172e-05, 7.472200000000276e-05, 7.477800000000104e-05, 7.498599999999911e-05, 7.473599999999886e-05, 7.477800000000104e-05, 7.463800000000187e-05, 7.46110000000022e-05, 7.454200000000036e-05, 7.54440000000009e-05, 7.472199999999929e-05, 7.516600000000151e-05, 7.497199999999954e-05, 7.520800000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.824" endtime="20201117 14:41:41.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.819" endtime="20201117 14:41:41.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.829" endtime="20201117 14:41:41.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.833" endtime="20201117 14:41:41.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.831" endtime="20201117 14:41:41.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.828" endtime="20201117 14:41:41.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.457" endtime="20201117 14:41:41.854"></status>
</kw>
<msg timestamp="20201117 14:41:41.854" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.863" endtime="20201117 14:41:41.883"></status>
</kw>
<msg timestamp="20201117 14:41:41.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.861" endtime="20201117 14:41:41.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.885" endtime="20201117 14:41:41.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.887" endtime="20201117 14:41:41.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.858" endtime="20201117 14:41:41.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.856" endtime="20201117 14:41:41.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.898" endtime="20201117 14:41:42.184"></status>
</kw>
<msg timestamp="20201117 14:41:42.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:41.896" endtime="20201117 14:41:42.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:42.188" endtime="20201117 14:41:42.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.197" endtime="20201117 14:41:42.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.893" endtime="20201117 14:41:42.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.891" endtime="20201117 14:41:42.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.204" level="INFO">${RESULT} = [{'time': 0.019892583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.50830000000001e-05, 'source_diff': 7.50830000000001e-05}, {'time': 0.019981583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:42.200" endtime="20201117 14:41:42.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:42.205" endtime="20201117 14:41:42.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.222" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.221" endtime="20201117 14:41:42.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.225" level="INFO">VALUE: [7.50830000000001e-05, 7.537499999999905e-05, 7.493000000000083e-05, 7.515300000000141e-05, 7.517999999999761e-05, 7.455499999999698e-05, 7.499999999999868e-05, 7.53890000000021e-05, 7.529200000000111e-05, 7.480600000000018e-05, 7.520899999999969e-05, 7.497299999999901e-05, 7.468100000000005e-05, 7.504199999999739e-05, 7.544500000000037e-05, 7.505500000000095e-05, 7.533300000000034e-05, 7.476400000000147e-05, 7.498599999999911e-05, 7.543000000000133e-05, 7.516599999999804e-05, 7.469400000000015e-05, 7.522199999999979e-05, 7.461099999999873e-05, 7.505600000000043e-05, 7.494499999999987e-05, 7.523600000000283e-05, 7.474999999999843e-05, 7.469400000000015e-05, 7.515300000000141e-05, 7.480600000000018e-05, 7.549999999999918e-05, 7.495799999999997e-05, 7.454100000000088e-05, 7.49440000000004e-05, 7.543000000000133e-05, 7.509699999999966e-05, 7.533300000000034e-05, 7.468100000000005e-05, 7.544500000000037e-05, 7.483299999999984e-05, 7.470899999999919e-05, 7.520899999999969e-05, 7.452799999999732e-05, 7.541700000000123e-05, 7.504100000000138e-05, 7.474999999999843e-05, 7.548599999999961e-05, 7.512500000000227e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.223" endtime="20201117 14:41:42.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.218" endtime="20201117 14:41:42.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.228" endtime="20201117 14:41:42.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.232" endtime="20201117 14:41:42.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.230" endtime="20201117 14:41:42.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.227" endtime="20201117 14:41:42.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.855" endtime="20201117 14:41:42.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.455" endtime="20201117 14:41:42.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.454" endtime="20201117 14:41:42.253"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.256" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.264" endtime="20201117 14:41:42.285"></status>
</kw>
<msg timestamp="20201117 14:41:42.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.263" endtime="20201117 14:41:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.286" endtime="20201117 14:41:42.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.289" endtime="20201117 14:41:42.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.260" endtime="20201117 14:41:42.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.258" endtime="20201117 14:41:42.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.298" endtime="20201117 14:41:42.583"></status>
</kw>
<msg timestamp="20201117 14:41:42.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023595806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.297" endtime="20201117 14:41:42.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023595806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.588" endtime="20201117 14:41:42.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.596" endtime="20201117 14:41:42.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.294" endtime="20201117 14:41:42.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.292" endtime="20201117 14:41:42.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.603" level="INFO">${RESULT} = [{'time': 0.023595806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.650000000000018e-05, 'source_diff': 7.650000000000018e-05}, {'time': 0.023684819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.600" endtime="20201117 14:41:42.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:42.604" endtime="20201117 14:41:42.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.623" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.622" endtime="20201117 14:41:42.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.626" level="INFO">VALUE: [7.650000000000018e-05, 7.63189999999983e-05, 7.636100000000048e-05, 7.561099999999973e-05, 7.591700000000173e-05, 7.64310000000018e-05, 7.55830000000006e-05, 7.584700000000041e-05, 7.59029999999987e-05, 7.618000000000208e-05, 7.568100000000105e-05, 7.552799999999832e-05, 7.569400000000115e-05, 7.622300000000026e-05, 7.59310000000013e-05, 7.64310000000018e-05, 7.637500000000005e-05, 7.637500000000005e-05, 7.561099999999973e-05, 7.605499999999848e-05, 7.616599999999904e-05, 7.602799999999882e-05, 7.604200000000186e-05, 7.58050000000017e-05, 7.601399999999925e-05, 7.629200000000211e-05, 7.636100000000048e-05, 7.569500000000062e-05, 7.650000000000018e-05, 7.563899999999887e-05, 7.605599999999796e-05, 7.630599999999821e-05, 7.623600000000036e-05, 7.586099999999998e-05, 7.592999999999836e-05, 7.56249999999993e-05, 7.641599999999929e-05, 7.587499999999955e-05, 7.648600000000061e-05, 7.638899999999962e-05, 7.627799999999907e-05, 7.623600000000036e-05, 7.566700000000148e-05, 7.555600000000093e-05, 7.62639999999995e-05, 7.637500000000005e-05, 7.586199999999946e-05, 7.566600000000201e-05, 7.616700000000198e-05, 7.637500000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.624" endtime="20201117 14:41:42.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.619" endtime="20201117 14:41:42.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.629" endtime="20201117 14:41:42.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.633" endtime="20201117 14:41:42.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.631" endtime="20201117 14:41:42.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.628" endtime="20201117 14:41:42.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.256" endtime="20201117 14:41:42.654"></status>
</kw>
<msg timestamp="20201117 14:41:42.654" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.663" endtime="20201117 14:41:42.682"></status>
</kw>
<msg timestamp="20201117 14:41:42.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.661" endtime="20201117 14:41:42.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.684" endtime="20201117 14:41:42.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.686" endtime="20201117 14:41:42.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.658" endtime="20201117 14:41:42.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.656" endtime="20201117 14:41:42.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.697" endtime="20201117 14:41:42.982"></status>
</kw>
<msg timestamp="20201117 14:41:42.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.695" endtime="20201117 14:41:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.987" endtime="20201117 14:41:42.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.995" endtime="20201117 14:41:42.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.693" endtime="20201117 14:41:42.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.691" endtime="20201117 14:41:42.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.002" level="INFO">${RESULT} = [{'time': 0.019962069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.629099999999917e-05, 'source_diff': 7.629099999999917e-05}, {'time': 0.020052069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.999" endtime="20201117 14:41:43.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.016" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:43.003" endtime="20201117 14:41:43.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.021" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.020" endtime="20201117 14:41:43.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.024" level="INFO">VALUE: [7.629099999999917e-05, 7.616599999999904e-05, 7.591699999999826e-05, 7.622200000000079e-05, 7.622199999999732e-05, 7.599999999999968e-05, 7.552799999999832e-05, 7.566599999999854e-05, 7.558400000000007e-05, 7.563899999999887e-05, 7.652699999999985e-05, 7.579200000000161e-05, 7.561099999999973e-05, 7.574999999999943e-05, 7.650000000000018e-05, 7.591700000000173e-05, 7.604099999999892e-05, 7.629099999999917e-05, 7.55830000000006e-05, 7.5763999999999e-05, 7.637500000000005e-05, 7.641699999999876e-05, 7.572200000000029e-05, 7.629200000000211e-05, 7.636100000000048e-05, 7.601400000000272e-05, 7.562500000000277e-05, 7.579199999999814e-05, 7.605600000000143e-05, 7.632000000000125e-05, 7.616599999999904e-05, 7.56249999999993e-05, 7.586099999999998e-05, 7.597200000000054e-05, 7.61249999999998e-05, 7.615300000000241e-05, 7.552800000000179e-05, 7.573599999999986e-05, 7.572200000000029e-05, 7.647199999999757e-05, 7.587499999999955e-05, 7.629199999999864e-05, 7.604200000000186e-05, 7.634700000000091e-05, 7.561199999999921e-05, 7.633300000000134e-05, 7.568000000000158e-05, 7.587499999999955e-05, 7.62769999999996e-05, 7.613899999999937e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.022" endtime="20201117 14:41:43.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.017" endtime="20201117 14:41:43.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.027" endtime="20201117 14:41:43.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.031" endtime="20201117 14:41:43.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.029" endtime="20201117 14:41:43.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.025" endtime="20201117 14:41:43.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.655" endtime="20201117 14:41:43.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.254" endtime="20201117 14:41:43.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.254" endtime="20201117 14:41:43.052"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.054" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.063" endtime="20201117 14:41:43.083"></status>
</kw>
<msg timestamp="20201117 14:41:43.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.061" endtime="20201117 14:41:43.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.084" endtime="20201117 14:41:43.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.087" endtime="20201117 14:41:43.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.059" endtime="20201117 14:41:43.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.056" endtime="20201117 14:41:43.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.096" endtime="20201117 14:41:43.383"></status>
</kw>
<msg timestamp="20201117 14:41:43.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.095" endtime="20201117 14:41:43.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.387" endtime="20201117 14:41:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.395" endtime="20201117 14:41:43.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.092" endtime="20201117 14:41:43.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.090" endtime="20201117 14:41:43.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.403" level="INFO">${RESULT} = [{'time': 0.022548458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.669399999999868e-05, 'source_diff': 7.669399999999868e-05}, {'time': 0.022641444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:43.399" endtime="20201117 14:41:43.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:43.404" endtime="20201117 14:41:43.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.421" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.420" endtime="20201117 14:41:43.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.424" level="INFO">VALUE: [7.669399999999868e-05, 7.717999999999961e-05, 7.742999999999986e-05, 7.666599999999954e-05, 7.669400000000215e-05, 7.715299999999994e-05, 7.701300000000078e-05, 7.670800000000172e-05, 7.70969999999982e-05, 7.724999999999746e-05, 7.715299999999994e-05, 7.669499999999815e-05, 7.659800000000064e-05, 7.675000000000043e-05, 7.71250000000008e-05, 7.734700000000191e-05, 7.730599999999921e-05, 7.666600000000301e-05, 7.654099999999942e-05, 7.687500000000055e-05, 7.665299999999944e-05, 7.682000000000175e-05, 7.679200000000261e-05, 7.694500000000187e-05, 7.680600000000218e-05, 7.730599999999921e-05, 7.71250000000008e-05, 7.658400000000107e-05, 7.715200000000047e-05, 7.708400000000157e-05, 7.736100000000148e-05, 7.711100000000123e-05, 7.684700000000141e-05, 7.656899999999855e-05, 7.692999999999936e-05, 7.74310000000028e-05, 7.697200000000154e-05, 7.658299999999812e-05, 7.706899999999905e-05, 7.745900000000194e-05, 7.718100000000255e-05, 7.706999999999853e-05, 7.731999999999878e-05, 7.651399999999975e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.698600000000111e-05, 7.66250000000003e-05, 7.698599999999764e-05, 7.684700000000141e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.422" endtime="20201117 14:41:43.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.418" endtime="20201117 14:41:43.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.427" endtime="20201117 14:41:43.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.431" endtime="20201117 14:41:43.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.429" endtime="20201117 14:41:43.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.426" endtime="20201117 14:41:43.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.055" endtime="20201117 14:41:43.452"></status>
</kw>
<msg timestamp="20201117 14:41:43.452" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.460" endtime="20201117 14:41:43.480"></status>
</kw>
<msg timestamp="20201117 14:41:43.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.459" endtime="20201117 14:41:43.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.482" endtime="20201117 14:41:43.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.484" endtime="20201117 14:41:43.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.456" endtime="20201117 14:41:43.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.454" endtime="20201117 14:41:43.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.495" endtime="20201117 14:41:43.781"></status>
</kw>
<msg timestamp="20201117 14:41:43.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.493" endtime="20201117 14:41:43.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.785" endtime="20201117 14:41:43.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.794" endtime="20201117 14:41:43.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.491" endtime="20201117 14:41:43.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.489" endtime="20201117 14:41:43.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.801" level="INFO">${RESULT} = [{'time': 0.019961958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.738899999999715e-05, 'source_diff': 7.738899999999715e-05}, {'time': 0.020053931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:43.798" endtime="20201117 14:41:43.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.815" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:43.802" endtime="20201117 14:41:43.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.819" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.818" endtime="20201117 14:41:43.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.822" level="INFO">VALUE: [7.738899999999715e-05, 7.675000000000043e-05, 7.747199999999857e-05, 7.652799999999932e-05, 7.667999999999911e-05, 7.723600000000136e-05, 7.716600000000004e-05, 7.677799999999957e-05, 7.725000000000093e-05, 7.70969999999982e-05, 7.661100000000073e-05, 7.65969999999977e-05, 7.747199999999857e-05, 7.716699999999951e-05, 7.675000000000043e-05, 7.704199999999939e-05, 7.742999999999986e-05, 7.672199999999782e-05, 7.741600000000029e-05, 7.655499999999898e-05, 7.667999999999911e-05, 7.679099999999967e-05, 7.742999999999986e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.730600000000268e-05, 7.724999999999746e-05, 7.693099999999883e-05, 7.732000000000225e-05, 7.722200000000179e-05, 7.677799999999957e-05, 7.722300000000126e-05, 7.726300000000103e-05, 7.673600000000086e-05, 7.659800000000064e-05, 7.688900000000012e-05, 7.669500000000162e-05, 7.70969999999982e-05, 7.755599999999946e-05, 7.68189999999988e-05, 7.697199999999807e-05, 7.709799999999767e-05, 7.72640000000005e-05, 7.673600000000086e-05, 7.748599999999814e-05, 7.675000000000043e-05, 7.687500000000055e-05, 7.740200000000072e-05, 7.673700000000033e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.820" endtime="20201117 14:41:43.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.816" endtime="20201117 14:41:43.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.825" endtime="20201117 14:41:43.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.829" endtime="20201117 14:41:43.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.827" endtime="20201117 14:41:43.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.824" endtime="20201117 14:41:43.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.453" endtime="20201117 14:41:43.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.053" endtime="20201117 14:41:43.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.052" endtime="20201117 14:41:43.850"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.852" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.861" endtime="20201117 14:41:43.882"></status>
</kw>
<msg timestamp="20201117 14:41:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.859" endtime="20201117 14:41:43.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.883" endtime="20201117 14:41:43.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.886" endtime="20201117 14:41:43.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.857" endtime="20201117 14:41:43.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.855" endtime="20201117 14:41:43.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.896" endtime="20201117 14:41:44.182"></status>
</kw>
<msg timestamp="20201117 14:41:44.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.894" endtime="20201117 14:41:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.186" endtime="20201117 14:41:44.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.195" endtime="20201117 14:41:44.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.891" endtime="20201117 14:41:44.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.889" endtime="20201117 14:41:44.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.202" level="INFO">${RESULT} = [{'time': 0.023409556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.851400000000175e-05, 'source_diff': 7.851400000000175e-05}, {'time': 0.023504583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:44.198" endtime="20201117 14:41:44.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:44.203" endtime="20201117 14:41:44.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.222" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.220" endtime="20201117 14:41:44.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.224" level="INFO">VALUE: [7.851400000000175e-05, 7.851399999999828e-05, 7.754100000000042e-05, 7.811100000000223e-05, 7.793000000000036e-05, 7.797199999999907e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.804200000000039e-05, 7.766700000000001e-05, 7.797199999999907e-05, 7.827800000000107e-05, 7.808299999999962e-05, 7.84449999999999e-05, 7.783399999999885e-05, 7.79169999999968e-05, 7.820799999999975e-05, 7.776399999999753e-05, 7.763900000000087e-05, 7.81250000000018e-05, 7.812499999999833e-05, 7.788900000000112e-05, 7.81250000000018e-05, 7.775000000000143e-05, 7.793099999999983e-05, 7.790299999999722e-05, 7.848599999999914e-05, 7.848599999999914e-05, 7.756999999999903e-05, 7.802799999999735e-05, 7.818099999999661e-05, 7.823699999999836e-05, 7.847300000000251e-05, 7.76250000000013e-05, 7.819400000000018e-05, 7.843000000000086e-05, 7.805500000000049e-05, 7.775000000000143e-05, 7.811099999999876e-05, 7.844400000000043e-05, 7.773600000000186e-05, 7.833299999999987e-05, 7.784699999999894e-05, 7.81250000000018e-05, 7.820899999999922e-05, 7.766700000000001e-05, 7.75830000000026e-05, 7.783299999999937e-05, 7.755499999999999e-05, 7.76250000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.223" endtime="20201117 14:41:44.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.218" endtime="20201117 14:41:44.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.227" endtime="20201117 14:41:44.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.231" endtime="20201117 14:41:44.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.229" endtime="20201117 14:41:44.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.226" endtime="20201117 14:41:44.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.853" endtime="20201117 14:41:44.252"></status>
</kw>
<msg timestamp="20201117 14:41:44.252" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.261" endtime="20201117 14:41:44.281"></status>
</kw>
<msg timestamp="20201117 14:41:44.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.259" endtime="20201117 14:41:44.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.282" endtime="20201117 14:41:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.285" endtime="20201117 14:41:44.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.256" endtime="20201117 14:41:44.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.254" endtime="20201117 14:41:44.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.296" endtime="20201117 14:41:44.583"></status>
</kw>
<msg timestamp="20201117 14:41:44.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01996475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:44.294" endtime="20201117 14:41:44.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01996475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:44.587" endtime="20201117 14:41:44.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.596" endtime="20201117 14:41:44.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.292" endtime="20201117 14:41:44.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.290" endtime="20201117 14:41:44.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.603" level="INFO">${RESULT} = [{'time': 0.01996475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.829200000000064e-05, 'source_diff': 7.829200000000064e-05}, {'time': 0.02005875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:44.599" endtime="20201117 14:41:44.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.617" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:44.604" endtime="20201117 14:41:44.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.621" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.620" endtime="20201117 14:41:44.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.624" level="INFO">VALUE: [7.829200000000064e-05, 7.75969999999987e-05, 7.812499999999833e-05, 7.815300000000094e-05, 7.769499999999915e-05, 7.849999999999871e-05, 7.79579999999995e-05, 7.799999999999821e-05, 7.812499999999833e-05, 7.766700000000001e-05, 7.813799999999843e-05, 7.798599999999864e-05, 7.801399999999778e-05, 7.755499999999999e-05, 7.752800000000032e-05, 7.816700000000051e-05, 7.823600000000236e-05, 7.818100000000008e-05, 7.837499999999858e-05, 7.770799999999925e-05, 7.797199999999907e-05, 7.768100000000305e-05, 7.780599999999971e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.829200000000064e-05, 7.815200000000147e-05, 7.805500000000049e-05, 7.780500000000024e-05, 7.804100000000092e-05, 7.819400000000018e-05, 7.800000000000168e-05, 7.784699999999894e-05, 7.837499999999858e-05, 7.756899999999955e-05, 7.770799999999925e-05, 7.841700000000076e-05, 7.829200000000064e-05, 7.845899999999947e-05, 7.829200000000064e-05, 7.820799999999975e-05, 7.78189999999998e-05, 7.766700000000001e-05, 7.849999999999871e-05, 7.844400000000043e-05, 7.815200000000147e-05, 7.811099999999876e-05, 7.761100000000173e-05, 7.848599999999914e-05, 7.798600000000211e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.623" endtime="20201117 14:41:44.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.618" endtime="20201117 14:41:44.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.627" endtime="20201117 14:41:44.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.631" endtime="20201117 14:41:44.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.629" endtime="20201117 14:41:44.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.626" endtime="20201117 14:41:44.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.253" endtime="20201117 14:41:44.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.851" endtime="20201117 14:41:44.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.850" endtime="20201117 14:41:44.652"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.655" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.664" endtime="20201117 14:41:44.684"></status>
</kw>
<msg timestamp="20201117 14:41:44.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.662" endtime="20201117 14:41:44.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.685" endtime="20201117 14:41:44.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.688" endtime="20201117 14:41:44.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.659" endtime="20201117 14:41:44.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.657" endtime="20201117 14:41:44.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.697" endtime="20201117 14:41:44.983"></status>
</kw>
<msg timestamp="20201117 14:41:44.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023138347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.696" endtime="20201117 14:41:44.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023138347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.988" endtime="20201117 14:41:44.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.996" endtime="20201117 14:41:44.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.693" endtime="20201117 14:41:44.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.691" endtime="20201117 14:41:44.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.003" level="INFO">${RESULT} = [{'time': 0.023138347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.947200000000057e-05, 'source_diff': 7.947200000000057e-05}, {'time': 0.023232319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.000" endtime="20201117 14:41:45.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:45.004" endtime="20201117 14:41:45.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.022" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.021" endtime="20201117 14:41:45.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.024" level="INFO">VALUE: [7.947200000000057e-05, 7.868000000000111e-05, 7.951400000000275e-05, 7.934700000000044e-05, 7.919400000000118e-05, 7.873599999999939e-05, 7.934700000000044e-05, 7.879100000000167e-05, 7.847199999999957e-05, 7.861099999999926e-05, 7.915300000000194e-05, 7.86389999999984e-05, 7.861200000000221e-05, 7.923599999999989e-05, 7.924999999999946e-05, 7.870800000000025e-05, 7.886100000000298e-05, 7.930500000000174e-05, 7.920800000000075e-05, 7.922200000000032e-05, 7.879200000000114e-05, 7.909799999999967e-05, 7.924999999999946e-05, 7.915299999999847e-05, 7.898599999999964e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.89450000000004e-05, 7.861099999999926e-05, 7.949999999999971e-05, 7.944400000000143e-05, 7.924999999999946e-05, 7.922200000000032e-05, 7.866600000000154e-05, 7.870800000000025e-05, 7.934700000000044e-05, 7.905500000000149e-05, 7.872199999999982e-05, 7.916699999999804e-05, 7.930600000000121e-05, 7.904200000000139e-05, 7.94169999999983e-05, 7.915299999999847e-05, 7.9151999999999e-05, 7.949999999999971e-05, 7.866700000000101e-05, 7.867999999999764e-05, 7.883300000000037e-05, 7.868000000000111e-05, 7.899999999999921e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.023" endtime="20201117 14:41:45.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.018" endtime="20201117 14:41:45.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.028" endtime="20201117 14:41:45.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.031" endtime="20201117 14:41:45.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.030" endtime="20201117 14:41:45.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.026" endtime="20201117 14:41:45.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.655" endtime="20201117 14:41:45.053"></status>
</kw>
<msg timestamp="20201117 14:41:45.053" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.061" endtime="20201117 14:41:45.081"></status>
</kw>
<msg timestamp="20201117 14:41:45.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.060" endtime="20201117 14:41:45.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.083" endtime="20201117 14:41:45.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.086" endtime="20201117 14:41:45.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.057" endtime="20201117 14:41:45.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.055" endtime="20201117 14:41:45.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.096" endtime="20201117 14:41:45.382"></status>
</kw>
<msg timestamp="20201117 14:41:45.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.094" endtime="20201117 14:41:45.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.386" endtime="20201117 14:41:45.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.394" endtime="20201117 14:41:45.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.092" endtime="20201117 14:41:45.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.090" endtime="20201117 14:41:45.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.401" level="INFO">${RESULT} = [{'time': 0.020439042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.887500000000255e-05, 'source_diff': 7.887500000000255e-05}, {'time': 0.020534083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.398" endtime="20201117 14:41:45.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.415" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:45.402" endtime="20201117 14:41:45.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.420" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.419" endtime="20201117 14:41:45.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.422" level="INFO">VALUE: [7.887500000000255e-05, 7.940200000000272e-05, 7.923599999999989e-05, 7.941600000000229e-05, 7.929100000000217e-05, 7.887500000000255e-05, 7.88190000000008e-05, 7.934700000000044e-05, 7.870800000000025e-05, 7.884699999999994e-05, 7.86389999999984e-05, 7.923599999999989e-05, 7.908300000000063e-05, 7.941700000000176e-05, 7.924999999999946e-05, 7.875000000000243e-05, 7.900000000000268e-05, 7.875000000000243e-05, 7.85969999999997e-05, 7.886099999999951e-05, 7.938900000000262e-05, 7.923599999999989e-05, 7.922200000000032e-05, 7.916699999999804e-05, 7.905600000000096e-05, 7.936100000000001e-05, 7.882000000000028e-05, 7.859700000000316e-05, 7.882000000000028e-05, 7.87229999999993e-05, 7.949999999999971e-05, 7.85969999999997e-05, 7.90970000000002e-05, 7.922200000000032e-05, 7.856900000000056e-05, 7.86389999999984e-05, 7.873599999999939e-05, 7.943000000000186e-05, 7.852800000000132e-05, 7.91250000000028e-05, 7.936100000000001e-05, 7.862499999999883e-05, 7.904200000000139e-05, 7.868100000000058e-05, 7.854200000000089e-05, 7.93190000000013e-05, 7.91389999999989e-05, 7.88329999999969e-05, 7.86519999999985e-05, 7.897200000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.421" endtime="20201117 14:41:45.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.416" endtime="20201117 14:41:45.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.426" endtime="20201117 14:41:45.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.430" endtime="20201117 14:41:45.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.428" endtime="20201117 14:41:45.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.424" endtime="20201117 14:41:45.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.054" endtime="20201117 14:41:45.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.653" endtime="20201117 14:41:45.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.652" endtime="20201117 14:41:45.451"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.453" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.462" endtime="20201117 14:41:45.483"></status>
</kw>
<msg timestamp="20201117 14:41:45.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.460" endtime="20201117 14:41:45.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.484" endtime="20201117 14:41:45.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.487" endtime="20201117 14:41:45.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.458" endtime="20201117 14:41:45.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.455" endtime="20201117 14:41:45.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.497" endtime="20201117 14:41:45.783"></status>
</kw>
<msg timestamp="20201117 14:41:45.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023536014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.495" endtime="20201117 14:41:45.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023536014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.787" endtime="20201117 14:41:45.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.796" endtime="20201117 14:41:45.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.492" endtime="20201117 14:41:45.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.490" endtime="20201117 14:41:45.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.803" level="INFO">${RESULT} = [{'time': 0.023536014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.988899999999965e-05, 'source_diff': 7.988899999999965e-05}, {'time': 0.023630014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.799" endtime="20201117 14:41:45.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:45.804" endtime="20201117 14:41:45.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.823" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.821" endtime="20201117 14:41:45.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.825" level="INFO">VALUE: [7.988899999999965e-05, 7.968100000000158e-05, 7.987500000000008e-05, 7.99450000000014e-05, 7.961100000000026e-05, 7.969500000000115e-05, 8.015299999999947e-05, 7.970800000000125e-05, 8.03329999999984e-05, 8.017999999999914e-05, 7.958300000000113e-05, 7.984699999999748e-05, 8.019399999999871e-05, 7.999999999999674e-05, 7.970800000000125e-05, 8.000000000000021e-05, 7.972200000000082e-05, 8.002799999999935e-05, 7.962499999999983e-05, 8.011100000000076e-05, 7.980500000000224e-05, 7.965299999999897e-05, 8.006899999999859e-05, 8.004200000000239e-05, 7.954100000000242e-05, 8.019400000000218e-05, 7.966599999999907e-05, 8.036100000000101e-05, 7.955500000000199e-05, 7.987500000000008e-05, 7.99450000000014e-05, 7.980599999999824e-05, 8.022200000000132e-05, 8.006999999999806e-05, 7.973600000000039e-05, 7.962499999999983e-05, 8.018000000000261e-05, 8.025000000000046e-05, 7.980500000000224e-05, 8.017999999999914e-05, 8.001399999999978e-05, 8.023600000000089e-05, 8.01109999999973e-05, 8.00970000000012e-05, 8.04719999999981e-05, 8.044499999999843e-05, 8.015299999999947e-05, 7.973600000000039e-05, 7.984699999999748e-05, 8.007000000000153e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.824" endtime="20201117 14:41:45.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.819" endtime="20201117 14:41:45.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.829" endtime="20201117 14:41:45.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.833" endtime="20201117 14:41:45.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.831" endtime="20201117 14:41:45.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.827" endtime="20201117 14:41:45.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.454" endtime="20201117 14:41:45.853"></status>
</kw>
<msg timestamp="20201117 14:41:45.854" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.862" endtime="20201117 14:41:45.882"></status>
</kw>
<msg timestamp="20201117 14:41:45.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.861" endtime="20201117 14:41:45.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.884" endtime="20201117 14:41:45.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.886" endtime="20201117 14:41:45.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.858" endtime="20201117 14:41:45.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.856" endtime="20201117 14:41:45.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.897" endtime="20201117 14:41:46.182"></status>
</kw>
<msg timestamp="20201117 14:41:46.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020044208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.895" endtime="20201117 14:41:46.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020044208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.186" endtime="20201117 14:41:46.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.195" endtime="20201117 14:41:46.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.892" endtime="20201117 14:41:46.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.890" endtime="20201117 14:41:46.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.202" level="INFO">${RESULT} = [{'time': 0.020044208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.96389999999994e-05, 'source_diff': 7.96389999999994e-05}, {'time': 0.020139208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:46.198" endtime="20201117 14:41:46.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.215" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:46.203" endtime="20201117 14:41:46.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.220" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.219" endtime="20201117 14:41:46.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.223" level="INFO">VALUE: [7.96389999999994e-05, 7.991599999999932e-05, 7.997200000000107e-05, 7.991599999999932e-05, 7.987500000000008e-05, 8.01109999999973e-05, 8.01389999999999e-05, 8.034700000000145e-05, 8.050000000000071e-05, 8.019499999999818e-05, 8.025000000000046e-05, 7.973600000000039e-05, 8.002800000000282e-05, 7.962499999999983e-05, 8.036099999999755e-05, 7.983300000000138e-05, 8.02779999999996e-05, 7.986100000000051e-05, 7.974999999999996e-05, 8.048600000000114e-05, 8.000000000000021e-05, 8.029199999999917e-05, 8.0458999999998e-05, 7.99169999999988e-05, 7.95970000000007e-05, 8.01389999999999e-05, 8.006999999999806e-05, 8.02779999999996e-05, 7.988899999999965e-05, 7.967999999999864e-05, 7.961100000000026e-05, 8.048600000000114e-05, 7.991599999999932e-05, 7.962499999999983e-05, 7.947200000000057e-05, 7.962499999999983e-05, 7.979200000000214e-05, 7.965299999999897e-05, 7.980599999999824e-05, 7.974999999999996e-05, 7.961100000000026e-05, 7.997300000000054e-05, 7.957000000000103e-05, 8.029200000000264e-05, 8.022200000000132e-05, 8.012500000000033e-05, 8.008299999999816e-05, 7.967999999999864e-05, 8.044400000000243e-05, 8.019399999999871e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.221" endtime="20201117 14:41:46.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.216" endtime="20201117 14:41:46.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.230" endtime="20201117 14:41:46.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.234" endtime="20201117 14:41:46.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.232" endtime="20201117 14:41:46.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.229" endtime="20201117 14:41:46.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.854" endtime="20201117 14:41:46.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.452" endtime="20201117 14:41:46.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.451" endtime="20201117 14:41:46.255"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.258" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.266" endtime="20201117 14:41:46.286"></status>
</kw>
<msg timestamp="20201117 14:41:46.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.265" endtime="20201117 14:41:46.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.288" endtime="20201117 14:41:46.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.290" endtime="20201117 14:41:46.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.262" endtime="20201117 14:41:46.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.260" endtime="20201117 14:41:46.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.300" endtime="20201117 14:41:46.585"></status>
</kw>
<msg timestamp="20201117 14:41:46.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.298" endtime="20201117 14:41:46.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.589" endtime="20201117 14:41:46.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.598" endtime="20201117 14:41:46.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.295" endtime="20201117 14:41:46.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.294" endtime="20201117 14:41:46.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.605" level="INFO">${RESULT} = [{'time': 0.022602875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.093100000000283e-05, 'source_diff': 8.093100000000283e-05}, {'time': 0.022697903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.601" endtime="20201117 14:41:46.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.619" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:46.606" endtime="20201117 14:41:46.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.624" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.623" endtime="20201117 14:41:46.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.627" level="INFO">VALUE: [8.093100000000283e-05, 8.113899999999744e-05, 8.116700000000004e-05, 8.148599999999867e-05, 8.104099999999698e-05, 8.137499999999812e-05, 8.112499999999787e-05, 8.105600000000296e-05, 8.100000000000121e-05, 8.150000000000171e-05, 8.092999999999989e-05, 8.048599999999767e-05, 8.111100000000177e-05, 8.084700000000195e-05, 8.084699999999848e-05, 8.136100000000202e-05, 8.055500000000299e-05, 8.06390000000004e-05, 8.108299999999916e-05, 8.149999999999824e-05, 8.129200000000017e-05, 8.06109999999978e-05, 8.086200000000099e-05, 8.100000000000121e-05, 8.098600000000164e-05, 8.067999999999964e-05, 8.100000000000121e-05, 8.123599999999842e-05, 8.07910000000002e-05, 8.131899999999984e-05, 8.093099999999936e-05, 8.055599999999899e-05, 8.069500000000215e-05, 8.057000000000203e-05, 8.14719999999991e-05, 8.069499999999868e-05, 8.149999999999824e-05, 8.061200000000074e-05, 8.123599999999842e-05, 8.130500000000027e-05, 8.119399999999971e-05, 8.074999999999749e-05, 8.087500000000108e-05, 8.126400000000103e-05, 8.143099999999986e-05, 8.080599999999924e-05, 8.093100000000283e-05, 8.138799999999821e-05, 8.144499999999943e-05, 8.116699999999658e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.625" endtime="20201117 14:41:46.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.620" endtime="20201117 14:41:46.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.630" endtime="20201117 14:41:46.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.634" endtime="20201117 14:41:46.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.632" endtime="20201117 14:41:46.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.628" endtime="20201117 14:41:46.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.258" endtime="20201117 14:41:46.655"></status>
</kw>
<msg timestamp="20201117 14:41:46.655" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.663" endtime="20201117 14:41:46.684"></status>
</kw>
<msg timestamp="20201117 14:41:46.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.662" endtime="20201117 14:41:46.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.685" endtime="20201117 14:41:46.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.688" endtime="20201117 14:41:46.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.659" endtime="20201117 14:41:46.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.657" endtime="20201117 14:41:46.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.698" endtime="20201117 14:41:46.983"></status>
</kw>
<msg timestamp="20201117 14:41:46.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.697" endtime="20201117 14:41:46.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.988" endtime="20201117 14:41:46.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.996" endtime="20201117 14:41:46.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.694" endtime="20201117 14:41:46.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.692" endtime="20201117 14:41:46.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.003" level="INFO">${RESULT} = [{'time': 0.020150097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.101399999999731e-05, 'source_diff': 8.101399999999731e-05}, {'time': 0.020246125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.000" endtime="20201117 14:41:47.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:47.004" endtime="20201117 14:41:47.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.022" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.021" endtime="20201117 14:41:47.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.025" level="INFO">VALUE: [8.101399999999731e-05, 8.055599999999899e-05, 8.057000000000203e-05, 8.113899999999744e-05, 8.069500000000215e-05, 8.131999999999931e-05, 8.143099999999986e-05, 8.101399999999731e-05, 8.125000000000146e-05, 8.10979999999982e-05, 8.120799999999928e-05, 8.134699999999898e-05, 8.119400000000318e-05, 8.07910000000002e-05, 8.150000000000171e-05, 8.143000000000039e-05, 8.11109999999983e-05, 8.076400000000053e-05, 8.093099999999936e-05, 8.105599999999949e-05, 8.118099999999961e-05, 8.087499999999762e-05, 8.094499999999893e-05, 8.104199999999992e-05, 8.141599999999735e-05, 8.066600000000007e-05, 8.136099999999855e-05, 8.150000000000171e-05, 8.070799999999878e-05, 8.056899999999909e-05, 8.073599999999792e-05, 8.098600000000164e-05, 8.136099999999855e-05, 8.075000000000096e-05, 8.056999999999856e-05, 8.072200000000182e-05, 8.144499999999943e-05, 8.07230000000013e-05, 8.058399999999813e-05, 8.138899999999769e-05, 8.115300000000047e-05, 8.092999999999989e-05, 8.143000000000039e-05, 8.140300000000072e-05, 8.084700000000195e-05, 8.136099999999855e-05, 8.065299999999997e-05, 8.073599999999792e-05, 8.093099999999936e-05, 8.119499999999918e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.023" endtime="20201117 14:41:47.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.018" endtime="20201117 14:41:47.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.028" endtime="20201117 14:41:47.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.031" endtime="20201117 14:41:47.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.030" endtime="20201117 14:41:47.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.026" endtime="20201117 14:41:47.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.655" endtime="20201117 14:41:47.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.257" endtime="20201117 14:41:47.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.256" endtime="20201117 14:41:47.053"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.055" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.064" endtime="20201117 14:41:47.084"></status>
</kw>
<msg timestamp="20201117 14:41:47.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.062" endtime="20201117 14:41:47.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.086" endtime="20201117 14:41:47.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.088" endtime="20201117 14:41:47.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.059" endtime="20201117 14:41:47.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.057" endtime="20201117 14:41:47.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.098" endtime="20201117 14:41:47.383"></status>
</kw>
<msg timestamp="20201117 14:41:47.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023419528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.096" endtime="20201117 14:41:47.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023419528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.388" endtime="20201117 14:41:47.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.396" endtime="20201117 14:41:47.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.093" endtime="20201117 14:41:47.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.091" endtime="20201117 14:41:47.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.404" level="INFO">${RESULT} = [{'time': 0.023419528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.186099999999905e-05, 'source_diff': 8.186099999999905e-05}, {'time': 0.023517528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.400" endtime="20201117 14:41:47.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:47.405" endtime="20201117 14:41:47.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.423" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.422" endtime="20201117 14:41:47.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.426" level="INFO">VALUE: [8.186099999999905e-05, 8.170899999999925e-05, 8.162499999999837e-05, 8.23049999999978e-05, 8.200000000000221e-05, 8.180500000000077e-05, 8.183399999999938e-05, 8.176399999999806e-05, 8.237500000000259e-05, 8.245800000000053e-05, 8.238899999999869e-05, 8.229200000000117e-05, 8.230600000000074e-05, 8.237499999999912e-05, 8.236100000000302e-05, 8.169499999999968e-05, 8.231999999999684e-05, 8.172199999999935e-05, 8.212500000000234e-05, 8.207000000000006e-05, 8.204099999999798e-05, 8.219400000000071e-05, 8.17910000000012e-05, 8.218000000000114e-05, 8.204100000000145e-05, 8.186099999999905e-05, 8.200000000000221e-05, 8.21109999999993e-05, 8.190300000000122e-05, 8.200000000000221e-05, 8.173599999999892e-05, 8.24170000000013e-05, 8.204199999999745e-05, 8.222299999999932e-05, 8.222200000000332e-05, 8.211100000000277e-05, 8.180500000000077e-05, 8.206900000000059e-05, 8.226399999999856e-05, 8.218000000000114e-05, 8.184699999999948e-05, 8.237499999999912e-05, 8.248599999999967e-05, 8.230600000000074e-05, 8.230600000000074e-05, 8.170899999999925e-05, 8.24170000000013e-05, 8.22919999999977e-05, 8.197300000000254e-05, 8.156900000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.425" endtime="20201117 14:41:47.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.420" endtime="20201117 14:41:47.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.429" endtime="20201117 14:41:47.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.433" endtime="20201117 14:41:47.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.431" endtime="20201117 14:41:47.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.427" endtime="20201117 14:41:47.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.056" endtime="20201117 14:41:47.454"></status>
</kw>
<msg timestamp="20201117 14:41:47.454" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.463" endtime="20201117 14:41:47.483"></status>
</kw>
<msg timestamp="20201117 14:41:47.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.461" endtime="20201117 14:41:47.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.485" endtime="20201117 14:41:47.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.487" endtime="20201117 14:41:47.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.458" endtime="20201117 14:41:47.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.456" endtime="20201117 14:41:47.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.498" endtime="20201117 14:41:47.784"></status>
</kw>
<msg timestamp="20201117 14:41:47.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:47.496" endtime="20201117 14:41:47.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:47.788" endtime="20201117 14:41:47.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.797" endtime="20201117 14:41:47.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.493" endtime="20201117 14:41:47.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.491" endtime="20201117 14:41:47.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.804" level="INFO">${RESULT} = [{'time': 0.020096583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.158299999999966e-05, 'source_diff': 8.158299999999966e-05}, {'time': 0.020195625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:47.800" endtime="20201117 14:41:47.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:47.805" endtime="20201117 14:41:47.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.823" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.821" endtime="20201117 14:41:47.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.825" level="INFO">VALUE: [8.158299999999966e-05, 8.255599999999752e-05, 8.181899999999687e-05, 8.187500000000208e-05, 8.237499999999912e-05, 8.149999999999824e-05, 8.19170000000008e-05, 8.169499999999968e-05, 8.244500000000043e-05, 8.224999999999899e-05, 8.163899999999794e-05, 8.168100000000011e-05, 8.190300000000122e-05, 8.154200000000042e-05, 8.186200000000199e-05, 8.219400000000071e-05, 8.192999999999742e-05, 8.242999999999792e-05, 8.204099999999798e-05, 8.237499999999912e-05, 8.241699999999783e-05, 8.248599999999967e-05, 8.193100000000036e-05, 8.166699999999708e-05, 8.238899999999869e-05, 8.199999999999874e-05, 8.204100000000145e-05, 8.205500000000102e-05, 8.229200000000117e-05, 8.193100000000036e-05, 8.172199999999935e-05, 8.227699999999866e-05, 8.21109999999993e-05, 8.230500000000127e-05, 8.23049999999978e-05, 8.162500000000183e-05, 8.155599999999999e-05, 8.220799999999681e-05, 8.173599999999892e-05, 8.170799999999978e-05, 8.207000000000006e-05, 8.187500000000208e-05, 8.157000000000303e-05, 8.212499999999887e-05, 8.198699999999864e-05, 8.199999999999874e-05, 8.21109999999993e-05, 8.187499999999862e-05, 8.226400000000203e-05, 8.21109999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.824" endtime="20201117 14:41:47.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.819" endtime="20201117 14:41:47.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.828" endtime="20201117 14:41:47.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.832" endtime="20201117 14:41:47.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.830" endtime="20201117 14:41:47.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.827" endtime="20201117 14:41:47.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.455" endtime="20201117 14:41:47.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.054" endtime="20201117 14:41:47.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.053" endtime="20201117 14:41:47.853"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.856" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.864" endtime="20201117 14:41:47.885"></status>
</kw>
<msg timestamp="20201117 14:41:47.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.863" endtime="20201117 14:41:47.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.886" endtime="20201117 14:41:47.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.889" endtime="20201117 14:41:47.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.860" endtime="20201117 14:41:47.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.858" endtime="20201117 14:41:47.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.899" endtime="20201117 14:41:48.185"></status>
</kw>
<msg timestamp="20201117 14:41:48.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.897" endtime="20201117 14:41:48.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.189" endtime="20201117 14:41:48.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.198" endtime="20201117 14:41:48.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.894" endtime="20201117 14:41:48.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.892" endtime="20201117 14:41:48.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.205" level="INFO">${RESULT} = [{'time': 0.022508472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305500000000202e-05, 'source_diff': 8.305500000000202e-05}, {'time': 0.022606486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.201" endtime="20201117 14:41:48.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:48.206" endtime="20201117 14:41:48.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.223" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.222" endtime="20201117 14:41:48.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.226" level="INFO">VALUE: [8.305500000000202e-05, 8.255499999999805e-05, 8.323600000000042e-05, 8.320800000000128e-05, 8.259700000000023e-05, 8.3152999999999e-05, 8.258300000000066e-05, 8.254200000000142e-05, 8.326399999999956e-05, 8.272299999999982e-05, 8.290300000000222e-05, 8.286100000000005e-05, 8.352799999999938e-05, 8.294400000000146e-05, 8.298600000000017e-05, 8.298600000000017e-05, 8.273599999999992e-05, 8.280600000000124e-05, 8.27369999999994e-05, 8.281900000000134e-05, 8.273599999999992e-05, 8.343100000000186e-05, 8.322200000000085e-05, 8.288899999999919e-05, 8.268100000000111e-05, 8.343100000000186e-05, 8.286100000000005e-05, 8.309700000000073e-05, 8.33330000000014e-05, 8.255499999999805e-05, 8.27910000000022e-05, 8.262499999999937e-05, 8.344499999999797e-05, 8.257000000000056e-05, 8.327799999999913e-05, 8.331999999999784e-05, 8.3459000000001e-05, 8.27919999999982e-05, 8.268100000000111e-05, 8.332000000000131e-05, 8.290299999999876e-05, 8.279099999999873e-05, 8.350000000000024e-05, 8.324999999999999e-05, 8.273599999999992e-05, 8.312499999999987e-05, 8.281900000000134e-05, 8.329200000000217e-05, 8.29170000000018e-05, 8.347199999999763e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.225" endtime="20201117 14:41:48.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.220" endtime="20201117 14:41:48.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.229" endtime="20201117 14:41:48.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.233" endtime="20201117 14:41:48.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.231" endtime="20201117 14:41:48.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.227" endtime="20201117 14:41:48.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.856" endtime="20201117 14:41:48.254"></status>
</kw>
<msg timestamp="20201117 14:41:48.254" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.263" endtime="20201117 14:41:48.282"></status>
</kw>
<msg timestamp="20201117 14:41:48.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.261" endtime="20201117 14:41:48.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.284" endtime="20201117 14:41:48.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.287" endtime="20201117 14:41:48.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.258" endtime="20201117 14:41:48.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.256" endtime="20201117 14:41:48.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.297" endtime="20201117 14:41:48.584"></status>
</kw>
<msg timestamp="20201117 14:41:48.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.296" endtime="20201117 14:41:48.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.588" endtime="20201117 14:41:48.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.596" endtime="20201117 14:41:48.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.293" endtime="20201117 14:41:48.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.291" endtime="20201117 14:41:48.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.603" level="INFO">${RESULT} = [{'time': 0.020017986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.306900000000159e-05, 'source_diff': 8.306900000000159e-05}, {'time': 0.020114, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:48.600" endtime="20201117 14:41:48.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.617" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:48.604" endtime="20201117 14:41:48.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.622" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.621" endtime="20201117 14:41:48.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.624" level="INFO">VALUE: [8.306900000000159e-05, 8.318100000000161e-05, 8.262499999999937e-05, 8.315300000000247e-05, 8.283299999999744e-05, 8.322200000000085e-05, 8.324999999999999e-05, 8.34170000000023e-05, 8.336100000000055e-05, 8.294400000000146e-05, 8.304100000000245e-05, 8.286100000000005e-05, 8.287499999999962e-05, 8.356999999999809e-05, 8.286100000000005e-05, 8.32919999999987e-05, 8.255499999999805e-05, 8.307000000000106e-05, 8.274999999999949e-05, 8.26109999999998e-05, 8.323599999999695e-05, 8.273599999999992e-05, 8.322300000000032e-05, 8.284799999999995e-05, 8.287499999999962e-05, 8.274999999999949e-05, 8.323600000000042e-05, 8.309700000000073e-05, 8.269400000000121e-05, 8.266699999999808e-05, 8.288900000000265e-05, 8.34720000000011e-05, 8.280599999999777e-05, 8.282000000000081e-05, 8.288900000000265e-05, 8.263899999999894e-05, 8.318100000000161e-05, 8.294399999999799e-05, 8.32919999999987e-05, 8.305499999999855e-05, 8.279099999999873e-05, 8.33049999999988e-05, 8.333299999999794e-05, 8.266700000000154e-05, 8.266700000000154e-05, 8.26109999999998e-05, 8.297300000000007e-05, 8.268100000000111e-05, 8.255599999999752e-05, 8.327699999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.623" endtime="20201117 14:41:48.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.618" endtime="20201117 14:41:48.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.628" endtime="20201117 14:41:48.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.631" endtime="20201117 14:41:48.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.629" endtime="20201117 14:41:48.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.626" endtime="20201117 14:41:48.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.255" endtime="20201117 14:41:48.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.855" endtime="20201117 14:41:48.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.854" endtime="20201117 14:41:48.653"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.655" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.665" endtime="20201117 14:41:48.685"></status>
</kw>
<msg timestamp="20201117 14:41:48.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.663" endtime="20201117 14:41:48.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.687" endtime="20201117 14:41:48.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.689" endtime="20201117 14:41:48.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.660" endtime="20201117 14:41:48.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.657" endtime="20201117 14:41:48.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.699" endtime="20201117 14:41:48.985"></status>
</kw>
<msg timestamp="20201117 14:41:48.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.697" endtime="20201117 14:41:48.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.989" endtime="20201117 14:41:48.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.998" endtime="20201117 14:41:48.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.695" endtime="20201117 14:41:49.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.693" endtime="20201117 14:41:49.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.005" level="INFO">${RESULT} = [{'time': 0.024357069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.429100000000023e-05, 'source_diff': 8.429100000000023e-05}, {'time': 0.024455097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.001" endtime="20201117 14:41:49.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:49.006" endtime="20201117 14:41:49.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.025" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.023" endtime="20201117 14:41:49.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.027" level="INFO">VALUE: [8.429100000000023e-05, 8.424999999999752e-05, 8.355499999999905e-05, 8.398600000000117e-05, 8.437500000000112e-05, 8.448600000000167e-05, 8.363899999999994e-05, 8.402799999999988e-05, 8.366699999999908e-05, 8.394499999999847e-05, 8.392999999999942e-05, 8.375000000000049e-05, 8.41249999999974e-05, 8.400000000000074e-05, 8.437500000000112e-05, 8.362500000000037e-05, 8.379099999999973e-05, 8.391599999999985e-05, 8.400000000000074e-05, 8.437500000000112e-05, 8.43049999999998e-05, 8.448600000000167e-05, 8.373600000000092e-05, 8.359700000000123e-05, 8.359700000000123e-05, 8.393000000000289e-05, 8.449999999999777e-05, 8.391699999999933e-05, 8.442999999999992e-05, 8.442999999999992e-05, 8.373599999999745e-05, 8.41110000000013e-05, 8.36110000000008e-05, 8.404199999999945e-05, 8.44309999999994e-05, 8.436099999999808e-05, 8.422200000000185e-05, 8.391699999999933e-05, 8.386100000000105e-05, 8.372200000000135e-05, 8.354199999999895e-05, 8.442999999999992e-05, 8.384700000000148e-05, 8.450000000000124e-05, 8.394399999999899e-05, 8.373600000000092e-05, 8.420799999999881e-05, 8.400000000000074e-05, 8.366699999999908e-05, 8.388900000000019e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.026" endtime="20201117 14:41:49.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.021" endtime="20201117 14:41:49.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.030" endtime="20201117 14:41:49.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.034" endtime="20201117 14:41:49.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.032" endtime="20201117 14:41:49.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.029" endtime="20201117 14:41:49.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.656" endtime="20201117 14:41:49.055"></status>
</kw>
<msg timestamp="20201117 14:41:49.055" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.064" endtime="20201117 14:41:49.084"></status>
</kw>
<msg timestamp="20201117 14:41:49.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.062" endtime="20201117 14:41:49.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.086" endtime="20201117 14:41:49.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.088" endtime="20201117 14:41:49.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.060" endtime="20201117 14:41:49.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.057" endtime="20201117 14:41:49.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.142" endtime="20201117 14:41:49.428"></status>
</kw>
<msg timestamp="20201117 14:41:49.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020369556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.140" endtime="20201117 14:41:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020369556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.432" endtime="20201117 14:41:49.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.441" endtime="20201117 14:41:49.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.138" endtime="20201117 14:41:49.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.136" endtime="20201117 14:41:49.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.448" level="INFO">${RESULT} = [{'time': 0.020369556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.4459000000002e-05, 'source_diff': 8.4459000000002e-05}, {'time': 0.020468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201117 14:41:49.444" endtime="20201117 14:41:49.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.461" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:49.449" endtime="20201117 14:41:49.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.466" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.465" endtime="20201117 14:41:49.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.469" level="INFO">VALUE: [8.4459000000002e-05, 8.356999999999809e-05, 8.42919999999997e-05, 8.401300000000084e-05, 8.391699999999933e-05, 8.377700000000016e-05, 8.367999999999917e-05, 8.398600000000117e-05, 8.406899999999912e-05, 8.416699999999958e-05, 8.41110000000013e-05, 8.394499999999847e-05, 8.437500000000112e-05, 8.423600000000142e-05, 8.380600000000224e-05, 8.412500000000087e-05, 8.41110000000013e-05, 8.375000000000049e-05, 8.354099999999948e-05, 8.398600000000117e-05, 8.372199999999788e-05, 8.36659999999996e-05, 8.437500000000112e-05, 8.398600000000117e-05, 8.386099999999758e-05, 8.424999999999752e-05, 8.42919999999997e-05, 8.409700000000173e-05, 8.419500000000218e-05, 8.367999999999917e-05, 8.397199999999813e-05, 8.354199999999895e-05, 8.412500000000087e-05, 8.448600000000167e-05, 8.419399999999924e-05, 8.425000000000099e-05, 8.419400000000271e-05, 8.404199999999945e-05, 8.411099999999783e-05, 8.363899999999994e-05, 8.384799999999748e-05, 8.402799999999988e-05, 8.400000000000074e-05, 8.366700000000254e-05, 8.419499999999872e-05, 8.417999999999967e-05, 8.437499999999765e-05, 8.4153e-05, 8.354099999999948e-05, 8.431899999999937e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.467" endtime="20201117 14:41:49.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.462" endtime="20201117 14:41:49.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.472" endtime="20201117 14:41:49.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.476" endtime="20201117 14:41:49.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.474" endtime="20201117 14:41:49.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.470" endtime="20201117 14:41:49.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.056" endtime="20201117 14:41:49.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.654" endtime="20201117 14:41:49.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.653" endtime="20201117 14:41:49.497"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.500" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.508" endtime="20201117 14:41:49.528"></status>
</kw>
<msg timestamp="20201117 14:41:49.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.507" endtime="20201117 14:41:49.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.530" endtime="20201117 14:41:49.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.532" endtime="20201117 14:41:49.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.504" endtime="20201117 14:41:49.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.502" endtime="20201117 14:41:49.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.542" endtime="20201117 14:41:49.828"></status>
</kw>
<msg timestamp="20201117 14:41:49.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.540" endtime="20201117 14:41:49.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.833" endtime="20201117 14:41:49.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.841" endtime="20201117 14:41:49.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.537" endtime="20201117 14:41:49.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.536" endtime="20201117 14:41:49.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.848" level="INFO">${RESULT} = [{'time': 0.022411806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.534799999999898e-05, 'source_diff': 8.534799999999898e-05}, {'time': 0.022510806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.845" endtime="20201117 14:41:49.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.862" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:49.849" endtime="20201117 14:41:49.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.867" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.866" endtime="20201117 14:41:49.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.870" level="INFO">VALUE: [8.534799999999898e-05, 8.54310000000004e-05, 8.468000000000017e-05, 8.456899999999962e-05, 8.538899999999822e-05, 8.488899999999772e-05, 8.523599999999895e-05, 8.536100000000255e-05, 8.530600000000027e-05, 8.459699999999876e-05, 8.490300000000076e-05, 8.504200000000045e-05, 8.455599999999952e-05, 8.551399999999834e-05, 8.49729999999986e-05, 8.466700000000008e-05, 8.518000000000067e-05, 8.540200000000178e-05, 8.459699999999876e-05, 8.525000000000199e-05, 8.493000000000042e-05, 8.454199999999995e-05, 8.491700000000033e-05, 8.488900000000119e-05, 8.47920000000002e-05, 8.49309999999999e-05, 8.537499999999865e-05, 8.544499999999997e-05, 8.454199999999995e-05, 8.526299999999862e-05, 8.509699999999926e-05, 8.551399999999834e-05, 8.493000000000042e-05, 8.527700000000166e-05, 8.46530000000005e-05, 8.483299999999944e-05, 8.526400000000156e-05, 8.488899999999772e-05, 8.458299999999919e-05, 8.457000000000256e-05, 8.524999999999852e-05, 8.519499999999972e-05, 8.481999999999934e-05, 8.473699999999793e-05, 8.505600000000002e-05, 8.466700000000008e-05, 8.505500000000055e-05, 8.519400000000024e-05, 8.518000000000067e-05, 8.493000000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.868" endtime="20201117 14:41:49.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.863" endtime="20201117 14:41:49.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.873" endtime="20201117 14:41:49.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.877" endtime="20201117 14:41:49.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.875" endtime="20201117 14:41:49.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.872" endtime="20201117 14:41:49.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.500" endtime="20201117 14:41:49.898"></status>
</kw>
<msg timestamp="20201117 14:41:49.898" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.907" endtime="20201117 14:41:49.927"></status>
</kw>
<msg timestamp="20201117 14:41:49.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.905" endtime="20201117 14:41:49.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.929" endtime="20201117 14:41:49.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.931" endtime="20201117 14:41:49.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.902" endtime="20201117 14:41:49.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.900" endtime="20201117 14:41:49.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.941" endtime="20201117 14:41:50.228"></status>
</kw>
<msg timestamp="20201117 14:41:50.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.939" endtime="20201117 14:41:50.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.233" endtime="20201117 14:41:50.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.241" endtime="20201117 14:41:50.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.936" endtime="20201117 14:41:50.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.935" endtime="20201117 14:41:50.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.249" level="INFO">${RESULT} = [{'time': 0.019810917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.527800000000113e-05, 'source_diff': 8.527800000000113e-05}, {'time': 0.019908903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.246" endtime="20201117 14:41:50.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.263" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:50.250" endtime="20201117 14:41:50.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.267" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.266" endtime="20201117 14:41:50.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.270" level="INFO">VALUE: [8.527800000000113e-05, 8.523599999999895e-05, 8.475000000000149e-05, 8.536099999999908e-05, 8.51110000000023e-05, 8.527700000000166e-05, 8.488899999999772e-05, 8.490200000000128e-05, 8.449999999999777e-05, 8.501400000000131e-05, 8.477800000000063e-05, 8.544499999999997e-05, 8.47920000000002e-05, 8.477800000000063e-05, 8.480599999999977e-05, 8.519499999999972e-05, 8.516700000000058e-05, 8.538800000000221e-05, 8.534799999999898e-05, 8.509699999999926e-05, 8.468000000000017e-05, 8.497199999999913e-05, 8.520899999999929e-05, 8.516599999999763e-05, 8.542999999999745e-05, 8.494499999999947e-05, 8.470800000000278e-05, 8.513900000000144e-05, 8.506999999999959e-05, 8.527800000000113e-05, 8.544400000000049e-05, 8.54729999999991e-05, 8.552699999999844e-05, 8.474999999999802e-05, 8.501400000000131e-05, 8.527800000000113e-05, 8.508299999999969e-05, 8.525000000000199e-05, 8.513900000000144e-05, 8.5153000000001e-05, 8.466700000000008e-05, 8.529099999999776e-05, 8.541700000000083e-05, 8.477800000000063e-05, 8.54310000000004e-05, 8.459799999999823e-05, 8.513899999999797e-05, 8.527799999999766e-05, 8.541600000000135e-05, 8.505500000000055e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.268" endtime="20201117 14:41:50.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.264" endtime="20201117 14:41:50.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.274" endtime="20201117 14:41:50.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.277" endtime="20201117 14:41:50.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.276" endtime="20201117 14:41:50.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.272" endtime="20201117 14:41:50.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.899" endtime="20201117 14:41:50.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.498" endtime="20201117 14:41:50.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.498" endtime="20201117 14:41:50.298"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.301" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.309" endtime="20201117 14:41:50.330"></status>
</kw>
<msg timestamp="20201117 14:41:50.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.308" endtime="20201117 14:41:50.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.331" endtime="20201117 14:41:50.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.334" endtime="20201117 14:41:50.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.305" endtime="20201117 14:41:50.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.303" endtime="20201117 14:41:50.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.343" endtime="20201117 14:41:50.631"></status>
</kw>
<msg timestamp="20201117 14:41:50.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02260125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:50.342" endtime="20201117 14:41:50.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02260125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:50.636" endtime="20201117 14:41:50.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.644" endtime="20201117 14:41:50.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.339" endtime="20201117 14:41:50.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.337" endtime="20201117 14:41:50.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.651" level="INFO">${RESULT} = [{'time': 0.02260125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.641699999999836e-05, 'source_diff': 8.641699999999836e-05}, {'time': 0.02270025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:50.648" endtime="20201117 14:41:50.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.666" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:50.652" endtime="20201117 14:41:50.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.671" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.670" endtime="20201117 14:41:50.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.675" level="INFO">VALUE: [8.641699999999836e-05, 8.580600000000077e-05, 8.625000000000299e-05, 8.57920000000012e-05, 8.569500000000022e-05, 8.641700000000183e-05, 8.574999999999902e-05, 8.573599999999945e-05, 8.602799999999841e-05, 8.609799999999973e-05, 8.581900000000087e-05, 8.562500000000237e-05, 8.595799999999709e-05, 8.64860000000002e-05, 8.562500000000237e-05, 8.593000000000142e-05, 8.602799999999841e-05, 8.573599999999945e-05, 8.59310000000009e-05, 8.580600000000077e-05, 8.580600000000077e-05, 8.604199999999798e-05, 8.618100000000115e-05, 8.61119999999993e-05, 8.590300000000176e-05, 8.619400000000124e-05, 8.622200000000038e-05, 8.611099999999983e-05, 8.626400000000256e-05, 8.630499999999833e-05, 8.649999999999977e-05, 8.649999999999977e-05, 8.644500000000097e-05, 8.624999999999952e-05, 8.608400000000016e-05, 8.618100000000115e-05, 8.601299999999937e-05, 8.549999999999877e-05, 8.58050000000013e-05, 8.597200000000013e-05, 8.5847e-05, 8.618000000000167e-05, 8.644399999999802e-05, 8.561099999999933e-05, 8.591699999999786e-05, 8.638899999999922e-05, 8.591700000000133e-05, 8.56669999999976e-05, 8.574999999999902e-05, 8.57920000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.673" endtime="20201117 14:41:50.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.667" endtime="20201117 14:41:50.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.678" endtime="20201117 14:41:50.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.682" endtime="20201117 14:41:50.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.680" endtime="20201117 14:41:50.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.676" endtime="20201117 14:41:50.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.301" endtime="20201117 14:41:50.703"></status>
</kw>
<msg timestamp="20201117 14:41:50.703" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.711" endtime="20201117 14:41:50.731"></status>
</kw>
<msg timestamp="20201117 14:41:50.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.710" endtime="20201117 14:41:50.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.733" endtime="20201117 14:41:50.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.735" endtime="20201117 14:41:50.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.707" endtime="20201117 14:41:50.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.705" endtime="20201117 14:41:50.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.745" endtime="20201117 14:41:51.031"></status>
</kw>
<msg timestamp="20201117 14:41:51.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.743" endtime="20201117 14:41:51.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020033153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.036" endtime="20201117 14:41:51.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.044" endtime="20201117 14:41:51.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.741" endtime="20201117 14:41:51.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.739" endtime="20201117 14:41:51.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.051" level="INFO">${RESULT} = [{'time': 0.020033153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.636100000000008e-05, 'source_diff': 8.636100000000008e-05}, {'time': 0.020133181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.048" endtime="20201117 14:41:51.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.065" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:51.052" endtime="20201117 14:41:51.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.070" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.069" endtime="20201117 14:41:51.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.072" level="INFO">VALUE: [8.636100000000008e-05, 8.595900000000004e-05, 8.648699999999968e-05, 8.629199999999823e-05, 8.645800000000106e-05, 8.649999999999977e-05, 8.587500000000262e-05, 8.630499999999833e-05, 8.570799999999684e-05, 8.595800000000056e-05, 8.56249999999989e-05, 8.602799999999841e-05, 8.554200000000095e-05, 8.619500000000072e-05, 8.618100000000115e-05, 8.64310000000014e-05, 8.599999999999927e-05, 8.636100000000008e-05, 8.569399999999727e-05, 8.556899999999715e-05, 8.609700000000026e-05, 8.594500000000047e-05, 8.647200000000063e-05, 8.616700000000158e-05, 8.619400000000124e-05, 8.577799999999816e-05, 8.637499999999965e-05, 8.59859999999997e-05, 8.591700000000133e-05, 8.545899999999954e-05, 8.652799999999891e-05, 8.63189999999979e-05, 8.63059999999978e-05, 8.641599999999888e-05, 8.58189999999974e-05, 8.592999999999795e-05, 8.59859999999997e-05, 8.616700000000158e-05, 8.609700000000026e-05, 8.607000000000059e-05, 8.557000000000009e-05, 8.5847e-05, 8.641699999999836e-05, 8.591700000000133e-05, 8.641699999999836e-05, 8.613899999999897e-05, 8.624999999999952e-05, 8.649999999999977e-05, 8.559699999999976e-05, 8.640199999999931e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.071" endtime="20201117 14:41:51.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.066" endtime="20201117 14:41:51.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.076" endtime="20201117 14:41:51.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.079" endtime="20201117 14:41:51.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.078" endtime="20201117 14:41:51.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.074" endtime="20201117 14:41:51.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.703" endtime="20201117 14:41:51.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.300" endtime="20201117 14:41:51.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.299" endtime="20201117 14:41:51.100"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.103" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.111" endtime="20201117 14:41:51.132"></status>
</kw>
<msg timestamp="20201117 14:41:51.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.110" endtime="20201117 14:41:51.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.133" endtime="20201117 14:41:51.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.136" endtime="20201117 14:41:51.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.107" endtime="20201117 14:41:51.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.105" endtime="20201117 14:41:51.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.145" endtime="20201117 14:41:51.432"></status>
</kw>
<msg timestamp="20201117 14:41:51.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.144" endtime="20201117 14:41:51.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.436" endtime="20201117 14:41:51.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.445" endtime="20201117 14:41:51.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.141" endtime="20201117 14:41:51.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.139" endtime="20201117 14:41:51.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.456" level="INFO">${RESULT} = [{'time': 0.022571111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.73050000000028e-05, 'source_diff': 8.73050000000028e-05}, {'time': 0.022672125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:51.453" endtime="20201117 14:41:51.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.470" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:51.457" endtime="20201117 14:41:51.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.475" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.474" endtime="20201117 14:41:51.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.477" level="INFO">VALUE: [8.73050000000028e-05, 8.661100000000033e-05, 8.672300000000036e-05, 8.704200000000245e-05, 8.71669999999991e-05, 8.700000000000027e-05, 8.656999999999762e-05, 8.694400000000199e-05, 8.720899999999782e-05, 8.665199999999956e-05, 8.729099999999976e-05, 8.716599999999963e-05, 8.687500000000015e-05, 8.694399999999852e-05, 8.659700000000076e-05, 8.726400000000009e-05, 8.71669999999991e-05, 8.66249999999999e-05, 8.67920000000022e-05, 8.666700000000208e-05, 8.697199999999766e-05, 8.752700000000044e-05, 8.687500000000015e-05, 8.715299999999954e-05, 8.675000000000002e-05, 8.69860000000007e-05, 8.656900000000162e-05, 8.713899999999997e-05, 8.663899999999947e-05, 8.656899999999815e-05, 8.706999999999812e-05, 8.74449999999985e-05, 8.666700000000208e-05, 8.715299999999954e-05, 8.732000000000184e-05, 8.74730000000011e-05, 8.723699999999696e-05, 8.705499999999908e-05, 8.716599999999963e-05, 8.697199999999766e-05, 8.709699999999779e-05, 8.719399999999877e-05, 8.652800000000238e-05, 8.71250000000004e-05, 8.704199999999898e-05, 8.723599999999748e-05, 8.718100000000215e-05, 8.709799999999726e-05, 8.713899999999997e-05, 8.723700000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.476" endtime="20201117 14:41:51.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.471" endtime="20201117 14:41:51.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.480" endtime="20201117 14:41:51.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.484" endtime="20201117 14:41:51.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.483" endtime="20201117 14:41:51.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.479" endtime="20201117 14:41:51.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.104" endtime="20201117 14:41:51.505"></status>
</kw>
<msg timestamp="20201117 14:41:51.505" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.514" endtime="20201117 14:41:51.534"></status>
</kw>
<msg timestamp="20201117 14:41:51.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.512" endtime="20201117 14:41:51.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.536" endtime="20201117 14:41:51.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.539" endtime="20201117 14:41:51.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.509" endtime="20201117 14:41:51.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.507" endtime="20201117 14:41:51.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.548" endtime="20201117 14:41:51.834"></status>
</kw>
<msg timestamp="20201117 14:41:51.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019940222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.546" endtime="20201117 14:41:51.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019940222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.838" endtime="20201117 14:41:51.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.847" endtime="20201117 14:41:51.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.544" endtime="20201117 14:41:51.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.542" endtime="20201117 14:41:51.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.854" level="INFO">${RESULT} = [{'time': 0.020027639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.741699999999936e-05, 'source_diff': 8.741699999999936e-05}, {'time': 0.020130708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.851" endtime="20201117 14:41:51.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.868" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:51.855" endtime="20201117 14:41:51.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.872" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.871" endtime="20201117 14:41:51.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.875" level="INFO">VALUE: [8.741699999999936e-05, 8.66249999999999e-05, 8.719500000000172e-05, 8.755499999999958e-05, 8.73470000000015e-05, 8.694500000000147e-05, 8.679099999999926e-05, 8.716599999999963e-05, 8.680499999999883e-05, 8.744399999999902e-05, 8.707000000000159e-05, 8.665299999999904e-05, 8.708299999999822e-05, 8.716700000000258e-05, 8.750000000000077e-05, 8.705600000000202e-05, 8.705599999999855e-05, 8.69860000000007e-05, 8.74860000000012e-05, 8.673699999999993e-05, 8.69860000000007e-05, 8.69730000000006e-05, 8.681900000000187e-05, 8.704099999999951e-05, 8.691599999999938e-05, 8.715299999999954e-05, 8.659700000000076e-05, 8.715299999999954e-05, 8.727799999999966e-05, 8.657000000000109e-05, 8.66249999999999e-05, 8.652799999999891e-05, 8.732000000000184e-05, 8.655600000000152e-05, 8.698700000000018e-05, 8.681900000000187e-05, 8.673600000000045e-05, 8.688899999999972e-05, 8.655499999999858e-05, 8.673600000000045e-05, 8.676399999999959e-05, 8.694500000000147e-05, 8.700000000000027e-05, 8.724999999999705e-05, 8.740200000000031e-05, 8.687500000000015e-05, 8.69860000000007e-05, 8.681900000000187e-05, 8.690199999999981e-05, 8.677799999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.873" endtime="20201117 14:41:51.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.869" endtime="20201117 14:41:51.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.878" endtime="20201117 14:41:51.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.882" endtime="20201117 14:41:51.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.880" endtime="20201117 14:41:51.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.876" endtime="20201117 14:41:51.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.506" endtime="20201117 14:41:51.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.102" endtime="20201117 14:41:51.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.101" endtime="20201117 14:41:51.903"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.905" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.914" endtime="20201117 14:41:51.935"></status>
</kw>
<msg timestamp="20201117 14:41:51.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.912" endtime="20201117 14:41:51.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.936" endtime="20201117 14:41:51.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.939" endtime="20201117 14:41:51.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.910" endtime="20201117 14:41:51.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.907" endtime="20201117 14:41:51.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.949" endtime="20201117 14:41:52.236"></status>
</kw>
<msg timestamp="20201117 14:41:52.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.947" endtime="20201117 14:41:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.240" endtime="20201117 14:41:52.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.249" endtime="20201117 14:41:52.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.944" endtime="20201117 14:41:52.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.942" endtime="20201117 14:41:52.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.256" level="INFO">${RESULT} = [{'time': 0.022689542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.840300000000079e-05, 'source_diff': 8.840300000000079e-05}, {'time': 0.022792556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.253" endtime="20201117 14:41:52.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.271" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:52.257" endtime="20201117 14:41:52.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.276" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.274" endtime="20201117 14:41:52.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.278" level="INFO">VALUE: [8.840300000000079e-05, 8.773699999999746e-05, 8.786100000000158e-05, 8.776400000000059e-05, 8.837499999999818e-05, 8.76250000000009e-05, 8.831999999999937e-05, 8.770900000000179e-05, 8.797200000000213e-05, 8.761099999999786e-05, 8.759699999999829e-05, 8.848599999999873e-05, 8.811099999999836e-05, 8.786099999999811e-05, 8.787500000000115e-05, 8.81120000000013e-05, 8.843000000000045e-05, 8.792999999999995e-05, 8.802800000000041e-05, 8.845799999999959e-05, 8.779199999999973e-05, 8.83059999999998e-05, 8.790300000000029e-05, 8.804199999999998e-05, 8.754199999999948e-05, 8.815300000000054e-05, 8.804199999999998e-05, 8.804199999999998e-05, 8.797200000000213e-05, 8.848700000000168e-05, 8.779100000000026e-05, 8.831900000000337e-05, 8.784699999999854e-05, 8.766600000000013e-05, 8.794399999999952e-05, 8.786099999999811e-05, 8.826399999999762e-05, 8.770900000000179e-05, 8.793099999999943e-05, 8.783399999999844e-05, 8.779199999999973e-05, 8.791699999999986e-05, 8.809799999999826e-05, 8.84869999999982e-05, 8.76250000000009e-05, 8.797199999999866e-05, 8.800000000000127e-05, 8.761100000000133e-05, 8.805599999999955e-05, 8.84999999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.277" endtime="20201117 14:41:52.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.272" endtime="20201117 14:41:52.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.281" endtime="20201117 14:41:52.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.285" endtime="20201117 14:41:52.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.283" endtime="20201117 14:41:52.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.280" endtime="20201117 14:41:52.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.906" endtime="20201117 14:41:52.306"></status>
</kw>
<msg timestamp="20201117 14:41:52.306" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.315" endtime="20201117 14:41:52.335"></status>
</kw>
<msg timestamp="20201117 14:41:52.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.313" endtime="20201117 14:41:52.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.337" endtime="20201117 14:41:52.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.340" endtime="20201117 14:41:52.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.310" endtime="20201117 14:41:52.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.308" endtime="20201117 14:41:52.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.349" endtime="20201117 14:41:52.636"></status>
</kw>
<msg timestamp="20201117 14:41:52.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.347" endtime="20201117 14:41:52.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.641" endtime="20201117 14:41:52.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.649" endtime="20201117 14:41:52.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.345" endtime="20201117 14:41:52.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.343" endtime="20201117 14:41:52.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.656" level="INFO">${RESULT} = [{'time': 0.019891611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.76799999999997e-05, 'source_diff': 8.76799999999997e-05}, {'time': 0.019995625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:52.653" endtime="20201117 14:41:52.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.670" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:52.658" endtime="20201117 14:41:52.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.675" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.674" endtime="20201117 14:41:52.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.677" level="INFO">VALUE: [8.76799999999997e-05, 8.851399999999787e-05, 8.752799999999991e-05, 8.818099999999968e-05, 8.768099999999918e-05, 8.787499999999768e-05, 8.850000000000177e-05, 8.843099999999993e-05, 8.773599999999798e-05, 8.777799999999669e-05, 8.820800000000281e-05, 8.76799999999997e-05, 8.795799999999909e-05, 8.81800000000002e-05, 8.804100000000051e-05, 8.763900000000047e-05, 8.783299999999897e-05, 8.837499999999818e-05, 8.786100000000158e-05, 8.809700000000226e-05, 8.838899999999775e-05, 8.81670000000001e-05, 8.752799999999991e-05, 8.756899999999915e-05, 8.794399999999952e-05, 8.81800000000002e-05, 8.774999999999755e-05, 8.78189999999994e-05, 8.854200000000048e-05, 8.856999999999962e-05, 8.811100000000183e-05, 8.784700000000201e-05, 8.761100000000133e-05, 8.759699999999829e-05, 8.761100000000133e-05, 8.800000000000127e-05, 8.840300000000079e-05, 8.805500000000008e-05, 8.806899999999965e-05, 8.816599999999716e-05, 8.819399999999977e-05, 8.756899999999915e-05, 8.762499999999743e-05, 8.836099999999861e-05, 8.811100000000183e-05, 8.841700000000036e-05, 8.804199999999998e-05, 8.775000000000102e-05, 8.790300000000029e-05, 8.811100000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.676" endtime="20201117 14:41:52.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.671" endtime="20201117 14:41:52.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.681" endtime="20201117 14:41:52.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.684" endtime="20201117 14:41:52.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.683" endtime="20201117 14:41:52.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.679" endtime="20201117 14:41:52.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.307" endtime="20201117 14:41:52.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.904" endtime="20201117 14:41:52.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.903" endtime="20201117 14:41:52.706"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.708" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.717" endtime="20201117 14:41:52.738"></status>
</kw>
<msg timestamp="20201117 14:41:52.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.715" endtime="20201117 14:41:52.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.740" endtime="20201117 14:41:52.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.742" endtime="20201117 14:41:52.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.712" endtime="20201117 14:41:52.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.710" endtime="20201117 14:41:52.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.752" endtime="20201117 14:41:53.039"></status>
</kw>
<msg timestamp="20201117 14:41:53.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.750" endtime="20201117 14:41:53.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.044" endtime="20201117 14:41:53.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.052" endtime="20201117 14:41:53.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.747" endtime="20201117 14:41:53.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.745" endtime="20201117 14:41:53.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.059" level="INFO">${RESULT} = [{'time': 0.023175736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915299999999807e-05, 'source_diff': 8.915299999999807e-05}, {'time': 0.023280667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.056" endtime="20201117 14:41:53.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:53.060" endtime="20201117 14:41:53.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.077" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.076" endtime="20201117 14:41:53.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.080" level="INFO">VALUE: [8.915299999999807e-05, 8.886100000000258e-05, 8.918100000000068e-05, 8.862499999999843e-05, 8.883299999999997e-05, 8.855500000000058e-05, 8.88190000000004e-05, 8.919400000000077e-05, 8.922199999999991e-05, 8.936099999999961e-05, 8.870899999999932e-05, 8.922199999999991e-05, 8.947200000000016e-05, 8.869499999999975e-05, 8.938900000000222e-05, 8.936099999999961e-05, 8.951300000000287e-05, 8.906900000000065e-05, 8.902700000000194e-05, 8.891699999999739e-05, 8.929200000000123e-05, 8.936099999999961e-05, 8.91800000000012e-05, 8.893100000000043e-05, 8.927799999999819e-05, 8.912499999999893e-05, 8.93060000000008e-05, 8.88060000000003e-05, 8.891700000000086e-05, 8.950000000000277e-05, 8.869400000000027e-05, 8.942999999999798e-05, 8.934700000000004e-05, 8.924999999999905e-05, 8.86800000000007e-05, 8.901400000000184e-05, 8.887499999999868e-05, 8.905500000000108e-05, 8.920899999999982e-05, 8.936099999999961e-05, 8.912499999999893e-05, 8.868100000000018e-05, 8.893100000000043e-05, 8.86670000000006e-05, 8.873599999999898e-05, 8.916600000000163e-05, 8.912499999999893e-05, 8.929100000000176e-05, 8.880500000000083e-05, 8.886099999999911e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.079" endtime="20201117 14:41:53.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.074" endtime="20201117 14:41:53.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.083" endtime="20201117 14:41:53.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.087" endtime="20201117 14:41:53.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.085" endtime="20201117 14:41:53.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.081" endtime="20201117 14:41:53.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.709" endtime="20201117 14:41:53.108"></status>
</kw>
<msg timestamp="20201117 14:41:53.108" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.117" endtime="20201117 14:41:53.137"></status>
</kw>
<msg timestamp="20201117 14:41:53.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.115" endtime="20201117 14:41:53.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.138" endtime="20201117 14:41:53.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.141" endtime="20201117 14:41:53.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.113" endtime="20201117 14:41:53.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.110" endtime="20201117 14:41:53.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.151" endtime="20201117 14:41:53.438"></status>
</kw>
<msg timestamp="20201117 14:41:53.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.149" endtime="20201117 14:41:53.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.442" endtime="20201117 14:41:53.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.451" endtime="20201117 14:41:53.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.146" endtime="20201117 14:41:53.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.145" endtime="20201117 14:41:53.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.458" level="INFO">${RESULT} = [{'time': 0.020521181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.94450000000005e-05, 'source_diff': 8.94450000000005e-05}, {'time': 0.020627194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:53.454" endtime="20201117 14:41:53.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:53.459" endtime="20201117 14:41:53.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.476" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.475" endtime="20201117 14:41:53.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.479" level="INFO">VALUE: [8.94450000000005e-05, 8.950000000000277e-05, 8.958400000000019e-05, 8.930499999999786e-05, 8.861100000000233e-05, 8.8945e-05, 8.88190000000004e-05, 8.927799999999819e-05, 8.901399999999837e-05, 8.945900000000007e-05, 8.918100000000068e-05, 8.876400000000159e-05, 8.890300000000129e-05, 8.943000000000145e-05, 8.909700000000326e-05, 8.866600000000113e-05, 8.931899999999743e-05, 8.945800000000059e-05, 8.901400000000184e-05, 8.890299999999782e-05, 8.86670000000006e-05, 8.922199999999991e-05, 8.868100000000018e-05, 8.897200000000313e-05, 8.904200000000098e-05, 8.863900000000147e-05, 8.854200000000048e-05, 8.911099999999936e-05, 8.920800000000034e-05, 8.887500000000215e-05, 8.88190000000004e-05, 8.886100000000258e-05, 8.897199999999966e-05, 8.905600000000055e-05, 8.86670000000006e-05, 8.855600000000005e-05, 8.907000000000012e-05, 8.868100000000018e-05, 8.937499999999918e-05, 8.887500000000215e-05, 8.926399999999862e-05, 8.941599999999841e-05, 8.923599999999948e-05, 8.909699999999979e-05, 8.920800000000034e-05, 8.926400000000209e-05, 8.873599999999898e-05, 8.934700000000004e-05, 8.936100000000308e-05, 8.8945e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.477" endtime="20201117 14:41:53.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.472" endtime="20201117 14:41:53.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.482" endtime="20201117 14:41:53.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.486" endtime="20201117 14:41:53.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.484" endtime="20201117 14:41:53.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.480" endtime="20201117 14:41:53.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.109" endtime="20201117 14:41:53.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.707" endtime="20201117 14:41:53.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.706" endtime="20201117 14:41:53.507"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.509" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.518" endtime="20201117 14:41:53.539"></status>
</kw>
<msg timestamp="20201117 14:41:53.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.516" endtime="20201117 14:41:53.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.540" endtime="20201117 14:41:53.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.543" endtime="20201117 14:41:53.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.514" endtime="20201117 14:41:53.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.512" endtime="20201117 14:41:53.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.552" endtime="20201117 14:41:53.840"></status>
</kw>
<msg timestamp="20201117 14:41:53.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02253775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:53.551" endtime="20201117 14:41:53.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02253775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:53.845" endtime="20201117 14:41:53.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.853" endtime="20201117 14:41:53.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.548" endtime="20201117 14:41:53.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.546" endtime="20201117 14:41:53.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.860" level="INFO">${RESULT} = [{'time': 0.02253775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.951399999999887e-05, 'source_diff': 8.951399999999887e-05}, {'time': 0.022641792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:53.856" endtime="20201117 14:41:53.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.875" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:53.861" endtime="20201117 14:41:53.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.880" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.878" endtime="20201117 14:41:53.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.882" level="INFO">VALUE: [8.951399999999887e-05, 8.988899999999925e-05, 9.023600000000048e-05, 8.982000000000087e-05, 8.972200000000041e-05, 8.988899999999925e-05, 9.023699999999996e-05, 8.980499999999836e-05, 9.019400000000177e-05, 8.958300000000072e-05, 9.047199999999769e-05, 8.986100000000011e-05, 9.026399999999962e-05, 8.983300000000097e-05, 8.955600000000105e-05, 9.029200000000223e-05, 9.05000000000003e-05, 9.006999999999765e-05, 9.005499999999861e-05, 8.991699999999839e-05, 8.954099999999854e-05, 9.048600000000073e-05, 9.048600000000073e-05, 9.016599999999916e-05, 9.006899999999818e-05, 8.96800000000017e-05, 8.955600000000105e-05, 8.973599999999998e-05, 9.036100000000061e-05, 8.98060000000013e-05, 9.011099999999689e-05, 9.030599999999833e-05, 9.018099999999821e-05, 9.037500000000018e-05, 8.99869999999997e-05, 9.05000000000003e-05, 8.962499999999943e-05, 8.958300000000072e-05, 8.984700000000054e-05, 8.983300000000097e-05, 9.043100000000193e-05, 9.041699999999889e-05, 9.041699999999889e-05, 8.998600000000023e-05, 8.965299999999857e-05, 8.9638999999999e-05, 9.004199999999851e-05, 9.025000000000005e-05, 9.01939999999983e-05, 8.991600000000238e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.881" endtime="20201117 14:41:53.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.876" endtime="20201117 14:41:53.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.886" endtime="20201117 14:41:53.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.889" endtime="20201117 14:41:53.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.888" endtime="20201117 14:41:53.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.884" endtime="20201117 14:41:53.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.510" endtime="20201117 14:41:53.910"></status>
</kw>
<msg timestamp="20201117 14:41:53.910" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.919" endtime="20201117 14:41:53.939"></status>
</kw>
<msg timestamp="20201117 14:41:53.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.917" endtime="20201117 14:41:53.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.940" endtime="20201117 14:41:53.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.943" endtime="20201117 14:41:53.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.915" endtime="20201117 14:41:53.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.913" endtime="20201117 14:41:53.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.952" endtime="20201117 14:41:54.240"></status>
</kw>
<msg timestamp="20201117 14:41:54.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019910042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.951" endtime="20201117 14:41:54.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019910042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.245" endtime="20201117 14:41:54.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.254" endtime="20201117 14:41:54.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.948" endtime="20201117 14:41:54.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.946" endtime="20201117 14:41:54.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.260" level="INFO">${RESULT} = [{'time': 0.019910042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.9638999999999e-05, 'source_diff': 8.9638999999999e-05}, {'time': 0.020017083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201117 14:41:54.257" endtime="20201117 14:41:54.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.274" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:54.261" endtime="20201117 14:41:54.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.279" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.278" endtime="20201117 14:41:54.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.281" level="INFO">VALUE: [8.9638999999999e-05, 9.047200000000116e-05, 9.032000000000137e-05, 9.016599999999916e-05, 9.042999999999898e-05, 8.980499999999836e-05, 9.025000000000005e-05, 9.017999999999873e-05, 9.002799999999894e-05, 9.04450000000015e-05, 9.011099999999689e-05, 8.969500000000075e-05, 8.965300000000204e-05, 9.034699999999757e-05, 8.952800000000191e-05, 9.025000000000005e-05, 9.049999999999683e-05, 8.973699999999946e-05, 8.955499999999811e-05, 9.022200000000091e-05, 8.991599999999891e-05, 8.954099999999854e-05, 9.05000000000003e-05, 8.956900000000115e-05, 8.96670000000016e-05, 9.047299999999717e-05, 9.027799999999919e-05, 9.002800000000241e-05, 9.043099999999846e-05, 9.018099999999821e-05, 9.03190000000019e-05, 9.036100000000061e-05, 8.980500000000183e-05, 9.047200000000116e-05, 8.987499999999968e-05, 8.973599999999998e-05, 9.011100000000036e-05, 9.015299999999907e-05, 9.041700000000236e-05, 8.990299999999882e-05, 9.023599999999701e-05, 8.991699999999839e-05, 9.023600000000048e-05, 9.004199999999851e-05, 8.974999999999955e-05, 8.992999999999848e-05, 9.005500000000208e-05, 9.038899999999975e-05, 9.01800000000022e-05, 9.047200000000116e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.280" endtime="20201117 14:41:54.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.275" endtime="20201117 14:41:54.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.285" endtime="20201117 14:41:54.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.288" endtime="20201117 14:41:54.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.287" endtime="20201117 14:41:54.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.283" endtime="20201117 14:41:54.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.911" endtime="20201117 14:41:54.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.508" endtime="20201117 14:41:54.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.507" endtime="20201117 14:41:54.310"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.312" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.321" endtime="20201117 14:41:54.342"></status>
</kw>
<msg timestamp="20201117 14:41:54.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.319" endtime="20201117 14:41:54.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.343" endtime="20201117 14:41:54.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.346" endtime="20201117 14:41:54.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.316" endtime="20201117 14:41:54.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.314" endtime="20201117 14:41:54.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.355" endtime="20201117 14:41:54.642"></status>
</kw>
<msg timestamp="20201117 14:41:54.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.354" endtime="20201117 14:41:54.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.647" endtime="20201117 14:41:54.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.656" endtime="20201117 14:41:54.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.351" endtime="20201117 14:41:54.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.349" endtime="20201117 14:41:54.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.663" level="INFO">${RESULT} = [{'time': 0.022672208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.144399999999955e-05, 'source_diff': 9.144399999999955e-05}, {'time': 0.022778222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.659" endtime="20201117 14:41:54.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.676" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:54.664" endtime="20201117 14:41:54.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.681" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.680" endtime="20201117 14:41:54.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.684" level="INFO">VALUE: [9.144399999999955e-05, 9.133300000000247e-05, 9.145799999999912e-05, 9.073600000000098e-05, 9.077799999999969e-05, 9.134700000000204e-05, 9.104199999999951e-05, 9.080599999999883e-05, 9.093099999999896e-05, 9.126399999999715e-05, 9.087500000000068e-05, 9.104199999999951e-05, 9.06520000000001e-05, 9.106900000000265e-05, 9.066599999999966e-05, 9.054099999999954e-05, 9.11390000000005e-05, 9.070800000000184e-05, 9.077799999999969e-05, 9.104200000000298e-05, 9.148699999999774e-05, 9.143099999999946e-05, 9.123700000000096e-05, 9.093099999999896e-05, 9.052799999999944e-05, 9.06670000000026e-05, 9.056899999999868e-05, 9.138899999999728e-05, 9.149999999999783e-05, 9.111100000000136e-05, 9.129199999999976e-05, 9.055499999999911e-05, 9.145799999999912e-05, 9.080499999999936e-05, 9.10000000000008e-05, 9.106999999999865e-05, 9.062500000000043e-05, 9.084700000000154e-05, 9.130599999999933e-05, 9.136099999999814e-05, 9.15139999999974e-05, 9.06939999999988e-05, 9.106899999999918e-05, 9.070800000000184e-05, 9.057000000000162e-05, 9.069499999999828e-05, 9.105599999999908e-05, 9.118100000000268e-05, 9.101400000000037e-05, 9.11670000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.682" endtime="20201117 14:41:54.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.677" endtime="20201117 14:41:54.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.687" endtime="20201117 14:41:54.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.691" endtime="20201117 14:41:54.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.689" endtime="20201117 14:41:54.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.686" endtime="20201117 14:41:54.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.313" endtime="20201117 14:41:54.712"></status>
</kw>
<msg timestamp="20201117 14:41:54.712" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.721" endtime="20201117 14:41:54.742"></status>
</kw>
<msg timestamp="20201117 14:41:54.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.719" endtime="20201117 14:41:54.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.744" endtime="20201117 14:41:54.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.747" endtime="20201117 14:41:54.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.716" endtime="20201117 14:41:54.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.714" endtime="20201117 14:41:54.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.759" endtime="20201117 14:41:55.047"></status>
</kw>
<msg timestamp="20201117 14:41:55.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.757" endtime="20201117 14:41:55.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020612722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.052" endtime="20201117 14:41:55.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.060" endtime="20201117 14:41:55.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.753" endtime="20201117 14:41:55.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.751" endtime="20201117 14:41:55.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.067" level="INFO">${RESULT} = [{'time': 0.020703389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.066699999999914e-05, 'source_diff': 9.066699999999914e-05}, {'time': 0.020809389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.064" endtime="20201117 14:41:55.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.081" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:55.068" endtime="20201117 14:41:55.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.086" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.085" endtime="20201117 14:41:55.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.089" level="INFO">VALUE: [9.066699999999914e-05, 9.137500000000118e-05, 9.075000000000055e-05, 9.091699999999939e-05, 9.083399999999797e-05, 9.090299999999982e-05, 9.069500000000175e-05, 9.095799999999862e-05, 9.086099999999764e-05, 9.080499999999936e-05, 9.081899999999893e-05, 9.136099999999814e-05, 9.087500000000068e-05, 9.059699999999782e-05, 9.094499999999853e-05, 9.066699999999914e-05, 9.067999999999923e-05, 9.106999999999865e-05, 9.148699999999774e-05, 9.143099999999946e-05, 9.080499999999936e-05, 9.137499999999771e-05, 9.094399999999905e-05, 9.105499999999961e-05, 9.105499999999961e-05, 9.097200000000166e-05, 9.124999999999758e-05, 9.098599999999776e-05, 9.086100000000111e-05, 9.061099999999739e-05, 9.05000000000003e-05, 9.106999999999865e-05, 9.119499999999878e-05, 9.145799999999912e-05, 9.130499999999986e-05, 9.130499999999986e-05, 9.087500000000068e-05, 9.148599999999826e-05, 9.142999999999998e-05, 9.072200000000141e-05, 9.079199999999926e-05, 9.08199999999984e-05, 9.148600000000173e-05, 9.070900000000132e-05, 9.054199999999901e-05, 9.117999999999973e-05, 9.145799999999912e-05, 9.116600000000016e-05, 9.102799999999994e-05, 9.122200000000191e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.087" endtime="20201117 14:41:55.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.082" endtime="20201117 14:41:55.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.092" endtime="20201117 14:41:55.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.096" endtime="20201117 14:41:55.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.094" endtime="20201117 14:41:55.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.090" endtime="20201117 14:41:55.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.713" endtime="20201117 14:41:55.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.311" endtime="20201117 14:41:55.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.310" endtime="20201117 14:41:55.117"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.119" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.128" endtime="20201117 14:41:55.149"></status>
</kw>
<msg timestamp="20201117 14:41:55.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.126" endtime="20201117 14:41:55.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.150" endtime="20201117 14:41:55.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.153" endtime="20201117 14:41:55.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.124" endtime="20201117 14:41:55.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.121" endtime="20201117 14:41:55.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.162" endtime="20201117 14:41:55.448"></status>
</kw>
<msg timestamp="20201117 14:41:55.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022440833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.160" endtime="20201117 14:41:55.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022440833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.453" endtime="20201117 14:41:55.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.461" endtime="20201117 14:41:55.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.158" endtime="20201117 14:41:55.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.156" endtime="20201117 14:41:55.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.468" level="INFO">${RESULT} = [{'time': 0.022440833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.21520000000016e-05, 'source_diff': 9.21520000000016e-05}, {'time': 0.022545847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:55.465" endtime="20201117 14:41:55.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.483" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:55.469" endtime="20201117 14:41:55.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.488" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.487" endtime="20201117 14:41:55.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.491" level="INFO">VALUE: [9.21520000000016e-05, 9.181899999999993e-05, 9.154200000000001e-05, 9.241700000000089e-05, 9.193100000000343e-05, 9.155599999999958e-05, 9.191700000000039e-05, 9.188899999999778e-05, 9.186200000000158e-05, 9.159699999999882e-05, 9.186199999999811e-05, 9.173599999999851e-05, 9.226399999999815e-05, 9.191600000000091e-05, 9.20000000000018e-05, 9.21940000000003e-05, 9.241700000000089e-05, 9.15139999999974e-05, 9.183399999999897e-05, 9.18199999999994e-05, 9.208400000000269e-05, 9.212499999999846e-05, 9.209800000000226e-05, 9.162500000000143e-05, 9.245800000000012e-05, 9.198600000000223e-05, 9.242999999999751e-05, 9.155599999999958e-05, 9.172199999999894e-05, 9.222199999999944e-05, 9.184799999999854e-05, 9.152800000000044e-05, 9.211099999999889e-05, 9.174999999999808e-05, 9.166700000000014e-05, 9.179200000000026e-05, 9.193099999999996e-05, 9.204199999999704e-05, 9.217999999999726e-05, 9.18199999999994e-05, 9.25000000000023e-05, 9.161099999999839e-05, 9.190300000000082e-05, 9.172199999999894e-05, 9.161099999999839e-05, 9.175000000000155e-05, 9.201400000000137e-05, 9.225000000000205e-05, 9.168099999999971e-05, 9.162500000000143e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.489" endtime="20201117 14:41:55.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.484" endtime="20201117 14:41:55.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.494" endtime="20201117 14:41:55.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.498" endtime="20201117 14:41:55.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.496" endtime="20201117 14:41:55.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.492" endtime="20201117 14:41:55.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.120" endtime="20201117 14:41:55.518"></status>
</kw>
<msg timestamp="20201117 14:41:55.519" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.527" endtime="20201117 14:41:55.547"></status>
</kw>
<msg timestamp="20201117 14:41:55.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.526" endtime="20201117 14:41:55.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.549" endtime="20201117 14:41:55.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.552" endtime="20201117 14:41:55.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.523" endtime="20201117 14:41:55.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.521" endtime="20201117 14:41:55.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.561" endtime="20201117 14:41:55.849"></status>
</kw>
<msg timestamp="20201117 14:41:55.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.559" endtime="20201117 14:41:55.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.853" endtime="20201117 14:41:55.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.862" endtime="20201117 14:41:55.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.557" endtime="20201117 14:41:55.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.555" endtime="20201117 14:41:55.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.869" level="INFO">${RESULT} = [{'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.223599999999901e-05, 'source_diff': 9.223599999999901e-05}, {'time': 0.019930292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:55.866" endtime="20201117 14:41:55.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.882" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:55.870" endtime="20201117 14:41:55.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.887" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.886" endtime="20201117 14:41:55.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.890" level="INFO">VALUE: [9.223599999999901e-05, 9.236099999999914e-05, 9.24870000000022e-05, 9.208299999999975e-05, 9.161099999999839e-05, 9.161100000000186e-05, 9.1639000000001e-05, 9.211099999999889e-05, 9.230600000000033e-05, 9.222200000000291e-05, 9.220899999999935e-05, 9.165300000000057e-05, 9.193099999999996e-05, 9.204200000000051e-05, 9.20000000000018e-05, 9.190300000000082e-05, 9.179100000000079e-05, 9.186099999999864e-05, 9.1639000000001e-05, 9.243000000000098e-05, 9.180500000000036e-05, 9.194400000000005e-05, 9.198599999999876e-05, 9.184700000000254e-05, 9.216700000000064e-05, 9.219499999999978e-05, 9.161099999999839e-05, 9.229200000000076e-05, 9.24870000000022e-05, 9.236199999999861e-05, 9.225000000000205e-05, 9.227800000000119e-05, 9.170799999999937e-05, 9.236099999999914e-05, 9.204200000000051e-05, 9.227799999999772e-05, 9.212499999999846e-05, 9.186099999999864e-05, 9.247300000000264e-05, 9.21529999999976e-05, 9.184800000000201e-05, 9.184799999999854e-05, 9.224999999999858e-05, 9.24719999999997e-05, 9.187500000000168e-05, 9.227699999999825e-05, 9.16939999999998e-05, 9.172199999999894e-05, 9.155599999999958e-05, 9.204200000000051e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.888" endtime="20201117 14:41:55.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.883" endtime="20201117 14:41:55.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.893" endtime="20201117 14:41:55.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.897" endtime="20201117 14:41:55.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.895" endtime="20201117 14:41:55.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.891" endtime="20201117 14:41:55.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.519" endtime="20201117 14:41:55.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.118" endtime="20201117 14:41:55.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.117" endtime="20201117 14:41:55.918"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.920" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.929" endtime="20201117 14:41:55.949"></status>
</kw>
<msg timestamp="20201117 14:41:55.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.927" endtime="20201117 14:41:55.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.950" endtime="20201117 14:41:55.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.953" endtime="20201117 14:41:55.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.924" endtime="20201117 14:41:55.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.922" endtime="20201117 14:41:55.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.963" endtime="20201117 14:41:56.250"></status>
</kw>
<msg timestamp="20201117 14:41:56.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.961" endtime="20201117 14:41:56.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.254" endtime="20201117 14:41:56.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.263" endtime="20201117 14:41:56.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.958" endtime="20201117 14:41:56.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.956" endtime="20201117 14:41:56.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.270" level="INFO">${RESULT} = [{'time': 0.022467292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.29590000000001e-05, 'source_diff': 9.29590000000001e-05}, {'time': 0.022575306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:56.266" endtime="20201117 14:41:56.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.283" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:56.271" endtime="20201117 14:41:56.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.288" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.287" endtime="20201117 14:41:56.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.290" level="INFO">VALUE: [9.29590000000001e-05, 9.320900000000035e-05, 9.272300000000289e-05, 9.34590000000006e-05, 9.288899999999878e-05, 9.312499999999946e-05, 9.279099999999832e-05, 9.340299999999885e-05, 9.354200000000201e-05, 9.35000000000033e-05, 9.280600000000083e-05, 9.262500000000243e-05, 9.344500000000103e-05, 9.344500000000103e-05, 9.337499999999971e-05, 9.254199999999754e-05, 9.307000000000065e-05, 9.265300000000157e-05, 9.294400000000105e-05, 9.279099999999832e-05, 9.343000000000198e-05, 9.31940000000013e-05, 9.329199999999829e-05, 9.277800000000169e-05, 9.28200000000004e-05, 9.290300000000182e-05, 9.273599999999951e-05, 9.279200000000126e-05, 9.280599999999736e-05, 9.280599999999736e-05, 9.309700000000032e-05, 9.308300000000075e-05, 9.262499999999896e-05, 9.25269999999985e-05, 9.308300000000075e-05, 9.270800000000037e-05, 9.341699999999842e-05, 9.304099999999857e-05, 9.286099999999964e-05, 9.3333000000001e-05, 9.324999999999958e-05, 9.3333000000001e-05, 9.287499999999921e-05, 9.255499999999764e-05, 9.318000000000173e-05, 9.309700000000032e-05, 9.290200000000234e-05, 9.305500000000161e-05, 9.268000000000123e-05, 9.318100000000121e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.289" endtime="20201117 14:41:56.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.284" endtime="20201117 14:41:56.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.294" endtime="20201117 14:41:56.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.297" endtime="20201117 14:41:56.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.296" endtime="20201117 14:41:56.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.292" endtime="20201117 14:41:56.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.921" endtime="20201117 14:41:56.318"></status>
</kw>
<msg timestamp="20201117 14:41:56.318" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.328" endtime="20201117 14:41:56.349"></status>
</kw>
<msg timestamp="20201117 14:41:56.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.326" endtime="20201117 14:41:56.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.351" endtime="20201117 14:41:56.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.354" endtime="20201117 14:41:56.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.323" endtime="20201117 14:41:56.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.320" endtime="20201117 14:41:56.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.363" endtime="20201117 14:41:56.657"></status>
</kw>
<msg timestamp="20201117 14:41:56.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.362" endtime="20201117 14:41:56.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.667" endtime="20201117 14:41:56.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.687" endtime="20201117 14:41:56.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.359" endtime="20201117 14:41:56.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.357" endtime="20201117 14:41:56.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.702" level="INFO">${RESULT} = [{'time': 0.022095986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.327800000000219e-05, 'source_diff': 9.327800000000219e-05}, {'time': 0.022202056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:56.694" endtime="20201117 14:41:56.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:56.704" endtime="20201117 14:41:56.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.744" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.741" endtime="20201117 14:41:56.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.747" level="INFO">VALUE: [9.327800000000219e-05, 9.268100000000071e-05, 9.290299999999835e-05, 9.29720000000002e-05, 9.318099999999774e-05, 9.32079999999974e-05, 9.280600000000083e-05, 9.316700000000164e-05, 9.293100000000096e-05, 9.326399999999915e-05, 9.306900000000118e-05, 9.349999999999983e-05, 9.268000000000123e-05, 9.254200000000101e-05, 9.336100000000014e-05, 9.255499999999764e-05, 9.319500000000078e-05, 9.252800000000144e-05, 9.274999999999908e-05, 9.259799999999929e-05, 9.257000000000015e-05, 9.256999999999668e-05, 9.341599999999894e-05, 9.338899999999928e-05, 9.336100000000014e-05, 9.277700000000222e-05, 9.313899999999903e-05, 9.306900000000118e-05, 9.268000000000123e-05, 9.319500000000078e-05, 9.268100000000071e-05, 9.279200000000126e-05, 9.277800000000169e-05, 9.316699999999817e-05, 9.338899999999928e-05, 9.316700000000164e-05, 9.255600000000058e-05, 9.312499999999946e-05, 9.255500000000111e-05, 9.2639000000002e-05, 9.280499999999789e-05, 9.326399999999915e-05, 9.34720000000007e-05, 9.276400000000212e-05, 9.284700000000007e-05, 9.270899999999985e-05, 9.347199999999722e-05, 9.28200000000004e-05, 9.305500000000161e-05, 9.348600000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:41:56.745" endtime="20201117 14:41:56.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.735" endtime="20201117 14:41:56.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.750" endtime="20201117 14:41:56.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.754" endtime="20201117 14:41:56.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.753" endtime="20201117 14:41:56.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.748" endtime="20201117 14:41:56.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.319" endtime="20201117 14:41:56.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.919" endtime="20201117 14:41:56.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.918" endtime="20201117 14:41:56.776"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.778" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.792" endtime="20201117 14:41:56.812"></status>
</kw>
<msg timestamp="20201117 14:41:56.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.790" endtime="20201117 14:41:56.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.814" endtime="20201117 14:41:56.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.816" endtime="20201117 14:41:56.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.783" endtime="20201117 14:41:56.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.780" endtime="20201117 14:41:56.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.826" endtime="20201117 14:41:57.113"></status>
</kw>
<msg timestamp="20201117 14:41:57.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027618444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.824" endtime="20201117 14:41:57.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027618444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.118" endtime="20201117 14:41:57.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.126" endtime="20201117 14:41:57.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.821" endtime="20201117 14:41:57.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.819" endtime="20201117 14:41:57.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.133" level="INFO">${RESULT} = [{'time': 0.027618444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.390199999999987e-05, 'source_diff': 9.390199999999987e-05}, {'time': 0.027728444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.130" endtime="20201117 14:41:57.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:57.134" endtime="20201117 14:41:57.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.153" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.152" endtime="20201117 14:41:57.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.156" level="INFO">VALUE: [9.390199999999987e-05, 9.355500000000211e-05, 9.436100000000114e-05, 9.441599999999994e-05, 9.392999999999901e-05, 9.412500000000046e-05, 9.431899999999896e-05, 9.407000000000165e-05, 9.415300000000307e-05, 9.418100000000221e-05, 9.391700000000239e-05, 9.442999999999951e-05, 9.393099999999849e-05, 9.384800000000054e-05, 9.400000000000033e-05, 9.393000000000248e-05, 9.444399999999908e-05, 9.358300000000125e-05, 9.355499999999864e-05, 9.437500000000071e-05, 9.373600000000051e-05, 9.356999999999768e-05, 9.419500000000178e-05, 9.408300000000175e-05, 9.361199999999986e-05, 9.436200000000061e-05, 9.41940000000023e-05, 9.40139999999999e-05, 9.381900000000193e-05, 9.441599999999994e-05, 9.438900000000028e-05, 9.386100000000064e-05, 9.422200000000144e-05, 9.437500000000071e-05, 9.40139999999999e-05, 9.393099999999849e-05, 9.366699999999867e-05, 9.372199999999747e-05, 9.405500000000261e-05, 9.373699999999652e-05, 9.441599999999994e-05, 9.441599999999994e-05, 9.422199999999797e-05, 9.377799999999575e-05, 9.422199999999797e-05, 9.366699999999867e-05, 9.419500000000525e-05, 9.355600000000158e-05, 9.422200000000491e-05, 9.386100000000064e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.154" endtime="20201117 14:41:57.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.149" endtime="20201117 14:41:57.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.159" endtime="20201117 14:41:57.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.162" endtime="20201117 14:41:57.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.161" endtime="20201117 14:41:57.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.157" endtime="20201117 14:41:57.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.779" endtime="20201117 14:41:57.184"></status>
</kw>
<msg timestamp="20201117 14:41:57.184" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.193" endtime="20201117 14:41:57.214"></status>
</kw>
<msg timestamp="20201117 14:41:57.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.191" endtime="20201117 14:41:57.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.215" endtime="20201117 14:41:57.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.218" endtime="20201117 14:41:57.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.188" endtime="20201117 14:41:57.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.186" endtime="20201117 14:41:57.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.227" endtime="20201117 14:41:57.515"></status>
</kw>
<msg timestamp="20201117 14:41:57.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021163028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.225" endtime="20201117 14:41:57.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021163028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.519" endtime="20201117 14:41:57.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.528" endtime="20201117 14:41:57.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.223" endtime="20201117 14:41:57.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.221" endtime="20201117 14:41:57.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.535" level="INFO">${RESULT} = [{'time': 0.021257028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.400000000000033e-05, 'source_diff': 9.400000000000033e-05}, {'time': 0.021367028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.531" endtime="20201117 14:41:57.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:57.536" endtime="20201117 14:41:57.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.553" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.552" endtime="20201117 14:41:57.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.556" level="INFO">VALUE: [9.400000000000033e-05, 9.358400000000072e-05, 9.373599999999704e-05, 9.395799999999815e-05, 9.4027e-05, 9.441699999999942e-05, 9.41659999999997e-05, 9.402799999999947e-05, 9.39720000000012e-05, 9.386100000000064e-05, 9.430499999999939e-05, 9.394399999999858e-05, 9.422200000000144e-05, 9.422199999999797e-05, 9.418099999999874e-05, 9.430599999999886e-05, 9.398600000000076e-05, 9.418100000000221e-05, 9.375000000000008e-05, 9.422300000000092e-05, 9.380500000000236e-05, 9.381899999999846e-05, 9.444400000000255e-05, 9.411100000000089e-05, 9.368099999999824e-05, 9.369500000000128e-05, 9.366699999999867e-05, 9.380599999999836e-05, 9.388899999999978e-05, 9.418099999999874e-05, 9.437500000000071e-05, 9.406900000000218e-05, 9.379099999999932e-05, 9.429099999999982e-05, 9.409700000000132e-05, 9.370800000000137e-05, 9.380500000000236e-05, 9.356899999999821e-05, 9.366699999999867e-05, 9.400000000000033e-05, 9.412500000000046e-05, 9.430599999999886e-05, 9.355600000000158e-05, 9.438900000000028e-05, 9.398700000000024e-05, 9.366700000000214e-05, 9.406899999999871e-05, 9.361100000000039e-05, 9.4027e-05, 9.386100000000064e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.554" endtime="20201117 14:41:57.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.549" endtime="20201117 14:41:57.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.559" endtime="20201117 14:41:57.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.563" endtime="20201117 14:41:57.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.561" endtime="20201117 14:41:57.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.557" endtime="20201117 14:41:57.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.185" endtime="20201117 14:41:57.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.777" endtime="20201117 14:41:57.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.776" endtime="20201117 14:41:57.584"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.587" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.595" endtime="20201117 14:41:57.617"></status>
</kw>
<msg timestamp="20201117 14:41:57.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.594" endtime="20201117 14:41:57.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.618" endtime="20201117 14:41:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.621" endtime="20201117 14:41:57.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.591" endtime="20201117 14:41:57.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.589" endtime="20201117 14:41:57.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.630" endtime="20201117 14:41:57.918"></status>
</kw>
<msg timestamp="20201117 14:41:57.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.629" endtime="20201117 14:41:57.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.922" endtime="20201117 14:41:57.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.931" endtime="20201117 14:41:57.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.626" endtime="20201117 14:41:57.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.624" endtime="20201117 14:41:57.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.938" level="INFO">${RESULT} = [{'time': 0.022579653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.480600000000283e-05, 'source_diff': 9.480600000000283e-05}, {'time': 0.022688597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:57.934" endtime="20201117 14:41:57.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.951" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:57.939" endtime="20201117 14:41:57.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.956" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.955" endtime="20201117 14:41:57.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.959" level="INFO">VALUE: [9.480600000000283e-05, 9.472200000000194e-05, 9.525000000000158e-05, 9.494399999999958e-05, 9.523599999999854e-05, 9.531899999999996e-05, 9.463900000000053e-05, 9.516700000000017e-05, 9.505599999999961e-05, 9.516700000000017e-05, 9.481999999999893e-05, 9.536099999999867e-05, 9.479100000000032e-05, 9.458299999999878e-05, 9.495799999999915e-05, 9.5027999999997e-05, 9.459699999999835e-05, 9.527800000000072e-05, 9.508299999999928e-05, 9.494499999999906e-05, 9.548600000000226e-05, 9.481999999999893e-05, 9.54720000000027e-05, 9.548600000000226e-05, 9.454199999999954e-05, 9.513899999999756e-05, 9.524999999999811e-05, 9.475000000000108e-05, 9.516599999999723e-05, 9.466699999999967e-05, 9.483299999999903e-05, 9.457000000000215e-05, 9.554100000000107e-05, 9.545899999999913e-05, 9.516700000000017e-05, 9.549999999999836e-05, 9.495799999999915e-05, 9.504100000000057e-05, 9.490200000000087e-05, 9.543000000000051e-05, 9.49720000000022e-05, 9.530500000000039e-05, 9.526400000000115e-05, 9.479199999999979e-05, 9.468099999999924e-05, 9.480499999999989e-05, 9.486099999999817e-05, 9.543099999999999e-05, 9.490300000000035e-05, 9.550000000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:41:57.957" endtime="20201117 14:41:57.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.952" endtime="20201117 14:41:57.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.962" endtime="20201117 14:41:57.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.966" endtime="20201117 14:41:57.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.964" endtime="20201117 14:41:57.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.961" endtime="20201117 14:41:57.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.587" endtime="20201117 14:41:57.987"></status>
</kw>
<msg timestamp="20201117 14:41:57.987" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.996" endtime="20201117 14:41:58.017"></status>
</kw>
<msg timestamp="20201117 14:41:58.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.994" endtime="20201117 14:41:58.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.018" endtime="20201117 14:41:58.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.021" endtime="20201117 14:41:58.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.991" endtime="20201117 14:41:58.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.989" endtime="20201117 14:41:58.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.030" endtime="20201117 14:41:58.317"></status>
</kw>
<msg timestamp="20201117 14:41:58.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.029" endtime="20201117 14:41:58.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.322" endtime="20201117 14:41:58.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.330" endtime="20201117 14:41:58.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.026" endtime="20201117 14:41:58.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.024" endtime="20201117 14:41:58.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.337" level="INFO">${RESULT} = [{'time': 0.019971792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.494499999999906e-05, 'source_diff': 9.494499999999906e-05}, {'time': 0.020081792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.334" endtime="20201117 14:41:58.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:58.338" endtime="20201117 14:41:58.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.355" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.354" endtime="20201117 14:41:58.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.358" level="INFO">VALUE: [9.494499999999906e-05, 9.493099999999949e-05, 9.498700000000124e-05, 9.531899999999996e-05, 9.531899999999996e-05, 9.487500000000121e-05, 9.493000000000001e-05, 9.518000000000026e-05, 9.469399999999933e-05, 9.537500000000171e-05, 9.534799999999857e-05, 9.541700000000042e-05, 9.486099999999817e-05, 9.523700000000149e-05, 9.534800000000204e-05, 9.461099999999792e-05, 9.494399999999958e-05, 9.505500000000014e-05, 9.454100000000007e-05, 9.486100000000164e-05, 9.494399999999958e-05, 9.49859999999983e-05, 9.524999999999811e-05, 9.54859999999988e-05, 9.480599999999936e-05, 9.505599999999961e-05, 9.55140000000014e-05, 9.47079999999989e-05, 9.544400000000008e-05, 9.508299999999928e-05, 9.513900000000103e-05, 9.484700000000207e-05, 9.523600000000201e-05, 9.472200000000194e-05, 9.512500000000146e-05, 9.541700000000042e-05, 9.541700000000042e-05, 9.509699999999885e-05, 9.487500000000121e-05, 9.455600000000258e-05, 9.53200000000029e-05, 9.533400000000247e-05, 9.526400000000115e-05, 9.491600000000044e-05, 9.523599999999854e-05, 9.509700000000232e-05, 9.486100000000164e-05, 9.519399999999983e-05, 9.518099999999974e-05, 9.462499999999749e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.357" endtime="20201117 14:41:58.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.352" endtime="20201117 14:41:58.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.362" endtime="20201117 14:41:58.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.365" endtime="20201117 14:41:58.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.364" endtime="20201117 14:41:58.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.360" endtime="20201117 14:41:58.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.988" endtime="20201117 14:41:58.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.585" endtime="20201117 14:41:58.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.585" endtime="20201117 14:41:58.386"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.389" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.398" endtime="20201117 14:41:58.418"></status>
</kw>
<msg timestamp="20201117 14:41:58.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.396" endtime="20201117 14:41:58.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.420" endtime="20201117 14:41:58.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.422" endtime="20201117 14:41:58.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.393" endtime="20201117 14:41:58.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.391" endtime="20201117 14:41:58.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.432" endtime="20201117 14:41:58.719"></status>
</kw>
<msg timestamp="20201117 14:41:58.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022587778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.430" endtime="20201117 14:41:58.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022587778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.723" endtime="20201117 14:41:58.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.731" endtime="20201117 14:41:58.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.428" endtime="20201117 14:41:58.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.426" endtime="20201117 14:41:58.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.738" level="INFO">${RESULT} = [{'time': 0.022684181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.640300000000185e-05, 'source_diff': 9.640300000000185e-05}, {'time': 0.022794194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:58.734" endtime="20201117 14:41:58.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.752" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:58.739" endtime="20201117 14:41:58.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.757" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.756" endtime="20201117 14:41:58.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.760" level="INFO">VALUE: [9.640300000000185e-05, 9.652699999999903e-05, 9.591599999999798e-05, 9.619400000000083e-05, 9.63470000000001e-05, 9.599999999999886e-05, 9.644400000000108e-05, 9.605600000000061e-05, 9.598600000000276e-05, 9.604200000000104e-05, 9.58339999999995e-05, 9.604199999999757e-05, 9.576299999999871e-05, 9.609800000000279e-05, 9.581900000000046e-05, 9.631900000000096e-05, 9.619400000000083e-05, 9.590299999999788e-05, 9.631900000000096e-05, 9.58469999999996e-05, 9.62920000000013e-05, 9.569499999999981e-05, 9.643100000000099e-05, 9.604199999999757e-05, 9.605599999999714e-05, 9.618000000000126e-05, 9.568000000000076e-05, 9.580600000000036e-05, 9.608300000000028e-05, 9.63470000000001e-05, 9.573599999999904e-05, 9.641600000000194e-05, 9.562500000000196e-05, 9.555600000000011e-05, 9.640300000000185e-05, 9.63059999999974e-05, 9.64859999999998e-05, 9.64859999999998e-05, 9.59729999999992e-05, 9.594500000000006e-05, 9.580499999999742e-05, 9.591699999999745e-05, 9.611099999999942e-05, 9.590300000000135e-05, 9.594500000000006e-05, 9.641699999999795e-05, 9.598600000000276e-05, 9.575000000000208e-05, 9.641699999999795e-05, 9.557000000000315e-05]</msg>
<status status="PASS" starttime="20201117 14:41:58.758" endtime="20201117 14:41:58.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.753" endtime="20201117 14:41:58.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.763" endtime="20201117 14:41:58.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.766" endtime="20201117 14:41:58.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.765" endtime="20201117 14:41:58.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.761" endtime="20201117 14:41:58.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.390" endtime="20201117 14:41:58.787"></status>
</kw>
<msg timestamp="20201117 14:41:58.787" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.796" endtime="20201117 14:41:58.816"></status>
</kw>
<msg timestamp="20201117 14:41:58.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.794" endtime="20201117 14:41:58.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.817" endtime="20201117 14:41:58.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.820" endtime="20201117 14:41:58.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.791" endtime="20201117 14:41:58.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.789" endtime="20201117 14:41:58.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.829" endtime="20201117 14:41:59.129"></status>
</kw>
<msg timestamp="20201117 14:41:59.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.827" endtime="20201117 14:41:59.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019640611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.134" endtime="20201117 14:41:59.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.142" endtime="20201117 14:41:59.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.825" endtime="20201117 14:41:59.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.823" endtime="20201117 14:41:59.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.148" level="INFO">${RESULT} = [{'time': 0.019736264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.56530000000011e-05, 'source_diff': 9.56530000000011e-05}, {'time': 0.019847264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:59.145" endtime="20201117 14:41:59.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:59.149" endtime="20201117 14:41:59.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.166" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.165" endtime="20201117 14:41:59.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.169" level="INFO">VALUE: [9.56530000000011e-05, 9.651399999999893e-05, 9.561099999999892e-05, 9.586099999999917e-05, 9.561099999999892e-05, 9.604199999999757e-05, 9.566700000000067e-05, 9.606900000000071e-05, 9.62080000000004e-05, 9.645800000000065e-05, 9.642999999999805e-05, 9.568100000000024e-05, 9.549999999999836e-05, 9.62920000000013e-05, 9.56530000000011e-05, 9.633300000000053e-05, 9.611099999999942e-05, 9.629199999999782e-05, 9.587500000000221e-05, 9.598700000000224e-05, 9.581900000000046e-05, 9.55409999999976e-05, 9.562500000000196e-05, 9.629100000000182e-05, 9.65140000000024e-05, 9.562500000000196e-05, 9.566700000000067e-05, 9.637499999999924e-05, 9.641700000000142e-05, 9.638900000000228e-05, 9.554200000000054e-05, 9.559799999999882e-05, 9.579199999999732e-05, 9.562499999999849e-05, 9.587500000000221e-05, 9.581899999999699e-05, 9.565299999999763e-05, 9.572199999999947e-05, 9.568000000000076e-05, 9.581900000000046e-05, 9.611099999999942e-05, 9.568100000000024e-05, 9.573599999999904e-05, 9.56799999999973e-05, 9.634799999999957e-05, 9.593100000000049e-05, 9.624999999999911e-05, 9.618099999999727e-05, 9.593000000000101e-05, 9.588899999999831e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.167" endtime="20201117 14:41:59.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.163" endtime="20201117 14:41:59.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.172" endtime="20201117 14:41:59.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.175" endtime="20201117 14:41:59.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.174" endtime="20201117 14:41:59.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.170" endtime="20201117 14:41:59.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.788" endtime="20201117 14:41:59.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.388" endtime="20201117 14:41:59.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.387" endtime="20201117 14:41:59.196"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.199" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.207" endtime="20201117 14:41:59.227"></status>
</kw>
<msg timestamp="20201117 14:41:59.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.205" endtime="20201117 14:41:59.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.229" endtime="20201117 14:41:59.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.231" endtime="20201117 14:41:59.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.203" endtime="20201117 14:41:59.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.200" endtime="20201117 14:41:59.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.240" endtime="20201117 14:41:59.526"></status>
</kw>
<msg timestamp="20201117 14:41:59.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.239" endtime="20201117 14:41:59.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.530" endtime="20201117 14:41:59.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.539" endtime="20201117 14:41:59.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.236" endtime="20201117 14:41:59.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.235" endtime="20201117 14:41:59.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.546" level="INFO">${RESULT} = [{'time': 0.021819444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.737500000000024e-05, 'source_diff': 9.737500000000024e-05}, {'time': 0.021930403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:59.542" endtime="20201117 14:41:59.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.559" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:59.547" endtime="20201117 14:41:59.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.563" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.562" endtime="20201117 14:41:59.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.566" level="INFO">VALUE: [9.737500000000024e-05, 9.67920000000018e-05, 9.694500000000106e-05, 9.67920000000018e-05, 9.727699999999978e-05, 9.694400000000158e-05, 9.734699999999763e-05, 9.677800000000222e-05, 9.655500000000164e-05, 9.713899999999956e-05, 9.661099999999992e-05, 9.674999999999961e-05, 9.682000000000093e-05, 9.741699999999895e-05, 9.705600000000161e-05, 9.733300000000153e-05, 9.695799999999768e-05, 9.691600000000244e-05, 9.694399999999812e-05, 9.683300000000103e-05, 9.658300000000078e-05, 9.687499999999974e-05, 9.715299999999913e-05, 9.654200000000154e-05, 9.674999999999961e-05, 9.716700000000217e-05, 9.707000000000118e-05, 9.711100000000042e-05, 9.702800000000247e-05, 9.673600000000004e-05, 9.701399999999943e-05, 9.666599999999873e-05, 9.731899999999849e-05, 9.69860000000003e-05, 9.655499999999817e-05, 9.663899999999906e-05, 9.682000000000093e-05, 9.66669999999982e-05, 9.718099999999827e-05, 9.715299999999913e-05, 9.709800000000032e-05, 9.662499999999949e-05, 9.679099999999885e-05, 9.658300000000078e-05, 9.748599999999732e-05, 9.677699999999928e-05, 9.681900000000146e-05, 9.666700000000167e-05, 9.676399999999918e-05, 9.686100000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.564" endtime="20201117 14:41:59.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.560" endtime="20201117 14:41:59.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.569" endtime="20201117 14:41:59.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.572" endtime="20201117 14:41:59.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.571" endtime="20201117 14:41:59.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.567" endtime="20201117 14:41:59.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.199" endtime="20201117 14:41:59.593"></status>
</kw>
<msg timestamp="20201117 14:41:59.593" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.601" endtime="20201117 14:41:59.621"></status>
</kw>
<msg timestamp="20201117 14:41:59.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.600" endtime="20201117 14:41:59.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.623" endtime="20201117 14:41:59.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.625" endtime="20201117 14:41:59.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.597" endtime="20201117 14:41:59.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.595" endtime="20201117 14:41:59.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.634" endtime="20201117 14:41:59.921"></status>
</kw>
<msg timestamp="20201117 14:41:59.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.633" endtime="20201117 14:41:59.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.925" endtime="20201117 14:41:59.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.934" endtime="20201117 14:41:59.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.630" endtime="20201117 14:41:59.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.629" endtime="20201117 14:41:59.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.940" level="INFO">${RESULT} = [{'time': 0.019320236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.661099999999992e-05, 'source_diff': 9.661099999999992e-05}, {'time': 0.019433264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:59.937" endtime="20201117 14:41:59.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.953" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:59.941" endtime="20201117 14:41:59.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.958" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.957" endtime="20201117 14:41:59.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.960" level="INFO">VALUE: [9.661099999999992e-05, 9.729199999999882e-05, 9.697200000000072e-05, 9.676399999999918e-05, 9.668100000000124e-05, 9.654199999999807e-05, 9.687499999999974e-05, 9.72920000000023e-05, 9.750000000000036e-05, 9.733399999999753e-05, 9.742999999999905e-05, 9.715299999999913e-05, 9.68470000000006e-05, 9.716700000000217e-05, 9.662499999999949e-05, 9.718100000000174e-05, 9.694499999999759e-05, 9.741699999999895e-05, 9.707000000000118e-05, 9.722300000000045e-05, 9.719399999999837e-05, 9.711100000000042e-05, 9.673600000000004e-05, 9.695800000000115e-05, 9.725000000000011e-05, 9.669400000000133e-05, 9.711100000000042e-05, 9.673600000000004e-05, 9.674999999999961e-05, 9.719500000000131e-05, 9.697200000000072e-05, 9.7027999999999e-05, 9.694400000000158e-05, 9.679199999999832e-05, 9.751399999999993e-05, 9.677699999999928e-05, 9.723600000000054e-05, 9.659700000000035e-05, 9.677799999999875e-05, 9.659700000000035e-05, 9.655499999999817e-05, 9.665299999999863e-05, 9.726399999999968e-05, 9.670900000000038e-05, 9.713899999999956e-05, 9.72920000000023e-05, 9.67080000000009e-05, 9.662499999999949e-05, 9.669399999999786e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201117 14:41:59.959" endtime="20201117 14:41:59.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.954" endtime="20201117 14:41:59.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.963" endtime="20201117 14:41:59.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.966" endtime="20201117 14:41:59.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.965" endtime="20201117 14:41:59.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.961" endtime="20201117 14:41:59.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.594" endtime="20201117 14:41:59.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.197" endtime="20201117 14:41:59.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.197" endtime="20201117 14:41:59.988"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.990" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.998" endtime="20201117 14:42:00.018"></status>
</kw>
<msg timestamp="20201117 14:42:00.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.997" endtime="20201117 14:42:00.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.020" endtime="20201117 14:42:00.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.022" endtime="20201117 14:42:00.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.994" endtime="20201117 14:42:00.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.992" endtime="20201117 14:42:00.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.031" endtime="20201117 14:42:00.317"></status>
</kw>
<msg timestamp="20201117 14:42:00.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.030" endtime="20201117 14:42:00.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.322" endtime="20201117 14:42:00.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.330" endtime="20201117 14:42:00.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.027" endtime="20201117 14:42:00.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.025" endtime="20201117 14:42:00.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.336" level="INFO">${RESULT} = [{'time': 0.021813458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.84860000000018e-05, 'source_diff': 9.84860000000018e-05}, {'time': 0.021925486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:00.333" endtime="20201117 14:42:00.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:00.337" endtime="20201117 14:42:00.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.355" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.354" endtime="20201117 14:42:00.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.358" level="INFO">VALUE: [9.84860000000018e-05, 9.77080000000019e-05, 9.775000000000061e-05, 9.818099999999927e-05, 9.78609999999977e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.841699999999995e-05, 9.756899999999874e-05, 9.761200000000039e-05, 9.8028e-05, 9.819399999999937e-05, 9.763800000000059e-05, 9.81799999999998e-05, 9.8028e-05, 9.786100000000117e-05, 9.762500000000049e-05, 9.762499999999702e-05, 9.855500000000017e-05, 9.801400000000043e-05, 9.761200000000039e-05, 9.815300000000013e-05, 9.841699999999995e-05, 9.759800000000082e-05, 9.79020000000004e-05, 9.831899999999949e-05, 9.763900000000006e-05, 9.8028e-05, 9.781999999999846e-05, 9.812499999999752e-05, 9.822200000000197e-05, 9.779199999999932e-05, 9.768099999999877e-05, 9.79020000000004e-05, 9.848599999999832e-05, 9.801300000000096e-05, 9.761099999999745e-05, 9.83609999999982e-05, 9.800000000000086e-05, 9.769399999999887e-05, 9.827800000000025e-05, 9.836100000000167e-05, 9.823599999999807e-05, 9.775000000000061e-05, 9.808300000000228e-05, 9.826400000000068e-05, 9.834699999999863e-05, 9.812499999999752e-05, 9.801400000000043e-05, 9.78609999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.356" endtime="20201117 14:42:00.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.352" endtime="20201117 14:42:00.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.361" endtime="20201117 14:42:00.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.364" endtime="20201117 14:42:00.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.363" endtime="20201117 14:42:00.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.359" endtime="20201117 14:42:00.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.991" endtime="20201117 14:42:00.385"></status>
</kw>
<msg timestamp="20201117 14:42:00.385" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.393" endtime="20201117 14:42:00.415"></status>
</kw>
<msg timestamp="20201117 14:42:00.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.392" endtime="20201117 14:42:00.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.416" endtime="20201117 14:42:00.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.418" endtime="20201117 14:42:00.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.389" endtime="20201117 14:42:00.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.387" endtime="20201117 14:42:00.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.428" endtime="20201117 14:42:00.715"></status>
</kw>
<msg timestamp="20201117 14:42:00.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019304208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.426" endtime="20201117 14:42:00.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019304208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.719" endtime="20201117 14:42:00.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.727" endtime="20201117 14:42:00.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.424" endtime="20201117 14:42:00.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.422" endtime="20201117 14:42:00.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.734" level="INFO">${RESULT} = [{'time': 0.019304208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.791599999999998e-05, 'source_diff': 9.791599999999998e-05}, {'time': 0.019415222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:00.731" endtime="20201117 14:42:00.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:00.735" endtime="20201117 14:42:00.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.752" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.751" endtime="20201117 14:42:00.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.754" level="INFO">VALUE: [9.791599999999998e-05, 9.794399999999912e-05, 9.765299999999963e-05, 9.847199999999875e-05, 9.800000000000086e-05, 9.798599999999782e-05, 9.781999999999846e-05, 9.766700000000267e-05, 9.829199999999982e-05, 9.797199999999825e-05, 9.78059999999989e-05, 9.787500000000074e-05, 9.825000000000111e-05, 9.805500000000314e-05, 9.836100000000167e-05, 9.83059999999994e-05, 9.756899999999874e-05, 9.756999999999821e-05, 9.759700000000135e-05, 9.822200000000197e-05, 9.837500000000124e-05, 9.837500000000124e-05, 9.841699999999995e-05, 9.779099999999985e-05, 9.831899999999949e-05, 9.83059999999994e-05, 9.791599999999998e-05, 9.766599999999973e-05, 9.756899999999874e-05, 9.808399999999828e-05, 9.818099999999927e-05, 9.755600000000211e-05, 9.757000000000168e-05, 9.76669999999992e-05, 9.788800000000084e-05, 9.836200000000114e-05, 9.805599999999914e-05, 9.837500000000124e-05, 9.809700000000185e-05, 9.844400000000308e-05, 9.827800000000025e-05, 9.808299999999881e-05, 9.818100000000274e-05, 9.782000000000193e-05, 9.762500000000049e-05, 9.84999999999979e-05, 9.765299999999963e-05, 9.852699999999756e-05, 9.819399999999937e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201117 14:42:00.753" endtime="20201117 14:42:00.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.748" endtime="20201117 14:42:00.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.757" endtime="20201117 14:42:00.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.761" endtime="20201117 14:42:00.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.759" endtime="20201117 14:42:00.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.756" endtime="20201117 14:42:00.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.386" endtime="20201117 14:42:00.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.989" endtime="20201117 14:42:00.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.988" endtime="20201117 14:42:00.782"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.784" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.793" endtime="20201117 14:42:00.814"></status>
</kw>
<msg timestamp="20201117 14:42:00.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.791" endtime="20201117 14:42:00.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.815" endtime="20201117 14:42:00.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.818" endtime="20201117 14:42:00.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.788" endtime="20201117 14:42:00.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.786" endtime="20201117 14:42:00.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.827" endtime="20201117 14:42:01.113"></status>
</kw>
<msg timestamp="20201117 14:42:01.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.826" endtime="20201117 14:42:01.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.117" endtime="20201117 14:42:01.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.126" endtime="20201117 14:42:01.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.823" endtime="20201117 14:42:01.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.821" endtime="20201117 14:42:01.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.132" level="INFO">${RESULT} = [{'time': 0.022398819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.916600000000123e-05, 'source_diff': 9.916600000000123e-05}, {'time': 0.022512833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:01.129" endtime="20201117 14:42:01.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.145" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:01.133" endtime="20201117 14:42:01.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.150" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.149" endtime="20201117 14:42:01.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.152" level="INFO">VALUE: [9.916600000000123e-05, 9.924999999999864e-05, 9.906900000000024e-05, 9.911099999999895e-05, 9.891700000000045e-05, 9.913900000000156e-05, 9.884699999999913e-05, 9.936100000000267e-05, 9.879200000000032e-05, 9.911100000000242e-05, 9.933300000000006e-05, 9.859799999999835e-05, 9.943100000000052e-05, 9.931900000000049e-05, 9.923599999999907e-05, 9.944400000000062e-05, 9.865300000000063e-05, 9.904200000000057e-05, 9.895900000000263e-05, 9.851399999999746e-05, 9.941700000000095e-05, 9.868099999999977e-05, 9.9415999999998e-05, 9.919499999999984e-05, 9.893000000000055e-05, 9.90549999999972e-05, 9.881899999999999e-05, 9.900000000000186e-05, 9.941700000000095e-05, 9.905600000000014e-05, 9.86670000000002e-05, 9.923600000000254e-05, 9.929200000000082e-05, 9.895899999999916e-05, 9.85280000000005e-05, 9.888799999999837e-05, 9.85280000000005e-05, 9.923699999999855e-05, 9.862499999999802e-05, 9.943000000000105e-05, 9.942999999999758e-05, 9.8721999999999e-05, 9.884699999999913e-05, 9.881999999999946e-05, 9.923599999999907e-05, 9.888900000000131e-05, 9.918100000000027e-05, 9.933399999999953e-05, 9.897299999999873e-05, 9.861200000000139e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.151" endtime="20201117 14:42:01.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.146" endtime="20201117 14:42:01.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.155" endtime="20201117 14:42:01.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.159" endtime="20201117 14:42:01.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.157" endtime="20201117 14:42:01.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.154" endtime="20201117 14:42:01.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.785" endtime="20201117 14:42:01.179"></status>
</kw>
<msg timestamp="20201117 14:42:01.180" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.188" endtime="20201117 14:42:01.209"></status>
</kw>
<msg timestamp="20201117 14:42:01.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.187" endtime="20201117 14:42:01.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.210" endtime="20201117 14:42:01.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.213" endtime="20201117 14:42:01.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.184" endtime="20201117 14:42:01.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.182" endtime="20201117 14:42:01.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.222" endtime="20201117 14:42:01.508"></status>
</kw>
<msg timestamp="20201117 14:42:01.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.220" endtime="20201117 14:42:01.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.512" endtime="20201117 14:42:01.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.520" endtime="20201117 14:42:01.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.218" endtime="20201117 14:42:01.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.216" endtime="20201117 14:42:01.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.527" level="INFO">${RESULT} = [{'time': 0.019803847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.93609999999992e-05, 'source_diff': 9.93609999999992e-05}, {'time': 0.019916847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:01.523" endtime="20201117 14:42:01.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:01.528" endtime="20201117 14:42:01.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.544" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.543" endtime="20201117 14:42:01.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.547" level="INFO">VALUE: [9.93609999999992e-05, 9.900000000000186e-05, 9.891700000000045e-05, 9.905600000000014e-05, 9.86670000000002e-05, 9.86670000000002e-05, 9.905600000000014e-05, 9.855599999999964e-05, 9.911099999999895e-05, 9.936200000000214e-05, 9.881899999999999e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.869399999999987e-05, 9.865299999999716e-05, 9.923599999999907e-05, 9.854200000000007e-05, 9.898599999999882e-05, 9.920899999999941e-05, 9.920799999999994e-05, 9.884800000000207e-05, 9.923700000000202e-05, 9.870899999999891e-05, 9.948599999999932e-05, 9.887500000000174e-05, 9.943000000000105e-05, 9.904200000000057e-05, 9.859699999999888e-05, 9.863900000000106e-05, 9.84860000000018e-05, 9.887499999999827e-05, 9.879200000000032e-05, 9.870900000000238e-05, 9.894500000000306e-05, 9.884800000000207e-05, 9.892999999999708e-05, 9.92219999999995e-05, 9.9415999999998e-05, 9.859699999999888e-05, 9.942999999999758e-05, 9.859699999999888e-05, 9.881899999999999e-05, 9.891699999999698e-05, 9.879200000000032e-05, 9.941600000000148e-05, 9.912499999999852e-05, 9.88059999999999e-05, 9.869399999999987e-05, 9.927700000000178e-05, 9.891600000000098e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.545" endtime="20201117 14:42:01.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.541" endtime="20201117 14:42:01.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.550" endtime="20201117 14:42:01.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.554" endtime="20201117 14:42:01.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.552" endtime="20201117 14:42:01.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.548" endtime="20201117 14:42:01.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.181" endtime="20201117 14:42:01.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.783" endtime="20201117 14:42:01.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.782" endtime="20201117 14:42:01.575"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.577" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.585" endtime="20201117 14:42:01.605"></status>
</kw>
<msg timestamp="20201117 14:42:01.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.584" endtime="20201117 14:42:01.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.607" endtime="20201117 14:42:01.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.609" endtime="20201117 14:42:01.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.581" endtime="20201117 14:42:01.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.579" endtime="20201117 14:42:01.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.618" endtime="20201117 14:42:01.905"></status>
</kw>
<msg timestamp="20201117 14:42:01.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.617" endtime="20201117 14:42:01.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.909" endtime="20201117 14:42:01.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.917" endtime="20201117 14:42:01.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.614" endtime="20201117 14:42:01.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.612" endtime="20201117 14:42:01.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.924" level="INFO">${RESULT} = [{'time': 0.021821222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.993000000000155e-05, 'source_diff': 9.993000000000155e-05}, {'time': 0.021934236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:01.921" endtime="20201117 14:42:01.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:01.925" endtime="20201117 14:42:01.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.943" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.942" endtime="20201117 14:42:01.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.945" level="INFO">VALUE: [9.993000000000155e-05, 9.992999999999808e-05, 0.00010011099999999995, 9.994500000000059e-05, 9.994500000000059e-05, 9.94999999999989e-05, 0.00010047200000000076, 9.954200000000107e-05, 0.0001001800000000018, 0.00010011099999999995, 0.0001003610000000002, 0.00010011099999999995, 0.00010012499999999952, 0.00010029199999999835, 0.00010011099999999995, 0.00010045799999999772, 0.0001004999999999999, 9.994399999999765e-05, 0.00010011099999999995, 9.961199999999892e-05, 0.00010030499999999845, 0.00010016699999999823, 0.00010042999999999858, 0.00010019400000000137, 0.00010011099999999995, 9.958300000000031e-05, 0.00010009700000000038, 0.00010013900000000256, 0.00010027799999999878, 0.00010044500000000109, 9.998599999999983e-05, 9.951400000000193e-05, 0.00010023699999999955, 0.0001003610000000002, 9.961099999999945e-05, 9.979100000000185e-05, 0.0001001939999999979, 0.00010037499999999977, 9.973599999999957e-05, 9.991700000000145e-05, 9.962499999999902e-05, 0.00010020800000000094, 0.00010005600000000114, 9.95419999999976e-05, 0.0001003610000000002, 9.99159999999985e-05, 9.962499999999902e-05, 0.00010017999999999833, 0.00010040300000000238, 9.965300000000163e-05]</msg>
<status status="PASS" starttime="20201117 14:42:01.944" endtime="20201117 14:42:01.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.939" endtime="20201117 14:42:01.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.953" endtime="20201117 14:42:01.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.957" endtime="20201117 14:42:01.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.955" endtime="20201117 14:42:01.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.952" endtime="20201117 14:42:01.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.578" endtime="20201117 14:42:01.977"></status>
</kw>
<msg timestamp="20201117 14:42:01.978" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.986" endtime="20201117 14:42:02.008"></status>
</kw>
<msg timestamp="20201117 14:42:02.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.984" endtime="20201117 14:42:02.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.010" endtime="20201117 14:42:02.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.013" endtime="20201117 14:42:02.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.982" endtime="20201117 14:42:02.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.980" endtime="20201117 14:42:02.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.027" endtime="20201117 14:42:02.314"></status>
</kw>
<msg timestamp="20201117 14:42:02.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.024" endtime="20201117 14:42:02.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.318" endtime="20201117 14:42:02.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.327" endtime="20201117 14:42:02.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.020" endtime="20201117 14:42:02.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.017" endtime="20201117 14:42:02.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.333" level="INFO">${RESULT} = [{'time': 0.019323444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.99159999999985e-05, 'source_diff': 9.99159999999985e-05}, {'time': 0.019437472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:02.330" endtime="20201117 14:42:02.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:02.334" endtime="20201117 14:42:02.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.351" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.350" endtime="20201117 14:42:02.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.353" level="INFO">VALUE: [9.99159999999985e-05, 0.00010019400000000137, 0.00010037499999999977, 0.00010048600000000033, 9.993000000000155e-05, 0.00010018100000000127, 0.00010047200000000076, 0.00010038899999999934, 0.00010026399999999921, 0.00010041699999999848, 0.00010019400000000137, 0.00010023700000000302, 9.984700000000013e-05, 0.00010005500000000167, 0.0001001939999999979, 0.0001003610000000002, 9.980500000000142e-05, 0.00010000000000000286, 9.99999999999994e-05, 0.00010040299999999891, 0.00010023600000000008, 0.00010016699999999823, 0.00010026399999999921, 0.0001001670000000017, 9.981900000000099e-05, 9.98609999999997e-05, 9.99999999999994e-05, 9.998599999999983e-05, 0.00010011100000000342, 9.983300000000056e-05, 0.00010024999999999964, 9.954200000000107e-05, 0.00010041700000000195, 9.962499999999902e-05, 0.00010011099999999995, 9.991699999999798e-05, 9.962499999999902e-05, 9.990199999999894e-05, 0.00010001300000000296, 9.98609999999997e-05, 0.00010024999999999964, 0.00010011099999999995, 9.998599999999983e-05, 0.00010027800000000225, 0.00010037499999999977, 0.0001002220000000005, 9.968100000000077e-05, 0.00010000000000000286, 9.974999999999914e-05, 9.99999999999994e-05]</msg>
<status status="PASS" starttime="20201117 14:42:02.352" endtime="20201117 14:42:02.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.347" endtime="20201117 14:42:02.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.357" endtime="20201117 14:42:02.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.360" endtime="20201117 14:42:02.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.359" endtime="20201117 14:42:02.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.355" endtime="20201117 14:42:02.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.978" endtime="20201117 14:42:02.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.576" endtime="20201117 14:42:02.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.575" endtime="20201117 14:42:02.382"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.384" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.392" endtime="20201117 14:42:02.413"></status>
</kw>
<msg timestamp="20201117 14:42:02.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.391" endtime="20201117 14:42:02.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.415" endtime="20201117 14:42:02.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.417" endtime="20201117 14:42:02.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.388" endtime="20201117 14:42:02.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.386" endtime="20201117 14:42:02.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.427" endtime="20201117 14:42:02.731"></status>
</kw>
<msg timestamp="20201117 14:42:02.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.425" endtime="20201117 14:42:02.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.735" endtime="20201117 14:42:02.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.743" endtime="20201117 14:42:02.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.422" endtime="20201117 14:42:02.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.421" endtime="20201117 14:42:02.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.750" level="INFO">${RESULT} = [{'time': 0.022066375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010145799999999872, 'source_diff': 0.00010145799999999872}, {'time': 0.022181403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:02.746" endtime="20201117 14:42:02.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.763" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:02.751" endtime="20201117 14:42:02.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.767" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.766" endtime="20201117 14:42:02.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.770" level="INFO">VALUE: [0.00010145799999999872, 0.00010056999999999774, 0.000100722000000001, 0.00010113900000000009, 0.00010144399999999915, 0.0001013480000000011, 0.00010136200000000067, 0.00010069500000000134, 0.00010142999999999958, 0.00010109700000000138, 0.00010094400000000212, 0.0001006670000000022, 0.00010112500000000052, 0.00010112500000000052, 0.00010137500000000077, 0.00010059700000000088, 0.00010108400000000128, 0.00010066699999999873, 0.00010095800000000169, 0.00010130499999999945, 0.0001006939999999984, 0.00010137500000000077, 0.00010075000000000014, 0.00010129200000000282, 0.00010131899999999902, 0.00010087500000000027, 0.0001013749999999973, 0.0001013199999999985, 0.00010058399999999731, 0.00010075000000000014, 0.00010147199999999829, 0.00010098599999999736, 0.0001011800000000028, 0.00010101399999999996, 0.00010129199999999935, 0.00010129199999999935, 0.00010111100000000095, 0.0001008060000000019, 0.00010098600000000083, 0.00010106999999999824, 0.0001013610000000012, 0.00010090299999999941, 0.00010123600000000108, 0.00010098599999999736, 0.00010084699999999766, 0.00010116599999999976, 0.00010126400000000021, 0.00010132000000000196, 0.0001010000000000004, 0.00010143099999999905]</msg>
<status status="PASS" starttime="20201117 14:42:02.768" endtime="20201117 14:42:02.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.764" endtime="20201117 14:42:02.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.775" endtime="20201117 14:42:02.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.778" endtime="20201117 14:42:02.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.777" endtime="20201117 14:42:02.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.772" endtime="20201117 14:42:02.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.385" endtime="20201117 14:42:02.799"></status>
</kw>
<msg timestamp="20201117 14:42:02.799" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.808" endtime="20201117 14:42:02.829"></status>
</kw>
<msg timestamp="20201117 14:42:02.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.807" endtime="20201117 14:42:02.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.830" endtime="20201117 14:42:02.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.833" endtime="20201117 14:42:02.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.804" endtime="20201117 14:42:02.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.802" endtime="20201117 14:42:02.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.843" endtime="20201117 14:42:03.130"></status>
</kw>
<msg timestamp="20201117 14:42:03.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020450042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.841" endtime="20201117 14:42:03.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020450042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.134" endtime="20201117 14:42:03.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.142" endtime="20201117 14:42:03.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.839" endtime="20201117 14:42:03.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.837" endtime="20201117 14:42:03.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.149" level="INFO">${RESULT} = [{'time': 0.020450042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001008060000000019, 'source_diff': 0.0001008060000000019}, {'time': 0.020566056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:03.146" endtime="20201117 14:42:03.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.162" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:03.150" endtime="20201117 14:42:03.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.167" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.166" endtime="20201117 14:42:03.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.169" level="INFO">VALUE: [0.0001008060000000019, 0.00010133399999999806, 0.00010095800000000169, 0.00010116599999999976, 0.00010106899999999877, 0.00010125000000000065, 0.00010063899999999959, 0.00010109700000000138, 0.00010098600000000083, 0.00010105599999999867, 0.0001008610000000007, 0.00010155500000000317, 0.00010059700000000088, 0.0001010000000000004, 0.0001008610000000007, 0.0001010549999999992, 0.00010143000000000305, 0.00010129099999999988, 0.00010084700000000113, 0.0001010000000000004, 0.0001006809999999983, 0.00010093100000000202, 0.00010055599999999817, 0.00010061100000000045, 0.00010056999999999774, 0.0001015000000000009, 0.0001006809999999983, 0.00010148600000000133, 0.00010134700000000163, 0.00010151400000000046, 0.00010097199999999779, 0.00010069400000000187, 0.00010093099999999855, 0.00010122199999999804, 0.00010144500000000209, 0.00010055599999999817, 0.00010144500000000209, 0.00010143099999999905, 0.00010129200000000282, 0.0001011939999999989, 0.00010108299999999834, 0.00010097199999999779, 0.00010067999999999883, 0.00010113900000000009, 0.00010111100000000095, 0.00010142999999999958, 0.00010118100000000227, 0.00010113900000000009, 0.0001008060000000019, 0.00010082000000000146]</msg>
<status status="PASS" starttime="20201117 14:42:03.168" endtime="20201117 14:42:03.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.163" endtime="20201117 14:42:03.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.172" endtime="20201117 14:42:03.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.176" endtime="20201117 14:42:03.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.174" endtime="20201117 14:42:03.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.171" endtime="20201117 14:42:03.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.800" endtime="20201117 14:42:03.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.383" endtime="20201117 14:42:03.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.382" endtime="20201117 14:42:03.197"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.199" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.207" endtime="20201117 14:42:03.228"></status>
</kw>
<msg timestamp="20201117 14:42:03.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.206" endtime="20201117 14:42:03.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.229" endtime="20201117 14:42:03.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.232" endtime="20201117 14:42:03.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.203" endtime="20201117 14:42:03.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.201" endtime="20201117 14:42:03.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.241" endtime="20201117 14:42:03.528"></status>
</kw>
<msg timestamp="20201117 14:42:03.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.239" endtime="20201117 14:42:03.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.532" endtime="20201117 14:42:03.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.541" endtime="20201117 14:42:03.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.237" endtime="20201117 14:42:03.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.235" endtime="20201117 14:42:03.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.548" level="INFO">${RESULT} = [{'time': 0.022049861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010240300000000091, 'source_diff': 0.00010240300000000091}, {'time': 0.022165861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:03.544" endtime="20201117 14:42:03.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:03.549" endtime="20201117 14:42:03.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.567" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.566" endtime="20201117 14:42:03.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.569" level="INFO">VALUE: [0.00010240300000000091, 0.00010247199999999929, 0.00010230599999999992, 0.00010238900000000134, 0.00010245899999999919, 0.0001017359999999981, 0.00010162500000000102, 0.00010208299999999934, 0.00010218000000000033, 0.0001020550000000002, 0.00010154100000000013, 0.00010204100000000063, 0.00010179199999999985, 0.00010222199999999904, 0.00010224999999999818, 0.00010248600000000233, 0.000101819999999999, 0.00010206999999999924, 0.00010206999999999924, 0.00010211100000000195, 0.00010230500000000045, 0.00010208300000000281, 0.0001020000000000014, 0.00010162500000000102, 0.00010194399999999965, 0.0001016939999999994, 0.00010248600000000233, 0.00010180599999999942, 0.00010233399999999906, 0.0001020420000000001, 0.00010199999999999793, 0.00010216700000000023, 0.00010174999999999768, 0.00010222199999999904, 0.00010198600000000183, 0.00010181899999999952, 0.00010244400000000015, 0.00010176400000000071, 0.00010229200000000035, 0.00010207000000000271, 0.0001018610000000017, 0.00010173600000000158, 0.0001016809999999993, 0.00010229200000000035, 0.00010173699999999758, 0.00010175000000000115, 0.00010154100000000013, 0.00010187500000000127, 0.00010218000000000033, 0.00010187500000000127]</msg>
<status status="PASS" starttime="20201117 14:42:03.568" endtime="20201117 14:42:03.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.563" endtime="20201117 14:42:03.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.572" endtime="20201117 14:42:03.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.576" endtime="20201117 14:42:03.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.574" endtime="20201117 14:42:03.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.571" endtime="20201117 14:42:03.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.200" endtime="20201117 14:42:03.596"></status>
</kw>
<msg timestamp="20201117 14:42:03.597" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.605" endtime="20201117 14:42:03.626"></status>
</kw>
<msg timestamp="20201117 14:42:03.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.603" endtime="20201117 14:42:03.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.627" endtime="20201117 14:42:03.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.630" endtime="20201117 14:42:03.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.601" endtime="20201117 14:42:03.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.599" endtime="20201117 14:42:03.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.639" endtime="20201117 14:42:03.926"></status>
</kw>
<msg timestamp="20201117 14:42:03.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.637" endtime="20201117 14:42:03.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.930" endtime="20201117 14:42:03.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.938" endtime="20201117 14:42:03.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.634" endtime="20201117 14:42:03.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.633" endtime="20201117 14:42:03.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.945" level="INFO">${RESULT} = [{'time': 0.019551319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010170800000000244, 'source_diff': 0.00010170800000000244}, {'time': 0.019666333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:03.942" endtime="20201117 14:42:03.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.958" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:03.946" endtime="20201117 14:42:03.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.963" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.962" endtime="20201117 14:42:03.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.965" level="INFO">VALUE: [0.00010170800000000244, 0.0001021939999999999, 0.00010244400000000015, 0.00010177800000000028, 0.00010212500000000152, 0.00010212499999999805, 0.00010173600000000158, 0.0001015000000000009, 0.00010248599999999886, 0.00010201400000000097, 0.00010162500000000102, 0.00010179199999999985, 0.00010218000000000033, 0.00010201400000000097, 0.00010204100000000063, 0.0001020550000000002, 0.00010180599999999942, 0.00010211099999999848, 0.00010209800000000185, 0.00010186099999999823, 0.00010158399999999831, 0.00010165300000000016, 0.00010163900000000059, 0.00010225000000000165, 0.00010201400000000097, 0.00010213899999999762, 0.00010188900000000084, 0.0001020000000000014, 0.0001021809999999998, 0.00010229200000000035, 0.00010230599999999992, 0.00010169499999999887, 0.00010220799999999947, 0.0001023610000000022, 0.00010180599999999942, 0.00010181899999999952, 0.00010237500000000177, 0.00010245799999999972, 0.00010148600000000133, 0.00010212500000000152, 0.00010186099999999823, 0.00010248600000000233, 0.0001020000000000014, 0.0001023749999999983, 0.00010194499999999912, 0.00010236099999999873, 0.00010199999999999793, 0.00010222199999999904, 0.00010245799999999972, 0.00010209699999999891]</msg>
<status status="PASS" starttime="20201117 14:42:03.964" endtime="20201117 14:42:03.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.959" endtime="20201117 14:42:03.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.968" endtime="20201117 14:42:03.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.972" endtime="20201117 14:42:03.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.970" endtime="20201117 14:42:03.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.967" endtime="20201117 14:42:03.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.597" endtime="20201117 14:42:03.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.198" endtime="20201117 14:42:03.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.197" endtime="20201117 14:42:03.993"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.995" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.004" endtime="20201117 14:42:04.025"></status>
</kw>
<msg timestamp="20201117 14:42:04.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.002" endtime="20201117 14:42:04.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.026" endtime="20201117 14:42:04.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.029" endtime="20201117 14:42:04.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.999" endtime="20201117 14:42:04.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.997" endtime="20201117 14:42:04.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.038" endtime="20201117 14:42:04.325"></status>
</kw>
<msg timestamp="20201117 14:42:04.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.037" endtime="20201117 14:42:04.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.329" endtime="20201117 14:42:04.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.338" endtime="20201117 14:42:04.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.034" endtime="20201117 14:42:04.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.032" endtime="20201117 14:42:04.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.344" level="INFO">${RESULT} = [{'time': 0.022178125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010338899999999887, 'source_diff': 0.00010338899999999887}, {'time': 0.022294139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:04.341" endtime="20201117 14:42:04.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:04.345" endtime="20201117 14:42:04.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.362" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.361" endtime="20201117 14:42:04.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.364" level="INFO">VALUE: [0.00010338899999999887, 0.00010256999999999974, 0.00010311099999999948, 0.00010316700000000123, 0.00010265299999999769, 0.00010262499999999855, 0.00010274999999999868, 0.0001027359999999991, 0.00010286099999999923, 0.00010349999999999943, 0.00010279100000000138, 0.00010304100000000163, 0.00010313900000000209, 0.00010255600000000017, 0.00010330599999999746, 0.00010280600000000042, 0.0001033200000000005, 0.00010272299999999901, 0.0001025550000000007, 0.00010295899999999969, 0.00010331900000000102, 0.00010311099999999948, 0.00010274999999999868, 0.00010349999999999943, 0.00010290299999999794, 0.00010280599999999696, 0.00010324999999999918, 0.00010270799999999997, 0.00010293100000000055, 0.0001029870000000023, 0.00010297299999999926, 0.0001029299999999976, 0.00010309699999999991, 0.00010331900000000102, 0.00010325000000000265, 0.00010283300000000009, 0.00010319500000000037, 0.00010288899999999837, 0.00010291599999999804, 0.00010261099999999898, 0.00010324999999999918, 0.00010334799999999963, 0.0001032359999999996, 0.00010344399999999768, 0.00010315199999999872, 0.00010301400000000197, 0.00010256900000000027, 0.00010280600000000042, 0.0001028749999999988, 0.0001033619999999992]</msg>
<status status="PASS" starttime="20201117 14:42:04.363" endtime="20201117 14:42:04.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.358" endtime="20201117 14:42:04.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.368" endtime="20201117 14:42:04.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.371" endtime="20201117 14:42:04.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.369" endtime="20201117 14:42:04.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.366" endtime="20201117 14:42:04.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.996" endtime="20201117 14:42:04.392"></status>
</kw>
<msg timestamp="20201117 14:42:04.392" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.400" endtime="20201117 14:42:04.421"></status>
</kw>
<msg timestamp="20201117 14:42:04.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.399" endtime="20201117 14:42:04.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.423" endtime="20201117 14:42:04.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.426" endtime="20201117 14:42:04.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.396" endtime="20201117 14:42:04.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.394" endtime="20201117 14:42:04.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.435" endtime="20201117 14:42:04.720"></status>
</kw>
<msg timestamp="20201117 14:42:04.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.433" endtime="20201117 14:42:04.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.725" endtime="20201117 14:42:04.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.733" endtime="20201117 14:42:04.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.431" endtime="20201117 14:42:04.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.429" endtime="20201117 14:42:04.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.739" level="INFO">${RESULT} = [{'time': 0.019572097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010298599999999936, 'source_diff': 0.00010298599999999936}, {'time': 0.019689111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:04.736" endtime="20201117 14:42:04.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.752" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:04.740" endtime="20201117 14:42:04.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.757" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.756" endtime="20201117 14:42:04.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.759" level="INFO">VALUE: [0.00010298599999999936, 0.00010331899999999755, 0.00010329099999999841, 0.00010294399999999718, 0.00010316700000000123, 0.00010333400000000006, 0.00010263900000000159, 0.00010348599999999986, 0.00010279200000000085, 0.00010344499999999715, 0.00010297299999999926, 0.00010348599999999986, 0.00010254099999999766, 0.00010294400000000065, 0.00010294400000000065, 0.00010267999999999736, 0.00010268000000000083, 0.0001028749999999988, 0.0001030000000000024, 0.00010348600000000333, 0.00010269499999999987, 0.00010343100000000105, 0.00010283399999999956, 0.00010349999999999943, 0.00010313899999999862, 0.00010311099999999948, 0.00010324999999999918, 0.00010330500000000145, 0.00010274999999999868, 0.00010347200000000029, 0.00010329199999999789, 0.00010341700000000148, 0.00010274999999999868, 0.00010347299999999976, 0.00010276400000000172, 0.0001028749999999988, 0.00010317999999999786, 0.000102513999999998, 0.00010263900000000159, 0.0001033749999999993, 0.00010349999999999943, 0.00010324999999999918, 0.00010308300000000034, 0.00010305600000000067, 0.00010269499999999987, 0.00010269499999999987, 0.00010287500000000227, 0.00010262499999999855, 0.000103416000000002, 0.00010280500000000095]</msg>
<status status="PASS" starttime="20201117 14:42:04.758" endtime="20201117 14:42:04.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.753" endtime="20201117 14:42:04.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.763" endtime="20201117 14:42:04.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.766" endtime="20201117 14:42:04.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.764" endtime="20201117 14:42:04.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.761" endtime="20201117 14:42:04.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.393" endtime="20201117 14:42:04.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.994" endtime="20201117 14:42:04.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.993" endtime="20201117 14:42:04.787"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.789" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.798" endtime="20201117 14:42:04.818"></status>
</kw>
<msg timestamp="20201117 14:42:04.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.797" endtime="20201117 14:42:04.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.820" endtime="20201117 14:42:04.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.822" endtime="20201117 14:42:04.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.794" endtime="20201117 14:42:04.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.791" endtime="20201117 14:42:04.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.831" endtime="20201117 14:42:05.118"></status>
</kw>
<msg timestamp="20201117 14:42:05.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.830" endtime="20201117 14:42:05.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.123" endtime="20201117 14:42:05.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.131" endtime="20201117 14:42:05.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.827" endtime="20201117 14:42:05.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.825" endtime="20201117 14:42:05.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.138" level="INFO">${RESULT} = [{'time': 0.022575514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010379200000000185, 'source_diff': 0.00010379200000000185}, {'time': 0.022696528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:05.134" endtime="20201117 14:42:05.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.153" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:05.139" endtime="20201117 14:42:05.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.157" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.156" endtime="20201117 14:42:05.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.160" level="INFO">VALUE: [0.00010379200000000185, 0.000104514, 0.0001035420000000016, 0.00010368099999999783, 0.00010436100000000073, 0.00010380600000000142, 0.00010388899999999937, 0.00010367999999999836, 0.00010442999999999911, 0.00010450000000000043, 0.00010411100000000048, 0.00010397300000000026, 0.00010366700000000173, 0.00010399999999999993, 0.00010416599999999929, 0.00010399999999999993, 0.00010377699999999934, 0.00010380500000000195, 0.00010406900000000177, 0.00010381900000000152, 0.00010430500000000245, 0.0001035689999999978, 0.00010362499999999955, 0.00010420800000000147, 0.00010419500000000137, 0.00010441700000000248, 0.00010399999999999993, 0.0001038749999999998, 0.0001043750000000003, 0.00010418099999999833, 0.00010370800000000097, 0.00010448600000000086, 0.00010394400000000165, 0.00010380500000000195, 0.00010365300000000216, 0.00010357000000000074, 0.00010394500000000112, 0.00010433299999999812, 0.00010425000000000018, 0.00010362499999999955, 0.00010429099999999941, 0.0001037360000000001, 0.00010356900000000127, 0.00010354199999999814, 0.0001042360000000006, 0.00010430499999999898, 0.0001035420000000016, 0.00010398600000000036, 0.00010402799999999907, 0.00010361099999999998]</msg>
<status status="PASS" starttime="20201117 14:42:05.159" endtime="20201117 14:42:05.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.154" endtime="20201117 14:42:05.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.163" endtime="20201117 14:42:05.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.167" endtime="20201117 14:42:05.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.165" endtime="20201117 14:42:05.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.162" endtime="20201117 14:42:05.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.790" endtime="20201117 14:42:05.188"></status>
</kw>
<msg timestamp="20201117 14:42:05.188" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.197" endtime="20201117 14:42:05.216"></status>
</kw>
<msg timestamp="20201117 14:42:05.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.195" endtime="20201117 14:42:05.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.218" endtime="20201117 14:42:05.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.220" endtime="20201117 14:42:05.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.193" endtime="20201117 14:42:05.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.190" endtime="20201117 14:42:05.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.230" endtime="20201117 14:42:05.542"></status>
</kw>
<msg timestamp="20201117 14:42:05.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01994, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043667, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:42:05.228" endtime="20201117 14:42:05.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01994, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043667, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:42:05.547" endtime="20201117 14:42:05.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.555" endtime="20201117 14:42:05.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.225" endtime="20201117 14:42:05.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.224" endtime="20201117 14:42:05.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.562" level="INFO">${RESULT} = [{'time': 0.020043667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010366700000000173, 'source_diff': 0.00010366700000000173}, {'time': 0.020162694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:05.558" endtime="20201117 14:42:05.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:05.563" endtime="20201117 14:42:05.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.580" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.579" endtime="20201117 14:42:05.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.582" level="INFO">VALUE: [0.00010366700000000173, 0.00010395799999999775, 0.0001038749999999998, 0.00010357000000000074, 0.00010398600000000036, 0.00010365200000000269, 0.0001040139999999995, 0.00010390199999999947, 0.00010386100000000023, 0.00010399999999999993, 0.00010394400000000165, 0.0001037360000000001, 0.00010390300000000241, 0.0001035420000000016, 0.000103820000000001, 0.00010441699999999901, 0.00010436100000000073, 0.00010393100000000155, 0.0001043620000000002, 0.00010380499999999848, 0.00010384700000000066, 0.00010363899999999912, 0.00010394400000000165, 0.00010422300000000051, 0.00010390300000000241, 0.00010443099999999858, 0.00010416699999999876, 0.00010359700000000041, 0.00010380600000000142, 0.00010361099999999998, 0.00010443099999999858, 0.00010388899999999937, 0.00010366599999999879, 0.00010405499999999873, 0.00010379099999999891, 0.0001040139999999995, 0.00010365300000000216, 0.00010388899999999937, 0.0001040139999999995, 0.00010366700000000173, 0.0001042360000000006, 0.00010426399999999975, 0.0001040559999999982, 0.00010372200000000054, 0.00010391599999999904, 0.00010393000000000208, 0.00010386100000000023, 0.00010437499999999683, 0.00010376399999999925, 0.00010413899999999962]</msg>
<status status="PASS" starttime="20201117 14:42:05.581" endtime="20201117 14:42:05.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.576" endtime="20201117 14:42:05.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.586" endtime="20201117 14:42:05.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.590" endtime="20201117 14:42:05.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.588" endtime="20201117 14:42:05.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.584" endtime="20201117 14:42:05.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.189" endtime="20201117 14:42:05.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.788" endtime="20201117 14:42:05.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.787" endtime="20201117 14:42:05.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.512" endtime="20201117 14:42:05.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.616" endtime="20201117 14:42:05.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.615" endtime="20201117 14:42:05.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.613" endtime="20201117 14:42:05.637"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:45.438" endtime="20201117 14:42:05.637" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.648" endtime="20201117 14:42:05.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.646" endtime="20201117 14:42:05.668"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.682" endtime="20201117 14:42:05.701"></status>
</kw>
<msg timestamp="20201117 14:42:05.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.680" endtime="20201117 14:42:05.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.704" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.703" endtime="20201117 14:42:05.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.707" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:42:05.705" endtime="20201117 14:42:05.708"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:05.677" endtime="20201117 14:42:05.708"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:05.675" endtime="20201117 14:42:05.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.674" endtime="20201117 14:42:05.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:42:05.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:42:05.712" endtime="20201117 14:42:05.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.710" endtime="20201117 14:42:05.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.673" endtime="20201117 14:42:05.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.672" endtime="20201117 14:42:05.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.715" endtime="20201117 14:42:05.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.670" endtime="20201117 14:42:05.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.669" endtime="20201117 14:42:05.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.645" endtime="20201117 14:42:05.718"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.722" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.731" endtime="20201117 14:42:05.749"></status>
</kw>
<msg timestamp="20201117 14:42:05.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.730" endtime="20201117 14:42:05.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.751" endtime="20201117 14:42:05.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.754" endtime="20201117 14:42:05.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.727" endtime="20201117 14:42:05.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.724" endtime="20201117 14:42:05.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.763" endtime="20201117 14:42:06.051"></status>
</kw>
<msg timestamp="20201117 14:42:06.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073810778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073844167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.761" endtime="20201117 14:42:06.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073810778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073844167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.055" endtime="20201117 14:42:06.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.064" endtime="20201117 14:42:06.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.759" endtime="20201117 14:42:06.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.757" endtime="20201117 14:42:06.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.071" level="INFO">${RESULT} = [{'time': 0.073844167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.338900000000866e-05, 'source_diff': 3.338900000000866e-05}, {'time': 0.073878, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:06.067" endtime="20201117 14:42:06.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.085" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:06.072" endtime="20201117 14:42:06.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.090" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.089" endtime="20201117 14:42:06.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.093" level="INFO">VALUE: [3.338900000000866e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.0514000000009256e-05, 3.052700000000241e-05, 3.0513999999995378e-05, 3.052800000000189e-05, 3.04579999999971e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999452e-05, 3.054100000000892e-05, 3.0513999999995378e-05, 3.0514000000009256e-05, 3.0512999999995905e-05, 3.052799999998801e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.0513000000009782e-05, 3.0513999999995378e-05, 3.055600000000103e-05, 3.054199999999452e-05, 3.054199999999452e-05, 3.054199999999452e-05, 3.052800000000189e-05, 3.0526999999988536e-05, 3.0514000000009256e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.0540999999995044e-05, 3.0526999999988536e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.054199999999452e-05, 3.052800000000189e-05, 3.0486000000010116e-05, 3.052799999998801e-05, 3.047199999998973e-05, 3.052800000000189e-05, 3.0486999999995712e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.054199999999452e-05, 3.0542000000008396e-05, 3.052800000000189e-05, 3.0513999999995378e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.091" endtime="20201117 14:42:06.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.086" endtime="20201117 14:42:06.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.096" endtime="20201117 14:42:06.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.099" endtime="20201117 14:42:06.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.098" endtime="20201117 14:42:06.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.094" endtime="20201117 14:42:06.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.723" endtime="20201117 14:42:06.121"></status>
</kw>
<msg timestamp="20201117 14:42:06.121" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.130" endtime="20201117 14:42:06.147"></status>
</kw>
<msg timestamp="20201117 14:42:06.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.128" endtime="20201117 14:42:06.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.149" endtime="20201117 14:42:06.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.151" endtime="20201117 14:42:06.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.125" endtime="20201117 14:42:06.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.123" endtime="20201117 14:42:06.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.161" endtime="20201117 14:42:06.447"></status>
</kw>
<msg timestamp="20201117 14:42:06.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020113056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.159" endtime="20201117 14:42:06.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020113056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.451" endtime="20201117 14:42:06.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.460" endtime="20201117 14:42:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.156" endtime="20201117 14:42:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.155" endtime="20201117 14:42:06.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.467" level="INFO">${RESULT} = [{'time': 0.020113056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0584000000000167e-05, 'source_diff': 3.0584000000000167e-05}, {'time': 0.020146458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:06.463" endtime="20201117 14:42:06.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.481" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:06.468" endtime="20201117 14:42:06.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.486" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.485" endtime="20201117 14:42:06.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.489" level="INFO">VALUE: [3.0584000000000167e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.047299999999961e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0458000000000568e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0472000000000138e-05, 3.054200000000146e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0582999999997224e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.0540999999998514e-05, 3.056900000000112e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.04579999999971e-05, 3.058300000000069e-05, 3.05839999999967e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.048699999999918e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0499999999999278e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.487" endtime="20201117 14:42:06.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.482" endtime="20201117 14:42:06.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.492" endtime="20201117 14:42:06.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.496" endtime="20201117 14:42:06.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.494" endtime="20201117 14:42:06.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.491" endtime="20201117 14:42:06.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.122" endtime="20201117 14:42:06.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.721" endtime="20201117 14:42:06.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.720" endtime="20201117 14:42:06.517"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.520" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.528" endtime="20201117 14:42:06.546"></status>
</kw>
<msg timestamp="20201117 14:42:06.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.527" endtime="20201117 14:42:06.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.548" endtime="20201117 14:42:06.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.550" endtime="20201117 14:42:06.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.524" endtime="20201117 14:42:06.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.522" endtime="20201117 14:42:06.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.560" endtime="20201117 14:42:06.846"></status>
</kw>
<msg timestamp="20201117 14:42:06.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.558" endtime="20201117 14:42:06.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.850" endtime="20201117 14:42:06.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.859" endtime="20201117 14:42:06.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.555" endtime="20201117 14:42:06.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.554" endtime="20201117 14:42:06.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.866" level="INFO">${RESULT} = [{'time': 0.022545639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.022581097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.862" endtime="20201117 14:42:06.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.881" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:06.867" endtime="20201117 14:42:06.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.886" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.885" endtime="20201117 14:42:06.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.889" level="INFO">VALUE: [3.059700000000026e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.045900000000004e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.055500000000155e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.0485999999999708e-05, 3.0526999999998944e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.0512999999999374e-05, 3.048699999999918e-05, 3.059700000000026e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.054199999999799e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.887" endtime="20201117 14:42:06.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.882" endtime="20201117 14:42:06.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.893" endtime="20201117 14:42:06.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.897" endtime="20201117 14:42:06.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.895" endtime="20201117 14:42:06.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.891" endtime="20201117 14:42:06.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.520" endtime="20201117 14:42:06.918"></status>
</kw>
<msg timestamp="20201117 14:42:06.918" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.927" endtime="20201117 14:42:06.943"></status>
</kw>
<msg timestamp="20201117 14:42:06.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.925" endtime="20201117 14:42:06.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.945" endtime="20201117 14:42:06.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.947" endtime="20201117 14:42:06.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.923" endtime="20201117 14:42:06.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.920" endtime="20201117 14:42:06.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.957" endtime="20201117 14:42:07.244"></status>
</kw>
<msg timestamp="20201117 14:42:07.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.955" endtime="20201117 14:42:07.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.248" endtime="20201117 14:42:07.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.257" endtime="20201117 14:42:07.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.952" endtime="20201117 14:42:07.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.951" endtime="20201117 14:42:07.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.265" level="INFO">${RESULT} = [{'time': 0.020102778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.062500000000287e-05, 'source_diff': 3.062500000000287e-05}, {'time': 0.020135917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.261" endtime="20201117 14:42:07.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.279" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:07.266" endtime="20201117 14:42:07.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.284" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.283" endtime="20201117 14:42:07.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.286" level="INFO">VALUE: [3.062500000000287e-05, 3.0485999999999708e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.0444000000000998e-05, 3.054200000000146e-05, 3.055600000000103e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.045900000000004e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0472000000000138e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.055599999999756e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.047299999999961e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.285" endtime="20201117 14:42:07.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.280" endtime="20201117 14:42:07.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.290" endtime="20201117 14:42:07.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.293" endtime="20201117 14:42:07.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.292" endtime="20201117 14:42:07.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.288" endtime="20201117 14:42:07.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.919" endtime="20201117 14:42:07.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.518" endtime="20201117 14:42:07.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.518" endtime="20201117 14:42:07.315"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.317" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.326" endtime="20201117 14:42:07.343"></status>
</kw>
<msg timestamp="20201117 14:42:07.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.324" endtime="20201117 14:42:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.345" endtime="20201117 14:42:07.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.347" endtime="20201117 14:42:07.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.321" endtime="20201117 14:42:07.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.319" endtime="20201117 14:42:07.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.357" endtime="20201117 14:42:07.643"></status>
</kw>
<msg timestamp="20201117 14:42:07.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.355" endtime="20201117 14:42:07.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.647" endtime="20201117 14:42:07.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.656" endtime="20201117 14:42:07.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.352" endtime="20201117 14:42:07.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.350" endtime="20201117 14:42:07.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.663" level="INFO">${RESULT} = [{'time': 0.022595375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022631472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.660" endtime="20201117 14:42:07.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.677" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:07.664" endtime="20201117 14:42:07.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.681" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.680" endtime="20201117 14:42:07.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.684" level="INFO">VALUE: [3.061099999999983e-05, 3.0540999999998514e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0472000000000138e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0568999999997654e-05, 3.058300000000069e-05, 3.0485999999999708e-05, 3.0526999999998944e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.059700000000026e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.683" endtime="20201117 14:42:07.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.678" endtime="20201117 14:42:07.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.687" endtime="20201117 14:42:07.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.691" endtime="20201117 14:42:07.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.689" endtime="20201117 14:42:07.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.686" endtime="20201117 14:42:07.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.318" endtime="20201117 14:42:07.712"></status>
</kw>
<msg timestamp="20201117 14:42:07.712" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.721" endtime="20201117 14:42:07.738"></status>
</kw>
<msg timestamp="20201117 14:42:07.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.719" endtime="20201117 14:42:07.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.740" endtime="20201117 14:42:07.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.743" endtime="20201117 14:42:07.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.716" endtime="20201117 14:42:07.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.714" endtime="20201117 14:42:07.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.752" endtime="20201117 14:42:08.038"></status>
</kw>
<msg timestamp="20201117 14:42:08.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020031167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020061792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.750" endtime="20201117 14:42:08.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020031167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020061792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.043" endtime="20201117 14:42:08.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.052" endtime="20201117 14:42:08.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.748" endtime="20201117 14:42:08.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.746" endtime="20201117 14:42:08.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.059" level="INFO">${RESULT} = [{'time': 0.020061792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.020097444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:08.055" endtime="20201117 14:42:08.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.072" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:08.060" endtime="20201117 14:42:08.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.077" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.076" endtime="20201117 14:42:08.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.080" level="INFO">VALUE: [3.06249999999994e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.059700000000026e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.059700000000026e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513000000002843e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.056900000000112e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.058300000000069e-05, 3.0512999999999374e-05, 3.0513999999998848e-05, 3.056999999999713e-05, 3.0458000000000568e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.054200000000146e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.078" endtime="20201117 14:42:08.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.073" endtime="20201117 14:42:08.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.083" endtime="20201117 14:42:08.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.086" endtime="20201117 14:42:08.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.085" endtime="20201117 14:42:08.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.081" endtime="20201117 14:42:08.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.713" endtime="20201117 14:42:08.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.316" endtime="20201117 14:42:08.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.315" endtime="20201117 14:42:08.108"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.110" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.119" endtime="20201117 14:42:08.136"></status>
</kw>
<msg timestamp="20201117 14:42:08.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.117" endtime="20201117 14:42:08.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.138" endtime="20201117 14:42:08.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.140" endtime="20201117 14:42:08.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.114" endtime="20201117 14:42:08.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.112" endtime="20201117 14:42:08.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.150" endtime="20201117 14:42:08.436"></status>
</kw>
<msg timestamp="20201117 14:42:08.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.148" endtime="20201117 14:42:08.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.440" endtime="20201117 14:42:08.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.449" endtime="20201117 14:42:08.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.146" endtime="20201117 14:42:08.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.143" endtime="20201117 14:42:08.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.456" level="INFO">${RESULT} = [{'time': 0.022611222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022645708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:08.452" endtime="20201117 14:42:08.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:08.457" endtime="20201117 14:42:08.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.476" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.474" endtime="20201117 14:42:08.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.478" level="INFO">VALUE: [3.061099999999983e-05, 3.054100000000198e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.055500000000155e-05, 3.0500000000002747e-05, 3.04579999999971e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.055500000000155e-05, 3.054200000000146e-05, 3.056900000000112e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.055600000000103e-05, 3.054100000000198e-05, 3.0485999999999708e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.477" endtime="20201117 14:42:08.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.472" endtime="20201117 14:42:08.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.481" endtime="20201117 14:42:08.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.485" endtime="20201117 14:42:08.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.483" endtime="20201117 14:42:08.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.480" endtime="20201117 14:42:08.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.111" endtime="20201117 14:42:08.506"></status>
</kw>
<msg timestamp="20201117 14:42:08.506" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.515" endtime="20201117 14:42:08.533"></status>
</kw>
<msg timestamp="20201117 14:42:08.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.513" endtime="20201117 14:42:08.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.534" endtime="20201117 14:42:08.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.537" endtime="20201117 14:42:08.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.510" endtime="20201117 14:42:08.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.508" endtime="20201117 14:42:08.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.547" endtime="20201117 14:42:08.834"></status>
</kw>
<msg timestamp="20201117 14:42:08.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.545" endtime="20201117 14:42:08.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.838" endtime="20201117 14:42:08.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.847" endtime="20201117 14:42:08.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.542" endtime="20201117 14:42:08.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.540" endtime="20201117 14:42:08.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.854" level="INFO">${RESULT} = [{'time': 0.020098694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.020131722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:08.850" endtime="20201117 14:42:08.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:08.855" endtime="20201117 14:42:08.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.872" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.871" endtime="20201117 14:42:08.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.874" level="INFO">VALUE: [3.059700000000026e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.0486000000003177e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0486000000003177e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.059700000000026e-05, 3.05700000000006e-05, 3.054200000000146e-05, 3.058300000000069e-05, 3.0513999999998848e-05, 3.052700000000241e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.873" endtime="20201117 14:42:08.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.868" endtime="20201117 14:42:08.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.878" endtime="20201117 14:42:08.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.881" endtime="20201117 14:42:08.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.880" endtime="20201117 14:42:08.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.876" endtime="20201117 14:42:08.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.507" endtime="20201117 14:42:08.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.109" endtime="20201117 14:42:08.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.108" endtime="20201117 14:42:08.902"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.905" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.914" endtime="20201117 14:42:08.932"></status>
</kw>
<msg timestamp="20201117 14:42:08.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.912" endtime="20201117 14:42:08.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.933" endtime="20201117 14:42:08.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.936" endtime="20201117 14:42:08.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.909" endtime="20201117 14:42:08.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.907" endtime="20201117 14:42:08.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.945" endtime="20201117 14:42:09.233"></status>
</kw>
<msg timestamp="20201117 14:42:09.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:08.944" endtime="20201117 14:42:09.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:09.237" endtime="20201117 14:42:09.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.246" endtime="20201117 14:42:09.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.941" endtime="20201117 14:42:09.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.939" endtime="20201117 14:42:09.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.253" level="INFO">${RESULT} = [{'time': 0.022975111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.023010847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:09.249" endtime="20201117 14:42:09.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.266" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:09.254" endtime="20201117 14:42:09.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.271" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.270" endtime="20201117 14:42:09.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.274" level="INFO">VALUE: [3.061099999999983e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.055500000000155e-05, 3.0499999999999278e-05, 3.0485999999999708e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.061099999999983e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.0485999999999708e-05, 3.0485999999999708e-05, 3.0444000000000998e-05, 3.052800000000189e-05, 3.059700000000026e-05, 3.0597999999999737e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.047300000000308e-05, 3.054100000000198e-05, 3.054199999999799e-05, 3.056900000000112e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.272" endtime="20201117 14:42:09.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.267" endtime="20201117 14:42:09.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.277" endtime="20201117 14:42:09.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.280" endtime="20201117 14:42:09.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.279" endtime="20201117 14:42:09.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.275" endtime="20201117 14:42:09.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.906" endtime="20201117 14:42:09.302"></status>
</kw>
<msg timestamp="20201117 14:42:09.302" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.311" endtime="20201117 14:42:09.327"></status>
</kw>
<msg timestamp="20201117 14:42:09.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.309" endtime="20201117 14:42:09.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.329" endtime="20201117 14:42:09.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.331" endtime="20201117 14:42:09.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.306" endtime="20201117 14:42:09.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.304" endtime="20201117 14:42:09.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.341" endtime="20201117 14:42:09.628"></status>
</kw>
<msg timestamp="20201117 14:42:09.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.339" endtime="20201117 14:42:09.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.632" endtime="20201117 14:42:09.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.641" endtime="20201117 14:42:09.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.336" endtime="20201117 14:42:09.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.335" endtime="20201117 14:42:09.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.648" level="INFO">${RESULT} = [{'time': 0.020328972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.020363514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:09.644" endtime="20201117 14:42:09.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:09.649" endtime="20201117 14:42:09.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.666" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.665" endtime="20201117 14:42:09.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.669" level="INFO">VALUE: [3.06249999999994e-05, 3.054199999999799e-05, 3.0485999999999708e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.054100000000198e-05, 3.0499999999999278e-05, 3.055500000000155e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.0568999999997654e-05, 3.056900000000112e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.061099999999983e-05, 3.055600000000103e-05, 3.0499999999999278e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513000000002843e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.0485999999999708e-05, 3.0554999999998084e-05, 3.0514000000002317e-05, 3.056900000000112e-05, 3.054200000000146e-05, 3.0584000000000167e-05, 3.056900000000112e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.058300000000069e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0485999999999708e-05, 3.0513999999998848e-05, 3.0485999999999708e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.667" endtime="20201117 14:42:09.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.663" endtime="20201117 14:42:09.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.673" endtime="20201117 14:42:09.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.676" endtime="20201117 14:42:09.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.675" endtime="20201117 14:42:09.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.671" endtime="20201117 14:42:09.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.303" endtime="20201117 14:42:09.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.904" endtime="20201117 14:42:09.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.903" endtime="20201117 14:42:09.697"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.700" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.708" endtime="20201117 14:42:09.726"></status>
</kw>
<msg timestamp="20201117 14:42:09.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.707" endtime="20201117 14:42:09.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.727" endtime="20201117 14:42:09.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.730" endtime="20201117 14:42:09.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.704" endtime="20201117 14:42:09.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.702" endtime="20201117 14:42:09.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.739" endtime="20201117 14:42:10.026"></status>
</kw>
<msg timestamp="20201117 14:42:10.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022518667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.738" endtime="20201117 14:42:10.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022518667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.030" endtime="20201117 14:42:10.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.038" endtime="20201117 14:42:10.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.735" endtime="20201117 14:42:10.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.733" endtime="20201117 14:42:10.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.045" level="INFO">${RESULT} = [{'time': 0.022518667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022553569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.042" endtime="20201117 14:42:10.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.061" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:10.046" endtime="20201117 14:42:10.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.065" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.064" endtime="20201117 14:42:10.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.068" level="INFO">VALUE: [3.061099999999983e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.055500000000155e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.055599999999756e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.058300000000069e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.055500000000155e-05, 3.056900000000112e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.055599999999756e-05, 3.052800000000189e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.066" endtime="20201117 14:42:10.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.062" endtime="20201117 14:42:10.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.072" endtime="20201117 14:42:10.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.075" endtime="20201117 14:42:10.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.074" endtime="20201117 14:42:10.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.070" endtime="20201117 14:42:10.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.701" endtime="20201117 14:42:10.096"></status>
</kw>
<msg timestamp="20201117 14:42:10.096" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.105" endtime="20201117 14:42:10.122"></status>
</kw>
<msg timestamp="20201117 14:42:10.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.103" endtime="20201117 14:42:10.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.124" endtime="20201117 14:42:10.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.127" endtime="20201117 14:42:10.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.101" endtime="20201117 14:42:10.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.098" endtime="20201117 14:42:10.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.136" endtime="20201117 14:42:10.423"></status>
</kw>
<msg timestamp="20201117 14:42:10.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.134" endtime="20201117 14:42:10.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.427" endtime="20201117 14:42:10.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.436" endtime="20201117 14:42:10.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.132" endtime="20201117 14:42:10.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.130" endtime="20201117 14:42:10.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.443" level="INFO">${RESULT} = [{'time': 0.019943514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.019978375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.439" endtime="20201117 14:42:10.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:10.444" endtime="20201117 14:42:10.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.461" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.460" endtime="20201117 14:42:10.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.464" level="INFO">VALUE: [3.061099999999983e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.0513999999998848e-05, 3.0513000000002843e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.05700000000006e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.0472000000000138e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.045900000000004e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.055599999999756e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.045900000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.463" endtime="20201117 14:42:10.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.458" endtime="20201117 14:42:10.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.468" endtime="20201117 14:42:10.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.471" endtime="20201117 14:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.470" endtime="20201117 14:42:10.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.466" endtime="20201117 14:42:10.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.097" endtime="20201117 14:42:10.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.699" endtime="20201117 14:42:10.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.698" endtime="20201117 14:42:10.493"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.495" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.504" endtime="20201117 14:42:10.519"></status>
</kw>
<msg timestamp="20201117 14:42:10.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.502" endtime="20201117 14:42:10.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.521" endtime="20201117 14:42:10.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.523" endtime="20201117 14:42:10.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.499" endtime="20201117 14:42:10.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.497" endtime="20201117 14:42:10.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.533" endtime="20201117 14:42:10.820"></status>
</kw>
<msg timestamp="20201117 14:42:10.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02253825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:10.531" endtime="20201117 14:42:10.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02253825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:10.824" endtime="20201117 14:42:10.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.833" endtime="20201117 14:42:10.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.529" endtime="20201117 14:42:10.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.527" endtime="20201117 14:42:10.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.840" level="INFO">${RESULT} = [{'time': 0.02253825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022570847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:10.836" endtime="20201117 14:42:10.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.853" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:10.841" endtime="20201117 14:42:10.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.858" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.857" endtime="20201117 14:42:10.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.861" level="INFO">VALUE: [3.061099999999983e-05, 3.0500000000002747e-05, 3.0500000000002747e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.05700000000006e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.055600000000103e-05, 3.0472000000000138e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0485999999999708e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.0582999999997224e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.054100000000198e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.0486000000003177e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.055599999999756e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.056900000000112e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.859" endtime="20201117 14:42:10.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.854" endtime="20201117 14:42:10.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.864" endtime="20201117 14:42:10.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.868" endtime="20201117 14:42:10.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.867" endtime="20201117 14:42:10.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.863" endtime="20201117 14:42:10.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.496" endtime="20201117 14:42:10.889"></status>
</kw>
<msg timestamp="20201117 14:42:10.889" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.898" endtime="20201117 14:42:10.913"></status>
</kw>
<msg timestamp="20201117 14:42:10.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.896" endtime="20201117 14:42:10.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.915" endtime="20201117 14:42:10.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.918" endtime="20201117 14:42:10.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.894" endtime="20201117 14:42:10.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.891" endtime="20201117 14:42:10.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.927" endtime="20201117 14:42:11.214"></status>
</kw>
<msg timestamp="20201117 14:42:11.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.925" endtime="20201117 14:42:11.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.219" endtime="20201117 14:42:11.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.227" endtime="20201117 14:42:11.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.923" endtime="20201117 14:42:11.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.921" endtime="20201117 14:42:11.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.234" level="INFO">${RESULT} = [{'time': 0.020043167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.020079125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:11.231" endtime="20201117 14:42:11.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:11.235" endtime="20201117 14:42:11.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.253" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.252" endtime="20201117 14:42:11.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.256" level="INFO">VALUE: [3.06249999999994e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.0584000000000167e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.059700000000026e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.047299999999961e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.0485999999999708e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0499999999999278e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.254" endtime="20201117 14:42:11.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.249" endtime="20201117 14:42:11.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.259" endtime="20201117 14:42:11.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.263" endtime="20201117 14:42:11.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.261" endtime="20201117 14:42:11.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.257" endtime="20201117 14:42:11.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.890" endtime="20201117 14:42:11.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.494" endtime="20201117 14:42:11.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.493" endtime="20201117 14:42:11.284"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.286" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.295" endtime="20201117 14:42:11.312"></status>
</kw>
<msg timestamp="20201117 14:42:11.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.293" endtime="20201117 14:42:11.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.314" endtime="20201117 14:42:11.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.316" endtime="20201117 14:42:11.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.291" endtime="20201117 14:42:11.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.288" endtime="20201117 14:42:11.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.326" endtime="20201117 14:42:11.612"></status>
</kw>
<msg timestamp="20201117 14:42:11.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.324" endtime="20201117 14:42:11.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.617" endtime="20201117 14:42:11.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.625" endtime="20201117 14:42:11.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.321" endtime="20201117 14:42:11.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.320" endtime="20201117 14:42:11.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.633" level="INFO">${RESULT} = [{'time': 0.022557444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06379999999995e-05, 'source_diff': 3.06379999999995e-05}, {'time': 0.02259375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:11.629" endtime="20201117 14:42:11.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.648" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:11.634" endtime="20201117 14:42:11.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.653" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.652" endtime="20201117 14:42:11.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.655" level="INFO">VALUE: [3.06379999999995e-05, 3.0499999999999278e-05, 3.047199999999667e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0582999999997224e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.061099999999983e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.047299999999961e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0513000000002843e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0472000000000138e-05, 3.056900000000112e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0458000000000568e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.055599999999756e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.654" endtime="20201117 14:42:11.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.649" endtime="20201117 14:42:11.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.659" endtime="20201117 14:42:11.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.662" endtime="20201117 14:42:11.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.661" endtime="20201117 14:42:11.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.657" endtime="20201117 14:42:11.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.287" endtime="20201117 14:42:11.683"></status>
</kw>
<msg timestamp="20201117 14:42:11.684" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.692" endtime="20201117 14:42:11.710"></status>
</kw>
<msg timestamp="20201117 14:42:11.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.690" endtime="20201117 14:42:11.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.711" endtime="20201117 14:42:11.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.714" endtime="20201117 14:42:11.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.688" endtime="20201117 14:42:11.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.686" endtime="20201117 14:42:11.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.723" endtime="20201117 14:42:12.011"></status>
</kw>
<msg timestamp="20201117 14:42:12.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.722" endtime="20201117 14:42:12.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.015" endtime="20201117 14:42:12.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.024" endtime="20201117 14:42:12.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.719" endtime="20201117 14:42:12.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.717" endtime="20201117 14:42:12.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.031" level="INFO">${RESULT} = [{'time': 0.020022472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.020057736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:12.028" endtime="20201117 14:42:12.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:12.032" endtime="20201117 14:42:12.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.050" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.049" endtime="20201117 14:42:12.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.052" level="INFO">VALUE: [3.06249999999994e-05, 3.0499999999999278e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.056900000000112e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0582999999997224e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0584000000000167e-05, 3.0526999999998944e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.047299999999961e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.055599999999756e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.05700000000006e-05, 3.056900000000112e-05, 3.0512999999999374e-05, 3.045900000000004e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0500000000002747e-05, 3.059700000000026e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.051" endtime="20201117 14:42:12.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.046" endtime="20201117 14:42:12.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.056" endtime="20201117 14:42:12.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.059" endtime="20201117 14:42:12.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.058" endtime="20201117 14:42:12.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.054" endtime="20201117 14:42:12.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.684" endtime="20201117 14:42:12.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.285" endtime="20201117 14:42:12.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.284" endtime="20201117 14:42:12.080"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.083" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.091" endtime="20201117 14:42:12.108"></status>
</kw>
<msg timestamp="20201117 14:42:12.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.090" endtime="20201117 14:42:12.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.110" endtime="20201117 14:42:12.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.112" endtime="20201117 14:42:12.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.087" endtime="20201117 14:42:12.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.085" endtime="20201117 14:42:12.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.122" endtime="20201117 14:42:12.409"></status>
</kw>
<msg timestamp="20201117 14:42:12.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.120" endtime="20201117 14:42:12.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.413" endtime="20201117 14:42:12.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.422" endtime="20201117 14:42:12.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.118" endtime="20201117 14:42:12.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.115" endtime="20201117 14:42:12.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.429" level="INFO">${RESULT} = [{'time': 0.022634486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.022670069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.425" endtime="20201117 14:42:12.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:12.430" endtime="20201117 14:42:12.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.447" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.446" endtime="20201117 14:42:12.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.450" level="INFO">VALUE: [3.063899999999897e-05, 3.054100000000198e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0486000000003177e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0472000000000138e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0485999999999708e-05, 3.052700000000241e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.058300000000069e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.0500000000002747e-05, 3.0472000000000138e-05, 3.0514000000002317e-05, 3.0485999999999708e-05, 3.0514000000002317e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.0513000000002843e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.448" endtime="20201117 14:42:12.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.443" endtime="20201117 14:42:12.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.453" endtime="20201117 14:42:12.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.457" endtime="20201117 14:42:12.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.455" endtime="20201117 14:42:12.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.451" endtime="20201117 14:42:12.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.084" endtime="20201117 14:42:12.477"></status>
</kw>
<msg timestamp="20201117 14:42:12.478" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.486" endtime="20201117 14:42:12.504"></status>
</kw>
<msg timestamp="20201117 14:42:12.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.485" endtime="20201117 14:42:12.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.506" endtime="20201117 14:42:12.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.509" endtime="20201117 14:42:12.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.482" endtime="20201117 14:42:12.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.480" endtime="20201117 14:42:12.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.518" endtime="20201117 14:42:12.805"></status>
</kw>
<msg timestamp="20201117 14:42:12.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020008083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.517" endtime="20201117 14:42:12.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020008083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.809" endtime="20201117 14:42:12.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.818" endtime="20201117 14:42:12.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.514" endtime="20201117 14:42:12.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.512" endtime="20201117 14:42:12.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.825" level="INFO">${RESULT} = [{'time': 0.020038694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.020072347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.821" endtime="20201117 14:42:12.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.838" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:12.826" endtime="20201117 14:42:12.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.843" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.842" endtime="20201117 14:42:12.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.846" level="INFO">VALUE: [3.061099999999983e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0499999999999278e-05, 3.0458000000000568e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0513000000002843e-05, 3.0513999999998848e-05, 3.0512999999999374e-05, 3.0458000000000568e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.055500000000155e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.058300000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.844" endtime="20201117 14:42:12.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.839" endtime="20201117 14:42:12.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.849" endtime="20201117 14:42:12.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.853" endtime="20201117 14:42:12.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.851" endtime="20201117 14:42:12.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.847" endtime="20201117 14:42:12.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.478" endtime="20201117 14:42:12.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.082" endtime="20201117 14:42:12.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.081" endtime="20201117 14:42:12.874"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.877" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.886" endtime="20201117 14:42:12.903"></status>
</kw>
<msg timestamp="20201117 14:42:12.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.884" endtime="20201117 14:42:12.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.905" endtime="20201117 14:42:12.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.907" endtime="20201117 14:42:12.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.881" endtime="20201117 14:42:12.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.879" endtime="20201117 14:42:12.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.917" endtime="20201117 14:42:13.204"></status>
</kw>
<msg timestamp="20201117 14:42:13.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023284472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.915" endtime="20201117 14:42:13.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023284472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.208" endtime="20201117 14:42:13.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.217" endtime="20201117 14:42:13.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.913" endtime="20201117 14:42:13.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.911" endtime="20201117 14:42:13.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.224" level="INFO">${RESULT} = [{'time': 0.023315097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.023349542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:13.220" endtime="20201117 14:42:13.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.239" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:13.225" endtime="20201117 14:42:13.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.243" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.242" endtime="20201117 14:42:13.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.246" level="INFO">VALUE: [3.06249999999994e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0584000000000167e-05, 3.0582999999997224e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.045900000000004e-05, 3.0514000000002317e-05, 3.0472000000000138e-05, 3.0526999999998944e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.054100000000198e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.047299999999961e-05, 3.05700000000006e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.052700000000241e-05, 3.0499999999999278e-05, 3.0596999999996793e-05, 3.056999999999713e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.0514000000002317e-05, 3.044500000000047e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.244" endtime="20201117 14:42:13.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.240" endtime="20201117 14:42:13.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.249" endtime="20201117 14:42:13.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.253" endtime="20201117 14:42:13.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.251" endtime="20201117 14:42:13.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.248" endtime="20201117 14:42:13.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.877" endtime="20201117 14:42:13.274"></status>
</kw>
<msg timestamp="20201117 14:42:13.274" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.283" endtime="20201117 14:42:13.301"></status>
</kw>
<msg timestamp="20201117 14:42:13.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.281" endtime="20201117 14:42:13.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.303" endtime="20201117 14:42:13.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.305" endtime="20201117 14:42:13.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.279" endtime="20201117 14:42:13.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.276" endtime="20201117 14:42:13.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.315" endtime="20201117 14:42:13.602"></status>
</kw>
<msg timestamp="20201117 14:42:13.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020566833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.313" endtime="20201117 14:42:13.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020536236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020566833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.606" endtime="20201117 14:42:13.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.615" endtime="20201117 14:42:13.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.310" endtime="20201117 14:42:13.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.308" endtime="20201117 14:42:13.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.621" level="INFO">${RESULT} = [{'time': 0.020566833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.020601806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:13.618" endtime="20201117 14:42:13.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.635" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:13.623" endtime="20201117 14:42:13.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.640" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.639" endtime="20201117 14:42:13.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.642" level="INFO">VALUE: [3.059700000000026e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0444000000000998e-05, 3.048700000000265e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.055600000000103e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0485999999999708e-05, 3.056900000000112e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.0513000000002843e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0500000000002747e-05, 3.0514000000002317e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.641" endtime="20201117 14:42:13.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.636" endtime="20201117 14:42:13.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.646" endtime="20201117 14:42:13.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.650" endtime="20201117 14:42:13.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.648" endtime="20201117 14:42:13.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.644" endtime="20201117 14:42:13.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.275" endtime="20201117 14:42:13.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.875" endtime="20201117 14:42:13.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.874" endtime="20201117 14:42:13.671"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.674" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.682" endtime="20201117 14:42:13.700"></status>
</kw>
<msg timestamp="20201117 14:42:13.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.681" endtime="20201117 14:42:13.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.702" endtime="20201117 14:42:13.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.704" endtime="20201117 14:42:13.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.678" endtime="20201117 14:42:13.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.676" endtime="20201117 14:42:13.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.714" endtime="20201117 14:42:14.001"></status>
</kw>
<msg timestamp="20201117 14:42:14.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.712" endtime="20201117 14:42:14.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.005" endtime="20201117 14:42:14.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.014" endtime="20201117 14:42:14.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.709" endtime="20201117 14:42:14.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.708" endtime="20201117 14:42:14.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.021" level="INFO">${RESULT} = [{'time': 0.022831569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06379999999995e-05, 'source_diff': 3.06379999999995e-05}, {'time': 0.022868083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:14.017" endtime="20201117 14:42:14.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.034" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:14.022" endtime="20201117 14:42:14.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.039" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.038" endtime="20201117 14:42:14.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.042" level="INFO">VALUE: [3.06379999999995e-05, 3.0499999999999278e-05, 3.0514000000002317e-05, 3.0554999999998084e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.056999999999713e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.0500000000002747e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.056900000000112e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.040" endtime="20201117 14:42:14.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.035" endtime="20201117 14:42:14.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.046" endtime="20201117 14:42:14.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.049" endtime="20201117 14:42:14.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.047" endtime="20201117 14:42:14.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.044" endtime="20201117 14:42:14.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.674" endtime="20201117 14:42:14.070"></status>
</kw>
<msg timestamp="20201117 14:42:14.070" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.079" endtime="20201117 14:42:14.097"></status>
</kw>
<msg timestamp="20201117 14:42:14.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.077" endtime="20201117 14:42:14.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.098" endtime="20201117 14:42:14.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.101" endtime="20201117 14:42:14.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.075" endtime="20201117 14:42:14.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.072" endtime="20201117 14:42:14.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.110" endtime="20201117 14:42:14.398"></status>
</kw>
<msg timestamp="20201117 14:42:14.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020079486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.108" endtime="20201117 14:42:14.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020079486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.403" endtime="20201117 14:42:14.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.412" endtime="20201117 14:42:14.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.106" endtime="20201117 14:42:14.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.104" endtime="20201117 14:42:14.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.419" level="INFO">${RESULT} = [{'time': 0.020110083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.020143486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:14.415" endtime="20201117 14:42:14.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.433" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:14.420" endtime="20201117 14:42:14.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.438" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.437" endtime="20201117 14:42:14.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.440" level="INFO">VALUE: [3.059700000000026e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.055599999999756e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.048699999999918e-05, 3.055500000000155e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.061099999999983e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.0514000000002317e-05, 3.048699999999918e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0485999999999708e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.439" endtime="20201117 14:42:14.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.434" endtime="20201117 14:42:14.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.444" endtime="20201117 14:42:14.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.448" endtime="20201117 14:42:14.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.446" endtime="20201117 14:42:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.442" endtime="20201117 14:42:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.071" endtime="20201117 14:42:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.672" endtime="20201117 14:42:14.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.672" endtime="20201117 14:42:14.469"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.471" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.481" endtime="20201117 14:42:14.499"></status>
</kw>
<msg timestamp="20201117 14:42:14.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.480" endtime="20201117 14:42:14.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.501" endtime="20201117 14:42:14.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.503" endtime="20201117 14:42:14.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.476" endtime="20201117 14:42:14.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.474" endtime="20201117 14:42:14.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.513" endtime="20201117 14:42:14.800"></status>
</kw>
<msg timestamp="20201117 14:42:14.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024176333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024206958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.511" endtime="20201117 14:42:14.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024176333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024206958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.805" endtime="20201117 14:42:14.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.813" endtime="20201117 14:42:14.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.509" endtime="20201117 14:42:14.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.507" endtime="20201117 14:42:14.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.820" level="INFO">${RESULT} = [{'time': 0.024206958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.0242425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201117 14:42:14.817" endtime="20201117 14:42:14.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.835" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:14.821" endtime="20201117 14:42:14.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.840" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.839" endtime="20201117 14:42:14.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.843" level="INFO">VALUE: [3.06249999999994e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.056900000000112e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0458000000000568e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.05700000000006e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0568999999997654e-05, 3.0568999999997654e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.0472000000000138e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.0568999999997654e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.05700000000006e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0472000000000138e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.841" endtime="20201117 14:42:14.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.836" endtime="20201117 14:42:14.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.846" endtime="20201117 14:42:14.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.850" endtime="20201117 14:42:14.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.848" endtime="20201117 14:42:14.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.845" endtime="20201117 14:42:14.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.472" endtime="20201117 14:42:14.871"></status>
</kw>
<msg timestamp="20201117 14:42:14.871" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.880" endtime="20201117 14:42:14.897"></status>
</kw>
<msg timestamp="20201117 14:42:14.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.878" endtime="20201117 14:42:14.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.899" endtime="20201117 14:42:14.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.901" endtime="20201117 14:42:14.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.875" endtime="20201117 14:42:14.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.873" endtime="20201117 14:42:14.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.911" endtime="20201117 14:42:15.198"></status>
</kw>
<msg timestamp="20201117 14:42:15.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.909" endtime="20201117 14:42:15.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.203" endtime="20201117 14:42:15.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.211" endtime="20201117 14:42:15.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.907" endtime="20201117 14:42:15.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.905" endtime="20201117 14:42:15.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.218" level="INFO">${RESULT} = [{'time': 0.020086514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.020120278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:15.215" endtime="20201117 14:42:15.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.232" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:15.219" endtime="20201117 14:42:15.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.237" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.236" endtime="20201117 14:42:15.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.240" level="INFO">VALUE: [3.06249999999994e-05, 3.052799999999842e-05, 3.0582999999997224e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.052799999999842e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.238" endtime="20201117 14:42:15.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.233" endtime="20201117 14:42:15.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.243" endtime="20201117 14:42:15.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.246" endtime="20201117 14:42:15.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.245" endtime="20201117 14:42:15.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.241" endtime="20201117 14:42:15.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.872" endtime="20201117 14:42:15.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.470" endtime="20201117 14:42:15.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.469" endtime="20201117 14:42:15.268"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.270" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.279" endtime="20201117 14:42:15.296"></status>
</kw>
<msg timestamp="20201117 14:42:15.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.277" endtime="20201117 14:42:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.298" endtime="20201117 14:42:15.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.300" endtime="20201117 14:42:15.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.275" endtime="20201117 14:42:15.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.272" endtime="20201117 14:42:15.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.310" endtime="20201117 14:42:15.597"></status>
</kw>
<msg timestamp="20201117 14:42:15.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.308" endtime="20201117 14:42:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.601" endtime="20201117 14:42:15.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.610" endtime="20201117 14:42:15.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.305" endtime="20201117 14:42:15.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.304" endtime="20201117 14:42:15.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.617" level="INFO">${RESULT} = [{'time': 0.022712556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0611999999999306e-05, 'source_diff': 3.0611999999999306e-05}, {'time': 0.022745375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:15.614" endtime="20201117 14:42:15.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:15.618" endtime="20201117 14:42:15.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.635" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.634" endtime="20201117 14:42:15.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.638" level="INFO">VALUE: [3.0611999999999306e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0568999999997654e-05, 3.055600000000103e-05, 3.0485999999999708e-05, 3.0472000000000138e-05, 3.0513999999998848e-05, 3.05700000000006e-05, 3.097199999999717e-05, 3.09440000000015e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.0485999999999708e-05, 3.09310000000014e-05, 3.054200000000146e-05, 3.15700000000016e-05, 3.058300000000069e-05, 3.0513999999998848e-05, 3.154199999999899e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.055600000000103e-05, 3.09579999999976e-05, 3.094500000000097e-05, 3.092999999999846e-05, 3.0526999999998944e-05, 3.094500000000097e-05, 3.0554999999998084e-05, 3.0500000000002747e-05, 3.0514000000002317e-05, 3.094500000000097e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.1554999999999084e-05, 3.05700000000006e-05, 3.0485999999999708e-05, 3.052800000000189e-05, 3.1582999999998224e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.05700000000006e-05, 3.0554999999998084e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.637" endtime="20201117 14:42:15.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.632" endtime="20201117 14:42:15.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.641" endtime="20201117 14:42:15.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.645" endtime="20201117 14:42:15.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.643" endtime="20201117 14:42:15.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.640" endtime="20201117 14:42:15.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.271" endtime="20201117 14:42:15.666"></status>
</kw>
<msg timestamp="20201117 14:42:15.666" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.674" endtime="20201117 14:42:15.693"></status>
</kw>
<msg timestamp="20201117 14:42:15.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.673" endtime="20201117 14:42:15.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.694" endtime="20201117 14:42:15.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.697" endtime="20201117 14:42:15.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.670" endtime="20201117 14:42:15.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.668" endtime="20201117 14:42:15.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.706" endtime="20201117 14:42:15.994"></status>
</kw>
<msg timestamp="20201117 14:42:15.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:42:15.705" endtime="20201117 14:42:15.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:42:15.998" endtime="20201117 14:42:16.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.007" endtime="20201117 14:42:16.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.702" endtime="20201117 14:42:16.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.700" endtime="20201117 14:42:16.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.014" level="INFO">${RESULT} = [{'time': 0.02008, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.020114556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201117 14:42:16.011" endtime="20201117 14:42:16.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.028" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:16.015" endtime="20201117 14:42:16.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.033" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.032" endtime="20201117 14:42:16.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.036" level="INFO">VALUE: [3.061099999999983e-05, 3.055599999999756e-05, 3.0444000000000998e-05, 3.093099999999793e-05, 3.097200000000064e-05, 3.0526999999998944e-05, 3.09310000000014e-05, 3.052799999999842e-05, 3.0568999999997654e-05, 3.0512999999999374e-05, 3.056900000000112e-05, 3.058300000000069e-05, 3.091699999999836e-05, 3.0540999999998514e-05, 3.055599999999756e-05, 3.0514000000002317e-05, 3.056999999999713e-05, 3.095800000000107e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.056900000000112e-05, 3.055500000000155e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.055500000000155e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.0513999999998848e-05, 3.055600000000103e-05, 3.092999999999846e-05, 3.09440000000015e-05, 3.06249999999994e-05, 3.055600000000103e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.055599999999756e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.056900000000112e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.058300000000069e-05, 3.09310000000014e-05, 3.0514000000002317e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.034" endtime="20201117 14:42:16.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.029" endtime="20201117 14:42:16.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.039" endtime="20201117 14:42:16.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.043" endtime="20201117 14:42:16.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.041" endtime="20201117 14:42:16.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.037" endtime="20201117 14:42:16.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.667" endtime="20201117 14:42:16.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.269" endtime="20201117 14:42:16.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.268" endtime="20201117 14:42:16.064"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.066" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.075" endtime="20201117 14:42:16.093"></status>
</kw>
<msg timestamp="20201117 14:42:16.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.073" endtime="20201117 14:42:16.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.094" endtime="20201117 14:42:16.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.097" endtime="20201117 14:42:16.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.071" endtime="20201117 14:42:16.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.069" endtime="20201117 14:42:16.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.107" endtime="20201117 14:42:16.395"></status>
</kw>
<msg timestamp="20201117 14:42:16.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.105" endtime="20201117 14:42:16.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.399" endtime="20201117 14:42:16.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.408" endtime="20201117 14:42:16.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.103" endtime="20201117 14:42:16.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.100" endtime="20201117 14:42:16.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.415" level="INFO">${RESULT} = [{'time': 0.022875556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.022915208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:16.411" endtime="20201117 14:42:16.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.430" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:16.416" endtime="20201117 14:42:16.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.435" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.434" endtime="20201117 14:42:16.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.437" level="INFO">VALUE: [3.06249999999994e-05, 3.369400000000078e-05, 3.369400000000078e-05, 3.055600000000103e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.3638999999998503e-05, 3.0540999999998514e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.052800000000189e-05, 3.056900000000112e-05, 3.369399999999731e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.0513999999998848e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.368100000000068e-05, 3.365299999999807e-05, 3.0499999999999278e-05, 3.3569000000000654e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.0554999999998084e-05, 3.36250000000024e-05, 3.357000000000013e-05, 3.3624999999998934e-05, 3.0514000000002317e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.0512999999999374e-05, 3.368000000000121e-05, 3.3638999999998503e-05, 3.361199999999884e-05, 3.365300000000154e-05, 3.058300000000069e-05, 3.054200000000146e-05, 3.3638999999998503e-05, 3.368100000000068e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.436" endtime="20201117 14:42:16.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.431" endtime="20201117 14:42:16.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.441" endtime="20201117 14:42:16.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.444" endtime="20201117 14:42:16.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.443" endtime="20201117 14:42:16.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.439" endtime="20201117 14:42:16.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.067" endtime="20201117 14:42:16.465"></status>
</kw>
<msg timestamp="20201117 14:42:16.465" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.474" endtime="20201117 14:42:16.492"></status>
</kw>
<msg timestamp="20201117 14:42:16.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.472" endtime="20201117 14:42:16.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.493" endtime="20201117 14:42:16.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.496" endtime="20201117 14:42:16.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.469" endtime="20201117 14:42:16.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.467" endtime="20201117 14:42:16.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.506" endtime="20201117 14:42:16.793"></status>
</kw>
<msg timestamp="20201117 14:42:16.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.504" endtime="20201117 14:42:16.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.798" endtime="20201117 14:42:16.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.806" endtime="20201117 14:42:16.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.502" endtime="20201117 14:42:16.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.500" endtime="20201117 14:42:16.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.813" level="INFO">${RESULT} = [{'time': 0.020177722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-05, 'source_diff': 3.374999999999906e-05}, {'time': 0.020213806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:16.810" endtime="20201117 14:42:16.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.827" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:16.814" endtime="20201117 14:42:16.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.831" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.830" endtime="20201117 14:42:16.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.834" level="INFO">VALUE: [3.374999999999906e-05, 3.0514000000002317e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.055600000000103e-05, 3.365200000000207e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.363900000000197e-05, 3.05700000000006e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.370800000000035e-05, 3.3624999999998934e-05, 3.0513999999998848e-05, 3.3596999999999794e-05, 3.055500000000155e-05, 3.0584000000000167e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.05700000000006e-05, 3.36250000000024e-05, 3.365299999999807e-05, 3.05700000000006e-05, 3.363799999999903e-05, 3.0584000000000167e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.36519999999986e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.3638999999998503e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.833" endtime="20201117 14:42:16.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.828" endtime="20201117 14:42:16.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.837" endtime="20201117 14:42:16.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.841" endtime="20201117 14:42:16.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.839" endtime="20201117 14:42:16.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.836" endtime="20201117 14:42:16.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.466" endtime="20201117 14:42:16.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.065" endtime="20201117 14:42:16.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.064" endtime="20201117 14:42:16.862"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.865" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.874" endtime="20201117 14:42:16.892"></status>
</kw>
<msg timestamp="20201117 14:42:16.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.872" endtime="20201117 14:42:16.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.894" endtime="20201117 14:42:16.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.896" endtime="20201117 14:42:16.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.869" endtime="20201117 14:42:16.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.867" endtime="20201117 14:42:16.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.906" endtime="20201117 14:42:17.193"></status>
</kw>
<msg timestamp="20201117 14:42:17.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023166167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.904" endtime="20201117 14:42:17.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023132347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023166167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.197" endtime="20201117 14:42:17.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.206" endtime="20201117 14:42:17.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.901" endtime="20201117 14:42:17.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.899" endtime="20201117 14:42:17.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.213" level="INFO">${RESULT} = [{'time': 0.023166167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.382000000000038e-05, 'source_diff': 3.382000000000038e-05}, {'time': 0.023202972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:17.209" endtime="20201117 14:42:17.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:17.214" endtime="20201117 14:42:17.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.231" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.230" endtime="20201117 14:42:17.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.233" level="INFO">VALUE: [3.382000000000038e-05, 3.3638999999998503e-05, 3.365200000000207e-05, 3.369400000000078e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.370800000000035e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.357000000000013e-05, 3.3638999999998503e-05, 3.365200000000207e-05, 3.365299999999807e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3569000000000654e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.36380000000025e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.36380000000025e-05, 3.370800000000035e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.363799999999903e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.365200000000207e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.232" endtime="20201117 14:42:17.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.227" endtime="20201117 14:42:17.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.237" endtime="20201117 14:42:17.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.240" endtime="20201117 14:42:17.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.239" endtime="20201117 14:42:17.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.235" endtime="20201117 14:42:17.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.865" endtime="20201117 14:42:17.262"></status>
</kw>
<msg timestamp="20201117 14:42:17.262" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.270" endtime="20201117 14:42:17.289"></status>
</kw>
<msg timestamp="20201117 14:42:17.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.269" endtime="20201117 14:42:17.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.290" endtime="20201117 14:42:17.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.293" endtime="20201117 14:42:17.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.266" endtime="20201117 14:42:17.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.264" endtime="20201117 14:42:17.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.302" endtime="20201117 14:42:17.590"></status>
</kw>
<msg timestamp="20201117 14:42:17.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.300" endtime="20201117 14:42:17.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.594" endtime="20201117 14:42:17.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.603" endtime="20201117 14:42:17.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.298" endtime="20201117 14:42:17.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.296" endtime="20201117 14:42:17.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.609" level="INFO">${RESULT} = [{'time': 0.020554361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3805000000001334e-05, 'source_diff': 3.3805000000001334e-05}, {'time': 0.020593375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:17.606" endtime="20201117 14:42:17.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.623" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:17.610" endtime="20201117 14:42:17.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.628" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.627" endtime="20201117 14:42:17.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.630" level="INFO">VALUE: [3.3805000000001334e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3.3624999999998934e-05, 3.361199999999884e-05, 3.36380000000025e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.35839999999997e-05, 3.366700000000111e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.365200000000207e-05, 3.36519999999986e-05, 3.366700000000111e-05, 3.3638999999998503e-05, 3.366700000000111e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.3569000000000654e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.35839999999997e-05, 3.35839999999997e-05, 3.361100000000283e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.35839999999997e-05, 3.3638999999998503e-05, 3.36380000000025e-05, 3.365299999999807e-05, 3.36250000000024e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.366699999999764e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.36380000000025e-05, 3.363900000000197e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.629" endtime="20201117 14:42:17.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.624" endtime="20201117 14:42:17.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.639" endtime="20201117 14:42:17.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.642" endtime="20201117 14:42:17.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.641" endtime="20201117 14:42:17.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.637" endtime="20201117 14:42:17.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.263" endtime="20201117 14:42:17.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.863" endtime="20201117 14:42:17.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.863" endtime="20201117 14:42:17.664"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.666" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.675" endtime="20201117 14:42:17.693"></status>
</kw>
<msg timestamp="20201117 14:42:17.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.673" endtime="20201117 14:42:17.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.694" endtime="20201117 14:42:17.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.697" endtime="20201117 14:42:17.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.670" endtime="20201117 14:42:17.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.668" endtime="20201117 14:42:17.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.706" endtime="20201117 14:42:17.994"></status>
</kw>
<msg timestamp="20201117 14:42:17.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.705" endtime="20201117 14:42:17.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.998" endtime="20201117 14:42:18.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.006" endtime="20201117 14:42:18.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.702" endtime="20201117 14:42:18.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.700" endtime="20201117 14:42:18.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.013" level="INFO">${RESULT} = [{'time': 0.022664681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.37779999999982e-05, 'source_diff': 3.37779999999982e-05}, {'time': 0.022702708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:18.010" endtime="20201117 14:42:18.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:18.014" endtime="20201117 14:42:18.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.033" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.032" endtime="20201117 14:42:18.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.036" level="INFO">VALUE: [3.37779999999982e-05, 3.36519999999986e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3568999999997184e-05, 3.36250000000024e-05, 3.3610999999999364e-05, 3.369400000000078e-05, 3.365299999999807e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.363799999999903e-05, 3.365300000000154e-05, 3.3610999999999364e-05, 3.365299999999807e-05, 3.36519999999986e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.372199999999992e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.369400000000078e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.36250000000024e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.359700000000326e-05, 3.365200000000207e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.372199999999992e-05, 3.3624999999998934e-05, 3.365200000000207e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.365299999999807e-05, 3.369500000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.034" endtime="20201117 14:42:18.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.030" endtime="20201117 14:42:18.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.040" endtime="20201117 14:42:18.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.043" endtime="20201117 14:42:18.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.042" endtime="20201117 14:42:18.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.038" endtime="20201117 14:42:18.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.667" endtime="20201117 14:42:18.064"></status>
</kw>
<msg timestamp="20201117 14:42:18.064" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.073" endtime="20201117 14:42:18.092"></status>
</kw>
<msg timestamp="20201117 14:42:18.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.071" endtime="20201117 14:42:18.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.093" endtime="20201117 14:42:18.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.096" endtime="20201117 14:42:18.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.069" endtime="20201117 14:42:18.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.067" endtime="20201117 14:42:18.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.105" endtime="20201117 14:42:18.392"></status>
</kw>
<msg timestamp="20201117 14:42:18.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.103" endtime="20201117 14:42:18.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.396" endtime="20201117 14:42:18.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.405" endtime="20201117 14:42:18.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.101" endtime="20201117 14:42:18.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.099" endtime="20201117 14:42:18.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.412" level="INFO">${RESULT} = [{'time': 0.020274125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3819000000000904e-05, 'source_diff': 3.3819000000000904e-05}, {'time': 0.020311056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.408" endtime="20201117 14:42:18.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.425" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:18.413" endtime="20201117 14:42:18.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.430" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.429" endtime="20201117 14:42:18.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.433" level="INFO">VALUE: [3.3819000000000904e-05, 3.363900000000197e-05, 3.361100000000283e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.366699999999764e-05, 3.3624999999998934e-05, 3.373599999999949e-05, 3.369400000000078e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.366700000000111e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.370899999999982e-05, 3.36380000000025e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.365300000000154e-05, 3.36380000000025e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.361100000000283e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.366700000000111e-05, 3.35839999999997e-05, 3.3638999999998503e-05, 3.355600000000056e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.365300000000154e-05, 3.369399999999731e-05, 3.365300000000154e-05, 3.365300000000154e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.431" endtime="20201117 14:42:18.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.426" endtime="20201117 14:42:18.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.436" endtime="20201117 14:42:18.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.440" endtime="20201117 14:42:18.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.438" endtime="20201117 14:42:18.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.435" endtime="20201117 14:42:18.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.065" endtime="20201117 14:42:18.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.665" endtime="20201117 14:42:18.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.664" endtime="20201117 14:42:18.461"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.464" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.472" endtime="20201117 14:42:18.491"></status>
</kw>
<msg timestamp="20201117 14:42:18.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.470" endtime="20201117 14:42:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.492" endtime="20201117 14:42:18.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.495" endtime="20201117 14:42:18.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.468" endtime="20201117 14:42:18.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.466" endtime="20201117 14:42:18.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.504" endtime="20201117 14:42:18.791"></status>
</kw>
<msg timestamp="20201117 14:42:18.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.503" endtime="20201117 14:42:18.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.795" endtime="20201117 14:42:18.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.804" endtime="20201117 14:42:18.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.500" endtime="20201117 14:42:18.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.498" endtime="20201117 14:42:18.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.811" level="INFO">${RESULT} = [{'time': 0.022718069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3791000000001764e-05, 'source_diff': 3.3791000000001764e-05}, {'time': 0.022755403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.807" endtime="20201117 14:42:18.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.825" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:18.812" endtime="20201117 14:42:18.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.829" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.828" endtime="20201117 14:42:18.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.832" level="INFO">VALUE: [3.3791000000001764e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.368100000000068e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.369499999999678e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.366699999999764e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.367999999999774e-05, 3.365300000000154e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.36519999999986e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.357000000000013e-05, 3.366599999999817e-05, 3.3624999999998934e-05, 3.36250000000024e-05, 3.366700000000111e-05, 3.36380000000025e-05, 3.365299999999807e-05, 3.363799999999903e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3638999999998503e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.830" endtime="20201117 14:42:18.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.826" endtime="20201117 14:42:18.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.836" endtime="20201117 14:42:18.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.839" endtime="20201117 14:42:18.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.838" endtime="20201117 14:42:18.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.834" endtime="20201117 14:42:18.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.464" endtime="20201117 14:42:18.860"></status>
</kw>
<msg timestamp="20201117 14:42:18.860" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.869" endtime="20201117 14:42:18.887"></status>
</kw>
<msg timestamp="20201117 14:42:18.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.867" endtime="20201117 14:42:18.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.889" endtime="20201117 14:42:18.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.891" endtime="20201117 14:42:18.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.865" endtime="20201117 14:42:18.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.862" endtime="20201117 14:42:18.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.900" endtime="20201117 14:42:19.188"></status>
</kw>
<msg timestamp="20201117 14:42:19.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020076903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.899" endtime="20201117 14:42:19.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020076903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.192" endtime="20201117 14:42:19.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.201" endtime="20201117 14:42:19.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.896" endtime="20201117 14:42:19.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.895" endtime="20201117 14:42:19.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.208" level="INFO">${RESULT} = [{'time': 0.020076903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3847000000000044e-05, 'source_diff': 3.3847000000000044e-05}, {'time': 0.020113819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:19.204" endtime="20201117 14:42:19.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.221" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:19.209" endtime="20201117 14:42:19.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.226" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.225" endtime="20201117 14:42:19.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.229" level="INFO">VALUE: [3.3847000000000044e-05, 3.365200000000207e-05, 3.365300000000154e-05, 3.368000000000121e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.3624999999998934e-05, 3.369499999999678e-05, 3.36250000000024e-05, 3.370800000000035e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.369399999999731e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.3569000000000654e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.369500000000025e-05, 3.366600000000164e-05, 3.36380000000025e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3596999999999794e-05, 3.363900000000197e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.363900000000197e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.227" endtime="20201117 14:42:19.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.223" endtime="20201117 14:42:19.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.232" endtime="20201117 14:42:19.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.236" endtime="20201117 14:42:19.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.234" endtime="20201117 14:42:19.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.230" endtime="20201117 14:42:19.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.861" endtime="20201117 14:42:19.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.462" endtime="20201117 14:42:19.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.462" endtime="20201117 14:42:19.257"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.259" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.268" endtime="20201117 14:42:19.286"></status>
</kw>
<msg timestamp="20201117 14:42:19.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.266" endtime="20201117 14:42:19.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.288" endtime="20201117 14:42:19.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.290" endtime="20201117 14:42:19.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.264" endtime="20201117 14:42:19.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.261" endtime="20201117 14:42:19.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.300" endtime="20201117 14:42:19.586"></status>
</kw>
<msg timestamp="20201117 14:42:19.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:19.298" endtime="20201117 14:42:19.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:19.590" endtime="20201117 14:42:19.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.599" endtime="20201117 14:42:19.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.295" endtime="20201117 14:42:19.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.294" endtime="20201117 14:42:19.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.606" level="INFO">${RESULT} = [{'time': 0.022748778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.452800000000242e-05, 'source_diff': 3.452800000000242e-05}, {'time': 0.02278575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:19.603" endtime="20201117 14:42:19.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:19.607" endtime="20201117 14:42:19.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.626" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.625" endtime="20201117 14:42:19.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.629" level="INFO">VALUE: [3.452800000000242e-05, 3.368100000000068e-05, 3.454199999999852e-05, 3.517999999999924e-05, 3.4083000000000724e-05, 3.47779999999992e-05, 3.4597000000000794e-05, 3.3638999999998503e-05, 3.430600000000131e-05, 3.4888999999999754e-05, 3.517999999999924e-05, 3.4124999999999434e-05, 3.3638999999998503e-05, 3.475000000000006e-05, 3.363900000000197e-05, 3.4110999999999864e-05, 3.388799999999928e-05, 3.4262999999999655e-05, 3.3638999999998503e-05, 3.4611000000000364e-05, 3.490300000000279e-05, 3.419500000000075e-05, 3.4055000000001584e-05, 3.36250000000024e-05, 3.479199999999877e-05, 3.427800000000217e-05, 3.368000000000121e-05, 3.5111000000000864e-05, 3.369400000000078e-05, 3.40840000000002e-05, 3.372199999999992e-05, 3.443100000000143e-05, 3.3624999999998934e-05, 3.4611000000000364e-05, 3.401400000000235e-05, 3.365300000000154e-05, 3.4319000000001404e-05, 3.56520000000006e-05, 3.365300000000154e-05, 3.4611000000000364e-05, 3.424999999999956e-05, 3.4305000000001834e-05, 3.448599999999677e-05, 3.4445000000001e-05, 3.4875000000000184e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.416700000000161e-05, 3.4763000000000155e-05, 3.365300000000154e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.627" endtime="20201117 14:42:19.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.622" endtime="20201117 14:42:19.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.632" endtime="20201117 14:42:19.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.635" endtime="20201117 14:42:19.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.634" endtime="20201117 14:42:19.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.630" endtime="20201117 14:42:19.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.260" endtime="20201117 14:42:19.656"></status>
</kw>
<msg timestamp="20201117 14:42:19.657" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.665" endtime="20201117 14:42:19.683"></status>
</kw>
<msg timestamp="20201117 14:42:19.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.663" endtime="20201117 14:42:19.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.684" endtime="20201117 14:42:19.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.687" endtime="20201117 14:42:19.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.661" endtime="20201117 14:42:19.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.659" endtime="20201117 14:42:19.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.696" endtime="20201117 14:42:19.983"></status>
</kw>
<msg timestamp="20201117 14:42:19.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020053792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.695" endtime="20201117 14:42:19.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020053792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.987" endtime="20201117 14:42:19.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.996" endtime="20201117 14:42:19.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.692" endtime="20201117 14:42:19.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.690" endtime="20201117 14:42:19.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.003" level="INFO">${RESULT} = [{'time': 0.020053792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.443100000000143e-05, 'source_diff': 3.443100000000143e-05}, {'time': 0.020092583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.000" endtime="20201117 14:42:20.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:20.004" endtime="20201117 14:42:20.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.022" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.021" endtime="20201117 14:42:20.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.024" level="INFO">VALUE: [3.443100000000143e-05, 3.369400000000078e-05, 3.395900000000007e-05, 3.3638999999998503e-05, 3.4445000000001e-05, 3.4361000000000114e-05, 3.45840000000007e-05, 3.3638999999998503e-05, 3.426399999999913e-05, 3.516700000000261e-05, 3.370800000000035e-05, 3.420900000000032e-05, 3.468000000000221e-05, 3.4638999999999504e-05, 3.4276999999999225e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.423599999999999e-05, 3.518099999999871e-05, 3.372199999999992e-05, 3.369500000000025e-05, 3.51520000000001e-05, 3.4361000000000114e-05, 3.420800000000085e-05, 3.45840000000007e-05, 3.4110999999999864e-05, 3.473600000000049e-05, 3.3624999999998934e-05, 3.366700000000111e-05, 3.3624999999998934e-05, 3.5097000000001294e-05, 3.4624999999999934e-05, 3.363799999999903e-05, 3.455600000000156e-05, 3.4568999999998185e-05, 3.424999999999956e-05, 3.372199999999992e-05, 3.401400000000235e-05, 3.418100000000118e-05, 3.365299999999807e-05, 3.367999999999774e-05, 3.3638999999998503e-05, 3.518100000000218e-05, 3.398599999999974e-05, 3.365300000000154e-05, 3.4846999999997574e-05, 3.368000000000121e-05, 3.424999999999956e-05, 3.426399999999913e-05, 3.4041000000002014e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.023" endtime="20201117 14:42:20.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.018" endtime="20201117 14:42:20.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.027" endtime="20201117 14:42:20.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.031" endtime="20201117 14:42:20.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.029" endtime="20201117 14:42:20.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.026" endtime="20201117 14:42:20.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.657" endtime="20201117 14:42:20.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.258" endtime="20201117 14:42:20.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.257" endtime="20201117 14:42:20.052"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.055" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.063" endtime="20201117 14:42:20.082"></status>
</kw>
<msg timestamp="20201117 14:42:20.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.062" endtime="20201117 14:42:20.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.083" endtime="20201117 14:42:20.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.086" endtime="20201117 14:42:20.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.059" endtime="20201117 14:42:20.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.057" endtime="20201117 14:42:20.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.097" endtime="20201117 14:42:20.383"></status>
</kw>
<msg timestamp="20201117 14:42:20.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.095" endtime="20201117 14:42:20.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.387" endtime="20201117 14:42:20.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.396" endtime="20201117 14:42:20.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.092" endtime="20201117 14:42:20.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.090" endtime="20201117 14:42:20.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.403" level="INFO">${RESULT} = [{'time': 0.022878319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49580000000016e-05, 'source_diff': 3.49580000000016e-05}, {'time': 0.022919333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:20.400" endtime="20201117 14:42:20.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:20.404" endtime="20201117 14:42:20.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.421" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.420" endtime="20201117 14:42:20.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.424" level="INFO">VALUE: [3.49580000000016e-05, 3.5361000000001114e-05, 3.4902999999999323e-05, 3.518099999999871e-05, 3.6055000000000115e-05, 3.4790999999999295e-05, 3.4902999999999323e-05, 3.5611000000001364e-05, 3.6124999999997964e-05, 3.5152999999999573e-05, 3.497300000000064e-05, 3.591599999999695e-05, 3.493099999999846e-05, 3.572300000000139e-05, 3.519400000000228e-05, 3.598599999999827e-05, 3.4888999999999754e-05, 3.5916999999999893e-05, 3.6124999999997964e-05, 3.5347000000001544e-05, 3.5166999999999143e-05, 3.505599999999859e-05, 3.5139000000000004e-05, 3.6125000000001434e-05, 3.5125000000000434e-05, 3.520899999999785e-05, 3.49450000000015e-05, 3.523600000000099e-05, 3.5096999999997824e-05, 3.552799999999995e-05, 3.480599999999834e-05, 3.451399999999938e-05, 3.556999999999866e-05, 3.493000000000246e-05, 3.572199999999845e-05, 3.491699999999889e-05, 3.6055000000000115e-05, 3.4776999999999725e-05, 3.526400000000013e-05, 3.554199999999952e-05, 3.4861000000000614e-05, 3.644499999999953e-05, 3.6125000000001434e-05, 3.5139000000000004e-05, 3.526400000000013e-05, 3.604200000000002e-05, 3.6153000000000574e-05, 3.5125000000000434e-05, 3.494499999999803e-05, 3.6041000000000545e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.423" endtime="20201117 14:42:20.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.418" endtime="20201117 14:42:20.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.427" endtime="20201117 14:42:20.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.431" endtime="20201117 14:42:20.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.429" endtime="20201117 14:42:20.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.426" endtime="20201117 14:42:20.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.055" endtime="20201117 14:42:20.452"></status>
</kw>
<msg timestamp="20201117 14:42:20.452" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.461" endtime="20201117 14:42:20.478"></status>
</kw>
<msg timestamp="20201117 14:42:20.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.459" endtime="20201117 14:42:20.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.480" endtime="20201117 14:42:20.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.483" endtime="20201117 14:42:20.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.456" endtime="20201117 14:42:20.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.454" endtime="20201117 14:42:20.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.492" endtime="20201117 14:42:20.778"></status>
</kw>
<msg timestamp="20201117 14:42:20.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.490" endtime="20201117 14:42:20.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.783" endtime="20201117 14:42:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.791" endtime="20201117 14:42:20.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.488" endtime="20201117 14:42:20.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.486" endtime="20201117 14:42:20.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.798" level="INFO">${RESULT} = [{'time': 0.020087889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.630599999999984e-05, 'source_diff': 3.630599999999984e-05}, {'time': 0.020127306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.795" endtime="20201117 14:42:20.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.812" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:20.799" endtime="20201117 14:42:20.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.816" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.815" endtime="20201117 14:42:20.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.819" level="INFO">VALUE: [3.630599999999984e-05, 3.559800000000127e-05, 3.488799999999681e-05, 3.5513000000000905e-05, 3.523600000000099e-05, 3.520800000000185e-05, 3.605599999999959e-05, 3.498600000000074e-05, 3.572200000000192e-05, 3.4875000000000184e-05, 3.548600000000124e-05, 3.5139000000000004e-05, 3.6124999999997964e-05, 3.520800000000185e-05, 3.4875000000000184e-05, 3.5790999999996825e-05, 3.6124999999997964e-05, 3.554199999999952e-05, 3.6111000000001864e-05, 3.5375000000000684e-05, 3.522200000000142e-05, 3.604200000000002e-05, 3.520900000000132e-05, 3.604200000000002e-05, 3.6139000000001004e-05, 3.5152999999999573e-05, 3.500000000000031e-05, 3.568100000000268e-05, 3.490199999999985e-05, 3.572200000000192e-05, 3.519499999999828e-05, 3.493099999999846e-05, 3.5110999999997394e-05, 3.613799999999806e-05, 3.5124999999996964e-05, 3.6125000000001434e-05, 3.516599999999967e-05, 3.4583000000001224e-05, 3.500000000000031e-05, 3.494399999999856e-05, 3.491699999999889e-05, 3.573600000000149e-05, 3.491699999999889e-05, 3.569500000000225e-05, 3.520800000000185e-05, 3.5013000000000405e-05, 3.5625000000000934e-05, 3.4902999999999323e-05, 3.566600000000017e-05, 3.5846999999998574e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.818" endtime="20201117 14:42:20.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.813" endtime="20201117 14:42:20.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.822" endtime="20201117 14:42:20.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.826" endtime="20201117 14:42:20.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.824" endtime="20201117 14:42:20.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.820" endtime="20201117 14:42:20.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.453" endtime="20201117 14:42:20.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.053" endtime="20201117 14:42:20.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.053" endtime="20201117 14:42:20.847"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.849" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.859" endtime="20201117 14:42:20.874"></status>
</kw>
<msg timestamp="20201117 14:42:20.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.857" endtime="20201117 14:42:20.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.876" endtime="20201117 14:42:20.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.879" endtime="20201117 14:42:20.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.854" endtime="20201117 14:42:20.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.852" endtime="20201117 14:42:20.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.888" endtime="20201117 14:42:21.175"></status>
</kw>
<msg timestamp="20201117 14:42:21.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.886" endtime="20201117 14:42:21.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.180" endtime="20201117 14:42:21.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.188" endtime="20201117 14:42:21.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.884" endtime="20201117 14:42:21.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.882" endtime="20201117 14:42:21.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.195" level="INFO">${RESULT} = [{'time': 0.023379208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.715199999999863e-05, 'source_diff': 3.715199999999863e-05}, {'time': 0.023420208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.192" endtime="20201117 14:42:21.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:21.196" endtime="20201117 14:42:21.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.215" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.214" endtime="20201117 14:42:21.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.218" level="INFO">VALUE: [3.715199999999863e-05, 3.700000000000231e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.590200000000085e-05, 3.651400000000138e-05, 3.698599999999927e-05, 3.616600000000067e-05, 3.6596999999999325e-05, 3.5847000000002044e-05, 3.6318999999999935e-05, 3.708399999999973e-05, 3.617999999999677e-05, 3.581999999999891e-05, 3.6375000000001684e-05, 3.644499999999953e-05, 3.698600000000274e-05, 3.59589999999986e-05, 3.676399999999816e-05, 3.5833000000002474e-05, 3.65979999999988e-05, 3.698599999999927e-05, 3.6417000000000394e-05, 3.644499999999953e-05, 3.6403000000000824e-05, 3.6417000000000394e-05, 3.700000000000231e-05, 3.702800000000145e-05, 3.698599999999927e-05, 3.708399999999973e-05, 3.699999999999884e-05, 3.699999999999884e-05, 3.69719999999997e-05, 3.698699999999874e-05, 3.698599999999927e-05, 3.695800000000013e-05, 3.591599999999695e-05, 3.652799999999748e-05, 3.5875000000001184e-05, 3.6653000000001074e-05, 3.700000000000231e-05, 3.69719999999997e-05, 3.698600000000274e-05, 3.698599999999927e-05, 3.69719999999997e-05, 3.701399999999841e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.698599999999927e-05, 3.701400000000188e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.216" endtime="20201117 14:42:21.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.211" endtime="20201117 14:42:21.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.221" endtime="20201117 14:42:21.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.225" endtime="20201117 14:42:21.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.223" endtime="20201117 14:42:21.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.219" endtime="20201117 14:42:21.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.850" endtime="20201117 14:42:21.246"></status>
</kw>
<msg timestamp="20201117 14:42:21.246" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.255" endtime="20201117 14:42:21.273"></status>
</kw>
<msg timestamp="20201117 14:42:21.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.253" endtime="20201117 14:42:21.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.274" endtime="20201117 14:42:21.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.277" endtime="20201117 14:42:21.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.250" endtime="20201117 14:42:21.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.248" endtime="20201117 14:42:21.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.286" endtime="20201117 14:42:21.573"></status>
</kw>
<msg timestamp="20201117 14:42:21.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020516667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020553806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.284" endtime="20201117 14:42:21.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020516667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020553806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.577" endtime="20201117 14:42:21.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.586" endtime="20201117 14:42:21.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.282" endtime="20201117 14:42:21.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.280" endtime="20201117 14:42:21.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.593" level="INFO">${RESULT} = [{'time': 0.020553806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7139000000002004e-05, 'source_diff': 3.7139000000002004e-05}, {'time': 0.020594458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:21.589" endtime="20201117 14:42:21.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.607" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:21.594" endtime="20201117 14:42:21.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.611" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.610" endtime="20201117 14:42:21.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.614" level="INFO">VALUE: [3.7139000000002004e-05, 3.59719999999987e-05, 3.5861000000001614e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.7110999999999394e-05, 3.699999999999884e-05, 3.6167000000000143e-05, 3.6305000000000365e-05, 3.698599999999927e-05, 3.698599999999927e-05, 3.695800000000013e-05, 3.7082999999996785e-05, 3.69719999999997e-05, 3.6402999999997354e-05, 3.6360999999998644e-05, 3.5888999999997284e-05, 3.6139000000001004e-05, 3.700000000000231e-05, 3.7124999999998964e-05, 3.695900000000307e-05, 3.701400000000188e-05, 3.5860999999998144e-05, 3.665199999999813e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.600000000000131e-05, 3.5846999999998574e-05, 3.698599999999927e-05, 3.698600000000274e-05, 3.7041000000001545e-05, 3.590200000000085e-05, 3.619399999999981e-05, 3.700000000000231e-05, 3.711199999999887e-05, 3.700000000000231e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.701399999999841e-05, 3.590199999999738e-05, 3.6153000000000574e-05, 3.699999999999884e-05, 3.7012999999998936e-05, 3.592999999999999e-05, 3.643000000000049e-05, 3.698599999999927e-05, 3.7124999999998964e-05, 3.699999999999884e-05, 3.601400000000088e-05, 3.606999999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.613" endtime="20201117 14:42:21.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.608" endtime="20201117 14:42:21.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.618" endtime="20201117 14:42:21.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.621" endtime="20201117 14:42:21.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.620" endtime="20201117 14:42:21.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.616" endtime="20201117 14:42:21.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.247" endtime="20201117 14:42:21.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.848" endtime="20201117 14:42:21.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.847" endtime="20201117 14:42:21.642"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.645" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.654" endtime="20201117 14:42:21.671"></status>
</kw>
<msg timestamp="20201117 14:42:21.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.652" endtime="20201117 14:42:21.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.673" endtime="20201117 14:42:21.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.676" endtime="20201117 14:42:21.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.649" endtime="20201117 14:42:21.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.647" endtime="20201117 14:42:21.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.685" endtime="20201117 14:42:21.973"></status>
</kw>
<msg timestamp="20201117 14:42:21.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.684" endtime="20201117 14:42:21.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.977" endtime="20201117 14:42:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.986" endtime="20201117 14:42:21.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.681" endtime="20201117 14:42:21.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.679" endtime="20201117 14:42:21.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.993" level="INFO">${RESULT} = [{'time': 0.023152861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7847000000000575e-05, 'source_diff': 3.7847000000000575e-05}, {'time': 0.023193917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:21.989" endtime="20201117 14:42:21.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:21.994" endtime="20201117 14:42:22.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.011" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.010" endtime="20201117 14:42:22.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.014" level="INFO">VALUE: [3.7847000000000575e-05, 3.72780000000017e-05, 3.775000000000306e-05, 3.7681000000001214e-05, 3.799999999999984e-05, 3.774999999999959e-05, 3.7610999999999895e-05, 3.723599999999952e-05, 3.7125000000002434e-05, 3.7195000000000283e-05, 3.773600000000002e-05, 3.780600000000134e-05, 3.780600000000134e-05, 3.79720000000007e-05, 3.776400000000263e-05, 3.790200000000285e-05, 3.780600000000134e-05, 3.7832999999997535e-05, 3.7681000000001214e-05, 3.7805000000001865e-05, 3.7527000000002475e-05, 3.7569000000001185e-05, 3.719399999999734e-05, 3.7569000000001185e-05, 3.745800000000063e-05, 3.722199999999995e-05, 3.799999999999984e-05, 3.732000000000041e-05, 3.749999999999934e-05, 3.745800000000063e-05, 3.7555000000001615e-05, 3.730600000000084e-05, 3.748599999999977e-05, 3.7583000000000755e-05, 3.7903000000002324e-05, 3.730599999999737e-05, 3.720899999999985e-05, 3.8138999999999534e-05, 3.732000000000041e-05, 3.7681000000001214e-05, 3.799999999999984e-05, 3.7888999999999284e-05, 3.780600000000134e-05, 3.7096999999999825e-05, 3.730600000000084e-05, 3.726399999999866e-05, 3.722199999999995e-05, 3.726399999999866e-05, 3.790199999999938e-05, 3.807000000000116e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.012" endtime="20201117 14:42:22.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.007" endtime="20201117 14:42:22.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.017" endtime="20201117 14:42:22.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.021" endtime="20201117 14:42:22.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.019" endtime="20201117 14:42:22.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.016" endtime="20201117 14:42:22.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.646" endtime="20201117 14:42:22.042"></status>
</kw>
<msg timestamp="20201117 14:42:22.042" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.051" endtime="20201117 14:42:22.068"></status>
</kw>
<msg timestamp="20201117 14:42:22.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.049" endtime="20201117 14:42:22.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.070" endtime="20201117 14:42:22.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.072" endtime="20201117 14:42:22.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.046" endtime="20201117 14:42:22.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.044" endtime="20201117 14:42:22.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.082" endtime="20201117 14:42:22.368"></status>
</kw>
<msg timestamp="20201117 14:42:22.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.080" endtime="20201117 14:42:22.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.373" endtime="20201117 14:42:22.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.381" endtime="20201117 14:42:22.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.077" endtime="20201117 14:42:22.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.075" endtime="20201117 14:42:22.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.388" level="INFO">${RESULT} = [{'time': 0.020174403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.020215417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:22.385" endtime="20201117 14:42:22.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.402" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:22.389" endtime="20201117 14:42:22.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.407" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.406" endtime="20201117 14:42:22.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.409" level="INFO">VALUE: [3.748599999999977e-05, 3.7638999999999034e-05, 3.7861000000000145e-05, 3.774999999999959e-05, 3.761200000000284e-05, 3.7624999999999464e-05, 3.723599999999952e-05, 3.720800000000038e-05, 3.7874999999999714e-05, 3.786199999999962e-05, 3.7945000000001033e-05, 3.7638999999999034e-05, 3.8111000000000395e-05, 3.7305000000001365e-05, 3.8194999999997814e-05, 3.8124999999999964e-05, 3.774999999999959e-05, 3.7124999999998964e-05, 3.799999999999984e-05, 3.7388999999998784e-05, 3.7138999999998534e-05, 3.7875000000003184e-05, 3.776399999999916e-05, 3.7624999999999464e-05, 3.7304999999997895e-05, 3.7610999999999895e-05, 3.782000000000091e-05, 3.7125000000002434e-05, 3.74590000000001e-05, 3.749999999999934e-05, 3.765199999999913e-05, 3.805599999999812e-05, 3.7694999999997314e-05, 3.805599999999812e-05, 3.751400000000238e-05, 3.730600000000084e-05, 3.7417000000001394e-05, 3.7945000000001033e-05, 3.7445000000000533e-05, 3.730600000000084e-05, 3.807000000000116e-05, 3.763799999999956e-05, 3.7374999999999214e-05, 3.7889000000002754e-05, 3.7888999999999284e-05, 3.74720000000002e-05, 3.7402999999998354e-05, 3.743000000000149e-05, 3.7638999999999034e-05, 3.7374999999999214e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.408" endtime="20201117 14:42:22.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.403" endtime="20201117 14:42:22.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.413" endtime="20201117 14:42:22.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.417" endtime="20201117 14:42:22.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.415" endtime="20201117 14:42:22.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.411" endtime="20201117 14:42:22.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.043" endtime="20201117 14:42:22.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.644" endtime="20201117 14:42:22.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.643" endtime="20201117 14:42:22.438"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.440" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.449" endtime="20201117 14:42:22.467"></status>
</kw>
<msg timestamp="20201117 14:42:22.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.447" endtime="20201117 14:42:22.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.469" endtime="20201117 14:42:22.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.471" endtime="20201117 14:42:22.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.445" endtime="20201117 14:42:22.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.442" endtime="20201117 14:42:22.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.481" endtime="20201117 14:42:22.767"></status>
</kw>
<msg timestamp="20201117 14:42:22.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.479" endtime="20201117 14:42:22.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.772" endtime="20201117 14:42:22.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.780" endtime="20201117 14:42:22.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.476" endtime="20201117 14:42:22.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.475" endtime="20201117 14:42:22.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.787" level="INFO">${RESULT} = [{'time': 0.022850472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9111000000001395e-05, 'source_diff': 3.9111000000001395e-05}, {'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:22.784" endtime="20201117 14:42:22.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.802" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:22.788" endtime="20201117 14:42:22.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.807" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.806" endtime="20201117 14:42:22.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.817" level="INFO">VALUE: [3.9111000000001395e-05, 3.822200000000095e-05, 3.8818999999998965e-05, 3.8833000000002005e-05, 3.898600000000127e-05, 3.822200000000095e-05, 3.8388999999999784e-05, 3.8138999999999534e-05, 3.855600000000209e-05, 3.902799999999998e-05, 3.8125000000003434e-05, 3.8681000000002214e-05, 3.899999999999737e-05, 3.826399999999966e-05, 3.900000000000084e-05, 3.8209000000000853e-05, 3.906999999999869e-05, 3.87919999999993e-05, 3.8889000000000284e-05, 3.8361000000000645e-05, 3.901400000000041e-05, 3.907000000000216e-05, 3.855599999999862e-05, 3.8889000000000284e-05, 3.865200000000013e-05, 3.900000000000084e-05, 3.8554999999999146e-05, 3.9083000000002255e-05, 3.9068999999999215e-05, 3.8597000000001325e-05, 3.820800000000138e-05, 3.8554999999999146e-05, 3.9082999999998785e-05, 3.8304999999998895e-05, 3.8583000000001755e-05, 3.8861000000001145e-05, 3.8138999999999534e-05, 3.81659999999992e-05, 3.8625000000000465e-05, 3.8625000000000465e-05, 3.820800000000138e-05, 3.8930999999998994e-05, 3.8930999999998994e-05, 3.873600000000102e-05, 3.825000000000009e-05, 3.82780000000027e-05, 3.8625000000000465e-05, 3.876400000000016e-05, 3.8709000000001353e-05, 3.8681000000002214e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.808" endtime="20201117 14:42:22.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.803" endtime="20201117 14:42:22.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.820" endtime="20201117 14:42:22.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.824" endtime="20201117 14:42:22.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.822" endtime="20201117 14:42:22.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.818" endtime="20201117 14:42:22.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.441" endtime="20201117 14:42:22.844"></status>
</kw>
<msg timestamp="20201117 14:42:22.845" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.853" endtime="20201117 14:42:22.871"></status>
</kw>
<msg timestamp="20201117 14:42:22.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.852" endtime="20201117 14:42:22.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.873" endtime="20201117 14:42:22.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.875" endtime="20201117 14:42:22.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.849" endtime="20201117 14:42:22.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.847" endtime="20201117 14:42:22.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.885" endtime="20201117 14:42:23.172"></status>
</kw>
<msg timestamp="20201117 14:42:23.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.883" endtime="20201117 14:42:23.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.177" endtime="20201117 14:42:23.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.185" endtime="20201117 14:42:23.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.880" endtime="20201117 14:42:23.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.878" endtime="20201117 14:42:23.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.192" level="INFO">${RESULT} = [{'time': 0.020289333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.919399999999934e-05, 'source_diff': 3.919399999999934e-05}, {'time': 0.020330319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.189" endtime="20201117 14:42:23.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:23.193" endtime="20201117 14:42:23.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.211" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.210" endtime="20201117 14:42:23.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.214" level="INFO">VALUE: [3.919399999999934e-05, 3.8513000000000436e-05, 3.844399999999859e-05, 3.843000000000249e-05, 3.8819000000002435e-05, 3.8639000000000034e-05, 3.906999999999869e-05, 3.8332999999998035e-05, 3.8847000000001575e-05, 3.8804999999999396e-05, 3.8625000000000465e-05, 3.850000000000034e-05, 3.874999999999712e-05, 3.894399999999909e-05, 3.850000000000034e-05, 3.873599999999755e-05, 3.899999999999737e-05, 3.815199999999963e-05, 3.8611000000000895e-05, 3.904199999999955e-05, 3.908400000000173e-05, 3.873599999999755e-05, 3.8695000000001784e-05, 3.8666999999999174e-05, 3.873600000000102e-05, 3.8138999999999534e-05, 3.834800000000055e-05, 3.8459000000001103e-05, 3.898600000000127e-05, 3.8431000000001964e-05, 3.831999999999794e-05, 3.8875000000000715e-05, 3.820799999999791e-05, 3.8875000000000715e-05, 3.820800000000138e-05, 3.868000000000274e-05, 3.8902999999999854e-05, 3.8902999999999854e-05, 3.8388999999999784e-05, 3.8180999999998244e-05, 3.9068999999999215e-05, 3.8332999999998035e-05, 3.8625000000000465e-05, 3.8611000000000895e-05, 3.8666999999999174e-05, 3.870799999999841e-05, 3.873600000000102e-05, 3.850000000000034e-05, 3.8847000000001575e-05, 3.8709000000001353e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.212" endtime="20201117 14:42:23.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.207" endtime="20201117 14:42:23.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.217" endtime="20201117 14:42:23.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.220" endtime="20201117 14:42:23.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.219" endtime="20201117 14:42:23.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.215" endtime="20201117 14:42:23.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.845" endtime="20201117 14:42:23.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.439" endtime="20201117 14:42:23.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.438" endtime="20201117 14:42:23.242"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.244" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.253" endtime="20201117 14:42:23.271"></status>
</kw>
<msg timestamp="20201117 14:42:23.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.251" endtime="20201117 14:42:23.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.273" endtime="20201117 14:42:23.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.276" endtime="20201117 14:42:23.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.248" endtime="20201117 14:42:23.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.246" endtime="20201117 14:42:23.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.285" endtime="20201117 14:42:23.572"></status>
</kw>
<msg timestamp="20201117 14:42:23.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.283" endtime="20201117 14:42:23.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.576" endtime="20201117 14:42:23.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.585" endtime="20201117 14:42:23.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.281" endtime="20201117 14:42:23.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.279" endtime="20201117 14:42:23.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.592" level="INFO">${RESULT} = [{'time': 0.022919653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.955600000000309e-05, 'source_diff': 3.955600000000309e-05}, {'time': 0.022964639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.588" endtime="20201117 14:42:23.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:23.593" endtime="20201117 14:42:23.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.610" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.609" endtime="20201117 14:42:23.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.613" level="INFO">VALUE: [3.955600000000309e-05, 3.99859999999988e-05, 3.977800000000073e-05, 3.9430999999999494e-05, 3.9624999999997995e-05, 3.9624999999997995e-05, 3.9195000000002284e-05, 3.9388999999997315e-05, 3.9444999999999064e-05, 4.001400000000141e-05, 3.9416999999999924e-05, 3.961200000000137e-05, 3.963800000000156e-05, 3.9875000000001715e-05, 3.947199999999873e-05, 4.0041000000001076e-05, 3.9874999999998245e-05, 3.9874999999998245e-05, 4.0069000000000216e-05, 3.9903000000000854e-05, 3.956999999999919e-05, 4.0069000000000216e-05, 3.9667000000000174e-05, 3.9125000000000965e-05, 3.9318999999999465e-05, 4.0139000000001535e-05, 3.9930999999999994e-05, 3.9194999999998814e-05, 4.0110999999998925e-05, 3.931999999999894e-05, 3.9681000000003214e-05, 3.956999999999919e-05, 3.924999999999762e-05, 4.0138999999998065e-05, 3.972199999999898e-05, 3.9430999999999494e-05, 3.9610999999998425e-05, 3.9624999999997995e-05, 3.9445000000002534e-05, 3.9319000000002935e-05, 3.9277000000000756e-05, 3.9180999999999244e-05, 3.9125000000000965e-05, 3.933399999999851e-05, 3.969399999999984e-05, 3.922200000000195e-05, 4.0167000000000674e-05, 4.0153000000001104e-05, 3.920799999999891e-05, 3.915200000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.612" endtime="20201117 14:42:23.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.607" endtime="20201117 14:42:23.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.616" endtime="20201117 14:42:23.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.620" endtime="20201117 14:42:23.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.618" endtime="20201117 14:42:23.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.615" endtime="20201117 14:42:23.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.245" endtime="20201117 14:42:23.641"></status>
</kw>
<msg timestamp="20201117 14:42:23.641" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.650" endtime="20201117 14:42:23.668"></status>
</kw>
<msg timestamp="20201117 14:42:23.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.648" endtime="20201117 14:42:23.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.669" endtime="20201117 14:42:23.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.672" endtime="20201117 14:42:23.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.645" endtime="20201117 14:42:23.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.643" endtime="20201117 14:42:23.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.681" endtime="20201117 14:42:23.969"></status>
</kw>
<msg timestamp="20201117 14:42:23.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.680" endtime="20201117 14:42:23.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.973" endtime="20201117 14:42:23.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.982" endtime="20201117 14:42:23.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.677" endtime="20201117 14:42:23.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.675" endtime="20201117 14:42:23.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.989" level="INFO">${RESULT} = [{'time': 0.020526472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.977800000000073e-05, 'source_diff': 3.977800000000073e-05}, {'time': 0.020572458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.985" endtime="20201117 14:42:23.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:23.990" endtime="20201117 14:42:24.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.007" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.006" endtime="20201117 14:42:24.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.010" level="INFO">VALUE: [3.977800000000073e-05, 4.0110999999998925e-05, 3.999999999999837e-05, 3.968000000000027e-05, 3.9832999999999535e-05, 3.9791000000000826e-05, 3.976399999999769e-05, 3.9416999999999924e-05, 3.948600000000177e-05, 3.9568999999999716e-05, 3.944399999999959e-05, 3.94859999999983e-05, 3.927800000000023e-05, 3.950000000000134e-05, 3.9680999999999744e-05, 4.0125000000001965e-05, 3.930599999999937e-05, 3.923599999999805e-05, 3.917999999999977e-05, 3.948600000000177e-05, 3.917999999999977e-05, 3.9375000000001215e-05, 3.9194999999998814e-05, 4.001400000000141e-05, 3.9389000000000784e-05, 3.9610999999998425e-05, 3.9527000000001006e-05, 3.970800000000288e-05, 3.938800000000131e-05, 3.974999999999812e-05, 3.993000000000052e-05, 3.9318999999999465e-05, 3.9555000000000146e-05, 3.923600000000152e-05, 3.999999999999837e-05, 3.997199999999923e-05, 3.9332999999999035e-05, 3.9804999999996926e-05, 3.955599999999962e-05, 3.969399999999984e-05, 4.001400000000141e-05, 3.9805000000000396e-05, 3.9832999999999535e-05, 3.9568999999999716e-05, 3.930599999999937e-05, 4.006999999999969e-05, 3.9611000000001895e-05, 3.931999999999894e-05, 3.932000000000241e-05, 3.905599999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.008" endtime="20201117 14:42:24.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.004" endtime="20201117 14:42:24.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.013" endtime="20201117 14:42:24.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.017" endtime="20201117 14:42:24.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.015" endtime="20201117 14:42:24.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.011" endtime="20201117 14:42:24.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.642" endtime="20201117 14:42:24.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.243" endtime="20201117 14:42:24.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.242" endtime="20201117 14:42:24.038"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.040" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.049" endtime="20201117 14:42:24.067"></status>
</kw>
<msg timestamp="20201117 14:42:24.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.048" endtime="20201117 14:42:24.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.068" endtime="20201117 14:42:24.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.071" endtime="20201117 14:42:24.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.045" endtime="20201117 14:42:24.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.042" endtime="20201117 14:42:24.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.081" endtime="20201117 14:42:24.368"></status>
</kw>
<msg timestamp="20201117 14:42:24.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.079" endtime="20201117 14:42:24.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.372" endtime="20201117 14:42:24.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.381" endtime="20201117 14:42:24.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.077" endtime="20201117 14:42:24.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.074" endtime="20201117 14:42:24.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.388" level="INFO">${RESULT} = [{'time': 0.022936611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.045800000000016e-05, 'source_diff': 4.045800000000016e-05}, {'time': 0.022982625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.384" endtime="20201117 14:42:24.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.403" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:24.389" endtime="20201117 14:42:24.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.408" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.407" endtime="20201117 14:42:24.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.410" level="INFO">VALUE: [4.045800000000016e-05, 4.0388999999998315e-05, 4.0360999999999175e-05, 4.026399999999819e-05, 4.094399999999762e-05, 4.051400000000191e-05, 4.099999999999937e-05, 4.0931000000000994e-05, 4.0874999999999245e-05, 4.0888999999998815e-05, 4.0181000000000244e-05, 4.0445000000000064e-05, 4.0653000000001605e-05, 4.0180999999996775e-05, 4.0624999999998995e-05, 4.051400000000191e-05, 4.0417000000000924e-05, 4.081999999999697e-05, 4.0374999999998745e-05, 4.07920000000013e-05, 4.086199999999915e-05, 4.11119999999994e-05, 4.045800000000016e-05, 4.069399999999737e-05, 4.101399999999894e-05, 4.102799999999851e-05, 4.0874999999999245e-05, 4.0333000000000035e-05, 4.0347000000003075e-05, 4.0583000000000286e-05, 4.0819000000000966e-05, 4.079199999999783e-05, 4.051399999999844e-05, 4.018000000000077e-05, 4.025000000000209e-05, 4.051400000000191e-05, 4.099999999999937e-05, 4.080600000000087e-05, 4.099999999999937e-05, 4.108399999999679e-05, 4.026399999999819e-05, 4.030600000000037e-05, 4.0722999999999454e-05, 4.0153000000001104e-05, 4.0361000000002645e-05, 4.073599999999955e-05, 4.045800000000016e-05, 4.023600000000252e-05, 4.108400000000026e-05, 4.0361000000002645e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.409" endtime="20201117 14:42:24.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.404" endtime="20201117 14:42:24.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.413" endtime="20201117 14:42:24.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.417" endtime="20201117 14:42:24.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.415" endtime="20201117 14:42:24.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.412" endtime="20201117 14:42:24.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.041" endtime="20201117 14:42:24.438"></status>
</kw>
<msg timestamp="20201117 14:42:24.438" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.447" endtime="20201117 14:42:24.465"></status>
</kw>
<msg timestamp="20201117 14:42:24.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.445" endtime="20201117 14:42:24.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.466" endtime="20201117 14:42:24.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.469" endtime="20201117 14:42:24.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.442" endtime="20201117 14:42:24.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.440" endtime="20201117 14:42:24.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.479" endtime="20201117 14:42:24.765"></status>
</kw>
<msg timestamp="20201117 14:42:24.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.477" endtime="20201117 14:42:24.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.769" endtime="20201117 14:42:24.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.778" endtime="20201117 14:42:24.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.474" endtime="20201117 14:42:24.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.473" endtime="20201117 14:42:24.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.785" level="INFO">${RESULT} = [{'time': 0.020068458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.022199999999948e-05, 'source_diff': 4.022199999999948e-05}, {'time': 0.020112458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.781" endtime="20201117 14:42:24.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.798" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:24.786" endtime="20201117 14:42:24.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.803" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.802" endtime="20201117 14:42:24.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.806" level="INFO">VALUE: [4.022199999999948e-05, 4.0569000000000716e-05, 4.076399999999869e-05, 4.044400000000059e-05, 4.101399999999894e-05, 4.044400000000059e-05, 4.051399999999844e-05, 4.0638999999998565e-05, 4.0305000000000896e-05, 4.0805000000001396e-05, 4.0860999999999675e-05, 4.0667000000001174e-05, 4.0374999999998745e-05, 4.0333000000000035e-05, 4.057000000000019e-05, 4.0374999999998745e-05, 4.0695000000000314e-05, 4.075000000000259e-05, 4.0333000000000035e-05, 4.077799999999826e-05, 4.0708999999999884e-05, 4.0445000000000064e-05, 4.0181000000000244e-05, 4.0695000000000314e-05, 4.063799999999909e-05, 4.0486999999998774e-05, 4.07920000000013e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.040200000000188e-05, 4.019399999999687e-05, 4.044400000000059e-05, 4.027800000000123e-05, 4.0305000000000896e-05, 4.026400000000166e-05, 4.0819000000000966e-05, 4.102799999999851e-05, 4.0652999999998135e-05, 4.0833000000000536e-05, 4.0167000000000674e-05, 4.1125000000002965e-05, 4.04859999999993e-05, 4.026399999999819e-05, 4.0638999999998565e-05, 4.0708999999999884e-05, 4.082000000000044e-05, 4.0639000000002035e-05, 4.0360999999999175e-05, 4.049999999999887e-05, 4.025000000000209e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.804" endtime="20201117 14:42:24.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.799" endtime="20201117 14:42:24.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.809" endtime="20201117 14:42:24.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.812" endtime="20201117 14:42:24.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.811" endtime="20201117 14:42:24.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.807" endtime="20201117 14:42:24.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.439" endtime="20201117 14:42:24.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.039" endtime="20201117 14:42:24.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.038" endtime="20201117 14:42:24.834"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.836" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.845" endtime="20201117 14:42:24.864"></status>
</kw>
<msg timestamp="20201117 14:42:24.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.844" endtime="20201117 14:42:24.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.865" endtime="20201117 14:42:24.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.868" endtime="20201117 14:42:24.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.840" endtime="20201117 14:42:24.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.838" endtime="20201117 14:42:24.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.877" endtime="20201117 14:42:25.165"></status>
</kw>
<msg timestamp="20201117 14:42:25.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023309222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.876" endtime="20201117 14:42:25.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023309222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.169" endtime="20201117 14:42:25.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.178" endtime="20201117 14:42:25.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.873" endtime="20201117 14:42:25.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.871" endtime="20201117 14:42:25.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.185" level="INFO">${RESULT} = [{'time': 0.023309222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.151399999999944e-05, 'source_diff': 4.151399999999944e-05}, {'time': 0.023353181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.181" endtime="20201117 14:42:25.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.198" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:25.186" endtime="20201117 14:42:25.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.203" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.202" endtime="20201117 14:42:25.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.206" level="INFO">VALUE: [4.151399999999944e-05, 4.1195000000000814e-05, 4.149999999999987e-05, 4.1597000000000856e-05, 4.1987000000000274e-05, 4.195800000000166e-05, 4.177799999999926e-05, 4.2054999999999176e-05, 4.176399999999969e-05, 4.142999999999855e-05, 4.119399999999787e-05, 4.193000000000252e-05, 4.194399999999862e-05, 4.120800000000091e-05, 4.118000000000177e-05, 4.1374999999999745e-05, 4.127800000000223e-05, 4.1583000000001286e-05, 4.1430999999998025e-05, 4.1832999999998066e-05, 4.131999999999747e-05, 4.18059999999984e-05, 4.200000000000037e-05, 4.2125000000000495e-05, 4.183400000000101e-05, 4.179199999999883e-05, 4.158400000000076e-05, 4.175000000000012e-05, 4.14860000000003e-05, 4.1695000000001314e-05, 4.186200000000015e-05, 4.1526999999999537e-05, 4.16799999999988e-05, 4.1875000000000245e-05, 4.119400000000134e-05, 4.142999999999855e-05, 4.2068999999998746e-05, 4.175000000000012e-05, 4.1597000000000856e-05, 4.1861000000000675e-05, 4.1402999999998885e-05, 4.151399999999944e-05, 4.2152999999999635e-05, 4.1624999999999995e-05, 4.200000000000037e-05, 4.173600000000055e-05, 4.1361000000000175e-05, 4.149999999999987e-05, 4.176399999999969e-05, 4.2125000000000495e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.204" endtime="20201117 14:42:25.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.199" endtime="20201117 14:42:25.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.209" endtime="20201117 14:42:25.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.213" endtime="20201117 14:42:25.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.211" endtime="20201117 14:42:25.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.207" endtime="20201117 14:42:25.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.837" endtime="20201117 14:42:25.234"></status>
</kw>
<msg timestamp="20201117 14:42:25.234" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.243" endtime="20201117 14:42:25.261"></status>
</kw>
<msg timestamp="20201117 14:42:25.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.241" endtime="20201117 14:42:25.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.263" endtime="20201117 14:42:25.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.265" endtime="20201117 14:42:25.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.238" endtime="20201117 14:42:25.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.236" endtime="20201117 14:42:25.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.275" endtime="20201117 14:42:25.562"></status>
</kw>
<msg timestamp="20201117 14:42:25.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020594278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.273" endtime="20201117 14:42:25.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020594278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.566" endtime="20201117 14:42:25.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.575" endtime="20201117 14:42:25.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.270" endtime="20201117 14:42:25.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.269" endtime="20201117 14:42:25.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.582" level="INFO">${RESULT} = [{'time': 0.020636014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.173600000000055e-05, 'source_diff': 4.173600000000055e-05}, {'time': 0.02068, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201117 14:42:25.578" endtime="20201117 14:42:25.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:25.583" endtime="20201117 14:42:25.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.600" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.599" endtime="20201117 14:42:25.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.603" level="INFO">VALUE: [4.173600000000055e-05, 4.175000000000012e-05, 4.1888999999999815e-05, 4.132000000000094e-05, 4.1305000000001896e-05, 4.1195000000000814e-05, 4.1222999999999954e-05, 4.198599999999733e-05, 4.202799999999951e-05, 4.1431000000001494e-05, 4.1402999999998885e-05, 4.1624999999999995e-05, 4.1694999999997845e-05, 4.1262999999999717e-05, 4.1167000000001674e-05, 4.1888999999999815e-05, 4.1875000000000245e-05, 4.1222999999999954e-05, 4.1583000000001286e-05, 4.1903000000002855e-05, 4.201399999999994e-05, 4.1305000000001896e-05, 4.2139000000000065e-05, 4.1597000000000856e-05, 4.1124999999999495e-05, 4.1832999999998066e-05, 4.2139000000000065e-05, 4.2181000000002244e-05, 4.2124999999997026e-05, 4.17920000000023e-05, 4.151399999999944e-05, 4.1181000000001244e-05, 4.204200000000255e-05, 4.205599999999865e-05, 4.1403000000002355e-05, 4.1902999999999385e-05, 4.1694999999997845e-05, 4.1388999999999315e-05, 4.124999999999962e-05, 4.1124999999999495e-05, 4.184800000000058e-05, 4.2110999999997456e-05, 4.180600000000187e-05, 4.140199999999941e-05, 4.1361000000000175e-05, 4.195799999999819e-05, 4.1236999999999524e-05, 4.1388999999999315e-05, 4.1804999999998926e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.601" endtime="20201117 14:42:25.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.597" endtime="20201117 14:42:25.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.607" endtime="20201117 14:42:25.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.610" endtime="20201117 14:42:25.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.609" endtime="20201117 14:42:25.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.605" endtime="20201117 14:42:25.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.235" endtime="20201117 14:42:25.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.835" endtime="20201117 14:42:25.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.834" endtime="20201117 14:42:25.632"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.634" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.643" endtime="20201117 14:42:25.660"></status>
</kw>
<msg timestamp="20201117 14:42:25.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.641" endtime="20201117 14:42:25.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.662" endtime="20201117 14:42:25.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.664" endtime="20201117 14:42:25.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.638" endtime="20201117 14:42:25.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.636" endtime="20201117 14:42:25.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.674" endtime="20201117 14:42:25.961"></status>
</kw>
<msg timestamp="20201117 14:42:25.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.672" endtime="20201117 14:42:25.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.965" endtime="20201117 14:42:25.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.974" endtime="20201117 14:42:25.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.670" endtime="20201117 14:42:25.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.668" endtime="20201117 14:42:25.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.981" level="INFO">${RESULT} = [{'time': 0.022775139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.279199999999983e-05, 'source_diff': 4.279199999999983e-05}, {'time': 0.022821153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.977" endtime="20201117 14:42:25.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:25.982" endtime="20201117 14:42:25.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.001" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.999" endtime="20201117 14:42:26.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.003" level="INFO">VALUE: [4.279199999999983e-05, 4.226400000000019e-05, 4.2639000000000565e-05, 4.2611000000001426e-05, 4.251400000000044e-05, 4.307000000000269e-05, 4.305599999999965e-05, 4.301400000000094e-05, 4.277800000000026e-05, 4.2889000000000815e-05, 4.2610999999997956e-05, 4.244400000000259e-05, 4.2916999999999955e-05, 4.2290999999999856e-05, 4.3055000000000176e-05, 4.227799999999976e-05, 4.301400000000094e-05, 4.273599999999808e-05, 4.2347000000001606e-05, 4.272199999999851e-05, 4.21799999999993e-05, 4.248599999999783e-05, 4.3110999999998456e-05, 4.2903000000000385e-05, 4.305599999999965e-05, 4.2624999999997526e-05, 4.269399999999937e-05, 4.2639000000000565e-05, 4.2695000000002314e-05, 4.250000000000087e-05, 4.2375000000000745e-05, 4.256999999999872e-05, 4.275000000000112e-05, 4.226400000000019e-05, 4.2681000000002745e-05, 4.281999999999897e-05, 4.2888999999997346e-05, 4.2277000000000287e-05, 4.2737000000001024e-05, 4.305599999999965e-05, 4.2639000000000565e-05, 4.236200000000065e-05, 4.213800000000059e-05, 4.2818999999999496e-05, 4.2653000000000135e-05, 4.275000000000112e-05, 4.276400000000069e-05, 4.2333000000002036e-05, 4.2624999999997526e-05, 4.227799999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.002" endtime="20201117 14:42:26.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.997" endtime="20201117 14:42:26.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.007" endtime="20201117 14:42:26.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.010" endtime="20201117 14:42:26.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.009" endtime="20201117 14:42:26.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.005" endtime="20201117 14:42:26.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.635" endtime="20201117 14:42:26.031"></status>
</kw>
<msg timestamp="20201117 14:42:26.031" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.040" endtime="20201117 14:42:26.061"></status>
</kw>
<msg timestamp="20201117 14:42:26.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.038" endtime="20201117 14:42:26.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.062" endtime="20201117 14:42:26.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.065" endtime="20201117 14:42:26.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.036" endtime="20201117 14:42:26.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.034" endtime="20201117 14:42:26.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.074" endtime="20201117 14:42:26.360"></status>
</kw>
<msg timestamp="20201117 14:42:26.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.073" endtime="20201117 14:42:26.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.365" endtime="20201117 14:42:26.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.373" endtime="20201117 14:42:26.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.070" endtime="20201117 14:42:26.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.068" endtime="20201117 14:42:26.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.380" level="INFO">${RESULT} = [{'time': 0.020015681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3153000000000635e-05, 'source_diff': 4.3153000000000635e-05}, {'time': 0.020061694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.377" endtime="20201117 14:42:26.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:26.381" endtime="20201117 14:42:26.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.399" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.398" endtime="20201117 14:42:26.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.402" level="INFO">VALUE: [4.3153000000000635e-05, 4.297200000000223e-05, 4.257000000000219e-05, 4.26799999999998e-05, 4.255600000000262e-05, 4.3097000000002356e-05, 4.291600000000048e-05, 4.3068999999999746e-05, 4.26799999999998e-05, 4.301400000000094e-05, 4.2346999999998136e-05, 4.270800000000241e-05, 4.2361000000001175e-05, 4.2889000000000815e-05, 4.304200000000008e-05, 4.21799999999993e-05, 4.301399999999747e-05, 4.254199999999958e-05, 4.301400000000094e-05, 4.302800000000051e-05, 4.2194999999998345e-05, 4.2223000000000954e-05, 4.2902999999996916e-05, 4.2694999999998845e-05, 4.279199999999983e-05, 4.223599999999758e-05, 4.2959000000002134e-05, 4.2930999999999525e-05, 4.215200000000016e-05, 4.301399999999747e-05, 4.284800000000158e-05, 4.273599999999808e-05, 4.225000000000062e-05, 4.298599999999833e-05, 4.21799999999993e-05, 4.302800000000051e-05, 4.251400000000044e-05, 4.2305000000002896e-05, 4.220799999999844e-05, 4.219399999999887e-05, 4.2625000000000995e-05, 4.242999999999955e-05, 4.270799999999894e-05, 4.2430999999999025e-05, 4.2332999999998566e-05, 4.2889000000000815e-05, 4.302800000000051e-05, 4.255599999999915e-05, 4.2208999999997915e-05, 4.2680999999999275e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.400" endtime="20201117 14:42:26.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.395" endtime="20201117 14:42:26.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.405" endtime="20201117 14:42:26.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.409" endtime="20201117 14:42:26.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.407" endtime="20201117 14:42:26.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.403" endtime="20201117 14:42:26.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.032" endtime="20201117 14:42:26.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.633" endtime="20201117 14:42:26.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.632" endtime="20201117 14:42:26.430"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.432" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.441" endtime="20201117 14:42:26.461"></status>
</kw>
<msg timestamp="20201117 14:42:26.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.439" endtime="20201117 14:42:26.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.463" endtime="20201117 14:42:26.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.465" endtime="20201117 14:42:26.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.437" endtime="20201117 14:42:26.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.435" endtime="20201117 14:42:26.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.475" endtime="20201117 14:42:26.761"></status>
</kw>
<msg timestamp="20201117 14:42:26.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.473" endtime="20201117 14:42:26.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.765" endtime="20201117 14:42:26.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.774" endtime="20201117 14:42:26.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.470" endtime="20201117 14:42:26.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.468" endtime="20201117 14:42:26.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.781" level="INFO">${RESULT} = [{'time': 0.022716528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4138999999998596e-05, 'source_diff': 4.4138999999998596e-05}, {'time': 0.022765542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.778" endtime="20201117 14:42:26.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.795" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:26.782" endtime="20201117 14:42:26.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.800" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.799" endtime="20201117 14:42:26.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.802" level="INFO">VALUE: [4.4138999999998596e-05, 4.3638999999998096e-05, 4.407000000000022e-05, 4.3874999999998776e-05, 4.376400000000169e-05, 4.407000000000022e-05, 4.34999999999984e-05, 4.370799999999994e-05, 4.3417000000000455e-05, 4.3833000000000066e-05, 4.393000000000105e-05, 4.4083000000000316e-05, 4.369400000000037e-05, 4.3305000000000426e-05, 4.3346999999999136e-05, 4.367999999999733e-05, 4.331999999999947e-05, 4.3819000000000496e-05, 4.319399999999987e-05, 4.3332999999999566e-05, 4.3332999999999566e-05, 4.3139000000001065e-05, 4.406899999999728e-05, 4.394400000000062e-05, 4.374999999999865e-05, 4.4111000000002926e-05, 4.377800000000126e-05, 4.374999999999865e-05, 4.374999999999865e-05, 4.355600000000015e-05, 4.3945000000000095e-05, 4.3417000000000455e-05, 4.3680999999996806e-05, 4.408399999999979e-05, 4.331999999999947e-05, 4.326399999999772e-05, 4.397199999999976e-05, 4.3431000000000025e-05, 4.3569000000000246e-05, 4.343000000000055e-05, 4.3569000000000246e-05, 4.3389000000001315e-05, 4.31800000000003e-05, 4.343000000000055e-05, 4.3861000000002676e-05, 4.3569000000000246e-05, 4.344400000000012e-05, 4.3389000000001315e-05, 4.322199999999901e-05, 4.402799999999804e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.801" endtime="20201117 14:42:26.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.796" endtime="20201117 14:42:26.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.806" endtime="20201117 14:42:26.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.809" endtime="20201117 14:42:26.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.808" endtime="20201117 14:42:26.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.804" endtime="20201117 14:42:26.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.433" endtime="20201117 14:42:26.830"></status>
</kw>
<msg timestamp="20201117 14:42:26.830" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.839" endtime="20201117 14:42:26.856"></status>
</kw>
<msg timestamp="20201117 14:42:26.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.837" endtime="20201117 14:42:26.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.858" endtime="20201117 14:42:26.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.860" endtime="20201117 14:42:26.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.835" endtime="20201117 14:42:26.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.832" endtime="20201117 14:42:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.870" endtime="20201117 14:42:27.157"></status>
</kw>
<msg timestamp="20201117 14:42:27.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.868" endtime="20201117 14:42:27.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.161" endtime="20201117 14:42:27.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.170" endtime="20201117 14:42:27.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.866" endtime="20201117 14:42:27.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.864" endtime="20201117 14:42:27.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.178" level="INFO">${RESULT} = [{'time': 0.020059347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.366600000000123e-05, 'source_diff': 4.366600000000123e-05}, {'time': 0.020107375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.174" endtime="20201117 14:42:27.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:27.179" endtime="20201117 14:42:27.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.197" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.196" endtime="20201117 14:42:27.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.199" level="INFO">VALUE: [4.366600000000123e-05, 4.3903000000001385e-05, 4.33059999999999e-05, 4.350000000000187e-05, 4.376400000000169e-05, 4.327800000000076e-05, 4.374999999999865e-05, 4.3624999999998526e-05, 4.3444999999999595e-05, 4.3944999999996626e-05, 4.383399999999954e-05, 4.3846999999999636e-05, 4.3874999999998776e-05, 4.398599999999933e-05, 4.381999999999997e-05, 4.3596999999999386e-05, 4.3458999999999165e-05, 4.3431000000000025e-05, 4.3958999999999665e-05, 4.3374999999998276e-05, 4.3624999999998526e-05, 4.3194999999999345e-05, 4.344400000000012e-05, 4.3332999999999566e-05, 4.351400000000144e-05, 4.3582999999999816e-05, 4.343000000000055e-05, 4.326400000000119e-05, 4.3610999999998956e-05, 4.4083000000000316e-05, 4.355599999999668e-05, 4.345799999999969e-05, 4.376400000000169e-05, 4.3681000000000275e-05, 4.398599999999933e-05, 4.3318999999999996e-05, 4.33059999999999e-05, 4.381999999999997e-05, 4.3167000000000205e-05, 4.376399999999822e-05, 4.4138999999998596e-05, 4.4124999999999026e-05, 4.351399999999797e-05, 4.324999999999815e-05, 4.34999999999984e-05, 4.3945000000000095e-05, 4.3125000000001495e-05, 4.33059999999999e-05, 4.36800000000008e-05, 4.4069000000000746e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.198" endtime="20201117 14:42:27.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.193" endtime="20201117 14:42:27.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.203" endtime="20201117 14:42:27.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.206" endtime="20201117 14:42:27.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.205" endtime="20201117 14:42:27.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.201" endtime="20201117 14:42:27.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.831" endtime="20201117 14:42:27.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.431" endtime="20201117 14:42:27.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.430" endtime="20201117 14:42:27.228"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.230" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.239" endtime="20201117 14:42:27.256"></status>
</kw>
<msg timestamp="20201117 14:42:27.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.237" endtime="20201117 14:42:27.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.258" endtime="20201117 14:42:27.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.261" endtime="20201117 14:42:27.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.234" endtime="20201117 14:42:27.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.232" endtime="20201117 14:42:27.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.270" endtime="20201117 14:42:27.557"></status>
</kw>
<msg timestamp="20201117 14:42:27.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.269" endtime="20201117 14:42:27.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.561" endtime="20201117 14:42:27.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.570" endtime="20201117 14:42:27.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.266" endtime="20201117 14:42:27.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.264" endtime="20201117 14:42:27.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.577" level="INFO">${RESULT} = [{'time': 0.022805403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.447199999999679e-05, 'source_diff': 4.447199999999679e-05}, {'time': 0.022855417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.573" endtime="20201117 14:42:27.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:27.578" endtime="20201117 14:42:27.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.597" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.596" endtime="20201117 14:42:27.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.599" level="INFO">VALUE: [4.447199999999679e-05, 4.4388999999998846e-05, 4.4555000000001677e-05, 4.516599999999926e-05, 4.501399999999947e-05, 4.4695000000000845e-05, 4.45129999999995e-05, 4.48199999999975e-05, 4.431899999999753e-05, 4.455499999999821e-05, 4.4333000000000566e-05, 4.4847000000000636e-05, 4.44999999999994e-05, 4.4610999999999956e-05, 4.4847000000000636e-05, 4.420800000000044e-05, 4.448599999999983e-05, 4.491599999999901e-05, 4.4388999999998846e-05, 4.445800000000069e-05, 4.4374999999999276e-05, 4.495799999999772e-05, 4.424999999999915e-05, 4.505599999999818e-05, 4.4874999999999776e-05, 4.451400000000244e-05, 4.424999999999915e-05, 4.479200000000183e-05, 4.425000000000262e-05, 4.454200000000158e-05, 4.482000000000097e-05, 4.423599999999958e-05, 4.4861000000000206e-05, 4.4916999999998486e-05, 4.5083000000001316e-05, 4.498600000000033e-05, 4.4819000000001497e-05, 4.49999999999999e-05, 4.4624999999999526e-05, 4.501399999999947e-05, 4.4374999999999276e-05, 4.420800000000044e-05, 4.448599999999983e-05, 4.4388999999998846e-05, 4.4888999999999346e-05, 4.480599999999793e-05, 4.4959000000000665e-05, 4.4333000000000566e-05, 4.504199999999861e-05, 4.4902999999998916e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.598" endtime="20201117 14:42:27.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.593" endtime="20201117 14:42:27.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.602" endtime="20201117 14:42:27.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.606" endtime="20201117 14:42:27.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.604" endtime="20201117 14:42:27.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.601" endtime="20201117 14:42:27.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.231" endtime="20201117 14:42:27.627"></status>
</kw>
<msg timestamp="20201117 14:42:27.627" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.636" endtime="20201117 14:42:27.653"></status>
</kw>
<msg timestamp="20201117 14:42:27.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.634" endtime="20201117 14:42:27.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.655" endtime="20201117 14:42:27.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.658" endtime="20201117 14:42:27.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.631" endtime="20201117 14:42:27.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.629" endtime="20201117 14:42:27.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.667" endtime="20201117 14:42:27.954"></status>
</kw>
<msg timestamp="20201117 14:42:27.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.666" endtime="20201117 14:42:27.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.958" endtime="20201117 14:42:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.967" endtime="20201117 14:42:27.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.663" endtime="20201117 14:42:27.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.661" endtime="20201117 14:42:27.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.974" level="INFO">${RESULT} = [{'time': 0.020038486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.505500000000218e-05, 'source_diff': 4.505500000000218e-05}, {'time': 0.0200855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:27.970" endtime="20201117 14:42:27.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.987" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:27.975" endtime="20201117 14:42:27.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.992" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.991" endtime="20201117 14:42:27.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.995" level="INFO">VALUE: [4.505500000000218e-05, 4.4388999999998846e-05, 4.444400000000112e-05, 4.4624999999999526e-05, 4.4431000000001025e-05, 4.432000000000047e-05, 4.4360999999999706e-05, 4.476399999999922e-05, 4.4874999999999776e-05, 4.424999999999915e-05, 4.426400000000219e-05, 4.451400000000244e-05, 4.4555000000001677e-05, 4.474999999999965e-05, 4.4625000000002996e-05, 4.49999999999999e-05, 4.48060000000014e-05, 4.457000000000072e-05, 4.451400000000244e-05, 4.452799999999854e-05, 4.494399999999815e-05, 4.420800000000044e-05, 4.420800000000044e-05, 4.482000000000097e-05, 4.4374999999999276e-05, 4.4555000000001677e-05, 4.426399999999872e-05, 4.49999999999999e-05, 4.424999999999915e-05, 4.456899999999778e-05, 4.495800000000119e-05, 4.5125000000000026e-05, 4.483400000000054e-05, 4.4931000000001525e-05, 4.451400000000244e-05, 4.49999999999999e-05, 4.423599999999958e-05, 4.427800000000176e-05, 4.4597000000000386e-05, 4.426399999999872e-05, 4.4138999999998596e-05, 4.424999999999915e-05, 4.43060000000009e-05, 4.4638999999999096e-05, 4.4945000000001095e-05, 4.482000000000097e-05, 4.4973000000000235e-05, 4.4569000000001247e-05, 4.4888999999999346e-05, 4.41800000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.993" endtime="20201117 14:42:27.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.988" endtime="20201117 14:42:27.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.998" endtime="20201117 14:42:27.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.002" endtime="20201117 14:42:28.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.000" endtime="20201117 14:42:28.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.996" endtime="20201117 14:42:28.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.628" endtime="20201117 14:42:28.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.229" endtime="20201117 14:42:28.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.228" endtime="20201117 14:42:28.023"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.025" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.039" endtime="20201117 14:42:28.057"></status>
</kw>
<msg timestamp="20201117 14:42:28.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.038" endtime="20201117 14:42:28.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.059" endtime="20201117 14:42:28.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.061" endtime="20201117 14:42:28.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.030" endtime="20201117 14:42:28.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.028" endtime="20201117 14:42:28.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.071" endtime="20201117 14:42:28.357"></status>
</kw>
<msg timestamp="20201117 14:42:28.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028129028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028174958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.069" endtime="20201117 14:42:28.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028129028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028174958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.361" endtime="20201117 14:42:28.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.370" endtime="20201117 14:42:28.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.066" endtime="20201117 14:42:28.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.065" endtime="20201117 14:42:28.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.377" level="INFO">${RESULT} = [{'time': 0.028174958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.592999999999958e-05, 'source_diff': 4.592999999999958e-05}, {'time': 0.028225958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.373" endtime="20201117 14:42:28.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:28.378" endtime="20201117 14:42:28.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.395" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.394" endtime="20201117 14:42:28.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.398" level="INFO">VALUE: [4.592999999999958e-05, 4.591600000000001e-05, 4.586099999999774e-05, 4.576400000000022e-05, 4.522199999999754e-05, 4.5639000000000096e-05, 4.570800000000194e-05, 4.5388999999999846e-05, 4.577799999999979e-05, 4.60000000000009e-05, 4.526399999999972e-05, 4.579199999999936e-05, 4.556999999999825e-05, 4.598599999999786e-05, 4.5402999999999416e-05, 4.604199999999961e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.557000000000172e-05, 4.60000000000009e-05, 4.5445000000001595e-05, 4.532000000000147e-05, 4.5889000000000346e-05, 4.605499999999971e-05, 4.525000000000015e-05, 4.577700000000032e-05, 4.56939999999989e-05, 4.566599999999976e-05, 4.567999999999933e-05, 4.593000000000305e-05, 4.5333000000001566e-05, 4.594399999999915e-05, 4.531899999999853e-05, 4.562499999999706e-05, 4.584699999999817e-05, 4.551399999999997e-05, 4.525000000000015e-05, 4.5402999999999416e-05, 4.580599999999893e-05, 4.608299999999885e-05, 4.552800000000301e-05, 4.548600000000083e-05, 4.55000000000004e-05, 4.555600000000215e-05, 4.5681000000002275e-05, 4.602800000000004e-05, 4.558400000000129e-05, 4.5930999999999056e-05, 4.599999999999743e-05, 4.5639000000000096e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.396" endtime="20201117 14:42:28.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.391" endtime="20201117 14:42:28.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.401" endtime="20201117 14:42:28.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.405" endtime="20201117 14:42:28.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.403" endtime="20201117 14:42:28.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.399" endtime="20201117 14:42:28.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.026" endtime="20201117 14:42:28.426"></status>
</kw>
<msg timestamp="20201117 14:42:28.426" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.435" endtime="20201117 14:42:28.453"></status>
</kw>
<msg timestamp="20201117 14:42:28.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.433" endtime="20201117 14:42:28.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.455" endtime="20201117 14:42:28.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.458" endtime="20201117 14:42:28.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.431" endtime="20201117 14:42:28.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.428" endtime="20201117 14:42:28.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.467" endtime="20201117 14:42:28.754"></status>
</kw>
<msg timestamp="20201117 14:42:28.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.466" endtime="20201117 14:42:28.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020767264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.758" endtime="20201117 14:42:28.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.767" endtime="20201117 14:42:28.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.463" endtime="20201117 14:42:28.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.461" endtime="20201117 14:42:28.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.774" level="INFO">${RESULT} = [{'time': 0.020767264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554199999999911e-05, 'source_diff': 4.554199999999911e-05}, {'time': 0.020818278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.770" endtime="20201117 14:42:28.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.787" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:28.775" endtime="20201117 14:42:28.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.792" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.791" endtime="20201117 14:42:28.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.794" level="INFO">VALUE: [4.554199999999911e-05, 4.58199999999985e-05, 4.525000000000015e-05, 4.5472999999997266e-05, 4.583400000000154e-05, 4.576400000000022e-05, 4.5431000000002025e-05, 4.5930999999999056e-05, 4.522200000000101e-05, 4.555499999999921e-05, 4.588899999999688e-05, 4.5402999999999416e-05, 4.552799999999954e-05, 4.5639000000000096e-05, 4.548600000000083e-05, 4.517999999999883e-05, 4.520800000000144e-05, 4.5902999999999916e-05, 4.6111000000001456e-05, 4.594399999999915e-05, 4.5597000000001386e-05, 4.5916999999999486e-05, 4.580499999999946e-05, 4.6083000000002317e-05, 4.5181000000001775e-05, 4.582000000000197e-05, 4.5945000000002095e-05, 4.558400000000129e-05, 4.5138999999999596e-05, 4.6125000000001026e-05, 4.5694999999998376e-05, 4.5611000000000956e-05, 4.5945000000002095e-05, 4.606999999999875e-05, 4.6125000000001026e-05, 4.525000000000015e-05, 4.538800000000037e-05, 4.548600000000083e-05, 4.581899999999903e-05, 4.5375000000000276e-05, 4.605499999999971e-05, 4.536099999999724e-05, 4.6125000000001026e-05, 4.60000000000009e-05, 4.523600000000058e-05, 4.545799999999822e-05, 4.519400000000187e-05, 4.552799999999954e-05, 4.552800000000301e-05, 4.579199999999936e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.793" endtime="20201117 14:42:28.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.788" endtime="20201117 14:42:28.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.798" endtime="20201117 14:42:28.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.802" endtime="20201117 14:42:28.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.800" endtime="20201117 14:42:28.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.796" endtime="20201117 14:42:28.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.427" endtime="20201117 14:42:28.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.024" endtime="20201117 14:42:28.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.023" endtime="20201117 14:42:28.823"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.826" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.834" endtime="20201117 14:42:28.852"></status>
</kw>
<msg timestamp="20201117 14:42:28.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.832" endtime="20201117 14:42:28.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.854" endtime="20201117 14:42:28.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.857" endtime="20201117 14:42:28.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.830" endtime="20201117 14:42:28.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.828" endtime="20201117 14:42:28.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.866" endtime="20201117 14:42:29.153"></status>
</kw>
<msg timestamp="20201117 14:42:29.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.864" endtime="20201117 14:42:29.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.157" endtime="20201117 14:42:29.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.166" endtime="20201117 14:42:29.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.862" endtime="20201117 14:42:29.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.860" endtime="20201117 14:42:29.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.173" level="INFO">${RESULT} = [{'time': 0.022699861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.698600000000233e-05, 'source_diff': 4.698600000000233e-05}, {'time': 0.022748875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:29.169" endtime="20201117 14:42:29.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.188" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:29.174" endtime="20201117 14:42:29.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.193" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.192" endtime="20201117 14:42:29.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.195" level="INFO">VALUE: [4.698600000000233e-05, 4.656900000000325e-05, 4.68199999999995e-05, 4.620800000000244e-05, 4.655500000000021e-05, 4.706999999999975e-05, 4.6430999999999556e-05, 4.6153000000000166e-05, 4.65000000000014e-05, 4.656999999999925e-05, 4.63060000000029e-05, 4.6181000000002775e-05, 4.612499999999756e-05, 4.616600000000026e-05, 4.702700000000157e-05, 4.656999999999925e-05, 4.675000000000165e-05, 4.681900000000003e-05, 4.6875000000001776e-05, 4.679200000000036e-05, 4.699999999999843e-05, 4.658299999999935e-05, 4.679100000000089e-05, 4.6153000000000166e-05, 4.6625000000001526e-05, 4.625000000000115e-05, 4.693000000000058e-05, 4.6139000000000596e-05, 4.648600000000183e-05, 4.643000000000008e-05, 4.6375000000001276e-05, 4.701400000000147e-05, 4.702800000000104e-05, 4.657000000000272e-05, 4.6736999999998086e-05, 4.687499999999831e-05, 4.6667000000000236e-05, 4.6944999999999626e-05, 4.6639000000001096e-05, 4.688899999999788e-05, 4.6903000000000916e-05, 4.706999999999975e-05, 4.6944999999999626e-05, 4.6639000000001096e-05, 4.7153000000001166e-05, 4.656899999999978e-05, 4.6431000000003025e-05, 4.706900000000028e-05, 4.626399999999725e-05, 4.655500000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.194" endtime="20201117 14:42:29.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.189" endtime="20201117 14:42:29.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.199" endtime="20201117 14:42:29.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.203" endtime="20201117 14:42:29.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.201" endtime="20201117 14:42:29.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.197" endtime="20201117 14:42:29.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.826" endtime="20201117 14:42:29.224"></status>
</kw>
<msg timestamp="20201117 14:42:29.224" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.233" endtime="20201117 14:42:29.250"></status>
</kw>
<msg timestamp="20201117 14:42:29.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.231" endtime="20201117 14:42:29.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.252" endtime="20201117 14:42:29.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.255" endtime="20201117 14:42:29.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.228" endtime="20201117 14:42:29.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.226" endtime="20201117 14:42:29.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.264" endtime="20201117 14:42:29.551"></status>
</kw>
<msg timestamp="20201117 14:42:29.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020325806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.262" endtime="20201117 14:42:29.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020325806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.556" endtime="20201117 14:42:29.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.564" endtime="20201117 14:42:29.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.260" endtime="20201117 14:42:29.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.258" endtime="20201117 14:42:29.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.571" level="INFO">${RESULT} = [{'time': 0.020325806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6208999999998446e-05, 'source_diff': 4.6208999999998446e-05}, {'time': 0.020375819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:29.568" endtime="20201117 14:42:29.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:29.572" endtime="20201117 14:42:29.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.589" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.588" endtime="20201117 14:42:29.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.592" level="INFO">VALUE: [4.6208999999998446e-05, 4.698599999999886e-05, 4.708299999999985e-05, 4.625000000000115e-05, 4.637499999999781e-05, 4.704200000000061e-05, 4.655500000000021e-05, 4.651400000000097e-05, 4.6903000000000916e-05, 4.6153000000000166e-05, 4.652800000000054e-05, 4.708299999999985e-05, 4.629199999999986e-05, 4.655599999999968e-05, 4.686099999999874e-05, 4.6319999999999e-05, 4.6445000000002595e-05, 4.625000000000115e-05, 4.6180999999999306e-05, 4.662499999999806e-05, 4.6625000000001526e-05, 4.625000000000115e-05, 4.677700000000132e-05, 4.708399999999932e-05, 4.679200000000036e-05, 4.630599999999943e-05, 4.622199999999854e-05, 4.662499999999806e-05, 4.705500000000071e-05, 4.6416999999999986e-05, 4.676399999999775e-05, 4.697199999999929e-05, 4.625000000000115e-05, 4.694400000000015e-05, 4.63329999999991e-05, 4.684699999999917e-05, 4.706900000000028e-05, 4.6639000000001096e-05, 4.626400000000072e-05, 4.705599999999671e-05, 4.6416999999999986e-05, 4.686200000000168e-05, 4.6875000000001776e-05, 4.6723000000001985e-05, 4.70000000000019e-05, 4.630599999999943e-05, 4.6680999999999806e-05, 4.688899999999788e-05, 4.6931000000000056e-05, 4.674999999999818e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.590" endtime="20201117 14:42:29.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.586" endtime="20201117 14:42:29.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.596" endtime="20201117 14:42:29.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.599" endtime="20201117 14:42:29.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.598" endtime="20201117 14:42:29.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.594" endtime="20201117 14:42:29.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.225" endtime="20201117 14:42:29.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.824" endtime="20201117 14:42:29.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.823" endtime="20201117 14:42:29.620"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.623" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.631" endtime="20201117 14:42:29.649"></status>
</kw>
<msg timestamp="20201117 14:42:29.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.630" endtime="20201117 14:42:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.655" endtime="20201117 14:42:29.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.658" endtime="20201117 14:42:29.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.627" endtime="20201117 14:42:29.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.625" endtime="20201117 14:42:29.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.669" endtime="20201117 14:42:29.956"></status>
</kw>
<msg timestamp="20201117 14:42:29.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.668" endtime="20201117 14:42:29.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.960" endtime="20201117 14:42:29.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.969" endtime="20201117 14:42:29.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.665" endtime="20201117 14:42:29.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.663" endtime="20201117 14:42:29.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.976" level="INFO">${RESULT} = [{'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.745800000000022e-05, 'source_diff': 4.745800000000022e-05}, {'time': 0.022703375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:29.973" endtime="20201117 14:42:29.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.990" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:29.977" endtime="20201117 14:42:29.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.994" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.993" endtime="20201117 14:42:29.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.998" level="INFO">VALUE: [4.745800000000022e-05, 4.71940000000004e-05, 4.798599999999986e-05, 4.780600000000093e-05, 4.7194999999999876e-05, 4.780600000000093e-05, 4.757000000000025e-05, 4.776400000000222e-05, 4.797200000000029e-05, 4.7389000000001846e-05, 4.793099999999759e-05, 4.7945000000000626e-05, 4.807000000000075e-05, 4.759799999999939e-05, 4.7694999999996907e-05, 4.795800000000072e-05, 4.770800000000047e-05, 4.731900000000053e-05, 4.804099999999867e-05, 4.752799999999807e-05, 4.731900000000053e-05, 4.723600000000258e-05, 4.797200000000029e-05, 4.7611000000002957e-05, 4.726400000000172e-05, 4.780500000000146e-05, 4.806900000000128e-05, 4.711099999999899e-05, 4.806899999999781e-05, 4.756899999999731e-05, 4.776399999999875e-05, 4.7944999999997157e-05, 4.7194999999999876e-05, 4.799999999999943e-05, 4.763899999999863e-05, 4.722199999999954e-05, 4.727799999999782e-05, 4.7695000000000376e-05, 4.812499999999956e-05, 4.78330000000006e-05, 4.757000000000025e-05, 4.7417000000000986e-05, 4.780500000000146e-05, 4.804099999999867e-05, 4.736099999999924e-05, 4.776399999999875e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.749999999999893e-05, 4.806899999999781e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.996" endtime="20201117 14:42:29.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.991" endtime="20201117 14:42:29.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.001" endtime="20201117 14:42:30.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.005" endtime="20201117 14:42:30.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.003" endtime="20201117 14:42:30.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.999" endtime="20201117 14:42:30.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.624" endtime="20201117 14:42:30.025"></status>
</kw>
<msg timestamp="20201117 14:42:30.026" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.034" endtime="20201117 14:42:30.052"></status>
</kw>
<msg timestamp="20201117 14:42:30.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.033" endtime="20201117 14:42:30.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.054" endtime="20201117 14:42:30.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.056" endtime="20201117 14:42:30.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.030" endtime="20201117 14:42:30.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.028" endtime="20201117 14:42:30.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.066" endtime="20201117 14:42:30.352"></status>
</kw>
<msg timestamp="20201117 14:42:30.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02009275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:30.064" endtime="20201117 14:42:30.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02009275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:30.357" endtime="20201117 14:42:30.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.365" endtime="20201117 14:42:30.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.061" endtime="20201117 14:42:30.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.059" endtime="20201117 14:42:30.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.372" level="INFO">${RESULT} = [{'time': 0.02009275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.822200000000054e-05, 'source_diff': 4.822200000000054e-05}, {'time': 0.020143722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:30.369" endtime="20201117 14:42:30.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.386" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:30.373" endtime="20201117 14:42:30.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.391" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.390" endtime="20201117 14:42:30.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.394" level="INFO">VALUE: [4.822200000000054e-05, 4.758300000000035e-05, 4.751400000000197e-05, 4.745800000000022e-05, 4.7181000000000306e-05, 4.775000000000265e-05, 4.745800000000022e-05, 4.729200000000086e-05, 4.78330000000006e-05, 4.774999999999918e-05, 4.812499999999956e-05, 4.791699999999802e-05, 4.794400000000115e-05, 4.7695000000000376e-05, 4.757000000000025e-05, 4.774999999999918e-05, 4.749999999999893e-05, 4.7181000000000306e-05, 4.786199999999921e-05, 4.787499999999931e-05, 4.795800000000072e-05, 4.737499999999881e-05, 4.805499999999824e-05, 4.71940000000004e-05, 4.775000000000265e-05, 4.731900000000053e-05, 4.7889000000002346e-05, 4.774999999999918e-05, 4.726400000000172e-05, 4.759699999999992e-05, 4.774999999999918e-05, 4.729200000000086e-05, 4.780600000000093e-05, 4.726399999999825e-05, 4.805600000000118e-05, 4.761099999999949e-05, 4.7125000000002026e-05, 4.732e-05, 4.7597000000003387e-05, 4.7375000000002276e-05, 4.729200000000086e-05, 4.761099999999949e-05, 4.774999999999918e-05, 4.7722999999999516e-05, 4.759799999999939e-05, 4.805600000000118e-05, 4.765199999999872e-05, 4.730500000000096e-05, 4.731899999999706e-05, 4.809700000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.392" endtime="20201117 14:42:30.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.387" endtime="20201117 14:42:30.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.397" endtime="20201117 14:42:30.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.401" endtime="20201117 14:42:30.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.399" endtime="20201117 14:42:30.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.395" endtime="20201117 14:42:30.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.026" endtime="20201117 14:42:30.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.622" endtime="20201117 14:42:30.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.621" endtime="20201117 14:42:30.422"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.424" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.433" endtime="20201117 14:42:30.451"></status>
</kw>
<msg timestamp="20201117 14:42:30.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.431" endtime="20201117 14:42:30.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.453" endtime="20201117 14:42:30.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.455" endtime="20201117 14:42:30.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.429" endtime="20201117 14:42:30.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.426" endtime="20201117 14:42:30.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.465" endtime="20201117 14:42:30.752"></status>
</kw>
<msg timestamp="20201117 14:42:30.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.463" endtime="20201117 14:42:30.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.756" endtime="20201117 14:42:30.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.765" endtime="20201117 14:42:30.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.460" endtime="20201117 14:42:30.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.459" endtime="20201117 14:42:30.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.772" level="INFO">${RESULT} = [{'time': 0.022820389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9014e-05, 'source_diff': 4.9014e-05}, {'time': 0.022871417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8209000000000446e...</msg>
<status status="PASS" starttime="20201117 14:42:30.768" endtime="20201117 14:42:30.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.787" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:30.773" endtime="20201117 14:42:30.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.792" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.791" endtime="20201117 14:42:30.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.794" level="INFO">VALUE: [4.9014e-05, 4.8209000000000446e-05, 4.898600000000086e-05, 4.849999999999993e-05, 4.8139000000002596e-05, 4.8945000000001626e-05, 4.826400000000272e-05, 4.893000000000258e-05, 4.894400000000215e-05, 4.881899999999856e-05, 4.876399999999975e-05, 4.86940000000019e-05, 4.822200000000054e-05, 4.817999999999836e-05, 4.824999999999968e-05, 4.827799999999882e-05, 4.8707999999998e-05, 4.892999999999911e-05, 4.881899999999856e-05, 4.854200000000211e-05, 4.8139000000002596e-05, 4.849999999999993e-05, 4.900000000000043e-05, 4.8973000000000766e-05, 4.837499999999981e-05, 4.830600000000143e-05, 4.891699999999902e-05, 4.9014e-05, 4.857000000000125e-05, 4.859699999999745e-05, 4.908400000000132e-05, 4.912500000000056e-05, 4.908300000000185e-05, 4.8737000000000086e-05, 4.826299999999978e-05, 4.863899999999963e-05, 4.894399999999868e-05, 4.900000000000043e-05, 4.854200000000211e-05, 4.844400000000165e-05, 4.90270000000001e-05, 4.824999999999968e-05, 4.849999999999993e-05, 4.844399999999818e-05, 4.904199999999914e-05, 4.891699999999902e-05, 4.841699999999852e-05, 4.8931000000002056e-05, 4.848600000000036e-05, 4.8473000000000266e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.793" endtime="20201117 14:42:30.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.788" endtime="20201117 14:42:30.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.798" endtime="20201117 14:42:30.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.801" endtime="20201117 14:42:30.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.800" endtime="20201117 14:42:30.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.796" endtime="20201117 14:42:30.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.425" endtime="20201117 14:42:30.822"></status>
</kw>
<msg timestamp="20201117 14:42:30.822" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.831" endtime="20201117 14:42:30.849"></status>
</kw>
<msg timestamp="20201117 14:42:30.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.829" endtime="20201117 14:42:30.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.850" endtime="20201117 14:42:30.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.853" endtime="20201117 14:42:30.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.827" endtime="20201117 14:42:30.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.824" endtime="20201117 14:42:30.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.862" endtime="20201117 14:42:31.149"></status>
</kw>
<msg timestamp="20201117 14:42:31.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020008889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.861" endtime="20201117 14:42:31.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020008889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.154" endtime="20201117 14:42:31.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.162" endtime="20201117 14:42:31.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.858" endtime="20201117 14:42:31.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.856" endtime="20201117 14:42:31.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.169" level="INFO">${RESULT} = [{'time': 0.020057681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.879200000000236e-05, 'source_diff': 4.879200000000236e-05}, {'time': 0.020110667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.166" endtime="20201117 14:42:31.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.183" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:31.170" endtime="20201117 14:42:31.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.188" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.187" endtime="20201117 14:42:31.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.190" level="INFO">VALUE: [4.879200000000236e-05, 4.855599999999821e-05, 4.900000000000043e-05, 4.854199999999864e-05, 4.86940000000019e-05, 4.876399999999975e-05, 4.877699999999985e-05, 4.818000000000183e-05, 4.891699999999902e-05, 4.867999999999886e-05, 4.869399999999843e-05, 4.9014e-05, 4.8417000000001986e-05, 4.876399999999975e-05, 4.862500000000006e-05, 4.866699999999877e-05, 4.831899999999806e-05, 4.8681000000001806e-05, 4.829199999999839e-05, 4.863899999999963e-05, 4.857000000000125e-05, 4.816699999999827e-05, 4.88200000000015e-05, 4.823600000000011e-05, 4.888899999999988e-05, 4.873600000000061e-05, 4.8209000000000446e-05, 4.8417000000001986e-05, 4.862500000000006e-05, 4.826399999999925e-05, 4.81529999999987e-05, 4.895800000000172e-05, 4.869399999999843e-05, 4.900000000000043e-05, 4.845800000000122e-05, 4.844400000000165e-05, 4.836100000000024e-05, 4.824999999999968e-05, 4.81529999999987e-05, 4.855499999999874e-05, 4.840299999999895e-05, 4.8139000000002596e-05, 4.895800000000172e-05, 4.905499999999924e-05, 4.836100000000024e-05, 4.852799999999907e-05, 4.909699999999795e-05, 4.899999999999696e-05, 4.837499999999981e-05, 4.875000000000018e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.189" endtime="20201117 14:42:31.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.184" endtime="20201117 14:42:31.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.194" endtime="20201117 14:42:31.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.197" endtime="20201117 14:42:31.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.195" endtime="20201117 14:42:31.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.192" endtime="20201117 14:42:31.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.823" endtime="20201117 14:42:31.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.423" endtime="20201117 14:42:31.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.422" endtime="20201117 14:42:31.218"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.221" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.229" endtime="20201117 14:42:31.248"></status>
</kw>
<msg timestamp="20201117 14:42:31.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.228" endtime="20201117 14:42:31.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.250" endtime="20201117 14:42:31.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.252" endtime="20201117 14:42:31.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.225" endtime="20201117 14:42:31.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.223" endtime="20201117 14:42:31.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.262" endtime="20201117 14:42:31.549"></status>
</kw>
<msg timestamp="20201117 14:42:31.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.260" endtime="20201117 14:42:31.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.553" endtime="20201117 14:42:31.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.562" endtime="20201117 14:42:31.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.257" endtime="20201117 14:42:31.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.255" endtime="20201117 14:42:31.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.569" level="INFO">${RESULT} = [{'time': 0.022717931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.954199999999964e-05, 'source_diff': 4.954199999999964e-05}, {'time': 0.022772917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.565" endtime="20201117 14:42:31.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.582" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:31.570" endtime="20201117 14:42:31.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.587" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.586" endtime="20201117 14:42:31.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.590" level="INFO">VALUE: [4.954199999999964e-05, 4.961100000000149e-05, 5.006999999999928e-05, 4.9401999999997004e-05, 4.981899999999956e-05, 4.956899999999931e-05, 4.98469999999987e-05, 4.987500000000131e-05, 4.937500000000081e-05, 4.937500000000081e-05, 5.006899999999981e-05, 4.988900000000088e-05, 4.998600000000186e-05, 4.959699999999845e-05, 5.012500000000156e-05, 4.9417000000002986e-05, 4.91529999999997e-05, 4.9707999999999e-05, 4.931899999999906e-05, 5.006999999999928e-05, 4.994499999999916e-05, 5.000000000000143e-05, 4.988900000000088e-05, 4.98339999999986e-05, 4.958399999999835e-05, 4.911100000000099e-05, 4.913900000000013e-05, 4.965200000000072e-05, 4.917999999999936e-05, 4.977800000000032e-05, 4.987499999999784e-05, 5.008299999999938e-05, 5.00270000000011e-05, 4.969399999999943e-05, 4.961100000000149e-05, 4.994499999999916e-05, 4.96530000000002e-05, 4.975000000000118e-05, 4.991700000000002e-05, 4.923600000000111e-05, 4.995799999999925e-05, 4.954199999999964e-05, 4.994499999999916e-05, 4.925000000000068e-05, 4.940299999999995e-05, 4.976400000000075e-05, 4.979199999999989e-05, 4.959799999999792e-05, 4.998599999999839e-05, 4.918099999999884e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.588" endtime="20201117 14:42:31.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.583" endtime="20201117 14:42:31.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.593" endtime="20201117 14:42:31.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.597" endtime="20201117 14:42:31.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.595" endtime="20201117 14:42:31.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.591" endtime="20201117 14:42:31.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.221" endtime="20201117 14:42:31.617"></status>
</kw>
<msg timestamp="20201117 14:42:31.618" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.626" endtime="20201117 14:42:31.644"></status>
</kw>
<msg timestamp="20201117 14:42:31.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.625" endtime="20201117 14:42:31.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.646" endtime="20201117 14:42:31.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.649" endtime="20201117 14:42:31.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.622" endtime="20201117 14:42:31.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.620" endtime="20201117 14:42:31.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.659" endtime="20201117 14:42:31.947"></status>
</kw>
<msg timestamp="20201117 14:42:31.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.657" endtime="20201117 14:42:31.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.951" endtime="20201117 14:42:31.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.960" endtime="20201117 14:42:31.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.654" endtime="20201117 14:42:31.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.652" endtime="20201117 14:42:31.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.967" level="INFO">${RESULT} = [{'time': 0.020070208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973599999999814e-05, 'source_diff': 4.973599999999814e-05}, {'time': 0.020122236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.963" endtime="20201117 14:42:31.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.980" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:31.968" endtime="20201117 14:42:31.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.985" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.984" endtime="20201117 14:42:31.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.988" level="INFO">VALUE: [4.973599999999814e-05, 4.976400000000075e-05, 4.95140000000005e-05, 5.012499999999809e-05, 4.952800000000007e-05, 4.980499999999999e-05, 5.005599999999971e-05, 4.940299999999995e-05, 4.9431000000002556e-05, 4.931900000000253e-05, 4.956899999999931e-05, 4.927799999999982e-05, 4.963899999999716e-05, 4.954199999999964e-05, 4.968099999999934e-05, 4.998599999999839e-05, 4.91529999999997e-05, 4.913900000000013e-05, 4.986099999999827e-05, 4.912500000000056e-05, 4.930599999999896e-05, 4.976400000000075e-05, 4.9901999999997504e-05, 4.950000000000093e-05, 5.006899999999981e-05, 4.936099999999777e-05, 4.986100000000174e-05, 4.940299999999995e-05, 4.998600000000186e-05, 4.986100000000174e-05, 4.940299999999995e-05, 5.011100000000199e-05, 4.999999999999796e-05, 4.933299999999863e-05, 4.968099999999934e-05, 4.954199999999964e-05, 4.95140000000005e-05, 4.961099999999802e-05, 4.969399999999943e-05, 4.995899999999873e-05, 4.962500000000106e-05, 4.925000000000068e-05, 5.012500000000156e-05, 4.975000000000118e-05, 4.9945000000002626e-05, 4.976400000000075e-05, 4.923600000000111e-05, 4.988900000000088e-05, 4.993000000000011e-05, 4.955499999999974e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.986" endtime="20201117 14:42:31.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.981" endtime="20201117 14:42:31.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.991" endtime="20201117 14:42:31.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.995" endtime="20201117 14:42:32.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.993" endtime="20201117 14:42:32.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.989" endtime="20201117 14:42:32.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.618" endtime="20201117 14:42:32.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.219" endtime="20201117 14:42:32.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.219" endtime="20201117 14:42:32.016"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.019" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.028" endtime="20201117 14:42:32.046"></status>
</kw>
<msg timestamp="20201117 14:42:32.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.026" endtime="20201117 14:42:32.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.047" endtime="20201117 14:42:32.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.050" endtime="20201117 14:42:32.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.023" endtime="20201117 14:42:32.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.021" endtime="20201117 14:42:32.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.059" endtime="20201117 14:42:32.346"></status>
</kw>
<msg timestamp="20201117 14:42:32.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023322861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.058" endtime="20201117 14:42:32.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023322861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.350" endtime="20201117 14:42:32.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.359" endtime="20201117 14:42:32.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.055" endtime="20201117 14:42:32.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.053" endtime="20201117 14:42:32.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.366" level="INFO">${RESULT} = [{'time': 0.023322861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.090300000000145e-05, 'source_diff': 5.090300000000145e-05}, {'time': 0.023375861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:32.362" endtime="20201117 14:42:32.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.381" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:32.367" endtime="20201117 14:42:32.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.386" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.385" endtime="20201117 14:42:32.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.388" level="INFO">VALUE: [5.090300000000145e-05, 5.020800000000297e-05, 5.054200000000064e-05, 5.101399999999853e-05, 5.018000000000036e-05, 5.0181000000003306e-05, 5.027799999999735e-05, 5.051399999999803e-05, 5.030599999999996e-05, 5.074999999999871e-05, 5.018099999999984e-05, 5.05270000000016e-05, 5.09729999999993e-05, 5.031999999999953e-05, 5.018099999999984e-05, 5.03339999999991e-05, 5.066700000000077e-05, 5.0901999999998504e-05, 5.105599999999724e-05, 5.095800000000025e-05, 5.081899999999709e-05, 5.081900000000056e-05, 5.026399999999778e-05, 5.0179999999996894e-05, 5.013900000000113e-05, 5.074999999999871e-05, 5.087499999999884e-05, 5.090300000000145e-05, 5.054199999999717e-05, 5.08469999999997e-05, 5.055500000000074e-05, 5.088900000000188e-05, 5.023599999999864e-05, 5.052800000000107e-05, 5.094500000000016e-05, 5.069499999999991e-05, 5.030599999999996e-05, 5.048599999999889e-05, 5.111099999999952e-05, 5.05140000000015e-05, 5.066700000000077e-05, 5.03469999999992e-05, 5.099999999999896e-05, 5.099999999999896e-05, 5.0415999999997574e-05, 5.055500000000074e-05, 5.045799999999975e-05, 5.108300000000038e-05, 5.083300000000013e-05, 5.0665999999997824e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.387" endtime="20201117 14:42:32.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.382" endtime="20201117 14:42:32.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.391" endtime="20201117 14:42:32.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.395" endtime="20201117 14:42:32.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.393" endtime="20201117 14:42:32.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.390" endtime="20201117 14:42:32.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.019" endtime="20201117 14:42:32.416"></status>
</kw>
<msg timestamp="20201117 14:42:32.416" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.425" endtime="20201117 14:42:32.443"></status>
</kw>
<msg timestamp="20201117 14:42:32.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.423" endtime="20201117 14:42:32.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.445" endtime="20201117 14:42:32.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.448" endtime="20201117 14:42:32.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.421" endtime="20201117 14:42:32.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.418" endtime="20201117 14:42:32.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.457" endtime="20201117 14:42:32.749"></status>
</kw>
<msg timestamp="20201117 14:42:32.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.456" endtime="20201117 14:42:32.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.753" endtime="20201117 14:42:32.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.761" endtime="20201117 14:42:32.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.453" endtime="20201117 14:42:32.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.451" endtime="20201117 14:42:32.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.768" level="INFO">${RESULT} = [{'time': 0.020628653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.119500000000041e-05, 'source_diff': 5.119500000000041e-05}, {'time': 0.020681625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:32.765" endtime="20201117 14:42:32.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.782" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:32.769" endtime="20201117 14:42:32.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.787" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.786" endtime="20201117 14:42:32.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.789" level="INFO">VALUE: [5.119500000000041e-05, 5.080599999999699e-05, 5.076400000000175e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.016700000000027e-05, 5.095899999999973e-05, 5.056999999999978e-05, 5.069499999999991e-05, 5.0472999999998797e-05, 5.0888000000002404e-05, 5.0887999999998934e-05, 5.023599999999864e-05, 5.077699999999838e-05, 5.024999999999821e-05, 5.074999999999871e-05, 5.0708e-05, 5.069400000000043e-05, 5.03469999999992e-05, 5.06530000000012e-05, 5.026399999999778e-05, 5.049999999999846e-05, 5.111099999999952e-05, 5.069400000000043e-05, 5.01530000000007e-05, 5.111099999999952e-05, 5.101399999999853e-05, 5.037499999999834e-05, 5.104199999999767e-05, 5.024999999999821e-05, 5.05279999999976e-05, 5.102699999999863e-05, 5.024999999999821e-05, 5.101299999999906e-05, 5.018099999999984e-05, 5.0887999999998934e-05, 5.066700000000077e-05, 5.033299999999963e-05, 5.083300000000013e-05, 5.073599999999914e-05, 5.062499999999859e-05, 5.095800000000025e-05, 5.033299999999963e-05, 5.02079999999995e-05, 5.029200000000039e-05, 5.062499999999859e-05, 5.108300000000038e-05, 5.086099999999927e-05, 5.112500000000256e-05, 5.058399999999935e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.788" endtime="20201117 14:42:32.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.783" endtime="20201117 14:42:32.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.793" endtime="20201117 14:42:32.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.797" endtime="20201117 14:42:32.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.795" endtime="20201117 14:42:32.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.791" endtime="20201117 14:42:32.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.417" endtime="20201117 14:42:32.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.017" endtime="20201117 14:42:32.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.016" endtime="20201117 14:42:32.818"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.820" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.829" endtime="20201117 14:42:32.847"></status>
</kw>
<msg timestamp="20201117 14:42:32.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.827" endtime="20201117 14:42:32.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.849" endtime="20201117 14:42:32.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.852" endtime="20201117 14:42:32.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.825" endtime="20201117 14:42:32.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.823" endtime="20201117 14:42:32.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.861" endtime="20201117 14:42:33.149"></status>
</kw>
<msg timestamp="20201117 14:42:33.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.859" endtime="20201117 14:42:33.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.153" endtime="20201117 14:42:33.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.161" endtime="20201117 14:42:33.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.857" endtime="20201117 14:42:33.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.855" endtime="20201117 14:42:33.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.168" level="INFO">${RESULT} = [{'time': 0.022710097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15409999999987e-05, 'source_diff': 5.15409999999987e-05}, {'time': 0.022765111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:33.165" endtime="20201117 14:42:33.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.182" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:33.169" endtime="20201117 14:42:33.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.187" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.186" endtime="20201117 14:42:33.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.189" level="INFO">VALUE: [5.15409999999987e-05, 5.186100000000027e-05, 5.15279999999986e-05, 5.131899999999759e-05, 5.162499999999959e-05, 5.197200000000082e-05, 5.156900000000131e-05, 5.141699999999805e-05, 5.183399999999713e-05, 5.149999999999946e-05, 5.191700000000202e-05, 5.2165999999999324e-05, 5.158400000000035e-05, 5.180599999999799e-05, 5.16669999999983e-05, 5.119400000000093e-05, 5.138900000000238e-05, 5.168099999999787e-05, 5.177699999999938e-05, 5.195800000000125e-05, 5.162500000000306e-05, 5.123599999999964e-05, 5.174999999999971e-05, 5.124999999999921e-05, 5.163899999999916e-05, 5.1429999999998144e-05, 5.151399999999903e-05, 5.144400000000118e-05, 5.1887999999999934e-05, 5.140299999999848e-05, 5.198600000000039e-05, 5.205599999999824e-05, 5.215299999999923e-05, 5.197200000000082e-05, 5.127799999999835e-05, 5.169500000000091e-05, 5.141699999999805e-05, 5.136099999999977e-05, 5.140299999999848e-05, 5.168099999999787e-05, 5.131999999999706e-05, 5.187499999999984e-05, 5.1429999999998144e-05, 5.131999999999706e-05, 5.1943999999998214e-05, 5.176399999999928e-05, 5.151399999999903e-05, 5.162499999999959e-05, 5.191699999999855e-05, 5.119400000000093e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.188" endtime="20201117 14:42:33.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.183" endtime="20201117 14:42:33.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.193" endtime="20201117 14:42:33.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.197" endtime="20201117 14:42:33.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.195" endtime="20201117 14:42:33.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.191" endtime="20201117 14:42:33.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.821" endtime="20201117 14:42:33.218"></status>
</kw>
<msg timestamp="20201117 14:42:33.218" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.226" endtime="20201117 14:42:33.244"></status>
</kw>
<msg timestamp="20201117 14:42:33.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.225" endtime="20201117 14:42:33.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.245" endtime="20201117 14:42:33.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.248" endtime="20201117 14:42:33.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.222" endtime="20201117 14:42:33.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.220" endtime="20201117 14:42:33.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.257" endtime="20201117 14:42:33.544"></status>
</kw>
<msg timestamp="20201117 14:42:33.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.255" endtime="20201117 14:42:33.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.548" endtime="20201117 14:42:33.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.557" endtime="20201117 14:42:33.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.253" endtime="20201117 14:42:33.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.251" endtime="20201117 14:42:33.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.564" level="INFO">${RESULT} = [{'time': 0.019601403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.205599999999824e-05, 'source_diff': 5.205599999999824e-05}, {'time': 0.019657417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.560" endtime="20201117 14:42:33.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.577" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:33.565" endtime="20201117 14:42:33.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.582" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.581" endtime="20201117 14:42:33.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.585" level="INFO">VALUE: [5.205599999999824e-05, 5.201399999999953e-05, 5.15140000000025e-05, 5.132000000000053e-05, 5.131999999999706e-05, 5.194499999999769e-05, 5.2138000000000184e-05, 5.1693999999997964e-05, 5.21530000000027e-05, 5.162500000000306e-05, 5.187499999999984e-05, 5.127800000000182e-05, 5.136099999999977e-05, 5.150000000000293e-05, 5.145800000000075e-05, 5.141700000000152e-05, 5.188899999999941e-05, 5.161100000000002e-05, 5.205599999999824e-05, 5.131999999999706e-05, 5.137499999999934e-05, 5.205599999999824e-05, 5.198600000000039e-05, 5.143099999999762e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.119500000000041e-05, 5.138900000000238e-05, 5.168099999999787e-05, 5.174999999999971e-05, 5.169400000000143e-05, 5.187499999999984e-05, 5.155499999999827e-05, 5.190299999999898e-05, 5.11669999999978e-05, 5.16530000000022e-05, 5.187499999999984e-05, 5.144400000000118e-05, 5.138899999999891e-05, 5.133300000000063e-05, 5.130499999999802e-05, 5.191699999999855e-05, 5.21530000000027e-05, 5.161100000000002e-05, 5.183300000000113e-05, 5.198600000000039e-05, 5.122299999999955e-05, 5.183399999999713e-05, 5.143099999999762e-05, 5.162499999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.583" endtime="20201117 14:42:33.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.578" endtime="20201117 14:42:33.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.588" endtime="20201117 14:42:33.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.592" endtime="20201117 14:42:33.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.590" endtime="20201117 14:42:33.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.587" endtime="20201117 14:42:33.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.218" endtime="20201117 14:42:33.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.819" endtime="20201117 14:42:33.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.818" endtime="20201117 14:42:33.613"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.616" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.624" endtime="20201117 14:42:33.643"></status>
</kw>
<msg timestamp="20201117 14:42:33.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.623" endtime="20201117 14:42:33.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.644" endtime="20201117 14:42:33.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.648" endtime="20201117 14:42:33.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.620" endtime="20201117 14:42:33.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.618" endtime="20201117 14:42:33.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.659" endtime="20201117 14:42:33.944"></status>
</kw>
<msg timestamp="20201117 14:42:33.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.657" endtime="20201117 14:42:33.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.949" endtime="20201117 14:42:33.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.957" endtime="20201117 14:42:33.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.655" endtime="20201117 14:42:33.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.653" endtime="20201117 14:42:33.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.964" level="INFO">${RESULT} = [{'time': 0.022771264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.275000000000071e-05, 'source_diff': 5.275000000000071e-05}, {'time': 0.022827264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.961" endtime="20201117 14:42:33.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:33.965" endtime="20201117 14:42:33.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.984" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.983" endtime="20201117 14:42:33.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.987" level="INFO">VALUE: [5.275000000000071e-05, 5.276400000000028e-05, 5.230599999999849e-05, 5.216700000000227e-05, 5.281999999999856e-05, 5.211100000000052e-05, 5.218100000000184e-05, 5.259799999999745e-05, 5.233399999999763e-05, 5.218099999999837e-05, 5.250000000000046e-05, 5.3138000000001184e-05, 5.2638000000000684e-05, 5.280600000000246e-05, 5.2665999999999824e-05, 5.2971999999998354e-05, 5.277799999999985e-05, 5.308299999999891e-05, 5.2929999999999644e-05, 5.215299999999923e-05, 5.2429999999999144e-05, 5.308299999999891e-05, 5.2957999999998784e-05, 5.243100000000209e-05, 5.2943999999999214e-05, 5.245800000000175e-05, 5.25279999999996e-05, 5.229200000000239e-05, 5.251400000000003e-05, 5.227799999999935e-05, 5.295899999999826e-05, 5.233399999999763e-05, 5.250000000000046e-05, 5.257000000000178e-05, 5.294400000000268e-05, 5.2138000000000184e-05, 5.248600000000089e-05, 5.280599999999899e-05, 5.233299999999816e-05, 5.226399999999978e-05, 5.236100000000077e-05, 5.308299999999891e-05, 5.2665999999999824e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.2693999999998964e-05, 5.287499999999737e-05, 5.276400000000028e-05, 5.229200000000239e-05, 5.245800000000175e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.985" endtime="20201117 14:42:33.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.980" endtime="20201117 14:42:33.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.991" endtime="20201117 14:42:33.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.994" endtime="20201117 14:42:34.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.993" endtime="20201117 14:42:34.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.989" endtime="20201117 14:42:34.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.616" endtime="20201117 14:42:34.015"></status>
</kw>
<msg timestamp="20201117 14:42:34.015" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.024" endtime="20201117 14:42:34.042"></status>
</kw>
<msg timestamp="20201117 14:42:34.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.022" endtime="20201117 14:42:34.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.043" endtime="20201117 14:42:34.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.046" endtime="20201117 14:42:34.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.019" endtime="20201117 14:42:34.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.017" endtime="20201117 14:42:34.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.055" endtime="20201117 14:42:34.343"></status>
</kw>
<msg timestamp="20201117 14:42:34.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.054" endtime="20201117 14:42:34.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.348" endtime="20201117 14:42:34.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.356" endtime="20201117 14:42:34.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.051" endtime="20201117 14:42:34.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.049" endtime="20201117 14:42:34.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.363" level="INFO">${RESULT} = [{'time': 0.020115486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.251400000000003e-05, 'source_diff': 5.251400000000003e-05}, {'time': 0.020170486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:34.360" endtime="20201117 14:42:34.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.377" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:34.364" endtime="20201117 14:42:34.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.382" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.381" endtime="20201117 14:42:34.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.385" level="INFO">VALUE: [5.251400000000003e-05, 5.283300000000213e-05, 5.305499999999977e-05, 5.291699999999955e-05, 5.213899999999966e-05, 5.283299999999866e-05, 5.2999999999997494e-05, 5.22080000000015e-05, 5.287500000000084e-05, 5.213899999999966e-05, 5.225000000000021e-05, 5.23340000000011e-05, 5.220899999999751e-05, 5.232000000000153e-05, 5.225000000000021e-05, 5.255599999999874e-05, 5.237500000000034e-05, 5.256999999999831e-05, 5.3013999999997063e-05, 5.288900000000041e-05, 5.2429999999999144e-05, 5.256899999999884e-05, 5.2957999999998784e-05, 5.222200000000107e-05, 5.237499999999687e-05, 5.2708000000002e-05, 5.2457999999998284e-05, 5.277799999999985e-05, 5.263900000000016e-05, 5.283300000000213e-05, 5.218000000000236e-05, 5.2693999999998964e-05, 5.245800000000175e-05, 5.237500000000034e-05, 5.276400000000028e-05, 5.236100000000077e-05, 5.281999999999856e-05, 5.275000000000071e-05, 5.313900000000066e-05, 5.261100000000102e-05, 5.229199999999892e-05, 5.212500000000009e-05, 5.275000000000071e-05, 5.308299999999891e-05, 5.294400000000268e-05, 5.283299999999866e-05, 5.225000000000021e-05, 5.306899999999934e-05, 5.250000000000046e-05, 5.215299999999923e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.383" endtime="20201117 14:42:34.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.378" endtime="20201117 14:42:34.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.388" endtime="20201117 14:42:34.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.392" endtime="20201117 14:42:34.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.390" endtime="20201117 14:42:34.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.386" endtime="20201117 14:42:34.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.016" endtime="20201117 14:42:34.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.614" endtime="20201117 14:42:34.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.614" endtime="20201117 14:42:34.413"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.415" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.424" endtime="20201117 14:42:34.442"></status>
</kw>
<msg timestamp="20201117 14:42:34.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.422" endtime="20201117 14:42:34.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.444" endtime="20201117 14:42:34.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.446" endtime="20201117 14:42:34.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.420" endtime="20201117 14:42:34.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.417" endtime="20201117 14:42:34.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.456" endtime="20201117 14:42:34.745"></status>
</kw>
<msg timestamp="20201117 14:42:34.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.454" endtime="20201117 14:42:34.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.749" endtime="20201117 14:42:34.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.758" endtime="20201117 14:42:34.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.451" endtime="20201117 14:42:34.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.450" endtime="20201117 14:42:34.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.765" level="INFO">${RESULT} = [{'time': 0.022693847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3707999999999534e-05, 'source_diff': 5.3707999999999534e-05}, {'time': 0.022752861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:34.762" endtime="20201117 14:42:34.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.779" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:34.766" endtime="20201117 14:42:34.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.784" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.783" endtime="20201117 14:42:34.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.786" level="INFO">VALUE: [5.3707999999999534e-05, 5.3944000000000214e-05, 5.359699999999898e-05, 5.387500000000184e-05, 5.361099999999855e-05, 5.331899999999959e-05, 5.393100000000012e-05, 5.361100000000202e-05, 5.40280000000011e-05, 5.413899999999819e-05, 5.369499999999944e-05, 5.380599999999999e-05, 5.384800000000217e-05, 5.383399999999913e-05, 5.3735999999998674e-05, 5.327800000000035e-05, 5.344500000000266e-05, 5.3930000000000644e-05, 5.318099999999937e-05, 5.356899999999984e-05, 5.3749999999998244e-05, 5.3944000000000214e-05, 5.350000000000146e-05, 5.3499999999997994e-05, 5.350000000000146e-05, 5.3693999999999964e-05, 5.386100000000227e-05, 5.337500000000134e-05, 5.323600000000164e-05, 5.318099999999937e-05, 5.406999999999981e-05, 5.3693999999999964e-05, 5.369499999999944e-05, 5.394499999999969e-05, 5.38609999999988e-05, 5.375000000000171e-05, 5.348600000000189e-05, 5.3235999999998174e-05, 5.363899999999769e-05, 5.406900000000034e-05, 5.3999999999998494e-05, 5.3763999999997814e-05, 5.412500000000209e-05, 5.362500000000159e-05, 5.3693999999999964e-05, 5.3443999999999714e-05, 5.325000000000121e-05, 5.340300000000048e-05, 5.3680000000000394e-05, 5.387499999999837e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.785" endtime="20201117 14:42:34.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.780" endtime="20201117 14:42:34.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.790" endtime="20201117 14:42:34.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.793" endtime="20201117 14:42:34.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.792" endtime="20201117 14:42:34.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.788" endtime="20201117 14:42:34.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.416" endtime="20201117 14:42:34.814"></status>
</kw>
<msg timestamp="20201117 14:42:34.814" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.823" endtime="20201117 14:42:34.841"></status>
</kw>
<msg timestamp="20201117 14:42:34.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.821" endtime="20201117 14:42:34.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.843" endtime="20201117 14:42:34.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.845" endtime="20201117 14:42:34.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.819" endtime="20201117 14:42:34.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.817" endtime="20201117 14:42:34.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.855" endtime="20201117 14:42:35.144"></status>
</kw>
<msg timestamp="20201117 14:42:35.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.853" endtime="20201117 14:42:35.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.148" endtime="20201117 14:42:35.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.157" endtime="20201117 14:42:35.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.850" endtime="20201117 14:42:35.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.849" endtime="20201117 14:42:35.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.164" level="INFO">${RESULT} = [{'time': 0.020170792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.351400000000103e-05, 'source_diff': 5.351400000000103e-05}, {'time': 0.020229847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:35.160" endtime="20201117 14:42:35.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:35.165" endtime="20201117 14:42:35.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.182" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.181" endtime="20201117 14:42:35.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.185" level="INFO">VALUE: [5.351400000000103e-05, 5.3749999999998244e-05, 5.318100000000284e-05, 5.350000000000146e-05, 5.387499999999837e-05, 5.381999999999956e-05, 5.361099999999855e-05, 5.361199999999802e-05, 5.3957999999999784e-05, 5.381900000000009e-05, 5.3485999999998424e-05, 5.38470000000027e-05, 5.350000000000146e-05, 5.33609999999983e-05, 5.356899999999984e-05, 5.338900000000091e-05, 5.3693999999999964e-05, 5.32080000000025e-05, 5.38609999999988e-05, 5.369499999999944e-05, 5.348600000000189e-05, 5.3957999999999784e-05, 5.358399999999888e-05, 5.318099999999937e-05, 5.318099999999937e-05, 5.319499999999894e-05, 5.3249999999997744e-05, 5.380599999999999e-05, 5.395899999999926e-05, 5.362499999999812e-05, 5.359699999999898e-05, 5.3944000000000214e-05, 5.351400000000103e-05, 5.3693999999999964e-05, 5.330500000000002e-05, 5.3235999999998174e-05, 5.3263999999997313e-05, 5.405500000000077e-05, 5.358299999999941e-05, 5.36670000000003e-05, 5.3430000000000144e-05, 5.351400000000103e-05, 5.343099999999962e-05, 5.3735999999998674e-05, 5.395899999999926e-05, 5.388899999999794e-05, 5.350000000000146e-05, 5.4027999999997633e-05, 5.313900000000066e-05, 5.332000000000253e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.184" endtime="20201117 14:42:35.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.179" endtime="20201117 14:42:35.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.188" endtime="20201117 14:42:35.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.192" endtime="20201117 14:42:35.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.190" endtime="20201117 14:42:35.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.187" endtime="20201117 14:42:35.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.815" endtime="20201117 14:42:35.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.414" endtime="20201117 14:42:35.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.413" endtime="20201117 14:42:35.213"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.216" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.224" endtime="20201117 14:42:35.243"></status>
</kw>
<msg timestamp="20201117 14:42:35.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.223" endtime="20201117 14:42:35.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.244" endtime="20201117 14:42:35.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.247" endtime="20201117 14:42:35.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.220" endtime="20201117 14:42:35.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.218" endtime="20201117 14:42:35.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.257" endtime="20201117 14:42:35.544"></status>
</kw>
<msg timestamp="20201117 14:42:35.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.255" endtime="20201117 14:42:35.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.549" endtime="20201117 14:42:35.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.557" endtime="20201117 14:42:35.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.253" endtime="20201117 14:42:35.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.250" endtime="20201117 14:42:35.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.564" level="INFO">${RESULT} = [{'time': 0.022951056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.508400000000038e-05, 'source_diff': 5.508400000000038e-05}, {'time': 0.023010097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:35.561" endtime="20201117 14:42:35.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.579" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:35.565" endtime="20201117 14:42:35.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.584" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.583" endtime="20201117 14:42:35.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.587" level="INFO">VALUE: [5.508400000000038e-05, 5.4958000000000784e-05, 5.501299999999959e-05, 5.437500000000234e-05, 5.415300000000123e-05, 5.483300000000066e-05, 5.509700000000048e-05, 5.4208000000000034e-05, 5.437500000000234e-05, 5.4999999999999494e-05, 5.490299999999851e-05, 5.4458000000000284e-05, 5.426400000000178e-05, 5.48609999999998e-05, 5.470900000000001e-05, 5.457000000000031e-05, 5.462499999999912e-05, 5.427800000000135e-05, 5.495900000000026e-05, 5.440299999999801e-05, 5.4722000000000104e-05, 5.429200000000092e-05, 5.443100000000062e-05, 5.444500000000019e-05, 5.4444000000000714e-05, 5.508300000000091e-05, 5.4249999999998744e-05, 5.462500000000259e-05, 5.4249999999998744e-05, 5.4180000000000894e-05, 5.4499999999998994e-05, 5.4179999999997425e-05, 5.4513999999998564e-05, 5.490300000000198e-05, 5.431900000000059e-05, 5.50280000000021e-05, 5.437500000000234e-05, 5.441699999999758e-05, 5.411099999999905e-05, 5.4985999999999924e-05, 5.488900000000241e-05, 5.427800000000135e-05, 5.4249999999998744e-05, 5.458399999999988e-05, 5.4249999999998744e-05, 5.461199999999902e-05, 5.46670000000013e-05, 5.4679999999997925e-05, 5.463900000000216e-05, 5.480600000000099e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.585" endtime="20201117 14:42:35.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.580" endtime="20201117 14:42:35.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.590" endtime="20201117 14:42:35.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.593" endtime="20201117 14:42:35.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.592" endtime="20201117 14:42:35.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.588" endtime="20201117 14:42:35.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.216" endtime="20201117 14:42:35.614"></status>
</kw>
<msg timestamp="20201117 14:42:35.614" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.623" endtime="20201117 14:42:35.642"></status>
</kw>
<msg timestamp="20201117 14:42:35.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.621" endtime="20201117 14:42:35.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.643" endtime="20201117 14:42:35.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.646" endtime="20201117 14:42:35.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.619" endtime="20201117 14:42:35.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.617" endtime="20201117 14:42:35.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.656" endtime="20201117 14:42:35.943"></status>
</kw>
<msg timestamp="20201117 14:42:35.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.654" endtime="20201117 14:42:35.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.947" endtime="20201117 14:42:35.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.956" endtime="20201117 14:42:35.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.652" endtime="20201117 14:42:35.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.650" endtime="20201117 14:42:35.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.963" level="INFO">${RESULT} = [{'time': 0.020137139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4971999999996884e-05, 'source_diff': 5.4971999999996884e-05}, {'time': 0.020195125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:35.959" endtime="20201117 14:42:35.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:35.964" endtime="20201117 14:42:35.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.981" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.980" endtime="20201117 14:42:35.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.984" level="INFO">VALUE: [5.4971999999996884e-05, 5.455600000000074e-05, 5.437499999999887e-05, 5.465299999999826e-05, 5.420899999999951e-05, 5.479200000000142e-05, 5.4749999999999244e-05, 5.459799999999945e-05, 5.4916000000002074e-05, 5.432000000000006e-05, 5.48479999999997e-05, 5.451299999999909e-05, 5.463899999999869e-05, 5.4387999999998965e-05, 5.4208000000000034e-05, 5.4722000000000104e-05, 5.430600000000049e-05, 5.4999999999999494e-05, 5.4693999999997495e-05, 5.4999999999999494e-05, 5.4722000000000104e-05, 5.4194000000000464e-05, 5.48609999999998e-05, 5.488899999999894e-05, 5.4541999999997703e-05, 5.433399999999963e-05, 5.458399999999988e-05, 5.486199999999927e-05, 5.469500000000044e-05, 5.4985999999999924e-05, 5.45280000000016e-05, 5.418100000000037e-05, 5.494500000000069e-05, 5.480600000000099e-05, 5.438899999999844e-05, 5.4999999999999494e-05, 5.45410000000017e-05, 5.430500000000102e-05, 5.4999999999999494e-05, 5.50549999999983e-05, 5.456900000000084e-05, 5.454099999999823e-05, 5.5027999999998634e-05, 5.4749999999999244e-05, 5.487499999999937e-05, 5.426400000000178e-05, 5.425000000000221e-05, 5.505600000000124e-05, 5.43609999999993e-05, 5.494500000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.982" endtime="20201117 14:42:35.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.978" endtime="20201117 14:42:35.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.987" endtime="20201117 14:42:35.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.991" endtime="20201117 14:42:36.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.989" endtime="20201117 14:42:36.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.985" endtime="20201117 14:42:36.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.615" endtime="20201117 14:42:36.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.214" endtime="20201117 14:42:36.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.214" endtime="20201117 14:42:36.012"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.014" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.024" endtime="20201117 14:42:36.042"></status>
</kw>
<msg timestamp="20201117 14:42:36.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.022" endtime="20201117 14:42:36.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.044" endtime="20201117 14:42:36.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.046" endtime="20201117 14:42:36.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.019" endtime="20201117 14:42:36.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.017" endtime="20201117 14:42:36.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.056" endtime="20201117 14:42:36.343"></status>
</kw>
<msg timestamp="20201117 14:42:36.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.054" endtime="20201117 14:42:36.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.347" endtime="20201117 14:42:36.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.356" endtime="20201117 14:42:36.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.051" endtime="20201117 14:42:36.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.049" endtime="20201117 14:42:36.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.363" level="INFO">${RESULT} = [{'time': 0.023519125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6027999999999634e-05, 'source_diff': 5.6027999999999634e-05}, {'time': 0.023578139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:36.359" endtime="20201117 14:42:36.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.376" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:36.364" endtime="20201117 14:42:36.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.381" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.380" endtime="20201117 14:42:36.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.384" level="INFO">VALUE: [5.6027999999999634e-05, 5.607000000000181e-05, 5.569500000000144e-05, 5.543100000000162e-05, 5.551400000000303e-05, 5.608399999999791e-05, 5.5305999999998023e-05, 5.606999999999834e-05, 5.516699999999833e-05, 5.595900000000126e-05, 5.556999999999784e-05, 5.5387999999999965e-05, 5.523699999999965e-05, 5.6055999999998773e-05, 5.583299999999819e-05, 5.587500000000037e-05, 5.5763999999999814e-05, 5.606899999999887e-05, 5.531899999999812e-05, 5.590299999999951e-05, 5.537499999999987e-05, 5.6027999999999634e-05, 5.558300000000141e-05, 5.5429999999998675e-05, 5.5986000000000924e-05, 5.5305999999998023e-05, 5.519500000000094e-05, 5.582000000000156e-05, 5.595900000000126e-05, 5.6014000000000064e-05, 5.5499999999999994e-05, 5.5763999999999814e-05, 5.519500000000094e-05, 5.5415999999999105e-05, 5.5180000000001894e-05, 5.5708000000001534e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.556900000000184e-05, 5.556899999999837e-05, 5.5708000000001534e-05, 5.6000000000000494e-05, 5.6014000000000064e-05, 5.5194000000001464e-05, 5.556899999999837e-05, 5.559699999999751e-05, 5.531900000000159e-05, 5.590299999999951e-05, 5.587500000000037e-05, 5.58749999999969e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.382" endtime="20201117 14:42:36.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.377" endtime="20201117 14:42:36.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.387" endtime="20201117 14:42:36.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.390" endtime="20201117 14:42:36.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.389" endtime="20201117 14:42:36.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.385" endtime="20201117 14:42:36.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.015" endtime="20201117 14:42:36.412"></status>
</kw>
<msg timestamp="20201117 14:42:36.412" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.421" endtime="20201117 14:42:36.440"></status>
</kw>
<msg timestamp="20201117 14:42:36.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.419" endtime="20201117 14:42:36.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.441" endtime="20201117 14:42:36.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.444" endtime="20201117 14:42:36.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.416" endtime="20201117 14:42:36.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.414" endtime="20201117 14:42:36.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.454" endtime="20201117 14:42:36.741"></status>
</kw>
<msg timestamp="20201117 14:42:36.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020648861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020704222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.452" endtime="20201117 14:42:36.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020648861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020704222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.746" endtime="20201117 14:42:36.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.754" endtime="20201117 14:42:36.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.449" endtime="20201117 14:42:36.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.447" endtime="20201117 14:42:36.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.761" level="INFO">${RESULT} = [{'time': 0.020704222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.53610000000003e-05, 'source_diff': 5.53610000000003e-05}, {'time': 0.020765236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:36.758" endtime="20201117 14:42:36.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.775" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:36.762" endtime="20201117 14:42:36.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.779" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.778" endtime="20201117 14:42:36.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.782" level="INFO">VALUE: [5.53610000000003e-05, 5.5707999999998065e-05, 5.5694000000001964e-05, 5.558300000000141e-05, 5.60280000000031e-05, 5.5763999999999814e-05, 5.520900000000051e-05, 5.544499999999772e-05, 5.5763999999999814e-05, 5.557000000000131e-05, 5.608399999999791e-05, 5.606999999999834e-05, 5.520900000000051e-05, 5.6152000000000285e-05, 5.5236000000000174e-05, 5.527699999999941e-05, 5.5722000000001104e-05, 5.581900000000209e-05, 5.5944000000002214e-05, 5.606900000000234e-05, 5.5958000000001784e-05, 5.5986000000000924e-05, 5.5499999999999994e-05, 5.538899999999944e-05, 5.565299999999926e-05, 5.5694000000001964e-05, 5.581900000000209e-05, 5.6027999999999634e-05, 5.6000000000000494e-05, 5.559800000000045e-05, 5.6194000000002464e-05, 5.537499999999987e-05, 5.518100000000137e-05, 5.5805999999998523e-05, 5.5472000000000854e-05, 5.583399999999766e-05, 5.588899999999994e-05, 5.606999999999834e-05, 5.5236000000000174e-05, 5.533300000000116e-05, 5.558299999999794e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.588899999999994e-05, 5.556900000000184e-05, 5.583300000000166e-05, 5.562500000000012e-05, 5.5513999999999564e-05, 5.5944000000002214e-05, 5.5957999999998315e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.781" endtime="20201117 14:42:36.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.776" endtime="20201117 14:42:36.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.786" endtime="20201117 14:42:36.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.789" endtime="20201117 14:42:36.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.788" endtime="20201117 14:42:36.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.784" endtime="20201117 14:42:36.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.413" endtime="20201117 14:42:36.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.013" endtime="20201117 14:42:36.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.012" endtime="20201117 14:42:36.810"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.813" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.822" endtime="20201117 14:42:36.840"></status>
</kw>
<msg timestamp="20201117 14:42:36.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.820" endtime="20201117 14:42:36.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.841" endtime="20201117 14:42:36.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.844" endtime="20201117 14:42:36.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.817" endtime="20201117 14:42:36.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.815" endtime="20201117 14:42:36.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.854" endtime="20201117 14:42:37.141"></status>
</kw>
<msg timestamp="20201117 14:42:37.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.852" endtime="20201117 14:42:37.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.145" endtime="20201117 14:42:37.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.154" endtime="20201117 14:42:37.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.849" endtime="20201117 14:42:37.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.847" endtime="20201117 14:42:37.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.161" level="INFO">${RESULT} = [{'time': 0.022897347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6763999999997344e-05, 'source_diff': 5.6763999999997344e-05}, {'time': 0.022957361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:37.157" endtime="20201117 14:42:37.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.176" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:37.162" endtime="20201117 14:42:37.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.181" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.180" endtime="20201117 14:42:37.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.184" level="INFO">VALUE: [5.6763999999997344e-05, 5.6957999999999315e-05, 5.6514000000000564e-05, 5.63610000000013e-05, 5.6193999999998995e-05, 5.6750000000001244e-05, 5.6749999999997774e-05, 5.647299999999786e-05, 5.669499999999897e-05, 5.658400000000188e-05, 5.645899999999829e-05, 5.7083999999998913e-05, 5.6750000000001244e-05, 5.643100000000262e-05, 5.688900000000094e-05, 5.6638000000001215e-05, 5.640300000000001e-05, 5.613900000000019e-05, 5.6486000000001424e-05, 5.615299999999976e-05, 5.687500000000137e-05, 5.662499999999765e-05, 5.633300000000216e-05, 5.691700000000008e-05, 5.6778000000000384e-05, 5.6443999999999245e-05, 5.6235999999997704e-05, 5.661099999999808e-05, 5.636099999999783e-05, 5.693099999999965e-05, 5.615299999999976e-05, 5.686099999999833e-05, 5.6805999999999524e-05, 5.6514000000000564e-05, 5.6235999999997704e-05, 5.619499999999847e-05, 5.6736000000001674e-05, 5.6402000000000535e-05, 5.688900000000094e-05, 5.630499999999955e-05, 5.706899999999987e-05, 5.637500000000087e-05, 5.6443999999999245e-05, 5.6486000000001424e-05, 5.6986000000001924e-05, 5.633300000000216e-05, 5.630500000000302e-05, 5.665300000000026e-05, 5.7000000000001494e-05, 5.6708000000002534e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.182" endtime="20201117 14:42:37.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.177" endtime="20201117 14:42:37.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.187" endtime="20201117 14:42:37.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.191" endtime="20201117 14:42:37.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.189" endtime="20201117 14:42:37.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.186" endtime="20201117 14:42:37.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.814" endtime="20201117 14:42:37.212"></status>
</kw>
<msg timestamp="20201117 14:42:37.212" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.220" endtime="20201117 14:42:37.239"></status>
</kw>
<msg timestamp="20201117 14:42:37.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.219" endtime="20201117 14:42:37.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.240" endtime="20201117 14:42:37.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.243" endtime="20201117 14:42:37.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.216" endtime="20201117 14:42:37.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.214" endtime="20201117 14:42:37.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.252" endtime="20201117 14:42:37.540"></status>
</kw>
<msg timestamp="20201117 14:42:37.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.251" endtime="20201117 14:42:37.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.545" endtime="20201117 14:42:37.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.553" endtime="20201117 14:42:37.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.248" endtime="20201117 14:42:37.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.246" endtime="20201117 14:42:37.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.560" level="INFO">${RESULT} = [{'time': 0.019991389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6777999999996914e-05, 'source_diff': 5.6777999999996914e-05}, {'time': 0.020051431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:37.556" endtime="20201117 14:42:37.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:37.561" endtime="20201117 14:42:37.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.578" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.577" endtime="20201117 14:42:37.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.581" level="INFO">VALUE: [5.6777999999996914e-05, 5.691700000000008e-05, 5.6514000000000564e-05, 5.612500000000062e-05, 5.6277999999999884e-05, 5.682000000000256e-05, 5.695900000000226e-05, 5.638900000000044e-05, 5.619499999999847e-05, 5.6250000000000744e-05, 5.630600000000249e-05, 5.658299999999894e-05, 5.6194000000002464e-05, 5.6916000000000605e-05, 5.638900000000044e-05, 5.644500000000219e-05, 5.6693999999999495e-05, 5.631899999999912e-05, 5.6943999999999745e-05, 5.662500000000112e-05, 5.6750000000001244e-05, 5.643099999999915e-05, 5.6291999999999454e-05, 5.6528000000000134e-05, 5.7179999999996955e-05, 5.6221999999998135e-05, 5.704100000000073e-05, 5.693099999999965e-05, 5.661100000000155e-05, 5.7013999999997594e-05, 5.644499999999872e-05, 5.6957999999999315e-05, 5.6707999999999065e-05, 5.6264000000000314e-05, 5.6179999999999425e-05, 5.6193999999998995e-05, 5.6235999999997704e-05, 5.6694000000002964e-05, 5.663900000000069e-05, 5.634699999999826e-05, 5.65549999999998e-05, 5.6443999999999245e-05, 5.706899999999987e-05, 5.6291999999999454e-05, 5.632000000000206e-05, 5.68610000000018e-05, 5.619499999999847e-05, 5.644500000000219e-05, 5.661100000000155e-05, 5.6721999999998635e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.579" endtime="20201117 14:42:37.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.575" endtime="20201117 14:42:37.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.585" endtime="20201117 14:42:37.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.588" endtime="20201117 14:42:37.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.587" endtime="20201117 14:42:37.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.583" endtime="20201117 14:42:37.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.213" endtime="20201117 14:42:37.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.812" endtime="20201117 14:42:37.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.811" endtime="20201117 14:42:37.609"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.612" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.620" endtime="20201117 14:42:37.639"></status>
</kw>
<msg timestamp="20201117 14:42:37.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.619" endtime="20201117 14:42:37.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.641" endtime="20201117 14:42:37.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.643" endtime="20201117 14:42:37.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.616" endtime="20201117 14:42:37.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.614" endtime="20201117 14:42:37.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.653" endtime="20201117 14:42:37.940"></status>
</kw>
<msg timestamp="20201117 14:42:37.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.651" endtime="20201117 14:42:37.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.944" endtime="20201117 14:42:37.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.953" endtime="20201117 14:42:37.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.648" endtime="20201117 14:42:37.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.647" endtime="20201117 14:42:37.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.960" level="INFO">${RESULT} = [{'time': 0.022773931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.794500000000022e-05, 'source_diff': 5.794500000000022e-05}, {'time': 0.022835917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:37.956" endtime="20201117 14:42:37.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.974" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:37.961" endtime="20201117 14:42:37.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.978" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.977" endtime="20201117 14:42:37.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.981" level="INFO">VALUE: [5.794500000000022e-05, 5.7750000000002244e-05, 5.8013999999998594e-05, 5.741700000000058e-05, 5.7944000000000745e-05, 5.7806000000000524e-05, 5.813900000000219e-05, 5.7416000000001105e-05, 5.736099999999883e-05, 5.7513999999998094e-05, 5.7249999999998274e-05, 5.788900000000194e-05, 5.738900000000144e-05, 5.7457999999999815e-05, 5.812499999999915e-05, 5.780500000000105e-05, 5.740300000000101e-05, 5.813899999999872e-05, 5.795899999999979e-05, 5.769499999999997e-05, 5.8042000000001204e-05, 5.7777999999997914e-05, 5.7763999999998344e-05, 5.761100000000255e-05, 5.7985999999999455e-05, 5.78749999999989e-05, 5.741700000000058e-05, 5.7319999999999593e-05, 5.776299999999887e-05, 5.762500000000212e-05, 5.7958000000000315e-05, 5.7985999999999455e-05, 5.738899999999797e-05, 5.7166000000000855e-05, 5.7249999999998274e-05, 5.712500000000162e-05, 5.7763999999998344e-05, 5.781900000000062e-05, 5.816699999999786e-05, 5.815300000000176e-05, 5.788900000000194e-05, 5.812499999999915e-05, 5.7569999999999844e-05, 5.811099999999958e-05, 5.8000000000002494e-05, 5.7333999999999163e-05, 5.740299999999754e-05, 5.783300000000019e-05, 5.738899999999797e-05, 5.8137999999999246e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.979" endtime="20201117 14:42:37.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.975" endtime="20201117 14:42:37.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.985" endtime="20201117 14:42:37.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.988" endtime="20201117 14:42:38.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.987" endtime="20201117 14:42:38.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.983" endtime="20201117 14:42:38.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.613" endtime="20201117 14:42:38.009"></status>
</kw>
<msg timestamp="20201117 14:42:38.009" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.018" endtime="20201117 14:42:38.037"></status>
</kw>
<msg timestamp="20201117 14:42:38.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.016" endtime="20201117 14:42:38.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.038" endtime="20201117 14:42:38.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.041" endtime="20201117 14:42:38.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.014" endtime="20201117 14:42:38.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.011" endtime="20201117 14:42:38.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.051" endtime="20201117 14:42:38.338"></status>
</kw>
<msg timestamp="20201117 14:42:38.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.049" endtime="20201117 14:42:38.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.343" endtime="20201117 14:42:38.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.352" endtime="20201117 14:42:38.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.046" endtime="20201117 14:42:38.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.044" endtime="20201117 14:42:38.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.359" level="INFO">${RESULT} = [{'time': 0.020163236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.765300000000126e-05, 'source_diff': 5.765300000000126e-05}, {'time': 0.02022325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:38.355" endtime="20201117 14:42:38.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:38.360" endtime="20201117 14:42:38.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.377" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.376" endtime="20201117 14:42:38.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.380" level="INFO">VALUE: [5.765300000000126e-05, 5.731900000000012e-05, 5.808300000000044e-05, 5.765299999999779e-05, 5.7514000000001564e-05, 5.788900000000194e-05, 5.762500000000212e-05, 5.795899999999979e-05, 5.8000000000002494e-05, 5.7264000000001314e-05, 5.707000000000281e-05, 5.790299999999804e-05, 5.8070000000000344e-05, 5.743100000000015e-05, 5.812500000000262e-05, 5.7958000000000315e-05, 5.809700000000001e-05, 5.7236000000002174e-05, 5.7457999999999815e-05, 5.7958000000000315e-05, 5.786099999999933e-05, 5.7249999999998274e-05, 5.731900000000012e-05, 5.765300000000126e-05, 5.756900000000037e-05, 5.790299999999804e-05, 5.7763999999998344e-05, 5.7792000000000954e-05, 5.765299999999779e-05, 5.76810000000004e-05, 5.7806000000000524e-05, 5.7736000000002674e-05, 5.7500000000001994e-05, 5.7792000000000954e-05, 5.7319999999999593e-05, 5.78610000000028e-05, 5.7943999999997275e-05, 5.812500000000262e-05, 5.783300000000019e-05, 5.731900000000012e-05, 5.731900000000012e-05, 5.795899999999979e-05, 5.7193999999999995e-05, 5.7444000000000245e-05, 5.763900000000169e-05, 5.7193999999999995e-05, 5.7249999999998274e-05, 5.712499999999815e-05, 5.7569999999999844e-05, 5.7236000000002174e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.379" endtime="20201117 14:42:38.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.374" endtime="20201117 14:42:38.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.383" endtime="20201117 14:42:38.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.387" endtime="20201117 14:42:38.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.385" endtime="20201117 14:42:38.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.382" endtime="20201117 14:42:38.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.010" endtime="20201117 14:42:38.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.611" endtime="20201117 14:42:38.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.610" endtime="20201117 14:42:38.408"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.411" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.419" endtime="20201117 14:42:38.438"></status>
</kw>
<msg timestamp="20201117 14:42:38.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.418" endtime="20201117 14:42:38.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.440" endtime="20201117 14:42:38.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.443" endtime="20201117 14:42:38.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.415" endtime="20201117 14:42:38.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.413" endtime="20201117 14:42:38.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.452" endtime="20201117 14:42:38.738"></status>
</kw>
<msg timestamp="20201117 14:42:38.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.450" endtime="20201117 14:42:38.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.743" endtime="20201117 14:42:38.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.751" endtime="20201117 14:42:38.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.448" endtime="20201117 14:42:38.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.446" endtime="20201117 14:42:38.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.759" level="INFO">${RESULT} = [{'time': 0.022721042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8806000000001524e-05, 'source_diff': 5.8806000000001524e-05}, {'time': 0.022782042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:38.755" endtime="20201117 14:42:38.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.774" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:38.760" endtime="20201117 14:42:38.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.779" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.778" endtime="20201117 14:42:38.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.781" level="INFO">VALUE: [5.8806000000001524e-05, 5.88749999999999e-05, 5.8820000000001094e-05, 5.8249999999999275e-05, 5.9084000000000914e-05, 5.845900000000029e-05, 5.829099999999851e-05, 5.883299999999772e-05, 5.8137999999999246e-05, 5.863899999999922e-05, 5.909699999999754e-05, 5.90689999999984e-05, 5.911099999999711e-05, 5.8763999999999345e-05, 5.88749999999999e-05, 5.834700000000026e-05, 5.856900000000137e-05, 5.833299999999722e-05, 5.8513999999999095e-05, 5.856900000000137e-05, 5.834699999999679e-05, 5.812500000000262e-05, 5.8556000000001274e-05, 5.8528000000002134e-05, 5.912500000000015e-05, 5.8263999999998844e-05, 5.8264000000002314e-05, 5.8485999999999955e-05, 5.8749999999999775e-05, 5.83749999999994e-05, 5.8208000000000565e-05, 5.829099999999851e-05, 5.8499999999999525e-05, 5.8179999999997956e-05, 5.815299999999829e-05, 5.912500000000015e-05, 5.838899999999897e-05, 5.894499999999775e-05, 5.8180000000001425e-05, 5.881899999999815e-05, 5.813899999999872e-05, 5.8986000000000455e-05, 5.870900000000054e-05, 5.813899999999872e-05, 5.8250000000002744e-05, 5.8306000000001024e-05, 5.894499999999775e-05, 5.8806000000001524e-05, 5.844500000000072e-05, 5.8347999999999733e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.780" endtime="20201117 14:42:38.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.775" endtime="20201117 14:42:38.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.785" endtime="20201117 14:42:38.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.788" endtime="20201117 14:42:38.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.787" endtime="20201117 14:42:38.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.783" endtime="20201117 14:42:38.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.411" endtime="20201117 14:42:38.809"></status>
</kw>
<msg timestamp="20201117 14:42:38.809" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.818" endtime="20201117 14:42:38.836"></status>
</kw>
<msg timestamp="20201117 14:42:38.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.816" endtime="20201117 14:42:38.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.838" endtime="20201117 14:42:38.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.840" endtime="20201117 14:42:38.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.814" endtime="20201117 14:42:38.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.811" endtime="20201117 14:42:38.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.850" endtime="20201117 14:42:39.136"></status>
</kw>
<msg timestamp="20201117 14:42:39.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020010931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.848" endtime="20201117 14:42:39.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020010931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.140" endtime="20201117 14:42:39.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.149" endtime="20201117 14:42:39.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.845" endtime="20201117 14:42:39.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.844" endtime="20201117 14:42:39.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.156" level="INFO">${RESULT} = [{'time': 0.020069208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.827700000000241e-05, 'source_diff': 5.827700000000241e-05}, {'time': 0.020131236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.152" endtime="20201117 14:42:39.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:39.157" endtime="20201117 14:42:39.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.174" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.173" endtime="20201117 14:42:39.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.177" level="INFO">VALUE: [5.827700000000241e-05, 5.8472000000000385e-05, 5.829100000000198e-05, 5.8708000000001065e-05, 5.912499999999668e-05, 5.88749999999999e-05, 5.834700000000026e-05, 5.838899999999897e-05, 5.8194000000000995e-05, 5.909700000000101e-05, 5.8722000000000635e-05, 5.911099999999711e-05, 5.8208000000000565e-05, 5.81810000000009e-05, 5.8555999999997804e-05, 5.8513999999999095e-05, 5.9069999999997874e-05, 5.8722000000000635e-05, 5.88749999999999e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.8570000000000844e-05, 5.8902000000003035e-05, 5.8235999999999705e-05, 5.8430000000001675e-05, 5.862499999999965e-05, 5.886100000000033e-05, 5.9028000000002634e-05, 5.8250000000002744e-05, 5.838899999999897e-05, 5.8208000000000565e-05, 5.83749999999994e-05, 5.833300000000069e-05, 5.8292000000001454e-05, 5.815299999999829e-05, 5.818099999999743e-05, 5.8291999999997984e-05, 5.9112000000000053e-05, 5.893100000000165e-05, 5.8236000000003174e-05, 5.8249999999999275e-05, 5.8514000000002564e-05, 5.8736000000000205e-05, 5.8097999999999483e-05, 5.8556000000001274e-05, 5.812500000000262e-05, 5.888900000000294e-05, 5.8235999999999705e-05, 5.8250000000002744e-05, 5.908299999999797e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.176" endtime="20201117 14:42:39.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.170" endtime="20201117 14:42:39.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.180" endtime="20201117 14:42:39.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.184" endtime="20201117 14:42:39.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.182" endtime="20201117 14:42:39.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.178" endtime="20201117 14:42:39.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.810" endtime="20201117 14:42:39.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.409" endtime="20201117 14:42:39.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.408" endtime="20201117 14:42:39.205"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.207" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.216" endtime="20201117 14:42:39.235"></status>
</kw>
<msg timestamp="20201117 14:42:39.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.214" endtime="20201117 14:42:39.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.237" endtime="20201117 14:42:39.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.239" endtime="20201117 14:42:39.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.211" endtime="20201117 14:42:39.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.209" endtime="20201117 14:42:39.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.249" endtime="20201117 14:42:39.536"></status>
</kw>
<msg timestamp="20201117 14:42:39.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02256825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:39.248" endtime="20201117 14:42:39.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02256825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:39.541" endtime="20201117 14:42:39.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.549" endtime="20201117 14:42:39.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.245" endtime="20201117 14:42:39.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.243" endtime="20201117 14:42:39.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.556" level="INFO">${RESULT} = [{'time': 0.02256825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9208000000001565e-05, 'source_diff': 5.9208000000001565e-05}, {'time': 0.022631278, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:42:39.553" endtime="20201117 14:42:39.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:39.557" endtime="20201117 14:42:39.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.575" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.574" endtime="20201117 14:42:39.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.577" level="INFO">VALUE: [5.9208000000001565e-05, 5.9834000000001664e-05, 5.9791999999999484e-05, 5.9263999999999845e-05, 5.9305999999998554e-05, 5.9750000000000775e-05, 5.968099999999893e-05, 5.944500000000172e-05, 5.952699999999672e-05, 5.9708000000002065e-05, 5.9736000000001205e-05, 5.95689999999989e-05, 5.980499999999958e-05, 5.931899999999865e-05, 5.9707999999998596e-05, 5.959700000000151e-05, 5.9263999999999845e-05, 5.912500000000015e-05, 5.9708000000002065e-05, 5.9458000000001815e-05, 5.963900000000022e-05, 5.963900000000022e-05, 6.0014000000000595e-05, 5.9986000000001455e-05, 5.963900000000022e-05, 5.9334000000001164e-05, 6.009699999999854e-05, 6.0151999999997346e-05, 5.977700000000044e-05, 6.0070000000002344e-05, 6.00689999999994e-05, 5.938899999999997e-05, 6.013900000000072e-05, 5.9541999999999234e-05, 5.93750000000004e-05, 6.015300000000029e-05, 5.9500000000000525e-05, 6.0041999999999734e-05, 5.9569999999998374e-05, 5.9750000000000775e-05, 5.9570000000001844e-05, 5.9443999999998776e-05, 5.944499999999825e-05, 5.9958000000002315e-05, 5.9263999999999845e-05, 5.961100000000108e-05, 5.943099999999868e-05, 5.937499999999693e-05, 5.93750000000004e-05, 5.9236000000000705e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.576" endtime="20201117 14:42:39.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.571" endtime="20201117 14:42:39.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.581" endtime="20201117 14:42:39.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.584" endtime="20201117 14:42:39.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.583" endtime="20201117 14:42:39.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.579" endtime="20201117 14:42:39.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.208" endtime="20201117 14:42:39.605"></status>
</kw>
<msg timestamp="20201117 14:42:39.605" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.614" endtime="20201117 14:42:39.633"></status>
</kw>
<msg timestamp="20201117 14:42:39.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.612" endtime="20201117 14:42:39.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.634" endtime="20201117 14:42:39.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.637" endtime="20201117 14:42:39.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.610" endtime="20201117 14:42:39.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.607" endtime="20201117 14:42:39.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.647" endtime="20201117 14:42:39.934"></status>
</kw>
<msg timestamp="20201117 14:42:39.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.645" endtime="20201117 14:42:39.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.938" endtime="20201117 14:42:39.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.947" endtime="20201117 14:42:39.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.643" endtime="20201117 14:42:39.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.641" endtime="20201117 14:42:39.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.954" level="INFO">${RESULT} = [{'time': 0.020165431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944500000000172e-05, 'source_diff': 5.944500000000172e-05}, {'time': 0.020227444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.950" endtime="20201117 14:42:39.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:39.955" endtime="20201117 14:42:39.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.972" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.971" endtime="20201117 14:42:39.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.975" level="INFO">VALUE: [5.944500000000172e-05, 5.9693999999999026e-05, 5.9388000000000496e-05, 6.012500000000115e-05, 6.011099999999811e-05, 5.9486000000000955e-05, 5.963900000000022e-05, 5.95689999999989e-05, 5.977700000000044e-05, 5.988900000000047e-05, 5.987499999999743e-05, 5.941699999999911e-05, 5.981900000000262e-05, 6.0013999999997125e-05, 5.943099999999868e-05, 5.9306000000002024e-05, 6.0069999999998874e-05, 5.965300000000326e-05, 5.990300000000004e-05, 6.012500000000115e-05, 5.9764000000000345e-05, 5.979100000000001e-05, 5.9971999999998415e-05, 6.008299999999897e-05, 5.9694000000002495e-05, 5.958299999999847e-05, 5.9222000000001135e-05, 6.005499999999983e-05, 5.931899999999865e-05, 5.931899999999865e-05, 5.9250000000000275e-05, 5.98750000000009e-05, 5.965299999999979e-05, 5.9651999999996846e-05, 5.9430000000002675e-05, 5.944499999999825e-05, 5.986099999999786e-05, 5.943099999999868e-05, 5.986100000000133e-05, 5.916699999999886e-05, 5.965299999999979e-05, 5.9749999999997305e-05, 5.943099999999868e-05, 5.9583999999997944e-05, 5.956900000000237e-05, 6.018099999999943e-05, 5.938899999999997e-05, 5.9250000000000275e-05, 5.9263999999999845e-05, 5.9527999999999665e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.973" endtime="20201117 14:42:39.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.968" endtime="20201117 14:42:39.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.978" endtime="20201117 14:42:39.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.982" endtime="20201117 14:42:40.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.980" endtime="20201117 14:42:40.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.976" endtime="20201117 14:42:40.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.606" endtime="20201117 14:42:40.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.206" endtime="20201117 14:42:40.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.205" endtime="20201117 14:42:40.003"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.005" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.015" endtime="20201117 14:42:40.033"></status>
</kw>
<msg timestamp="20201117 14:42:40.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.013" endtime="20201117 14:42:40.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.035" endtime="20201117 14:42:40.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.037" endtime="20201117 14:42:40.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.010" endtime="20201117 14:42:40.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.008" endtime="20201117 14:42:40.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.047" endtime="20201117 14:42:40.332"></status>
</kw>
<msg timestamp="20201117 14:42:40.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023485875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.045" endtime="20201117 14:42:40.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023485875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.337" endtime="20201117 14:42:40.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.345" endtime="20201117 14:42:40.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.043" endtime="20201117 14:42:40.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.041" endtime="20201117 14:42:40.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.352" level="INFO">${RESULT} = [{'time': 0.023546444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.05689999999999e-05, 'source_diff': 6.05689999999999e-05}, {'time': 0.023613431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:40.349" endtime="20201117 14:42:40.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.368" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:40.353" endtime="20201117 14:42:40.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.373" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.371" endtime="20201117 14:42:40.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.376" level="INFO">VALUE: [6.05689999999999e-05, 6.1000000000002025e-05, 6.0443999999999776e-05, 6.0514000000001095e-05, 6.055500000000033e-05, 6.018099999999943e-05, 6.0930000000000706e-05, 6.0735999999998735e-05, 6.0457999999999346e-05, 6.0555999999999804e-05, 6.112500000000215e-05, 6.019500000000247e-05, 6.066700000000036e-05, 6.0249999999997805e-05, 6.013900000000072e-05, 6.0485999999998485e-05, 6.0763999999997875e-05, 6.020900000000204e-05, 6.0263999999997375e-05, 6.022300000000161e-05, 6.0499999999998055e-05, 6.0137999999997777e-05, 6.083299999999972e-05, 6.0486000000001955e-05, 6.0944000000000276e-05, 6.033299999999922e-05, 6.059700000000251e-05, 6.0888999999998e-05, 6.062500000000165e-05, 6.061099999999861e-05, 6.0179999999999956e-05, 6.0222000000002135e-05, 6.0569999999999374e-05, 6.088900000000147e-05, 6.065299999999732e-05, 6.043099999999968e-05, 6.0555999999999804e-05, 6.0070000000002344e-05, 6.018099999999943e-05, 6.0834000000002664e-05, 6.0806000000000054e-05, 6.0569999999999374e-05, 6.0207999999999096e-05, 6.0861999999998334e-05, 6.054099999999729e-05, 6.0999999999998555e-05, 6.112499999999868e-05, 6.0513999999997625e-05, 6.0750000000001775e-05, 6.05689999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.374" endtime="20201117 14:42:40.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.369" endtime="20201117 14:42:40.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.379" endtime="20201117 14:42:40.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.383" endtime="20201117 14:42:40.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.381" endtime="20201117 14:42:40.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.378" endtime="20201117 14:42:40.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.006" endtime="20201117 14:42:40.404"></status>
</kw>
<msg timestamp="20201117 14:42:40.404" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.413" endtime="20201117 14:42:40.432"></status>
</kw>
<msg timestamp="20201117 14:42:40.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.411" endtime="20201117 14:42:40.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.434" endtime="20201117 14:42:40.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.436" endtime="20201117 14:42:40.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.409" endtime="20201117 14:42:40.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.407" endtime="20201117 14:42:40.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.446" endtime="20201117 14:42:40.731"></status>
</kw>
<msg timestamp="20201117 14:42:40.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020114236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.444" endtime="20201117 14:42:40.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020114236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.735" endtime="20201117 14:42:40.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.744" endtime="20201117 14:42:40.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.441" endtime="20201117 14:42:40.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.440" endtime="20201117 14:42:40.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.751" level="INFO">${RESULT} = [{'time': 0.020114236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1000000000002025e-05, 'source_diff': 6.1000000000002025e-05}, {'time': 0.020178208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:40.747" endtime="20201117 14:42:40.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.764" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:40.752" endtime="20201117 14:42:40.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.769" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.768" endtime="20201117 14:42:40.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.771" level="INFO">VALUE: [6.1000000000002025e-05, 6.0471999999998916e-05, 6.0362000000001304e-05, 6.0457999999999346e-05, 6.062499999999818e-05, 6.016699999999986e-05, 6.068099999999993e-05, 6.0514000000001095e-05, 6.08750000000019e-05, 6.0736000000002205e-05, 6.10690000000004e-05, 6.0985999999998985e-05, 6.065300000000079e-05, 6.113899999999825e-05, 6.0985999999998985e-05, 6.090300000000104e-05, 6.0305999999999554e-05, 6.041700000000011e-05, 6.093100000000018e-05, 6.094499999999975e-05, 6.0749999999998305e-05, 6.084699999999929e-05, 6.108299999999997e-05, 6.063900000000122e-05, 6.07629999999984e-05, 6.1014000000001595e-05, 6.0944000000000276e-05, 6.061099999999861e-05, 6.0443999999999776e-05, 6.0457999999999346e-05, 6.013900000000072e-05, 6.0764000000001345e-05, 6.036100000000183e-05, 6.0402000000001066e-05, 6.0806000000000054e-05, 6.011100000000158e-05, 6.036099999999836e-05, 6.0721999999999166e-05, 6.022300000000161e-05, 6.0819999999999624e-05, 6.0457999999999346e-05, 6.10560000000003e-05, 6.0166000000000386e-05, 6.0652000000001316e-05, 6.0306000000003024e-05, 6.0763999999997875e-05, 6.0929999999997236e-05, 6.05689999999999e-05, 6.063899999999775e-05, 6.0486000000001955e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.770" endtime="20201117 14:42:40.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.765" endtime="20201117 14:42:40.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.775" endtime="20201117 14:42:40.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.779" endtime="20201117 14:42:40.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.777" endtime="20201117 14:42:40.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.774" endtime="20201117 14:42:40.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.405" endtime="20201117 14:42:40.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.004" endtime="20201117 14:42:40.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.003" endtime="20201117 14:42:40.800"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.803" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.811" endtime="20201117 14:42:40.830"></status>
</kw>
<msg timestamp="20201117 14:42:40.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.809" endtime="20201117 14:42:40.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.831" endtime="20201117 14:42:40.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.834" endtime="20201117 14:42:40.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.807" endtime="20201117 14:42:40.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.805" endtime="20201117 14:42:40.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.844" endtime="20201117 14:42:41.131"></status>
</kw>
<msg timestamp="20201117 14:42:41.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.842" endtime="20201117 14:42:41.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.136" endtime="20201117 14:42:41.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.144" endtime="20201117 14:42:41.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.839" endtime="20201117 14:42:41.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.837" endtime="20201117 14:42:41.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.151" level="INFO">${RESULT} = [{'time': 0.022722792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.148599999999949e-05, 'source_diff': 6.148599999999949e-05}, {'time': 0.022787778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.148" endtime="20201117 14:42:41.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.165" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:41.152" endtime="20201117 14:42:41.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.170" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.168" endtime="20201117 14:42:41.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.173" level="INFO">VALUE: [6.148599999999949e-05, 6.132000000000012e-05, 6.136099999999936e-05, 6.111099999999911e-05, 6.18340000000002e-05, 6.179200000000148e-05, 6.145800000000035e-05, 6.211100000000011e-05, 6.1888999999999e-05, 6.206899999999793e-05, 6.170799999999713e-05, 6.169400000000103e-05, 6.138900000000197e-05, 6.199999999999956e-05, 6.1888999999999e-05, 6.144400000000078e-05, 6.17499999999993e-05, 6.162499999999918e-05, 6.132000000000012e-05, 6.197200000000042e-05, 6.177799999999845e-05, 6.181900000000115e-05, 6.188900000000247e-05, 6.158399999999994e-05, 6.176399999999888e-05, 6.180599999999759e-05, 6.147199999999992e-05, 6.169399999999756e-05, 6.20690000000014e-05, 6.149999999999906e-05, 6.169400000000103e-05, 6.161099999999961e-05, 6.140299999999807e-05, 6.148599999999949e-05, 6.137499999999893e-05, 6.123599999999924e-05, 6.195800000000085e-05, 6.17499999999993e-05, 6.213899999999925e-05, 6.207000000000087e-05, 6.176399999999888e-05, 6.212500000000315e-05, 6.194500000000075e-05, 6.172200000000017e-05, 6.212499999999968e-05, 6.188799999999953e-05, 6.180599999999759e-05, 6.183300000000072e-05, 6.206899999999793e-05, 6.169399999999756e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.171" endtime="20201117 14:42:41.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.166" endtime="20201117 14:42:41.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.176" endtime="20201117 14:42:41.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.180" endtime="20201117 14:42:41.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.178" endtime="20201117 14:42:41.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.174" endtime="20201117 14:42:41.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.803" endtime="20201117 14:42:41.200"></status>
</kw>
<msg timestamp="20201117 14:42:41.201" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.209" endtime="20201117 14:42:41.228"></status>
</kw>
<msg timestamp="20201117 14:42:41.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.208" endtime="20201117 14:42:41.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.229" endtime="20201117 14:42:41.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.232" endtime="20201117 14:42:41.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.205" endtime="20201117 14:42:41.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.203" endtime="20201117 14:42:41.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.241" endtime="20201117 14:42:41.529"></status>
</kw>
<msg timestamp="20201117 14:42:41.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020087139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.240" endtime="20201117 14:42:41.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020087139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.533" endtime="20201117 14:42:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.542" endtime="20201117 14:42:41.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.237" endtime="20201117 14:42:41.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.235" endtime="20201117 14:42:41.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.549" level="INFO">${RESULT} = [{'time': 0.020148917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.177799999999845e-05, 'source_diff': 6.177799999999845e-05}, {'time': 0.020215931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.545" endtime="20201117 14:42:41.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:41.550" endtime="20201117 14:42:41.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.567" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.566" endtime="20201117 14:42:41.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.570" level="INFO">VALUE: [6.177799999999845e-05, 6.190299999999857e-05, 6.126400000000184e-05, 6.15690000000009e-05, 6.19300000000017e-05, 6.117999999999749e-05, 6.20690000000014e-05, 6.186099999999986e-05, 6.144400000000078e-05, 6.158300000000047e-05, 6.13889999999985e-05, 6.186099999999986e-05, 6.13750000000024e-05, 6.158300000000047e-05, 6.15560000000008e-05, 6.132000000000012e-05, 6.198599999999999e-05, 6.180600000000105e-05, 6.207000000000087e-05, 6.20699999999974e-05, 6.169499999999703e-05, 6.126399999999838e-05, 6.143100000000068e-05, 6.200000000000302e-05, 6.1195e-05, 6.16950000000005e-05, 6.201399999999913e-05, 6.131900000000065e-05, 6.154100000000176e-05, 6.17080000000006e-05, 6.187499999999943e-05, 6.154199999999777e-05, 6.13889999999985e-05, 6.163900000000222e-05, 6.144500000000025e-05, 6.202800000000216e-05, 6.127799999999795e-05, 6.197299999999989e-05, 6.182000000000062e-05, 6.163899999999875e-05, 6.143100000000068e-05, 6.197299999999989e-05, 6.208300000000097e-05, 6.162499999999918e-05, 6.151399999999863e-05, 6.112499999999868e-05, 6.187499999999943e-05, 6.14019999999986e-05, 6.119400000000053e-05, 6.169399999999756e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.569" endtime="20201117 14:42:41.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.564" endtime="20201117 14:42:41.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.573" endtime="20201117 14:42:41.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.577" endtime="20201117 14:42:41.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.575" endtime="20201117 14:42:41.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.572" endtime="20201117 14:42:41.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.201" endtime="20201117 14:42:41.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.801" endtime="20201117 14:42:41.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.800" endtime="20201117 14:42:41.598"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.601" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.609" endtime="20201117 14:42:41.628"></status>
</kw>
<msg timestamp="20201117 14:42:41.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.608" endtime="20201117 14:42:41.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.629" endtime="20201117 14:42:41.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.632" endtime="20201117 14:42:41.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.605" endtime="20201117 14:42:41.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.603" endtime="20201117 14:42:41.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.641" endtime="20201117 14:42:41.928"></status>
</kw>
<msg timestamp="20201117 14:42:41.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:41.640" endtime="20201117 14:42:41.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:41.932" endtime="20201117 14:42:41.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.941" endtime="20201117 14:42:41.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.637" endtime="20201117 14:42:41.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.635" endtime="20201117 14:42:41.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.948" level="INFO">${RESULT} = [{'time': 0.022780222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27219999999977e-05, 'source_diff': 6.27219999999977e-05}, {'time': 0.022845222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:41.945" endtime="20201117 14:42:41.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.963" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:41.949" endtime="20201117 14:42:41.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.968" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.967" endtime="20201117 14:42:41.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.970" level="INFO">VALUE: [6.27219999999977e-05, 6.237499999999993e-05, 6.305499999999936e-05, 6.231900000000165e-05, 6.227799999999895e-05, 6.263899999999975e-05, 6.245800000000135e-05, 6.281999999999816e-05, 6.279199999999902e-05, 6.26950000000015e-05, 6.273600000000074e-05, 6.251399999999963e-05, 6.233300000000122e-05, 6.309800000000101e-05, 6.257000000000137e-05, 6.288800000000053e-05, 6.27080000000016e-05, 6.223600000000024e-05, 6.311100000000111e-05, 6.2889e-05, 6.237499999999993e-05, 6.277799999999945e-05, 6.276399999999988e-05, 6.244400000000178e-05, 6.30829999999985e-05, 6.313900000000025e-05, 6.257000000000137e-05, 6.243099999999821e-05, 6.293099999999871e-05, 6.272300000000064e-05, 6.23889999999995e-05, 6.261099999999714e-05, 6.2195000000001e-05, 6.236199999999983e-05, 6.302700000000022e-05, 6.29439999999988e-05, 6.231900000000165e-05, 6.280499999999911e-05, 6.291600000000314e-05, 6.313900000000025e-05, 6.256899999999843e-05, 6.226399999999938e-05, 6.251399999999963e-05, 6.23889999999995e-05, 6.270799999999813e-05, 6.290299999999957e-05, 6.252800000000266e-05, 6.262500000000018e-05, 6.27500000000003e-05, 6.220900000000057e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.969" endtime="20201117 14:42:41.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.964" endtime="20201117 14:42:41.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.974" endtime="20201117 14:42:41.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.977" endtime="20201117 14:42:41.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.976" endtime="20201117 14:42:41.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.972" endtime="20201117 14:42:41.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.601" endtime="20201117 14:42:41.998"></status>
</kw>
<msg timestamp="20201117 14:42:41.998" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.007" endtime="20201117 14:42:42.026"></status>
</kw>
<msg timestamp="20201117 14:42:42.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.005" endtime="20201117 14:42:42.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.027" endtime="20201117 14:42:42.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.030" endtime="20201117 14:42:42.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.003" endtime="20201117 14:42:42.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.000" endtime="20201117 14:42:42.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.039" endtime="20201117 14:42:42.326"></status>
</kw>
<msg timestamp="20201117 14:42:42.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.038" endtime="20201117 14:42:42.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.330" endtime="20201117 14:42:42.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.339" endtime="20201117 14:42:42.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.035" endtime="20201117 14:42:42.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.033" endtime="20201117 14:42:42.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.346" level="INFO">${RESULT} = [{'time': 0.020117528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.251399999999963e-05, 'source_diff': 6.251399999999963e-05}, {'time': 0.020185556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:42.343" endtime="20201117 14:42:42.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.360" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:42.347" endtime="20201117 14:42:42.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.365" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.363" endtime="20201117 14:42:42.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.367" level="INFO">VALUE: [6.251399999999963e-05, 6.245900000000082e-05, 6.220900000000057e-05, 6.26950000000015e-05, 6.223600000000024e-05, 6.229199999999852e-05, 6.280500000000258e-05, 6.23889999999995e-05, 6.216700000000186e-05, 6.255500000000233e-05, 6.226399999999938e-05, 6.309699999999807e-05, 6.231900000000165e-05, 6.30279999999997e-05, 6.22499999999998e-05, 6.297200000000142e-05, 6.213899999999925e-05, 6.243099999999821e-05, 6.26950000000015e-05, 6.265299999999932e-05, 6.219499999999753e-05, 6.269499999999803e-05, 6.222300000000014e-05, 6.272200000000117e-05, 6.301400000000013e-05, 6.272300000000064e-05, 6.213799999999978e-05, 6.286099999999739e-05, 6.292999999999924e-05, 6.269399999999856e-05, 6.309700000000154e-05, 6.231899999999818e-05, 6.22080000000011e-05, 6.216699999999839e-05, 6.291699999999914e-05, 6.265299999999932e-05, 6.287500000000043e-05, 6.216699999999839e-05, 6.312500000000068e-05, 6.263899999999975e-05, 6.263899999999975e-05, 6.23340000000007e-05, 6.273600000000074e-05, 6.234700000000079e-05, 6.255599999999834e-05, 6.238900000000297e-05, 6.240299999999907e-05, 6.301300000000065e-05, 6.212499999999968e-05, 6.216599999999892e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.366" endtime="20201117 14:42:42.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.361" endtime="20201117 14:42:42.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.370" endtime="20201117 14:42:42.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.374" endtime="20201117 14:42:42.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.372" endtime="20201117 14:42:42.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.369" endtime="20201117 14:42:42.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.999" endtime="20201117 14:42:42.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.599" endtime="20201117 14:42:42.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.599" endtime="20201117 14:42:42.395"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.398" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.408" endtime="20201117 14:42:42.427"></status>
</kw>
<msg timestamp="20201117 14:42:42.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.406" endtime="20201117 14:42:42.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.429" endtime="20201117 14:42:42.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.431" endtime="20201117 14:42:42.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.403" endtime="20201117 14:42:42.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.400" endtime="20201117 14:42:42.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.441" endtime="20201117 14:42:42.729"></status>
</kw>
<msg timestamp="20201117 14:42:42.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024308069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.440" endtime="20201117 14:42:42.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024308069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.733" endtime="20201117 14:42:42.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.742" endtime="20201117 14:42:42.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.437" endtime="20201117 14:42:42.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.435" endtime="20201117 14:42:42.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.749" level="INFO">${RESULT} = [{'time': 0.024372056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.398699999999799e-05, 'source_diff': 6.398699999999799e-05}, {'time': 0.024441083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:42.745" endtime="20201117 14:42:42.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.763" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:42.750" endtime="20201117 14:42:42.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.767" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.766" endtime="20201117 14:42:42.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.770" level="INFO">VALUE: [6.398699999999799e-05, 6.363899999999728e-05, 6.34439999999993e-05, 6.406899999999993e-05, 6.405500000000036e-05, 6.401400000000113e-05, 6.369499999999903e-05, 6.406899999999993e-05, 6.401400000000113e-05, 6.319399999999906e-05, 6.40280000000007e-05, 6.394499999999928e-05, 6.331999999999866e-05, 6.400000000000156e-05, 6.37500000000013e-05, 6.35699999999989e-05, 6.350000000000106e-05, 6.404200000000027e-05, 6.402700000000122e-05, 6.342999999999974e-05, 6.388800000000153e-05, 6.359799999999804e-05, 6.337500000000093e-05, 6.37500000000013e-05, 6.341600000000017e-05, 6.319399999999906e-05, 6.366699999999989e-05, 6.412499999999821e-05, 6.379200000000002e-05, 6.401399999999766e-05, 6.363900000000075e-05, 6.323599999999777e-05, 6.318099999999896e-05, 6.35280000000002e-05, 6.32500000000008e-05, 6.35699999999989e-05, 6.341699999999964e-05, 6.411099999999864e-05, 6.359700000000204e-05, 6.356899999999943e-05, 6.336099999999789e-05, 6.361099999999814e-05, 6.356899999999943e-05, 6.387499999999796e-05, 6.376400000000088e-05, 6.356899999999943e-05, 6.366699999999989e-05, 6.37500000000013e-05, 6.351400000000063e-05, 6.358300000000247e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.768" endtime="20201117 14:42:42.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.764" endtime="20201117 14:42:42.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.773" endtime="20201117 14:42:42.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.777" endtime="20201117 14:42:42.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.775" endtime="20201117 14:42:42.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.771" endtime="20201117 14:42:42.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.399" endtime="20201117 14:42:42.797"></status>
</kw>
<msg timestamp="20201117 14:42:42.798" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.806" endtime="20201117 14:42:42.825"></status>
</kw>
<msg timestamp="20201117 14:42:42.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.805" endtime="20201117 14:42:42.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.826" endtime="20201117 14:42:42.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.829" endtime="20201117 14:42:42.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.802" endtime="20201117 14:42:42.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.800" endtime="20201117 14:42:42.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.839" endtime="20201117 14:42:43.127"></status>
</kw>
<msg timestamp="20201117 14:42:43.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.837" endtime="20201117 14:42:43.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020039931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.131" endtime="20201117 14:42:43.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.139" endtime="20201117 14:42:43.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.835" endtime="20201117 14:42:43.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.833" endtime="20201117 14:42:43.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.146" level="INFO">${RESULT} = [{'time': 0.020103736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.380500000000011e-05, 'source_diff': 6.380500000000011e-05}, {'time': 0.020171736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.143" endtime="20201117 14:42:43.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:43.148" endtime="20201117 14:42:43.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.165" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.164" endtime="20201117 14:42:43.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.167" level="INFO">VALUE: [6.380500000000011e-05, 6.405500000000036e-05, 6.337499999999746e-05, 6.323600000000124e-05, 6.384699999999882e-05, 6.36950000000025e-05, 6.35699999999989e-05, 6.324999999999734e-05, 6.313900000000025e-05, 6.312500000000068e-05, 6.394499999999928e-05, 6.411199999999811e-05, 6.341699999999964e-05, 6.398599999999852e-05, 6.395799999999938e-05, 6.362500000000118e-05, 6.359699999999857e-05, 6.399999999999809e-05, 6.40280000000007e-05, 6.361099999999814e-05, 6.333299999999875e-05, 6.330499999999961e-05, 6.3582999999999e-05, 6.319399999999906e-05, 6.337500000000093e-05, 6.412500000000168e-05, 6.362499999999771e-05, 6.37500000000013e-05, 6.39029999999971e-05, 6.361100000000161e-05, 6.401400000000113e-05, 6.319499999999853e-05, 6.336200000000083e-05, 6.377700000000097e-05, 6.379200000000002e-05, 6.327799999999995e-05, 6.384700000000229e-05, 6.331899999999918e-05, 6.327799999999995e-05, 6.34439999999993e-05, 6.350000000000106e-05, 6.405500000000036e-05, 6.395800000000285e-05, 6.404200000000027e-05, 6.402799999999723e-05, 6.386099999999839e-05, 6.412500000000168e-05, 6.35699999999989e-05, 6.394499999999928e-05, 6.380599999999959e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.166" endtime="20201117 14:42:43.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.161" endtime="20201117 14:42:43.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.171" endtime="20201117 14:42:43.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.174" endtime="20201117 14:42:43.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.173" endtime="20201117 14:42:43.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.169" endtime="20201117 14:42:43.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.798" endtime="20201117 14:42:43.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.397" endtime="20201117 14:42:43.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.396" endtime="20201117 14:42:43.196"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.198" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.212" endtime="20201117 14:42:43.231"></status>
</kw>
<msg timestamp="20201117 14:42:43.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.210" endtime="20201117 14:42:43.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.233" endtime="20201117 14:42:43.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.236" endtime="20201117 14:42:43.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.202" endtime="20201117 14:42:43.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.200" endtime="20201117 14:42:43.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.245" endtime="20201117 14:42:43.532"></status>
</kw>
<msg timestamp="20201117 14:42:43.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028158014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028222542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.243" endtime="20201117 14:42:43.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028158014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028222542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.536" endtime="20201117 14:42:43.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.545" endtime="20201117 14:42:43.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.241" endtime="20201117 14:42:43.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.239" endtime="20201117 14:42:43.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.551" level="INFO">${RESULT} = [{'time': 0.028222542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.45280000000012e-05, 'source_diff': 6.45280000000012e-05}, {'time': 0.028292556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:43.548" endtime="20201117 14:42:43.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:43.553" endtime="20201117 14:42:43.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.571" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.570" endtime="20201117 14:42:43.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.574" level="INFO">VALUE: [6.45280000000012e-05, 6.463899999999828e-05, 6.418099999999996e-05, 6.438899999999803e-05, 6.501399999999866e-05, 6.427799999999748e-05, 6.501399999999866e-05, 6.49440000000008e-05, 6.445799999999988e-05, 6.505499999999789e-05, 6.44440000000003e-05, 6.418000000000049e-05, 6.42080000000031e-05, 6.418000000000049e-05, 6.488899999999853e-05, 6.47219999999997e-05, 6.470900000000307e-05, 6.494500000000028e-05, 6.508399999999998e-05, 6.455600000000034e-05, 6.480499999999764e-05, 6.454200000000077e-05, 6.49440000000008e-05, 6.433300000000322e-05, 6.455600000000034e-05, 6.469400000000056e-05, 6.509700000000007e-05, 6.420799999999963e-05, 6.469400000000056e-05, 6.440300000000107e-05, 6.445799999999988e-05, 6.481900000000068e-05, 6.495800000000038e-05, 6.491699999999767e-05, 6.462499999999871e-05, 6.419499999999953e-05, 6.465300000000132e-05, 6.483399999999973e-05, 6.416700000000039e-05, 6.455600000000034e-05, 6.469400000000056e-05, 6.434800000000226e-05, 6.4583e-05, 6.501300000000265e-05, 6.416599999999745e-05, 6.487500000000243e-05, 6.480500000000111e-05, 6.437499999999846e-05, 6.469399999999709e-05, 6.445800000000335e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.573" endtime="20201117 14:42:43.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.568" endtime="20201117 14:42:43.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.577" endtime="20201117 14:42:43.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.581" endtime="20201117 14:42:43.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.579" endtime="20201117 14:42:43.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.576" endtime="20201117 14:42:43.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.199" endtime="20201117 14:42:43.602"></status>
</kw>
<msg timestamp="20201117 14:42:43.602" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.611" endtime="20201117 14:42:43.630"></status>
</kw>
<msg timestamp="20201117 14:42:43.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.609" endtime="20201117 14:42:43.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.632" endtime="20201117 14:42:43.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.635" endtime="20201117 14:42:43.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.607" endtime="20201117 14:42:43.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.604" endtime="20201117 14:42:43.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.644" endtime="20201117 14:42:43.931"></status>
</kw>
<msg timestamp="20201117 14:42:43.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020610764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.642" endtime="20201117 14:42:43.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020610764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.936" endtime="20201117 14:42:43.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.944" endtime="20201117 14:42:43.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.640" endtime="20201117 14:42:43.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.638" endtime="20201117 14:42:43.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.951" level="INFO">${RESULT} = [{'time': 0.020610764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.448599999999902e-05, 'source_diff': 6.448599999999902e-05}, {'time': 0.020680792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.948" endtime="20201117 14:42:43.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:43.952" endtime="20201117 14:42:43.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.970" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.969" endtime="20201117 14:42:43.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.972" level="INFO">VALUE: [6.448599999999902e-05, 6.508399999999998e-05, 6.50280000000017e-05, 6.444500000000325e-05, 6.512499999999921e-05, 6.499999999999909e-05, 6.462499999999871e-05, 6.433299999999975e-05, 6.447199999999945e-05, 6.483300000000025e-05, 6.451400000000163e-05, 6.479099999999807e-05, 6.49020000000021e-05, 6.506900000000093e-05, 6.44440000000003e-05, 6.506900000000093e-05, 6.469400000000056e-05, 6.47500000000023e-05, 6.424999999999834e-05, 6.426400000000138e-05, 6.476400000000188e-05, 6.445899999999935e-05, 6.472300000000264e-05, 6.479199999999755e-05, 6.430600000000009e-05, 6.463899999999828e-05, 6.431900000000018e-05, 6.433299999999975e-05, 6.481900000000068e-05, 6.434699999999932e-05, 6.42639999999979e-05, 6.441600000000117e-05, 6.477800000000145e-05, 6.424999999999834e-05, 6.417999999999702e-05, 6.44440000000003e-05, 6.451400000000163e-05, 6.416700000000039e-05, 6.4889000000002e-05, 6.444499999999978e-05, 6.498599999999952e-05, 6.487499999999896e-05, 6.47639999999984e-05, 6.463899999999828e-05, 6.447199999999945e-05, 6.470800000000013e-05, 6.512499999999921e-05, 6.488799999999906e-05, 6.505499999999789e-05, 6.42219999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.971" endtime="20201117 14:42:43.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.966" endtime="20201117 14:42:43.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.976" endtime="20201117 14:42:43.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.979" endtime="20201117 14:42:43.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.978" endtime="20201117 14:42:43.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.974" endtime="20201117 14:42:44.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.603" endtime="20201117 14:42:44.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.197" endtime="20201117 14:42:44.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.196" endtime="20201117 14:42:44.001"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.003" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.012" endtime="20201117 14:42:44.032"></status>
</kw>
<msg timestamp="20201117 14:42:44.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.010" endtime="20201117 14:42:44.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.034" endtime="20201117 14:42:44.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.036" endtime="20201117 14:42:44.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.007" endtime="20201117 14:42:44.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.005" endtime="20201117 14:42:44.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.046" endtime="20201117 14:42:44.333"></status>
</kw>
<msg timestamp="20201117 14:42:44.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.044" endtime="20201117 14:42:44.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.337" endtime="20201117 14:42:44.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.345" endtime="20201117 14:42:44.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.041" endtime="20201117 14:42:44.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.040" endtime="20201117 14:42:44.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.352" level="INFO">${RESULT} = [{'time': 0.022856403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.559700000000057e-05, 'source_diff': 6.559700000000057e-05}, {'time': 0.022927472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:44.349" endtime="20201117 14:42:44.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:44.353" endtime="20201117 14:42:44.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.371" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.370" endtime="20201117 14:42:44.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.373" level="INFO">VALUE: [6.559700000000057e-05, 6.580500000000211e-05, 6.613899999999978e-05, 6.612500000000021e-05, 6.562499999999971e-05, 6.587499999999996e-05, 6.529199999999805e-05, 6.549999999999959e-05, 6.531900000000118e-05, 6.527799999999848e-05, 6.612500000000021e-05, 6.598600000000052e-05, 6.531900000000118e-05, 6.579199999999855e-05, 6.605600000000184e-05, 6.602799999999923e-05, 6.530600000000109e-05, 6.545800000000088e-05, 6.598600000000052e-05, 6.594499999999781e-05, 6.601399999999966e-05, 6.505600000000084e-05, 6.558400000000048e-05, 6.543100000000121e-05, 6.530600000000109e-05, 6.569500000000103e-05, 6.549999999999959e-05, 6.518000000000149e-05, 6.602799999999923e-05, 6.580500000000211e-05, 6.569399999999809e-05, 6.512499999999921e-05, 6.530500000000161e-05, 6.569399999999809e-05, 6.538899999999903e-05, 6.549999999999959e-05, 6.558400000000048e-05, 6.588899999999953e-05, 6.565299999999885e-05, 6.60839999999975e-05, 6.562499999999971e-05, 6.565300000000232e-05, 6.594500000000128e-05, 6.532000000000066e-05, 6.576299999999993e-05, 6.519399999999759e-05, 6.60830000000015e-05, 6.581899999999821e-05, 6.601399999999966e-05, 6.548600000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.372" endtime="20201117 14:42:44.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.367" endtime="20201117 14:42:44.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.377" endtime="20201117 14:42:44.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.381" endtime="20201117 14:42:44.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.379" endtime="20201117 14:42:44.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.375" endtime="20201117 14:42:44.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.004" endtime="20201117 14:42:44.401"></status>
</kw>
<msg timestamp="20201117 14:42:44.402" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.410" endtime="20201117 14:42:44.430"></status>
</kw>
<msg timestamp="20201117 14:42:44.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.409" endtime="20201117 14:42:44.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.432" endtime="20201117 14:42:44.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.435" endtime="20201117 14:42:44.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.406" endtime="20201117 14:42:44.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.404" endtime="20201117 14:42:44.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.445" endtime="20201117 14:42:44.732"></status>
</kw>
<msg timestamp="20201117 14:42:44.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.443" endtime="20201117 14:42:44.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.737" endtime="20201117 14:42:44.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.745" endtime="20201117 14:42:44.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.440" endtime="20201117 14:42:44.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.438" endtime="20201117 14:42:44.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.752" level="INFO">${RESULT} = [{'time': 0.020079722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583300000000125e-05, 'source_diff': 6.583300000000125e-05}, {'time': 0.02015075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:44.748" endtime="20201117 14:42:44.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:44.753" endtime="20201117 14:42:44.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.770" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.769" endtime="20201117 14:42:44.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.773" level="INFO">VALUE: [6.583300000000125e-05, 6.608299999999803e-05, 6.519400000000106e-05, 6.551399999999916e-05, 6.523599999999977e-05, 6.565299999999885e-05, 6.576400000000288e-05, 6.612500000000021e-05, 6.595900000000085e-05, 6.556999999999744e-05, 6.519500000000053e-05, 6.606999999999794e-05, 6.5583000000001e-05, 6.569499999999756e-05, 6.538799999999956e-05, 6.520800000000063e-05, 6.524999999999934e-05, 6.555500000000186e-05, 6.551400000000263e-05, 6.581900000000168e-05, 6.592999999999877e-05, 6.570800000000113e-05, 6.573600000000027e-05, 6.513899999999878e-05, 6.519400000000106e-05, 6.515300000000182e-05, 6.606900000000193e-05, 6.540300000000207e-05, 6.609800000000055e-05, 6.519499999999706e-05, 6.594500000000128e-05, 6.520800000000063e-05, 6.579100000000254e-05, 6.55700000000009e-05, 6.574999999999984e-05, 6.556900000000143e-05, 6.579099999999907e-05, 6.548600000000002e-05, 6.605499999999889e-05, 6.581900000000168e-05, 6.545800000000088e-05, 6.569400000000156e-05, 6.612500000000021e-05, 6.615300000000282e-05, 6.594500000000128e-05, 6.613899999999978e-05, 6.597300000000042e-05, 6.574999999999984e-05, 6.523599999999977e-05, 6.522299999999967e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.771" endtime="20201117 14:42:44.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.767" endtime="20201117 14:42:44.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.777" endtime="20201117 14:42:44.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.780" endtime="20201117 14:42:44.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.779" endtime="20201117 14:42:44.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.775" endtime="20201117 14:42:44.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.402" endtime="20201117 14:42:44.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.002" endtime="20201117 14:42:44.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.001" endtime="20201117 14:42:44.801"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.804" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.812" endtime="20201117 14:42:44.833"></status>
</kw>
<msg timestamp="20201117 14:42:44.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.811" endtime="20201117 14:42:44.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.834" endtime="20201117 14:42:44.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.837" endtime="20201117 14:42:44.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.808" endtime="20201117 14:42:44.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.806" endtime="20201117 14:42:44.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.846" endtime="20201117 14:42:45.134"></status>
</kw>
<msg timestamp="20201117 14:42:45.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.845" endtime="20201117 14:42:45.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.138" endtime="20201117 14:42:45.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.147" endtime="20201117 14:42:45.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.842" endtime="20201117 14:42:45.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.840" endtime="20201117 14:42:45.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.154" level="INFO">${RESULT} = [{'time': 0.022870458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665200000000038e-05, 'source_diff': 6.665200000000038e-05}, {'time': 0.022941458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.150" endtime="20201117 14:42:45.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:45.155" endtime="20201117 14:42:45.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.174" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.173" endtime="20201117 14:42:45.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.177" level="INFO">VALUE: [6.665200000000038e-05, 6.656900000000243e-05, 6.665299999999985e-05, 6.617999999999902e-05, 6.630599999999862e-05, 6.637500000000046e-05, 6.619399999999859e-05, 6.705599999999937e-05, 6.658299999999853e-05, 6.662500000000071e-05, 6.676399999999694e-05, 6.675000000000084e-05, 6.632000000000166e-05, 6.67359999999978e-05, 6.615199999999988e-05, 6.650000000000059e-05, 6.630500000000261e-05, 6.6277e-05, 6.651400000000016e-05, 6.62639999999999e-05, 6.669399999999909e-05, 6.652799999999973e-05, 6.648599999999755e-05, 6.642999999999927e-05, 6.665299999999985e-05, 6.62359999999973e-05, 6.688900000000053e-05, 6.655600000000234e-05, 6.644499999999831e-05, 6.700000000000109e-05, 6.609800000000055e-05, 6.641699999999917e-05, 6.656999999999844e-05, 6.637500000000046e-05, 6.6583000000002e-05, 6.647200000000145e-05, 6.679100000000007e-05, 6.663900000000028e-05, 6.694399999999934e-05, 6.687500000000096e-05, 6.686100000000139e-05, 6.652799999999973e-05, 6.616599999999945e-05, 6.638900000000003e-05, 6.687500000000096e-05, 6.712499999999774e-05, 6.681900000000268e-05, 6.675000000000084e-05, 6.698599999999805e-05, 6.69030000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.175" endtime="20201117 14:42:45.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.170" endtime="20201117 14:42:45.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.180" endtime="20201117 14:42:45.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.184" endtime="20201117 14:42:45.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.182" endtime="20201117 14:42:45.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.178" endtime="20201117 14:42:45.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.805" endtime="20201117 14:42:45.205"></status>
</kw>
<msg timestamp="20201117 14:42:45.205" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.213" endtime="20201117 14:42:45.233"></status>
</kw>
<msg timestamp="20201117 14:42:45.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.212" endtime="20201117 14:42:45.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.235" endtime="20201117 14:42:45.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.237" endtime="20201117 14:42:45.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.209" endtime="20201117 14:42:45.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.207" endtime="20201117 14:42:45.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.247" endtime="20201117 14:42:45.534"></status>
</kw>
<msg timestamp="20201117 14:42:45.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.245" endtime="20201117 14:42:45.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.539" endtime="20201117 14:42:45.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.547" endtime="20201117 14:42:45.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.242" endtime="20201117 14:42:45.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.241" endtime="20201117 14:42:45.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.554" level="INFO">${RESULT} = [{'time': 0.020094778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.644500000000178e-05, 'source_diff': 6.644500000000178e-05}, {'time': 0.020165736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.551" endtime="20201117 14:42:45.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:45.555" endtime="20201117 14:42:45.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.573" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.572" endtime="20201117 14:42:45.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.576" level="INFO">VALUE: [6.644500000000178e-05, 6.692999999999977e-05, 6.695799999999891e-05, 6.669399999999909e-05, 6.674999999999737e-05, 6.694499999999881e-05, 6.701400000000066e-05, 6.70839999999985e-05, 6.713900000000078e-05, 6.67359999999978e-05, 6.648600000000102e-05, 6.675000000000084e-05, 6.663800000000081e-05, 6.688900000000053e-05, 6.67359999999978e-05, 6.695799999999891e-05, 6.633299999999828e-05, 6.687500000000096e-05, 6.712499999999774e-05, 6.686099999999792e-05, 6.681899999999921e-05, 6.712500000000121e-05, 6.612500000000021e-05, 6.625000000000034e-05, 6.620899999999763e-05, 6.651400000000016e-05, 6.638900000000003e-05, 6.681999999999869e-05, 6.619400000000206e-05, 6.683300000000225e-05, 6.645800000000188e-05, 6.656900000000243e-05, 6.651400000000016e-05, 6.673600000000127e-05, 6.620799999999816e-05, 6.663900000000028e-05, 6.630499999999914e-05, 6.687500000000096e-05, 6.647200000000145e-05, 6.630499999999914e-05, 6.656899999999896e-05, 6.693099999999924e-05, 6.652799999999973e-05, 6.65280000000032e-05, 6.638900000000003e-05, 6.701400000000066e-05, 6.669499999999856e-05, 6.705599999999937e-05, 6.643099999999874e-05, 6.65700000000019e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.574" endtime="20201117 14:42:45.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.569" endtime="20201117 14:42:45.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.579" endtime="20201117 14:42:45.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.583" endtime="20201117 14:42:45.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.581" endtime="20201117 14:42:45.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.577" endtime="20201117 14:42:45.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.206" endtime="20201117 14:42:45.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.803" endtime="20201117 14:42:45.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.802" endtime="20201117 14:42:45.604"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.606" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.615" endtime="20201117 14:42:45.633"></status>
</kw>
<msg timestamp="20201117 14:42:45.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.613" endtime="20201117 14:42:45.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.635" endtime="20201117 14:42:45.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.638" endtime="20201117 14:42:45.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.610" endtime="20201117 14:42:45.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.608" endtime="20201117 14:42:45.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.647" endtime="20201117 14:42:45.934"></status>
</kw>
<msg timestamp="20201117 14:42:45.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.645" endtime="20201117 14:42:45.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.938" endtime="20201117 14:42:45.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.947" endtime="20201117 14:42:45.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.643" endtime="20201117 14:42:45.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.641" endtime="20201117 14:42:45.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.955" level="INFO">${RESULT} = [{'time': 0.022727847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.815299999999788e-05, 'source_diff': 6.815299999999788e-05}, {'time': 0.022799875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.951" endtime="20201117 14:42:45.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.968" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:45.956" endtime="20201117 14:42:45.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.973" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.972" endtime="20201117 14:42:45.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.975" level="INFO">VALUE: [6.815299999999788e-05, 6.770799999999966e-05, 6.798599999999905e-05, 6.715300000000035e-05, 6.780600000000012e-05, 6.751400000000116e-05, 6.731999999999919e-05, 6.770899999999913e-05, 6.80420000000008e-05, 6.768000000000052e-05, 6.733399999999876e-05, 6.748700000000149e-05, 6.765199999999791e-05, 6.806900000000046e-05, 6.768000000000052e-05, 6.762500000000171e-05, 6.731899999999971e-05, 6.779100000000107e-05, 6.745799999999941e-05, 6.77220000000027e-05, 6.736099999999842e-05, 6.749999999999812e-05, 6.806900000000046e-05, 6.727800000000048e-05, 6.72359999999983e-05, 6.725000000000134e-05, 6.737500000000146e-05, 6.736100000000189e-05, 6.800000000000209e-05, 6.797200000000295e-05, 6.813899999999831e-05, 6.761200000000162e-05, 6.751400000000116e-05, 6.769499999999956e-05, 6.751300000000168e-05, 6.719399999999959e-05, 6.715300000000035e-05, 6.795799999999991e-05, 6.765300000000085e-05, 6.774999999999837e-05, 6.756899999999996e-05, 6.737499999999799e-05, 6.731999999999919e-05, 6.787500000000196e-05, 6.793100000000024e-05, 6.750000000000159e-05, 6.799999999999862e-05, 6.712500000000121e-05, 6.749999999999812e-05, 6.738900000000103e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.974" endtime="20201117 14:42:45.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.969" endtime="20201117 14:42:45.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.979" endtime="20201117 14:42:45.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.982" endtime="20201117 14:42:46.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.981" endtime="20201117 14:42:46.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.977" endtime="20201117 14:42:46.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.607" endtime="20201117 14:42:46.003"></status>
</kw>
<msg timestamp="20201117 14:42:46.003" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.012" endtime="20201117 14:42:46.031"></status>
</kw>
<msg timestamp="20201117 14:42:46.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.010" endtime="20201117 14:42:46.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.033" endtime="20201117 14:42:46.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.035" endtime="20201117 14:42:46.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.008" endtime="20201117 14:42:46.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.006" endtime="20201117 14:42:46.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.045" endtime="20201117 14:42:46.332"></status>
</kw>
<msg timestamp="20201117 14:42:46.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:46.043" endtime="20201117 14:42:46.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:46.336" endtime="20201117 14:42:46.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.346" endtime="20201117 14:42:46.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.041" endtime="20201117 14:42:46.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.039" endtime="20201117 14:42:46.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.352" level="INFO">${RESULT} = [{'time': 0.020308917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.791700000000067e-05, 'source_diff': 6.791700000000067e-05}, {'time': 0.020378903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.349" endtime="20201117 14:42:46.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:46.353" endtime="20201117 14:42:46.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.371" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.370" endtime="20201117 14:42:46.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.373" level="INFO">VALUE: [6.791700000000067e-05, 6.738900000000103e-05, 6.784699999999935e-05, 6.799999999999862e-05, 6.813899999999831e-05, 6.743099999999974e-05, 6.752700000000125e-05, 6.763800000000181e-05, 6.781900000000021e-05, 6.711100000000164e-05, 6.738900000000103e-05, 6.737500000000146e-05, 6.770799999999966e-05, 6.779100000000107e-05, 6.751400000000116e-05, 6.806900000000046e-05, 6.749999999999812e-05, 6.794500000000328e-05, 6.794499999999981e-05, 6.768099999999999e-05, 6.799999999999862e-05, 6.802800000000123e-05, 6.769499999999956e-05, 6.780600000000012e-05, 6.731999999999919e-05, 6.752700000000125e-05, 6.787500000000196e-05, 6.745799999999941e-05, 6.75969999999991e-05, 6.733299999999928e-05, 6.737500000000146e-05, 6.787499999999849e-05, 6.775000000000184e-05, 6.75420000000003e-05, 6.79169999999972e-05, 6.781999999999969e-05, 6.744500000000278e-05, 6.72220000000022e-05, 6.801400000000166e-05, 6.812500000000221e-05, 6.775000000000184e-05, 6.794499999999981e-05, 6.731999999999919e-05, 6.752800000000073e-05, 6.744399999999984e-05, 6.726399999999744e-05, 6.758299999999953e-05, 6.77640000000014e-05, 6.798599999999905e-05, 6.808300000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.372" endtime="20201117 14:42:46.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.367" endtime="20201117 14:42:46.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.377" endtime="20201117 14:42:46.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.380" endtime="20201117 14:42:46.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.379" endtime="20201117 14:42:46.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.375" endtime="20201117 14:42:46.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.004" endtime="20201117 14:42:46.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.605" endtime="20201117 14:42:46.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.604" endtime="20201117 14:42:46.401"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.404" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.412" endtime="20201117 14:42:46.433"></status>
</kw>
<msg timestamp="20201117 14:42:46.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.411" endtime="20201117 14:42:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.434" endtime="20201117 14:42:46.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.437" endtime="20201117 14:42:46.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.408" endtime="20201117 14:42:46.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.406" endtime="20201117 14:42:46.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.447" endtime="20201117 14:42:46.734"></status>
</kw>
<msg timestamp="20201117 14:42:46.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.445" endtime="20201117 14:42:46.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.738" endtime="20201117 14:42:46.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.747" endtime="20201117 14:42:46.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.442" endtime="20201117 14:42:46.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.440" endtime="20201117 14:42:46.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.754" level="INFO">${RESULT} = [{'time': 0.022816069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.905500000000189e-05, 'source_diff': 6.905500000000189e-05}, {'time': 0.022890042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.750" endtime="20201117 14:42:46.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:46.755" endtime="20201117 14:42:46.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.774" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.773" endtime="20201117 14:42:46.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.776" level="INFO">VALUE: [6.905500000000189e-05, 6.894500000000081e-05, 6.862499999999924e-05, 6.865299999999838e-05, 6.852699999999878e-05, 6.844400000000084e-05, 6.888900000000253e-05, 6.888899999999906e-05, 6.843000000000127e-05, 6.870800000000066e-05, 6.82640000000019e-05, 6.813900000000178e-05, 6.824999999999887e-05, 6.82640000000019e-05, 6.849999999999912e-05, 6.844500000000031e-05, 6.906900000000146e-05, 6.869500000000056e-05, 6.862499999999924e-05, 6.85420000000013e-05, 6.855600000000087e-05, 6.880600000000112e-05, 6.845800000000041e-05, 6.908299999999756e-05, 6.886099999999992e-05, 6.816699999999745e-05, 6.893000000000177e-05, 6.822199999999973e-05, 6.815299999999788e-05, 6.879200000000155e-05, 6.880500000000164e-05, 6.901399999999919e-05, 6.844400000000084e-05, 6.844500000000031e-05, 6.87229999999997e-05, 6.901399999999919e-05, 6.882000000000069e-05, 6.862499999999924e-05, 6.887499999999949e-05, 6.881900000000121e-05, 6.915300000000235e-05, 6.905499999999842e-05, 6.872200000000023e-05, 6.825000000000234e-05, 6.890199999999916e-05, 6.874999999999937e-05, 6.834699999999985e-05, 6.894400000000134e-05, 6.826399999999844e-05, 6.837500000000246e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.775" endtime="20201117 14:42:46.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.770" endtime="20201117 14:42:46.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.780" endtime="20201117 14:42:46.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.783" endtime="20201117 14:42:46.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.782" endtime="20201117 14:42:46.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.778" endtime="20201117 14:42:46.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.405" endtime="20201117 14:42:46.804"></status>
</kw>
<msg timestamp="20201117 14:42:46.804" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.813" endtime="20201117 14:42:46.832"></status>
</kw>
<msg timestamp="20201117 14:42:46.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.811" endtime="20201117 14:42:46.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.833" endtime="20201117 14:42:46.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.836" endtime="20201117 14:42:46.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.809" endtime="20201117 14:42:46.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.807" endtime="20201117 14:42:46.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.846" endtime="20201117 14:42:47.134"></status>
</kw>
<msg timestamp="20201117 14:42:47.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.844" endtime="20201117 14:42:47.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.139" endtime="20201117 14:42:47.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.147" endtime="20201117 14:42:47.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.842" endtime="20201117 14:42:47.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.840" endtime="20201117 14:42:47.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.154" level="INFO">${RESULT} = [{'time': 0.020162056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.90840000000005e-05, 'source_diff': 6.90840000000005e-05}, {'time': 0.020235069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:47.151" endtime="20201117 14:42:47.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.168" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:47.155" endtime="20201117 14:42:47.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.173" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.172" endtime="20201117 14:42:47.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.175" level="INFO">VALUE: [6.90840000000005e-05, 6.855500000000139e-05, 6.84299999999978e-05, 6.900000000000309e-05, 6.825000000000234e-05, 6.870800000000066e-05, 6.830500000000114e-05, 6.863899999999881e-05, 6.881900000000121e-05, 6.876399999999894e-05, 6.916600000000245e-05, 6.920800000000116e-05, 6.880600000000112e-05, 6.815299999999788e-05, 6.863800000000281e-05, 6.837499999999899e-05, 6.888900000000253e-05, 6.905500000000189e-05, 6.887499999999949e-05, 6.837499999999899e-05, 6.844399999999737e-05, 6.89299999999983e-05, 6.849999999999912e-05, 6.825000000000234e-05, 6.841700000000117e-05, 6.904199999999833e-05, 6.863899999999881e-05, 6.891700000000167e-05, 6.888899999999906e-05, 6.874999999999937e-05, 6.877800000000198e-05, 6.909800000000008e-05, 6.880600000000112e-05, 6.857000000000044e-05, 6.833399999999976e-05, 6.843100000000074e-05, 6.844500000000031e-05, 6.869400000000109e-05, 6.869399999999762e-05, 6.822199999999973e-05, 6.913899999999931e-05, 6.816700000000092e-05, 6.82640000000019e-05, 6.818000000000102e-05, 6.890299999999863e-05, 6.90970000000006e-05, 6.849999999999912e-05, 6.893100000000124e-05, 6.870900000000013e-05, 6.848599999999955e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.174" endtime="20201117 14:42:47.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.169" endtime="20201117 14:42:47.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.178" endtime="20201117 14:42:47.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.182" endtime="20201117 14:42:47.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.180" endtime="20201117 14:42:47.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.177" endtime="20201117 14:42:47.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.805" endtime="20201117 14:42:47.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.403" endtime="20201117 14:42:47.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.402" endtime="20201117 14:42:47.203"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.206" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.215" endtime="20201117 14:42:47.235"></status>
</kw>
<msg timestamp="20201117 14:42:47.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.213" endtime="20201117 14:42:47.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.236" endtime="20201117 14:42:47.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.239" endtime="20201117 14:42:47.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.210" endtime="20201117 14:42:47.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.208" endtime="20201117 14:42:47.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.248" endtime="20201117 14:42:47.535"></status>
</kw>
<msg timestamp="20201117 14:42:47.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.247" endtime="20201117 14:42:47.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.539" endtime="20201117 14:42:47.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.548" endtime="20201117 14:42:47.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.244" endtime="20201117 14:42:47.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.242" endtime="20201117 14:42:47.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.555" level="INFO">${RESULT} = [{'time': 0.023397222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.017999999999955e-05, 'source_diff': 7.017999999999955e-05}, {'time': 0.023470194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.551" endtime="20201117 14:42:47.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.569" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:47.556" endtime="20201117 14:42:47.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.573" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.572" endtime="20201117 14:42:47.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.576" level="INFO">VALUE: [7.017999999999955e-05, 6.961100000000067e-05, 6.917999999999855e-05, 6.945799999999794e-05, 6.962500000000024e-05, 6.958299999999806e-05, 6.951399999999969e-05, 6.919500000000106e-05, 6.952799999999926e-05, 6.95559999999984e-05, 6.982000000000169e-05, 6.912499999999974e-05, 6.993099999999877e-05, 7.007000000000194e-05, 6.957000000000144e-05, 6.920800000000116e-05, 6.948700000000002e-05, 6.924999999999987e-05, 6.987500000000049e-05, 6.976399999999994e-05, 6.969399999999862e-05, 7.006900000000246e-05, 7.00970000000016e-05, 6.952799999999926e-05, 6.952800000000273e-05, 6.997199999999801e-05, 6.975000000000037e-05, 6.995899999999791e-05, 6.994499999999834e-05, 6.918099999999802e-05, 6.994500000000181e-05, 6.951399999999969e-05, 6.930600000000162e-05, 6.940199999999966e-05, 6.943099999999827e-05, 6.995799999999844e-05, 7.016699999999945e-05, 6.975000000000037e-05, 7.006899999999899e-05, 6.956899999999849e-05, 6.986100000000092e-05, 6.994400000000234e-05, 6.998600000000105e-05, 6.99160000000032e-05, 6.994399999999887e-05, 6.980600000000212e-05, 6.919399999999812e-05, 7.002799999999976e-05, 6.92360000000003e-05, 6.951399999999969e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.574" endtime="20201117 14:42:47.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.569" endtime="20201117 14:42:47.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.579" endtime="20201117 14:42:47.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.583" endtime="20201117 14:42:47.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.581" endtime="20201117 14:42:47.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.577" endtime="20201117 14:42:47.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.207" endtime="20201117 14:42:47.604"></status>
</kw>
<msg timestamp="20201117 14:42:47.604" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.613" endtime="20201117 14:42:47.632"></status>
</kw>
<msg timestamp="20201117 14:42:47.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.611" endtime="20201117 14:42:47.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.634" endtime="20201117 14:42:47.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.636" endtime="20201117 14:42:47.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.609" endtime="20201117 14:42:47.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.606" endtime="20201117 14:42:47.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.646" endtime="20201117 14:42:47.933"></status>
</kw>
<msg timestamp="20201117 14:42:47.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020511375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.644" endtime="20201117 14:42:47.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020511375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.937" endtime="20201117 14:42:47.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.946" endtime="20201117 14:42:47.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.642" endtime="20201117 14:42:47.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.640" endtime="20201117 14:42:47.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.953" level="INFO">${RESULT} = [{'time': 0.020580708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.933300000000128e-05, 'source_diff': 6.933300000000128e-05}, {'time': 0.020653708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.949" endtime="20201117 14:42:47.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:47.954" endtime="20201117 14:42:47.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.971" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.970" endtime="20201117 14:42:47.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.973" level="INFO">VALUE: [6.933300000000128e-05, 6.958299999999806e-05, 6.952799999999926e-05, 6.980499999999917e-05, 6.957000000000144e-05, 6.918000000000202e-05, 6.995800000000191e-05, 6.968000000000252e-05, 7.013900000000031e-05, 7.004199999999933e-05, 6.931999999999772e-05, 6.931900000000171e-05, 6.977799999999951e-05, 6.920900000000063e-05, 6.948600000000055e-05, 6.919500000000106e-05, 6.950000000000012e-05, 6.994399999999887e-05, 6.952699999999978e-05, 6.980500000000264e-05, 6.966699999999895e-05, 6.969399999999862e-05, 6.983300000000178e-05, 7.013900000000031e-05, 6.955499999999892e-05, 6.962500000000024e-05, 6.993099999999877e-05, 6.969400000000209e-05, 7.008299999999856e-05, 7.012500000000074e-05, 7.006999999999847e-05, 7.00559999999989e-05, 6.980599999999865e-05, 6.963899999999981e-05, 6.933400000000076e-05, 6.951300000000021e-05, 6.924999999999987e-05, 6.916700000000192e-05, 6.998600000000105e-05, 6.958300000000153e-05, 6.917999999999855e-05, 6.941599999999923e-05, 7.005499999999942e-05, 6.963899999999981e-05, 6.936100000000042e-05, 6.980499999999917e-05, 7.002799999999976e-05, 6.980599999999865e-05, 6.931899999999824e-05, 6.963899999999981e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.972" endtime="20201117 14:42:47.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.967" endtime="20201117 14:42:47.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.977" endtime="20201117 14:42:47.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.981" endtime="20201117 14:42:48.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.979" endtime="20201117 14:42:48.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.975" endtime="20201117 14:42:48.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.605" endtime="20201117 14:42:48.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.205" endtime="20201117 14:42:48.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.204" endtime="20201117 14:42:48.002"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.005" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.013" endtime="20201117 14:42:48.033"></status>
</kw>
<msg timestamp="20201117 14:42:48.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.012" endtime="20201117 14:42:48.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.034" endtime="20201117 14:42:48.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.037" endtime="20201117 14:42:48.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.009" endtime="20201117 14:42:48.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.007" endtime="20201117 14:42:48.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.046" endtime="20201117 14:42:48.334"></status>
</kw>
<msg timestamp="20201117 14:42:48.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022891736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.045" endtime="20201117 14:42:48.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022891736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.338" endtime="20201117 14:42:48.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.347" endtime="20201117 14:42:48.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.042" endtime="20201117 14:42:48.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.040" endtime="20201117 14:42:48.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.354" level="INFO">${RESULT} = [{'time': 0.022962431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069499999999909e-05, 'source_diff': 7.069499999999909e-05}, {'time': 0.023035458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:48.350" endtime="20201117 14:42:48.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.369" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:48.355" endtime="20201117 14:42:48.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.374" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.373" endtime="20201117 14:42:48.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.376" level="INFO">VALUE: [7.069499999999909e-05, 7.070800000000266e-05, 7.086100000000192e-05, 7.108299999999956e-05, 7.047199999999851e-05, 7.065300000000038e-05, 7.095799999999944e-05, 7.034700000000185e-05, 7.069400000000309e-05, 7.069500000000256e-05, 7.037500000000099e-05, 7.05420000000033e-05, 7.033399999999829e-05, 7.10559999999999e-05, 7.083399999999879e-05, 7.101399999999772e-05, 7.030499999999967e-05, 7.036099999999795e-05, 7.044499999999884e-05, 7.080500000000017e-05, 7.02360000000013e-05, 7.108299999999956e-05, 7.09300000000003e-05, 7.05689999999995e-05, 7.065300000000038e-05, 7.076400000000094e-05, 7.034700000000185e-05, 7.0584000000002e-05, 7.038900000000056e-05, 7.101400000000119e-05, 7.061100000000167e-05, 7.101399999999772e-05, 7.025000000000087e-05, 7.088899999999759e-05, 7.106999999999947e-05, 7.04169999999997e-05, 7.108299999999956e-05, 7.048599999999808e-05, 7.026400000000044e-05, 7.054100000000035e-05, 7.070800000000266e-05, 7.095799999999944e-05, 7.099999999999815e-05, 7.06109999999982e-05, 7.094399999999987e-05, 7.070799999999919e-05, 7.047200000000198e-05, 7.05559999999994e-05, 7.025000000000087e-05, 7.081999999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.375" endtime="20201117 14:42:48.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.370" endtime="20201117 14:42:48.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.380" endtime="20201117 14:42:48.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.384" endtime="20201117 14:42:48.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.382" endtime="20201117 14:42:48.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.378" endtime="20201117 14:42:48.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.005" endtime="20201117 14:42:48.404"></status>
</kw>
<msg timestamp="20201117 14:42:48.405" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.413" endtime="20201117 14:42:48.433"></status>
</kw>
<msg timestamp="20201117 14:42:48.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.411" endtime="20201117 14:42:48.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.434" endtime="20201117 14:42:48.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.437" endtime="20201117 14:42:48.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.409" endtime="20201117 14:42:48.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.407" endtime="20201117 14:42:48.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.446" endtime="20201117 14:42:48.733"></status>
</kw>
<msg timestamp="20201117 14:42:48.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.445" endtime="20201117 14:42:48.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.738" endtime="20201117 14:42:48.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.746" endtime="20201117 14:42:48.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.442" endtime="20201117 14:42:48.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.440" endtime="20201117 14:42:48.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.753" level="INFO">${RESULT} = [{'time': 0.020103194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.022200000000173e-05, 'source_diff': 7.022200000000173e-05}, {'time': 0.020176194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:48.750" endtime="20201117 14:42:48.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.767" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:48.754" endtime="20201117 14:42:48.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.771" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.770" endtime="20201117 14:42:48.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.774" level="INFO">VALUE: [7.022200000000173e-05, 7.081899999999974e-05, 7.101400000000119e-05, 7.081899999999974e-05, 7.068000000000005e-05, 7.072199999999876e-05, 7.02910000000001e-05, 7.022199999999826e-05, 7.05689999999995e-05, 7.094399999999987e-05, 7.093100000000324e-05, 7.022200000000173e-05, 7.025000000000087e-05, 7.019499999999859e-05, 7.055499999999992e-05, 7.020899999999816e-05, 7.111100000000217e-05, 7.034700000000185e-05, 7.087500000000149e-05, 7.036099999999795e-05, 7.083299999999931e-05, 7.04169999999997e-05, 7.069399999999962e-05, 7.017999999999955e-05, 7.080599999999965e-05, 7.016699999999945e-05, 7.094399999999987e-05, 7.101399999999772e-05, 7.099999999999815e-05, 7.093099999999977e-05, 7.065300000000038e-05, 7.050000000000112e-05, 7.062499999999777e-05, 7.050000000000112e-05, 7.019499999999859e-05, 7.10559999999999e-05, 7.10559999999999e-05, 7.115300000000088e-05, 7.06109999999982e-05, 7.036099999999795e-05, 7.051400000000069e-05, 7.087499999999802e-05, 7.075000000000137e-05, 7.047200000000198e-05, 7.037499999999752e-05, 7.099999999999815e-05, 7.063900000000081e-05, 7.070799999999919e-05, 7.047200000000198e-05, 7.052800000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.773" endtime="20201117 14:42:48.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.768" endtime="20201117 14:42:48.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.778" endtime="20201117 14:42:48.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.781" endtime="20201117 14:42:48.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.780" endtime="20201117 14:42:48.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.776" endtime="20201117 14:42:48.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.405" endtime="20201117 14:42:48.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.003" endtime="20201117 14:42:48.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.003" endtime="20201117 14:42:48.803"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.805" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.813" endtime="20201117 14:42:48.833"></status>
</kw>
<msg timestamp="20201117 14:42:48.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.812" endtime="20201117 14:42:48.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.835" endtime="20201117 14:42:48.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.837" endtime="20201117 14:42:48.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.809" endtime="20201117 14:42:48.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.807" endtime="20201117 14:42:48.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.847" endtime="20201117 14:42:49.134"></status>
</kw>
<msg timestamp="20201117 14:42:49.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.845" endtime="20201117 14:42:49.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.138" endtime="20201117 14:42:49.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.147" endtime="20201117 14:42:49.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.842" endtime="20201117 14:42:49.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.841" endtime="20201117 14:42:49.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.154" level="INFO">${RESULT} = [{'time': 0.022707431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.131999999999972e-05, 'source_diff': 7.131999999999972e-05}, {'time': 0.022784444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.150" endtime="20201117 14:42:49.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.167" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:49.155" endtime="20201117 14:42:49.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.172" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.171" endtime="20201117 14:42:49.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.175" level="INFO">VALUE: [7.131999999999972e-05, 7.176300000000246e-05, 7.212499999999927e-05, 7.17499999999989e-05, 7.202800000000176e-05, 7.195800000000044e-05, 7.138899999999809e-05, 7.119400000000012e-05, 7.151399999999822e-05, 7.159699999999963e-05, 7.156999999999997e-05, 7.212499999999927e-05, 7.122199999999926e-05, 7.158399999999954e-05, 7.179200000000108e-05, 7.199999999999915e-05, 7.14170000000007e-05, 7.182000000000022e-05, 7.134699999999938e-05, 7.122199999999926e-05, 7.194400000000087e-05, 7.208300000000056e-05, 7.162499999999877e-05, 7.145799999999994e-05, 7.169400000000062e-05, 7.14300000000008e-05, 7.166699999999748e-05, 7.12499999999984e-05, 7.194500000000034e-05, 7.130600000000015e-05, 7.131999999999972e-05, 7.144499999999984e-05, 7.207000000000047e-05, 7.119500000000306e-05, 7.158300000000006e-05, 7.131999999999972e-05, 7.181900000000074e-05, 7.142999999999733e-05, 7.205500000000142e-05, 7.15690000000005e-05, 7.129200000000058e-05, 7.15690000000005e-05, 7.179099999999813e-05, 7.122200000000273e-05, 7.119400000000012e-05, 7.119400000000012e-05, 7.137500000000199e-05, 7.125000000000187e-05, 7.158399999999954e-05, 7.159699999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.173" endtime="20201117 14:42:49.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.168" endtime="20201117 14:42:49.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.178" endtime="20201117 14:42:49.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.182" endtime="20201117 14:42:49.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.180" endtime="20201117 14:42:49.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.177" endtime="20201117 14:42:49.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.806" endtime="20201117 14:42:49.203"></status>
</kw>
<msg timestamp="20201117 14:42:49.203" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.212" endtime="20201117 14:42:49.231"></status>
</kw>
<msg timestamp="20201117 14:42:49.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.210" endtime="20201117 14:42:49.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.232" endtime="20201117 14:42:49.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.235" endtime="20201117 14:42:49.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.207" endtime="20201117 14:42:49.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.205" endtime="20201117 14:42:49.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.244" endtime="20201117 14:42:49.531"></status>
</kw>
<msg timestamp="20201117 14:42:49.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.243" endtime="20201117 14:42:49.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.536" endtime="20201117 14:42:49.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.544" endtime="20201117 14:42:49.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.240" endtime="20201117 14:42:49.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.238" endtime="20201117 14:42:49.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.551" level="INFO">${RESULT} = [{'time': 0.020256958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.201399999999872e-05, 'source_diff': 7.201399999999872e-05}, {'time': 0.020330972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.548" endtime="20201117 14:42:49.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:49.552" endtime="20201117 14:42:49.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.570" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.569" endtime="20201117 14:42:49.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.573" level="INFO">VALUE: [7.201399999999872e-05, 7.158300000000006e-05, 7.136099999999895e-05, 7.134699999999938e-05, 7.199999999999915e-05, 7.113899999999784e-05, 7.17499999999989e-05, 7.201399999999872e-05, 7.138899999999809e-05, 7.195800000000044e-05, 7.149999999999865e-05, 7.151399999999822e-05, 7.201400000000219e-05, 7.176399999999847e-05, 7.194500000000034e-05, 7.150000000000212e-05, 7.13620000000019e-05, 7.188900000000206e-05, 7.131900000000024e-05, 7.218100000000102e-05, 7.194400000000087e-05, 7.188900000000206e-05, 7.188899999999859e-05, 7.119399999999665e-05, 7.138899999999809e-05, 7.187499999999902e-05, 7.212499999999927e-05, 7.212499999999927e-05, 7.119499999999959e-05, 7.193100000000077e-05, 7.159699999999963e-05, 7.199999999999915e-05, 7.175000000000237e-05, 7.118100000000002e-05, 7.15560000000004e-05, 7.137500000000199e-05, 7.137500000000199e-05, 7.183300000000031e-05, 7.188900000000206e-05, 7.199999999999915e-05, 7.187500000000249e-05, 7.118000000000055e-05, 7.126400000000144e-05, 7.137500000000199e-05, 7.20560000000009e-05, 7.207000000000047e-05, 7.213900000000231e-05, 7.169500000000009e-05, 7.17499999999989e-05, 7.169500000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.571" endtime="20201117 14:42:49.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.566" endtime="20201117 14:42:49.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.576" endtime="20201117 14:42:49.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.579" endtime="20201117 14:42:49.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.578" endtime="20201117 14:42:49.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.574" endtime="20201117 14:42:49.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.204" endtime="20201117 14:42:49.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.804" endtime="20201117 14:42:49.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.803" endtime="20201117 14:42:49.601"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.603" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.612" endtime="20201117 14:42:49.631"></status>
</kw>
<msg timestamp="20201117 14:42:49.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.610" endtime="20201117 14:42:49.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.633" endtime="20201117 14:42:49.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.635" endtime="20201117 14:42:49.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.607" endtime="20201117 14:42:49.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.605" endtime="20201117 14:42:49.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.645" endtime="20201117 14:42:49.931"></status>
</kw>
<msg timestamp="20201117 14:42:49.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.643" endtime="20201117 14:42:49.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.936" endtime="20201117 14:42:49.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.944" endtime="20201117 14:42:49.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.640" endtime="20201117 14:42:49.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.639" endtime="20201117 14:42:49.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.952" level="INFO">${RESULT} = [{'time': 0.022771333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.298600000000058e-05, 'source_diff': 7.298600000000058e-05}, {'time': 0.022847361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.948" endtime="20201117 14:42:49.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:49.953" endtime="20201117 14:42:49.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.971" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.970" endtime="20201117 14:42:49.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.974" level="INFO">VALUE: [7.298600000000058e-05, 7.263899999999934e-05, 7.258300000000106e-05, 7.256899999999802e-05, 7.270899999999719e-05, 7.27499999999999e-05, 7.288900000000306e-05, 7.312500000000027e-05, 7.215299999999841e-05, 7.276399999999947e-05, 7.238899999999909e-05, 7.272200000000076e-05, 7.251299999999974e-05, 7.219400000000112e-05, 7.288800000000012e-05, 7.273600000000033e-05, 7.281899999999827e-05, 7.301399999999972e-05, 7.220800000000069e-05, 7.249999999999965e-05, 7.25690000000015e-05, 7.226399999999897e-05, 7.25829999999976e-05, 7.251399999999922e-05, 7.309700000000113e-05, 7.270900000000066e-05, 7.279200000000208e-05, 7.294500000000134e-05, 7.233399999999682e-05, 7.258300000000106e-05, 7.233400000000029e-05, 7.237499999999952e-05, 7.293100000000177e-05, 7.222200000000026e-05, 7.236099999999995e-05, 7.281900000000174e-05, 7.281899999999827e-05, 7.29439999999984e-05, 7.27499999999999e-05, 7.219500000000059e-05, 7.283299999999784e-05, 7.237499999999952e-05, 7.293100000000177e-05, 7.215299999999841e-05, 7.268099999999805e-05, 7.294499999999787e-05, 7.301400000000319e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.237499999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.973" endtime="20201117 14:42:49.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.968" endtime="20201117 14:42:49.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.977" endtime="20201117 14:42:49.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.981" endtime="20201117 14:42:50.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.979" endtime="20201117 14:42:50.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.976" endtime="20201117 14:42:50.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.604" endtime="20201117 14:42:50.002"></status>
</kw>
<msg timestamp="20201117 14:42:50.002" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.011" endtime="20201117 14:42:50.030"></status>
</kw>
<msg timestamp="20201117 14:42:50.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.009" endtime="20201117 14:42:50.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.032" endtime="20201117 14:42:50.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.034" endtime="20201117 14:42:50.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.006" endtime="20201117 14:42:50.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.004" endtime="20201117 14:42:50.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.044" endtime="20201117 14:42:50.331"></status>
</kw>
<msg timestamp="20201117 14:42:50.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.042" endtime="20201117 14:42:50.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020036417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.335" endtime="20201117 14:42:50.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.344" endtime="20201117 14:42:50.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.039" endtime="20201117 14:42:50.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.038" endtime="20201117 14:42:50.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.351" level="INFO">${RESULT} = [{'time': 0.020109014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.259700000000063e-05, 'source_diff': 7.259700000000063e-05}, {'time': 0.020187028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.347" endtime="20201117 14:42:50.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.364" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:50.352" endtime="20201117 14:42:50.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.369" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.368" endtime="20201117 14:42:50.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.372" level="INFO">VALUE: [7.259700000000063e-05, 7.301399999999972e-05, 7.270900000000066e-05, 7.283399999999732e-05, 7.24439999999979e-05, 7.25690000000015e-05, 7.227700000000253e-05, 7.28049999999987e-05, 7.254099999999888e-05, 7.24300000000018e-05, 7.233300000000081e-05, 7.269400000000162e-05, 7.301399999999972e-05, 7.24300000000018e-05, 7.236099999999995e-05, 7.301399999999972e-05, 7.216699999999798e-05, 7.269500000000109e-05, 7.300000000000015e-05, 7.226400000000244e-05, 7.300000000000015e-05, 7.218100000000102e-05, 7.307000000000147e-05, 7.229099999999863e-05, 7.268000000000205e-05, 7.252699999999931e-05, 7.302699999999981e-05, 7.238900000000256e-05, 7.309700000000113e-05, 7.226399999999897e-05, 7.255499999999845e-05, 7.237500000000299e-05, 7.237500000000299e-05, 7.259700000000063e-05, 7.27499999999999e-05, 7.270900000000066e-05, 7.31110000000007e-05, 7.301399999999972e-05, 7.26110000000002e-05, 7.244500000000084e-05, 7.27499999999999e-05, 7.252699999999931e-05, 7.268000000000205e-05, 7.238799999999962e-05, 7.226399999999897e-05, 7.283300000000131e-05, 7.23049999999982e-05, 7.226399999999897e-05, 7.262499999999977e-05, 7.226399999999897e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.370" endtime="20201117 14:42:50.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.365" endtime="20201117 14:42:50.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.375" endtime="20201117 14:42:50.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.378" endtime="20201117 14:42:50.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.377" endtime="20201117 14:42:50.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.373" endtime="20201117 14:42:50.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.003" endtime="20201117 14:42:50.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.602" endtime="20201117 14:42:50.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.601" endtime="20201117 14:42:50.400"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.402" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.411" endtime="20201117 14:42:50.431"></status>
</kw>
<msg timestamp="20201117 14:42:50.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.409" endtime="20201117 14:42:50.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.432" endtime="20201117 14:42:50.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.435" endtime="20201117 14:42:50.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.406" endtime="20201117 14:42:50.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.404" endtime="20201117 14:42:50.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.445" endtime="20201117 14:42:50.732"></status>
</kw>
<msg timestamp="20201117 14:42:50.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.443" endtime="20201117 14:42:50.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.736" endtime="20201117 14:42:50.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.745" endtime="20201117 14:42:50.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.440" endtime="20201117 14:42:50.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.438" endtime="20201117 14:42:50.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.752" level="INFO">${RESULT} = [{'time': 0.022701319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.392999999999983e-05, 'source_diff': 7.392999999999983e-05}, {'time': 0.022779306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.748" endtime="20201117 14:42:50.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:50.753" endtime="20201117 14:42:50.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.770" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.769" endtime="20201117 14:42:50.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.773" level="INFO">VALUE: [7.392999999999983e-05, 7.361200000000068e-05, 7.395800000000244e-05, 7.379100000000013e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.367999999999958e-05, 7.383300000000231e-05, 7.326399999999997e-05, 7.331899999999877e-05, 7.369500000000209e-05, 7.4069999999999e-05, 7.365299999999991e-05, 7.398600000000158e-05, 7.380600000000265e-05, 7.318100000000202e-05, 7.358300000000206e-05, 7.359800000000111e-05, 7.40829999999991e-05, 7.313800000000037e-05, 7.40829999999991e-05, 7.381899999999927e-05, 7.400000000000115e-05, 7.32500000000004e-05, 7.319399999999865e-05, 7.366699999999948e-05, 7.376400000000047e-05, 7.394499999999887e-05, 7.369399999999915e-05, 7.345900000000141e-05, 7.359699999999816e-05, 7.39309999999993e-05, 7.338900000000009e-05, 7.333299999999834e-05, 7.39309999999993e-05, 7.34309999999988e-05, 7.381899999999927e-05, 7.340300000000313e-05, 7.319399999999865e-05, 7.34439999999989e-05, 7.387500000000102e-05, 7.38049999999997e-05, 7.392999999999983e-05, 7.406899999999952e-05, 7.413900000000084e-05, 7.362500000000077e-05, 7.388900000000059e-05, 7.383399999999832e-05, 7.387499999999755e-05, 7.41249999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.771" endtime="20201117 14:42:50.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.766" endtime="20201117 14:42:50.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.776" endtime="20201117 14:42:50.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.780" endtime="20201117 14:42:50.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.778" endtime="20201117 14:42:50.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.774" endtime="20201117 14:42:50.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.403" endtime="20201117 14:42:50.800"></status>
</kw>
<msg timestamp="20201117 14:42:50.801" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.809" endtime="20201117 14:42:50.828"></status>
</kw>
<msg timestamp="20201117 14:42:50.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.808" endtime="20201117 14:42:50.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.830" endtime="20201117 14:42:50.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.833" endtime="20201117 14:42:50.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.805" endtime="20201117 14:42:50.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.803" endtime="20201117 14:42:50.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.842" endtime="20201117 14:42:51.129"></status>
</kw>
<msg timestamp="20201117 14:42:51.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.841" endtime="20201117 14:42:51.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.133" endtime="20201117 14:42:51.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.142" endtime="20201117 14:42:51.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.838" endtime="20201117 14:42:51.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.836" endtime="20201117 14:42:51.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.149" level="INFO">${RESULT} = [{'time': 0.020087069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.334699999999791e-05, 'source_diff': 7.334699999999791e-05}, {'time': 0.020163069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.145" endtime="20201117 14:42:51.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:51.150" endtime="20201117 14:42:51.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.167" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.166" endtime="20201117 14:42:51.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.170" level="INFO">VALUE: [7.334699999999791e-05, 7.35829999999986e-05, 7.367999999999958e-05, 7.398600000000158e-05, 7.404199999999986e-05, 7.374999999999743e-05, 7.383299999999884e-05, 7.333300000000181e-05, 7.345799999999847e-05, 7.318099999999855e-05, 7.32500000000004e-05, 7.382000000000222e-05, 7.331999999999825e-05, 7.387500000000102e-05, 7.324999999999693e-05, 7.401400000000072e-05, 7.388900000000059e-05, 7.41249999999978e-05, 7.395899999999844e-05, 7.34439999999989e-05, 7.32500000000004e-05, 7.368000000000305e-05, 7.355499999999945e-05, 7.413900000000084e-05, 7.365299999999991e-05, 7.405499999999995e-05, 7.359699999999816e-05, 7.326399999999997e-05, 7.343100000000227e-05, 7.379199999999961e-05, 7.398600000000158e-05, 7.35699999999985e-05, 7.352799999999979e-05, 7.326399999999997e-05, 7.312500000000027e-05, 7.347199999999804e-05, 7.32370000000003e-05, 7.31379999999969e-05, 7.312500000000027e-05, 7.35690000000025e-05, 7.345799999999847e-05, 7.397199999999854e-05, 7.399999999999768e-05, 7.319400000000212e-05, 7.312500000000027e-05, 7.331899999999877e-05, 7.394499999999887e-05, 7.354199999999936e-05, 7.387500000000102e-05, 7.352799999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.168" endtime="20201117 14:42:51.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.163" endtime="20201117 14:42:51.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.173" endtime="20201117 14:42:51.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.177" endtime="20201117 14:42:51.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.175" endtime="20201117 14:42:51.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.171" endtime="20201117 14:42:51.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.801" endtime="20201117 14:42:51.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.401" endtime="20201117 14:42:51.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.400" endtime="20201117 14:42:51.198"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.200" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.209" endtime="20201117 14:42:51.229"></status>
</kw>
<msg timestamp="20201117 14:42:51.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.208" endtime="20201117 14:42:51.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.230" endtime="20201117 14:42:51.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.233" endtime="20201117 14:42:51.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.204" endtime="20201117 14:42:51.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.202" endtime="20201117 14:42:51.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.242" endtime="20201117 14:42:51.530"></status>
</kw>
<msg timestamp="20201117 14:42:51.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023232375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023307417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.241" endtime="20201117 14:42:51.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023232375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023307417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.535" endtime="20201117 14:42:51.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.544" endtime="20201117 14:42:51.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.238" endtime="20201117 14:42:51.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.236" endtime="20201117 14:42:51.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.551" level="INFO">${RESULT} = [{'time': 0.023307417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.504200000000086e-05, 'source_diff': 7.504200000000086e-05}, {'time': 0.023384431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.547" endtime="20201117 14:42:51.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:51.552" endtime="20201117 14:42:51.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.615" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.613" endtime="20201117 14:42:51.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.617" level="INFO">VALUE: [7.504200000000086e-05, 7.444499999999937e-05, 7.415200000000094e-05, 7.450000000000165e-05, 7.50830000000001e-05, 7.450000000000165e-05, 7.41110000000017e-05, 7.502800000000129e-05, 7.505499999999748e-05, 7.452800000000079e-05, 7.505600000000043e-05, 7.483299999999984e-05, 7.413899999999737e-05, 7.501400000000172e-05, 7.427800000000054e-05, 7.469499999999962e-05, 7.441599999999729e-05, 7.509699999999966e-05, 7.506900000000052e-05, 7.491600000000126e-05, 7.50830000000001e-05, 7.473600000000233e-05, 7.491700000000073e-05, 7.436100000000195e-05, 7.429200000000011e-05, 7.423600000000183e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.513899999999837e-05, 7.438899999999762e-05, 7.4763999999998e-05, 7.466700000000048e-05, 7.429200000000011e-05, 7.463899999999787e-05, 7.458400000000254e-05, 7.440200000000119e-05, 7.488799999999865e-05, 7.474999999999843e-05, 7.488900000000159e-05, 7.487499999999855e-05, 7.436099999999848e-05, 7.438899999999762e-05, 7.499999999999868e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.456900000000002e-05, 7.501399999999825e-05, 7.437500000000152e-05, 7.470899999999919e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.616" endtime="20201117 14:42:51.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.611" endtime="20201117 14:42:51.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.620" endtime="20201117 14:42:51.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.624" endtime="20201117 14:42:51.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.622" endtime="20201117 14:42:51.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.619" endtime="20201117 14:42:51.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.201" endtime="20201117 14:42:51.645"></status>
</kw>
<msg timestamp="20201117 14:42:51.645" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.654" endtime="20201117 14:42:51.674"></status>
</kw>
<msg timestamp="20201117 14:42:51.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.653" endtime="20201117 14:42:51.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.675" endtime="20201117 14:42:51.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.678" endtime="20201117 14:42:51.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.650" endtime="20201117 14:42:51.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.648" endtime="20201117 14:42:51.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.687" endtime="20201117 14:42:51.974"></status>
</kw>
<msg timestamp="20201117 14:42:51.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021378333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.686" endtime="20201117 14:42:51.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021378333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.978" endtime="20201117 14:42:51.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.986" endtime="20201117 14:42:51.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.683" endtime="20201117 14:42:51.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.681" endtime="20201117 14:42:51.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.993" level="INFO">${RESULT} = [{'time': 0.021453472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513900000000184e-05, 'source_diff': 7.513900000000184e-05}, {'time': 0.021530514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.990" endtime="20201117 14:42:51.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:51.994" endtime="20201117 14:42:52.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.012" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.011" endtime="20201117 14:42:52.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.014" level="INFO">VALUE: [7.513900000000184e-05, 7.498599999999911e-05, 7.50830000000001e-05, 7.506900000000052e-05, 7.50830000000001e-05, 7.51249999999988e-05, 7.513899999999837e-05, 7.449999999999818e-05, 7.488899999999812e-05, 7.426400000000097e-05, 7.459799999999864e-05, 7.420900000000216e-05, 7.447200000000251e-05, 7.434699999999891e-05, 7.498699999999858e-05, 7.430599999999968e-05, 7.44309999999998e-05, 7.456900000000002e-05, 7.501399999999825e-05, 7.445799999999947e-05, 7.472199999999929e-05, 7.433299999999934e-05, 7.472199999999929e-05, 7.506900000000052e-05, 7.438899999999762e-05, 7.505600000000043e-05, 7.426400000000097e-05, 7.491700000000073e-05, 7.452800000000079e-05, 7.44309999999998e-05, 7.424999999999793e-05, 7.424999999999793e-05, 7.448699999999808e-05, 7.47500000000019e-05, 7.495799999999997e-05, 7.437500000000152e-05, 7.50830000000001e-05, 7.476400000000147e-05, 7.501399999999825e-05, 7.45829999999996e-05, 7.469400000000015e-05, 7.447199999999904e-05, 7.490300000000116e-05, 7.494499999999987e-05, 7.4763999999998e-05, 7.508399999999957e-05, 7.486099999999898e-05, 7.420899999999869e-05, 7.436099999999848e-05, 7.465200000000144e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.013" endtime="20201117 14:42:52.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.008" endtime="20201117 14:42:52.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.018" endtime="20201117 14:42:52.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.021" endtime="20201117 14:42:52.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.020" endtime="20201117 14:42:52.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.016" endtime="20201117 14:42:52.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.646" endtime="20201117 14:42:52.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.199" endtime="20201117 14:42:52.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.198" endtime="20201117 14:42:52.043"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.045" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.055" endtime="20201117 14:42:52.074"></status>
</kw>
<msg timestamp="20201117 14:42:52.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.053" endtime="20201117 14:42:52.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.076" endtime="20201117 14:42:52.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.078" endtime="20201117 14:42:52.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.050" endtime="20201117 14:42:52.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.047" endtime="20201117 14:42:52.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.088" endtime="20201117 14:42:52.373"></status>
</kw>
<msg timestamp="20201117 14:42:52.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023708347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023784181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.086" endtime="20201117 14:42:52.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023708347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023784181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.377" endtime="20201117 14:42:52.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.385" endtime="20201117 14:42:52.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.083" endtime="20201117 14:42:52.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.082" endtime="20201117 14:42:52.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.392" level="INFO">${RESULT} = [{'time': 0.023784181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.583400000000032e-05, 'source_diff': 7.583400000000032e-05}, {'time': 0.023865167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.389" endtime="20201117 14:42:52.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:52.394" endtime="20201117 14:42:52.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.411" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.410" endtime="20201117 14:42:52.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.414" level="INFO">VALUE: [7.583400000000032e-05, 7.599999999999968e-05, 7.538899999999862e-05, 7.56379999999994e-05, 7.515199999999847e-05, 7.602800000000229e-05, 7.59440000000014e-05, 7.574999999999943e-05, 7.555499999999798e-05, 7.549999999999918e-05, 7.57500000000029e-05, 7.54310000000008e-05, 7.565300000000191e-05, 7.533399999999982e-05, 7.59449999999974e-05, 7.587499999999955e-05, 7.524999999999893e-05, 7.561099999999973e-05, 7.568100000000105e-05, 7.559700000000016e-05, 7.60830000000011e-05, 7.562500000000277e-05, 7.584699999999694e-05, 7.53050000000012e-05, 7.58189999999978e-05, 7.54440000000009e-05, 7.563899999999887e-05, 7.602800000000229e-05, 7.577800000000204e-05, 7.552800000000179e-05, 7.52500000000024e-05, 7.580599999999771e-05, 7.587499999999955e-05, 7.550000000000265e-05, 7.563899999999887e-05, 7.524999999999893e-05, 7.544500000000037e-05, 7.580599999999771e-05, 7.552700000000231e-05, 7.576400000000247e-05, 7.519400000000065e-05, 7.608299999999762e-05, 7.570800000000072e-05, 7.569400000000115e-05, 7.549999999999918e-05, 7.523599999999936e-05, 7.547200000000004e-05, 7.568099999999758e-05, 7.569500000000062e-05, 7.549999999999918e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.412" endtime="20201117 14:42:52.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.407" endtime="20201117 14:42:52.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.417" endtime="20201117 14:42:52.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.421" endtime="20201117 14:42:52.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.419" endtime="20201117 14:42:52.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.416" endtime="20201117 14:42:52.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.046" endtime="20201117 14:42:52.442"></status>
</kw>
<msg timestamp="20201117 14:42:52.442" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.451" endtime="20201117 14:42:52.470"></status>
</kw>
<msg timestamp="20201117 14:42:52.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.450" endtime="20201117 14:42:52.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.472" endtime="20201117 14:42:52.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.475" endtime="20201117 14:42:52.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.446" endtime="20201117 14:42:52.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.444" endtime="20201117 14:42:52.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.484" endtime="20201117 14:42:52.770"></status>
</kw>
<msg timestamp="20201117 14:42:52.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021047694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.483" endtime="20201117 14:42:52.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021047694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.774" endtime="20201117 14:42:52.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.783" endtime="20201117 14:42:52.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.480" endtime="20201117 14:42:52.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.478" endtime="20201117 14:42:52.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.790" level="INFO">${RESULT} = [{'time': 0.021047694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.565199999999897e-05, 'source_diff': 7.565199999999897e-05}, {'time': 0.021127722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.786" endtime="20201117 14:42:52.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:52.791" endtime="20201117 14:42:52.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.808" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.807" endtime="20201117 14:42:52.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.811" level="INFO">VALUE: [7.565199999999897e-05, 7.527800000000154e-05, 7.537499999999905e-05, 7.598600000000011e-05, 7.538899999999862e-05, 7.569400000000115e-05, 7.537499999999905e-05, 7.532000000000025e-05, 7.54310000000008e-05, 7.558400000000007e-05, 7.587499999999955e-05, 7.613899999999937e-05, 7.522199999999979e-05, 7.551400000000222e-05, 7.601299999999978e-05, 7.55830000000006e-05, 7.55830000000006e-05, 7.56249999999993e-05, 7.584799999999989e-05, 7.574999999999943e-05, 7.551399999999875e-05, 7.602800000000229e-05, 7.519399999999718e-05, 7.569400000000115e-05, 7.599999999999968e-05, 7.548599999999961e-05, 7.540300000000166e-05, 7.518100000000055e-05, 7.52639999999985e-05, 7.577799999999857e-05, 7.532000000000025e-05, 7.606900000000152e-05, 7.545800000000047e-05, 7.531900000000077e-05, 7.533300000000034e-05, 7.59449999999974e-05, 7.549999999999918e-05, 7.579099999999866e-05, 7.569400000000115e-05, 7.523599999999936e-05, 7.598600000000011e-05, 7.572199999999682e-05, 7.570800000000072e-05, 7.608400000000057e-05, 7.518099999999708e-05, 7.608400000000057e-05, 7.565300000000191e-05, 7.537500000000252e-05, 7.526400000000197e-05, 7.591599999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.809" endtime="20201117 14:42:52.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.804" endtime="20201117 14:42:52.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.814" endtime="20201117 14:42:52.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.818" endtime="20201117 14:42:52.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.816" endtime="20201117 14:42:52.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.813" endtime="20201117 14:42:52.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.443" endtime="20201117 14:42:52.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.044" endtime="20201117 14:42:52.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.043" endtime="20201117 14:42:52.839"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.841" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.850" endtime="20201117 14:42:52.871"></status>
</kw>
<msg timestamp="20201117 14:42:52.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.848" endtime="20201117 14:42:52.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.872" endtime="20201117 14:42:52.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.875" endtime="20201117 14:42:52.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.846" endtime="20201117 14:42:52.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.844" endtime="20201117 14:42:52.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.884" endtime="20201117 14:42:53.171"></status>
</kw>
<msg timestamp="20201117 14:42:53.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023794625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023871444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.883" endtime="20201117 14:42:53.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023794625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023871444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.175" endtime="20201117 14:42:53.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.184" endtime="20201117 14:42:53.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.880" endtime="20201117 14:42:53.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.878" endtime="20201117 14:42:53.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.191" level="INFO">${RESULT} = [{'time': 0.023871444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.68189999999988e-05, 'source_diff': 7.68189999999988e-05}, {'time': 0.023953431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:53.187" endtime="20201117 14:42:53.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:53.192" endtime="20201117 14:42:53.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.210" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.209" endtime="20201117 14:42:53.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.213" level="INFO">VALUE: [7.68189999999988e-05, 7.644500000000137e-05, 7.669399999999868e-05, 7.690199999999675e-05, 7.69310000000023e-05, 7.663899999999987e-05, 7.709700000000166e-05, 7.66250000000003e-05, 7.656900000000202e-05, 7.634700000000091e-05, 7.669400000000215e-05, 7.66250000000003e-05, 7.637500000000005e-05, 7.669499999999815e-05, 7.647200000000104e-05, 7.655600000000193e-05, 7.620900000000069e-05, 7.666699999999901e-05, 7.624999999999993e-05, 7.686099999999751e-05, 7.631900000000177e-05, 7.620800000000122e-05, 7.673599999999739e-05, 7.644399999999843e-05, 7.709700000000166e-05, 7.702799999999982e-05, 7.675000000000043e-05, 7.670800000000172e-05, 7.64310000000018e-05, 7.708400000000157e-05, 7.620900000000069e-05, 7.666699999999901e-05, 7.69449999999984e-05, 7.644500000000137e-05, 7.643099999999833e-05, 7.62769999999996e-05, 7.709700000000166e-05, 7.701400000000025e-05, 7.62639999999995e-05, 7.64440000000019e-05, 7.687500000000055e-05, 7.692999999999936e-05, 7.624999999999993e-05, 7.663899999999987e-05, 7.62639999999995e-05, 7.663899999999987e-05, 7.694500000000187e-05, 7.658400000000107e-05, 7.620900000000069e-05, 7.683399999999785e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.211" endtime="20201117 14:42:53.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.207" endtime="20201117 14:42:53.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.217" endtime="20201117 14:42:53.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.220" endtime="20201117 14:42:53.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.219" endtime="20201117 14:42:53.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.215" endtime="20201117 14:42:53.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.842" endtime="20201117 14:42:53.241"></status>
</kw>
<msg timestamp="20201117 14:42:53.241" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.250" endtime="20201117 14:42:53.270"></status>
</kw>
<msg timestamp="20201117 14:42:53.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.248" endtime="20201117 14:42:53.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.272" endtime="20201117 14:42:53.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.275" endtime="20201117 14:42:53.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.245" endtime="20201117 14:42:53.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.243" endtime="20201117 14:42:53.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.286" endtime="20201117 14:42:53.571"></status>
</kw>
<msg timestamp="20201117 14:42:53.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.284" endtime="20201117 14:42:53.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.576" endtime="20201117 14:42:53.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.584" endtime="20201117 14:42:53.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.281" endtime="20201117 14:42:53.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.280" endtime="20201117 14:42:53.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.591" level="INFO">${RESULT} = [{'time': 0.020146458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.644399999999843e-05, 'source_diff': 7.644399999999843e-05}, {'time': 0.020227472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.588" endtime="20201117 14:42:53.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.605" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:53.592" endtime="20201117 14:42:53.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.610" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.609" endtime="20201117 14:42:53.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.613" level="INFO">VALUE: [7.644399999999843e-05, 7.687500000000055e-05, 7.692999999999936e-05, 7.638899999999962e-05, 7.701400000000025e-05, 7.69449999999984e-05, 7.709700000000166e-05, 7.713900000000037e-05, 7.645900000000094e-05, 7.633399999999735e-05, 7.624999999999993e-05, 7.666700000000248e-05, 7.688900000000012e-05, 7.7151999999997e-05, 7.626300000000003e-05, 7.683299999999837e-05, 7.669399999999868e-05, 7.66250000000003e-05, 7.702799999999982e-05, 7.669400000000215e-05, 7.665299999999944e-05, 7.705499999999949e-05, 7.701400000000025e-05, 7.663899999999987e-05, 7.683400000000132e-05, 7.711099999999776e-05, 7.701400000000025e-05, 7.637500000000005e-05, 7.644500000000137e-05, 7.670800000000172e-05, 7.636199999999996e-05, 7.61249999999998e-05, 7.711100000000123e-05, 7.694399999999893e-05, 7.691699999999926e-05, 7.644399999999843e-05, 7.673600000000086e-05, 7.651399999999975e-05, 7.684700000000141e-05, 7.627800000000254e-05, 7.711099999999776e-05, 7.62639999999995e-05, 7.670899999999772e-05, 7.705600000000243e-05, 7.645899999999747e-05, 7.619500000000112e-05, 7.668099999999858e-05, 7.670800000000172e-05, 7.62769999999996e-05, 7.681900000000227e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.611" endtime="20201117 14:42:53.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.606" endtime="20201117 14:42:53.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.616" endtime="20201117 14:42:53.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.620" endtime="20201117 14:42:53.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.618" endtime="20201117 14:42:53.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.614" endtime="20201117 14:42:53.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.242" endtime="20201117 14:42:53.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.840" endtime="20201117 14:42:53.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.839" endtime="20201117 14:42:53.641"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.643" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.652" endtime="20201117 14:42:53.671"></status>
</kw>
<msg timestamp="20201117 14:42:53.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.650" endtime="20201117 14:42:53.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.673" endtime="20201117 14:42:53.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.676" endtime="20201117 14:42:53.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.647" endtime="20201117 14:42:53.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.645" endtime="20201117 14:42:53.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.685" endtime="20201117 14:42:53.971"></status>
</kw>
<msg timestamp="20201117 14:42:53.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.684" endtime="20201117 14:42:53.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.975" endtime="20201117 14:42:53.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.984" endtime="20201117 14:42:53.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.681" endtime="20201117 14:42:53.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.679" endtime="20201117 14:42:53.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.991" level="INFO">${RESULT} = [{'time': 0.023056667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.809799999999867e-05, 'source_diff': 7.809799999999867e-05}, {'time': 0.023137625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.988" endtime="20201117 14:42:53.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.005" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:53.992" endtime="20201117 14:42:54.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.010" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.009" endtime="20201117 14:42:54.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.012" level="INFO">VALUE: [7.809799999999867e-05, 7.761099999999826e-05, 7.732000000000225e-05, 7.766700000000001e-05, 7.719499999999865e-05, 7.761099999999826e-05, 7.801400000000125e-05, 7.783300000000284e-05, 7.812499999999833e-05, 7.793000000000036e-05, 7.750000000000118e-05, 7.736099999999801e-05, 7.806900000000006e-05, 7.737499999999758e-05, 7.769399999999968e-05, 7.81250000000018e-05, 7.755599999999946e-05, 7.722300000000126e-05, 7.723600000000136e-05, 7.79449999999994e-05, 7.770900000000219e-05, 7.806999999999953e-05, 7.718100000000255e-05, 7.719499999999865e-05, 7.777800000000057e-05, 7.77909999999972e-05, 7.747199999999857e-05, 7.806900000000006e-05, 7.800000000000168e-05, 7.716600000000004e-05, 7.758299999999912e-05, 7.755499999999999e-05, 7.775000000000143e-05, 7.765300000000044e-05, 7.761099999999826e-05, 7.777800000000057e-05, 7.749999999999771e-05, 7.723600000000136e-05, 7.749999999999771e-05, 7.727800000000007e-05, 7.73189999999993e-05, 7.794399999999993e-05, 7.759799999999817e-05, 7.788799999999818e-05, 7.793000000000036e-05, 7.805500000000049e-05, 7.744399999999943e-05, 7.733300000000234e-05, 7.71389999999969e-05, 7.761100000000173e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.011" endtime="20201117 14:42:54.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.006" endtime="20201117 14:42:54.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.015" endtime="20201117 14:42:54.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.019" endtime="20201117 14:42:54.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.017" endtime="20201117 14:42:54.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.014" endtime="20201117 14:42:54.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.644" endtime="20201117 14:42:54.040"></status>
</kw>
<msg timestamp="20201117 14:42:54.040" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.049" endtime="20201117 14:42:54.069"></status>
</kw>
<msg timestamp="20201117 14:42:54.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.047" endtime="20201117 14:42:54.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.071" endtime="20201117 14:42:54.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.074" endtime="20201117 14:42:54.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.044" endtime="20201117 14:42:54.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.042" endtime="20201117 14:42:54.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.084" endtime="20201117 14:42:54.370"></status>
</kw>
<msg timestamp="20201117 14:42:54.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:54.082" endtime="20201117 14:42:54.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:54.374" endtime="20201117 14:42:54.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.383" endtime="20201117 14:42:54.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.080" endtime="20201117 14:42:54.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.078" endtime="20201117 14:42:54.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.390" level="INFO">${RESULT} = [{'time': 0.020183, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.744399999999943e-05, 'source_diff': 7.744399999999943e-05}, {'time': 0.020264014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:42:54.387" endtime="20201117 14:42:54.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:54.391" endtime="20201117 14:42:54.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.409" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.408" endtime="20201117 14:42:54.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.411" level="INFO">VALUE: [7.744399999999943e-05, 7.718099999999908e-05, 7.769499999999915e-05, 7.765300000000044e-05, 7.81250000000018e-05, 7.761100000000173e-05, 7.72640000000005e-05, 7.769399999999968e-05, 7.738799999999768e-05, 7.74030000000002e-05, 7.805500000000049e-05, 7.798599999999864e-05, 7.806900000000006e-05, 7.73189999999993e-05, 7.804200000000039e-05, 7.77909999999972e-05, 7.730499999999974e-05, 7.79030000000007e-05, 7.720799999999875e-05, 7.751400000000075e-05, 7.76250000000013e-05, 7.800000000000168e-05, 7.798599999999864e-05, 7.742999999999986e-05, 7.773599999999839e-05, 7.729100000000017e-05, 7.7457999999999e-05, 7.80830000000031e-05, 7.715200000000047e-05, 7.741699999999976e-05, 7.751400000000075e-05, 7.73189999999993e-05, 7.806900000000006e-05, 7.737500000000105e-05, 7.7764000000001e-05, 7.748700000000108e-05, 7.751400000000075e-05, 7.786200000000146e-05, 7.738899999999715e-05, 7.81250000000018e-05, 7.731999999999878e-05, 7.799999999999821e-05, 7.770800000000272e-05, 7.73189999999993e-05, 7.751400000000075e-05, 7.751400000000075e-05, 7.747199999999857e-05, 7.812499999999833e-05, 7.769399999999968e-05, 7.795800000000297e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.410" endtime="20201117 14:42:54.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.405" endtime="20201117 14:42:54.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.414" endtime="20201117 14:42:54.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.418" endtime="20201117 14:42:54.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.416" endtime="20201117 14:42:54.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.413" endtime="20201117 14:42:54.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.041" endtime="20201117 14:42:54.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.642" endtime="20201117 14:42:54.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.641" endtime="20201117 14:42:54.439"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.442" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.450" endtime="20201117 14:42:54.471"></status>
</kw>
<msg timestamp="20201117 14:42:54.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.448" endtime="20201117 14:42:54.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.473" endtime="20201117 14:42:54.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.475" endtime="20201117 14:42:54.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.446" endtime="20201117 14:42:54.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.444" endtime="20201117 14:42:54.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.485" endtime="20201117 14:42:54.774"></status>
</kw>
<msg timestamp="20201117 14:42:54.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.483" endtime="20201117 14:42:54.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.778" endtime="20201117 14:42:54.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.787" endtime="20201117 14:42:54.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.480" endtime="20201117 14:42:54.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.478" endtime="20201117 14:42:54.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.794" level="INFO">${RESULT} = [{'time': 0.023620083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.841600000000129e-05, 'source_diff': 7.841600000000129e-05}, {'time': 0.023701083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.790" endtime="20201117 14:42:54.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:54.795" endtime="20201117 14:42:54.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.814" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.813" endtime="20201117 14:42:54.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.816" level="INFO">VALUE: [7.841600000000129e-05, 7.836100000000248e-05, 7.908300000000063e-05, 7.879200000000114e-05, 7.837499999999858e-05, 7.844399999999696e-05, 7.815300000000094e-05, 7.888899999999865e-05, 7.856900000000056e-05, 7.841700000000076e-05, 7.911200000000271e-05, 7.830600000000021e-05, 7.84030000000012e-05, 7.869500000000015e-05, 7.86389999999984e-05, 7.818000000000061e-05, 7.870899999999972e-05, 7.887499999999908e-05, 7.908300000000063e-05, 7.861100000000273e-05, 7.887499999999908e-05, 7.827800000000107e-05, 7.900000000000268e-05, 7.820799999999975e-05, 7.883399999999985e-05, 7.849999999999871e-05, 7.82640000000015e-05, 7.872200000000329e-05, 7.909799999999967e-05, 7.911099999999976e-05, 7.85969999999997e-05, 7.86380000000024e-05, 7.905499999999802e-05, 7.855499999999752e-05, 7.833299999999987e-05, 7.893000000000136e-05, 7.894400000000093e-05, 7.862499999999883e-05, 7.883300000000037e-05, 7.806900000000006e-05, 7.818100000000008e-05, 7.854200000000089e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.883399999999985e-05, 7.882000000000028e-05, 7.907000000000053e-05, 7.826300000000203e-05, 7.844400000000043e-05, 7.883300000000037e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.815" endtime="20201117 14:42:54.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.810" endtime="20201117 14:42:54.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.819" endtime="20201117 14:42:54.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.823" endtime="20201117 14:42:54.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.821" endtime="20201117 14:42:54.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.818" endtime="20201117 14:42:54.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.442" endtime="20201117 14:42:54.844"></status>
</kw>
<msg timestamp="20201117 14:42:54.844" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.853" endtime="20201117 14:42:54.872"></status>
</kw>
<msg timestamp="20201117 14:42:54.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.851" endtime="20201117 14:42:54.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.874" endtime="20201117 14:42:54.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.877" endtime="20201117 14:42:54.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.848" endtime="20201117 14:42:54.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.846" endtime="20201117 14:42:54.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.887" endtime="20201117 14:42:55.173"></status>
</kw>
<msg timestamp="20201117 14:42:55.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.886" endtime="20201117 14:42:55.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.177" endtime="20201117 14:42:55.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.186" endtime="20201117 14:42:55.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.883" endtime="20201117 14:42:55.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.881" endtime="20201117 14:42:55.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.193" level="INFO">${RESULT} = [{'time': 0.020519222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.89030000000017e-05, 'source_diff': 7.89030000000017e-05}, {'time': 0.020603208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:55.189" endtime="20201117 14:42:55.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.207" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:55.194" endtime="20201117 14:42:55.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.211" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.210" endtime="20201117 14:42:55.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.214" level="INFO">VALUE: [7.89030000000017e-05, 7.823600000000236e-05, 7.819400000000018e-05, 7.90970000000002e-05, 7.88190000000008e-05, 7.866700000000101e-05, 7.901399999999878e-05, 7.882000000000028e-05, 7.826399999999803e-05, 7.905500000000149e-05, 7.818100000000008e-05, 7.852800000000132e-05, 7.820899999999922e-05, 7.88190000000008e-05, 7.842999999999739e-05, 7.887499999999908e-05, 7.844400000000043e-05, 7.888899999999865e-05, 7.862499999999883e-05, 7.838899999999815e-05, 7.827800000000107e-05, 7.88190000000008e-05, 7.868100000000058e-05, 7.911099999999976e-05, 7.832000000000325e-05, 7.843100000000033e-05, 7.89030000000017e-05, 7.893100000000083e-05, 7.815200000000147e-05, 7.887500000000255e-05, 7.893100000000083e-05, 7.870800000000025e-05, 7.911099999999976e-05, 7.901399999999878e-05, 7.844400000000043e-05, 7.86389999999984e-05, 7.89580000000005e-05, 7.826299999999856e-05, 7.906900000000106e-05, 7.812499999999833e-05, 7.886099999999951e-05, 7.820899999999922e-05, 7.868100000000058e-05, 7.85839999999996e-05, 7.850000000000218e-05, 7.8151999999998e-05, 7.843000000000086e-05, 7.873700000000233e-05, 7.863799999999893e-05, 7.841600000000129e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.213" endtime="20201117 14:42:55.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.208" endtime="20201117 14:42:55.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.217" endtime="20201117 14:42:55.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.221" endtime="20201117 14:42:55.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.219" endtime="20201117 14:42:55.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.216" endtime="20201117 14:42:55.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.845" endtime="20201117 14:42:55.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.440" endtime="20201117 14:42:55.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.439" endtime="20201117 14:42:55.242"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.245" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.254" endtime="20201117 14:42:55.274"></status>
</kw>
<msg timestamp="20201117 14:42:55.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.252" endtime="20201117 14:42:55.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.276" endtime="20201117 14:42:55.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.278" endtime="20201117 14:42:55.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.249" endtime="20201117 14:42:55.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.247" endtime="20201117 14:42:55.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.288" endtime="20201117 14:42:55.575"></status>
</kw>
<msg timestamp="20201117 14:42:55.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.286" endtime="20201117 14:42:55.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.579" endtime="20201117 14:42:55.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.588" endtime="20201117 14:42:55.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.283" endtime="20201117 14:42:55.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.281" endtime="20201117 14:42:55.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.595" level="INFO">${RESULT} = [{'time': 0.023274403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.019499999999818e-05, 'source_diff': 8.019499999999818e-05}, {'time': 0.023358403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.592" endtime="20201117 14:42:55.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.609" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:55.597" endtime="20201117 14:42:55.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.614" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.613" endtime="20201117 14:42:55.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.617" level="INFO">VALUE: [8.019499999999818e-05, 7.924999999999946e-05, 7.969500000000115e-05, 7.979200000000214e-05, 7.951399999999928e-05, 7.93190000000013e-05, 8.006899999999859e-05, 7.955599999999799e-05, 7.973599999999692e-05, 7.951399999999928e-05, 7.954200000000189e-05, 7.919400000000118e-05, 7.955600000000146e-05, 7.969400000000168e-05, 7.959699999999723e-05, 8.000000000000021e-05, 7.945900000000047e-05, 7.932000000000078e-05, 7.962499999999983e-05, 7.940299999999872e-05, 7.918100000000108e-05, 7.930599999999774e-05, 7.912499999999933e-05, 7.955499999999852e-05, 8.004199999999892e-05, 7.97779999999991e-05, 8.005500000000249e-05, 7.961100000000026e-05, 7.949999999999971e-05, 8.011100000000076e-05, 8.005599999999849e-05, 7.94450000000009e-05, 7.933400000000035e-05, 7.947300000000004e-05, 7.967999999999864e-05, 7.97909999999992e-05, 7.959800000000017e-05, 8.006899999999859e-05, 7.943100000000133e-05, 8.006899999999859e-05, 7.931899999999784e-05, 7.920800000000075e-05, 8.005600000000196e-05, 7.956899999999809e-05, 8.000000000000021e-05, 7.922200000000032e-05, 7.987500000000008e-05, 7.988899999999965e-05, 7.90840000000001e-05, 7.948600000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.615" endtime="20201117 14:42:55.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.610" endtime="20201117 14:42:55.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.620" endtime="20201117 14:42:55.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.624" endtime="20201117 14:42:55.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.622" endtime="20201117 14:42:55.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.618" endtime="20201117 14:42:55.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.245" endtime="20201117 14:42:55.645"></status>
</kw>
<msg timestamp="20201117 14:42:55.645" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.654" endtime="20201117 14:42:55.674"></status>
</kw>
<msg timestamp="20201117 14:42:55.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.653" endtime="20201117 14:42:55.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.676" endtime="20201117 14:42:55.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.678" endtime="20201117 14:42:55.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.650" endtime="20201117 14:42:55.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.647" endtime="20201117 14:42:55.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.689" endtime="20201117 14:42:55.974"></status>
</kw>
<msg timestamp="20201117 14:42:55.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.687" endtime="20201117 14:42:55.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.978" endtime="20201117 14:42:55.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.987" endtime="20201117 14:42:55.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.684" endtime="20201117 14:42:55.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.683" endtime="20201117 14:42:55.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.994" level="INFO">${RESULT} = [{'time': 0.021119653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.006999999999806e-05, 'source_diff': 8.006999999999806e-05}, {'time': 0.021202667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.990" endtime="20201117 14:42:55.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:55.995" endtime="20201117 14:42:56.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.013" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.011" endtime="20201117 14:42:56.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.015" level="INFO">VALUE: [8.006999999999806e-05, 7.92640000000025e-05, 8.00840000000011e-05, 7.936199999999949e-05, 7.976300000000006e-05, 7.974999999999996e-05, 8.006900000000206e-05, 7.99580000000015e-05, 7.94030000000022e-05, 8.006899999999859e-05, 7.943000000000186e-05, 7.988899999999965e-05, 7.995799999999803e-05, 7.962499999999983e-05, 7.970800000000125e-05, 8.012499999999687e-05, 7.955600000000146e-05, 8.017999999999914e-05, 7.922200000000032e-05, 7.94450000000009e-05, 7.966599999999907e-05, 7.956899999999809e-05, 7.933300000000088e-05, 8.006899999999859e-05, 7.944399999999796e-05, 7.92909999999987e-05, 7.92640000000025e-05, 7.970800000000125e-05, 7.961100000000026e-05, 8.002799999999935e-05, 7.933400000000035e-05, 7.955500000000199e-05, 7.949999999999971e-05, 7.943099999999786e-05, 7.94450000000009e-05, 7.932000000000078e-05, 7.937499999999958e-05, 8.006899999999859e-05, 7.974999999999996e-05, 7.958300000000113e-05, 7.938899999999915e-05, 7.984700000000094e-05, 8.012499999999687e-05, 7.945799999999753e-05, 7.998600000000064e-05, 7.923599999999989e-05, 7.984699999999748e-05, 7.934799999999992e-05, 7.918099999999761e-05, 7.974999999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.014" endtime="20201117 14:42:56.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.009" endtime="20201117 14:42:56.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.019" endtime="20201117 14:42:56.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.022" endtime="20201117 14:42:56.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.021" endtime="20201117 14:42:56.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.017" endtime="20201117 14:42:56.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.646" endtime="20201117 14:42:56.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.243" endtime="20201117 14:42:56.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.242" endtime="20201117 14:42:56.044"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.046" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.055" endtime="20201117 14:42:56.076"></status>
</kw>
<msg timestamp="20201117 14:42:56.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.053" endtime="20201117 14:42:56.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.077" endtime="20201117 14:42:56.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.080" endtime="20201117 14:42:56.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.050" endtime="20201117 14:42:56.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.048" endtime="20201117 14:42:56.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.089" endtime="20201117 14:42:56.376"></status>
</kw>
<msg timestamp="20201117 14:42:56.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023685389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023765722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.088" endtime="20201117 14:42:56.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023685389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023765722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.380" endtime="20201117 14:42:56.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.389" endtime="20201117 14:42:56.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.085" endtime="20201117 14:42:56.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.083" endtime="20201117 14:42:56.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.396" level="INFO">${RESULT} = [{'time': 0.023765722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.03329999999984e-05, 'source_diff': 8.03329999999984e-05}, {'time': 0.023852736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:56.392" endtime="20201117 14:42:56.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:56.397" endtime="20201117 14:42:56.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.415" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.414" endtime="20201117 14:42:56.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.418" level="INFO">VALUE: [8.03329999999984e-05, 8.101400000000078e-05, 8.086099999999805e-05, 8.108299999999916e-05, 8.041700000000276e-05, 8.062499999999737e-05, 8.07230000000013e-05, 8.043099999999886e-05, 8.106999999999906e-05, 8.11109999999983e-05, 8.034699999999798e-05, 8.029200000000264e-05, 8.069399999999921e-05, 8.09450000000024e-05, 8.075000000000096e-05, 8.070800000000225e-05, 8.056899999999909e-05, 8.015299999999947e-05, 8.100000000000121e-05, 8.106899999999959e-05, 8.05130000000008e-05, 8.083399999999838e-05, 8.081999999999881e-05, 8.036100000000101e-05, 8.045900000000147e-05, 8.062500000000083e-05, 8.107000000000253e-05, 8.081899999999934e-05, 8.099999999999774e-05, 8.086100000000151e-05, 8.044399999999896e-05, 8.055499999999952e-05, 8.019399999999871e-05, 8.066600000000007e-05, 8.073599999999792e-05, 8.066699999999954e-05, 8.070799999999878e-05, 8.112500000000133e-05, 8.044399999999896e-05, 8.033399999999788e-05, 8.102800000000035e-05, 8.044499999999843e-05, 8.063899999999694e-05, 8.073599999999792e-05, 8.073600000000139e-05, 8.068099999999911e-05, 8.0152e-05, 8.062500000000083e-05, 8.038900000000015e-05, 8.01389999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.416" endtime="20201117 14:42:56.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.412" endtime="20201117 14:42:56.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.422" endtime="20201117 14:42:56.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.425" endtime="20201117 14:42:56.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.424" endtime="20201117 14:42:56.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.420" endtime="20201117 14:42:56.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.047" endtime="20201117 14:42:56.446"></status>
</kw>
<msg timestamp="20201117 14:42:56.446" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.455" endtime="20201117 14:42:56.475"></status>
</kw>
<msg timestamp="20201117 14:42:56.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.453" endtime="20201117 14:42:56.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.476" endtime="20201117 14:42:56.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.479" endtime="20201117 14:42:56.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.450" endtime="20201117 14:42:56.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.448" endtime="20201117 14:42:56.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.489" endtime="20201117 14:42:56.776"></status>
</kw>
<msg timestamp="20201117 14:42:56.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.488" endtime="20201117 14:42:56.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.780" endtime="20201117 14:42:56.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.789" endtime="20201117 14:42:56.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.485" endtime="20201117 14:42:56.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.483" endtime="20201117 14:42:56.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.796" level="INFO">${RESULT} = [{'time': 0.020138528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.119499999999918e-05, 'source_diff': 8.119499999999918e-05}, {'time': 0.020222597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.792" endtime="20201117 14:42:56.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:56.797" endtime="20201117 14:42:56.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.814" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.813" endtime="20201117 14:42:56.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.817" level="INFO">VALUE: [8.119499999999918e-05, 8.063899999999694e-05, 8.012499999999687e-05, 8.111100000000177e-05, 8.020799999999828e-05, 8.061100000000126e-05, 8.033300000000188e-05, 8.026400000000003e-05, 8.100000000000121e-05, 8.088900000000065e-05, 8.048600000000114e-05, 8.090300000000022e-05, 8.018000000000261e-05, 8.10970000000022e-05, 8.055599999999899e-05, 8.026400000000003e-05, 8.01389999999999e-05, 8.066699999999954e-05, 8.065299999999997e-05, 8.020899999999775e-05, 8.026300000000056e-05, 8.018099999999861e-05, 8.041599999999982e-05, 8.03329999999984e-05, 8.05970000000017e-05, 8.098600000000164e-05, 8.106899999999959e-05, 8.065299999999997e-05, 8.030499999999927e-05, 8.025000000000046e-05, 8.102800000000035e-05, 8.087500000000108e-05, 8.080499999999977e-05, 8.051400000000028e-05, 8.045799999999853e-05, 8.032000000000178e-05, 8.091600000000032e-05, 8.044499999999843e-05, 8.051400000000028e-05, 8.031899999999884e-05, 8.020799999999828e-05, 8.101400000000078e-05, 8.016600000000304e-05, 8.101400000000078e-05, 8.075000000000096e-05, 8.09450000000024e-05, 8.02779999999996e-05, 8.033400000000135e-05, 8.033399999999788e-05, 8.10840000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.815" endtime="20201117 14:42:56.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.810" endtime="20201117 14:42:56.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.820" endtime="20201117 14:42:56.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.824" endtime="20201117 14:42:56.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.822" endtime="20201117 14:42:56.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.819" endtime="20201117 14:42:56.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.447" endtime="20201117 14:42:56.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.045" endtime="20201117 14:42:56.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.044" endtime="20201117 14:42:56.845"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.848" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.856" endtime="20201117 14:42:56.876"></status>
</kw>
<msg timestamp="20201117 14:42:56.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.855" endtime="20201117 14:42:56.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.878" endtime="20201117 14:42:56.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.881" endtime="20201117 14:42:56.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.852" endtime="20201117 14:42:56.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.850" endtime="20201117 14:42:56.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.890" endtime="20201117 14:42:57.176"></status>
</kw>
<msg timestamp="20201117 14:42:57.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.888" endtime="20201117 14:42:57.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.180" endtime="20201117 14:42:57.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.189" endtime="20201117 14:42:57.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.886" endtime="20201117 14:42:57.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.884" endtime="20201117 14:42:57.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.196" level="INFO">${RESULT} = [{'time': 0.022772222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138900000000115e-05, 'source_diff': 8.138900000000115e-05}, {'time': 0.022856194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.192" endtime="20201117 14:42:57.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:57.197" endtime="20201117 14:42:57.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.214" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.213" endtime="20201117 14:42:57.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.217" level="INFO">VALUE: [8.138900000000115e-05, 8.159699999999923e-05, 8.126399999999756e-05, 8.158299999999966e-05, 8.151400000000128e-05, 8.1458000000003e-05, 8.108299999999916e-05, 8.16390000000014e-05, 8.198599999999917e-05, 8.16390000000014e-05, 8.176399999999806e-05, 8.133400000000235e-05, 8.138899999999769e-05, 8.138900000000115e-05, 8.137499999999812e-05, 8.14170000000003e-05, 8.14719999999991e-05, 8.194400000000046e-05, 8.163899999999794e-05, 8.111100000000177e-05, 8.118000000000014e-05, 8.187500000000208e-05, 8.195800000000003e-05, 8.174999999999849e-05, 8.207000000000006e-05, 8.12780000000006e-05, 8.180600000000024e-05, 8.202800000000135e-05, 8.148600000000214e-05, 8.195800000000003e-05, 8.199999999999874e-05, 8.186200000000199e-05, 8.145799999999953e-05, 8.134699999999898e-05, 8.118000000000014e-05, 8.184699999999948e-05, 8.156900000000009e-05, 8.162499999999837e-05, 8.208300000000016e-05, 8.17919999999972e-05, 8.194499999999993e-05, 8.195900000000297e-05, 8.194499999999993e-05, 8.145900000000247e-05, 8.144499999999943e-05, 8.130599999999974e-05, 8.16520000000015e-05, 8.140300000000072e-05, 8.206900000000059e-05, 8.124999999999799e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.215" endtime="20201117 14:42:57.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.210" endtime="20201117 14:42:57.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.221" endtime="20201117 14:42:57.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.224" endtime="20201117 14:42:57.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.223" endtime="20201117 14:42:57.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.219" endtime="20201117 14:42:57.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.848" endtime="20201117 14:42:57.245"></status>
</kw>
<msg timestamp="20201117 14:42:57.245" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.254" endtime="20201117 14:42:57.274"></status>
</kw>
<msg timestamp="20201117 14:42:57.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.252" endtime="20201117 14:42:57.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.276" endtime="20201117 14:42:57.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.278" endtime="20201117 14:42:57.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.249" endtime="20201117 14:42:57.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.247" endtime="20201117 14:42:57.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.288" endtime="20201117 14:42:57.574"></status>
</kw>
<msg timestamp="20201117 14:42:57.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.287" endtime="20201117 14:42:57.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.579" endtime="20201117 14:42:57.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.587" endtime="20201117 14:42:57.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.284" endtime="20201117 14:42:57.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.282" endtime="20201117 14:42:57.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.594" level="INFO">${RESULT} = [{'time': 0.020218028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209699999999973e-05, 'source_diff': 8.209699999999973e-05}, {'time': 0.020305069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.591" endtime="20201117 14:42:57.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:57.595" endtime="20201117 14:42:57.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.613" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.612" endtime="20201117 14:42:57.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.616" level="INFO">VALUE: [8.209699999999973e-05, 8.19719999999996e-05, 8.173599999999892e-05, 8.124999999999799e-05, 8.166699999999708e-05, 8.156900000000009e-05, 8.138900000000115e-05, 8.116600000000057e-05, 8.177799999999763e-05, 8.149999999999824e-05, 8.131899999999984e-05, 8.212499999999887e-05, 8.118099999999961e-05, 8.181900000000034e-05, 8.212500000000234e-05, 8.131999999999931e-05, 8.155599999999999e-05, 8.176399999999806e-05, 8.176399999999806e-05, 8.144399999999996e-05, 8.16520000000015e-05, 8.122200000000232e-05, 8.206900000000059e-05, 8.138900000000115e-05, 8.14719999999991e-05, 8.158299999999966e-05, 8.161100000000227e-05, 8.12780000000006e-05, 8.179200000000067e-05, 8.158399999999913e-05, 8.136100000000202e-05, 8.201399999999831e-05, 8.137500000000158e-05, 8.184700000000295e-05, 8.131899999999984e-05, 8.206900000000059e-05, 8.209699999999973e-05, 8.127700000000113e-05, 8.188900000000165e-05, 8.169400000000021e-05, 8.17780000000011e-05, 8.195800000000003e-05, 8.137500000000158e-05, 8.162500000000183e-05, 8.18329999999999e-05, 8.120899999999875e-05, 8.137499999999812e-05, 8.14450000000029e-05, 8.174999999999849e-05, 8.172200000000282e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.615" endtime="20201117 14:42:57.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.609" endtime="20201117 14:42:57.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.620" endtime="20201117 14:42:57.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.624" endtime="20201117 14:42:57.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.622" endtime="20201117 14:42:57.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.618" endtime="20201117 14:42:57.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.246" endtime="20201117 14:42:57.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.846" endtime="20201117 14:42:57.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.846" endtime="20201117 14:42:57.645"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.648" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.657" endtime="20201117 14:42:57.678"></status>
</kw>
<msg timestamp="20201117 14:42:57.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.655" endtime="20201117 14:42:57.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.680" endtime="20201117 14:42:57.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.682" endtime="20201117 14:42:57.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.652" endtime="20201117 14:42:57.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.650" endtime="20201117 14:42:57.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.692" endtime="20201117 14:42:57.978"></status>
</kw>
<msg timestamp="20201117 14:42:57.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.690" endtime="20201117 14:42:57.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.982" endtime="20201117 14:42:57.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.991" endtime="20201117 14:42:57.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.687" endtime="20201117 14:42:57.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.686" endtime="20201117 14:42:57.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.998" level="INFO">${RESULT} = [{'time': 0.024051667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252799999999838e-05, 'source_diff': 8.252799999999838e-05}, {'time': 0.024136681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.995" endtime="20201117 14:42:57.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.013" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:57.999" endtime="20201117 14:42:58.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.018" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.017" endtime="20201117 14:42:58.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.020" level="INFO">VALUE: [8.252799999999838e-05, 8.248699999999914e-05, 8.229099999999823e-05, 8.31110000000003e-05, 8.213899999999844e-05, 8.301399999999931e-05, 8.312499999999987e-05, 8.286100000000005e-05, 8.302799999999888e-05, 8.254199999999795e-05, 8.222199999999985e-05, 8.301399999999931e-05, 8.27780000000021e-05, 8.251399999999881e-05, 8.286100000000005e-05, 8.286199999999952e-05, 8.294500000000093e-05, 8.301400000000278e-05, 8.290199999999928e-05, 8.23049999999978e-05, 8.238900000000215e-05, 8.256900000000109e-05, 8.23330000000004e-05, 8.307000000000106e-05, 8.263899999999894e-05, 8.29720000000006e-05, 8.227799999999813e-05, 8.268000000000164e-05, 8.2459e-05, 8.237499999999912e-05, 8.29170000000018e-05, 8.258400000000013e-05, 8.288899999999919e-05, 8.248700000000261e-05, 8.237499999999912e-05, 8.276399999999906e-05, 8.275000000000296e-05, 8.231900000000084e-05, 8.220800000000028e-05, 8.293000000000189e-05, 8.304199999999845e-05, 8.248599999999967e-05, 8.270800000000078e-05, 8.273599999999992e-05, 8.308400000000063e-05, 8.243000000000139e-05, 8.316700000000204e-05, 8.301399999999931e-05, 8.237499999999912e-05, 8.244500000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.019" endtime="20201117 14:42:58.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.014" endtime="20201117 14:42:58.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.024" endtime="20201117 14:42:58.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.027" endtime="20201117 14:42:58.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.025" endtime="20201117 14:42:58.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.022" endtime="20201117 14:42:58.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.648" endtime="20201117 14:42:58.048"></status>
</kw>
<msg timestamp="20201117 14:42:58.048" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.057" endtime="20201117 14:42:58.077"></status>
</kw>
<msg timestamp="20201117 14:42:58.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.055" endtime="20201117 14:42:58.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.079" endtime="20201117 14:42:58.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.081" endtime="20201117 14:42:58.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.052" endtime="20201117 14:42:58.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.050" endtime="20201117 14:42:58.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.092" endtime="20201117 14:42:58.377"></status>
</kw>
<msg timestamp="20201117 14:42:58.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.090" endtime="20201117 14:42:58.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.382" endtime="20201117 14:42:58.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.395" endtime="20201117 14:42:58.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.087" endtime="20201117 14:42:58.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.085" endtime="20201117 14:42:58.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.402" level="INFO">${RESULT} = [{'time': 0.020201736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.245800000000053e-05, 'source_diff': 8.245800000000053e-05}, {'time': 0.02028875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:58.399" endtime="20201117 14:42:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:58.403" endtime="20201117 14:42:58.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.421" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.420" endtime="20201117 14:42:58.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.423" level="INFO">VALUE: [8.245800000000053e-05, 8.299999999999974e-05, 8.2459e-05, 8.236099999999955e-05, 8.222299999999932e-05, 8.293100000000136e-05, 8.21390000000019e-05, 8.273599999999992e-05, 8.274999999999949e-05, 8.226399999999856e-05, 8.219500000000018e-05, 8.290199999999928e-05, 8.251399999999881e-05, 8.244400000000096e-05, 8.230500000000127e-05, 8.229099999999823e-05, 8.220800000000028e-05, 8.219400000000071e-05, 8.308300000000116e-05, 8.251399999999881e-05, 8.26529999999985e-05, 8.288899999999919e-05, 8.31110000000003e-05, 8.276399999999906e-05, 8.233399999999988e-05, 8.254100000000195e-05, 8.21659999999981e-05, 8.256899999999762e-05, 8.230500000000127e-05, 8.237499999999912e-05, 8.293000000000189e-05, 8.287499999999962e-05, 8.218100000000061e-05, 8.213899999999844e-05, 8.23330000000004e-05, 8.232000000000031e-05, 8.263899999999894e-05, 8.233399999999988e-05, 8.212500000000234e-05, 8.234699999999998e-05, 8.244500000000043e-05, 8.276299999999959e-05, 8.2152000000002e-05, 8.240299999999826e-05, 8.288900000000265e-05, 8.274999999999949e-05, 8.309699999999726e-05, 8.237499999999912e-05, 8.308300000000116e-05, 8.262500000000284e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.422" endtime="20201117 14:42:58.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.417" endtime="20201117 14:42:58.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.427" endtime="20201117 14:42:58.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.430" endtime="20201117 14:42:58.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.429" endtime="20201117 14:42:58.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.425" endtime="20201117 14:42:58.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.049" endtime="20201117 14:42:58.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.646" endtime="20201117 14:42:58.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.646" endtime="20201117 14:42:58.452"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.454" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.463" endtime="20201117 14:42:58.482"></status>
</kw>
<msg timestamp="20201117 14:42:58.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.461" endtime="20201117 14:42:58.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.484" endtime="20201117 14:42:58.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.486" endtime="20201117 14:42:58.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.458" endtime="20201117 14:42:58.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.456" endtime="20201117 14:42:58.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.496" endtime="20201117 14:42:58.784"></status>
</kw>
<msg timestamp="20201117 14:42:58.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.495" endtime="20201117 14:42:58.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.788" endtime="20201117 14:42:58.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.796" endtime="20201117 14:42:58.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.492" endtime="20201117 14:42:58.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.490" endtime="20201117 14:42:58.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.803" level="INFO">${RESULT} = [{'time': 0.023133958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.397199999999813e-05, 'source_diff': 8.397199999999813e-05}, {'time': 0.023221972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:58.800" endtime="20201117 14:42:58.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:58.804" endtime="20201117 14:42:58.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.822" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.821" endtime="20201117 14:42:58.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.824" level="INFO">VALUE: [8.397199999999813e-05, 8.406899999999912e-05, 8.331900000000184e-05, 8.401400000000031e-05, 8.383299999999844e-05, 8.376400000000006e-05, 8.356900000000209e-05, 8.407000000000206e-05, 8.375000000000049e-05, 8.34309999999984e-05, 8.352800000000285e-05, 8.3459000000001e-05, 8.323600000000042e-05, 8.397199999999813e-05, 8.36119999999968e-05, 8.348600000000067e-05, 8.33469999999975e-05, 8.351399999999981e-05, 8.402799999999988e-05, 8.319400000000171e-05, 8.363899999999994e-05, 8.388900000000019e-05, 8.381999999999834e-05, 8.333399999999741e-05, 8.358399999999766e-05, 8.370900000000125e-05, 8.383399999999791e-05, 8.41660000000001e-05, 8.413800000000096e-05, 8.400000000000074e-05, 8.405499999999955e-05, 8.341599999999935e-05, 8.330500000000227e-05, 8.402799999999988e-05, 8.398600000000117e-05, 8.320799999999781e-05, 8.331899999999837e-05, 8.387500000000062e-05, 8.363899999999994e-05, 8.357000000000156e-05, 8.348600000000067e-05, 8.34859999999972e-05, 8.326399999999956e-05, 8.363899999999994e-05, 8.412500000000087e-05, 8.343000000000239e-05, 8.355500000000252e-05, 8.374999999999702e-05, 8.320800000000128e-05, 8.359700000000123e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.823" endtime="20201117 14:42:58.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.818" endtime="20201117 14:42:58.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.828" endtime="20201117 14:42:58.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.831" endtime="20201117 14:42:58.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.830" endtime="20201117 14:42:58.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.826" endtime="20201117 14:42:58.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.455" endtime="20201117 14:42:58.852"></status>
</kw>
<msg timestamp="20201117 14:42:58.852" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.861" endtime="20201117 14:42:58.881"></status>
</kw>
<msg timestamp="20201117 14:42:58.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.860" endtime="20201117 14:42:58.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.883" endtime="20201117 14:42:58.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.886" endtime="20201117 14:42:58.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.857" endtime="20201117 14:42:58.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.855" endtime="20201117 14:42:58.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.896" endtime="20201117 14:42:59.182"></status>
</kw>
<msg timestamp="20201117 14:42:59.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.895" endtime="20201117 14:42:59.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.187" endtime="20201117 14:42:59.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.195" endtime="20201117 14:42:59.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.892" endtime="20201117 14:42:59.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.890" endtime="20201117 14:42:59.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.202" level="INFO">${RESULT} = [{'time': 0.020302667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.332000000000131e-05, 'source_diff': 8.332000000000131e-05}, {'time': 0.020391722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.199" endtime="20201117 14:42:59.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:59.203" endtime="20201117 14:42:59.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.220" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.219" endtime="20201117 14:42:59.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.223" level="INFO">VALUE: [8.332000000000131e-05, 8.369400000000221e-05, 8.408299999999869e-05, 8.358299999999819e-05, 8.401400000000031e-05, 8.388900000000019e-05, 8.356900000000209e-05, 8.41110000000013e-05, 8.379099999999973e-05, 8.338899999999969e-05, 8.377799999999963e-05, 8.316699999999858e-05, 8.401399999999684e-05, 8.344500000000143e-05, 8.380599999999877e-05, 8.340300000000272e-05, 8.343100000000186e-05, 8.381999999999834e-05, 8.409699999999826e-05, 8.383299999999844e-05, 8.388900000000019e-05, 8.408300000000216e-05, 8.388900000000019e-05, 8.361099999999733e-05, 8.406899999999912e-05, 8.36529999999995e-05, 8.406900000000259e-05, 8.40980000000012e-05, 8.330599999999827e-05, 8.369499999999822e-05, 8.357000000000156e-05, 8.34309999999984e-05, 8.351399999999981e-05, 8.330600000000174e-05, 8.34720000000011e-05, 8.331899999999837e-05, 8.368000000000264e-05, 8.35980000000007e-05, 8.375000000000049e-05, 8.352799999999938e-05, 8.323600000000042e-05, 8.368000000000264e-05, 8.401400000000031e-05, 8.344500000000143e-05, 8.327799999999913e-05, 8.382000000000181e-05, 8.365300000000297e-05, 8.41249999999974e-05, 8.380600000000224e-05, 8.386100000000105e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.222" endtime="20201117 14:42:59.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.217" endtime="20201117 14:42:59.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.226" endtime="20201117 14:42:59.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.230" endtime="20201117 14:42:59.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.228" endtime="20201117 14:42:59.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.225" endtime="20201117 14:42:59.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.853" endtime="20201117 14:42:59.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.453" endtime="20201117 14:42:59.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.452" endtime="20201117 14:42:59.252"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.254" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.263" endtime="20201117 14:42:59.284"></status>
</kw>
<msg timestamp="20201117 14:42:59.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.262" endtime="20201117 14:42:59.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.286" endtime="20201117 14:42:59.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.288" endtime="20201117 14:42:59.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.258" endtime="20201117 14:42:59.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.256" endtime="20201117 14:42:59.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.298" endtime="20201117 14:42:59.583"></status>
</kw>
<msg timestamp="20201117 14:42:59.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.296" endtime="20201117 14:42:59.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.588" endtime="20201117 14:42:59.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.596" endtime="20201117 14:42:59.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.293" endtime="20201117 14:42:59.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.291" endtime="20201117 14:42:59.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.603" level="INFO">${RESULT} = [{'time': 0.024772625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.499999999999827e-05, 'source_diff': 8.499999999999827e-05}, {'time': 0.024860625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.599" endtime="20201117 14:42:59.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:59.604" endtime="20201117 14:42:59.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.623" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.621" endtime="20201117 14:42:59.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.625" level="INFO">VALUE: [8.499999999999827e-05, 8.425000000000099e-05, 8.456999999999909e-05, 8.44309999999994e-05, 8.426399999999709e-05, 8.505600000000002e-05, 8.495799999999956e-05, 8.420799999999881e-05, 8.462500000000137e-05, 8.420800000000228e-05, 8.494399999999999e-05, 8.438900000000069e-05, 8.47920000000002e-05, 8.452800000000038e-05, 8.488900000000119e-05, 8.425000000000099e-05, 8.46530000000005e-05, 8.440300000000026e-05, 8.420899999999829e-05, 8.463899999999747e-05, 8.49309999999999e-05, 8.426399999999709e-05, 8.438900000000069e-05, 8.462500000000137e-05, 8.445799999999906e-05, 8.505500000000055e-05, 8.494399999999999e-05, 8.493000000000042e-05, 8.44859999999982e-05, 8.426400000000056e-05, 8.444399999999949e-05, 8.468099999999965e-05, 8.456899999999962e-05, 8.419399999999924e-05, 8.51249999999984e-05, 8.433400000000188e-05, 8.465200000000103e-05, 8.51249999999984e-05, 8.495799999999956e-05, 8.481899999999987e-05, 8.452700000000091e-05, 8.451400000000081e-05, 8.469399999999974e-05, 8.425000000000099e-05, 8.494399999999999e-05, 8.452800000000038e-05, 8.426399999999709e-05, 8.416699999999958e-05, 8.475000000000149e-05, 8.475000000000149e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.624" endtime="20201117 14:42:59.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.619" endtime="20201117 14:42:59.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.629" endtime="20201117 14:42:59.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.632" endtime="20201117 14:42:59.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.630" endtime="20201117 14:42:59.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.627" endtime="20201117 14:42:59.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.255" endtime="20201117 14:42:59.654"></status>
</kw>
<msg timestamp="20201117 14:42:59.654" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.663" endtime="20201117 14:42:59.683"></status>
</kw>
<msg timestamp="20201117 14:42:59.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.661" endtime="20201117 14:42:59.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.685" endtime="20201117 14:42:59.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.687" endtime="20201117 14:42:59.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.658" endtime="20201117 14:42:59.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.656" endtime="20201117 14:42:59.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.697" endtime="20201117 14:42:59.983"></status>
</kw>
<msg timestamp="20201117 14:42:59.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021007236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.696" endtime="20201117 14:42:59.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021007236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.988" endtime="20201117 14:42:59.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.996" endtime="20201117 14:42:59.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.693" endtime="20201117 14:42:59.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.691" endtime="20201117 14:42:59.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.003" level="INFO">${RESULT} = [{'time': 0.021007236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.454199999999995e-05, 'source_diff': 8.454199999999995e-05}, {'time': 0.021096264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.999" endtime="20201117 14:43:00.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:00.004" endtime="20201117 14:43:00.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.021" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.020" endtime="20201117 14:43:00.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.024" level="INFO">VALUE: [8.454199999999995e-05, 8.490300000000076e-05, 8.429200000000317e-05, 8.419500000000218e-05, 8.476400000000106e-05, 8.449999999999777e-05, 8.51249999999984e-05, 8.4459000000002e-05, 8.501399999999784e-05, 8.456999999999909e-05, 8.425000000000099e-05, 8.427700000000066e-05, 8.469399999999974e-05, 8.472199999999888e-05, 8.493000000000042e-05, 8.458299999999919e-05, 8.425000000000099e-05, 8.451399999999734e-05, 8.455599999999952e-05, 8.490299999999729e-05, 8.423599999999795e-05, 8.420899999999829e-05, 8.452700000000091e-05, 8.479100000000073e-05, 8.415200000000053e-05, 8.454199999999995e-05, 8.426300000000109e-05, 8.405500000000302e-05, 8.493000000000042e-05, 8.468000000000017e-05, 8.486100000000205e-05, 8.502799999999741e-05, 8.424999999999752e-05, 8.490300000000076e-05, 8.472300000000182e-05, 8.487499999999815e-05, 8.49309999999999e-05, 8.433399999999841e-05, 8.484800000000195e-05, 8.487500000000162e-05, 8.466700000000008e-05, 8.511099999999883e-05, 8.487499999999815e-05, 8.501400000000131e-05, 8.500000000000174e-05, 8.46249999999979e-05, 8.49720000000026e-05, 8.470799999999931e-05, 8.445899999999854e-05, 8.490300000000076e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.023" endtime="20201117 14:43:00.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.018" endtime="20201117 14:43:00.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.028" endtime="20201117 14:43:00.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.031" endtime="20201117 14:43:00.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.030" endtime="20201117 14:43:00.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.026" endtime="20201117 14:43:00.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.655" endtime="20201117 14:43:00.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.253" endtime="20201117 14:43:00.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.252" endtime="20201117 14:43:00.053"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.055" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.064" endtime="20201117 14:43:00.083"></status>
</kw>
<msg timestamp="20201117 14:43:00.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.062" endtime="20201117 14:43:00.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.085" endtime="20201117 14:43:00.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.088" endtime="20201117 14:43:00.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.059" endtime="20201117 14:43:00.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.057" endtime="20201117 14:43:00.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.097" endtime="20201117 14:43:00.383"></status>
</kw>
<msg timestamp="20201117 14:43:00.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.096" endtime="20201117 14:43:00.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.387" endtime="20201117 14:43:00.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.396" endtime="20201117 14:43:00.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.093" endtime="20201117 14:43:00.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.091" endtime="20201117 14:43:00.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.403" level="INFO">${RESULT} = [{'time': 0.022806514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.537499999999865e-05, 'source_diff': 8.537499999999865e-05}, {'time': 0.0228985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:00.399" endtime="20201117 14:43:00.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:00.404" endtime="20201117 14:43:00.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.421" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.420" endtime="20201117 14:43:00.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.424" level="INFO">VALUE: [8.537499999999865e-05, 8.59859999999997e-05, 8.605600000000102e-05, 8.54310000000004e-05, 8.540299999999779e-05, 8.531999999999984e-05, 8.56669999999976e-05, 8.590200000000228e-05, 8.525000000000199e-05, 8.602800000000188e-05, 8.526400000000156e-05, 8.5847e-05, 8.580600000000077e-05, 8.56249999999989e-05, 8.556900000000062e-05, 8.595800000000056e-05, 8.599999999999927e-05, 8.577799999999816e-05, 8.599999999999927e-05, 8.583399999999991e-05, 8.61249999999994e-05, 8.552699999999844e-05, 8.613899999999897e-05, 8.587499999999915e-05, 8.608300000000069e-05, 8.59859999999997e-05, 8.541599999999788e-05, 8.53330000000034e-05, 8.588900000000219e-05, 8.56530000000015e-05, 8.537499999999865e-05, 8.607000000000059e-05, 8.588899999999872e-05, 8.527699999999819e-05, 8.56530000000015e-05, 8.608400000000016e-05, 8.597200000000013e-05, 8.590200000000228e-05, 8.530499999999733e-05, 8.545800000000006e-05, 8.590299999999829e-05, 8.569399999999727e-05, 8.587499999999915e-05, 8.522199999999938e-05, 8.568099999999718e-05, 8.595800000000056e-05, 8.526399999999809e-05, 8.574999999999902e-05, 8.54859999999992e-05, 8.524999999999852e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.422" endtime="20201117 14:43:00.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.417" endtime="20201117 14:43:00.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.427" endtime="20201117 14:43:00.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.431" endtime="20201117 14:43:00.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.429" endtime="20201117 14:43:00.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.426" endtime="20201117 14:43:00.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.056" endtime="20201117 14:43:00.452"></status>
</kw>
<msg timestamp="20201117 14:43:00.452" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.461" endtime="20201117 14:43:00.481"></status>
</kw>
<msg timestamp="20201117 14:43:00.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.459" endtime="20201117 14:43:00.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.483" endtime="20201117 14:43:00.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.485" endtime="20201117 14:43:00.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.457" endtime="20201117 14:43:00.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.454" endtime="20201117 14:43:00.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.496" endtime="20201117 14:43:00.782"></status>
</kw>
<msg timestamp="20201117 14:43:00.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.494" endtime="20201117 14:43:00.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.786" endtime="20201117 14:43:00.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.795" endtime="20201117 14:43:00.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.491" endtime="20201117 14:43:00.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.490" endtime="20201117 14:43:00.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.802" level="INFO">${RESULT} = [{'time': 0.020261083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.570800000000031e-05, 'source_diff': 8.570800000000031e-05}, {'time': 0.020352097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.798" endtime="20201117 14:43:00.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:00.803" endtime="20201117 14:43:00.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.820" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.819" endtime="20201117 14:43:00.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.823" level="INFO">VALUE: [8.570800000000031e-05, 8.513899999999797e-05, 8.51249999999984e-05, 8.541700000000083e-05, 8.533299999999994e-05, 8.551400000000181e-05, 8.582000000000034e-05, 8.577799999999816e-05, 8.608399999999669e-05, 8.601399999999884e-05, 8.531999999999984e-05, 8.54859999999992e-05, 8.568099999999718e-05, 8.587499999999915e-05, 8.558300000000019e-05, 8.551399999999834e-05, 8.563899999999847e-05, 8.56530000000015e-05, 8.592999999999795e-05, 8.601399999999884e-05, 8.566700000000108e-05, 8.533399999999941e-05, 8.591699999999786e-05, 8.549999999999877e-05, 8.56530000000015e-05, 8.587499999999915e-05, 8.519499999999972e-05, 8.518100000000015e-05, 8.547199999999963e-05, 8.551399999999834e-05, 8.576399999999859e-05, 8.59859999999997e-05, 8.513899999999797e-05, 8.576399999999859e-05, 8.58050000000013e-05, 8.563899999999847e-05, 8.593099999999743e-05, 8.558399999999966e-05, 8.59859999999997e-05, 8.519499999999972e-05, 8.56249999999989e-05, 8.524999999999852e-05, 8.545800000000006e-05, 8.594400000000099e-05, 8.556900000000062e-05, 8.590199999999881e-05, 8.580499999999783e-05, 8.522199999999938e-05, 8.524999999999852e-05, 8.583300000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.821" endtime="20201117 14:43:00.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.817" endtime="20201117 14:43:00.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.827" endtime="20201117 14:43:00.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.830" endtime="20201117 14:43:00.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.829" endtime="20201117 14:43:00.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.825" endtime="20201117 14:43:00.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.453" endtime="20201117 14:43:00.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.054" endtime="20201117 14:43:00.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.053" endtime="20201117 14:43:00.852"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.854" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.863" endtime="20201117 14:43:00.884"></status>
</kw>
<msg timestamp="20201117 14:43:00.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.861" endtime="20201117 14:43:00.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.885" endtime="20201117 14:43:00.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.888" endtime="20201117 14:43:00.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.859" endtime="20201117 14:43:00.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.856" endtime="20201117 14:43:00.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.897" endtime="20201117 14:43:01.184"></status>
</kw>
<msg timestamp="20201117 14:43:01.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023990444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.896" endtime="20201117 14:43:01.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023990444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.188" endtime="20201117 14:43:01.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.197" endtime="20201117 14:43:01.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.893" endtime="20201117 14:43:01.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.891" endtime="20201117 14:43:01.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.204" level="INFO">${RESULT} = [{'time': 0.024077625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.718099999999868e-05, 'source_diff': 8.718099999999868e-05}, {'time': 0.024167681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:01.200" endtime="20201117 14:43:01.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:01.205" endtime="20201117 14:43:01.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.224" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.222" endtime="20201117 14:43:01.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.227" level="INFO">VALUE: [8.718099999999868e-05, 8.629199999999823e-05, 8.676399999999959e-05, 8.663899999999947e-05, 8.661100000000033e-05, 8.644500000000097e-05, 8.651399999999934e-05, 8.661100000000033e-05, 8.642999999999845e-05, 8.644400000000149e-05, 8.627800000000213e-05, 8.616700000000158e-05, 8.66799999999987e-05, 8.701399999999984e-05, 8.637499999999965e-05, 8.663899999999947e-05, 8.705600000000202e-05, 8.644500000000097e-05, 8.676399999999959e-05, 8.670900000000079e-05, 8.681999999999787e-05, 8.627699999999919e-05, 8.637499999999965e-05, 8.649999999999977e-05, 8.644400000000149e-05, 8.647199999999716e-05, 8.634699999999704e-05, 8.695799999999809e-05, 8.670800000000131e-05, 8.68189999999984e-05, 8.668100000000165e-05, 8.643099999999793e-05, 8.676399999999959e-05, 8.688899999999972e-05, 8.668000000000217e-05, 8.688900000000319e-05, 8.711099999999736e-05, 8.681999999999787e-05, 8.623599999999995e-05, 8.705499999999908e-05, 8.672200000000088e-05, 8.694399999999852e-05, 8.704200000000245e-05, 8.68189999999984e-05, 8.684699999999754e-05, 8.644500000000097e-05, 8.623599999999995e-05, 8.677799999999916e-05, 8.663899999999947e-05, 8.624999999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.225" endtime="20201117 14:43:01.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.220" endtime="20201117 14:43:01.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.230" endtime="20201117 14:43:01.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.234" endtime="20201117 14:43:01.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.232" endtime="20201117 14:43:01.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.228" endtime="20201117 14:43:01.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.855" endtime="20201117 14:43:01.254"></status>
</kw>
<msg timestamp="20201117 14:43:01.255" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.263" endtime="20201117 14:43:01.283"></status>
</kw>
<msg timestamp="20201117 14:43:01.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.261" endtime="20201117 14:43:01.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.284" endtime="20201117 14:43:01.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.287" endtime="20201117 14:43:01.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.259" endtime="20201117 14:43:01.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.257" endtime="20201117 14:43:01.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.297" endtime="20201117 14:43:01.583"></status>
</kw>
<msg timestamp="20201117 14:43:01.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.296" endtime="20201117 14:43:01.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.588" endtime="20201117 14:43:01.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.596" endtime="20201117 14:43:01.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.293" endtime="20201117 14:43:01.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.291" endtime="20201117 14:43:01.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.603" level="INFO">${RESULT} = [{'time': 0.020239556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.71669999999991e-05, 'source_diff': 8.71669999999991e-05}, {'time': 0.020331556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:01.600" endtime="20201117 14:43:01.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.617" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:01.604" endtime="20201117 14:43:01.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.622" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.621" endtime="20201117 14:43:01.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.625" level="INFO">VALUE: [8.71669999999991e-05, 8.705600000000202e-05, 8.676300000000012e-05, 8.656900000000162e-05, 8.634699999999704e-05, 8.627799999999866e-05, 8.645800000000106e-05, 8.644400000000149e-05, 8.677799999999916e-05, 8.708300000000169e-05, 8.626399999999909e-05, 8.643099999999793e-05, 8.6153000000002e-05, 8.638899999999922e-05, 8.6944999999998e-05, 8.638899999999922e-05, 8.672199999999741e-05, 8.663799999999999e-05, 8.713899999999997e-05, 8.622199999999691e-05, 8.66249999999999e-05, 8.637499999999965e-05, 8.683300000000144e-05, 8.6847000000001e-05, 8.611099999999983e-05, 8.638899999999922e-05, 8.705600000000202e-05, 8.705599999999855e-05, 8.694500000000147e-05, 8.645900000000054e-05, 8.695899999999757e-05, 8.654199999999848e-05, 8.620799999999734e-05, 8.630499999999833e-05, 8.61249999999994e-05, 8.651399999999934e-05, 8.632000000000084e-05, 8.6847000000001e-05, 8.705599999999855e-05, 8.638899999999922e-05, 8.622200000000038e-05, 8.626400000000256e-05, 8.64449999999975e-05, 8.655600000000152e-05, 8.701399999999984e-05, 8.649999999999977e-05, 8.690199999999981e-05, 8.619400000000124e-05, 8.652799999999891e-05, 8.637500000000312e-05]</msg>
<status status="PASS" starttime="20201117 14:43:01.623" endtime="20201117 14:43:01.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.618" endtime="20201117 14:43:01.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.628" endtime="20201117 14:43:01.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.631" endtime="20201117 14:43:01.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.630" endtime="20201117 14:43:01.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.626" endtime="20201117 14:43:01.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.255" endtime="20201117 14:43:01.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.853" endtime="20201117 14:43:01.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.852" endtime="20201117 14:43:01.653"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.655" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.664" endtime="20201117 14:43:01.685"></status>
</kw>
<msg timestamp="20201117 14:43:01.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.662" endtime="20201117 14:43:01.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.686" endtime="20201117 14:43:01.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.689" endtime="20201117 14:43:01.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.660" endtime="20201117 14:43:01.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.657" endtime="20201117 14:43:01.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.698" endtime="20201117 14:43:01.983"></status>
</kw>
<msg timestamp="20201117 14:43:01.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02301025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:01.697" endtime="20201117 14:43:01.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02301025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:01.988" endtime="20201117 14:43:01.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.996" endtime="20201117 14:43:01.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.694" endtime="20201117 14:43:01.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.692" endtime="20201117 14:43:01.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.004" level="INFO">${RESULT} = [{'time': 0.02301025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.73189999999989e-05, 'source_diff': 8.73189999999989e-05}, {'time': 0.023101319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:02.000" endtime="20201117 14:43:02.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:02.005" endtime="20201117 14:43:02.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.022" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.021" endtime="20201117 14:43:02.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.025" level="INFO">VALUE: [8.73189999999989e-05, 8.74999999999973e-05, 8.751400000000034e-05, 8.79860000000017e-05, 8.777700000000069e-05, 8.798599999999823e-05, 8.787500000000115e-05, 8.716599999999963e-05, 8.788900000000072e-05, 8.808299999999922e-05, 8.808299999999922e-05, 8.751400000000034e-05, 8.750000000000077e-05, 8.761100000000133e-05, 8.783400000000191e-05, 8.747199999999816e-05, 8.811099999999836e-05, 8.726400000000009e-05, 8.776400000000059e-05, 8.758299999999872e-05, 8.737500000000065e-05, 8.776300000000112e-05, 8.731900000000237e-05, 8.738900000000022e-05, 8.795799999999909e-05, 8.758300000000219e-05, 8.744399999999902e-05, 8.805599999999955e-05, 8.756899999999915e-05, 8.757000000000209e-05, 8.78059999999993e-05, 8.783400000000191e-05, 8.76250000000009e-05, 8.745899999999807e-05, 8.813799999999802e-05, 8.80129999999979e-05, 8.74999999999973e-05, 8.720800000000181e-05, 8.786099999999811e-05, 8.795800000000256e-05, 8.800000000000127e-05, 8.76250000000009e-05, 8.742999999999945e-05, 8.744399999999902e-05, 8.71669999999991e-05, 8.756999999999862e-05, 8.781999999999887e-05, 8.727799999999966e-05, 8.806999999999912e-05, 8.723600000000095e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.023" endtime="20201117 14:43:02.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.018" endtime="20201117 14:43:02.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.028" endtime="20201117 14:43:02.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.031" endtime="20201117 14:43:02.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.030" endtime="20201117 14:43:02.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.026" endtime="20201117 14:43:02.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.656" endtime="20201117 14:43:02.052"></status>
</kw>
<msg timestamp="20201117 14:43:02.053" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.061" endtime="20201117 14:43:02.081"></status>
</kw>
<msg timestamp="20201117 14:43:02.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.060" endtime="20201117 14:43:02.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.083" endtime="20201117 14:43:02.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.085" endtime="20201117 14:43:02.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.057" endtime="20201117 14:43:02.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.055" endtime="20201117 14:43:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.096" endtime="20201117 14:43:02.381"></status>
</kw>
<msg timestamp="20201117 14:43:02.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.094" endtime="20201117 14:43:02.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.386" endtime="20201117 14:43:02.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.395" endtime="20201117 14:43:02.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.091" endtime="20201117 14:43:02.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.090" endtime="20201117 14:43:02.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.402" level="INFO">${RESULT} = [{'time': 0.020363736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.745800000000206e-05, 'source_diff': 8.745800000000206e-05}, {'time': 0.02045375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:02.398" endtime="20201117 14:43:02.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:02.403" endtime="20201117 14:43:02.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.420" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.419" endtime="20201117 14:43:02.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.423" level="INFO">VALUE: [8.745800000000206e-05, 8.722200000000138e-05, 8.726400000000009e-05, 8.786100000000158e-05, 8.788899999999725e-05, 8.794500000000247e-05, 8.755599999999905e-05, 8.751400000000034e-05, 8.725000000000052e-05, 8.78189999999994e-05, 8.794400000000299e-05, 8.74999999999973e-05, 8.750000000000077e-05, 8.751400000000034e-05, 8.736100000000108e-05, 8.71250000000004e-05, 8.811099999999836e-05, 8.758299999999872e-05, 8.718099999999868e-05, 8.769499999999875e-05, 8.737500000000065e-05, 8.732000000000184e-05, 8.795799999999909e-05, 8.763900000000047e-05, 8.806999999999912e-05, 8.779100000000026e-05, 8.71799999999992e-05, 8.795799999999909e-05, 8.736100000000108e-05, 8.761100000000133e-05, 8.802800000000041e-05, 8.730600000000227e-05, 8.81120000000013e-05, 8.783400000000191e-05, 8.752700000000044e-05, 8.775000000000102e-05, 8.793099999999943e-05, 8.738900000000022e-05, 8.740200000000031e-05, 8.759799999999776e-05, 8.802800000000041e-05, 8.731900000000237e-05, 8.794400000000299e-05, 8.738900000000022e-05, 8.730499999999933e-05, 8.79310000000029e-05, 8.779199999999973e-05, 8.769499999999875e-05, 8.713899999999997e-05, 8.738899999999675e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.421" endtime="20201117 14:43:02.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.417" endtime="20201117 14:43:02.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.426" endtime="20201117 14:43:02.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.430" endtime="20201117 14:43:02.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.428" endtime="20201117 14:43:02.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.425" endtime="20201117 14:43:02.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.053" endtime="20201117 14:43:02.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.654" endtime="20201117 14:43:02.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.653" endtime="20201117 14:43:02.451"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.453" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.462" endtime="20201117 14:43:02.482"></status>
</kw>
<msg timestamp="20201117 14:43:02.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.460" endtime="20201117 14:43:02.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.484" endtime="20201117 14:43:02.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.487" endtime="20201117 14:43:02.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.458" endtime="20201117 14:43:02.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.456" endtime="20201117 14:43:02.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.497" endtime="20201117 14:43:02.783"></status>
</kw>
<msg timestamp="20201117 14:43:02.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023601125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.495" endtime="20201117 14:43:02.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023512639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023601125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.787" endtime="20201117 14:43:02.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.795" endtime="20201117 14:43:02.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.492" endtime="20201117 14:43:02.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.490" endtime="20201117 14:43:02.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.802" level="INFO">${RESULT} = [{'time': 0.023601125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84860000000022e-05, 'source_diff': 8.84860000000022e-05}, {'time': 0.023694139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:02.799" endtime="20201117 14:43:02.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:02.804" endtime="20201117 14:43:02.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.822" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.821" endtime="20201117 14:43:02.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.825" level="INFO">VALUE: [8.84860000000022e-05, 8.813900000000097e-05, 8.829200000000023e-05, 8.8945e-05, 8.812499999999793e-05, 8.847199999999916e-05, 8.876299999999865e-05, 8.820799999999934e-05, 8.905499999999761e-05, 8.875000000000202e-05, 8.873600000000245e-05, 8.823600000000195e-05, 8.880499999999736e-05, 8.836100000000208e-05, 8.86670000000006e-05, 8.855600000000005e-05, 8.888899999999825e-05, 8.84999999999983e-05, 8.843099999999993e-05, 8.851400000000134e-05, 8.905600000000055e-05, 8.865200000000156e-05, 8.845799999999959e-05, 8.895800000000009e-05, 8.836100000000208e-05, 8.833299999999947e-05, 8.872199999999941e-05, 8.815300000000054e-05, 8.86250000000019e-05, 8.854200000000048e-05, 8.820800000000281e-05, 8.905600000000055e-05, 8.855600000000005e-05, 8.89999999999988e-05, 8.898599999999923e-05, 8.851400000000134e-05, 8.887500000000215e-05, 8.870799999999984e-05, 8.89999999999988e-05, 8.88190000000004e-05, 8.897199999999966e-05, 8.901400000000184e-05, 8.829200000000023e-05, 8.836099999999861e-05, 8.812499999999793e-05, 8.862499999999843e-05, 8.83059999999998e-05, 8.89999999999988e-05, 8.91670000000011e-05, 8.909699999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:43:02.823" endtime="20201117 14:43:02.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.818" endtime="20201117 14:43:02.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.828" endtime="20201117 14:43:02.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.831" endtime="20201117 14:43:02.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.830" endtime="20201117 14:43:02.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.826" endtime="20201117 14:43:02.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.454" endtime="20201117 14:43:02.852"></status>
</kw>
<msg timestamp="20201117 14:43:02.853" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.861" endtime="20201117 14:43:02.881"></status>
</kw>
<msg timestamp="20201117 14:43:02.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.860" endtime="20201117 14:43:02.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.883" endtime="20201117 14:43:02.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.886" endtime="20201117 14:43:02.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.857" endtime="20201117 14:43:02.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.855" endtime="20201117 14:43:02.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.896" endtime="20201117 14:43:03.182"></status>
</kw>
<msg timestamp="20201117 14:43:03.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020140625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.895" endtime="20201117 14:43:03.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020140625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.187" endtime="20201117 14:43:03.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.195" endtime="20201117 14:43:03.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.892" endtime="20201117 14:43:03.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.890" endtime="20201117 14:43:03.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.202" level="INFO">${RESULT} = [{'time': 0.020140625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.851399999999787e-05, 'source_diff': 8.851399999999787e-05}, {'time': 0.020233653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.198" endtime="20201117 14:43:03.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:03.203" endtime="20201117 14:43:03.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.220" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.219" endtime="20201117 14:43:03.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.223" level="INFO">VALUE: [8.851399999999787e-05, 8.834699999999904e-05, 8.837499999999818e-05, 8.888899999999825e-05, 8.908399999999969e-05, 8.890300000000129e-05, 8.831999999999937e-05, 8.820799999999934e-05, 8.901400000000184e-05, 8.861099999999886e-05, 8.911099999999936e-05, 8.901399999999837e-05, 8.905499999999761e-05, 8.826399999999762e-05, 8.823599999999848e-05, 8.820799999999934e-05, 8.902800000000141e-05, 8.901400000000184e-05, 8.901400000000184e-05, 8.884699999999954e-05, 8.872199999999941e-05, 8.823599999999848e-05, 8.856999999999962e-05, 8.865200000000156e-05, 8.872199999999941e-05, 8.88190000000004e-05, 8.887499999999868e-05, 8.881999999999987e-05, 8.854200000000048e-05, 8.845799999999959e-05, 8.8945e-05, 8.820900000000229e-05, 8.901399999999837e-05, 8.893099999999696e-05, 8.893100000000043e-05, 8.822200000000238e-05, 8.908300000000022e-05, 8.905600000000055e-05, 8.869400000000027e-05, 8.89999999999988e-05, 8.912499999999893e-05, 8.88190000000004e-05, 8.86250000000019e-05, 8.880500000000083e-05, 8.823599999999848e-05, 8.86670000000006e-05, 8.815300000000054e-05, 8.898599999999923e-05, 8.830500000000033e-05, 8.900000000000227e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.222" endtime="20201117 14:43:03.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.217" endtime="20201117 14:43:03.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.226" endtime="20201117 14:43:03.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.230" endtime="20201117 14:43:03.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.228" endtime="20201117 14:43:03.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.225" endtime="20201117 14:43:03.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.853" endtime="20201117 14:43:03.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.452" endtime="20201117 14:43:03.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.451" endtime="20201117 14:43:03.251"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.254" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.263" endtime="20201117 14:43:03.283"></status>
</kw>
<msg timestamp="20201117 14:43:03.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.261" endtime="20201117 14:43:03.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.285" endtime="20201117 14:43:03.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.287" endtime="20201117 14:43:03.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.258" endtime="20201117 14:43:03.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.256" endtime="20201117 14:43:03.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.297" endtime="20201117 14:43:03.583"></status>
</kw>
<msg timestamp="20201117 14:43:03.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.295" endtime="20201117 14:43:03.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023331625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.587" endtime="20201117 14:43:03.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.596" endtime="20201117 14:43:03.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.292" endtime="20201117 14:43:03.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.291" endtime="20201117 14:43:03.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.603" level="INFO">${RESULT} = [{'time': 0.023421583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.995799999999762e-05, 'source_diff': 8.995799999999762e-05}, {'time': 0.023516597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:03.599" endtime="20201117 14:43:03.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.616" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:03.604" endtime="20201117 14:43:03.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.621" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.620" endtime="20201117 14:43:03.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.624" level="INFO">VALUE: [8.995799999999762e-05, 8.944400000000102e-05, 8.915300000000154e-05, 8.926399999999862e-05, 8.919400000000077e-05, 9.001400000000284e-05, 8.966699999999814e-05, 9.009800000000026e-05, 9.012499999999993e-05, 8.988899999999925e-05, 9.008400000000069e-05, 8.973699999999946e-05, 8.919400000000077e-05, 8.994400000000152e-05, 8.980499999999836e-05, 8.919400000000077e-05, 8.969400000000127e-05, 8.945799999999712e-05, 8.923599999999948e-05, 8.956900000000115e-05, 9.006999999999765e-05, 8.986199999999958e-05, 8.957000000000062e-05, 8.957000000000062e-05, 8.977799999999869e-05, 8.9638999999999e-05, 8.958400000000019e-05, 8.99869999999997e-05, 8.934700000000004e-05, 8.937499999999918e-05, 8.91800000000012e-05, 8.963900000000247e-05, 8.98190000000014e-05, 9.006899999999818e-05, 8.995799999999762e-05, 8.968100000000118e-05, 8.918100000000068e-05, 8.932000000000037e-05, 8.937499999999918e-05, 8.972299999999989e-05, 8.9945000000001e-05, 8.933300000000047e-05, 8.995799999999762e-05, 8.992999999999848e-05, 8.955500000000158e-05, 9.012499999999993e-05, 8.924999999999905e-05, 8.976399999999912e-05, 8.944399999999755e-05, 8.957000000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:43:03.622" endtime="20201117 14:43:03.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.617" endtime="20201117 14:43:03.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.627" endtime="20201117 14:43:03.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.631" endtime="20201117 14:43:03.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.629" endtime="20201117 14:43:03.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.625" endtime="20201117 14:43:03.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.254" endtime="20201117 14:43:03.659"></status>
</kw>
<msg timestamp="20201117 14:43:03.659" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.668" endtime="20201117 14:43:03.688"></status>
</kw>
<msg timestamp="20201117 14:43:03.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.666" endtime="20201117 14:43:03.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.690" endtime="20201117 14:43:03.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.692" endtime="20201117 14:43:03.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.664" endtime="20201117 14:43:03.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.661" endtime="20201117 14:43:03.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.704" endtime="20201117 14:43:03.990"></status>
</kw>
<msg timestamp="20201117 14:43:03.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027854097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027943875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.702" endtime="20201117 14:43:03.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027854097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027943875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.995" endtime="20201117 14:43:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.003" endtime="20201117 14:43:04.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.699" endtime="20201117 14:43:04.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.697" endtime="20201117 14:43:04.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.010" level="INFO">${RESULT} = [{'time': 0.027943875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.977799999999869e-05, 'source_diff': 8.977799999999869e-05}, {'time': 0.028036806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.007" endtime="20201117 14:43:04.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:04.011" endtime="20201117 14:43:04.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.028" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.027" endtime="20201117 14:43:04.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.031" level="INFO">VALUE: [8.977799999999869e-05, 8.943100000000093e-05, 8.96519999999991e-05, 8.98190000000014e-05, 8.958300000000072e-05, 8.930500000000133e-05, 8.951399999999887e-05, 8.938900000000222e-05, 8.945800000000059e-05, 8.93190000000009e-05, 8.983400000000044e-05, 8.987499999999968e-05, 8.979200000000173e-05, 8.920899999999982e-05, 8.908399999999969e-05, 8.919500000000025e-05, 8.976399999999912e-05, 8.941600000000188e-05, 8.926399999999862e-05, 8.965299999999857e-05, 8.970900000000032e-05, 8.98190000000014e-05, 8.925000000000252e-05, 8.979200000000173e-05, 8.94450000000005e-05, 8.976399999999912e-05, 8.980599999999783e-05, 8.988899999999925e-05, 8.988899999999925e-05, 8.919400000000077e-05, 8.918100000000068e-05, 8.923600000000295e-05, 8.947200000000016e-05, 9.001399999999937e-05, 8.962499999999943e-05, 8.952799999999844e-05, 8.931899999999743e-05, 9.008300000000469e-05, 8.998600000000023e-05, 8.951399999999887e-05, 8.948599999999973e-05, 8.983400000000391e-05, 8.93199999999969e-05, 8.923599999999948e-05, 8.927699999999872e-05, 8.973599999999998e-05, 8.962499999999596e-05, 8.944400000000102e-05, 8.94999999999993e-05, 8.915300000000154e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.029" endtime="20201117 14:43:04.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.025" endtime="20201117 14:43:04.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.035" endtime="20201117 14:43:04.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.038" endtime="20201117 14:43:04.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.037" endtime="20201117 14:43:04.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.032" endtime="20201117 14:43:04.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.660" endtime="20201117 14:43:04.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.252" endtime="20201117 14:43:04.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.251" endtime="20201117 14:43:04.059"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.062" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.071" endtime="20201117 14:43:04.092"></status>
</kw>
<msg timestamp="20201117 14:43:04.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.069" endtime="20201117 14:43:04.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.094" endtime="20201117 14:43:04.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.096" endtime="20201117 14:43:04.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.066" endtime="20201117 14:43:04.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.064" endtime="20201117 14:43:04.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.106" endtime="20201117 14:43:04.392"></status>
</kw>
<msg timestamp="20201117 14:43:04.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023702347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023793194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.104" endtime="20201117 14:43:04.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023702347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023793194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.396" endtime="20201117 14:43:04.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.405" endtime="20201117 14:43:04.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.102" endtime="20201117 14:43:04.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.100" endtime="20201117 14:43:04.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.411" level="INFO">${RESULT} = [{'time': 0.023793194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.084700000000154e-05, 'source_diff': 9.084700000000154e-05}, {'time': 0.023889194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.408" endtime="20201117 14:43:04.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.426" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:04.412" endtime="20201117 14:43:04.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.431" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.430" endtime="20201117 14:43:04.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.434" level="INFO">VALUE: [9.084700000000154e-05, 9.055499999999911e-05, 9.080499999999936e-05, 9.10000000000008e-05, 9.0332999999998e-05, 9.05000000000003e-05, 9.076400000000012e-05, 9.0332999999998e-05, 9.072200000000141e-05, 9.057000000000162e-05, 9.01670000000021e-05, 9.093099999999896e-05, 9.038899999999975e-05, 9.099999999999733e-05, 9.072299999999742e-05, 9.088900000000025e-05, 9.027800000000266e-05, 9.038899999999975e-05, 9.076400000000012e-05, 9.111100000000136e-05, 9.075000000000055e-05, 9.05000000000003e-05, 9.0639e-05, 9.074999999999708e-05, 9.022200000000091e-05, 9.073600000000098e-05, 9.033400000000094e-05, 9.068099999999871e-05, 9.049999999999683e-05, 9.051399999999987e-05, 9.080599999999883e-05, 9.094399999999905e-05, 9.094399999999905e-05, 9.081899999999893e-05, 9.042999999999898e-05, 9.033300000000147e-05, 9.062500000000043e-05, 9.055499999999911e-05, 9.01389999999995e-05, 9.0639e-05, 9.112500000000093e-05, 9.095800000000209e-05, 9.112500000000093e-05, 9.073599999999751e-05, 9.080500000000283e-05, 9.087500000000068e-05, 9.08329999999985e-05, 9.020800000000134e-05, 9.023600000000048e-05, 9.015299999999907e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.432" endtime="20201117 14:43:04.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.427" endtime="20201117 14:43:04.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.437" endtime="20201117 14:43:04.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.441" endtime="20201117 14:43:04.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.439" endtime="20201117 14:43:04.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.436" endtime="20201117 14:43:04.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.063" endtime="20201117 14:43:04.462"></status>
</kw>
<msg timestamp="20201117 14:43:04.462" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.470" endtime="20201117 14:43:04.491"></status>
</kw>
<msg timestamp="20201117 14:43:04.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.469" endtime="20201117 14:43:04.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.493" endtime="20201117 14:43:04.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.495" endtime="20201117 14:43:04.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.466" endtime="20201117 14:43:04.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.464" endtime="20201117 14:43:04.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.506" endtime="20201117 14:43:04.792"></status>
</kw>
<msg timestamp="20201117 14:43:04.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.504" endtime="20201117 14:43:04.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.797" endtime="20201117 14:43:04.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.805" endtime="20201117 14:43:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.501" endtime="20201117 14:43:04.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.500" endtime="20201117 14:43:04.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.812" level="INFO">${RESULT} = [{'time': 0.020152583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.048600000000073e-05, 'source_diff': 9.048600000000073e-05}, {'time': 0.020245583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:04.809" endtime="20201117 14:43:04.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:04.813" endtime="20201117 14:43:04.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.831" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.830" endtime="20201117 14:43:04.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.833" level="INFO">VALUE: [9.048600000000073e-05, 9.055500000000258e-05, 9.062500000000043e-05, 9.025000000000005e-05, 9.062499999999696e-05, 9.073600000000098e-05, 9.023600000000048e-05, 9.108400000000169e-05, 9.087499999999721e-05, 9.025000000000005e-05, 9.026399999999962e-05, 9.036100000000061e-05, 9.044399999999855e-05, 9.084700000000154e-05, 9.01389999999995e-05, 9.025000000000005e-05, 9.047200000000116e-05, 9.03060000000018e-05, 9.108300000000222e-05, 9.088900000000025e-05, 9.03060000000018e-05, 9.074999999999708e-05, 9.057000000000162e-05, 9.075000000000055e-05, 9.036100000000061e-05, 9.091699999999939e-05, 9.01939999999983e-05, 9.068100000000218e-05, 9.076300000000065e-05, 9.056900000000215e-05, 9.090200000000034e-05, 9.051400000000334e-05, 9.061099999999739e-05, 9.091699999999939e-05, 9.03199999999979e-05, 9.105599999999908e-05, 9.05000000000003e-05, 9.070900000000132e-05, 9.111099999999789e-05, 9.026399999999962e-05, 9.106899999999918e-05, 9.101400000000037e-05, 9.090200000000034e-05, 9.055500000000258e-05, 9.080499999999936e-05, 9.070799999999837e-05, 9.056900000000215e-05, 9.091699999999939e-05, 9.068099999999871e-05, 9.019500000000125e-05]</msg>
<status status="PASS" starttime="20201117 14:43:04.832" endtime="20201117 14:43:04.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.827" endtime="20201117 14:43:04.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.837" endtime="20201117 14:43:04.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.841" endtime="20201117 14:43:04.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.839" endtime="20201117 14:43:04.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.835" endtime="20201117 14:43:04.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.463" endtime="20201117 14:43:04.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.061" endtime="20201117 14:43:04.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.060" endtime="20201117 14:43:04.862"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.864" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.873" endtime="20201117 14:43:04.893"></status>
</kw>
<msg timestamp="20201117 14:43:04.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.871" endtime="20201117 14:43:04.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.894" endtime="20201117 14:43:04.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.897" endtime="20201117 14:43:04.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.868" endtime="20201117 14:43:04.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.866" endtime="20201117 14:43:04.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.906" endtime="20201117 14:43:05.193"></status>
</kw>
<msg timestamp="20201117 14:43:05.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:04.905" endtime="20201117 14:43:05.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:05.197" endtime="20201117 14:43:05.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.205" endtime="20201117 14:43:05.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.902" endtime="20201117 14:43:05.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.900" endtime="20201117 14:43:05.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.212" level="INFO">${RESULT} = [{'time': 0.022832208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.120799999999887e-05, 'source_diff': 9.120799999999887e-05}, {'time': 0.022928264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:05.209" endtime="20201117 14:43:05.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:05.213" endtime="20201117 14:43:05.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.231" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.230" endtime="20201117 14:43:05.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.234" level="INFO">VALUE: [9.120799999999887e-05, 9.186099999999864e-05, 9.194400000000005e-05, 9.199999999999833e-05, 9.198600000000223e-05, 9.14589999999986e-05, 9.194499999999953e-05, 9.143100000000293e-05, 9.120899999999835e-05, 9.170799999999937e-05, 9.151299999999793e-05, 9.194400000000005e-05, 9.187499999999821e-05, 9.194400000000005e-05, 9.187499999999821e-05, 9.195799999999962e-05, 9.133300000000247e-05, 9.195799999999962e-05, 9.21529999999976e-05, 9.151400000000087e-05, 9.15000000000013e-05, 9.120899999999835e-05, 9.21390000000015e-05, 9.132000000000237e-05, 9.11939999999993e-05, 9.194499999999953e-05, 9.168000000000023e-05, 9.206900000000018e-05, 9.158299999999925e-05, 9.151400000000087e-05, 9.11390000000005e-05, 9.179200000000026e-05, 9.193099999999996e-05, 9.132000000000237e-05, 9.123599999999801e-05, 9.202800000000094e-05, 9.149999999999783e-05, 9.158300000000272e-05, 9.161200000000133e-05, 9.145799999999912e-05, 9.120800000000234e-05, 9.194400000000005e-05, 9.162499999999796e-05, 9.126400000000062e-05, 9.186100000000211e-05, 9.156899999999968e-05, 9.168099999999971e-05, 9.187500000000168e-05, 9.216600000000116e-05, 9.205600000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.232" endtime="20201117 14:43:05.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.227" endtime="20201117 14:43:05.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.237" endtime="20201117 14:43:05.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.241" endtime="20201117 14:43:05.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.239" endtime="20201117 14:43:05.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.236" endtime="20201117 14:43:05.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.865" endtime="20201117 14:43:05.262"></status>
</kw>
<msg timestamp="20201117 14:43:05.262" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.270" endtime="20201117 14:43:05.290"></status>
</kw>
<msg timestamp="20201117 14:43:05.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.269" endtime="20201117 14:43:05.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.292" endtime="20201117 14:43:05.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.295" endtime="20201117 14:43:05.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.266" endtime="20201117 14:43:05.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.264" endtime="20201117 14:43:05.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.305" endtime="20201117 14:43:05.591"></status>
</kw>
<msg timestamp="20201117 14:43:05.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.303" endtime="20201117 14:43:05.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020261681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.596" endtime="20201117 14:43:05.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.604" endtime="20201117 14:43:05.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.301" endtime="20201117 14:43:05.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.299" endtime="20201117 14:43:05.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.611" level="INFO">${RESULT} = [{'time': 0.020261681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.212499999999846e-05, 'source_diff': 9.212499999999846e-05}, {'time': 0.020356681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:05.608" endtime="20201117 14:43:05.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:05.612" endtime="20201117 14:43:05.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.630" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.629" endtime="20201117 14:43:05.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.632" level="INFO">VALUE: [9.212499999999846e-05, 9.125000000000105e-05, 9.13879999999978e-05, 9.124999999999758e-05, 9.120899999999835e-05, 9.120799999999887e-05, 9.187499999999821e-05, 9.137500000000118e-05, 9.156899999999968e-05, 9.187500000000168e-05, 9.15000000000013e-05, 9.175000000000155e-05, 9.191700000000039e-05, 9.194499999999953e-05, 9.19589999999991e-05, 9.206999999999965e-05, 9.119400000000277e-05, 9.13190000000029e-05, 9.173600000000198e-05, 9.194400000000005e-05, 9.205500000000061e-05, 9.194400000000005e-05, 9.194400000000005e-05, 9.186100000000211e-05, 9.19589999999991e-05, 9.120899999999835e-05, 9.212500000000193e-05, 9.175000000000155e-05, 9.147299999999817e-05, 9.201400000000137e-05, 9.168099999999971e-05, 9.201400000000137e-05, 9.138900000000075e-05, 9.186100000000211e-05, 9.11939999999993e-05, 9.156899999999968e-05, 9.11939999999993e-05, 9.187499999999821e-05, 9.143100000000293e-05, 9.184699999999907e-05, 9.187499999999821e-05, 9.138900000000075e-05, 9.159699999999882e-05, 9.177800000000069e-05, 9.136099999999814e-05, 9.176399999999765e-05, 9.142999999999998e-05, 9.179100000000079e-05, 9.205500000000061e-05, 9.15000000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:43:05.631" endtime="20201117 14:43:05.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.626" endtime="20201117 14:43:05.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.636" endtime="20201117 14:43:05.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.639" endtime="20201117 14:43:05.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.638" endtime="20201117 14:43:05.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.634" endtime="20201117 14:43:05.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.262" endtime="20201117 14:43:05.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.863" endtime="20201117 14:43:05.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.862" endtime="20201117 14:43:05.661"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.663" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.672" endtime="20201117 14:43:05.693"></status>
</kw>
<msg timestamp="20201117 14:43:05.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.670" endtime="20201117 14:43:05.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.695" endtime="20201117 14:43:05.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.697" endtime="20201117 14:43:05.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.667" endtime="20201117 14:43:05.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.665" endtime="20201117 14:43:05.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.707" endtime="20201117 14:43:05.993"></status>
</kw>
<msg timestamp="20201117 14:43:05.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023609319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023702, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:05.705" endtime="20201117 14:43:05.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023609319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023702, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:05.998" endtime="20201117 14:43:06.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.006" endtime="20201117 14:43:06.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.703" endtime="20201117 14:43:06.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.701" endtime="20201117 14:43:06.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.014" level="INFO">${RESULT} = [{'time': 0.023702, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.268100000000071e-05, 'source_diff': 9.268100000000071e-05}, {'time': 0.023798028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:43:06.010" endtime="20201117 14:43:06.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:06.015" endtime="20201117 14:43:06.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.033" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.032" endtime="20201117 14:43:06.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.036" level="INFO">VALUE: [9.268100000000071e-05, 9.298599999999976e-05, 9.295800000000062e-05, 9.252799999999797e-05, 9.277799999999822e-05, 9.224999999999858e-05, 9.313899999999903e-05, 9.213899999999803e-05, 9.280600000000083e-05, 9.244400000000055e-05, 9.259699999999982e-05, 9.244399999999708e-05, 9.288899999999878e-05, 9.256900000000068e-05, 9.27079999999969e-05, 9.256900000000068e-05, 9.284700000000007e-05, 9.262499999999896e-05, 9.294500000000053e-05, 9.21390000000015e-05, 9.215300000000107e-05, 9.291599999999844e-05, 9.218100000000021e-05, 9.255600000000058e-05, 9.212500000000193e-05, 9.273599999999951e-05, 9.277799999999822e-05, 9.309700000000032e-05, 9.286099999999964e-05, 9.30139999999989e-05, 9.274999999999908e-05, 9.284700000000007e-05, 9.261100000000286e-05, 9.290299999999835e-05, 9.248599999999926e-05, 9.215300000000107e-05, 9.236099999999914e-05, 9.30139999999989e-05, 9.226299999999868e-05, 9.231900000000043e-05, 9.244399999999708e-05, 9.233399999999947e-05, 9.234699999999957e-05, 9.308300000000075e-05, 9.313899999999903e-05, 9.220799999999987e-05, 9.274999999999908e-05, 9.294499999999706e-05, 9.225000000000205e-05, 9.27079999999969e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.034" endtime="20201117 14:43:06.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.029" endtime="20201117 14:43:06.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.039" endtime="20201117 14:43:06.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.043" endtime="20201117 14:43:06.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.041" endtime="20201117 14:43:06.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.037" endtime="20201117 14:43:06.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.664" endtime="20201117 14:43:06.064"></status>
</kw>
<msg timestamp="20201117 14:43:06.064" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.072" endtime="20201117 14:43:06.093"></status>
</kw>
<msg timestamp="20201117 14:43:06.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.071" endtime="20201117 14:43:06.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.094" endtime="20201117 14:43:06.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.097" endtime="20201117 14:43:06.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.068" endtime="20201117 14:43:06.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.066" endtime="20201117 14:43:06.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.107" endtime="20201117 14:43:06.393"></status>
</kw>
<msg timestamp="20201117 14:43:06.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020388431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.105" endtime="20201117 14:43:06.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020388431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.397" endtime="20201117 14:43:06.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.406" endtime="20201117 14:43:06.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.103" endtime="20201117 14:43:06.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.101" endtime="20201117 14:43:06.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.413" level="INFO">${RESULT} = [{'time': 0.020388431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.240299999999785e-05, 'source_diff': 9.240299999999785e-05}, {'time': 0.020484444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.410" endtime="20201117 14:43:06.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:06.414" endtime="20201117 14:43:06.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.432" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.431" endtime="20201117 14:43:06.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.434" level="INFO">VALUE: [9.240299999999785e-05, 9.308300000000075e-05, 9.256899999999721e-05, 9.220799999999987e-05, 9.236099999999914e-05, 9.30139999999989e-05, 9.220799999999987e-05, 9.244399999999708e-05, 9.273599999999951e-05, 9.308300000000075e-05, 9.312499999999946e-05, 9.30139999999989e-05, 9.265199999999862e-05, 9.277800000000169e-05, 9.281900000000093e-05, 9.224999999999858e-05, 9.220799999999987e-05, 9.286099999999964e-05, 9.24719999999997e-05, 9.293000000000148e-05, 9.291699999999792e-05, 9.237500000000218e-05, 9.294399999999758e-05, 9.249999999999883e-05, 9.238900000000175e-05, 9.261099999999939e-05, 9.248600000000273e-05, 9.248599999999926e-05, 9.262499999999896e-05, 9.274999999999908e-05, 9.290300000000182e-05, 9.31529999999986e-05, 9.2333e-05, 9.230500000000086e-05, 9.28330000000005e-05, 9.291700000000139e-05, 9.263899999999853e-05, 9.277799999999822e-05, 9.294500000000053e-05, 9.220899999999935e-05, 9.225000000000205e-05, 9.294400000000105e-05, 9.307000000000065e-05, 9.237500000000218e-05, 9.244400000000055e-05, 9.272199999999994e-05, 9.218000000000073e-05, 9.245800000000012e-05, 9.21940000000003e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.433" endtime="20201117 14:43:06.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.428" endtime="20201117 14:43:06.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.438" endtime="20201117 14:43:06.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.441" endtime="20201117 14:43:06.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.440" endtime="20201117 14:43:06.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.436" endtime="20201117 14:43:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.065" endtime="20201117 14:43:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.662" endtime="20201117 14:43:06.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.661" endtime="20201117 14:43:06.462"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.465" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.473" endtime="20201117 14:43:06.494"></status>
</kw>
<msg timestamp="20201117 14:43:06.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.472" endtime="20201117 14:43:06.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.496" endtime="20201117 14:43:06.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.499" endtime="20201117 14:43:06.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.469" endtime="20201117 14:43:06.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.467" endtime="20201117 14:43:06.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.508" endtime="20201117 14:43:06.795"></status>
</kw>
<msg timestamp="20201117 14:43:06.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.507" endtime="20201117 14:43:06.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.799" endtime="20201117 14:43:06.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.808" endtime="20201117 14:43:06.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.504" endtime="20201117 14:43:06.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.502" endtime="20201117 14:43:06.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.815" level="INFO">${RESULT} = [{'time': 0.022844222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.338899999999928e-05, 'source_diff': 9.338899999999928e-05}, {'time': 0.022943222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.811" endtime="20201117 14:43:06.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.829" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:06.816" endtime="20201117 14:43:06.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.833" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.832" endtime="20201117 14:43:06.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.836" level="INFO">VALUE: [9.338899999999928e-05, 9.330499999999839e-05, 9.406899999999871e-05, 9.363899999999953e-05, 9.406899999999871e-05, 9.408299999999828e-05, 9.33200000000009e-05, 9.312499999999946e-05, 9.327799999999872e-05, 9.334800000000004e-05, 9.320899999999688e-05, 9.3333000000001e-05, 9.358300000000125e-05, 9.400000000000033e-05, 9.390299999999935e-05, 9.405499999999914e-05, 9.320800000000087e-05, 9.411100000000089e-05, 9.324999999999958e-05, 9.408300000000175e-05, 9.340300000000232e-05, 9.373599999999704e-05, 9.413900000000003e-05, 9.358300000000125e-05, 9.331900000000143e-05, 9.322299999999992e-05, 9.338899999999928e-05, 9.362499999999996e-05, 9.313899999999903e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.408300000000175e-05, 9.338899999999928e-05, 9.418099999999874e-05, 9.336100000000014e-05, 9.405600000000208e-05, 9.331999999999743e-05, 9.407000000000165e-05, 9.319500000000078e-05, 9.351299999999993e-05, 9.344400000000155e-05, 9.413900000000003e-05, 9.319399999999783e-05, 9.358299999999778e-05, 9.394400000000205e-05, 9.406900000000218e-05, 9.349999999999983e-05, 9.380599999999836e-05, 9.322299999999992e-05, 9.35139999999994e-05]</msg>
<status status="PASS" starttime="20201117 14:43:06.835" endtime="20201117 14:43:06.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.829" endtime="20201117 14:43:06.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.839" endtime="20201117 14:43:06.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.843" endtime="20201117 14:43:06.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.841" endtime="20201117 14:43:06.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.838" endtime="20201117 14:43:06.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.466" endtime="20201117 14:43:06.864"></status>
</kw>
<msg timestamp="20201117 14:43:06.864" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.872" endtime="20201117 14:43:06.893"></status>
</kw>
<msg timestamp="20201117 14:43:06.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.871" endtime="20201117 14:43:06.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.895" endtime="20201117 14:43:06.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.898" endtime="20201117 14:43:06.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.868" endtime="20201117 14:43:06.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.866" endtime="20201117 14:43:06.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.908" endtime="20201117 14:43:07.194"></status>
</kw>
<msg timestamp="20201117 14:43:07.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.907" endtime="20201117 14:43:07.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.198" endtime="20201117 14:43:07.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.207" endtime="20201117 14:43:07.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.904" endtime="20201117 14:43:07.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.902" endtime="20201117 14:43:07.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.213" level="INFO">${RESULT} = [{'time': 0.020151264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.409699999999785e-05, 'source_diff': 9.409699999999785e-05}, {'time': 0.02024725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:07.210" endtime="20201117 14:43:07.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:07.215" endtime="20201117 14:43:07.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.232" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.231" endtime="20201117 14:43:07.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.235" level="INFO">VALUE: [9.409699999999785e-05, 9.323600000000001e-05, 9.359799999999682e-05, 9.376399999999965e-05, 9.387500000000021e-05, 9.387500000000021e-05, 9.349999999999983e-05, 9.408299999999828e-05, 9.358299999999778e-05, 9.394499999999806e-05, 9.390300000000282e-05, 9.362499999999996e-05, 9.388899999999978e-05, 9.320800000000087e-05, 9.349999999999983e-05, 9.369500000000128e-05, 9.341700000000189e-05, 9.381900000000193e-05, 9.349999999999983e-05, 9.388899999999978e-05, 9.39859999999973e-05, 9.400000000000033e-05, 9.331900000000143e-05, 9.358299999999778e-05, 9.366699999999867e-05, 9.405499999999914e-05, 9.386100000000064e-05, 9.340300000000232e-05, 9.331999999999743e-05, 9.330600000000133e-05, 9.33200000000009e-05, 9.333400000000047e-05, 9.319500000000078e-05, 9.36940000000018e-05, 9.345800000000112e-05, 9.319500000000078e-05, 9.38880000000003e-05, 9.337499999999971e-05, 9.413900000000003e-05, 9.324999999999958e-05, 9.40139999999999e-05, 9.342999999999851e-05, 9.384700000000107e-05, 9.394399999999858e-05, 9.380499999999889e-05, 9.377799999999922e-05, 9.394499999999806e-05, 9.390300000000282e-05, 9.376300000000018e-05, 9.392999999999901e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.233" endtime="20201117 14:43:07.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.228" endtime="20201117 14:43:07.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.238" endtime="20201117 14:43:07.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.241" endtime="20201117 14:43:07.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.240" endtime="20201117 14:43:07.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.236" endtime="20201117 14:43:07.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.865" endtime="20201117 14:43:07.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.464" endtime="20201117 14:43:07.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.463" endtime="20201117 14:43:07.263"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.265" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.274" endtime="20201117 14:43:07.296"></status>
</kw>
<msg timestamp="20201117 14:43:07.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.272" endtime="20201117 14:43:07.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.298" endtime="20201117 14:43:07.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.300" endtime="20201117 14:43:07.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.269" endtime="20201117 14:43:07.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.267" endtime="20201117 14:43:07.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.310" endtime="20201117 14:43:07.596"></status>
</kw>
<msg timestamp="20201117 14:43:07.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024233389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.308" endtime="20201117 14:43:07.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024233389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.600" endtime="20201117 14:43:07.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.609" endtime="20201117 14:43:07.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.305" endtime="20201117 14:43:07.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.304" endtime="20201117 14:43:07.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.616" level="INFO">${RESULT} = [{'time': 0.024328167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.477800000000022e-05, 'source_diff': 9.477800000000022e-05}, {'time': 0.024426167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.612" endtime="20201117 14:43:07.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:07.617" endtime="20201117 14:43:07.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.636" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.635" endtime="20201117 14:43:07.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.638" level="INFO">VALUE: [9.477800000000022e-05, 9.487499999999774e-05, 9.447199999999822e-05, 9.451299999999746e-05, 9.41659999999997e-05, 9.462499999999749e-05, 9.494399999999958e-05, 9.458299999999878e-05, 9.495799999999915e-05, 9.420800000000187e-05, 9.440299999999985e-05, 9.48339999999985e-05, 9.486100000000164e-05, 9.443100000000246e-05, 9.500000000000133e-05, 9.508399999999875e-05, 9.437500000000071e-05, 9.462500000000096e-05, 9.47079999999989e-05, 9.5027999999997e-05, 9.500000000000133e-05, 9.4333000000002e-05, 9.445800000000212e-05, 9.443099999999899e-05, 9.455599999999911e-05, 9.413900000000003e-05, 9.479099999999685e-05, 9.424999999999711e-05, 9.444499999999856e-05, 9.509699999999885e-05, 9.469399999999933e-05, 9.456999999999868e-05, 9.450000000000083e-05, 9.45140000000004e-05, 9.512500000000146e-05, 9.450000000000083e-05, 9.456899999999921e-05, 9.444399999999908e-05, 9.412500000000046e-05, 9.441699999999942e-05, 9.479200000000326e-05, 9.50140000000009e-05, 9.427799999999972e-05, 9.423599999999754e-05, 9.50140000000009e-05, 9.426300000000068e-05, 9.412500000000046e-05, 9.508299999999928e-05, 9.436100000000114e-05, 9.429199999999929e-05]</msg>
<status status="PASS" starttime="20201117 14:43:07.637" endtime="20201117 14:43:07.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.632" endtime="20201117 14:43:07.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.641" endtime="20201117 14:43:07.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.645" endtime="20201117 14:43:07.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.643" endtime="20201117 14:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.640" endtime="20201117 14:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.266" endtime="20201117 14:43:07.666"></status>
</kw>
<msg timestamp="20201117 14:43:07.666" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.675" endtime="20201117 14:43:07.695"></status>
</kw>
<msg timestamp="20201117 14:43:07.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.673" endtime="20201117 14:43:07.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.697" endtime="20201117 14:43:07.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.699" endtime="20201117 14:43:07.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.671" endtime="20201117 14:43:07.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.668" endtime="20201117 14:43:07.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.710" endtime="20201117 14:43:07.995"></status>
</kw>
<msg timestamp="20201117 14:43:07.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.708" endtime="20201117 14:43:07.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.000" endtime="20201117 14:43:08.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.008" endtime="20201117 14:43:08.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.705" endtime="20201117 14:43:08.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.704" endtime="20201117 14:43:08.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.015" level="INFO">${RESULT} = [{'time': 0.020554847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.481899999999946e-05, 'source_diff': 9.481899999999946e-05}, {'time': 0.020651847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.012" endtime="20201117 14:43:08.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:08.016" endtime="20201117 14:43:08.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.034" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.033" endtime="20201117 14:43:08.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.036" level="INFO">VALUE: [9.481899999999946e-05, 9.476400000000065e-05, 9.4333000000002e-05, 9.448600000000126e-05, 9.427799999999972e-05, 9.44729999999977e-05, 9.458400000000172e-05, 9.501399999999743e-05, 9.420900000000135e-05, 9.426400000000015e-05, 9.506899999999971e-05, 9.412500000000046e-05, 9.467999999999976e-05, 9.41529999999996e-05, 9.436099999999767e-05, 9.456899999999921e-05, 9.456899999999921e-05, 9.472200000000194e-05, 9.422300000000092e-05, 9.5027999999997e-05, 9.436099999999767e-05, 9.44729999999977e-05, 9.475000000000108e-05, 9.47079999999989e-05, 9.487499999999774e-05, 9.48330000000025e-05, 9.442999999999951e-05, 9.494500000000253e-05, 9.444399999999908e-05, 9.481899999999946e-05, 9.423599999999754e-05, 9.493000000000001e-05, 9.476400000000065e-05, 9.481999999999893e-05, 9.429199999999929e-05, 9.459800000000129e-05, 9.506999999999918e-05, 9.512500000000146e-05, 9.415200000000012e-05, 9.441699999999942e-05, 9.425000000000058e-05, 9.426400000000015e-05, 9.419399999999883e-05, 9.437499999999724e-05, 9.494400000000305e-05, 9.445800000000212e-05, 9.413900000000003e-05, 9.444499999999856e-05, 9.49720000000022e-05, 9.438900000000028e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.035" endtime="20201117 14:43:08.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.030" endtime="20201117 14:43:08.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.040" endtime="20201117 14:43:08.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.044" endtime="20201117 14:43:08.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.042" endtime="20201117 14:43:08.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.038" endtime="20201117 14:43:08.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.667" endtime="20201117 14:43:08.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.264" endtime="20201117 14:43:08.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.263" endtime="20201117 14:43:08.065"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.067" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.076" endtime="20201117 14:43:08.097"></status>
</kw>
<msg timestamp="20201117 14:43:08.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.074" endtime="20201117 14:43:08.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.098" endtime="20201117 14:43:08.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.101" endtime="20201117 14:43:08.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.071" endtime="20201117 14:43:08.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.069" endtime="20201117 14:43:08.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.110" endtime="20201117 14:43:08.395"></status>
</kw>
<msg timestamp="20201117 14:43:08.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.109" endtime="20201117 14:43:08.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.400" endtime="20201117 14:43:08.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.408" endtime="20201117 14:43:08.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.106" endtime="20201117 14:43:08.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.104" endtime="20201117 14:43:08.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.415" level="INFO">${RESULT} = [{'time': 0.022770139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.591699999999745e-05, 'source_diff': 9.591699999999745e-05}, {'time': 0.022869181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.412" endtime="20201117 14:43:08.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.429" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:08.416" endtime="20201117 14:43:08.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.434" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.433" endtime="20201117 14:43:08.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.436" level="INFO">VALUE: [9.591699999999745e-05, 9.573699999999852e-05, 9.599999999999886e-05, 9.519499999999931e-05, 9.57079999999999e-05, 9.599999999999886e-05, 9.591600000000144e-05, 9.583300000000003e-05, 9.594399999999711e-05, 9.577800000000122e-05, 9.613900000000203e-05, 9.599999999999886e-05, 9.561100000000239e-05, 9.556900000000021e-05, 9.530599999999986e-05, 9.594400000000058e-05, 9.518100000000321e-05, 9.519499999999931e-05, 9.520899999999888e-05, 9.543099999999999e-05, 9.5333999999999e-05, 9.576300000000218e-05, 9.569400000000033e-05, 9.525000000000158e-05, 9.588899999999831e-05, 9.583300000000003e-05, 9.591700000000092e-05, 9.5333000000003e-05, 9.543099999999999e-05, 9.526400000000115e-05, 9.577800000000122e-05, 9.549999999999836e-05, 9.531999999999943e-05, 9.519399999999983e-05, 9.576299999999871e-05, 9.583300000000003e-05, 9.559699999999935e-05, 9.562500000000196e-05, 9.569400000000033e-05, 9.579200000000079e-05, 9.600000000000233e-05, 9.599999999999886e-05, 9.576400000000165e-05, 9.573600000000251e-05, 9.579200000000079e-05, 9.563900000000153e-05, 9.5333999999999e-05, 9.523600000000201e-05, 9.529199999999682e-05, 9.60409999999981e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.435" endtime="20201117 14:43:08.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.430" endtime="20201117 14:43:08.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.440" endtime="20201117 14:43:08.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.443" endtime="20201117 14:43:08.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.442" endtime="20201117 14:43:08.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.438" endtime="20201117 14:43:08.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.068" endtime="20201117 14:43:08.464"></status>
</kw>
<msg timestamp="20201117 14:43:08.464" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.473" endtime="20201117 14:43:08.493"></status>
</kw>
<msg timestamp="20201117 14:43:08.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.471" endtime="20201117 14:43:08.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.495" endtime="20201117 14:43:08.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.497" endtime="20201117 14:43:08.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.469" endtime="20201117 14:43:08.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.467" endtime="20201117 14:43:08.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.508" endtime="20201117 14:43:08.794"></status>
</kw>
<msg timestamp="20201117 14:43:08.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.506" endtime="20201117 14:43:08.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.798" endtime="20201117 14:43:08.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.807" endtime="20201117 14:43:08.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.503" endtime="20201117 14:43:08.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.502" endtime="20201117 14:43:08.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.814" level="INFO">${RESULT} = [{'time': 0.020188611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.577799999999775e-05, 'source_diff': 9.577799999999775e-05}, {'time': 0.020288625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:08.810" endtime="20201117 14:43:08.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.828" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:08.815" endtime="20201117 14:43:08.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.832" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.831" endtime="20201117 14:43:08.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.835" level="INFO">VALUE: [9.577799999999775e-05, 9.537500000000171e-05, 9.607000000000018e-05, 9.611099999999942e-05, 9.545899999999913e-05, 9.613899999999856e-05, 9.549999999999836e-05, 9.580600000000036e-05, 9.595800000000015e-05, 9.57079999999999e-05, 9.561099999999892e-05, 9.583300000000003e-05, 9.543000000000051e-05, 9.550000000000183e-05, 9.566700000000067e-05, 9.576399999999818e-05, 9.577799999999775e-05, 9.607000000000018e-05, 9.579200000000079e-05, 9.56530000000011e-05, 9.545899999999913e-05, 9.569400000000033e-05, 9.515200000000112e-05, 9.540300000000085e-05, 9.543000000000051e-05, 9.568000000000076e-05, 9.524999999999811e-05, 9.561099999999892e-05, 9.601299999999896e-05, 9.606900000000071e-05, 9.550000000000183e-05, 9.519499999999931e-05, 9.562500000000196e-05, 9.527800000000072e-05, 9.574999999999861e-05, 9.607000000000018e-05, 9.594500000000006e-05, 9.531899999999996e-05, 9.569400000000033e-05, 9.519399999999983e-05, 9.588899999999831e-05, 9.561099999999892e-05, 9.613899999999856e-05, 9.519499999999931e-05, 9.550000000000183e-05, 9.512499999999799e-05, 9.554200000000054e-05, 9.524999999999811e-05, 9.59859999999993e-05, 9.583300000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:43:08.833" endtime="20201117 14:43:08.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.828" endtime="20201117 14:43:08.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.843" endtime="20201117 14:43:08.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.846" endtime="20201117 14:43:08.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.845" endtime="20201117 14:43:08.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.841" endtime="20201117 14:43:08.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.465" endtime="20201117 14:43:08.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.066" endtime="20201117 14:43:08.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.065" endtime="20201117 14:43:08.868"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.870" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.879" endtime="20201117 14:43:08.900"></status>
</kw>
<msg timestamp="20201117 14:43:08.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.877" endtime="20201117 14:43:08.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.901" endtime="20201117 14:43:08.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.904" endtime="20201117 14:43:08.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.874" endtime="20201117 14:43:08.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.872" endtime="20201117 14:43:08.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.913" endtime="20201117 14:43:09.200"></status>
</kw>
<msg timestamp="20201117 14:43:09.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023457028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023553889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.912" endtime="20201117 14:43:09.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023457028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023553889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.204" endtime="20201117 14:43:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.212" endtime="20201117 14:43:09.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.909" endtime="20201117 14:43:09.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.907" endtime="20201117 14:43:09.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.219" level="INFO">${RESULT} = [{'time': 0.023553889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.686100000000017e-05, 'source_diff': 9.686100000000017e-05}, {'time': 0.023655875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.216" endtime="20201117 14:43:09.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.234" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:09.220" endtime="20201117 14:43:09.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.239" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.238" endtime="20201117 14:43:09.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.242" level="INFO">VALUE: [9.686100000000017e-05, 9.669400000000133e-05, 9.649999999999936e-05, 9.674999999999961e-05, 9.623599999999954e-05, 9.691700000000192e-05, 9.674999999999961e-05, 9.670899999999691e-05, 9.61669999999977e-05, 9.645800000000065e-05, 9.636099999999967e-05, 9.618100000000074e-05, 9.69860000000003e-05, 9.630500000000139e-05, 9.683299999999756e-05, 9.676400000000265e-05, 9.64729999999997e-05, 9.657000000000068e-05, 9.612500000000246e-05, 9.644500000000056e-05, 9.688900000000278e-05, 9.640300000000185e-05, 9.683300000000103e-05, 9.668100000000124e-05, 9.705500000000214e-05, 9.665299999999863e-05, 9.708300000000128e-05, 9.695800000000115e-05, 9.711100000000042e-05, 9.682000000000093e-05, 9.669500000000081e-05, 9.709800000000032e-05, 9.655600000000111e-05, 9.644400000000108e-05, 9.670900000000038e-05, 9.650000000000283e-05, 9.674999999999961e-05, 9.661099999999992e-05, 9.681899999999799e-05, 9.67080000000009e-05, 9.647200000000022e-05, 9.622199999999997e-05, 9.626399999999868e-05, 9.61669999999977e-05, 9.670900000000038e-05, 9.637499999999924e-05, 9.645900000000013e-05, 9.63470000000001e-05, 9.687499999999974e-05, 9.613900000000203e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.240" endtime="20201117 14:43:09.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.235" endtime="20201117 14:43:09.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.246" endtime="20201117 14:43:09.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.249" endtime="20201117 14:43:09.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.247" endtime="20201117 14:43:09.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.244" endtime="20201117 14:43:09.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.871" endtime="20201117 14:43:09.270"></status>
</kw>
<msg timestamp="20201117 14:43:09.270" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.279" endtime="20201117 14:43:09.300"></status>
</kw>
<msg timestamp="20201117 14:43:09.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.277" endtime="20201117 14:43:09.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.301" endtime="20201117 14:43:09.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.304" endtime="20201117 14:43:09.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.274" endtime="20201117 14:43:09.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.272" endtime="20201117 14:43:09.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.314" endtime="20201117 14:43:09.601"></status>
</kw>
<msg timestamp="20201117 14:43:09.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.313" endtime="20201117 14:43:09.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.605" endtime="20201117 14:43:09.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.614" endtime="20201117 14:43:09.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.310" endtime="20201117 14:43:09.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.308" endtime="20201117 14:43:09.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.621" level="INFO">${RESULT} = [{'time': 0.020126194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.676299999999971e-05, 'source_diff': 9.676299999999971e-05}, {'time': 0.020226208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:09.617" endtime="20201117 14:43:09.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:09.622" endtime="20201117 14:43:09.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.639" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.638" endtime="20201117 14:43:09.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.642" level="INFO">VALUE: [9.676299999999971e-05, 9.62080000000004e-05, 9.683300000000103e-05, 9.650000000000283e-05, 9.638900000000228e-05, 9.674999999999961e-05, 9.638899999999881e-05, 9.695900000000063e-05, 9.615299999999813e-05, 9.668100000000124e-05, 9.709800000000032e-05, 9.658400000000025e-05, 9.668100000000124e-05, 9.655600000000111e-05, 9.669400000000133e-05, 9.629099999999835e-05, 9.709699999999738e-05, 9.706900000000171e-05, 9.631900000000096e-05, 9.645800000000065e-05, 9.636099999999967e-05, 9.65140000000024e-05, 9.619500000000031e-05, 9.657000000000068e-05, 9.673599999999657e-05, 9.668099999999777e-05, 9.670900000000038e-05, 9.654199999999807e-05, 9.633300000000053e-05, 9.636099999999967e-05, 9.612499999999899e-05, 9.712499999999999e-05, 9.687499999999974e-05, 9.683300000000103e-05, 9.663899999999906e-05, 9.626400000000215e-05, 9.711099999999695e-05, 9.638899999999881e-05, 9.622299999999945e-05, 9.663899999999906e-05, 9.694499999999759e-05, 9.651399999999893e-05, 9.630500000000139e-05, 9.67080000000009e-05, 9.662499999999949e-05, 9.713899999999956e-05, 9.640299999999838e-05, 9.633300000000053e-05, 9.668100000000124e-05, 9.674999999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:43:09.641" endtime="20201117 14:43:09.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.636" endtime="20201117 14:43:09.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.645" endtime="20201117 14:43:09.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.649" endtime="20201117 14:43:09.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.647" endtime="20201117 14:43:09.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.644" endtime="20201117 14:43:09.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.271" endtime="20201117 14:43:09.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.869" endtime="20201117 14:43:09.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.868" endtime="20201117 14:43:09.670"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.673" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.681" endtime="20201117 14:43:09.702"></status>
</kw>
<msg timestamp="20201117 14:43:09.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.680" endtime="20201117 14:43:09.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.703" endtime="20201117 14:43:09.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.706" endtime="20201117 14:43:09.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.677" endtime="20201117 14:43:09.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.675" endtime="20201117 14:43:09.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.715" endtime="20201117 14:43:10.001"></status>
</kw>
<msg timestamp="20201117 14:43:10.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.714" endtime="20201117 14:43:10.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.006" endtime="20201117 14:43:10.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.014" endtime="20201117 14:43:10.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.711" endtime="20201117 14:43:10.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.709" endtime="20201117 14:43:10.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.022" level="INFO">${RESULT} = [{'time': 0.022943181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.757000000000168e-05, 'source_diff': 9.757000000000168e-05}, {'time': 0.023044167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.018" endtime="20201117 14:43:10.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:10.023" endtime="20201117 14:43:10.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.040" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.039" endtime="20201117 14:43:10.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.043" level="INFO">VALUE: [9.757000000000168e-05, 9.720900000000088e-05, 9.750000000000036e-05, 9.793100000000249e-05, 9.756900000000221e-05, 9.761200000000039e-05, 9.770799999999843e-05, 9.769399999999887e-05, 9.783299999999856e-05, 9.725000000000011e-05, 9.759700000000135e-05, 9.737500000000024e-05, 9.794399999999912e-05, 9.801400000000043e-05, 9.757000000000168e-05, 9.794499999999859e-05, 9.744499999999809e-05, 9.788900000000031e-05, 9.792999999999955e-05, 9.742999999999905e-05, 9.726399999999968e-05, 9.777799999999975e-05, 9.801400000000043e-05, 9.783399999999803e-05, 9.788900000000031e-05, 9.737500000000024e-05, 9.73059999999984e-05, 9.738899999999981e-05, 9.794500000000206e-05, 9.719500000000131e-05, 9.788800000000084e-05, 9.755500000000264e-05, 9.763800000000059e-05, 9.812500000000099e-05, 9.737500000000024e-05, 9.813900000000056e-05, 9.776400000000018e-05, 9.794499999999859e-05, 9.775000000000061e-05, 9.757000000000168e-05, 9.813900000000056e-05, 9.801399999999696e-05, 9.738899999999981e-05, 9.792999999999955e-05, 9.762500000000049e-05, 9.712499999999999e-05, 9.804199999999957e-05, 9.738899999999981e-05, 9.812500000000099e-05, 9.738899999999981e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.041" endtime="20201117 14:43:10.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.036" endtime="20201117 14:43:10.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.046" endtime="20201117 14:43:10.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.050" endtime="20201117 14:43:10.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.048" endtime="20201117 14:43:10.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.045" endtime="20201117 14:43:10.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.673" endtime="20201117 14:43:10.071"></status>
</kw>
<msg timestamp="20201117 14:43:10.071" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.079" endtime="20201117 14:43:10.100"></status>
</kw>
<msg timestamp="20201117 14:43:10.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.078" endtime="20201117 14:43:10.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.102" endtime="20201117 14:43:10.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.105" endtime="20201117 14:43:10.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.075" endtime="20201117 14:43:10.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.073" endtime="20201117 14:43:10.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.115" endtime="20201117 14:43:10.400"></status>
</kw>
<msg timestamp="20201117 14:43:10.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02011275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:10.113" endtime="20201117 14:43:10.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02011275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:10.404" endtime="20201117 14:43:10.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.413" endtime="20201117 14:43:10.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.111" endtime="20201117 14:43:10.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.109" endtime="20201117 14:43:10.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.420" level="INFO">${RESULT} = [{'time': 0.02011275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777799999999975e-05, 'source_diff': 9.777799999999975e-05}, {'time': 0.020212764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:10.417" endtime="20201117 14:43:10.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:10.421" endtime="20201117 14:43:10.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.439" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.438" endtime="20201117 14:43:10.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.441" level="INFO">VALUE: [9.777799999999975e-05, 9.745800000000165e-05, 9.8028e-05, 9.741699999999895e-05, 9.741699999999895e-05, 9.720900000000088e-05, 9.76799999999993e-05, 9.788800000000084e-05, 9.744400000000208e-05, 9.806900000000271e-05, 9.784699999999813e-05, 9.722200000000097e-05, 9.713899999999956e-05, 9.756900000000221e-05, 9.758299999999831e-05, 9.754199999999907e-05, 9.801400000000043e-05, 9.800000000000086e-05, 9.779199999999932e-05, 9.79860000000013e-05, 9.738899999999981e-05, 9.725000000000011e-05, 9.755500000000264e-05, 9.750000000000036e-05, 9.815300000000013e-05, 9.818099999999927e-05, 9.775000000000061e-05, 9.756899999999874e-05, 9.783299999999856e-05, 9.745799999999818e-05, 9.738899999999981e-05, 9.805599999999914e-05, 9.730600000000186e-05, 9.750000000000036e-05, 9.74019999999999e-05, 9.756899999999874e-05, 9.731900000000196e-05, 9.792999999999955e-05, 9.769399999999887e-05, 9.798599999999782e-05, 9.713899999999956e-05, 9.727799999999925e-05, 9.727799999999925e-05, 9.797299999999773e-05, 9.725000000000011e-05, 9.776400000000018e-05, 9.738899999999981e-05, 9.794399999999912e-05, 9.812500000000099e-05, 9.800000000000086e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.440" endtime="20201117 14:43:10.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.435" endtime="20201117 14:43:10.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.445" endtime="20201117 14:43:10.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.448" endtime="20201117 14:43:10.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.447" endtime="20201117 14:43:10.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.443" endtime="20201117 14:43:10.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.071" endtime="20201117 14:43:10.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.671" endtime="20201117 14:43:10.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.671" endtime="20201117 14:43:10.469"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.472" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.481" endtime="20201117 14:43:10.502"></status>
</kw>
<msg timestamp="20201117 14:43:10.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.479" endtime="20201117 14:43:10.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.504" endtime="20201117 14:43:10.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.506" endtime="20201117 14:43:10.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.476" endtime="20201117 14:43:10.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.474" endtime="20201117 14:43:10.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.516" endtime="20201117 14:43:10.801"></status>
</kw>
<msg timestamp="20201117 14:43:10.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023744042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023843069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.514" endtime="20201117 14:43:10.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023744042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023843069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.806" endtime="20201117 14:43:10.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.815" endtime="20201117 14:43:10.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.511" endtime="20201117 14:43:10.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.509" endtime="20201117 14:43:10.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.822" level="INFO">${RESULT} = [{'time': 0.023843069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902700000000153e-05, 'source_diff': 9.902700000000153e-05}, {'time': 0.023947056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:10.818" endtime="20201117 14:43:10.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.837" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:10.823" endtime="20201117 14:43:10.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.842" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.840" endtime="20201117 14:43:10.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.844" level="INFO">VALUE: [9.902700000000153e-05, 9.844500000000256e-05, 9.88609999999987e-05, 9.858399999999878e-05, 9.883299999999956e-05, 9.893000000000055e-05, 9.837499999999777e-05, 9.826399999999721e-05, 9.841699999999995e-05, 9.893100000000002e-05, 9.894500000000306e-05, 9.900000000000186e-05, 9.894500000000306e-05, 9.83470000000021e-05, 9.830600000000286e-05, 9.813800000000109e-05, 9.909699999999938e-05, 9.8721999999999e-05, 9.863900000000106e-05, 9.891600000000098e-05, 9.831899999999949e-05, 9.873699999999805e-05, 9.838900000000081e-05, 9.900000000000186e-05, 9.904200000000057e-05, 9.819499999999884e-05, 9.86670000000002e-05, 9.815200000000066e-05, 9.852799999999703e-05, 9.851400000000093e-05, 9.81669999999997e-05, 9.844500000000256e-05, 9.877800000000075e-05, 9.834699999999863e-05, 9.893000000000055e-05, 9.908400000000275e-05, 9.906900000000024e-05, 9.815300000000013e-05, 9.83059999999994e-05, 9.851400000000093e-05, 9.905600000000014e-05, 9.847199999999875e-05, 9.855500000000017e-05, 9.881899999999999e-05, 9.838900000000081e-05, 9.840300000000038e-05, 9.858300000000278e-05, 9.818099999999927e-05, 9.87080000000029e-05, 9.868100000000324e-05]</msg>
<status status="PASS" starttime="20201117 14:43:10.843" endtime="20201117 14:43:10.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.838" endtime="20201117 14:43:10.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.847" endtime="20201117 14:43:10.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.851" endtime="20201117 14:43:10.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.849" endtime="20201117 14:43:10.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.846" endtime="20201117 14:43:10.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.473" endtime="20201117 14:43:10.872"></status>
</kw>
<msg timestamp="20201117 14:43:10.872" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.881" endtime="20201117 14:43:10.901"></status>
</kw>
<msg timestamp="20201117 14:43:10.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.879" endtime="20201117 14:43:10.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.903" endtime="20201117 14:43:10.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.906" endtime="20201117 14:43:10.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.876" endtime="20201117 14:43:10.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.874" endtime="20201117 14:43:10.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.916" endtime="20201117 14:43:11.202"></status>
</kw>
<msg timestamp="20201117 14:43:11.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020143861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.915" endtime="20201117 14:43:11.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020143861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.206" endtime="20201117 14:43:11.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.215" endtime="20201117 14:43:11.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.912" endtime="20201117 14:43:11.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.910" endtime="20201117 14:43:11.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.222" level="INFO">${RESULT} = [{'time': 0.020143861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888899999999784e-05, 'source_diff': 9.888899999999784e-05}, {'time': 0.020246861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.219" endtime="20201117 14:43:11.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:11.223" endtime="20201117 14:43:11.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.240" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.239" endtime="20201117 14:43:11.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.243" level="INFO">VALUE: [9.888899999999784e-05, 9.833300000000253e-05, 9.863899999999759e-05, 9.855599999999964e-05, 9.844499999999909e-05, 9.908399999999928e-05, 9.870900000000238e-05, 9.897199999999926e-05, 9.838900000000081e-05, 9.833299999999906e-05, 9.855500000000017e-05, 9.822200000000197e-05, 9.825000000000111e-05, 9.809700000000185e-05, 9.834699999999863e-05, 9.847200000000222e-05, 9.875000000000161e-05, 9.876400000000118e-05, 9.881999999999946e-05, 9.819500000000231e-05, 9.886100000000217e-05, 9.872299999999848e-05, 9.856999999999921e-05, 9.840199999999744e-05, 9.855500000000017e-05, 9.820799999999894e-05, 9.847199999999875e-05, 9.819399999999937e-05, 9.873599999999857e-05, 9.881999999999946e-05, 9.819500000000231e-05, 9.827799999999678e-05, 9.909699999999938e-05, 9.873599999999857e-05, 9.844500000000256e-05, 9.890199999999794e-05, 9.883300000000303e-05, 9.861099999999845e-05, 9.830499999999992e-05, 9.85280000000005e-05, 9.837499999999777e-05, 9.845799999999919e-05, 9.890300000000088e-05, 9.844499999999909e-05, 9.820900000000188e-05, 9.855600000000311e-05, 9.863900000000106e-05, 9.855599999999964e-05, 9.870799999999944e-05, 9.844399999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.242" endtime="20201117 14:43:11.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.237" endtime="20201117 14:43:11.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.247" endtime="20201117 14:43:11.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.250" endtime="20201117 14:43:11.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.248" endtime="20201117 14:43:11.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.245" endtime="20201117 14:43:11.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.873" endtime="20201117 14:43:11.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.471" endtime="20201117 14:43:11.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.470" endtime="20201117 14:43:11.271"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.274" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.283" endtime="20201117 14:43:11.304"></status>
</kw>
<msg timestamp="20201117 14:43:11.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.281" endtime="20201117 14:43:11.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.305" endtime="20201117 14:43:11.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.308" endtime="20201117 14:43:11.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.278" endtime="20201117 14:43:11.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.276" endtime="20201117 14:43:11.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.317" endtime="20201117 14:43:11.604"></status>
</kw>
<msg timestamp="20201117 14:43:11.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023248319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.316" endtime="20201117 14:43:11.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023248319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.608" endtime="20201117 14:43:11.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.617" endtime="20201117 14:43:11.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.313" endtime="20201117 14:43:11.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.311" endtime="20201117 14:43:11.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.624" level="INFO">${RESULT} = [{'time': 0.023248319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.943000000000105e-05, 'source_diff': 9.943000000000105e-05}, {'time': 0.023352319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.620" endtime="20201117 14:43:11.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.637" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:11.625" endtime="20201117 14:43:11.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.642" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.641" endtime="20201117 14:43:11.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.645" level="INFO">VALUE: [9.943000000000105e-05, 9.926299999999874e-05, 9.937499999999877e-05, 0.00010005600000000114, 9.983300000000056e-05, 9.959699999999988e-05, 9.977799999999828e-05, 9.990299999999841e-05, 9.924999999999864e-05, 9.968100000000077e-05, 9.969400000000087e-05, 9.974999999999914e-05, 9.974999999999914e-05, 9.938800000000234e-05, 9.917999999999733e-05, 9.924999999999864e-05, 9.912499999999852e-05, 9.963899999999859e-05, 9.944400000000062e-05, 9.919400000000037e-05, 9.990299999999841e-05, 9.924999999999864e-05, 9.940300000000138e-05, 9.958399999999978e-05, 9.982000000000046e-05, 9.931999999999996e-05, 9.920799999999994e-05, 0.0001000419999999981, 9.94020000000019e-05, 0.00010002799999999853, 9.951399999999846e-05, 9.919400000000037e-05, 9.931900000000049e-05, 9.963899999999859e-05, 9.969500000000034e-05, 9.970899999999991e-05, 0.00010007000000000071, 0.00010012499999999952, 9.950000000000236e-05, 9.997200000000026e-05, 9.998599999999983e-05, 9.93609999999992e-05, 0.00010009700000000038, 9.952799999999803e-05, 9.991700000000145e-05, 9.933300000000006e-05, 9.980500000000142e-05, 9.983300000000056e-05, 9.924999999999864e-05, 9.912499999999852e-05]</msg>
<status status="PASS" starttime="20201117 14:43:11.643" endtime="20201117 14:43:11.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.638" endtime="20201117 14:43:11.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.648" endtime="20201117 14:43:11.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.652" endtime="20201117 14:43:11.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.650" endtime="20201117 14:43:11.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.646" endtime="20201117 14:43:11.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.274" endtime="20201117 14:43:11.673"></status>
</kw>
<msg timestamp="20201117 14:43:11.673" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.682" endtime="20201117 14:43:11.703"></status>
</kw>
<msg timestamp="20201117 14:43:11.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.680" endtime="20201117 14:43:11.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.704" endtime="20201117 14:43:11.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.707" endtime="20201117 14:43:11.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.678" endtime="20201117 14:43:11.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.675" endtime="20201117 14:43:11.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.717" endtime="20201117 14:43:12.002"></status>
</kw>
<msg timestamp="20201117 14:43:12.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020770306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:11.716" endtime="20201117 14:43:12.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020770306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:12.006" endtime="20201117 14:43:12.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.015" endtime="20201117 14:43:12.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.713" endtime="20201117 14:43:12.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.711" endtime="20201117 14:43:12.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.022" level="INFO">${RESULT} = [{'time': 0.020770306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.980599999999742e-05, 'source_diff': 9.980599999999742e-05}, {'time': 0.020873236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:12.018" endtime="20201117 14:43:12.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:12.023" endtime="20201117 14:43:12.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.040" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.039" endtime="20201117 14:43:12.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.043" level="INFO">VALUE: [9.980599999999742e-05, 9.998599999999983e-05, 9.927799999999778e-05, 9.93060000000004e-05, 9.919499999999984e-05, 9.961099999999945e-05, 9.995900000000016e-05, 9.98479999999996e-05, 9.968100000000077e-05, 9.966600000000173e-05, 9.981900000000099e-05, 9.929199999999735e-05, 0.00010013899999999909, 0.00010013899999999909, 0.00010005500000000167, 9.99999999999994e-05, 9.938900000000181e-05, 9.974999999999914e-05, 9.92219999999995e-05, 9.957000000000021e-05, 9.962499999999902e-05, 0.0001000419999999981, 9.915200000000166e-05, 9.984700000000013e-05, 9.969400000000087e-05, 9.995800000000069e-05, 9.998599999999983e-05, 9.940300000000138e-05, 0.00010007000000000071, 9.982000000000046e-05, 9.997200000000026e-05, 9.969500000000034e-05, 9.951400000000193e-05, 9.959799999999935e-05, 9.994500000000059e-05, 9.981900000000099e-05, 0.00010006900000000124, 9.945799999999672e-05, 9.951400000000193e-05, 9.923599999999907e-05, 9.94999999999989e-05, 9.93609999999992e-05, 9.913899999999809e-05, 9.926399999999821e-05, 9.931900000000049e-05, 9.945899999999966e-05, 9.936100000000267e-05, 9.976299999999924e-05, 9.924999999999864e-05, 9.947199999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:43:12.041" endtime="20201117 14:43:12.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.037" endtime="20201117 14:43:12.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.047" endtime="20201117 14:43:12.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.050" endtime="20201117 14:43:12.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.049" endtime="20201117 14:43:12.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.045" endtime="20201117 14:43:12.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.674" endtime="20201117 14:43:12.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.273" endtime="20201117 14:43:12.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.272" endtime="20201117 14:43:12.071"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.074" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.082" endtime="20201117 14:43:12.104"></status>
</kw>
<msg timestamp="20201117 14:43:12.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.081" endtime="20201117 14:43:12.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.106" endtime="20201117 14:43:12.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.108" endtime="20201117 14:43:12.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.078" endtime="20201117 14:43:12.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.076" endtime="20201117 14:43:12.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.118" endtime="20201117 14:43:12.404"></status>
</kw>
<msg timestamp="20201117 14:43:12.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023525333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.116" endtime="20201117 14:43:12.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023525333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.408" endtime="20201117 14:43:12.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.416" endtime="20201117 14:43:12.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.114" endtime="20201117 14:43:12.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.112" endtime="20201117 14:43:12.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.423" level="INFO">${RESULT} = [{'time': 0.023626514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010118100000000227, 'source_diff': 0.00010118100000000227}, {'time': 0.023731542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:12.420" endtime="20201117 14:43:12.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:12.424" endtime="20201117 14:43:12.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.443" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.442" endtime="20201117 14:43:12.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.445" level="INFO">VALUE: [0.00010118100000000227, 0.00010109800000000085, 0.00010062500000000002, 0.00010048600000000033, 0.00010075000000000014, 0.00010031899999999802, 0.00010091700000000245, 0.00010022199999999704, 0.00010099999999999693, 0.00010024999999999964, 0.00010026399999999921, 0.00010037499999999977, 0.00010040299999999891, 0.000100722000000001, 0.00010037499999999977, 0.00010051400000000293, 0.00010112500000000052, 0.00010062500000000002, 0.00010045799999999772, 0.00010101399999999996, 0.00010059699999999741, 0.00010106899999999877, 0.00010095799999999822, 0.00010042999999999858, 0.00010112500000000052, 0.00010113899999999662, 0.00010070800000000144, 0.00010094499999999812, 0.00010094499999999812, 0.00010020900000000041, 0.00010102700000000006, 0.00010093099999999855, 0.00010051399999999946, 0.00010083300000000156, 0.00010070799999999797, 0.00010086099999999723, 0.00010041700000000195, 0.00010026399999999921, 0.00010063900000000306, 0.0001003610000000002, 0.00010056999999999774, 0.00010091699999999898, 0.00010061100000000045, 0.00010045899999999719, 0.00010016600000000223, 0.00010061100000000045, 0.00010069400000000187, 0.00010070799999999797, 0.00010075000000000014, 0.00010020800000000094]</msg>
<status status="PASS" starttime="20201117 14:43:12.444" endtime="20201117 14:43:12.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.439" endtime="20201117 14:43:12.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.449" endtime="20201117 14:43:12.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.453" endtime="20201117 14:43:12.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.451" endtime="20201117 14:43:12.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.447" endtime="20201117 14:43:12.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.075" endtime="20201117 14:43:12.474"></status>
</kw>
<msg timestamp="20201117 14:43:12.474" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.482" endtime="20201117 14:43:12.503"></status>
</kw>
<msg timestamp="20201117 14:43:12.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.481" endtime="20201117 14:43:12.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.505" endtime="20201117 14:43:12.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.507" endtime="20201117 14:43:12.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.478" endtime="20201117 14:43:12.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.476" endtime="20201117 14:43:12.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.518" endtime="20201117 14:43:12.804"></status>
</kw>
<msg timestamp="20201117 14:43:12.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.516" endtime="20201117 14:43:12.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.808" endtime="20201117 14:43:12.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.816" endtime="20201117 14:43:12.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.513" endtime="20201117 14:43:12.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.512" endtime="20201117 14:43:12.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.823" level="INFO">${RESULT} = [{'time': 0.020152986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010030500000000192, 'source_diff': 0.00010030500000000192}, {'time': 0.020255958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:12.820" endtime="20201117 14:43:12.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.837" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:12.824" endtime="20201117 14:43:12.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.842" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.841" endtime="20201117 14:43:12.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.844" level="INFO">VALUE: [0.00010030500000000192, 0.0001003610000000002, 0.00010033300000000106, 0.0001001670000000017, 0.0001010000000000004, 0.00010033299999999759, 0.00010090300000000288, 0.00010063899999999959, 0.00010105599999999867, 0.00010037499999999977, 0.00010026400000000268, 0.00010055600000000164, 0.00010045800000000119, 0.00010070799999999797, 0.00010015299999999866, 0.00010093000000000255, 0.00010042999999999858, 0.00010037499999999977, 0.00010062500000000002, 0.00010013899999999909, 0.00010058400000000078, 0.00010045899999999719, 0.0001004020000000029, 0.00010108300000000181, 0.00010044400000000162, 0.00010037500000000324, 0.00010076399999999971, 0.00010099999999999693, 0.00010087500000000027, 0.00010051399999999946, 0.00010101399999999996, 0.00010056900000000174, 0.0001008480000000006, 0.00010083400000000103, 0.00010108399999999781, 0.00010044500000000109, 0.0001004869999999998, 0.00010040299999999891, 0.00010070799999999797, 0.0001010549999999992, 0.00010083299999999809, 0.00010023600000000008, 0.00010058299999999784, 0.00010024999999999964, 0.00010091699999999898, 0.00010111099999999748, 0.00010101399999999996, 0.00010044499999999762, 0.00010029199999999835, 0.00010075000000000014]</msg>
<status status="PASS" starttime="20201117 14:43:12.843" endtime="20201117 14:43:12.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.838" endtime="20201117 14:43:12.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.848" endtime="20201117 14:43:12.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.852" endtime="20201117 14:43:12.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.850" endtime="20201117 14:43:12.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.846" endtime="20201117 14:43:12.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.475" endtime="20201117 14:43:12.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.073" endtime="20201117 14:43:12.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.072" endtime="20201117 14:43:12.873"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.875" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.884" endtime="20201117 14:43:12.905"></status>
</kw>
<msg timestamp="20201117 14:43:12.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.882" endtime="20201117 14:43:12.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.906" endtime="20201117 14:43:12.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.909" endtime="20201117 14:43:12.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.880" endtime="20201117 14:43:12.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.878" endtime="20201117 14:43:12.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.918" endtime="20201117 14:43:13.204"></status>
</kw>
<msg timestamp="20201117 14:43:13.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.917" endtime="20201117 14:43:13.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.208" endtime="20201117 14:43:13.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.217" endtime="20201117 14:43:13.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.914" endtime="20201117 14:43:13.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.912" endtime="20201117 14:43:13.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.224" level="INFO">${RESULT} = [{'time': 0.022895486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010193000000000008, 'source_diff': 0.00010193000000000008}, {'time': 0.022999486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:13.220" endtime="20201117 14:43:13.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.237" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:13.225" endtime="20201117 14:43:13.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.242" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.241" endtime="20201117 14:43:13.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.245" level="INFO">VALUE: [0.00010193000000000008, 0.00010167999999999983, 0.00010170799999999897, 0.00010120900000000141, 0.00010161100000000145, 0.00010158399999999831, 0.00010143099999999905, 0.00010112500000000052, 0.00010126400000000021, 0.00010161200000000092, 0.00010211100000000195, 0.00010112500000000052, 0.00010188899999999737, 0.00010158299999999884, 0.00010194399999999965, 0.00010124999999999718, 0.00010190300000000041, 0.00010119400000000237, 0.00010166699999999973, 0.00010215300000000066, 0.00010202700000000106, 0.00010119499999999837, 0.00010204100000000063, 0.00010195799999999922, 0.00010117999999999933, 0.00010206899999999977, 0.00010181899999999952, 0.00010201400000000097, 0.00010134699999999816, 0.00010176399999999725, 0.00010206999999999924, 0.00010156999999999874, 0.00010201400000000097, 0.00010158400000000178, 0.00010206999999999924, 0.00010151300000000099, 0.00010152800000000003, 0.0001015419999999996, 0.00010213900000000109, 0.00010179100000000038, 0.00010202800000000053, 0.00010126400000000021, 0.00010177800000000028, 0.00010141699999999948, 0.00010201400000000097, 0.00010155599999999917, 0.00010165300000000016, 0.0001020000000000014, 0.00010213800000000162, 0.00010113900000000009]</msg>
<status status="PASS" starttime="20201117 14:43:13.243" endtime="20201117 14:43:13.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.238" endtime="20201117 14:43:13.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.248" endtime="20201117 14:43:13.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.252" endtime="20201117 14:43:13.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.250" endtime="20201117 14:43:13.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.246" endtime="20201117 14:43:13.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.876" endtime="20201117 14:43:13.273"></status>
</kw>
<msg timestamp="20201117 14:43:13.273" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.281" endtime="20201117 14:43:13.303"></status>
</kw>
<msg timestamp="20201117 14:43:13.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.280" endtime="20201117 14:43:13.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.304" endtime="20201117 14:43:13.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.307" endtime="20201117 14:43:13.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.277" endtime="20201117 14:43:13.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.275" endtime="20201117 14:43:13.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.317" endtime="20201117 14:43:13.602"></status>
</kw>
<msg timestamp="20201117 14:43:13.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.315" endtime="20201117 14:43:13.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.606" endtime="20201117 14:43:13.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.615" endtime="20201117 14:43:13.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.313" endtime="20201117 14:43:13.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.311" endtime="20201117 14:43:13.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.622" level="INFO">${RESULT} = [{'time': 0.020103875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010211100000000195, 'source_diff': 0.00010211100000000195}, {'time': 0.020209889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:13.618" endtime="20201117 14:43:13.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.635" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:13.623" endtime="20201117 14:43:13.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.640" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.639" endtime="20201117 14:43:13.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.643" level="INFO">VALUE: [0.00010211100000000195, 0.00010125000000000065, 0.0001015419999999996, 0.00010194499999999912, 0.0001015000000000009, 0.00010205599999999967, 0.00010163800000000112, 0.00010163799999999765, 0.00010155500000000317, 0.00010190300000000041, 0.00010176400000000071, 0.00010130599999999892, 0.00010186099999999823, 0.00010130599999999892, 0.00010176400000000071, 0.0001016809999999993, 0.00010152800000000003, 0.00010172199999999854, 0.00010181899999999952, 0.00010122299999999751, 0.00010144499999999862, 0.00010181899999999952, 0.00010187500000000127, 0.00010173700000000105, 0.00010172199999999854, 0.0001011939999999989, 0.00010151400000000046, 0.00010119500000000184, 0.00010162499999999755, 0.00010144500000000209, 0.00010213900000000109, 0.00010133299999999859, 0.00010206899999999977, 0.00010206899999999977, 0.000101513999999997, 0.00010120799999999847, 0.00010206899999999977, 0.00010137500000000077, 0.00010169499999999887, 0.00010156999999999874, 0.000101819999999999, 0.00010166699999999973, 0.00010120900000000141, 0.00010119500000000184, 0.0001020420000000001, 0.00010158299999999884, 0.00010187500000000127, 0.00010212500000000152, 0.0001015549999999997, 0.00010184699999999866]</msg>
<status status="PASS" starttime="20201117 14:43:13.641" endtime="20201117 14:43:13.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.637" endtime="20201117 14:43:13.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.646" endtime="20201117 14:43:13.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.650" endtime="20201117 14:43:13.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.648" endtime="20201117 14:43:13.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.644" endtime="20201117 14:43:13.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.274" endtime="20201117 14:43:13.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.874" endtime="20201117 14:43:13.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.873" endtime="20201117 14:43:13.671"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.674" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.682" endtime="20201117 14:43:13.704"></status>
</kw>
<msg timestamp="20201117 14:43:13.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.681" endtime="20201117 14:43:13.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.706" endtime="20201117 14:43:13.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.708" endtime="20201117 14:43:13.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.678" endtime="20201117 14:43:13.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.676" endtime="20201117 14:43:13.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.718" endtime="20201117 14:43:14.004"></status>
</kw>
<msg timestamp="20201117 14:43:14.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023722014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.716" endtime="20201117 14:43:14.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023722014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.008" endtime="20201117 14:43:14.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.016" endtime="20201117 14:43:14.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.713" endtime="20201117 14:43:14.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.712" endtime="20201117 14:43:14.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.028" level="INFO">${RESULT} = [{'time': 0.023824458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010244400000000015, 'source_diff': 0.00010244400000000015}, {'time': 0.023930472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:14.024" endtime="20201117 14:43:14.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:14.029" endtime="20201117 14:43:14.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.047" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.046" endtime="20201117 14:43:14.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.050" level="INFO">VALUE: [0.00010244400000000015, 0.00010258299999999984, 0.00010306900000000077, 0.00010293000000000108, 0.00010244400000000015, 0.00010238900000000134, 0.00010256900000000027, 0.00010262499999999855, 0.00010219499999999937, 0.00010307000000000024, 0.00010307000000000024, 0.00010281900000000052, 0.00010231900000000002, 0.00010277800000000128, 0.00010283300000000009, 0.0001022359999999986, 0.0001027359999999991, 0.00010230500000000045, 0.00010295800000000022, 0.00010256999999999974, 0.00010263899999999812, 0.00010259699999999941, 0.00010302800000000154, 0.00010237500000000177, 0.00010226300000000174, 0.00010256999999999974, 0.0001021939999999999, 0.00010238900000000134, 0.00010276400000000172, 0.00010256900000000027, 0.00010240300000000091, 0.00010311099999999948, 0.00010244499999999962, 0.00010263900000000159, 0.00010282, 0.00010244499999999962, 0.0001026810000000003, 0.00010262500000000202, 0.00010220799999999947, 0.00010218000000000033, 0.0001025420000000006, 0.00010306900000000077, 0.00010245800000000319, 0.00010240300000000091, 0.00010240300000000091, 0.0001030139999999985, 0.00010252800000000103, 0.00010227800000000078, 0.00010226400000000122, 0.00010308399999999981]</msg>
<status status="PASS" starttime="20201117 14:43:14.048" endtime="20201117 14:43:14.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.043" endtime="20201117 14:43:14.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.053" endtime="20201117 14:43:14.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.057" endtime="20201117 14:43:14.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.055" endtime="20201117 14:43:14.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.051" endtime="20201117 14:43:14.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.674" endtime="20201117 14:43:14.077"></status>
</kw>
<msg timestamp="20201117 14:43:14.078" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.086" endtime="20201117 14:43:14.107"></status>
</kw>
<msg timestamp="20201117 14:43:14.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.084" endtime="20201117 14:43:14.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.108" endtime="20201117 14:43:14.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.111" endtime="20201117 14:43:14.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.082" endtime="20201117 14:43:14.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.080" endtime="20201117 14:43:14.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.121" endtime="20201117 14:43:14.406"></status>
</kw>
<msg timestamp="20201117 14:43:14.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.120" endtime="20201117 14:43:14.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.410" endtime="20201117 14:43:14.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.419" endtime="20201117 14:43:14.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.117" endtime="20201117 14:43:14.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.115" endtime="20201117 14:43:14.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.426" level="INFO">${RESULT} = [{'time': 0.020203944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010277700000000181, 'source_diff': 0.00010277700000000181}, {'time': 0.020310972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:14.423" endtime="20201117 14:43:14.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.444" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:14.427" endtime="20201117 14:43:14.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.449" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.447" endtime="20201117 14:43:14.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.451" level="INFO">VALUE: [0.00010277700000000181, 0.0001022359999999986, 0.00010215199999999772, 0.00010309699999999991, 0.00010230499999999698, 0.00010262499999999855, 0.00010276400000000172, 0.00010294400000000065, 0.00010244499999999962, 0.00010301400000000197, 0.00010282, 0.00010226400000000122, 0.00010215299999999719, 0.0001023749999999983, 0.00010244400000000015, 0.00010254100000000113, 0.00010227799999999732, 0.0001030000000000024, 0.00010244400000000015, 0.00010301400000000197, 0.0001028749999999988, 0.00010276399999999825, 0.00010252800000000103, 0.0001021809999999998, 0.0001023749999999983, 0.00010256999999999974, 0.00010222199999999904, 0.00010311099999999948, 0.00010229199999999689, 0.0001028749999999988, 0.00010240300000000091, 0.00010272199999999954, 0.00010230599999999992, 0.00010298599999999936, 0.00010215299999999719, 0.0001021809999999998, 0.00010291700000000098, 0.00010312500000000252, 0.00010224999999999818, 0.00010309699999999991, 0.00010311099999999948, 0.00010220799999999947, 0.00010218000000000033, 0.00010258299999999984, 0.00010237500000000177, 0.0001025550000000007, 0.00010270799999999997, 0.0001025550000000007, 0.00010288899999999837, 0.00010269499999999987]</msg>
<status status="PASS" starttime="20201117 14:43:14.450" endtime="20201117 14:43:14.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.445" endtime="20201117 14:43:14.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.455" endtime="20201117 14:43:14.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.458" endtime="20201117 14:43:14.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.457" endtime="20201117 14:43:14.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.453" endtime="20201117 14:43:14.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.078" endtime="20201117 14:43:14.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.672" endtime="20201117 14:43:14.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.671" endtime="20201117 14:43:14.479"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.482" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.490" endtime="20201117 14:43:14.511"></status>
</kw>
<msg timestamp="20201117 14:43:14.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.489" endtime="20201117 14:43:14.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.513" endtime="20201117 14:43:14.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.515" endtime="20201117 14:43:14.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.486" endtime="20201117 14:43:14.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.484" endtime="20201117 14:43:14.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.525" endtime="20201117 14:43:14.810"></status>
</kw>
<msg timestamp="20201117 14:43:14.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.523" endtime="20201117 14:43:14.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.815" endtime="20201117 14:43:14.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.825" endtime="20201117 14:43:14.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.521" endtime="20201117 14:43:14.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.519" endtime="20201117 14:43:14.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.835" level="INFO">${RESULT} = [{'time': 0.022781736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010343000000000158, 'source_diff': 0.00010343000000000158}, {'time': 0.02288775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:43:14.830" endtime="20201117 14:43:14.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.849" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:14.836" endtime="20201117 14:43:14.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.854" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.853" endtime="20201117 14:43:14.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.857" level="INFO">VALUE: [0.00010343000000000158, 0.00010338899999999887, 0.00010355600000000117, 0.00010386100000000023, 0.00010343100000000105, 0.00010388899999999937, 0.00010344500000000062, 0.00010326400000000222, 0.00010324999999999918, 0.00010352700000000256, 0.00010377799999999882, 0.00010331900000000102, 0.00010352799999999857, 0.00010349999999999943, 0.00010316699999999776, 0.000103820000000001, 0.00010365299999999869, 0.00010398599999999689, 0.00010404199999999864, 0.00010372200000000054, 0.00010355600000000117, 0.00010326299999999927, 0.00010381900000000152, 0.0001031940000000009, 0.00010377800000000229, 0.00010309699999999991, 0.00010395799999999775, 0.00010342999999999811, 0.00010330499999999798, 0.00010377800000000229, 0.000103513999999999, 0.00010397200000000079, 0.0001033200000000005, 0.00010358300000000084, 0.00010394399999999818, 0.0001036940000000014, 0.00010359699999999694, 0.0001040139999999995, 0.00010415300000000266, 0.00010397199999999732, 0.00010349999999999943, 0.00010336099999999973, 0.00010394500000000112, 0.00010357000000000074, 0.00010340199999999897, 0.00010377799999999882, 0.00010348599999999986, 0.00010331900000000102, 0.00010398599999999689, 0.00010345800000000072]</msg>
<status status="PASS" starttime="20201117 14:43:14.855" endtime="20201117 14:43:14.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.850" endtime="20201117 14:43:14.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.860" endtime="20201117 14:43:14.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.864" endtime="20201117 14:43:14.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.863" endtime="20201117 14:43:14.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.858" endtime="20201117 14:43:14.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.483" endtime="20201117 14:43:14.885"></status>
</kw>
<msg timestamp="20201117 14:43:14.886" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.894" endtime="20201117 14:43:14.915"></status>
</kw>
<msg timestamp="20201117 14:43:14.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.893" endtime="20201117 14:43:14.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.916" endtime="20201117 14:43:14.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.920" endtime="20201117 14:43:14.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.890" endtime="20201117 14:43:14.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.888" endtime="20201117 14:43:14.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.930" endtime="20201117 14:43:15.217"></status>
</kw>
<msg timestamp="20201117 14:43:15.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.929" endtime="20201117 14:43:15.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.222" endtime="20201117 14:43:15.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.230" endtime="20201117 14:43:15.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.926" endtime="20201117 14:43:15.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.924" endtime="20201117 14:43:15.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.237" level="INFO">${RESULT} = [{'time': 0.020433931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001033749999999993, 'source_diff': 0.0001033749999999993}, {'time': 0.020543972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:15.234" endtime="20201117 14:43:15.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.251" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:15.238" endtime="20201117 14:43:15.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.255" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.254" endtime="20201117 14:43:15.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.258" level="INFO">VALUE: [0.0001033749999999993, 0.00010404099999999916, 0.00010368099999999783, 0.00010325000000000265, 0.00010351400000000247, 0.000103513999999999, 0.00010392999999999861, 0.00010377799999999882, 0.00010355600000000117, 0.00010377799999999882, 0.00010377799999999882, 0.00010337500000000277, 0.00010384700000000066, 0.00010340299999999844, 0.00010313799999999915, 0.00010376399999999925, 0.00010399999999999993, 0.00010367999999999836, 0.00010312499999999905, 0.00010376399999999925, 0.00010399999999999993, 0.00010370800000000097, 0.00010376399999999925, 0.00010409700000000091, 0.0001033200000000005, 0.00010342999999999811, 0.00010411199999999995, 0.00010422199999999757, 0.00010334700000000016, 0.00010379199999999839, 0.00010379099999999891, 0.0001032359999999996, 0.0001037360000000001, 0.00010354199999999814, 0.00010377799999999882, 0.00010381999999999753, 0.00010390299999999894, 0.00010386100000000023, 0.00010325000000000265, 0.00010347200000000029, 0.00010390199999999947, 0.00010394500000000112, 0.00010404099999999916, 0.0001037360000000001, 0.00010361099999999998, 0.00010406900000000177, 0.00010338899999999887, 0.00010344500000000062, 0.00010307000000000024, 0.00010352800000000204]</msg>
<status status="PASS" starttime="20201117 14:43:15.256" endtime="20201117 14:43:15.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.251" endtime="20201117 14:43:15.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.261" endtime="20201117 14:43:15.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.265" endtime="20201117 14:43:15.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.263" endtime="20201117 14:43:15.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.259" endtime="20201117 14:43:15.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.886" endtime="20201117 14:43:15.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.481" endtime="20201117 14:43:15.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.480" endtime="20201117 14:43:15.286"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.288" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.297" endtime="20201117 14:43:15.319"></status>
</kw>
<msg timestamp="20201117 14:43:15.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.296" endtime="20201117 14:43:15.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.320" endtime="20201117 14:43:15.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.323" endtime="20201117 14:43:15.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.293" endtime="20201117 14:43:15.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.290" endtime="20201117 14:43:15.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.333" endtime="20201117 14:43:15.619"></status>
</kw>
<msg timestamp="20201117 14:43:15.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.331" endtime="20201117 14:43:15.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024068458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.623" endtime="20201117 14:43:15.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.632" endtime="20201117 14:43:15.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.328" endtime="20201117 14:43:15.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.327" endtime="20201117 14:43:15.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.638" level="INFO">${RESULT} = [{'time': 0.024172833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001043750000000003, 'source_diff': 0.0001043750000000003}, {'time': 0.024281861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:15.635" endtime="20201117 14:43:15.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.653" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:15.639" endtime="20201117 14:43:15.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.658" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.657" endtime="20201117 14:43:15.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.661" level="INFO">VALUE: [0.0001043750000000003, 0.00010490299999999994, 0.00010469399999999893, 0.00010477799999999982, 0.0001047360000000011, 0.00010452799999999957, 0.0001043750000000003, 0.00010500000000000093, 0.00010480599999999896, 0.00010490200000000047, 0.00010506900000000277, 0.00010411100000000048, 0.00010487499999999733, 0.0001050140000000005, 0.00010488900000000037, 0.00010511100000000148, 0.00010416700000000223, 0.00010500000000000093, 0.00010444500000000162, 0.00010426400000000322, 0.00010457000000000174, 0.0001050140000000005, 0.00010451300000000052, 0.00010483300000000209, 0.00010462499999999708, 0.00010502800000000007, 0.00010466600000000326, 0.00010452799999999957, 0.00010430599999999846, 0.00010497200000000179, 0.00010488900000000037, 0.00010458400000000131, 0.00010491699999999951, 0.0001043339999999976, 0.00010481900000000252, 0.00010493000000000308, 0.00010462500000000055, 0.00010422200000000104, 0.00010481899999999905, 0.00010416599999999929, 0.00010494399999999918, 0.00010472200000000154, 0.00010512499999999758, 0.00010450000000000043, 0.00010462499999999708, 0.00010420900000000094, 0.00010450000000000043, 0.00010456999999999828, 0.00010454099999999966, 0.00010508299999999887]</msg>
<status status="PASS" starttime="20201117 14:43:15.659" endtime="20201117 14:43:15.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.654" endtime="20201117 14:43:15.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.664" endtime="20201117 14:43:15.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.668" endtime="20201117 14:43:15.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.666" endtime="20201117 14:43:15.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.662" endtime="20201117 14:43:15.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.289" endtime="20201117 14:43:15.689"></status>
</kw>
<msg timestamp="20201117 14:43:15.689" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.697" endtime="20201117 14:43:15.718"></status>
</kw>
<msg timestamp="20201117 14:43:15.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.696" endtime="20201117 14:43:15.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.719" endtime="20201117 14:43:15.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.722" endtime="20201117 14:43:15.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.693" endtime="20201117 14:43:15.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.691" endtime="20201117 14:43:15.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.732" endtime="20201117 14:43:16.018"></status>
</kw>
<msg timestamp="20201117 14:43:16.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:15.731" endtime="20201117 14:43:16.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:16.022" endtime="20201117 14:43:16.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.031" endtime="20201117 14:43:16.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.728" endtime="20201117 14:43:16.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.726" endtime="20201117 14:43:16.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.038" level="INFO">${RESULT} = [{'time': 0.02008075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010472200000000154, 'source_diff': 0.00010472200000000154}, {'time': 0.02018875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.034" endtime="20201117 14:43:16.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:16.039" endtime="20201117 14:43:16.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.056" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.055" endtime="20201117 14:43:16.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.058" level="INFO">VALUE: [0.00010472200000000154, 0.00010433299999999812, 0.00010426399999999975, 0.00010494499999999865, 0.00010488900000000037, 0.00010448600000000086, 0.00010462500000000055, 0.00010444499999999815, 0.00010490200000000047, 0.00010505499999999973, 0.00010498600000000136, 0.00010426399999999975, 0.00010454199999999914, 0.00010417999999999886, 0.0001050140000000005, 0.00010433400000000106, 0.0001043750000000003, 0.00010449999999999696, 0.00010463900000000012, 0.00010433400000000106, 0.0001050559999999992, 0.00010488900000000037, 0.00010512500000000105, 0.00010452799999999957, 0.0001048750000000008, 0.00010438899999999987, 0.0001050140000000005, 0.00010494399999999918, 0.00010438899999999987, 0.00010476400000000025, 0.00010444499999999815, 0.00010470900000000144, 0.0001045689999999988, 0.00010481899999999905, 0.00010490299999999994, 0.00010477799999999982, 0.00010452799999999957, 0.0001050689999999993, 0.00010429200000000236, 0.00010444500000000162, 0.00010472200000000154, 0.00010413899999999962, 0.00010465200000000022, 0.00010505600000000268, 0.00010420800000000147, 0.00010484699999999819, 0.00010422200000000104, 0.00010494399999999918, 0.0001048750000000008, 0.00010444399999999868]</msg>
<status status="PASS" starttime="20201117 14:43:16.057" endtime="20201117 14:43:16.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.052" endtime="20201117 14:43:16.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.062" endtime="20201117 14:43:16.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.066" endtime="20201117 14:43:16.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.064" endtime="20201117 14:43:16.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.060" endtime="20201117 14:43:16.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.690" endtime="20201117 14:43:16.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.287" endtime="20201117 14:43:16.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.286" endtime="20201117 14:43:16.087"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.089" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.098" endtime="20201117 14:43:16.119"></status>
</kw>
<msg timestamp="20201117 14:43:16.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.096" endtime="20201117 14:43:16.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.121" endtime="20201117 14:43:16.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.124" endtime="20201117 14:43:16.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.094" endtime="20201117 14:43:16.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.091" endtime="20201117 14:43:16.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.133" endtime="20201117 14:43:16.420"></status>
</kw>
<msg timestamp="20201117 14:43:16.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.131" endtime="20201117 14:43:16.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.424" endtime="20201117 14:43:16.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.432" endtime="20201117 14:43:16.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.129" endtime="20201117 14:43:16.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.127" endtime="20201117 14:43:16.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.439" level="INFO">${RESULT} = [{'time': 0.022754986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010593000000000061, 'source_diff': 0.00010593000000000061}, {'time': 0.022863, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:16.436" endtime="20201117 14:43:16.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.453" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:16.440" endtime="20201117 14:43:16.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.457" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.456" endtime="20201117 14:43:16.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.460" level="INFO">VALUE: [0.00010593000000000061, 0.00010513900000000062, 0.00010556999999999928, 0.00010612500000000205, 0.0001053889999999974, 0.00010599999999999846, 0.00010513900000000062, 0.0001057629999999983, 0.00010605499999999726, 0.00010561099999999851, 0.00010609699999999944, 0.00010548600000000186, 0.00010583299999999962, 0.00010600000000000193, 0.00010559700000000241, 0.00010544499999999915, 0.00010602800000000107, 0.00010540300000000044, 0.00010591700000000051, 0.00010533299999999912, 0.00010531899999999955, 0.00010531900000000302, 0.00010567999999999689, 0.00010593000000000061, 0.0001060690000000003, 0.00010552700000000109, 0.000105514000000001, 0.00010570899999999897, 0.00010577800000000082, 0.00010606999999999978, 0.0001057079999999995, 0.00010540200000000097, 0.0001052360000000016, 0.00010597199999999932, 0.000105514000000001, 0.00010568000000000036, 0.00010534699999999869, 0.00010529199999999989, 0.00010576400000000125, 0.00010525000000000118, 0.00010575000000000168, 0.00010593100000000008, 0.00010562500000000155, 0.00010588900000000137, 0.00010565200000000122, 0.00010577800000000082, 0.00010552800000000057, 0.00010569399999999993, 0.0001060690000000003, 0.00010561099999999851]</msg>
<status status="PASS" starttime="20201117 14:43:16.458" endtime="20201117 14:43:16.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.454" endtime="20201117 14:43:16.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.464" endtime="20201117 14:43:16.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.467" endtime="20201117 14:43:16.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.466" endtime="20201117 14:43:16.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.462" endtime="20201117 14:43:16.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.090" endtime="20201117 14:43:16.488"></status>
</kw>
<msg timestamp="20201117 14:43:16.488" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.497" endtime="20201117 14:43:16.517"></status>
</kw>
<msg timestamp="20201117 14:43:16.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.495" endtime="20201117 14:43:16.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.519" endtime="20201117 14:43:16.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.521" endtime="20201117 14:43:16.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.493" endtime="20201117 14:43:16.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.490" endtime="20201117 14:43:16.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.532" endtime="20201117 14:43:16.817"></status>
</kw>
<msg timestamp="20201117 14:43:16.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.530" endtime="20201117 14:43:16.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.821" endtime="20201117 14:43:16.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.830" endtime="20201117 14:43:16.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.528" endtime="20201117 14:43:16.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.526" endtime="20201117 14:43:16.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.837" level="INFO">${RESULT} = [{'time': 0.020121028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001052499999999977, 'source_diff': 0.0001052499999999977}, {'time': 0.020229056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.833" endtime="20201117 14:43:16.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.850" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:16.838" endtime="20201117 14:43:16.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.855" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.854" endtime="20201117 14:43:16.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.858" level="INFO">VALUE: [0.0001052499999999977, 0.0001058339999999991, 0.00010591700000000051, 0.00010563799999999818, 0.00010550000000000143, 0.0001052499999999977, 0.00010605500000000073, 0.00010520800000000247, 0.00010513900000000062, 0.0001058889999999979, 0.0001057079999999995, 0.00010606999999999978, 0.0001058339999999991, 0.00010606999999999978, 0.00010531999999999903, 0.00010573599999999864, 0.00010613900000000162, 0.00010525000000000118, 0.00010583299999999962, 0.0001052360000000016, 0.00010601399999999803, 0.00010541700000000001, 0.00010551299999999805, 0.00010523599999999814, 0.00010613900000000162, 0.0001058889999999979, 0.00010563800000000165, 0.00010588799999999843, 0.0001057629999999983, 0.00010613899999999815, 0.00010551399999999753, 0.00010530499999999998, 0.00010533299999999912, 0.00010562500000000155, 0.00010558299999999937, 0.0001056949999999994, 0.00010613900000000162, 0.00010518099999999933, 0.00010520900000000194, 0.00010609699999999944, 0.0001055689999999998, 0.00010576399999999778, 0.00010520800000000247, 0.00010534700000000216, 0.00010545800000000272, 0.00010562499999999808, 0.00010606899999999683, 0.00010569399999999993, 0.00010561100000000198, 0.00010525000000000118]</msg>
<status status="PASS" starttime="20201117 14:43:16.856" endtime="20201117 14:43:16.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.851" endtime="20201117 14:43:16.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.861" endtime="20201117 14:43:16.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.865" endtime="20201117 14:43:16.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.863" endtime="20201117 14:43:16.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.859" endtime="20201117 14:43:16.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.489" endtime="20201117 14:43:16.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.088" endtime="20201117 14:43:16.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.087" endtime="20201117 14:43:16.886"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.889" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.898" endtime="20201117 14:43:16.920"></status>
</kw>
<msg timestamp="20201117 14:43:16.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.897" endtime="20201117 14:43:16.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.922" endtime="20201117 14:43:16.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.924" endtime="20201117 14:43:16.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.894" endtime="20201117 14:43:16.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.891" endtime="20201117 14:43:16.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.934" endtime="20201117 14:43:17.219"></status>
</kw>
<msg timestamp="20201117 14:43:17.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025189833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.932" endtime="20201117 14:43:17.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025189833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.223" endtime="20201117 14:43:17.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.232" endtime="20201117 14:43:17.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.929" endtime="20201117 14:43:17.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.928" endtime="20201117 14:43:17.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.239" level="INFO">${RESULT} = [{'time': 0.025296597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010676400000000225, 'source_diff': 0.00010676400000000225}, {'time': 0.025408597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:17.236" endtime="20201117 14:43:17.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.254" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:17.240" endtime="20201117 14:43:17.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.258" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.257" endtime="20201117 14:43:17.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.261" level="INFO">VALUE: [0.00010676400000000225, 0.0001065690000000008, 0.00010633300000000012, 0.00010698599999999989, 0.0001070560000000012, 0.0001068340000000001, 0.0001065560000000007, 0.0001065279999999981, 0.00010645800000000025, 0.00010693099999999761, 0.00010655499999999776, 0.00010634699999999969, 0.0001063339999999996, 0.00010618000000000086, 0.00010675000000000268, 0.0001065690000000008, 0.00010644399999999721, 0.00010700000000000293, 0.00010613900000000162, 0.00010668099999999736, 0.00010622199999999957, 0.00010643100000000058, 0.00010673699999999911, 0.00010656899999999733, 0.0001067080000000005, 0.0001067080000000005, 0.0001063889999999984, 0.00010625000000000218, 0.0001067080000000005, 0.0001063750000000023, 0.0001063339999999996, 0.0001067499999999992, 0.00010708400000000035, 0.00010634799999999917, 0.00010694500000000065, 0.00010658300000000037, 0.00010677800000000182, 0.00010645800000000025, 0.0001063889999999984, 0.00010663899999999865, 0.00010616700000000076, 0.0001066950000000004, 0.00010658399999999985, 0.00010657000000000028, 0.00010701399999999903, 0.00010682000000000053, 0.00010644500000000015, 0.0001070690000000013, 0.00010666600000000179, 0.00010662499999999908]</msg>
<status status="PASS" starttime="20201117 14:43:17.259" endtime="20201117 14:43:17.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.255" endtime="20201117 14:43:17.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.264" endtime="20201117 14:43:17.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.268" endtime="20201117 14:43:17.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.266" endtime="20201117 14:43:17.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.262" endtime="20201117 14:43:17.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.890" endtime="20201117 14:43:17.288"></status>
</kw>
<msg timestamp="20201117 14:43:17.289" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.297" endtime="20201117 14:43:17.318"></status>
</kw>
<msg timestamp="20201117 14:43:17.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.296" endtime="20201117 14:43:17.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.319" endtime="20201117 14:43:17.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.322" endtime="20201117 14:43:17.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.293" endtime="20201117 14:43:17.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.291" endtime="20201117 14:43:17.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.332" endtime="20201117 14:43:17.617"></status>
</kw>
<msg timestamp="20201117 14:43:17.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.331" endtime="20201117 14:43:17.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.622" endtime="20201117 14:43:17.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.631" endtime="20201117 14:43:17.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.328" endtime="20201117 14:43:17.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.326" endtime="20201117 14:43:17.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.637" level="INFO">${RESULT} = [{'time': 0.020228069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010644400000000068, 'source_diff': 0.00010644400000000068}, {'time': 0.020338069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:17.634" endtime="20201117 14:43:17.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.651" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:17.638" endtime="20201117 14:43:17.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.656" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.655" endtime="20201117 14:43:17.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.658" level="INFO">VALUE: [0.00010644400000000068, 0.00010699999999999946, 0.00010680500000000148, 0.00010622199999999957, 0.00010691700000000151, 0.00010626400000000175, 0.00010690300000000194, 0.00010690299999999847, 0.00010663900000000212, 0.00010708400000000035, 0.00010616700000000076, 0.00010615200000000172, 0.0001070829999999974, 0.00010698599999999989, 0.00010669399999999746, 0.00010683300000000062, 0.00010683300000000062, 0.00010663899999999865, 0.00010701399999999903, 0.00010673699999999911, 0.00010625000000000218, 0.00010708400000000035, 0.00010701399999999903, 0.00010673599999999964, 0.00010619400000000043, 0.00010675000000000268, 0.0001065690000000008, 0.00010698600000000336, 0.00010662500000000255, 0.00010652800000000157, 0.00010649999999999896, 0.00010676399999999878, 0.00010663900000000212, 0.00010644500000000015, 0.0001066950000000004, 0.00010625000000000218, 0.00010676399999999878, 0.00010681900000000105, 0.000106901999999999, 0.00010659699999999994, 0.000106208, 0.00010663899999999865, 0.00010694399999999771, 0.00010630600000000046, 0.0001068889999999989, 0.00010686099999999976, 0.0001063889999999984, 0.00010699999999999946, 0.00010627700000000184, 0.00010683300000000062]</msg>
<status status="PASS" starttime="20201117 14:43:17.657" endtime="20201117 14:43:17.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.652" endtime="20201117 14:43:17.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.662" endtime="20201117 14:43:17.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.665" endtime="20201117 14:43:17.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.664" endtime="20201117 14:43:17.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.660" endtime="20201117 14:43:17.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.289" endtime="20201117 14:43:17.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.887" endtime="20201117 14:43:17.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.887" endtime="20201117 14:43:17.686"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.689" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.697" endtime="20201117 14:43:17.718"></status>
</kw>
<msg timestamp="20201117 14:43:17.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.696" endtime="20201117 14:43:17.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.720" endtime="20201117 14:43:17.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.722" endtime="20201117 14:43:17.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.693" endtime="20201117 14:43:17.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.691" endtime="20201117 14:43:17.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.732" endtime="20201117 14:43:18.019"></status>
</kw>
<msg timestamp="20201117 14:43:18.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022569319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.731" endtime="20201117 14:43:18.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022569319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.023" endtime="20201117 14:43:18.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.031" endtime="20201117 14:43:18.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.728" endtime="20201117 14:43:18.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.726" endtime="20201117 14:43:18.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.038" level="INFO">${RESULT} = [{'time': 0.022676778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010745900000000072, 'source_diff': 0.00010745900000000072}, {'time': 0.022789778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:18.035" endtime="20201117 14:43:18.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:18.039" endtime="20201117 14:43:18.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.056" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.055" endtime="20201117 14:43:18.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.059" level="INFO">VALUE: [0.00010745900000000072, 0.00010807000000000178, 0.00010781999999999806, 0.0001072499999999997, 0.00010741700000000201, 0.00010742999999999864, 0.00010804099999999969, 0.00010743000000000211, 0.00010806899999999883, 0.0001078889999999999, 0.00010751399999999953, 0.00010780499999999901, 0.00010757000000000128, 0.00010744500000000115, 0.00010727800000000232, 0.00010763899999999965, 0.00010727800000000232, 0.00010745800000000125, 0.00010752700000000309, 0.0001072499999999997, 0.00010770900000000097, 0.000107514000000003, 0.0001077500000000002, 0.00010723600000000014, 0.00010777800000000282, 0.00010763900000000312, 0.00010745900000000072, 0.00010741699999999854, 0.00010758400000000085, 0.00010749999999999996, 0.00010812500000000058, 0.00010800000000000046, 0.00010719400000000143, 0.00010809700000000144, 0.00010806899999999883, 0.00010790300000000294, 0.00010777800000000282, 0.00010769499999999793, 0.00010727799999999885, 0.00010732000000000103, 0.000107902, 0.00010812500000000058, 0.00010758300000000137, 0.00010798600000000089, 0.00010751399999999953, 0.00010787500000000033, 0.00010731899999999808, 0.00010747200000000082, 0.00010805599999999874, 0.00010731999999999756]</msg>
<status status="PASS" starttime="20201117 14:43:18.058" endtime="20201117 14:43:18.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.053" endtime="20201117 14:43:18.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.062" endtime="20201117 14:43:18.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.066" endtime="20201117 14:43:18.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.064" endtime="20201117 14:43:18.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.060" endtime="20201117 14:43:18.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.689" endtime="20201117 14:43:18.087"></status>
</kw>
<msg timestamp="20201117 14:43:18.087" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.096" endtime="20201117 14:43:18.117"></status>
</kw>
<msg timestamp="20201117 14:43:18.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.094" endtime="20201117 14:43:18.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.119" endtime="20201117 14:43:18.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.122" endtime="20201117 14:43:18.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.091" endtime="20201117 14:43:18.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.089" endtime="20201117 14:43:18.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.132" endtime="20201117 14:43:18.418"></status>
</kw>
<msg timestamp="20201117 14:43:18.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.130" endtime="20201117 14:43:18.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.422" endtime="20201117 14:43:18.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.430" endtime="20201117 14:43:18.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.128" endtime="20201117 14:43:18.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.126" endtime="20201117 14:43:18.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.437" level="INFO">${RESULT} = [{'time': 0.020205819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010755499999999876, 'source_diff': 0.00010755499999999876}, {'time': 0.020316847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:18.434" endtime="20201117 14:43:18.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:18.438" endtime="20201117 14:43:18.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.456" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.454" endtime="20201117 14:43:18.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.458" level="INFO">VALUE: [0.00010755499999999876, 0.00010795799999999828, 0.00010777799999999935, 0.00010726400000000275, 0.00010749999999999996, 0.0001073889999999994, 0.00010745800000000125, 0.00010777800000000282, 0.0001073889999999994, 0.00010729099999999894, 0.00010794500000000165, 0.00010743100000000158, 0.00010802700000000012, 0.00010741599999999907, 0.00010784699999999772, 0.00010799999999999699, 0.00010779199999999892, 0.00010757000000000128, 0.00010762500000000008, 0.00010801400000000003, 0.00010780599999999849, 0.00010745900000000072, 0.00010723600000000014, 0.00010736100000000026, 0.00010767999999999889, 0.0001072219999999971, 0.0001078889999999999, 0.00010808300000000187, 0.0001075690000000018, 0.000107208000000001, 0.00010790300000000294, 0.0001073889999999994, 0.00010743099999999811, 0.00010797300000000079, 0.00010723600000000014, 0.00010801400000000003, 0.0001080699999999983, 0.00010756899999999833, 0.00010717999999999839, 0.00010761100000000051, 0.00010731900000000155, 0.00010713899999999915, 0.00010776400000000325, 0.00010769499999999793, 0.0001073889999999994, 0.0001078889999999999, 0.00010798600000000089, 0.00010784700000000119, 0.00010794400000000218, 0.00010794399999999871]</msg>
<status status="PASS" starttime="20201117 14:43:18.457" endtime="20201117 14:43:18.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.452" endtime="20201117 14:43:18.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.461" endtime="20201117 14:43:18.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.465" endtime="20201117 14:43:18.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.463" endtime="20201117 14:43:18.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.460" endtime="20201117 14:43:18.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.088" endtime="20201117 14:43:18.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.688" endtime="20201117 14:43:18.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.687" endtime="20201117 14:43:18.486"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.489" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.498" endtime="20201117 14:43:18.520"></status>
</kw>
<msg timestamp="20201117 14:43:18.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.496" endtime="20201117 14:43:18.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.521" endtime="20201117 14:43:18.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.524" endtime="20201117 14:43:18.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.493" endtime="20201117 14:43:18.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.491" endtime="20201117 14:43:18.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.534" endtime="20201117 14:43:18.820"></status>
</kw>
<msg timestamp="20201117 14:43:18.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024191917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.532" endtime="20201117 14:43:18.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024191917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.824" endtime="20201117 14:43:18.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.832" endtime="20201117 14:43:18.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.529" endtime="20201117 14:43:18.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.528" endtime="20201117 14:43:18.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.839" level="INFO">${RESULT} = [{'time': 0.024191917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010897300000000179, 'source_diff': 0.00010897300000000179}, {'time': 0.024304903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:18.836" endtime="20201117 14:43:18.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.854" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:18.840" endtime="20201117 14:43:18.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.859" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.858" endtime="20201117 14:43:18.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.861" level="INFO">VALUE: [0.00010897300000000179, 0.00010876400000000078, 0.00010909699999999897, 0.00010827799999999985, 0.00010862499999999761, 0.00010813800000000068, 0.00010833300000000212, 0.00010850000000000096, 0.00010826400000000028, 0.00010887500000000133, 0.00010834700000000169, 0.00010905599999999974, 0.00010901400000000103, 0.00010875000000000121, 0.00010813900000000015, 0.00010865200000000075, 0.0001087080000000025, 0.00010900000000000146, 0.00010899999999999799, 0.00010898600000000189, 0.0001083890000000004, 0.0001087219999999986, 0.00010899999999999799, 0.00010881999999999906, 0.00010827800000000332, 0.00010868099999999936, 0.00010862499999999761, 0.00010827700000000037, 0.00010849999999999749, 0.00010872200000000207, 0.00010850000000000096, 0.00010911099999999854, 0.00010863900000000065, 0.00010870799999999903, 0.00010881900000000305, 0.00010857000000000228, 0.00010862500000000108, 0.00010863900000000065, 0.0001083479999999977, 0.00010863800000000118, 0.00010883299999999915, 0.00010855599999999924, 0.0001090829999999994, 0.00010893000000000014, 0.00010895800000000275, 0.00010899999999999799, 0.00010863899999999718, 0.00010865300000000022, 0.0001083479999999977, 0.00010838899999999693]</msg>
<status status="PASS" starttime="20201117 14:43:18.860" endtime="20201117 14:43:18.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.855" endtime="20201117 14:43:18.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.865" endtime="20201117 14:43:18.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.868" endtime="20201117 14:43:18.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.867" endtime="20201117 14:43:18.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.863" endtime="20201117 14:43:18.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.489" endtime="20201117 14:43:18.889"></status>
</kw>
<msg timestamp="20201117 14:43:18.890" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.898" endtime="20201117 14:43:18.919"></status>
</kw>
<msg timestamp="20201117 14:43:18.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.897" endtime="20201117 14:43:18.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.921" endtime="20201117 14:43:18.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.924" endtime="20201117 14:43:18.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.894" endtime="20201117 14:43:18.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.892" endtime="20201117 14:43:18.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.935" endtime="20201117 14:43:19.221"></status>
</kw>
<msg timestamp="20201117 14:43:19.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.933" endtime="20201117 14:43:19.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.225" endtime="20201117 14:43:19.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.234" endtime="20201117 14:43:19.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.930" endtime="20201117 14:43:19.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.928" endtime="20201117 14:43:19.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.241" level="INFO">${RESULT} = [{'time': 0.020139056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010844499999999868, 'source_diff': 0.00010844499999999868}, {'time': 0.020251056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.237" endtime="20201117 14:43:19.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.254" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:19.242" endtime="20201117 14:43:19.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.259" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.258" endtime="20201117 14:43:19.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.261" level="INFO">VALUE: [0.00010844499999999868, 0.00010880599999999949, 0.00010819399999999896, 0.00010849999999999749, 0.00010883299999999915, 0.00010836100000000126, 0.00010808300000000187, 0.00010848600000000139, 0.00010818099999999886, 0.00010830500000000298, 0.00010891700000000004, 0.0001085560000000027, 0.00010905599999999974, 0.00010912500000000158, 0.00010823700000000061, 0.00010856899999999933, 0.0001083890000000004, 0.00010883299999999915, 0.00010862500000000108, 0.00010815299999999972, 0.00010830599999999899, 0.00010827799999999985, 0.00010813900000000015, 0.00010819499999999843, 0.00010851399999999706, 0.00010913799999999821, 0.0001088890000000009, 0.00010844399999999921, 0.00010874999999999774, 0.00010883299999999915, 0.00010831900000000255, 0.00010837499999999736, 0.00010845800000000225, 0.00010865300000000022, 0.0001085699999999988, 0.00010880599999999949, 0.00010833399999999813, 0.00010886099999999829, 0.00010837500000000083, 0.0001087630000000013, 0.00010873600000000164, 0.000108208000000002, 0.00010906899999999983, 0.00010899999999999799, 0.00010890300000000047, 0.00010901399999999756, 0.00010819499999999843, 0.00010899999999999799, 0.00010870900000000197, 0.00010837500000000083]</msg>
<status status="PASS" starttime="20201117 14:43:19.260" endtime="20201117 14:43:19.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.255" endtime="20201117 14:43:19.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.269" endtime="20201117 14:43:19.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.273" endtime="20201117 14:43:19.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.271" endtime="20201117 14:43:19.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.267" endtime="20201117 14:43:19.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.890" endtime="20201117 14:43:19.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.487" endtime="20201117 14:43:19.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.486" endtime="20201117 14:43:19.294"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.297" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.305" endtime="20201117 14:43:19.327"></status>
</kw>
<msg timestamp="20201117 14:43:19.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.304" endtime="20201117 14:43:19.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.328" endtime="20201117 14:43:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.331" endtime="20201117 14:43:19.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.301" endtime="20201117 14:43:19.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.299" endtime="20201117 14:43:19.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.340" endtime="20201117 14:43:19.627"></status>
</kw>
<msg timestamp="20201117 14:43:19.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.339" endtime="20201117 14:43:19.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.631" endtime="20201117 14:43:19.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.639" endtime="20201117 14:43:19.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.336" endtime="20201117 14:43:19.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.334" endtime="20201117 14:43:19.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.646" level="INFO">${RESULT} = [{'time': 0.022808347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010945799999999978, 'source_diff': 0.00010945799999999978}, {'time': 0.022922361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.643" endtime="20201117 14:43:19.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:19.647" endtime="20201117 14:43:19.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.665" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.664" endtime="20201117 14:43:19.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.668" level="INFO">VALUE: [0.00010945799999999978, 0.00010931900000000008, 0.000109208000000003, 0.00010919499999999943, 0.00010954200000000067, 0.00011013899999999868, 0.00011005599999999727, 0.0001095699999999998, 0.00010933399999999913, 0.0001097219999999996, 0.00010931900000000008, 0.00010949999999999849, 0.00010962499999999861, 0.00010991699999999757, 0.00010959699999999947, 0.00011005600000000074, 0.00010979200000000092, 0.00010958399999999938, 0.0001100700000000003, 0.00011013899999999868, 0.00011012499999999911, 0.00010924999999999824, 0.00010906899999999983, 0.00010926399999999781, 0.0001095829999999999, 0.00010976399999999831, 0.00011009699999999997, 0.00010990300000000147, 0.00010969499999999993, 0.00010918099999999986, 0.00011001399999999856, 0.00010962500000000208, 0.0001098890000000019, 0.00011004100000000169, 0.00010999999999999899, 0.00010947199999999935, 0.00011001400000000203, 0.00010963900000000165, 0.00011006900000000083, 0.00010969400000000046, 0.00010919499999999943, 0.00010990300000000147, 0.00011008399999999988, 0.00010962499999999861, 0.0001100700000000003, 0.0001092769999999979, 0.00010976400000000178, 0.00010987499999999886, 0.00010980500000000101, 0.00010919399999999996]</msg>
<status status="PASS" starttime="20201117 14:43:19.666" endtime="20201117 14:43:19.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.661" endtime="20201117 14:43:19.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.671" endtime="20201117 14:43:19.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.674" endtime="20201117 14:43:19.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.673" endtime="20201117 14:43:19.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.669" endtime="20201117 14:43:19.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.297" endtime="20201117 14:43:19.695"></status>
</kw>
<msg timestamp="20201117 14:43:19.696" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.704" endtime="20201117 14:43:19.726"></status>
</kw>
<msg timestamp="20201117 14:43:19.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.703" endtime="20201117 14:43:19.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.727" endtime="20201117 14:43:19.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.730" endtime="20201117 14:43:19.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.700" endtime="20201117 14:43:19.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.698" endtime="20201117 14:43:19.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.740" endtime="20201117 14:43:20.026"></status>
</kw>
<msg timestamp="20201117 14:43:20.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.739" endtime="20201117 14:43:20.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.030" endtime="20201117 14:43:20.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.039" endtime="20201117 14:43:20.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.736" endtime="20201117 14:43:20.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.734" endtime="20201117 14:43:20.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.046" level="INFO">${RESULT} = [{'time': 0.020222903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010931999999999956, 'source_diff': 0.00010931999999999956}, {'time': 0.020336875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.042" endtime="20201117 14:43:20.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.059" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:20.047" endtime="20201117 14:43:20.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.064" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.063" endtime="20201117 14:43:20.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.067" level="INFO">VALUE: [0.00010931999999999956, 0.00010919399999999996, 0.00010945899999999925, 0.0001100700000000003, 0.00010944499999999968, 0.00010930599999999999, 0.00011002699999999865, 0.00010918000000000039, 0.00011000000000000246, 0.00010994400000000071, 0.00010956900000000033, 0.00010923599999999867, 0.00010997199999999985, 0.00010948599999999892, 0.00010969499999999993, 0.00010962499999999861, 0.00010931999999999956, 0.00010986200000000224, 0.00010969399999999699, 0.00010968100000000036, 0.00010920799999999953, 0.00010990300000000147, 0.00010976400000000178, 0.00010998599999999942, 0.00010929200000000042, 0.00011005600000000074, 0.00010943100000000011, 0.00010958399999999938, 0.00010958399999999938, 0.00010951400000000153, 0.00010959699999999947, 0.00010923599999999867, 0.00010962499999999861, 0.00010963900000000165, 0.00010951399999999806, 0.00010968100000000036, 0.00010924999999999824, 0.00011006900000000083, 0.0001093890000000014, 0.00010924999999999824, 0.0001094020000000015, 0.00010987499999999886, 0.00011006900000000083, 0.00010973600000000264, 0.00010969400000000046, 0.00011013899999999868, 0.00010937499999999836, 0.00010940300000000097, 0.00010983399999999963, 0.00010951399999999806]</msg>
<status status="PASS" starttime="20201117 14:43:20.066" endtime="20201117 14:43:20.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.061" endtime="20201117 14:43:20.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.070" endtime="20201117 14:43:20.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.074" endtime="20201117 14:43:20.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.072" endtime="20201117 14:43:20.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.068" endtime="20201117 14:43:20.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.696" endtime="20201117 14:43:20.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.295" endtime="20201117 14:43:20.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.295" endtime="20201117 14:43:20.095"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.097" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.106" endtime="20201117 14:43:20.128"></status>
</kw>
<msg timestamp="20201117 14:43:20.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.104" endtime="20201117 14:43:20.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.130" endtime="20201117 14:43:20.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.133" endtime="20201117 14:43:20.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.102" endtime="20201117 14:43:20.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.099" endtime="20201117 14:43:20.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.142" endtime="20201117 14:43:20.429"></status>
</kw>
<msg timestamp="20201117 14:43:20.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023599444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.140" endtime="20201117 14:43:20.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023599444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.433" endtime="20201117 14:43:20.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.441" endtime="20201117 14:43:20.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.138" endtime="20201117 14:43:20.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.136" endtime="20201117 14:43:20.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.449" level="INFO">${RESULT} = [{'time': 0.023599444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011073600000000017, 'source_diff': 0.00011073600000000017}, {'time': 0.023714458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.445" endtime="20201117 14:43:20.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.464" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:20.450" endtime="20201117 14:43:20.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.468" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.467" endtime="20201117 14:43:20.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.471" level="INFO">VALUE: [0.00011073600000000017, 0.00011026400000000228, 0.00011051400000000253, 0.00011082000000000106, 0.00011094399999999824, 0.00011037500000000283, 0.0001110700000000013, 0.00011074999999999974, 0.00011101399999999956, 0.00011109800000000045, 0.00011044399999999774, 0.00011112500000000011, 0.0001105700000000008, 0.00011080499999999854, 0.00011109700000000097, 0.00011049999999999949, 0.00011095800000000128, 0.00011070799999999756, 0.00011052799999999863, 0.00011094500000000118, 0.0001107090000000005, 0.00011081999999999759, 0.00011069500000000093, 0.0001105830000000009, 0.00011063899999999918, 0.00011099999999999999, 0.00011112500000000011, 0.00011054100000000219, 0.00011019500000000043, 0.00011061100000000004, 0.00011019500000000043, 0.00011083399999999716, 0.00011072300000000007, 0.00011112500000000011, 0.00011069500000000093, 0.00011101300000000008, 0.00011093000000000214, 0.00011076399999999931, 0.00011073600000000017, 0.00011098600000000042, 0.00011052799999999863, 0.00011086099999999682, 0.00011018100000000086, 0.00011101399999999956, 0.0001105280000000021, 0.00011086100000000029, 0.00011082000000000106, 0.00011026400000000228, 0.00011070799999999756, 0.00011070799999999756]</msg>
<status status="PASS" starttime="20201117 14:43:20.470" endtime="20201117 14:43:20.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.465" endtime="20201117 14:43:20.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.474" endtime="20201117 14:43:20.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.478" endtime="20201117 14:43:20.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.476" endtime="20201117 14:43:20.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.473" endtime="20201117 14:43:20.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.098" endtime="20201117 14:43:20.498"></status>
</kw>
<msg timestamp="20201117 14:43:20.499" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.507" endtime="20201117 14:43:20.529"></status>
</kw>
<msg timestamp="20201117 14:43:20.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.506" endtime="20201117 14:43:20.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.530" endtime="20201117 14:43:20.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.533" endtime="20201117 14:43:20.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.503" endtime="20201117 14:43:20.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.501" endtime="20201117 14:43:20.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.543" endtime="20201117 14:43:20.830"></status>
</kw>
<msg timestamp="20201117 14:43:20.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.541" endtime="20201117 14:43:20.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.835" endtime="20201117 14:43:20.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.843" endtime="20201117 14:43:20.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.539" endtime="20201117 14:43:20.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.537" endtime="20201117 14:43:20.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.850" level="INFO">${RESULT} = [{'time': 0.020057931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011098699999999989, 'source_diff': 0.00011098699999999989}, {'time': 0.020173875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.847" endtime="20201117 14:43:20.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.864" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:20.851" endtime="20201117 14:43:20.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.868" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.867" endtime="20201117 14:43:20.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.871" level="INFO">VALUE: [0.00011098699999999989, 0.00011020800000000053, 0.00011108399999999741, 0.00011062499999999961, 0.00011044500000000068, 0.00011044500000000068, 0.00011095799999999781, 0.00011034700000000022, 0.00011111100000000054, 0.0001104159999999986, 0.00011055500000000176, 0.00011076399999999931, 0.00011051399999999906, 0.00011029199999999795, 0.00011022299999999957, 0.00011033300000000065, 0.00011023600000000314, 0.00011062499999999961, 0.00011049999999999949, 0.00011058299999999743, 0.0001110969999999975, 0.00011101400000000303, 0.0001110700000000013, 0.00011084700000000072, 0.00011018000000000139, 0.00011076400000000278, 0.00011066699999999832, 0.0001105700000000008, 0.00011022300000000304, 0.00011066700000000179, 0.00011082000000000106, 0.00011026299999999933, 0.000110902999999999, 0.00011073600000000017, 0.00011070800000000103, 0.00011018000000000139, 0.00011020800000000053, 0.00011081899999999811, 0.00011076399999999931, 0.00011016700000000129, 0.00011094500000000118, 0.00011013900000000215, 0.00011088799999999996, 0.00011076299999999983, 0.00011063899999999918, 0.0001105280000000021, 0.00011065299999999875, 0.00011068000000000189, 0.00011016600000000182, 0.00011081999999999759]</msg>
<status status="PASS" starttime="20201117 14:43:20.870" endtime="20201117 14:43:20.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.865" endtime="20201117 14:43:20.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.874" endtime="20201117 14:43:20.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.878" endtime="20201117 14:43:20.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.876" endtime="20201117 14:43:20.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.873" endtime="20201117 14:43:20.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.499" endtime="20201117 14:43:20.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.096" endtime="20201117 14:43:20.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.095" endtime="20201117 14:43:20.899"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.901" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.910" endtime="20201117 14:43:20.931"></status>
</kw>
<msg timestamp="20201117 14:43:20.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.908" endtime="20201117 14:43:20.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.933" endtime="20201117 14:43:20.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.936" endtime="20201117 14:43:20.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.906" endtime="20201117 14:43:20.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.904" endtime="20201117 14:43:20.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.946" endtime="20201117 14:43:21.232"></status>
</kw>
<msg timestamp="20201117 14:43:21.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.944" endtime="20201117 14:43:21.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.237" endtime="20201117 14:43:21.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.245" endtime="20201117 14:43:21.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.941" endtime="20201117 14:43:21.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.939" endtime="20201117 14:43:21.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.252" level="INFO">${RESULT} = [{'time': 0.022789833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011148599999999745, 'source_diff': 0.00011148599999999745}, {'time': 0.022904833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:21.249" endtime="20201117 14:43:21.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.266" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:21.253" endtime="20201117 14:43:21.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.270" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.269" endtime="20201117 14:43:21.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.273" level="INFO">VALUE: [0.00011148599999999745, 0.00011206899999999936, 0.00011170799999999856, 0.00011119399999999849, 0.00011211100000000154, 0.00011137500000000036, 0.00011169500000000193, 0.00011141700000000254, 0.00011205599999999927, 0.00011156999999999834, 0.00011194399999999924, 0.00011175000000000074, 0.00011130499999999904, 0.00011188900000000043, 0.00011158299999999843, 0.00011200000000000099, 0.00011144399999999874, 0.00011175000000000074, 0.00011127800000000285, 0.00011180599999999902, 0.00011212500000000111, 0.00011179099999999997, 0.00011156999999999834, 0.00011134700000000122, 0.00011187500000000086, 0.00011177799999999988, 0.00011126399999999981, 0.00011119399999999849, 0.00011112500000000011, 0.00011183300000000215, 0.00011181999999999859, 0.00011159800000000095, 0.00011177799999999988, 0.00011148600000000092, 0.00011161099999999757, 0.00011134700000000122, 0.00011206899999999936, 0.00011161099999999757, 0.00011115299999999925, 0.00011165299999999975, 0.00011145899999999778, 0.00011165299999999975, 0.00011181999999999859, 0.00011138899999999993, 0.00011176400000000031, 0.00011155600000000224, 0.00011163900000000018, 0.00011176300000000083, 0.00011142999999999917, 0.00011188900000000043]</msg>
<status status="PASS" starttime="20201117 14:43:21.272" endtime="20201117 14:43:21.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.267" endtime="20201117 14:43:21.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.276" endtime="20201117 14:43:21.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.280" endtime="20201117 14:43:21.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.278" endtime="20201117 14:43:21.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.275" endtime="20201117 14:43:21.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.902" endtime="20201117 14:43:21.301"></status>
</kw>
<msg timestamp="20201117 14:43:21.301" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.309" endtime="20201117 14:43:21.330"></status>
</kw>
<msg timestamp="20201117 14:43:21.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.308" endtime="20201117 14:43:21.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.332" endtime="20201117 14:43:21.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.335" endtime="20201117 14:43:21.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.305" endtime="20201117 14:43:21.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.303" endtime="20201117 14:43:21.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.345" endtime="20201117 14:43:21.631"></status>
</kw>
<msg timestamp="20201117 14:43:21.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.344" endtime="20201117 14:43:21.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.635" endtime="20201117 14:43:21.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.643" endtime="20201117 14:43:21.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.341" endtime="20201117 14:43:21.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.339" endtime="20201117 14:43:21.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.650" level="INFO">${RESULT} = [{'time': 0.020077944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011184700000000172, 'source_diff': 0.00011184700000000172}, {'time': 0.020194958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:21.647" endtime="20201117 14:43:21.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.664" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:21.652" endtime="20201117 14:43:21.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.669" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.668" endtime="20201117 14:43:21.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.671" level="INFO">VALUE: [0.00011184700000000172, 0.00011150000000000049, 0.00011169399999999899, 0.00011120800000000153, 0.00011175000000000074, 0.00011118099999999839, 0.00011173600000000117, 0.00011186099999999782, 0.00011159799999999748, 0.00011162500000000061, 0.00011162500000000061, 0.00011143100000000211, 0.00011115199999999978, 0.00011208299999999893, 0.00011126399999999981, 0.00011198599999999795, 0.00011188900000000043, 0.0001120419999999997, 0.00011197199999999838, 0.00011183400000000163, 0.00011112500000000011, 0.00011176400000000031, 0.00011216699999999982, 0.00011133299999999818, 0.00011158299999999843, 0.00011124999999999677, 0.00011145800000000178, 0.00011131999999999809, 0.00011156899999999886, 0.00011124999999999677, 0.0001117090000000015, 0.00011132000000000156, 0.00011194500000000218, 0.00011181899999999911, 0.00011188900000000043, 0.00011165200000000028, 0.00011137500000000036, 0.00011130499999999904, 0.00011177799999999988, 0.00011193099999999914, 0.0001114029999999995, 0.00011137500000000036, 0.0001120419999999997, 0.00011145800000000178, 0.00011176400000000031, 0.00011197300000000132, 0.00011183299999999868, 0.000111596999999998, 0.00011133300000000165, 0.00011209700000000197]</msg>
<status status="PASS" starttime="20201117 14:43:21.670" endtime="20201117 14:43:21.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.665" endtime="20201117 14:43:21.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.675" endtime="20201117 14:43:21.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.678" endtime="20201117 14:43:21.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.677" endtime="20201117 14:43:21.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.673" endtime="20201117 14:43:21.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.301" endtime="20201117 14:43:21.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.900" endtime="20201117 14:43:21.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.899" endtime="20201117 14:43:21.699"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.702" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.711" endtime="20201117 14:43:21.733"></status>
</kw>
<msg timestamp="20201117 14:43:21.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.709" endtime="20201117 14:43:21.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.735" endtime="20201117 14:43:21.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.737" endtime="20201117 14:43:21.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.707" endtime="20201117 14:43:21.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.704" endtime="20201117 14:43:21.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.747" endtime="20201117 14:43:22.034"></status>
</kw>
<msg timestamp="20201117 14:43:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0241005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:21.745" endtime="20201117 14:43:22.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0241005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:22.038" endtime="20201117 14:43:22.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.047" endtime="20201117 14:43:22.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.742" endtime="20201117 14:43:22.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.741" endtime="20201117 14:43:22.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.053" level="INFO">${RESULT} = [{'time': 0.0241005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011305600000000027, 'source_diff': 0.00011305600000000027}, {'time': 0.0242195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:22.050" endtime="20201117 14:43:22.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:22.055" endtime="20201117 14:43:22.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.073" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.072" endtime="20201117 14:43:22.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.075" level="INFO">VALUE: [0.00011305600000000027, 0.00011313900000000168, 0.00011232000000000256, 0.00011247300000000182, 0.00011226400000000081, 0.00011226399999999734, 0.00011302699999999818, 0.00011219500000000243, 0.00011294500000000318, 0.00011295799999999981, 0.00011215300000000025, 0.00011312500000000211, 0.00011276400000000131, 0.00011233299999999918, 0.0001130420000000007, 0.00011300000000000199, 0.00011233399999999866, 0.00011300000000000199, 0.0001130420000000007, 0.00011270800000000303, 0.00011251399999999759, 0.00011244399999999974, 0.00011227800000000038, 0.00011297199999999938, 0.00011252799999999716, 0.00011245800000000278, 0.00011294499999999971, 0.00011243099999999964, 0.00011268099999999989, 0.00011299999999999852, 0.00011251400000000106, 0.00011229199999999995, 0.0001124160000000006, 0.0001130969999999995, 0.00011305499999999732, 0.00011244399999999974, 0.00011213900000000068, 0.00011295799999999981, 0.00011261099999999857, 0.00011291700000000057, 0.00011251399999999759, 0.0001123749999999979, 0.00011315300000000125, 0.00011301400000000156, 0.00011281900000000011, 0.00011312499999999864, 0.0001127220000000026, 0.00011230500000000004, 0.000112903000000001, 0.00011251400000000106]</msg>
<status status="PASS" starttime="20201117 14:43:22.074" endtime="20201117 14:43:22.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.069" endtime="20201117 14:43:22.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.079" endtime="20201117 14:43:22.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.083" endtime="20201117 14:43:22.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.081" endtime="20201117 14:43:22.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.077" endtime="20201117 14:43:22.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.703" endtime="20201117 14:43:22.104"></status>
</kw>
<msg timestamp="20201117 14:43:22.104" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.112" endtime="20201117 14:43:22.133"></status>
</kw>
<msg timestamp="20201117 14:43:22.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.111" endtime="20201117 14:43:22.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.135" endtime="20201117 14:43:22.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.137" endtime="20201117 14:43:22.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.108" endtime="20201117 14:43:22.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.106" endtime="20201117 14:43:22.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.148" endtime="20201117 14:43:22.433"></status>
</kw>
<msg timestamp="20201117 14:43:22.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.146" endtime="20201117 14:43:22.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.438" endtime="20201117 14:43:22.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.446" endtime="20201117 14:43:22.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.144" endtime="20201117 14:43:22.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.142" endtime="20201117 14:43:22.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.453" level="INFO">${RESULT} = [{'time': 0.020205444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011311099999999907, 'source_diff': 0.00011311099999999907}, {'time': 0.020320458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:22.450" endtime="20201117 14:43:22.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:22.454" endtime="20201117 14:43:22.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.471" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.470" endtime="20201117 14:43:22.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.474" level="INFO">VALUE: [0.00011311099999999907, 0.00011281900000000011, 0.00011312499999999864, 0.00011251400000000106, 0.0001130420000000007, 0.00011277800000000088, 0.00011218099999999939, 0.00011300000000000199, 0.00011276400000000131, 0.00011226400000000081, 0.00011297300000000232, 0.00011288900000000143, 0.0001124160000000006, 0.00011293000000000067, 0.0001130420000000007, 0.00011244399999999974, 0.00011248600000000192, 0.00011262500000000161, 0.00011255599999999977, 0.00011269499999999946, 0.00011286099999999882, 0.00011215300000000025, 0.00011258399999999891, 0.00011233400000000213, 0.000112903000000001, 0.00011240199999999756, 0.00011263900000000118, 0.00011276400000000131, 0.00011301400000000156, 0.00011294400000000024, 0.00011255599999999977, 0.00011227800000000038, 0.00011297299999999885, 0.00011251400000000106, 0.00011268099999999989, 0.00011308299999999993, 0.00011256899999999986, 0.0001122359999999982, 0.00011280600000000002, 0.0001125420000000002, 0.00011263900000000118, 0.00011306900000000036, 0.00011299999999999852, 0.00011241700000000007, 0.00011222300000000157, 0.0001130969999999995, 0.00011308399999999941, 0.00011273699999999817, 0.00011262500000000161, 0.00011294400000000024]</msg>
<status status="PASS" starttime="20201117 14:43:22.473" endtime="20201117 14:43:22.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.468" endtime="20201117 14:43:22.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.478" endtime="20201117 14:43:22.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.481" endtime="20201117 14:43:22.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.480" endtime="20201117 14:43:22.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.476" endtime="20201117 14:43:22.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.105" endtime="20201117 14:43:22.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.701" endtime="20201117 14:43:22.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.700" endtime="20201117 14:43:22.502"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.505" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.513" endtime="20201117 14:43:22.535"></status>
</kw>
<msg timestamp="20201117 14:43:22.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.512" endtime="20201117 14:43:22.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.537" endtime="20201117 14:43:22.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.539" endtime="20201117 14:43:22.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.509" endtime="20201117 14:43:22.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.507" endtime="20201117 14:43:22.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.549" endtime="20201117 14:43:22.834"></status>
</kw>
<msg timestamp="20201117 14:43:22.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.547" endtime="20201117 14:43:22.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.838" endtime="20201117 14:43:22.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.847" endtime="20201117 14:43:22.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.544" endtime="20201117 14:43:22.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.543" endtime="20201117 14:43:22.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.854" level="INFO">${RESULT} = [{'time': 0.022836347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011348599999999945, 'source_diff': 0.00011348599999999945}, {'time': 0.022952347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:22.850" endtime="20201117 14:43:22.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:22.855" endtime="20201117 14:43:22.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.872" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.871" endtime="20201117 14:43:22.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.875" level="INFO">VALUE: [0.00011348599999999945, 0.00011338900000000193, 0.00011381899999999764, 0.00011362499999999914, 0.00011415299999999878, 0.000113903000000002, 0.00011382000000000059, 0.00011376399999999884, 0.00011395799999999734, 0.00011394399999999777, 0.00011390199999999906, 0.00011397299999999985, 0.00011383299999999721, 0.00011374999999999927, 0.00011369400000000099, 0.00011382000000000059, 0.00011331900000000061, 0.00011388899999999896, 0.00011344500000000021, 0.00011359799999999948, 0.00011357000000000034, 0.00011349999999999902, 0.00011356900000000086, 0.00011319400000000049, 0.00011395800000000081, 0.00011361099999999957, 0.000113597, 0.00011386099999999982, 0.00011397200000000038, 0.00011352799999999816, 0.00011363900000000218, 0.00011332000000000009, 0.0001135689999999974, 0.00011333300000000018, 0.00011331900000000061, 0.00011362500000000261, 0.00011405600000000127, 0.0001135550000000013, 0.00011333300000000018, 0.00011338899999999846, 0.00011391700000000157, 0.00011399999999999952, 0.00011394400000000124, 0.00011399999999999952, 0.00011369500000000046, 0.00011320800000000006, 0.0001140970000000005, 0.00011406900000000136, 0.00011361099999999957, 0.00011376400000000231]</msg>
<status status="PASS" starttime="20201117 14:43:22.873" endtime="20201117 14:43:22.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.868" endtime="20201117 14:43:22.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.878" endtime="20201117 14:43:22.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.882" endtime="20201117 14:43:22.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.880" endtime="20201117 14:43:22.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.877" endtime="20201117 14:43:22.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.506" endtime="20201117 14:43:22.903"></status>
</kw>
<msg timestamp="20201117 14:43:22.903" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.912" endtime="20201117 14:43:22.933"></status>
</kw>
<msg timestamp="20201117 14:43:22.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.910" endtime="20201117 14:43:22.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.934" endtime="20201117 14:43:22.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.937" endtime="20201117 14:43:22.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.907" endtime="20201117 14:43:22.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.905" endtime="20201117 14:43:22.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.947" endtime="20201117 14:43:23.234"></status>
</kw>
<msg timestamp="20201117 14:43:23.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020166167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.946" endtime="20201117 14:43:23.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020166167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.238" endtime="20201117 14:43:23.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.246" endtime="20201117 14:43:23.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.943" endtime="20201117 14:43:23.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.941" endtime="20201117 14:43:23.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.253" level="INFO">${RESULT} = [{'time': 0.020166167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011409799999999998, 'source_diff': 0.00011409799999999998}, {'time': 0.020285167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:23.250" endtime="20201117 14:43:23.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.267" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:23.254" endtime="20201117 14:43:23.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.272" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.271" endtime="20201117 14:43:23.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.275" level="INFO">VALUE: [0.00011409799999999998, 0.00011407000000000084, 0.00011397200000000038, 0.00011334799999999923, 0.00011343100000000064, 0.00011398599999999995, 0.0001140689999999979, 0.00011327800000000138, 0.00011348599999999945, 0.00011356900000000086, 0.0001132229999999991, 0.00011338900000000193, 0.00011365299999999828, 0.00011394500000000071, 0.00011363900000000218, 0.00011319499999999996, 0.00011361099999999957, 0.0001133749999999989, 0.00011376399999999884, 0.00011369400000000099, 0.00011399999999999952, 0.00011370800000000056, 0.00011347299999999935, 0.00011358399999999991, 0.00011357000000000034, 0.00011362499999999914, 0.00011351400000000206, 0.00011395800000000081, 0.00011320800000000006, 0.00011399999999999952, 0.00011384700000000025, 0.00011413899999999921, 0.00011347199999999988, 0.00011334699999999975, 0.00011332000000000009, 0.00011395900000000028, 0.00011337500000000236, 0.00011380600000000102, 0.00011380600000000102, 0.00011334699999999975, 0.00011347199999999988, 0.00011388900000000243, 0.00011322199999999963, 0.00011348599999999945, 0.00011386099999999982, 0.00011369500000000046, 0.00011413899999999921, 0.00011343100000000064, 0.00011351399999999859, 0.00011319499999999996]</msg>
<status status="PASS" starttime="20201117 14:43:23.273" endtime="20201117 14:43:23.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.268" endtime="20201117 14:43:23.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.278" endtime="20201117 14:43:23.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.281" endtime="20201117 14:43:23.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.280" endtime="20201117 14:43:23.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.276" endtime="20201117 14:43:23.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.904" endtime="20201117 14:43:23.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.504" endtime="20201117 14:43:23.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.503" endtime="20201117 14:43:23.303"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.305" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.314" endtime="20201117 14:43:23.335"></status>
</kw>
<msg timestamp="20201117 14:43:23.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.312" endtime="20201117 14:43:23.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.337" endtime="20201117 14:43:23.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.340" endtime="20201117 14:43:23.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.309" endtime="20201117 14:43:23.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.307" endtime="20201117 14:43:23.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.349" endtime="20201117 14:43:23.635"></status>
</kw>
<msg timestamp="20201117 14:43:23.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023689792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023804736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.347" endtime="20201117 14:43:23.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023689792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023804736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.639" endtime="20201117 14:43:23.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.647" endtime="20201117 14:43:23.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.345" endtime="20201117 14:43:23.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.343" endtime="20201117 14:43:23.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.655" level="INFO">${RESULT} = [{'time': 0.023804736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011494399999999877, 'source_diff': 0.00011494399999999877}, {'time': 0.023924736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:23.651" endtime="20201117 14:43:23.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.670" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:23.656" endtime="20201117 14:43:23.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.674" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.673" endtime="20201117 14:43:23.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.677" level="INFO">VALUE: [0.00011494399999999877, 0.00011411100000000007, 0.00011422199999999716, 0.00011461100000000057, 0.00011424999999999977, 0.00011493099999999867, 0.00011426400000000281, 0.00011483400000000116, 0.00011491599999999963, 0.00011450000000000002, 0.00011481900000000211, 0.00011493000000000267, 0.00011477799999999941, 0.0001148750000000004, 0.00011493099999999867, 0.00011445900000000078, 0.00011413799999999974, 0.00011509699999999803, 0.00011445900000000078, 0.00011451300000000011, 0.00011483299999999821, 0.00011431899999999814, 0.00011456900000000186, 0.00011440299999999903, 0.0001149299999999992, 0.0001147499999999968, 0.00011447200000000088, 0.00011488899999999996, 0.00011432000000000109, 0.00011509699999999803, 0.00011494399999999877, 0.00011483299999999821, 0.00011481999999999812, 0.00011494399999999877, 0.00011417999999999845, 0.00011434700000000075, 0.00011498600000000095, 0.00011418099999999792, 0.00011438899999999946, 0.0001142360000000002, 0.0001151109999999976, 0.00011436100000000032, 0.00011438899999999946, 0.00011431900000000161, 0.00011490299999999953, 0.0001142360000000002, 0.0001150559999999988, 0.00011434700000000075, 0.00011448699999999992, 0.00011476399999999984]</msg>
<status status="PASS" starttime="20201117 14:43:23.675" endtime="20201117 14:43:23.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.671" endtime="20201117 14:43:23.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.680" endtime="20201117 14:43:23.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.684" endtime="20201117 14:43:23.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.682" endtime="20201117 14:43:23.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.678" endtime="20201117 14:43:23.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.306" endtime="20201117 14:43:23.704"></status>
</kw>
<msg timestamp="20201117 14:43:23.705" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.713" endtime="20201117 14:43:23.735"></status>
</kw>
<msg timestamp="20201117 14:43:23.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.712" endtime="20201117 14:43:23.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.736" endtime="20201117 14:43:23.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.739" endtime="20201117 14:43:23.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.709" endtime="20201117 14:43:23.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.707" endtime="20201117 14:43:23.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.749" endtime="20201117 14:43:24.035"></status>
</kw>
<msg timestamp="20201117 14:43:24.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:23.748" endtime="20201117 14:43:24.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:24.040" endtime="20201117 14:43:24.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.049" endtime="20201117 14:43:24.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.745" endtime="20201117 14:43:24.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.743" endtime="20201117 14:43:24.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.056" level="INFO">${RESULT} = [{'time': 0.020366139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011488899999999996, 'source_diff': 0.00011488899999999996}, {'time': 0.020485125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:24.052" endtime="20201117 14:43:24.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.069" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:24.057" endtime="20201117 14:43:24.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.074" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.073" endtime="20201117 14:43:24.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.077" level="INFO">VALUE: [0.00011488899999999996, 0.00011511100000000107, 0.0001146109999999971, 0.00011515299999999978, 0.00011454199999999873, 0.00011501400000000009, 0.00011440199999999956, 0.00011475000000000027, 0.0001146109999999971, 0.00011433299999999771, 0.0001150689999999989, 0.00011495800000000181, 0.00011424999999999977, 0.00011506999999999837, 0.00011465299999999928, 0.00011463899999999971, 0.00011444499999999774, 0.00011430600000000152, 0.00011438899999999946, 0.00011463800000000024, 0.00011430499999999857, 0.00011501400000000009, 0.00011444399999999827, 0.0001149299999999992, 0.00011427699999999943, 0.00011494499999999824, 0.00011434800000000023, 0.00011438899999999946, 0.00011457000000000134, 0.00011481899999999864, 0.0001143749999999999, 0.00011508299999999846, 0.0001145550000000023, 0.00011444399999999827, 0.00011455499999999882, 0.00011495800000000181, 0.00011452799999999916, 0.00011443099999999817, 0.00011465299999999928, 0.00011498600000000095, 0.00011427699999999943, 0.0001143619999999998, 0.00011508299999999846, 0.00011417999999999845, 0.00011413900000000268, 0.00011512500000000064, 0.00011479199999999898, 0.0001150970000000015, 0.00011469500000000146, 0.00011444500000000121]</msg>
<status status="PASS" starttime="20201117 14:43:24.075" endtime="20201117 14:43:24.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.070" endtime="20201117 14:43:24.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.080" endtime="20201117 14:43:24.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.083" endtime="20201117 14:43:24.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.082" endtime="20201117 14:43:24.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.078" endtime="20201117 14:43:24.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.705" endtime="20201117 14:43:24.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.304" endtime="20201117 14:43:24.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.303" endtime="20201117 14:43:24.105"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.107" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.116" endtime="20201117 14:43:24.138"></status>
</kw>
<msg timestamp="20201117 14:43:24.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.114" endtime="20201117 14:43:24.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.139" endtime="20201117 14:43:24.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.142" endtime="20201117 14:43:24.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.111" endtime="20201117 14:43:24.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.109" endtime="20201117 14:43:24.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.152" endtime="20201117 14:43:24.438"></status>
</kw>
<msg timestamp="20201117 14:43:24.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.150" endtime="20201117 14:43:24.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.442" endtime="20201117 14:43:24.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.451" endtime="20201117 14:43:24.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.148" endtime="20201117 14:43:24.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.145" endtime="20201117 14:43:24.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.458" level="INFO">${RESULT} = [{'time': 0.022804639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011547200000000188, 'source_diff': 0.00011547200000000188}, {'time': 0.022923653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:24.454" endtime="20201117 14:43:24.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:24.459" endtime="20201117 14:43:24.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.476" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.475" endtime="20201117 14:43:24.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.478" level="INFO">VALUE: [0.00011547200000000188, 0.00011562499999999767, 0.00011558400000000191, 0.00011612500000000164, 0.00011550000000000102, 0.00011581899999999964, 0.00011538900000000046, 0.00011533300000000218, 0.00011612500000000164, 0.00011548600000000145, 0.00011551400000000059, 0.00011531999999999862, 0.00011569500000000246, 0.00011576400000000084, 0.00011536100000000132, 0.00011588799999999802, 0.00011572199999999866, 0.00011538900000000046, 0.0001159300000000002, 0.0001154299999999997, 0.00011588900000000096, 0.00011551400000000059, 0.00011513900000000021, 0.00011570799999999909, 0.00011601400000000109, 0.00011549999999999755, 0.00011588900000000096, 0.00011613800000000174, 0.00011559800000000148, 0.00011511100000000107, 0.00011558299999999896, 0.00011576400000000084, 0.00011594399999999977, 0.00011595900000000228, 0.00011577800000000041, 0.00011558399999999844, 0.0001154169999999996, 0.00011540200000000056, 0.00011548700000000092, 0.00011540199999999709, 0.00011563899999999724, 0.00011577800000000041, 0.0001153750000000009, 0.00011562500000000114, 0.00011595799999999934, 0.00011526400000000034, 0.00011538900000000046, 0.00011533400000000166, 0.00011526400000000034, 0.00011517999999999945]</msg>
<status status="PASS" starttime="20201117 14:43:24.477" endtime="20201117 14:43:24.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.472" endtime="20201117 14:43:24.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.482" endtime="20201117 14:43:24.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.485" endtime="20201117 14:43:24.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.484" endtime="20201117 14:43:24.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.480" endtime="20201117 14:43:24.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.108" endtime="20201117 14:43:24.506"></status>
</kw>
<msg timestamp="20201117 14:43:24.506" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.515" endtime="20201117 14:43:24.537"></status>
</kw>
<msg timestamp="20201117 14:43:24.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.513" endtime="20201117 14:43:24.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.538" endtime="20201117 14:43:24.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.546" endtime="20201117 14:43:24.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.511" endtime="20201117 14:43:24.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.508" endtime="20201117 14:43:24.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.557" endtime="20201117 14:43:24.843"></status>
</kw>
<msg timestamp="20201117 14:43:24.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.555" endtime="20201117 14:43:24.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.847" endtime="20201117 14:43:24.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.856" endtime="20201117 14:43:24.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.553" endtime="20201117 14:43:24.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.551" endtime="20201117 14:43:24.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.863" level="INFO">${RESULT} = [{'time': 0.020167542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001157230000000016, 'source_diff': 0.0001157230000000016}, {'time': 0.020288542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:24.859" endtime="20201117 14:43:24.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.876" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:24.864" endtime="20201117 14:43:24.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.881" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.879" endtime="20201117 14:43:24.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.883" level="INFO">VALUE: [0.0001157230000000016, 0.00011562500000000114, 0.00011519399999999902, 0.00011580500000000007, 0.00011570799999999909, 0.00011526400000000034, 0.00011600000000000152, 0.00011601400000000109, 0.00011600000000000152, 0.00011558299999999896, 0.00011612500000000164, 0.00011598599999999848, 0.00011601399999999762, 0.00011581899999999964, 0.00011602800000000066, 0.00011576400000000084, 0.00011547200000000188, 0.00011580599999999955, 0.00011601400000000109, 0.00011555499999999982, 0.00011562500000000114, 0.0001160689999999999, 0.00011548600000000145, 0.00011545800000000231, 0.00011551399999999712, 0.00011552800000000016, 0.00011580599999999955, 0.0001160559999999998, 0.00011569499999999899, 0.00011576400000000084, 0.00011533299999999871, 0.00011531999999999862, 0.00011579199999999998, 0.00011567999999999995, 0.00011597200000000238, 0.00011516699999999935, 0.00011600000000000152, 0.00011526400000000034, 0.00011525000000000077, 0.00011570799999999909, 0.00011559799999999801, 0.00011575000000000127, 0.00011608299999999946, 0.00011538799999999752, 0.00011530499999999957, 0.00011599999999999805, 0.00011569399999999952, 0.00011544399999999927, 0.00011613900000000121, 0.00011613900000000121]</msg>
<status status="PASS" starttime="20201117 14:43:24.882" endtime="20201117 14:43:24.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.877" endtime="20201117 14:43:24.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.886" endtime="20201117 14:43:24.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.890" endtime="20201117 14:43:24.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.888" endtime="20201117 14:43:24.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.885" endtime="20201117 14:43:24.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.507" endtime="20201117 14:43:24.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.106" endtime="20201117 14:43:24.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.105" endtime="20201117 14:43:24.911"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.914" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.923" endtime="20201117 14:43:24.943"></status>
</kw>
<msg timestamp="20201117 14:43:24.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.921" endtime="20201117 14:43:24.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.945" endtime="20201117 14:43:24.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.948" endtime="20201117 14:43:24.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.918" endtime="20201117 14:43:24.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.916" endtime="20201117 14:43:24.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.957" endtime="20201117 14:43:25.243"></status>
</kw>
<msg timestamp="20201117 14:43:25.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.955" endtime="20201117 14:43:25.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024319708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.248" endtime="20201117 14:43:25.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.256" endtime="20201117 14:43:25.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.953" endtime="20201117 14:43:25.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.951" endtime="20201117 14:43:25.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.263" level="INFO">${RESULT} = [{'time': 0.024319708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011630500000000057, 'source_diff': 0.00011630500000000057}, {'time': 0.024439694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:25.259" endtime="20201117 14:43:25.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.278" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:25.264" endtime="20201117 14:43:25.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.282" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.281" endtime="20201117 14:43:25.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.285" level="INFO">VALUE: [0.00011630500000000057, 0.00011694400000000077, 0.00011708300000000046, 0.00011681900000000064, 0.00011649999999999855, 0.00011633300000000318, 0.00011658299999999996, 0.00011677800000000141, 0.00011629200000000048, 0.00011688900000000196, 0.00011683300000000021, 0.00011693100000000067, 0.00011643100000000017, 0.0001163750000000019, 0.00011670800000000009, 0.00011666599999999791, 0.00011670800000000009, 0.00011683300000000021, 0.00011644400000000027, 0.00011638900000000146, 0.00011695899999999981, 0.00011638900000000146, 0.0001164170000000006, 0.00011645799999999984, 0.00011715299999999831, 0.00011712499999999917, 0.00011695800000000034, 0.00011683299999999675, 0.0001162499999999983, 0.00011622199999999916, 0.00011712500000000264, 0.00011683300000000021, 0.00011708399999999994, 0.00011650000000000202, 0.00011699999999999905, 0.00011627700000000143, 0.00011672199999999966, 0.00011631900000000014, 0.00011680500000000107, 0.00011615300000000078, 0.00011644499999999974, 0.00011648599999999898, 0.00011613900000000121, 0.0001162499999999983, 0.00011676400000000184, 0.00011631999999999962, 0.00011694400000000077, 0.00011620799999999959, 0.00011701400000000209, 0.0001163750000000019]</msg>
<status status="PASS" starttime="20201117 14:43:25.283" endtime="20201117 14:43:25.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.279" endtime="20201117 14:43:25.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.288" endtime="20201117 14:43:25.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.292" endtime="20201117 14:43:25.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.290" endtime="20201117 14:43:25.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.286" endtime="20201117 14:43:25.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.914" endtime="20201117 14:43:25.313"></status>
</kw>
<msg timestamp="20201117 14:43:25.313" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.322" endtime="20201117 14:43:25.343"></status>
</kw>
<msg timestamp="20201117 14:43:25.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.320" endtime="20201117 14:43:25.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.344" endtime="20201117 14:43:25.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.347" endtime="20201117 14:43:25.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.317" endtime="20201117 14:43:25.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.315" endtime="20201117 14:43:25.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.357" endtime="20201117 14:43:25.643"></status>
</kw>
<msg timestamp="20201117 14:43:25.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.356" endtime="20201117 14:43:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.647" endtime="20201117 14:43:25.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.656" endtime="20201117 14:43:25.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.353" endtime="20201117 14:43:25.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.351" endtime="20201117 14:43:25.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.663" level="INFO">${RESULT} = [{'time': 0.020387792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011662499999999867, 'source_diff': 0.00011662499999999867}, {'time': 0.020508806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:25.659" endtime="20201117 14:43:25.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.676" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:25.664" endtime="20201117 14:43:25.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.681" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.680" endtime="20201117 14:43:25.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.684" level="INFO">VALUE: [0.00011662499999999867, 0.0001163620000000018, 0.00011670800000000009, 0.00011663900000000171, 0.00011654099999999779, 0.00011702800000000166, 0.00011642999999999723, 0.00011619400000000002, 0.00011699999999999905, 0.000116388999999998, 0.00011620899999999906, 0.00011682000000000012, 0.00011645899999999931, 0.00011697199999999991, 0.00011622199999999916, 0.00011668000000000095, 0.00011647199999999941, 0.0001168889999999985, 0.00011699999999999905, 0.00011683399999999969, 0.00011680599999999708, 0.00011702799999999819, 0.00011673599999999923, 0.00011613900000000121, 0.00011694400000000077, 0.00011663799999999877, 0.00011630600000000005, 0.00011627800000000091, 0.00011662500000000214, 0.00011615300000000078, 0.00011683399999999969, 0.0001167499999999988, 0.0001170690000000009, 0.00011634699999999928, 0.00011682000000000012, 0.0001170690000000009, 0.00011667999999999748, 0.00011647200000000288, 0.00011647199999999941, 0.00011691599999999816, 0.00011690299999999806, 0.00011663899999999824, 0.00011663899999999824, 0.00011694500000000024, 0.00011701399999999862, 0.00011649999999999855, 0.00011693100000000067, 0.0001165690000000004, 0.00011654200000000073, 0.00011673599999999923]</msg>
<status status="PASS" starttime="20201117 14:43:25.682" endtime="20201117 14:43:25.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.677" endtime="20201117 14:43:25.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.687" endtime="20201117 14:43:25.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.691" endtime="20201117 14:43:25.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.689" endtime="20201117 14:43:25.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.686" endtime="20201117 14:43:25.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.314" endtime="20201117 14:43:25.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.912" endtime="20201117 14:43:25.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.912" endtime="20201117 14:43:25.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.719" endtime="20201117 14:43:25.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.721" endtime="20201117 14:43:25.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.720" endtime="20201117 14:43:25.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.718" endtime="20201117 14:43:25.742"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:42:05.642" endtime="20201117 14:43:25.743" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:44.025" endtime="20201117 14:43:25.749"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:40:42.135" endtime="20201117 14:43:25.767"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
